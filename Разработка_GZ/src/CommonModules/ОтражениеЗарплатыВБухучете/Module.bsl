////////////////////////////////////////////////////////////////////////////////
// Отражение зарплаты в регламентированном учете.
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Функция возвращает процент деятельности ЕНВД зарегистрированный в подсистеме ЗарплатаКадры.
// 
// Параметры:
//  Организация	 - Тип СправочникСсылка.Организации
//  ПериодРегистрации	   - Тип Дата, первое число месяца, месяц по которому надо получить процент ЕНВД.
//
// Возвращаемое значение:
//  Число от 0 до 100, или Неопределено, если в Организации применяется ЕНВД, но процент на месяц еще не задан.
//
Функция ПроцентЕНВД(Организация, ПериодРегистрации) Экспорт  
	
	Если Не ПлательщикЕНВД(Организация, ПериодРегистрации) Тогда
		// В указанном месяце организация не является плательщиком ЕНВД
		// процент принимаем равным нулю.
		Возврат 0;
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПроцентЕНВД.Процент
		|ИЗ
		|	РегистрСведений.ПроцентЕНВДДляУчетаЗатратНаЗарплату КАК ПроцентЕНВД
		|ГДЕ
		|	ПроцентЕНВД.Месяц = &ПериодРегистрации
		|	И ПроцентЕНВД.Организация = &Организация";
		
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			Возврат Выборка.Процент;
			
		Иначе
			// На текущий месяц процент ЕНВД еще не зарегистрирован
			// получим процент ЕНВД по данным бухгалтерского учета и зарегистрируем его
			// функция может вернуть значение Неопределенно, если не удалось вычислить процент.
 
			ПроцентЕНВД = ОтражениеЗарплатыВБухучетеПереопределяемый.ПроцентЕНВД(Организация, ПериодРегистрации);
			Если ПроцентЕНВД <> Неопределено Тогда
				УстановитьПривилегированныйРежим(Истина);
				ЗарегистрироватьПроцентЕНВД(Организация, ПериодРегистрации, ПроцентЕНВД);
				УстановитьПривилегированныйРежим(Ложь);
			КонецЕсли;
			
			Возврат ПроцентЕНВД;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

// Функция возвращает настройку учетной политики, является ли организация в указанном месяце плательщиком ЕНВД.
//
// Параметры:
//  Организация	 - Тип СправочникСсылка.Организации
//  Период	   	 - Тип Дата, месяц по которому надо получить применение ЕНВД в организации.
//
// Возвращаемое значение:
//  Булево
//
Функция ПлательщикЕНВД(Организация, Период) Экспорт

	Если НачалоМесяца(Период) >= ЗарплатаКадры.ДатаОтменыЕНВД() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаСреза", НачалоМесяца(Период));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.ПлательщикЕНВД
	|ИЗ
	|	РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(&ДатаСреза, Организация = &Организация) КАК УчетнаяПолитикаОрганизацийСрезПоследних";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.ПлательщикЕНВД;

КонецФункции

// Функция возвращает настройку отражения в бухучете из РС ОтражениеВРегламентированномУчетеНастройкиОрганизаций.
//
// Возвращаемое значение:
//	Структура
// 	* ФормироватьПроводкиВКонцеПериода - тип Булево, Истина, если хотя бы в одной организации проводки формируются в
//	                                     конце месяца.
//   * ФормироватьПроводкиВКонцеПериодаПоОрганизациям - соответствие, ключ - Организация, значение - значение настройки
//                                                     ФормироватьПроводкиВКонцеПериода.
//
Функция ОтражениеВРегламентированномУчетеНастройкиОрганизаций() Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	НастройкиОтраженияВБухучете = Новый Структура;
	НастройкиОтраженияВБухучете.Вставить("ФормироватьПроводкиВКонцеПериода", Ложь);
	НастройкиОтраженияВБухучете.Вставить("ФормироватьПроводкиВКонцеПериодаПоОрганизациям", Новый Соответствие);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация,
	|	ЕСТЬNULL(ОтражениеВУчете.ФормироватьПроводкиВКонцеПериода, ЛОЖЬ) КАК ФормироватьПроводкиВКонцеПериода
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтражениеВРегламентированномУчетеНастройкиОрганизаций КАК ОтражениеВУчете
	|		ПО Организации.Ссылка = ОтражениеВУчете.Организация";
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат НастройкиОтраженияВБухучете;
	КонецЕсли;
	
	ФормироватьПроводкиВКонцеПериода = Результат.Выгрузить().ВыгрузитьКолонку("ФормироватьПроводкиВКонцеПериода").Найти(Истина) <> Неопределено;
	НастройкиОтраженияВБухучете.ФормироватьПроводкиВКонцеПериода = ФормироватьПроводкиВКонцеПериода;
	
	ФормироватьПроводкиВКонцеПериодаПоОрганизациям = Новый Соответствие;
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ФормироватьПроводкиВКонцеПериодаПоОрганизациям.Вставить(Выборка.Организация, Выборка.ФормироватьПроводкиВКонцеПериода);
	КонецЦикла;
	
	НастройкиОтраженияВБухучете.ФормироватьПроводкиВКонцеПериодаПоОрганизациям = ФормироватьПроводкиВКонцеПериодаПоОрганизациям;
	
	Возврат НастройкиОтраженияВБухучете;

КонецФункции

// Возвращает структуру с параметрами для расчета оценочных обязательств по отпускам.
//
// Параметры:
//  Организация - организация
//  ПериодРегистрации - Тип Дата, дата на которую получаем данные.
//	Сотрудники - Тип Массив, необязательный.
//				Если параметр не передан, данные будут получены по всем сотрудникам организации.
//
// Возвращаемое значение: Структура, описание см ОтражениеЗарплатыВБухучете.ОписаниеПараметровДляРасчетаОценочныхОбязательствОтпусков.
//
Функция ПараметрыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации, Сотрудники = Неопределено) Экспорт

	ПараметрыДляРасчета = ОписаниеПараметровДляРасчетаОценочныхОбязательствОтпусков();
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОценочныеОбязательстваЗарплатаКадры") Тогда
		
		МодульРезервОтпусков = ОбщегоНазначения.ОбщийМодуль("РезервОтпусков");
		НастройкиРезервовОтпусков = МодульРезервОтпусков.НастройкиРезервовОтпусков(Организация, ПериодРегистрации);
		Если НастройкиРезервовОтпусков.ФормироватьРезервОтпусковБУ Тогда
			ЗаполнитьПараметрыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации, ПараметрыДляРасчета, Сотрудники);
		КонецЕсли;
		
	КонецЕсли;

	Возврат ПараметрыДляРасчета;
	
КонецФункции 

// Возвращает таблицу с фондом оплаты труда по организациям.
//
// Параметры:
//  Организации - массив организаций, головная организация и ее филиалы.
//  ПериодРегистрации - Тип Дата, дата на которую получаем данные.
//
// Возвращаемое значение: Таблица значений
//		* Организация
//		* ФондОплатыТруда - сумма начислений, входящих в расчет отпуска.
//
Функция ФондОплатыТрудаПоОрганизациямДляРасчетаОценочныхОбязательствОтпусков(Организации, ПериодРегистрации) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ОтражениеЗарплатыВБухучетеВнутренний.СоздатьВТНачисленияБазаОтпуска(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.УстановитьПараметр("Организации", Организации);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодРегистрации));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачисленияПоСотрудникам.Организация КАК Организация,
	|	СУММА(НачисленияПоСотрудникам.Сумма) КАК ФондОплатыТруда,
	|	0 КАК СтраховыеВзносы
	|ИЗ
	|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНачисленияБазаОтпуска КАК НачисленияБазаОтпуска
	|		ПО НачисленияПоСотрудникам.НачислениеУдержание = НачисленияБазаОтпуска.Ссылка
	|ГДЕ
	|	НачисленияПоСотрудникам.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НачисленияПоСотрудникам.Организация В(&Организации)
	|
	|СГРУППИРОВАТЬ ПО
	|	НачисленияПоСотрудникам.Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтраховыеВзносыПоФизическимЛицам.Организация,
	|	0,
	|	СУММА(СтраховыеВзносыПоФизическимЛицам.ПФРДоПредельнойВеличины + СтраховыеВзносыПоФизическимЛицам.ПФРСПревышения + СтраховыеВзносыПоФизическимЛицам.ПФРПоСуммарномуТарифу + СтраховыеВзносыПоФизическимЛицам.ФСС + СтраховыеВзносыПоФизическимЛицам.ФССНесчастныеСлучаи + СтраховыеВзносыПоФизическимЛицам.ФФОМС + СтраховыеВзносыПоФизическимЛицам.ПФРНаДоплатуЛетчикам + СтраховыеВзносыПоФизическимЛицам.ПФРНаДоплатуШахтерам + СтраховыеВзносыПоФизическимЛицам.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах + СтраховыеВзносыПоФизическимЛицам.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах + СтраховыеВзносыПоФизическимЛицам.ПФРСтраховая + СтраховыеВзносыПоФизическимЛицам.ПФРНакопительная + СтраховыеВзносыПоФизическимЛицам.ТФОМС + СтраховыеВзносыПоФизическимЛицам.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки + СтраховыеВзносыПоФизическимЛицам.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка + СтраховыеВзносыПоФизическимЛицам.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки + СтраховыеВзносыПоФизическимЛицам.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка)
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыПоФизическимЛицам КАК СтраховыеВзносыПоФизическимЛицам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНачисленияБазаОтпуска КАК НачисленияБазаОтпуска
	|		ПО СтраховыеВзносыПоФизическимЛицам.Начисление = НачисленияБазаОтпуска.Ссылка
	|ГДЕ
	|	СтраховыеВзносыПоФизическимЛицам.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СтраховыеВзносыПоФизическимЛицам.Организация В(&Организации)
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносыПоФизическимЛицам.Организация";
	
	Результат = Запрос.Выполнить();
	
	ФондОплатыТруда = Новый ТаблицаЗначений;
	ФондОплатыТруда.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ФондОплатыТруда.Колонки.Добавить("ФондОплатыТруда", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ФондОплатыТруда.Колонки.Добавить("СтраховыеВзносы", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ФондОплатыТруда.Добавить(), Выборка);
	КонецЦикла;
	
	Возврат ФондОплатыТруда;

КонецФункции

// Рассчитывает эффективную ставку страховых взносов по сотрудникам.
//
// Параметры:
//  	Организация - Тип СправочникСсылка.Организации, организация для которой получаем данные
//  	ПериодРегистрации - Тип Дата, дата на которую получаем данные.
//		Сотрудники - массив сотрудников, по которым надо получить ставки, необязательный.
//
//	Возвращаемое значение:
//			Структура со свойствами
//				* СтавкиВзносовФСС_НС - таблица значений с колонками: Сотрудник, Ставка 
//				* СтавкиСтраховыхВзносов - таблица значений с колонками: Сотрудник, Ставка.
//
Функция ПараметрыДляИнвентаризацииОценочныхОбязательствОтпусков(Организация, ПериодРегистрации, Сотрудники = Неопределено) Экспорт

	ОписаниеЧисло = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 4));
	
	СтавкиВзносовФСС_НС = Новый ТаблицаЗначений;
	СтавкиВзносовФСС_НС.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	СтавкиВзносовФСС_НС.Колонки.Добавить("Ставка",    ОписаниеЧисло);
	
	СтавкиСтраховыхВзносов = Новый ТаблицаЗначений;
	СтавкиСтраховыхВзносов.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	СтавкиСтраховыхВзносов.Колонки.Добавить("Ставка",    ОписаниеЧисло);
	
	ПараметрыДляРасчета = Новый Структура;
	ПараметрыДляРасчета.Вставить("СтавкиВзносовФСС_НС", СтавкиВзносовФСС_НС);
	ПараметрыДляРасчета.Вставить("СтавкиСтраховыхВзносов", СтавкиСтраховыхВзносов);
	
	Если Сотрудники = Неопределено Тогда
		ПараметрыПолучения = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
		ПараметрыПолучения.Организация      = Организация;
		ПараметрыПолучения.НачалоПериода    = НачалоМесяца(ПериодРегистрации);
		ПараметрыПолучения.ОкончаниеПериода = КонецМесяца(ПериодРегистрации);
		ТаблицаСотрудников = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыПолучения);
		Сотрудники = ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник");
	КонецЕсли;
	
	Если Сотрудники.Количество() = 0 Тогда
		Возврат ПараметрыДляРасчета;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадры.ГоловнаяОрганизация(Организация));
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сотрудники.Ссылка КАК Сотрудник,
	|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТСотрудникиДляЗаполнения
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.Ссылка В(&Сотрудники)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	|	&ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|ПОМЕСТИТЬ ВТФизЛицаОрганизаций
	|ИЗ
	|	ВТСотрудникиДляЗаполнения КАК Сотрудники";
	Запрос.Выполнить();
	
	// поля временной таблицы: ФизическоеЛицо, СтавкаФСС_НС, СтавкаСтраховыхВзносов
	УчетСтраховыхВзносов.СоздатьВТЭффективныеСтавкиВзносовДляОценочныхОбязательств(Запрос.МенеджерВременныхТаблиц, Организация, ПериодРегистрации);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СотрудникиДляЗаполнения.Сотрудник КАК Сотрудник,
	|	ЕСТЬNULL(СтавкиВзносов.СтавкаФСС_НС, 0) КАК СтавкаФСС_НС,
	|	ЕСТЬNULL(СтавкиВзносов.СтавкаСтраховыхВзносов, 0) КАК СтавкаСтраховыхВзносов
	|ИЗ
	|	ВТСотрудникиДляЗаполнения КАК СотрудникиДляЗаполнения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЭффективныеСтавкиВзносовДляОценочныхОбязательств КАК СтавкиВзносов
	|		ПО СотрудникиДляЗаполнения.ФизическоеЛицо = СтавкиВзносов.ФизическоеЛицо";
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ПараметрыДляРасчета.СтавкиВзносовФСС_НС.Добавить();
		НоваяСтрока.Сотрудник = Выборка.Сотрудник;
		НоваяСтрока.Ставка = Выборка.СтавкаФСС_НС;
		НоваяСтрока = ПараметрыДляРасчета.СтавкиСтраховыхВзносов.Добавить();
		НоваяСтрока.Сотрудник = Выборка.Сотрудник;
		НоваяСтрока.Ставка = Выборка.СтавкаСтраховыхВзносов;
	КонецЦикла;
	
	Возврат ПараметрыДляРасчета;

КонецФункции

// Формирует данные для отражения в бухучете результатов расчета зарплаты.
//
// Параметры:
//  	Организация 		- Тип СправочникСсылка.Организации, организация для которой получаем данные
//  	ПериодРегистрации 	- Тип Дата, дата соответствует месяцу, за которые получаются данные.
//
//	Возвращаемое значение:
//			Структура - см. НоваяСтруктураДанныеДляОтраженияЗарплатыВБухучете() 
//				* НачисленнаяЗарплатаИВзносы - ТаблицаЗначений - см. НоваяТаблицаБухучетНачисленнаяЗарплатаИВзносы()
//					* ФизическоеЛицо
//					* Сотрудник
//					* Подразделение
//					* ПодразделениеУчетаЗатрат
//					* ДатаНачала
//					* ВидОперации
//					* Начисление
//					* СпособОтраженияЗарплатыВБухучете
//					* СтатьяФинансирования
//					* СтатьяРасходов
//					* ОблагаетсяЕНВД
//					* ВидНачисленияОплатыТрудаДляНУ
//					* ПериодПринятияРасходов
//					* Сумма
//					* Колонки взносов, состав определяется в УчетСтраховыхВзносов.ОтражаемыеВУчетеВзносы(Истина)
//				* НачисленныйНДФЛ - ТаблицаЗначений - см. НоваяТаблицаБухучетНачисленныйНДФЛ()
//					* ФизическоеЛицо
//					* Сотрудник
//					* ВидОперации
//					* СтатьяФинансирования
//					* СтатьяРасходов
//					* КодПоОКАТО
//					* КодПоОКТМО
//					* КПП
//					* КодНалоговогоОргана
//					* РегистрацияВНалоговомОргане
//					* Сумма
//				* УдержаннаяЗарплата - ТаблицаЗначений - см. НоваяТаблицаБухучетУдержаннаяЗарплата()
//					* ФизическоеЛицо
//					* Сотрудник
//					* Подразделение
//					* ПодразделениеУчетаЗатрат
//					* ДатаНачала
//					* ВидОперации
//					* СтатьяФинансирования
//					* СтатьяРасходов
//					* Контрагент
//					* Сумма
//					* ЯвляетсяОснованиемОформленияКассовогоЧека
//					* ОписаниеУдержанияДляЧека
//
Функция ДанныеДляОтраженияЗарплатыВБухучете(Организация, ПериодРегистрации) Экспорт

	Возврат ОтражениеЗарплатыВБухучетеВнутренний.ДанныеДляОтраженияЗарплатыВБухучете(Организация, ПериодРегистрации);
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииСписковСОграничениемДоступа(Списки) Экспорт
	
	Списки.Вставить(Метаданные.РегистрыСведений.БухучетЗарплатыОрганизаций, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ОтражениеВРегламентированномУчетеНастройкиОрганизаций, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ПроцентЕНВДДляУчетаЗатратНаЗарплату, Истина);
	
КонецПроцедуры

#КонецОбласти

Процедура СформироватьДвиженияПоДокументу(Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляПроведения, СтрокаСписокТаблиц) Экспорт

	ОтражениеЗарплатыВБухучетеВнутренний.СформироватьДвиженияПоДокументу(Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляПроведения, СтрокаСписокТаблиц)	

КонецПроцедуры

// Процедура регистрирует процент ЕНВД в регистре сведений ПроцентЕНВДДляУчетаЗатратНаЗарплату.
//
// Параметры:
//  Организация	 - Тип СправочникСсылка.Организации
//  Месяц	     - Тип Дата, месяц, на который регистрируется процент ЕНВД.
//  ПроцентЕНВД  - Тип Число, или Неопределено
//		если ПроцентЕНВД = Неопределено, необходимо удалить регистрацию процента на указанный месяц.
//
Процедура ЗарегистрироватьПроцентЕНВД(Организация, Месяц, ПроцентЕНВД) Экспорт
	
	ПериодРегистрации = НачалоМесяца(Месяц);
	
	НаборЗаписей = РегистрыСведений.ПроцентЕНВДДляУчетаЗатратНаЗарплату.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	НаборЗаписей.Отбор.Месяц.Установить(ПериодРегистрации);
	НаборЗаписей.Прочитать();
	
	Если ПроцентЕНВД = Неопределено И НаборЗаписей.Выбран() Тогда
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать();
	Иначе
		
		// Выполняем запись только если новое значение не равно текущему.
		Если НаборЗаписей.Количество() = 0 Тогда
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Организация = Организация;
			НоваяЗапись.Месяц = ПериодРегистрации;
			НоваяЗапись.Процент = ПроцентЕНВД;
			НаборЗаписей.Записать();
		ИначеЕсли НаборЗаписей[0].Процент <> ПроцентЕНВД Тогда
			НаборЗаписей[0].Организация = Организация;
			НаборЗаписей[0].Месяц = ПериодРегистрации;
			НаборЗаписей[0].Процент = ПроцентЕНВД;
			НаборЗаписей.Записать();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Формирует временную таблицу СоздатьВТСведенияОБухучетеНачисленийСотрудников, список сотрудников и периодов,
// по которым необходимо получить данные, берутся из временной таблицы в менеджере временных
// таблиц, переданном в качестве параметра. Временная таблица обязательно должна содержать
// колонки Сотрудник и Период.
//		Поля "Сотрудник,Период" можно переопределить в параметре ИменаПолейВременнойТаблицы.
//
//	Структура таблицы ВТСведенияОБухучетеНачисленийСотрудников.
//		Организация
//		Подразделение
//		Сотрудник
//		Период
//		Начисление
//		СтатьяФинансирования
//		СтатьяРасходов
//		СпособОтраженияЗарплатыВБухучете
//		ОтношениеКЕНВД.
//
// Параметры:
//		МенеджерВременныхТаблиц - содержит временную таблицу с именем, указанным в параметре ИмяВременнойТаблицы.
//		Организация - если значение Неопределенно, то должно быть поле Организация в таблице ИмяВременнойТаблицы.
//		Подразделение - если значение Неопределенно, то должно быть поле Подразделение в таблице ИмяВременнойТаблицы.
//		Начисление - если значение Неопределенно, то должно быть поле Начисление в таблице ИмяВременнойТаблицы.
//		ИмяВременнойТаблицы - временная таблица с полями Организация, Подразделение, Начисление, Сотрудник, Период.
//			Поля Организация, Подразделение, Начисление могут отсутствовать, если заполнены параметр Организация,
//			Подразделение, Начисление.
//			Имена полей Сотрудник и Период можно переопределить в параметре ИменаПолейВременнойТаблицы.
//		ИменаПолейВременнойТаблицы - строка, имена полей Сотрудник и Период временной таблицы ИмяВременнойТаблицы.
//
Процедура СоздатьВТСведенияОБухучетеНачисленийСотрудников(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ИменаПолейВременнойТаблицы = "Сотрудник,Период", Организация = Неопределено, Подразделение = Неопределено, Начисление = Неопределено) Экспорт
	
	СоздатьВТСведенияОБухучетеНачислений(МенеджерВременныхТаблиц);
	СоздатьВТСведенияОБухучетеЗарплатыСотрудников(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ИменаПолейВременнойТаблицы, Организация, Подразделение);
	
	МассивИменПолейОтбора = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаПолейВременнойТаблицы, ",");
	ИмяПоляСотрудник     = МассивИменПолейОтбора[0];
	ИмяПоляПериод        = МассивИменПолейОтбора[1];
	
	ОрганизацияВТаблице   = Организация = Неопределено;
	ПодразделениеВТаблице = Подразделение = Неопределено;
	НачислениеВТаблице    = Начисление = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Начисление", Начисление);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	" + ?(ОрганизацияВТаблице,"ВременнаяТаблица.Организация","&Организация") + " КАК Организация,
	|	" + ?(ПодразделениеВТаблице,"ВременнаяТаблица.Подразделение","&Подразделение") + " КАК Подразделение,
	|	" + ?(НачислениеВТаблице, "ВременнаяТаблица.Начисление","&Начисление") + " КАК Начисление,
	|	ВременнаяТаблица." + ИмяПоляСотрудник + " КАК Сотрудник,
	|	ВременнаяТаблица." + ИмяПоляПериод + " КАК Период,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СведенияОБухучетеНачислений.СтатьяФинансирования,ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА СведенияОБухучетеНачислений.СтатьяФинансирования
	|		ИНАЧЕ СведенияОБухучетеЗарплатыСотрудников.СтатьяФинансирования
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СведенияОБухучетеНачислений.СтатьяРасходов,ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|			ТОГДА СведенияОБухучетеНачислений.СтатьяРасходов
	|		ИНАЧЕ СведенияОБухучетеЗарплатыСотрудников.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СведенияОБухучетеНачислений.СпособОтраженияЗарплатыВБухучете,ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка) 
	|			ТОГДА СведенияОБухучетеНачислений.СпособОтраженияЗарплатыВБухучете
	|		ИНАЧЕ СведенияОБухучетеЗарплатыСотрудников.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СведенияОБухучетеНачислений.ОтношениеКЕНВД,ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка) 
	|			ТОГДА СведенияОБухучетеНачислений.ОтношениеКЕНВД
	|		ИНАЧЕ СведенияОБухучетеЗарплатыСотрудников.ОтношениеКЕНВД
	|	КОНЕЦ КАК ОтношениеКЕНВД
	|ПОМЕСТИТЬ ВТСведенияОБухучетеНачисленийСотрудников
	|ИЗ
	|	" + ИмяВременнойТаблицы + "  КАК ВременнаяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеЗарплатыСотрудников КАК СведенияОБухучетеЗарплатыСотрудников
	|		ПО ВременнаяТаблица." + ИмяПоляСотрудник + " = СведенияОБухучетеЗарплатыСотрудников.Сотрудник
	|			И ВременнаяТаблица." + ИмяПоляПериод + " = СведенияОБухучетеЗарплатыСотрудников.Период
	|			" + ?(ПодразделениеВТаблице,"И ВременнаяТаблица.Подразделение = СведенияОБухучетеЗарплатыСотрудников.Подразделение","") + "
	|			" + ?(ОрганизацияВТаблице,"И ВременнаяТаблица.Организация = СведенияОБухучетеЗарплатыСотрудников.Организация","") + "
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеНачислений КАК СведенияОБухучетеНачислений
	|		ПО " + ?(НачислениеВТаблице,"ВременнаяТаблица.Начисление","&Начисление") + " = СведенияОБухучетеНачислений.Начисление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСведенияОБухучетеЗарплатыСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСведенияОБухучетеНачислений";
	
	Запрос.Выполнить();

КонецПроцедуры

// Возвращает строку с идентификаторами колонок таблицы значений,
// исключая служебную колонку ИдентификаторСтроки.
//
// Параметры
//		ТаблицаРаспределения - таблица значений.
//
Функция СтрокаКолонокРаспределенияБезИдентификатораСтроки(ТаблицаРаспределения) Экспорт

	Колонки = "";
	Для Каждого Колонка Из ТаблицаРаспределения.Колонки Цикл
		Если Колонка.Имя = "ИдентификаторСтроки" Тогда
			Продолжить;
		КонецЕсли;
		Колонки = Колонки + "," + Колонка.Имя;
	КонецЦикла;
	Колонки = Сред(Колонки, 2);
	
	Возврат Колонки;

КонецФункции

// Приводит структуру таблиц значений с результатами заполнения табличных частей документа
// к структуре табличных частей, таблицы с результатами заполнения могут содержать вспомогательные колонки.
//
// Параметры
//		РезультатЗаполнения - Структура - ключ соответствует имени табличной части, значение - таблица значений.
//		ДокументСсылка - Ссылка - ссылка на документ, для которого получены результаты заполнения
//
Процедура ПривестиРезультатыЗаполненияКСтруктуреТаблицДокумента(РезультатЗаполнения, ДокументСсылка) Экспорт

	ТаблицыДокумента = Новый Структура;
	
	МДДокумент = ДокументСсылка.Метаданные();
	Для каждого ТабличнаяЧасть Из МДДокумент.ТабличныеЧасти Цикл
		Таблица = Новый ТаблицаЗначений;
		Для каждого РеквизитТЧ Из ТабличнаяЧасть.Реквизиты Цикл
			Таблица.Колонки.Добавить(РеквизитТЧ.Имя, РеквизитТЧ.Тип);
		КонецЦикла;
		ТаблицыДокумента.Вставить(ТабличнаяЧасть.Имя, Таблица);
	КонецЦикла;
	
	Для каждого ЭлементКоллекции Из ТаблицыДокумента Цикл
	
		ИмяТЧ 	= ЭлементКоллекции.Ключ;
		
		Таблица = Неопределено;
		Если Не РезультатЗаполнения.Свойство(ИмяТЧ, Таблица) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Таблица.Колонки.Найти("ПодразделениеУчетаЗатрат") <> Неопределено Тогда
			Таблица.Колонки.Удалить("Подразделение");
			Таблица.Колонки.ПодразделениеУчетаЗатрат.Имя = "Подразделение";
		КонецЕсли;
		
		НоваяТаблица = ЭлементКоллекции.Значение;
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Таблица, НоваяТаблица);
		РезультатЗаполнения[ИмяТЧ] = НоваяТаблица;
	
	КонецЦикла;

КонецПроцедуры

// Выполняет сортировку таблиц значений с результатами заполнения документа .
//
// Параметры
//		РезультатЗаполнения - Структура - ключ соответствует имени табличной части, значение - таблица значений.
//
Процедура УпорядочитьДанныеДляОтраженияЗарплатыВБухучете(РезультатЗаполнения) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ШаблонТекстаЗапроса = 
	"ВЫБРАТЬ
	|	Таблица.ИмяПоля КАК ИмяПоля
	|ПОМЕСТИТЬ ВТТаблица
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УпорядоченнаяТаблица.ИмяПоля КАК ИмяПоля
	|ИЗ
	|	ВТТаблица КАК УпорядоченнаяТаблица
	|
	|УПОРЯДОЧИТЬ ПО
	|	УпорядоченнаяТаблица.ИмяПоля";
	
	СоединениеФизическоеЛицо = "
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО Таблица.ФизическоеЛицо = ФизическиеЛица.Ссылка";
	
	СоединениеПодразделение = "
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|		ПО Таблица.Подразделение = ПодразделенияОрганизаций.Ссылка";
	
	СоединениеСотрудник = "
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО Таблица.Сотрудник = Сотрудники.Ссылка";
	
	ПолеФизическоеЛицо 	= "ФизическиеЛица.Наименование КАК ФизическоеЛицоНаименование";
	ПолеПодразделение 	= "ПодразделенияОрганизаций.Наименование КАК ПодразделениеНаименование";
	ПолеСотрудник 		= "Сотрудники.Наименование КАК СотрудникНаименование";
	
	Для каждого ЭлементКоллекции Из РезультатЗаполнения Цикл
		
		ИмяТаблицы = ЭлементКоллекции.Ключ;
		Если ЭлементКоллекции.Значение.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ПоляВременнойТаблицы = Новый Массив;
		ЕстьПолеСтатьяФинансирования = Ложь;
		Для каждого КолонкаТЗ Из ЭлементКоллекции.Значение.Колонки Цикл
			ИмяПоля = КолонкаТЗ.Имя;
			ПоляВременнойТаблицы.Добавить("Таблица." + ИмяПоля + " КАК " + ИмяПоля);
			Если ВРег(ИмяПоля) = ВРег("СтатьяФинансирования") Тогда
				ЕстьПолеСтатьяФинансирования = Истина;
			КонецЕсли;
		КонецЦикла;
		
		ПоляСортировки = Новый Массив;
		Если ВРег(ИмяТаблицы) = ВРег("НачисленнаяЗарплатаИВзносы") Тогда
			ТекстСоединения = "ВТТаблица КАК Таблица" + СоединениеФизическоеЛицо + СоединениеПодразделение;
			ПоляСортировки.Добавить(ПолеФизическоеЛицо);
			ПоляСортировки.Добавить(ПолеПодразделение);
			ТекстУпорядочивания = "ФизическоеЛицоНаименование,ПодразделениеНаименование,ВидОперации,";
			Если ЕстьПолеСтатьяФинансирования Тогда
				ТекстУпорядочивания = ТекстУпорядочивания + "СтатьяФинансирования,";
			КонецЕсли;
			ТекстУпорядочивания = ТекстУпорядочивания + "СтатьяРасходов,СпособОтраженияЗарплатыВБухучете,ОблагаетсяЕНВД";
		ИначеЕсли ВРег(ИмяТаблицы) = ВРег("НачисленныйНДФЛ") Тогда
			ТекстСоединения = "ВТТаблица КАК Таблица" + СоединениеФизическоеЛицо;
			ПоляСортировки.Добавить(ПолеФизическоеЛицо);
			ТекстУпорядочивания = "ФизическоеЛицоНаименование,ВидОперации,";
			Если ЕстьПолеСтатьяФинансирования Тогда
				ТекстУпорядочивания = ТекстУпорядочивания + "СтатьяФинансирования,";
			КонецЕсли;
			ТекстУпорядочивания = ТекстУпорядочивания + "СтатьяРасходов,КодНалоговогоОргана,КПП,КодПоОКТМО";
		ИначеЕсли ВРег(ИмяТаблицы) = ВРег("УдержаннаяЗарплата") Тогда
			ТекстСоединения = "ВТТаблица КАК Таблица" + СоединениеФизическоеЛицо + СоединениеПодразделение;
			ПоляСортировки.Добавить(ПолеФизическоеЛицо);
			ПоляСортировки.Добавить(ПолеПодразделение);
			ТекстУпорядочивания = "ФизическоеЛицоНаименование,ПодразделениеНаименование,ВидОперации,";
			Если ЕстьПолеСтатьяФинансирования Тогда
				ТекстУпорядочивания = ТекстУпорядочивания + "СтатьяФинансирования,";
			КонецЕсли;
			ТекстУпорядочивания = ТекстУпорядочивания + "СтатьяРасходов,Контрагент,ЯвляетсяОснованиемОформленияКассовогоЧека,ОписаниеУдержанияДляЧека";
		ИначеЕсли ВРег(ИмяТаблицы) = ВРег("ВыплатаОтпусковЗаСчетРезерва") Тогда
			ТекстСоединения = "ВТТаблица КАК Таблица" + СоединениеСотрудник;
			ПоляСортировки.Добавить(ПолеСотрудник);
			ТекстУпорядочивания = "СотрудникНаименование,ВидОперации";
			Если ЕстьПолеСтатьяФинансирования Тогда
				ТекстУпорядочивания = ТекстУпорядочивания + ",СтатьяФинансирования";
			КонецЕсли;
		КонецЕсли;
		
		ПоляЗапроса  = СтрСоединить(ПоляВременнойТаблицы, "," + Символы.ПС);
		ПоляЗапросаСортировки  = ПоляЗапроса + "," + Символы.ПС + СтрСоединить(ПоляСортировки, "," + Символы.ПС);
		
		ТекстЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "УпорядоченнаяТаблица.ИмяПоля КАК ИмяПоля", ПоляЗапросаСортировки);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Таблица.ИмяПоля КАК ИмяПоля", ПоляЗапроса);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТТаблица КАК УпорядоченнаяТаблица", ТекстСоединения);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "УпорядоченнаяТаблица.ИмяПоля", ТекстУпорядочивания);
		
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("Таблица", ЭлементКоллекции.Значение);
		РезультатЗаполнения[ИмяТаблицы] = Запрос.Выполнить().Выгрузить();
		ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц,"ВТТаблица");
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует временную таблицу ВТСведенияОБухучетеЗарплатыСотрудников, список сотрудников и периодов,
// по которым необходимо получить данные, берутся из временной таблицы в менеджере временных
// таблиц, переданном в качестве параметра. Временная таблица обязательно должна содержать
// колонки Сотрудник и Период.
//		Поля "Сотрудник,Период" можно переопределить в ОписательВременныхТаблиц.
//
//	Структура таблицы ВТСведенияОБухучетеЗарплатыСотрудников.
//		Организация
//		Подразделение
//		Сотрудник
//		Период
//		СтатьяФинансирования
//		СтатьяРасходов
//		СпособОтраженияЗарплатыВБухучете
//		ОтношениеКЕНВД.
//
// Параметры:
//		МенеджерВременныхТаблиц - содержит временную таблицу с именем, указанным в параметре ИмяВременнойТаблицы.
//		Организация - если значение Неопределенно, то должно быть поле Организация в таблице ИмяВременнойТаблицы.
//		Подразделение - если значение Неопределенно, то должно быть поле Подразделение в таблице ИмяВременнойТаблицы.
//		ИмяВременнойТаблицы - временная таблица с полями Организация, Подразделение, Сотрудник, Период.
//			Поля Организация и Подразделение могут отсутствовать, если заполнены параметр Организация, Подразделение.
//			Имена полей Сотрудник и Период можно переопределить в параметре ИменаПолейВременнойТаблицы.
//		ИменаПолейВременнойТаблицы - строка, имена полей Сотрудник и Период временной таблицы ИмяВременнойТаблицы.
//
Процедура СоздатьВТСведенияОБухучетеЗарплатыСотрудников(МенеджерВременныхТаблиц, ИмяВременнойТаблицы,
											ИменаПолейВременнойТаблицы = "Сотрудник,Период",
											Организация = Неопределено,
											Подразделение = Неопределено,
											ТерриторияВыполненияРаботВОрганизации = Неопределено) Экспорт

	ОтражениеЗарплатыВБухучетеВнутренний.СоздатьВТСведенияОБухучетеЗарплатыСотрудников(МенеджерВременныхТаблиц, ИмяВременнойТаблицы,
												ИменаПолейВременнойТаблицы, Организация, Подразделение, ТерриторияВыполненияРаботВОрганизации);

КонецПроцедуры

#Область ПолучениеДолиЕНВДСтраховыеВзносы

// Создает временную таблицу ВТНачисленияСДаннымиЕНВД 
//		Поля таблицы ВТНачисленияСДаннымиЕНВД
//			Сотрудник
//			Начисление
//			ДатаНачала
//			ДоляЕНВД, число от 0 до 1.
//
// Параметры:
// 		Организация
//		МесяцНачисления
//		МенеджерВременныхТаблиц, содержит временные таблицы
//			ВТНачисления - начисления, которые дополняются долей ЕНВД
//			ВТНачисленияСРаспределением - таблица с результатами распределения начислений, может отсутствовать 
//		НачисленияПоСотрудникам - таблица значений с начислениями сотрудников.
//
Процедура СоздатьВТНачисленияСДаннымиЕНВД(Организация, МесяцНачисления, МенеджерВременныхТаблиц, НачисленияПоСотрудникам) Экспорт

	ПлательщикЕНВД = ПлательщикЕНВД(Организация, МесяцНачисления);
	
	Если Не ПлательщикЕНВД Тогда
		// не используется ЕНВД, создадим таблицу с нулевой долей ЕНВД
		СоздатьВТНачисленияСДаннымиЕНВДНулеваяДоляЕНВД(МенеджерВременныхТаблиц);
		Возврат;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата") И ЗарплатаКадры.ВТСуществует(МенеджерВременныхТаблиц, "ВТНачисленияСРаспределением") Тогда
		// Таблица ВТНачисленияСРаспределением содержит сведения о бухучете начислений.
		СоздатьВТНачисленияСДаннымиЕНВДПоТаблицеБухучетНачислений(МенеджерВременныхТаблиц, "ВТНачисленияСРаспределением", "ВТНачисления");
	Иначе
		
		// Таблица ВТНачисленияСРаспределением не содержит сведения о бухучете начислений,
		// получим отражение в бухучете начислений из таблицы НачисленияПоСотрудникам.
		ОтражениеЗарплатыВУчете.ДобавитьКолонкуИдентификаторСтроки(НачисленияПоСотрудникам);
		Если НачисленияПоСотрудникам.Колонки.Найти("ТерриторияВыполненияРаботВОрганизации") = Неопределено Тогда
			НачисленияПоСотрудникам.Колонки.Добавить("ТерриторияВыполненияРаботВОрганизации", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
		КонецЕсли;
		Если НачисленияПоСотрудникам.Колонки.Найти("ДокументОснование") = Неопределено Тогда
			НачисленияПоСотрудникам.Колонки.Добавить("ДокументОснование", Новый ОписаниеТипов(ОтражениеЗарплатыВУчетеВнутренний.ТипыПоляДокументОснование()));
		КонецЕсли;
		ОтражениеЗарплатыВУчете.СоздатьВТНачислениеУдержаниеВидОперации(МенеджерВременныхТаблиц);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("НачисленияПоСотрудникам", НачисленияПоСотрудникам);
		Запрос.УстановитьПараметр("ПериодРегистрации", МесяцНачисления);
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	&ПериодРегистрации КАК ПериодРегистрации,
		|	&Организация КАК Организация,
		|	НачисленияДляРаспределения.Сотрудник,
		|	НачисленияДляРаспределения.ФизическоеЛицо,
		|	НачисленияДляРаспределения.Подразделение,
		|	НачисленияДляРаспределения.Начисление,
		|	НачисленияДляРаспределения.ДатаНачала,
		|	НачисленияДляРаспределения.ДатаОкончания,
		|	НачисленияДляРаспределения.Сумма,
		|	НачисленияДляРаспределения.ДокументОснование,
		|	НачисленияДляРаспределения.ИдентификаторСтроки,
		|	НачисленияДляРаспределения.ТерриторияВыполненияРаботВОрганизации
		|ПОМЕСТИТЬ ВТНачисленияДляРаспределенияВременная
		|ИЗ
		|	&НачисленияПоСотрудникам КАК НачисленияДляРаспределения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Начисления.ПериодРегистрации,
		|	Начисления.Организация,
		|	Начисления.Сотрудник,
		|	Начисления.ФизическоеЛицо,
		|	Начисления.Подразделение,
		|	Начисления.Начисление,
		|	Начисления.ДатаНачала,
		|	Начисления.ДатаОкончания,
		|	Начисления.Сумма,
		|	Начисления.ДокументОснование,
		|	Начисления.ИдентификаторСтроки,
		|	Начисления.ТерриторияВыполненияРаботВОрганизации,
		|	ЕСТЬNULL(НачисленияВидОперации.ВидОперации, ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка)) КАК ВидОперации
		|ПОМЕСТИТЬ ВТНачисленияДляРаспределения
		|ИЗ
		|	ВТНачисленияДляРаспределенияВременная КАК Начисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеУдержаниеВидОперации КАК НачисленияВидОперации
		|		ПО Начисления.Начисление = НачисленияВидОперации.НачислениеУдержание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТНачисленияДляРаспределенияВременная";
		Запрос.Выполнить();
		
		ПроцентЕНВД = ПроцентЕНВД(Организация, МесяцНачисления);
		СоздатьВТБухучетНачислений(Организация, МесяцНачисления, ПроцентЕНВД, МенеджерВременныхТаблиц);
		СоздатьВТНачисленияСДаннымиЕНВДПоТаблицеБухучетНачислений(МенеджерВременныхТаблиц, "ВТБухучетНачислений", "ВТНачисления");
		
		ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, "ВТБухучетНачислений");
		
	КонецЕсли;

КонецПроцедуры

// Создает временную таблицу ВТНачисленияСДаннымиЕНВД 
//		Поля таблицы ВТНачисленияСДаннымиЕНВД
//			Сотрудник
//			Начисление
//			ДатаНачала
//			ДоляЕНВД, число от 0 до 1.
//
// Параметры:
// 		Организация
//		МесяцНачисления
//		МенеджерВременныхТаблиц, содержит временные таблицы
//			ВТНачисления - начисления, которые дополняются долей ЕНВД.
//
Процедура СоздатьВТНачисленияСДаннымиЕНВДПоЕжемесячнойДоле(Организация, МесяцНачисления, МенеджерВременныхТаблиц) Экспорт
	
	ПлательщикЕНВД = ПлательщикЕНВД(Организация, МесяцНачисления);
	
	Если ПлательщикЕНВД Тогда
		
		ЕжемесячнаяДоляЕНВД = 0;
		ПроцентЕНВД = ПроцентЕНВД(Организация, МесяцНачисления);
		Если ПроцентЕНВД = 100 Тогда
			ЕжемесячнаяДоляЕНВД = 1;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Начисления.Сотрудник,
		|	Начисления.Подразделение,
		|	Начисления.ТерриторияВыполненияРаботВОрганизации,
		|	Начисления.ДатаНачала
		|ПОМЕСТИТЬ ВТНачисленияДляРаспределения
		|ИЗ
		|	ВТНачисления КАК Начисления";
		Запрос.Выполнить();
		
		СоздатьВТСведенияОБухучетеЗарплатыСотрудников(МенеджерВременныхТаблиц, "ВТНачисленияДляРаспределения", "Сотрудник,ДатаНачала", Организация);
		
		Запрос.УстановитьПараметр("ЕжемесячнаяДоляЕНВД", ЕжемесячнаяДоляЕНВД);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Начисления.Сотрудник,
		|	Начисления.Начисление,
		|	Начисления.Подразделение,
		|	Начисления.ДатаНачала,
		|	ВЫБОР
		|		КОГДА СведенияОБухучетеЗарплаты.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом)
		|			ТОГДА &ЕжемесячнаяДоляЕНВД
		|		КОГДА СведенияОБухучетеЗарплаты.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ДоляЕНВД
		|ПОМЕСТИТЬ ВТНачисленияСДаннымиЕНВД
		|ИЗ
		|	ВТНачисления КАК Начисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеЗарплатыСотрудников КАК СведенияОБухучетеЗарплаты
		|		ПО Начисления.Сотрудник = СведенияОБухучетеЗарплаты.Сотрудник
		|			И Начисления.Подразделение = СведенияОБухучетеЗарплаты.Подразделение
		|			И Начисления.ДатаНачала = СведенияОБухучетеЗарплаты.Период
		|			И (ЕСТЬNULL(Начисления.ТерриторияВыполненияРаботВОрганизации, ИСТИНА) = ЕСТЬNULL(СведенияОБухучетеЗарплаты.ТерриторияВыполненияРаботВОрганизации, ИСТИНА))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТСведенияОБухучетеЗарплатыСотрудников
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТНачисленияДляРаспределения";
		
		Запрос.Выполнить();
		
	Иначе
		
		СоздатьВТНачисленияСДаннымиЕНВДНулеваяДоляЕНВД(МенеджерВременныхТаблиц);
		
	КонецЕсли;

КонецПроцедуры

// Возвращает значение использования ЕНВД на дату для информационной базы.
// Если дата пустая или больше даты отмены ЕНВД возвращается Лож, иначе 
// возвращается значение функциональной опции ИспользуетсяЕНВД.
//
// Параметры:
// 	Период - Дата
//
// 	Возвращаемое значение:
// 		Булево.
//
Функция ИспользуетсяЕНВД(Период) Экспорт

	Если Не ЗначениеЗаполнено(Период) Или Период >= ЗарплатаКадры.ДатаОтменыЕНВД() Тогда
		Возврат Ложь;
	Иначе
		Возврат ОтражениеЗарплатыВБухучетеВнутренний.ИспользуетсяЕНВД();
	КонецЕсли;
	
КонецФункции


// Устанавливает условное оформление списков истории настроек бухучета.
//
// Параметры:
// 	Форма - Управляемая форма
// 	ИмяТаблицы - Строка
//
Процедура УстановитьУсловноеОформлениеНастройкиБухучетаЕНВД(Форма, ИмяТаблицы = "НаборЗаписей") Экспорт
	
	ДатаОтменыЕНВД = ЗарплатаКадры.ДатаОтменыЕНВД();
	
	ТекстПояснения = СтрШаблон("%1 %2", НСтр("ru='не применяется с'"), Формат(ДатаОтменыЕНВД, "ДФ=dd.MM.yyyy"));
		
	ЭлементОформления = Форма.УсловноеОформление.Элементы.Добавить();
	// Вид оформления
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Текст", ТекстПояснения);
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПоясняющийТекст);
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	// Оформляемое поле
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных(ИмяТаблицы +"ОтношениеКЕНВД");
	// условие для оформления
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяТаблицы + ".Период");
	ЭлементОтбора.ПравоеЗначение = ДатаОтменыЕНВД;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбслуживаниеОценочныхОбязательств

// Рассчитывает остатки отпусков по сотрудникам.
//
// Параметры:
// 	Организация - тип СправочникСсылка.Организации.
// 	Период - тип Дата.
// 	Сотрудники - Неопределенно или Массив.
//
//	Возвращаемое значение - Таблица значений, описание см ОтражениеЗарплатыВБухучете.НоваяТаблицаОстаткиОтпусков.
//
Функция ОстаткиОтпусковДляРасчетаОценочныхОбязательств(Организация, Период, Сотрудники) Экспорт

	ТаблицаОстаткиОтпусков = НоваяТаблицаОстаткиОтпусков();
	
	Если Сотрудники = Неопределено Тогда
		ПараметрыПолучения = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
		ПараметрыПолучения.Организация      = Организация;
		ПараметрыПолучения.НачалоПериода    = НачалоМесяца(Период);
		ПараметрыПолучения.ОкончаниеПериода = КонецМесяца(Период);
		ПараметрыПолучения.Вставить("КадровыеДанные", "Подразделение");
		ТаблицаСотрудников = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыПолучения);
		МассивСотрудников = ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник");
	Иначе
		ТаблицаСотрудников = КадровыйУчет.КадровыеДанныеСотрудников(Истина, Сотрудники, "Подразделение", КонецМесяца(Период));
	КонецЕсли;
	
	МассивСотрудников = ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник");
	
	ЕстьЕНВД = ПлательщикЕНВД(Организация, Период);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаСотрудников", ТаблицаСотрудников);
	Запрос.УстановитьПараметр("ЕстьЕНВД", ЕстьЕНВД);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаСотрудников.Сотрудник,
	|	ТаблицаСотрудников.Период,
	|	ТаблицаСотрудников.Подразделение
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	&ТаблицаСотрудников КАК ТаблицаСотрудников"; 
	Запрос.Выполнить();
	
	СоздатьВТСведенияОБухучетеЗарплатыСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТСотрудники", "Сотрудник,Период", Организация,,Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сотрудники.Сотрудник КАК Сотрудник,
	|	Сотрудники.Подразделение КАК Подразделение,
	|	СведенияОБухучетеНачисленийСотрудников.СпособОтраженияЗарплатыВБухучете,
	|	СведенияОБухучетеНачисленийСотрудников.СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА &ЕстьЕНВД
	|				И СведенияОБухучетеНачисленийСотрудников.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОблагаетсяЕНВД
	|ИЗ
	|	ВТСотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеЗарплатыСотрудников КАК СведенияОБухучетеНачисленийСотрудников
	|		ПО Сотрудники.Сотрудник = СведенияОБухучетеНачисленийСотрудников.Сотрудник";
	
	БухучетСотрудников = Запрос.Выполнить().Выгрузить();
	БухучетСотрудников.Индексы.Добавить("Сотрудник");
	Отбор = Новый Структура("Сотрудник");
	
	СведенияОбОтпусках = ЗарплатаКадры.СведенияОбОтпускахСотрудниковДляРасчетаОценочныхОбязательств(МассивСотрудников, Период);
	Для каждого СтрокаСведений Из СведенияОбОтпусках Цикл
		
		НоваяСтрока = ТаблицаОстаткиОтпусков.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСведений);
		НоваяСтрока.Организация = Организация;
		
		Отбор.Сотрудник = СтрокаСведений.Сотрудник;
		СтрокиБухучета = БухучетСотрудников.НайтиСтроки(Отбор);
		Если СтрокиБухучета.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокиБухучета[0],"Подразделение,СпособОтраженияЗарплатыВБухучете,СтатьяФинансирования");
		КонецЕсли;
		
	КонецЦикла;	
	
	Возврат ТаблицаОстаткиОтпусков;

КонецФункции

Функция ФондОплатыТрудаИСтраховыеВзносыДляРасчетаОценочныхОбязательствОтпусков(Организация, Период, НачисленнаяЗарплатаИВзносы) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ОтражениеЗарплатыВБухучетеВнутренний.СоздатьВТНачисленияБазаОтпуска(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.УстановитьПараметр("НачисленнаяЗарплатаИВзносы", НачисленнаяЗарплатаИВзносы);
	Запрос.УстановитьПараметр("Организация", Организация);
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НачисленияИВзносы.Сотрудник КАК Сотрудник,
	|	НачисленияИВзносы.Подразделение КАК Подразделение,
	|	НачисленияИВзносы.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	НачисленияИВзносы.Начисление КАК Начисление,
	|	НачисленияИВзносы.ДатаНачала КАК ДатаНачала,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.СтатьяФинансирования КАК СтатьяФинансирования,
	|	НачисленияИВзносы.Сумма КАК Сумма,
	|	НачисленияИВзносы.ПоляВзносов КАК ПолеВзносов,
	|	НачисленияИВзносы.ФССНесчастныеСлучаи КАК ФССНесчастныеСлучаи,
	|	НачисленияИВзносы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
	|ПОМЕСТИТЬ ВТНачисленнаяЗарплатаИВзносы
	|ИЗ
	|	&НачисленнаяЗарплатаИВзносы КАК НачисленияИВзносы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	НачисленияИВзносы.Сотрудник КАК Сотрудник,
	|	НачисленияИВзносы.Подразделение КАК Подразделение,
	|	НачисленияИВзносы.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	НачисленияИВзносы.Начисление КАК Начисление,
	|	НачисленияИВзносы.ДатаНачала КАК ДатаНачала,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.СтатьяФинансирования КАК СтатьяФинансирования,
	|	СУММА(НачисленияИВзносы.Сумма) КАК ФондОплатыТруда,
	|	СУММА(НачисленияИВзносы.ПолеВзносов) КАК СтраховыеВзносы,
	|	СУММА(НачисленияИВзносы.ФССНесчастныеСлучаи) КАК ФССНесчастныеСлучаи,
	|	НачисленияИВзносы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
	|ИЗ
	|	ВТНачисленнаяЗарплатаИВзносы КАК НачисленияИВзносы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНачисленияБазаОтпуска КАК ВТНачисленияБазаОтпуска
	|		ПО НачисленияИВзносы.Начисление = ВТНачисленияБазаОтпуска.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	НачисленияИВзносы.Сотрудник,
	|	НачисленияИВзносы.Подразделение,
	|	НачисленияИВзносы.ПодразделениеУчетаЗатрат,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.ОблагаетсяЕНВД,
	|	НачисленияИВзносы.СтатьяФинансирования,
	|	НачисленияИВзносы.ДатаНачала,
	|	НачисленияИВзносы.Начисление";
	
	ТекстПолейВзносов = "";
	ТекстПоляСуммВзносов = "";
	Для каждого ИмяПоля Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(УчетСтраховыхВзносов.ОтражаемыеВУчетеВзносы(Истина)) Цикл
		Если ИмяПоля = "ФССНесчастныеСлучаи" Тогда
			Продолжить;
		КонецЕсли;
		ТекстПолейВзносов = ТекстПолейВзносов + "НачисленияИВзносы." + ИмяПоля + " КАК " + ИмяПоля + "," + Символы.ПС;
		ТекстПоляСуммВзносов = ТекстПоляСуммВзносов + ?(ПустаяСтрока(ТекстПоляСуммВзносов),"","+") + " НачисленияИВзносы." + ИмяПоля;
	КонецЦикла;
	ТекстПоляСуммВзносов = "СУММА("+ТекстПоляСуммВзносов+") КАК СтраховыеВзносы,";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НачисленияИВзносы.ПоляВзносов КАК ПолеВзносов,", ТекстПолейВзносов);
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "СУММА(НачисленияИВзносы.ПолеВзносов) КАК СтраховыеВзносы,", ТекстПоляСуммВзносов);  
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ТаблицаФондОплатыТрудаИСтраховыеВзносы = НоваяТаблицаФондОплатыТрудаИСтраховыеВзносы();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаФондОплатыТрудаИСтраховыеВзносы.Добавить(), Выборка);
	КонецЦикла;
	
	Возврат ТаблицаФондОплатыТрудаИСтраховыеВзносы;	
	
КонецФункции 

// Заполняет параметры для расчета оценочных обязательств по отпускам.
//
// Параметры:
// 	Организация - тип СправочникСсылка.Организации.
// 	ПериодРегистрации - тип Дата.
// 	ПараметрыДляРасчета - структура, параметры, которые будут заполняться, описание см ОтражениеЗарплатыВБухучете.ОписаниеПараметровДляРасчетаОценочныхОбязательствОтпусков.
// 	Сотрудники - Неопределенно или Массив.
//
Процедура ЗаполнитьПараметрыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации, ПараметрыДляРасчета, Сотрудники)

	ОтражениеЗарплатыВБухучетеВнутренний.ЗаполнитьПараметрыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации, ПараметрыДляРасчета, Сотрудники);

КонецПроцедуры

#КонецОбласти

#Область ДанныеДляОтраженияЗарплатыВБухучете

Функция ТаблицаНДФЛДляБухучета(ТаблицаНДФЛ) Экспорт
	
	НачисленныйНДФЛ = НоваяТаблицаБухучетНачисленныйНДФЛ();
	
	// Добавим сведения ОКАТО и КПП.
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаНДФЛ", ТаблицаНДФЛ);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНДФЛ.Организация КАК Организация,
	|	ТаблицаНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаНДФЛ.Сотрудник КАК Сотрудник,
	|	ТаблицаНДФЛ.Сумма КАК Сумма,
	|	ТаблицаНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ТаблицаНДФЛ.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаНДФЛ.ВидОперации КАК ВидОперации
	|ПОМЕСТИТЬ ВТТаблицаНДФЛ
	|ИЗ
	|	&ТаблицаНДФЛ КАК ТаблицаНДФЛ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаНДФЛ.Сотрудник КАК Сотрудник,
	|	СУММА(ТаблицаНДФЛ.Сумма) КАК Сумма,
	|	ТаблицаНДФЛ.ВидОперации КАК ВидОперации,
	|	ТаблицаНДФЛ.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КодПоОКАТО, """") КАК КодПоОКАТО,
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КодПоОКТМО, """") КАК КодПоОКТМО,
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КПП, """") КАК КПП,
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.Код, """") КАК КодНалоговогоОргана
	|ИЗ
	|	ВТТаблицаНДФЛ КАК ТаблицаНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|		ПО ТаблицаНДФЛ.РегистрацияВНалоговомОргане = РегистрацииВНалоговомОргане.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО ТаблицаНДФЛ.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ФизическиеЛица.Наименование,
	|	ТаблицаНДФЛ.ВидОперации,
	|	ТаблицаНДФЛ.СтатьяРасходов,
	|	ТаблицаНДФЛ.РегистрацияВНалоговомОргане,
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КодПоОКАТО, """"),
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КПП, """"),
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КодПоОКТМО, """"),
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.Код, """"),
	|	ТаблицаНДФЛ.Сотрудник
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаНДФЛ.Сумма) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическиеЛица.Наименование,
	|	ВидОперации,
	|	СтатьяРасходов";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(НачисленныйНДФЛ.Добавить(), Выборка);
	КонецЦикла;
	
	Возврат НачисленныйНДФЛ;
	
КонецФункции	

Процедура СведенияОБухучетеНачисленийИВзносов(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, ТаблицаНачислений, ТаблицаВзносов) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ПроцентЕНВД = ?(Не ЗначениеЗаполнено(Организация), Неопределено, ПроцентЕНВД(Организация, ПериодРегистрации));
	
	Запрос.УстановитьПараметр("ТаблицаНачислений", ТаблицаНачислений);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	ТаблицаНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаНачислений.Организация КАК Организация,
	|	ТаблицаНачислений.Сотрудник КАК Сотрудник,
	|	ТаблицаНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаНачислений.Подразделение КАК Подразделение,
	|	ТаблицаНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаНачислений.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	ТаблицаНачислений.ДатаНачала КАК ДатаНачала,
	|	ТаблицаНачислений.ДатаОкончания КАК ДатаОкончания,
	|	ТаблицаНачислений.ВидОперации КАК ВидОперации,
	|	ТаблицаНачислений.Начисление КАК Начисление,
	|	ТаблицаНачислений.ДокументОснование КАК ДокументОснование,
	|	ТаблицаНачислений.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТНачисленияДляРаспределения
	|ИЗ
	|	&ТаблицаНачислений КАК ТаблицаНачислений";
	Запрос.Выполнить();
	
	// Получим отражение в бухучете начислений и взносов.
	СоздатьВТБухучетНачислений(Организация, ПериодРегистрации, ПроцентЕНВД, МенеджерВременныхТаблиц);
	СоздатьВТБухучетСтраховыхВзносов(Организация, ПериодРегистрации, ТаблицаВзносов, МенеджерВременныхТаблиц);

КонецПроцедуры

// Формирует таблицу отражения в бухучете начислений - ВТБухучетНачислений.
//
//	МенеджерВременныхТаблиц должен содержать таблицу ВТНачисленияДляРаспределения.
//	Описание таблицы ВТНачисленияДляРаспределения
// 		ПериодРегистрации.
// 		Организация
// 		Сотрудник
// 		ФизическоеЛицо
// 		Подразделение
// 		Начисление
// 		ВидОперации
// 		ДатаНачала
// 		ДатаОкончания
// 		Сумма
//		ДокументОснование
// 		ИдентификаторСтроки
//
// Поля таблицы ВТБухучетНачислений
// 		ПериодРегистрации
// 		ИдентификаторСтроки
// 		ПериодПринятияРасходов.
// 		Организация
// 		Сотрудник
// 		ФизическоеЛицо
// 		Подразделение
// 		Начисление
// 		ВидОперации
// 		ДатаНачала
// 		ДатаОкончания
// 		ДокументОснование
// 		СпособОтраженияЗарплатыВБухучете
// 		СтатьяФинансирования
// 		СтатьяРасходов.
// 		Сумма
// 		ВидНачисленияОплатыТрудаДляНУ
// 		ОблагаетсяЕНВД.
//
// Параметры:
//		Организация
//		ПериодРегистрации
//		ПроцентЕНВД
//		МенеджерВременныхТаблиц
//		ДополнительныеПараметры - Структура, данные документа, начисления которого распределяем
//						используется при ведении учета по статьям финансирования.
//
Процедура СоздатьВТБухучетНачислений(Организация, ПериодРегистрации, ПроцентЕНВД, МенеджерВременныхТаблиц)

	ОтражениеЗарплатыВБухучетеВнутренний.СоздатьВТБухучетНачислений(Организация, ПериодРегистрации, ПроцентЕНВД, МенеджерВременныхТаблиц);
	
КонецПроцедуры

// Формирует таблицу отражения в бухучете страховых взносов - ВТБухучетСтраховыхВзносов.
//
// Менеджер временных таблиц должен содержать таблицу ВТБухучетНачислений, структура описана в процедуре
// СоздатьВТБухучетНачислений.
//
Процедура СоздатьВТБухучетСтраховыхВзносов(Организация, ПериодРегистрации, Знач ТаблицаВзносов, МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаВзносов", ТаблицаВзносов);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	ТаблицаВзносов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаВзносов.Организация КАК Организация,
	|	ТаблицаВзносов.Сотрудник КАК Сотрудник,
	|	ТаблицаВзносов.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаВзносов.Подразделение КАК Подразделение,
	|	ТаблицаВзносов.ВидОперации КАК ВидОперации,
	|	ТаблицаВзносов.Начисление КАК Начисление,
	|	ТаблицаВзносов.ДатаНачала КАК ДатаНачала,
	|	ТаблицаВзносов.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	ТаблицаВзносов.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТВзносы
	|ИЗ
	|	&ТаблицаВзносов КАК ТаблицаВзносов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Взносы.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	ВТВзносы КАК Взносы
	|ГДЕ
	|	Взносы.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|	И Взносы.Начисление ССЫЛКА ПланВидовРасчета.Начисления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Взносы.ФизическоеЛицо
	|ИЗ
	|	ВТВзносы КАК Взносы
	|ГДЕ
	|	Взносы.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|	И Взносы.Начисление ССЫЛКА Перечисление.ВидыОсобыхНачисленийИУдержаний
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Взносы.ФизическоеЛицо
	|ИЗ
	|	ВТВзносы КАК Взносы
	|ГДЕ
	|	Взносы.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|	И Взносы.Начисление = НЕОПРЕДЕЛЕНО";
	
	// Отбираем физических лиц, по которым есть записи с пустым сотрудником,
	// и запись потенциально относится к доходам сотрудника.
	// Определяем это по типу поля Начисление, если значение не заполнено (НЕОПРЕДЕЛЕНО),
	// так же относим ее доходам сотрудника.
	МассивФизическихЛиц = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
	
	Если МассивФизическихЛиц.Количество() > 0 Тогда
		
		КадровыйУчет.СоздатьВТОсновныеСотрудникиФизическихЛиц(МенеджерВременныхТаблиц, Истина, МассивФизическихЛиц, Организация, ПериодРегистрации, КонецМесяца(ПериодРегистрации));
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Сотрудники.Сотрудник,
		|	Сотрудники.ФизическоеЛицо,
		|	КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ) КАК Период
		|ПОМЕСТИТЬ ВТОсновныеСотрудники
		|ИЗ
		|	(ВЫБРАТЬ
		|		МАКСИМУМ(Сотрудники.Сотрудник) КАК Сотрудник,
		|		Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо
		|	ИЗ
		|		ВТОсновныеСотрудникиФизическихЛиц КАК Сотрудники
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Сотрудники.ФизическоеЛицо) КАК Сотрудники";
		Запрос.Выполнить();
		
		ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, "ВТОсновныеСотрудники", "Сотрудник,Период");
		КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, "Подразделение,Организация");
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	&ПериодРегистрации КАК ПериодРегистрации,
		|	ТаблицаВзносов.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ТаблицаВзносов.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА ТаблицаВзносов.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|				И НЕ ОсновныеСотрудникиФизическихЛиц.Сотрудник ЕСТЬ NULL
		|			ТОГДА ОсновныеСотрудникиФизическихЛиц.Сотрудник
		|		ИНАЧЕ ТаблицаВзносов.Сотрудник
		|	КОНЕЦ КАК Сотрудник,
		|	ВЫБОР
		|		КОГДА ТаблицаВзносов.Подразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|				И НЕ КадровыеДанныеСотрудников.Подразделение ЕСТЬ NULL
		|			ТОГДА КадровыеДанныеСотрудников.Подразделение
		|		ИНАЧЕ ТаблицаВзносов.Подразделение
		|	КОНЕЦ КАК Подразделение,
		|	ТаблицаВзносов.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ТаблицаВзносов.ВидОперации КАК ВидОперации,
		|	ТаблицаВзносов.Начисление КАК Начисление,
		|	ТаблицаВзносов.ДатаНачала КАК ДатаНачала,
		|	ТаблицаВзносов.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	ТаблицаВзносов.Сумма КАК Сумма
		|ПОМЕСТИТЬ ВТВзносыВременная
		|ИЗ
		|	ВТВзносы КАК ТаблицаВзносов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОсновныеСотрудники КАК ОсновныеСотрудникиФизическихЛиц
		|		ПО ТаблицаВзносов.ФизическоеЛицо = ОсновныеСотрудникиФизическихЛиц.ФизическоеЛицо
		|			И (ТаблицаВзносов.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
		|		ПО ТаблицаВзносов.ФизическоеЛицо = КадровыеДанныеСотрудников.ФизическоеЛицо
		|			И ТаблицаВзносов.Организация = КадровыеДанныеСотрудников.Организация
		|			И (ТаблицаВзносов.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВзносы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВзносыВременная.ПериодРегистрации КАК ПериодРегистрации,
		|	ВзносыВременная.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ВзносыВременная.Организация КАК Организация,
		|	ВзносыВременная.Сотрудник КАК Сотрудник,
		|	ВзносыВременная.Подразделение КАК Подразделение,
		|	ВзносыВременная.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВзносыВременная.ВидОперации КАК ВидОперации,
		|	ВзносыВременная.Начисление КАК Начисление,
		|	ВзносыВременная.ДатаНачала КАК ДатаНачала,
		|	ВзносыВременная.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	ВзносыВременная.Сумма КАК Сумма
		|ПОМЕСТИТЬ ВТВзносы
		|ИЗ
		|	ВТВзносыВременная КАК ВзносыВременная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВзносыВременная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТОсновныеСотрудники
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТОсновныеСотрудникиФизическихЛиц
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТКадровыеДанныеСотрудников
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Взносы.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	Взносы.Организация КАК Организация,
		|	Взносы.Сотрудник КАК Сотрудник,
		|	Взносы.Подразделение КАК Подразделение,
		|	Взносы.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Взносы.ВидОперации КАК ВидОперации,
		|	Взносы.Начисление КАК Начисление,
		|	Взносы.ДатаНачала КАК ДатаНачала,
		|	Взносы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	Взносы.Сумма КАК Сумма
		|ИЗ
		|	ВТВзносы КАК Взносы";
		
		ТаблицаВзносов = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	ОтражениеЗарплатыВБухучетеВнутренний.СоздатьВТИсключаемыеСтроки(МенеджерВременныхТаблиц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачислений.Сотрудник КАК Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
	|	БухучетНачислений.Подразделение КАК Подразделение,
	|	БухучетНачислений.Начисление КАК Начисление,
	|	БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СУММА(БухучетНачислений.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТБухучетНачисленийСвод
	|ИЗ
	|	ВТБухучетНачислений КАК БухучетНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсключаемыеСтроки КАК ИсключаемыеСтроки
	|		ПО БухучетНачислений.ИдентификаторСтроки = ИсключаемыеСтроки.ИдентификаторСтроки
	|ГДЕ
	|	ИсключаемыеСтроки.ИдентификаторСтроки ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо,
	|	БухучетНачислений.ДатаНачала,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачислений.Сотрудник КАК Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетНачислений.Подразделение КАК Подразделение,
	|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
	|	БухучетНачислений.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
	|	БухучетНачислений.Начисление КАК Начисление,
	|	БухучетНачислений.ВидОперации КАК ВидОперации,
	|	БухучетНачислений.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	ВЫБОР
	|		КОГДА БухучетНачислений.Сумма = 0
	|				ИЛИ БухучетНачисленийСвод.Сумма = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(БухучетНачислений.Сумма / БухучетНачисленийСвод.Сумма КАК ЧИСЛО(25, 10))
	|	КОНЕЦ КАК База
	|ПОМЕСТИТЬ ВТБухучетНачисленийБаза
	|ИЗ
	|	ВТБухучетНачислений КАК БухучетНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетНачисленийСвод КАК БухучетНачисленийСвод
	|		ПО БухучетНачислений.ДатаНачала = БухучетНачисленийСвод.ДатаНачала
	|			И БухучетНачислений.Сотрудник = БухучетНачисленийСвод.Сотрудник
	|			И БухучетНачислений.ФизическоеЛицо = БухучетНачисленийСвод.ФизическоеЛицо
	|			И БухучетНачислений.Подразделение = БухучетНачисленийСвод.Подразделение
	|			И БухучетНачислений.Начисление = БухучетНачисленийСвод.Начисление
	|			И БухучетНачислений.ОблагаетсяЕНВД = БухучетНачисленийСвод.ОблагаетсяЕНВД
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсключаемыеСтроки КАК ИсключаемыеСтроки
	|		ПО БухучетНачислений.ИдентификаторСтроки = ИсключаемыеСтроки.ИдентификаторСтроки
	|ГДЕ
	|	ИсключаемыеСтроки.ИдентификаторСтроки ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ФизическоеЛицо,
	|	Подразделение,
	|	ДатаНачала,
	|	Начисление,
	|	ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтраховыеВзносы.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	СтраховыеВзносы.Организация КАК Организация,
	|	СтраховыеВзносы.ПериодРегистрации КАК ПериодРегистрации,
	|	СтраховыеВзносы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтраховыеВзносы.Сотрудник КАК Сотрудник,
	|	СтраховыеВзносы.Подразделение КАК Подразделение,
	|	СтраховыеВзносы.Начисление КАК Начисление,
	|	СтраховыеВзносы.ВидОперации КАК ВидОперации,
	|	СтраховыеВзносы.ДатаНачала КАК ДатаНачала,
	|	СтраховыеВзносы.Сумма КАК Сумма,
	|	ЕСТЬNULL(БухучетНачислений.ПодразделениеУчетаЗатрат, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК ПодразделениеУчетаЗатрат,
	|	ЕСТЬNULL(БухучетНачислений.СпособОтраженияЗарплатыВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка)) КАК СпособОтраженияЗарплатыВБухучете,
	|	ЕСТЬNULL(БухучетНачислений.СтатьяФинансирования, ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)) КАК СтатьяФинансирования,
	|	ЕСТЬNULL(БухучетНачислений.СтатьяРасходов, ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)) КАК СтатьяРасходов,
	|	ЕСТЬNULL(БухучетНачислений.База, СтраховыеВзносы.Сумма) КАК База,
	|	ЕСТЬNULL(БухучетНачислений.ПериодПринятияРасходов, СтраховыеВзносы.ПериодРегистрации) КАК ПериодПринятияРасходов,
	|	ЕСТЬNULL(БухучетНачислений.ВидОперации, ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка)) КАК ВидОперацииНачисления,
	|	СтраховыеВзносы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	ВЫБОР
	|		КОГДА БухучетНачислений.ВидОперации ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НетДанныхБухучета
	|ПОМЕСТИТЬ ВТТаблицаКоэффициентов
	|ИЗ
	|	ВТВзносы КАК СтраховыеВзносы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетНачисленийБаза КАК БухучетНачислений
	|		ПО СтраховыеВзносы.Сотрудник = БухучетНачислений.Сотрудник
	|			И СтраховыеВзносы.ФизическоеЛицо = БухучетНачислений.ФизическоеЛицо
	|			И СтраховыеВзносы.Подразделение = БухучетНачислений.Подразделение
	|			И СтраховыеВзносы.ОблагаетсяЕНВД = БухучетНачислений.ОблагаетсяЕНВД
	|			И СтраховыеВзносы.Начисление = БухучетНачислений.Начисление
	|			И СтраховыеВзносы.ДатаНачала = БухучетНачислений.ДатаНачала
	|			И (БухучетНачислений.База <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетНачисленийБаза
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетНачисленийСвод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиБезБухучета.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	СтрокиБезБухучета.Организация КАК Организация,
	|	СтрокиБезБухучета.ПериодРегистрации КАК ПериодРегистрации,
	|	СтрокиБезБухучета.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтрокиБезБухучета.Сотрудник КАК Сотрудник,
	|	СтрокиБезБухучета.Подразделение КАК Подразделение,
	|	СтрокиБезБухучета.Начисление КАК НачислениеУдержание,
	|	СтрокиБезБухучета.ДатаНачала КАК ДатаНачала,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОснование,
	|	СтрокиБезБухучета.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СтрокиБезБухучета.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТВзносыБезБазы
	|ИЗ
	|	ВТТаблицаКоэффициентов КАК СтрокиБезБухучета
	|ГДЕ
	|	СтрокиБезБухучета.НетДанныхБухучета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВзносыБезБазы.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	ВТВзносыБезБазы КАК ВзносыБезБазы";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		// Есть взносы без распределения.
		
		ОтражениеЗарплатыВУчете.СоздатьВТНачислениеУдержаниеВидОперации(МенеджерВременныхТаблиц);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтрокиБезБухучета.ИдентификаторСтроки,
		|	СтрокиБезБухучета.Организация,
		|	СтрокиБезБухучета.ПериодРегистрации,
		|	СтрокиБезБухучета.ФизическоеЛицо,
		|	СтрокиБезБухучета.Сотрудник КАК Сотрудник,
		|	СтрокиБезБухучета.Подразделение КАК Подразделение,
		|	ЕСТЬNULL(НачисленияВидОперации.ВидОперации, ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НачисленоДоход)) КАК ВидОперации,
		|	СтрокиБезБухучета.НачислениеУдержание КАК Начисление,
		|	ВЫБОР
		|		КОГДА СтрокиБезБухучета.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА СтрокиБезБухучета.ПериодРегистрации
		|		ИНАЧЕ СтрокиБезБухучета.ДатаНачала
		|	КОНЕЦ КАК ДатаНачала,
		|	СтрокиБезБухучета.Сумма,
		|	СтрокиБезБухучета.ОблагаетсяЕНВД,
		|	КОНЕЦПЕРИОДА(ВЫБОР
		|			КОГДА СтрокиБезБухучета.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА СтрокиБезБухучета.ПериодРегистрации
		|			ИНАЧЕ СтрокиБезБухучета.ДатаНачала
		|		КОНЕЦ, МЕСЯЦ) КАК ДатаОкончания
		|ИЗ
		|	ВТВзносыБезБазы КАК СтрокиБезБухучета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеУдержаниеВидОперации КАК НачисленияВидОперации
		|		ПО СтрокиБезБухучета.НачислениеУдержание = НачисленияВидОперации.НачислениеУдержание";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ТаблицаНачислений = ОтражениеЗарплатыВУчете.НоваяТаблицаНачислений();
		ТаблицаНачислений.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
		ТаблицаНачислений.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ТаблицаНачислений.Добавить(), Выборка);
		КонецЦикла;
		
		ЗапросБухучетНачислений = Новый Запрос;
		ЗапросБухучетНачислений.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		ЗапросБухучетНачислений.УстановитьПараметр("ТаблицаНачислений", ТаблицаНачислений);
		ЗапросБухучетНачислений.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаНачислений.ИдентификаторСтроки,
		|	ТаблицаНачислений.Организация,
		|	ТаблицаНачислений.ПериодРегистрации,
		|	ТаблицаНачислений.ФизическоеЛицо,
		|	ТаблицаНачислений.Сотрудник,
		|	ТаблицаНачислений.Подразделение,
		|	ТаблицаНачислений.Подразделение КАК ТерриторияВыполненияРаботВОрганизации,
		|	ТаблицаНачислений.ВидОперации,
		|	ТаблицаНачислений.Начисление,
		|	ТаблицаНачислений.ДатаНачала,
		|	ТаблицаНачислений.ДатаОкончания,
		|	ТаблицаНачислений.ДокументОснование,
		|	ТаблицаНачислений.Сумма,
		|	ТаблицаНачислений.ОблагаетсяЕНВД
		|ПОМЕСТИТЬ ВТНачисленияДляРаспределения
		|ИЗ
		|	&ТаблицаНачислений КАК ТаблицаНачислений";
		ЗапросБухучетНачислений.Выполнить();
		
		ПроцентЕНВД = ?(Не ЗначениеЗаполнено(Организация), Неопределено, 
						ПроцентЕНВД(Организация, ПериодРегистрации));
		
		СоздатьВТБухучетНачислений(Организация, ПериодРегистрации, ПроцентЕНВД, ЗапросБухучетНачислений.МенеджерВременныхТаблиц);
		
		ЗапросБухучетНачислений.Текст = 
		"ВЫБРАТЬ
		|	БухучетНачислений.ПериодРегистрации КАК ПериодРегистрации,
		|	БухучетНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	БухучетНачислений.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
		|	БухучетНачислений.Организация КАК Организация,
		|	БухучетНачислений.Сотрудник КАК Сотрудник,
		|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
		|	БухучетНачислений.Подразделение КАК Подразделение,
		|	БухучетНачислений.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
		|	БухучетНачислений.Начисление КАК Начисление,
		|	БухучетНачислений.ВидОперации КАК ВидОперации,
		|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
		|	БухучетНачислений.ДатаОкончания КАК ДатаОкончания,
		|	БухучетНачислений.ДокументОснование КАК ДокументОснование,
		|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
		|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
		|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
		|	БухучетНачислений.Сумма КАК Сумма,
		|	БухучетНачислений.ВидНачисленияОплатыТрудаДляНУ КАК ВидНачисленияОплатыТрудаДляНУ,
		|	БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
		|ИЗ
		|	ВТБухучетНачислений КАК БухучетНачислений";
		БухучетНачислений = ЗапросБухучетНачислений.Выполнить().Выгрузить();
		
		Запрос.УстановитьПараметр("БухучетНачислений", БухучетНачислений);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	БухучетНачислений.ПериодРегистрации КАК ПериодРегистрации,
		|	БухучетНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	БухучетНачислений.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
		|	БухучетНачислений.Организация КАК Организация,
		|	БухучетНачислений.Сотрудник КАК Сотрудник,
		|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
		|	БухучетНачислений.Подразделение КАК Подразделение,
		|	БухучетНачислений.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
		|	БухучетНачислений.Начисление КАК Начисление,
		|	БухучетНачислений.ВидОперации КАК ВидОперации,
		|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
		|	БухучетНачислений.ДатаОкончания КАК ДатаОкончания,
		|	БухучетНачислений.ДокументОснование КАК ДокументОснование,
		|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
		|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
		|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
		|	БухучетНачислений.Сумма КАК Сумма,
		|	БухучетНачислений.ВидНачисленияОплатыТрудаДляНУ КАК ВидНачисленияОплатыТрудаДляНУ,
		|	БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
		|ПОМЕСТИТЬ ВТБухучетНачисленийБезБазы
		|ИЗ
		|	&БухучетНачислений КАК БухучетНачислений
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БухучетНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	СУММА(БухучетНачислений.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТБухучетНачисленийСвод
		|ИЗ
		|	ВТБухучетНачисленийБезБазы КАК БухучетНачислений
		|
		|СГРУППИРОВАТЬ ПО
		|	БухучетНачислений.ИдентификаторСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БухучетНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	БухучетНачислений.ВидОперации КАК ВидОперации,
		|	БухучетНачислений.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
		|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
		|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
		|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
		|	ВЫБОР
		|		КОГДА БухучетНачислений.Сумма = 0
		|				ИЛИ БухучетНачисленийСвод.Сумма = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ(БухучетНачислений.Сумма / БухучетНачисленийСвод.Сумма КАК ЧИСЛО(25, 10))
		|	КОНЕЦ КАК База
		|ПОМЕСТИТЬ ВТБухучетНачисленийБаза
		|ИЗ
		|	ВТБухучетНачисленийБезБазы КАК БухучетНачислений
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетНачисленийСвод КАК БухучетНачисленийСвод
		|		ПО БухучетНачислений.ИдентификаторСтроки = БухучетНачисленийСвод.ИдентификаторСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаКоэффициентов.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ЕСТЬNULL(БухучетНачисленийБаза.ПодразделениеУчетаЗатрат, ТаблицаКоэффициентов.ПодразделениеУчетаЗатрат) КАК ПодразделениеУчетаЗатрат,
		|	ЕСТЬNULL(БухучетНачисленийБаза.СпособОтраженияЗарплатыВБухучете, ТаблицаКоэффициентов.СпособОтраженияЗарплатыВБухучете) КАК СпособОтраженияЗарплатыВБухучете,
		|	ЕСТЬNULL(БухучетНачисленийБаза.СтатьяФинансирования, ТаблицаКоэффициентов.СтатьяФинансирования) КАК СтатьяФинансирования,
		|	ЕСТЬNULL(БухучетНачисленийБаза.СтатьяРасходов, ТаблицаКоэффициентов.СтатьяРасходов) КАК СтатьяРасходов,
		|	ЕСТЬNULL(БухучетНачисленийБаза.База, ТаблицаКоэффициентов.База) КАК База,
		|	ТаблицаКоэффициентов.Начисление КАК Начисление,
		|	ТаблицаКоэффициентов.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
		|	ЕСТЬNULL(БухучетНачисленийБаза.ВидОперации, ТаблицаКоэффициентов.ВидОперацииНачисления) КАК ВидОперацииНачисления
		|ИЗ
		|	ВТТаблицаКоэффициентов КАК ТаблицаКоэффициентов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетНачисленийБаза КАК БухучетНачисленийБаза
		|		ПО ТаблицаКоэффициентов.ИдентификаторСтроки = БухучетНачисленийБаза.ИдентификаторСтроки";
		ТаблицаКоэффициентов = Запрос.Выполнить().Выгрузить();
		
		Запрос.Текст = 
		"УНИЧТОЖИТЬ ВТБухучетНачисленийБезБазы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТБухучетНачисленийСвод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТБухучетНачисленийБаза";
		Запрос.Выполнить();
							
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаКоэффициентов.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ТаблицаКоэффициентов.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
		|	ТаблицаКоэффициентов.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
		|	ТаблицаКоэффициентов.СтатьяФинансирования КАК СтатьяФинансирования,
		|	ТаблицаКоэффициентов.СтатьяРасходов КАК СтатьяРасходов,
		|	ТаблицаКоэффициентов.База КАК База,
		|	ТаблицаКоэффициентов.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
		|	ТаблицаКоэффициентов.Начисление КАК Начисление,
		|	ТаблицаКоэффициентов.ВидОперацииНачисления КАК ВидОперацииНачисления
		|ИЗ
		|	ВТТаблицаКоэффициентов КАК ТаблицаКоэффициентов";
		ТаблицаКоэффициентов = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	Запрос.Текст = 
	"УНИЧТОЖИТЬ ВТВзносы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВзносыБезБазы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТТаблицаКоэффициентов";
	Запрос.Выполнить();
	
	ТаблицаКоэффициентов.Индексы.Добавить("ИдентификаторСтроки");
	
	ОтражениеВУчетеСтраховыеВзносы = НоваяТаблицыОтражениеВУчетеСтраховыеВзносы();
	
	Отбор = Новый Структура("ИдентификаторСтроки");
	СвойстваЗаполненияПоВзносам = "ФизическоеЛицо,Сотрудник,Подразделение,ОблагаетсяЕНВД,ИдентификаторСтроки,ДатаНачала,ВидОперации";
	Для каждого СтрокаВзносов Из ТаблицаВзносов Цикл
		
		ИдентификаторСтроки = СтрокаВзносов.ИдентификаторСтроки;
		Отбор.ИдентификаторСтроки = ИдентификаторСтроки;
		СтрокиОтражения = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
		Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиОтражения,"База");
		Результаты = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаВзносов.Сумма, Коэффициенты);
		
		Индекс = 0;
		Для Каждого СтрокаОтражения Из СтрокиОтражения Цикл
			
			СтрокаТаблицы = ОтражениеВУчетеСтраховыеВзносы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаОтражения);
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаВзносов, СвойстваЗаполненияПоВзносам);
			СтрокаТаблицы.Сумма = Результаты[Индекс];
			СтрокаТаблицы.ПериодПринятияРасходов = СтрокаОтражения.ПериодПринятияРасходов;
			
			Индекс = Индекс + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ОтражениеВУчетеСтраховыеВзносы", ОтражениеВУчетеСтраховыеВзносы);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтраховыеВзносыПоФизическимЛицам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтраховыеВзносыПоФизическимЛицам.Сотрудник КАК Сотрудник,
	|	СтраховыеВзносыПоФизическимЛицам.Подразделение КАК Подразделение,
	|	СтраховыеВзносыПоФизическимЛицам.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	СтраховыеВзносыПоФизическимЛицам.Начисление КАК Начисление,
	|	СтраховыеВзносыПоФизическимЛицам.ВидОперации КАК ВидОперации,
	|	СтраховыеВзносыПоФизическимЛицам.ВидОперацииНачисления КАК ВидОперацииНачисления,
	|	СтраховыеВзносыПоФизическимЛицам.ДатаНачала КАК ДатаНачала,
	|	СтраховыеВзносыПоФизическимЛицам.СтатьяФинансирования КАК СтатьяФинансирования,
	|	СтраховыеВзносыПоФизическимЛицам.СтатьяРасходов КАК СтатьяРасходов,
	|	СтраховыеВзносыПоФизическимЛицам.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	СтраховыеВзносыПоФизическимЛицам.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СтраховыеВзносыПоФизическимЛицам.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТОтражениеВУчетеСтраховыеВзносы
	|ИЗ
	|	&ОтражениеВУчетеСтраховыеВзносы КАК СтраховыеВзносыПоФизическимЛицам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтраховыеВзносы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтраховыеВзносы.Сотрудник КАК Сотрудник,
	|	СтраховыеВзносы.Подразделение КАК Подразделение,
	|	СтраховыеВзносы.Начисление КАК Начисление,
	|	СтраховыеВзносы.ВидОперацииНачисления КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА СтраховыеВзносы.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА &ПериодРегистрации
	|		ИНАЧЕ СтраховыеВзносы.ДатаНачала
	|	КОНЕЦ КАК ДатаНачала,
	|	СтраховыеВзносы.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	СтраховыеВзносы.СтатьяФинансирования КАК СтатьяФинансирования,
	|	СтраховыеВзносы.СтатьяРасходов КАК СтатьяРасходов,
	|	СтраховыеВзносы.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	СтраховыеВзносы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	ВЫБОР
	|		КОГДА СтраховыеВзносы.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ СтраховыеВзносы.ДатаНачала < &ПериодРегистрации
	|			ТОГДА &ПериодРегистрации
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(СтраховыеВзносы.ДатаНачала, МЕСЯЦ)
	|	КОНЕЦ КАК ПериодПринятияРасходов,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРСПревышения)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРСПревышения,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРДоПредельнойВеличины)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРДоПредельнойВеличины,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРПоСуммарномуТарифу)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРПоСуммарномуТарифу,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРСтраховаяЧасть)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРСтраховая,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРНакопительнаяЧасть)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРНакопительная,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФСС)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ФСС,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФФОМС)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ФФОМС,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ТФОМС)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ТФОМС,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФССНС)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ФССНесчастныеСлучаи,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифЛЭ)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРНаДоплатуЛетчикам,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифШахтеры)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРНаДоплатуШахтерам,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка
	|ПОМЕСТИТЬ ВТБухучетСтраховыхВзносов
	|ИЗ
	|	ВТОтражениеВУчетеСтраховыеВзносы КАК СтраховыеВзносы
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносы.Начисление,
	|	СтраховыеВзносы.Подразделение,
	|	СтраховыеВзносы.ПодразделениеУчетаЗатрат,
	|	СтраховыеВзносы.СтатьяФинансирования,
	|	СтраховыеВзносы.ФизическоеЛицо,
	|	СтраховыеВзносы.СпособОтраженияЗарплатыВБухучете,
	|	СтраховыеВзносы.ОблагаетсяЕНВД,
	|	СтраховыеВзносы.ДатаНачала,
	|	СтраховыеВзносы.Сотрудник,
	|	СтраховыеВзносы.СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА СтраховыеВзносы.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ СтраховыеВзносы.ДатаНачала < &ПериодРегистрации
	|			ТОГДА &ПериодРегистрации
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(СтраховыеВзносы.ДатаНачала, МЕСЯЦ)
	|	КОНЕЦ,
	|	СтраховыеВзносы.ВидОперацииНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОтражениеВУчетеСтраховыеВзносы";
	
	Запрос.Выполнить();

КонецПроцедуры

// Функция объединяет таблицы бухучета начислений и взносов.
//
// Параметры:
//	МенеджерВременныхТаблиц - содержит таблицы ВТБухучетНачислений и ВТБухучетСтраховыхВзносов.
//
//	Возвращаемое значение - таблица значений, см НоваяТаблицаБухучетНачисленнаяЗарплатаИВзносы().
//
Функция ТаблицаНачисленийИВзносовДляБухучета(МенеджерВременныхТаблиц) Экспорт

	ТаблицаНачисленнаяЗарплатаИВзносы = НоваяТаблицаБухучетНачисленнаяЗарплатаИВзносы();
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ВидыОпераций = Новый Массив;
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ДивидендыСотрудников); 
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.Дивиденды);
	Запрос.УстановитьПараметр("ВидыОпераций", ВидыОпераций);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НачисленияИВзносы.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
	|	НачисленияИВзносы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НачисленияИВзносы.Сотрудник КАК Сотрудник,
	|	НачисленияИВзносы.Подразделение КАК Подразделение,
	|	НачисленияИВзносы.ДатаНачала КАК ДатаНачала,
	|	НачисленияИВзносы.Начисление КАК Начисление,
	|	НачисленияИВзносы.ВидОперации КАК ВидОперации,
	|	НачисленияИВзносы.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.СтатьяФинансирования КАК СтатьяФинансирования,
	|	НачисленияИВзносы.СтатьяРасходов КАК СтатьяРасходов,
	|	СУММА(НачисленияИВзносы.Сумма) КАК Сумма,
	|	СУММА(НачисленияИВзносы.ОтпускАвансом) КАК ОтпускАвансом,
	|	НачисленияИВзносы.ВидНачисленияОплатыТрудаДляНУ КАК ВидНачисленияОплатыТрудаДляНУ,
	|	СУММА(НачисленияИВзносы.ПоляВзносов) КАК ПоляВзносов,
	|	НачисленияИВзносы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
	|ИЗ
	|	(ВЫБРАТЬ
	|		НачисленияИВзносы.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
	|		НачисленияИВзносы.ФизическоеЛицо КАК ФизическоеЛицо,
	|		НачисленияИВзносы.Сотрудник КАК Сотрудник,
	|		НачисленияИВзносы.Подразделение КАК Подразделение,
	|		НачисленияИВзносы.ДатаНачала КАК ДатаНачала,
	|		НачисленияИВзносы.ВидОперации КАК ВидОперации,
	|		НачисленияИВзносы.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|		НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|		НачисленияИВзносы.СтатьяФинансирования КАК СтатьяФинансирования,
	|		НачисленияИВзносы.СтатьяРасходов КАК СтатьяРасходов,
	|		СУММА(НачисленияИВзносы.Сумма) КАК Сумма,
	|		СУММА(НачисленияИВзносы.ОтпускАвансом) КАК ОтпускАвансом,
	|		МАКСИМУМ(НачисленияИВзносы.ВидНачисленияОплатыТрудаДляНУ) КАК ВидНачисленияОплатыТрудаДляНУ,
	|		СУММА(НачисленияИВзносы.ПоляВзносов) КАК ПоляВзносов,
	|		НачисленияИВзносы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		НачисленияИВзносы.Начисление КАК Начисление
	|	ИЗ
	|		(ВЫБРАТЬ
	|			БухучетНачислений.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
	|			БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
	|			БухучетНачислений.Сотрудник КАК Сотрудник,
	|			БухучетНачислений.Подразделение КАК Подразделение,
	|			БухучетНачислений.ПодразделениеУчетаЗатрат КАК ПодразделениеУчетаЗатрат,
	|			БухучетНачислений.ДатаНачала КАК ДатаНачала,
	|			БухучетНачислений.Начисление КАК Начисление,
	|			БухучетНачислений.ВидОперации КАК ВидОперации,
	|			БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|			БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|			БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|			БухучетНачислений.Сумма КАК Сумма,
	|			БухучетНачислений.ОтпускАвансом КАК ОтпускАвансом,
	|			БухучетНачислений.ВидНачисленияОплатыТрудаДляНУ КАК ВидНачисленияОплатыТрудаДляНУ,
	|			0 КАК ПоляВзносов,
	|			БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
	|		ИЗ
	|			ВТБухучетНачислений КАК БухучетНачислений
	|		ГДЕ
	|			НЕ БухучетНачислений.ВидОперации В (&ВидыОпераций)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			БухучетСтраховыхВзносов.ПериодПринятияРасходов,
	|			БухучетСтраховыхВзносов.ФизическоеЛицо,
	|			БухучетСтраховыхВзносов.Сотрудник,
	|			БухучетСтраховыхВзносов.Подразделение,
	|			БухучетСтраховыхВзносов.ПодразделениеУчетаЗатрат,
	|			БухучетСтраховыхВзносов.ДатаНачала,
	|			БухучетСтраховыхВзносов.Начисление,
	|			БухучетСтраховыхВзносов.ВидОперации,
	|			БухучетСтраховыхВзносов.СпособОтраженияЗарплатыВБухучете,
	|			БухучетСтраховыхВзносов.СтатьяФинансирования,
	|			БухучетСтраховыхВзносов.СтатьяРасходов,
	|			0,
	|			0,
	|			ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка),
	|			101,
	|			БухучетСтраховыхВзносов.ОблагаетсяЕНВД
	|		ИЗ
	|			ВТБухучетСтраховыхВзносов КАК БухучетСтраховыхВзносов) КАК НачисленияИВзносы
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НачисленияИВзносы.ПериодПринятияРасходов,
	|		НачисленияИВзносы.ФизическоеЛицо,
	|		НачисленияИВзносы.Сотрудник,
	|		НачисленияИВзносы.Подразделение,
	|		НачисленияИВзносы.ДатаНачала,
	|		НачисленияИВзносы.ВидОперации,
	|		НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете,
	|		НачисленияИВзносы.СтатьяФинансирования,
	|		НачисленияИВзносы.СтатьяРасходов,
	|		НачисленияИВзносы.ОблагаетсяЕНВД,
	|		НачисленияИВзносы.Начисление,
	|		НачисленияИВзносы.ПодразделениеУчетаЗатрат) КАК НачисленияИВзносы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО НачисленияИВзносы.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|		ПО НачисленияИВзносы.ПодразделениеУчетаЗатрат = ПодразделенияОрганизаций.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование,
	|	НачисленияИВзносы.ОблагаетсяЕНВД,
	|	НачисленияИВзносы.ВидНачисленияОплатыТрудаДляНУ,
	|	НачисленияИВзносы.СтатьяРасходов,
	|	НачисленияИВзносы.СтатьяФинансирования,
	|	НачисленияИВзносы.ПериодПринятияРасходов,
	|	НачисленияИВзносы.ВидОперации,
	|	НачисленияИВзносы.ФизическоеЛицо,
	|	НачисленияИВзносы.Подразделение,
	|	НачисленияИВзносы.ДатаНачала,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.Сотрудник,
	|	НачисленияИВзносы.Начисление,
	|	НачисленияИВзносы.ПодразделениеУчетаЗатрат
	|
	|ИМЕЮЩИЕ
	|	(СУММА(НачисленияИВзносы.Сумма) <> 0
	|		ИЛИ СУММА(НачисленияИВзносы.ПоляВзносов) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование,
	|	ВидОперации,
	|	СтатьяФинансирования,
	|	СтатьяРасходов,
	|	СпособОтраженияЗарплатыВБухучете";
	
	КолонкиБухучетНачислений = МенеджерВременныхТаблиц.Таблицы["ВТБухучетНачислений"].Колонки;
	Если КолонкиБухучетНачислений.Найти("ОтпускАвансом") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "БухучетНачислений.ОтпускАвансом", "0") 
	КонецЕсли;
	
	ТекстПолейВзносов = "";
	ТекстПолейНулей = "";
	ТекстПолейСуммВзносов = "";
	ТекстПолейСуммВзносовУсловие = "";
	
	ПоляВзносов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(УчетСтраховыхВзносов.ОтражаемыеВУчетеВзносы(Истина));
	Для каждого ИмяПоля Из ПоляВзносов Цикл
		ТекстПолейВзносов = ТекстПолейВзносов + "БухучетСтраховыхВзносов." + ИмяПоля + " КАК " + ИмяПоля + "," + Символы.ПС;
		ТекстПолейСуммВзносов = ТекстПолейСуммВзносов + "СУММА(НачисленияИВзносы." + ИмяПоля + ") КАК " + ИмяПоля + "," + Символы.ПС;
		ТекстПолейСуммВзносовУсловие = ТекстПолейСуммВзносовУсловие + "ИЛИ СУММА(НачисленияИВзносы." + ИмяПоля + ") <> 0" + Символы.ПС;
		ТекстПолейНулей = ТекстПолейНулей + "0 КАК " + ИмяПоля + "," + Символы.ПС;
	КонецЦикла;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "0 КАК ПоляВзносов,", ТекстПолейНулей);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "101,", ТекстПолейВзносов);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИЛИ СУММА(НачисленияИВзносы.ПоляВзносов) <> 0", ТекстПолейСуммВзносовУсловие);
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "СУММА(НачисленияИВзносы.ПоляВзносов) КАК ПоляВзносов,", ТекстПолейСуммВзносов);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаНачисленнаяЗарплатаИВзносы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Если Выборка.ОтпускАвансом <> 0 И Выборка.Сумма <> 0 Тогда
			
			ДополнительнаяСтрока = ТаблицаНачисленнаяЗарплатаИВзносы.Добавить();
			ЗаполнитьЗначенияСвойств(ДополнительнаяСтрока, Выборка);
			ДополнительнаяСтрока.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпускАвансом;
			
			ДоляАванса = Выборка.ОтпускАвансом/Выборка.Сумма;
			НоваяСтрока.Сумма = НоваяСтрока.Сумма - Выборка.ОтпускАвансом;
			ДополнительнаяСтрока.Сумма = Выборка.ОтпускАвансом;
			
			Для каждого ПолеВзносов Из ПоляВзносов Цикл
				
				СуммаВзносаАванс = Окр(Выборка[ПолеВзносов] * ДоляАванса, 2);
				СуммаВзноса = Выборка[ПолеВзносов] - СуммаВзносаАванс;
				
				НоваяСтрока[ПолеВзносов] = СуммаВзноса;
				ДополнительнаяСтрока[ПолеВзносов] = СуммаВзносаАванс;
			
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаНачисленнаяЗарплатаИВзносы;
	
КонецФункции

// Выполняет свертку таблиц значений структуры ДанныеДляОтражения
// 
//	Параметры
// 		ДанныеДляОтражения - структура, содержит таблицы значений
// 		СтрокаКолонкиУдаления - строка, через запятую указаны имена колонок, которые необходимо удалить.
//
Процедура СвернутьДанныеДляОтраженияЗарплатыВБухучете(ДанныеДляОтражения, СтрокаКолонкиУдаления) Экспорт

	КолонкиУдаления = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаКолонкиУдаления);
	
	Для каждого ЭлементСтруктуры Из ДанныеДляОтражения Цикл
		
		КолонкиГруппировок  = Новый Массив;
		КолонкиСуммирования = Новый Массив;
		Для каждого КолонкаТЗ Из ЭлементСтруктуры.Значение.Колонки Цикл
			Если КолонкиУдаления.Найти(КолонкаТЗ.Имя) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если КолонкаТЗ.ТипЗначения.СодержитТип(Тип("Число")) Тогда
				КолонкиСуммирования.Добавить(КолонкаТЗ.Имя);
			Иначе
				КолонкиГруппировок.Добавить(КолонкаТЗ.Имя);
			КонецЕсли;
		КонецЦикла;
		КолонкиСуммирования = СтрСоединить(КолонкиСуммирования, ", ");
		КолонкиГруппировок = СтрСоединить(КолонкиГруппировок, ", ");
		ЭлементСтруктуры.Значение.Свернуть(КолонкиГруппировок, КолонкиСуммирования);
		
		// удалим строки с нулевыми суммами
		Отбор = Новый Структура(КолонкиСуммирования);
		Для каждого ЭлементКоллекции Из Отбор Цикл
			Отбор[ЭлементКоллекции.Ключ] = 0;
		КонецЦикла;
		НайденныеСтроки = ЭлементСтруктуры.Значение.НайтиСтроки(Отбор);
		Для каждого СтрокаТЗ Из НайденныеСтроки Цикл
			ЭлементСтруктуры.Значение.Удалить(СтрокаТЗ);
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры

Процедура ДополнитьСведенияОВзносахДаннымиБухучета(Движения, Организация, ПериодРегистрации, Ссылка, МенеджерВременныхТаблиц, ИмяВременнойТаблицы) Экспорт

	ОтражениеЗарплатыВБухучетеВнутренний.ДополнитьСведенияОВзносахДаннымиБухучета(Движения, Организация, ПериодРегистрации, Ссылка, МенеджерВременныхТаблиц, ИмяВременнойТаблицы);

КонецПроцедуры 

#КонецОбласти

#Область ОписанияТаблицСтруктур

Функция НоваяСтруктураДанныеДляОтраженияЗарплатыВБухучете() Экспорт

	ДанныеДляОтражения = Новый Структура;
	ДанныеДляОтражения.Вставить("НачисленнаяЗарплатаИВзносы", НоваяТаблицаБухучетНачисленнаяЗарплатаИВзносы());
	ДанныеДляОтражения.Вставить("НачисленныйНДФЛ", НоваяТаблицаБухучетНачисленныйНДФЛ());
	ДанныеДляОтражения.Вставить("УдержаннаяЗарплата", НоваяТаблицаБухучетУдержаннаяЗарплата());
	
	Возврат ДанныеДляОтражения;

КонецФункции 

Функция НоваяТаблицаБухучетНачисленнаяЗарплатаИВзносы(КолонкиСуммирования = Неопределено) Экспорт
	
	МассивТиповНачисления = Новый Массив;
	МассивТиповНачисления.Добавить(Тип("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	МассивТиповНачисления.Добавить(Тип("ПланВидовРасчетаСсылка.Начисления"));
	ОтражениеЗарплатыВУчетеВнутренний.ДополнитьМассивТиповНачисления(МассивТиповНачисления);
	
	КолонкиСуммирования = Новый Массив;
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ПодразделениеУчетаЗатрат", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("Начисление", Новый ОписаниеТипов(МассивТиповНачисления));
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("ВидНачисленияОплатыТрудаДляНУ", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыНачисленийОплатыТрудаДляНУ"));
	Таблица.Колонки.Добавить("ПериодПринятияРасходов", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	КолонкиСуммирования.Добавить("Сумма");
	
	Для каждого ИмяПоля Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(УчетСтраховыхВзносов.ОтражаемыеВУчетеВзносы(Истина)) Цикл
		Таблица.Колонки.Добавить(ИмяПоля, Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
		КолонкиСуммирования.Добавить(ИмяПоля);
	КонецЦикла;
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаБухучетНачисленныйНДФЛ() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("КодПоОКАТО", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(11)));
	Таблица.Колонки.Добавить("КодПоОКТМО", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(11)));
	Таблица.Колонки.Добавить("КПП", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(9)));
	Таблица.Колонки.Добавить("КодНалоговогоОргана", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(4)));
	Таблица.Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаБухучетУдержаннаяЗарплата() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ПодразделениеУчетаЗатрат", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ЯвляетсяОснованиемОформленияКассовогоЧека",  Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("ОписаниеУдержанияДляЧека", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицыОтражениеВУчетеСтраховыеВзносы() Экспорт
	
	МассивТиповНачисления = Новый Массив;
	МассивТиповНачисления.Добавить(Тип("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	МассивТиповНачисления.Добавить(Тип("ПланВидовРасчетаСсылка.Начисления"));
	ОтражениеЗарплатыВУчетеВнутренний.ДополнитьМассивТиповНачисления(МассивТиповНачисления);
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ПодразделениеУчетаЗатрат", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("ВидОперацииНачисления", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("Начисление", Новый ОписаниеТипов(МассивТиповНачисления));
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("ПериодПринятияРасходов", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	Таблица.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	
	Возврат Таблица;
	
КонецФункции

Функция ОписаниеПараметровДляРасчетаОценочныхОбязательствОтпусков() Экспорт

	ПараметрыДляРасчета = Новый Структура;
	ПараметрыДляРасчета.Вставить("ОстаткиОтпусков", НоваяТаблицаОстаткиОтпусков());
	ПараметрыДляРасчета.Вставить("ФондОплатыТрудаИСтраховыеВзносы", НоваяТаблицаФондОплатыТрудаИСтраховыеВзносы());
	
	Возврат ПараметрыДляРасчета;

КонецФункции 

Функция НоваяТаблицаОстаткиОтпусков() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ОстатокОтпусков", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 2)));
	Таблица.Колонки.Добавить("ОтпускАвансом", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 2)));
	Таблица.Колонки.Добавить("СреднийЗаработок", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("МестоВСтруктуреПредприятия", Метаданные.ОпределяемыеТипы.МестоВСтруктуреПредприятия.Тип);
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
	
	// вспомогательная колонка
	Таблица.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаФондОплатыТрудаИСтраховыеВзносы() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ПодразделениеУчетаЗатрат", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("МестоВСтруктуреПредприятия", Метаданные.ОпределяемыеТипы.МестоВСтруктуреПредприятия.Тип);
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("ФондОплатыТруда", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("СтраховыеВзносы", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ФССНесчастныеСлучаи", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	// вспомогательные колонки
	Таблица.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("Начисление", Новый ОписаниеТипов("ПланВидовРасчетаСсылка.Начисления"));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаНачисленныеОтпуска() Экспорт

	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("СтраховыеВзносы", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ФССНесчастныеСлучаи", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Возврат Таблица;

КонецФункции

#КонецОбласти

#Область БлокПроцедурИФункцийДляРедактированияПроцентаЕнвдНаФормеДокумента

Процедура ОбъектПриЧтенииНаСервереПроцентЕНВД(Форма, Организация, МесяцНачисления, ДобавлятьЭлементыФормы = Истина, ДобавлятьРеквизитыФормы = Истина, ОтложенноеИзменение = Ложь) Экспорт

	ДополнитьФормуРеквизитыРедактированияЕНВД(Форма, ДобавлятьЭлементыФормы, ДобавлятьРеквизитыФормы, ОтложенноеИзменение);
	Если ДобавлятьЭлементыФормы Тогда
		ПолучитьФункциональнуюОпциюФормыПлательщикЕНВДЗарплатаКадры(Форма);
		ПрочитатьСведенияПроцентЕНВД(Форма, Организация, МесяцНачисления);
		УстановитьТекстПредупрежденияПроцентЕНВДСтрока(Форма);
		ОтражениеЗарплатыВБухучетеКлиентСервер.ОбновитьИнфонадписьПроцентЕНВД(Форма);
	КонецЕсли;

КонецПроцедуры

Процедура ОбъектПриСозданииНаСервереПроцентЕНВД(Форма, Организация, МесяцНачисления) Экспорт

	ДополнитьФормуРеквизитыРедактированияЕНВД(Форма);
	ПолучитьФункциональнуюОпциюФормыПлательщикЕНВДЗарплатаКадры(Форма);
	ПрочитатьСведенияПроцентЕНВД(Форма, Организация, МесяцНачисления);
	УстановитьТекстПредупрежденияПроцентЕНВДСтрока(Форма);
	ОтражениеЗарплатыВБухучетеКлиентСервер.ОбновитьИнфонадписьПроцентЕНВД(Форма);

КонецПроцедуры

Процедура ДополнитьФормуРеквизитыРедактированияЕНВД(Форма, ДобавлятьЭлементыФормы = Истина, ДобавлятьРеквизитыФормы = Истина, ОтложенноеИзменение = Ложь)
	
	Если ДобавлятьРеквизитыФормы Тогда
		
		ДобавляемыеРеквизиты = Новый Массив;
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ОрганизацияПлательщикЕНВДЗарплатаКадры", Новый ОписаниеТипов("Булево")));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПроцентЕНВД", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(8,5))));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПроцентЕНВДИнфоНадпись", Новый ОписаниеТипов("Строка")));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПроцентЕНВДСтрока", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(9))));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПроцентЕНВДСтрокаПрежнееЗначение", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(9))));
		
		МассивИменРеквизитовФормы = Новый Массив;
		ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(Форма, МассивИменРеквизитовФормы);
		ЗарплатаКадры.ИзменитьРеквизитыФормы(Форма, ДобавляемыеРеквизиты, МассивИменРеквизитовФормы,, НЕ ДобавлятьЭлементыФормы);
	
	КонецЕсли;
	
	Если ДобавлятьЭлементыФормы Тогда
		Если Форма.Элементы.Найти("ПроцентЕНВДСтрока") = Неопределено Тогда
			
			РедактированиеДоступно = ДоступноИзменениеПроцентаЕНВДДляУчетаЗатратНаЗарплату();
			
			ЭлементРодитель = Форма.Элементы.ГруппаЕНВД;
			ПолеВвода = Форма.Элементы.Вставить("ПроцентЕНВДСтрока", Тип("ПолеФормы"), ЭлементРодитель);
			ПолеВвода.ПутьКДанным = "ПроцентЕНВДСтрока";
			ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
			ПолеВвода.Заголовок = "% ЕНВД";
			ПолеВвода.Подсказка = НСтр("ru = 'Применяется к начислениям сотрудников, для которых указано отношение к ЕНВД: ""Определяется ежемесячно процентом""'");
			ПолеВвода.КнопкаВыбора = Истина;
			ПолеВвода.ЦветТекстаЗаголовка = ЦветаСтиля.ПоясняющийТекст;
			ПолеВвода.КартинкаКнопкиВыбора = БиблиотекаКартинок.Калькулятор;
			ПолеВвода.Ширина = 6;
			ПолеВвода.УстановитьДействие("НачалоВыбора", "Подключаемый_ПроцентЕНВДСтрокаНачалоВыбора");
			ПолеВвода.УстановитьДействие("ПриИзменении", "Подключаемый_ПроцентЕНВДСтрокаПриИзменении");
			ПолеВвода.ТолькоПросмотр = НЕ РедактированиеДоступно Или Форма.ТолькоПросмотр;
			
			ПолеНадпись = Форма.Элементы.Вставить("ПроцентЕНВДИнфоНадпись", Тип("ПолеФормы"), ЭлементРодитель);
			ПолеНадпись.ПутьКДанным = "ПроцентЕНВДИнфоНадпись";
			ПолеНадпись.Вид = ВидПоляФормы.ПолеНадписи;
			ПолеНадпись.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			ПолеНадпись.ЦветТекста = ЦветаСтиля.ПоясняющийОшибкуТекст;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьФункциональнуюОпциюФормыПлательщикЕНВДЗарплатаКадры(Форма)
	
	Форма.ОрганизацияПлательщикЕНВДЗарплатаКадры = Форма.ПолучитьФункциональнуюОпциюФормы("ПлательщикЕНВДЗарплатаКадры");
	Форма.Элементы.ГруппаЕНВД.Видимость = Форма.ОрганизацияПлательщикЕНВДЗарплатаКадры;

КонецПроцедуры

Процедура ПрочитатьСведенияПроцентЕНВД(Форма, Организация, МесяцНачисления)

	ТекущийПроцентЕНВД = ПроцентЕНВД(Организация, МесяцНачисления);
	Если ТекущийПроцентЕНВД = Неопределено Тогда
		Форма.ПроцентЕНВД = 0;
		Форма.ПроцентЕНВДСтрокаПрежнееЗначение = "";
		Форма.ПроцентЕНВДСтрока = "";
	Иначе
		Форма.ПроцентЕНВД = ТекущийПроцентЕНВД;
		Форма.ПроцентЕНВДСтрока = Формат(Форма.ПроцентЕНВД, "ЧЦ=8; ЧДЦ=5; ЧН=0");
		Форма.ПроцентЕНВДСтрокаПрежнееЗначение = Форма.ПроцентЕНВДСтрока;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьТекстПредупрежденияПроцентЕНВДСтрока(Форма)

	ТекстПредупреждения = Форма.ТекстПредупрежденияПриРедактированииПроцентаЕНВД();
	Форма.Элементы.ПроцентЕНВДСтрока.ПредупреждениеПриРедактировании = ТекстПредупреждения;

КонецПроцедуры

Процедура ОбработатьИзменениеОрганизацииПроцентЕНВД(Форма, Организация, МесяцНачисления) Экспорт
	
	ПолучитьФункциональнуюОпциюФормыПлательщикЕНВДЗарплатаКадры(Форма);
	ПрочитатьСведенияПроцентЕНВД(Форма, Организация, МесяцНачисления);
	
	// Установим текст предупреждения при редактировании.
	УстановитьТекстПредупрежденияПроцентЕНВДСтрока(Форма);
	ОтражениеЗарплатыВБухучетеКлиентСервер.ОбновитьИнфонадписьПроцентЕНВД(Форма);
	
КонецПроцедуры

Процедура ОбработатьИзменениеМесяцНачисленияПроцентЕНВД(Форма, Организация, МесяцНачисления) Экспорт
	
	ПолучитьФункциональнуюОпциюФормыПлательщикЕНВДЗарплатаКадры(Форма);
	ПрочитатьСведенияПроцентЕНВД(Форма, Организация, МесяцНачисления);
	
	// Установим текст предупреждения при редактировании.
	УстановитьТекстПредупрежденияПроцентЕНВДСтрока(Форма);
	ОтражениеЗарплатыВБухучетеКлиентСервер.ОбновитьИнфонадписьПроцентЕНВД(Форма);
	
КонецПроцедуры

Процедура ЗарегистрироватьПроцентЕНВДПослеРедактированияВФорме(Организация, Месяц, ПроцентЕНВД, ПроцентЕНВДСтрока) Экспорт

	Если ПустаяСтрока(ПроцентЕНВДСтрока) Тогда
		ПроцентЕНВДДляРегистрации = Неопределено;
	Иначе
		ПроцентЕНВДДляРегистрации = ПроцентЕНВД;
	КонецЕсли;
	ЗарегистрироватьПроцентЕНВД(Организация, Месяц, ПроцентЕНВДДляРегистрации);

КонецПроцедуры

#КонецОбласти

#Область БлокФункцийПервоначальногоЗаполненияИОбновленияИБ
//

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.11.34";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучете.УдалитьРольОтражениеЗарплатыВБухгалтерскомУчете";
	
КонецПроцедуры

Процедура ЗаполнитьСтатьюРасходовВДокументеОтражениеЗарплатыВБухучете(ПараметрыОбновления = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыКОбработке.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТДокументыКОбработке
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ОтражениеЗарплатыВБухучетеНачисленнаяЗарплатаИВзносы.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ОтражениеЗарплатыВБухучете.НачисленнаяЗарплатаИВзносы КАК ОтражениеЗарплатыВБухучетеНачисленнаяЗарплатаИВзносы
	|	ГДЕ
	|		ОтражениеЗарплатыВБухучетеНачисленнаяЗарплатаИВзносы.СтатьяРасходов = ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ОтражениеЗарплатыВБухучетеНачисленнаяЗарплатаИВзносы.Ссылка
	|	ИЗ
	|		Документ.ОтражениеЗарплатыВБухучете.НачисленныйНДФЛ КАК ОтражениеЗарплатыВБухучетеНачисленнаяЗарплатаИВзносы
	|	ГДЕ
	|		ОтражениеЗарплатыВБухучетеНачисленнаяЗарплатаИВзносы.СтатьяРасходов = ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ОтражениеЗарплатыВБухучетеНачисленнаяЗарплатаИВзносы.Ссылка
	|	ИЗ
	|		Документ.ОтражениеЗарплатыВБухучете.УдержаннаяЗарплата КАК ОтражениеЗарплатыВБухучетеНачисленнаяЗарплатаИВзносы
	|	ГДЕ
	|		ОтражениеЗарплатыВБухучетеНачисленнаяЗарплатаИВзносы.СтатьяРасходов = ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		И ОтражениеЗарплатыВБухучетеНачисленнаяЗарплатаИВзносы.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НачисленоПроцентовПоЗайму)) КАК ДокументыКОбработке
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтражениеЗарплатыВБухучете.Ссылка КАК Ссылка,
	|	ОтражениеЗарплатыВБухучете.Проведен КАК Проведен
	|ИЗ
	|	Документ.ОтражениеЗарплатыВБухучете КАК ОтражениеЗарплатыВБухучете
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыКОбработке КАК ДокументыКОбработке
	|		ПО ОтражениеЗарплатыВБухучете.Ссылка = ДокументыКОбработке.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОтражениеЗарплатыВБухучете.ПериодРегистрации УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	СтатьиРасходовПоВидуОперации 		= ОтражениеЗарплатыВУчете.СтатьиРасходовПоВидуОперации();
	СтатьиРасходовПоСпособамРасчетов 	= ЗарплатаКадры.СтатьиРасходовПоСпособамРасчетовСФизическимиЛицами();
	СтатьяРасчетыПоОплатеТруда 			= СтатьиРасходовПоСпособамРасчетов[Перечисления.СпособыРасчетовСФизическимиЛицами.ОплатаТруда];
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ.ОтражениеЗарплатыВБухучете", "Ссылка", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		Для каждого СтрокаТЧ Из ДокументОбъект.НачисленнаяЗарплатаИВзносы Цикл
			Если Не ЗначениеЗаполнено(СтрокаТЧ.СтатьяРасходов) Тогда
				НоваяСтатьяРасходов = СтатьиРасходовПоВидуОперации[СтрокаТЧ.ВидОперации];
				Если Не ЗначениеЗаполнено(НоваяСтатьяРасходов) Тогда
					НоваяСтатьяРасходов = СтатьяРасчетыПоОплатеТруда;	
				КонецЕсли;
				СтрокаТЧ.СтатьяРасходов = НоваяСтатьяРасходов;
			КонецЕсли;
		КонецЦикла;
		
		Для каждого СтрокаТЧ Из ДокументОбъект.НачисленныйНДФЛ Цикл
			Если Не ЗначениеЗаполнено(СтрокаТЧ.СтатьяРасходов) Тогда
				НоваяСтатьяРасходов = СтатьиРасходовПоВидуОперации[СтрокаТЧ.ВидОперации];
				Если Не ЗначениеЗаполнено(НоваяСтатьяРасходов) Тогда
					НоваяСтатьяРасходов = СтатьяРасчетыПоОплатеТруда;	
				КонецЕсли;
				СтрокаТЧ.СтатьяРасходов = НоваяСтатьяРасходов;
			КонецЕсли;
		КонецЦикла;
		
		Для каждого СтрокаТЧ Из ДокументОбъект.УдержаннаяЗарплата Цикл
			Если СтрокаТЧ.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.НачисленоПроцентовПоЗайму Тогда
				Продолжить;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаТЧ.СтатьяРасходов) Тогда
				НоваяСтатьяРасходов = СтатьиРасходовПоВидуОперации[СтрокаТЧ.ВидОперации];
				Если Не ЗначениеЗаполнено(НоваяСтатьяРасходов) Тогда
					НоваяСтатьяРасходов = СтатьяРасчетыПоОплатеТруда;	
				КонецЕсли;
				СтрокаТЧ.СтатьяРасходов = НоваяСтатьяРасходов;
			КонецЕсли;
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект,,, РежимЗаписиДокумента.Запись);
		
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;

КонецПроцедуры

// Удаление роли из пользовательских профилей.
//
Процедура УдалитьРольОтражениеЗарплатыВБухгалтерскомУчете() Экспорт
	
	ОтражениеЗарплатыВБухучетеВнутренний.УдалитьРольОтражениеЗарплатыВБухгалтерскомУчете();
	
КонецПроцедуры

#КонецОбласти

#Область Прочие

// Создает временную таблицу ВТНачислениеВидНачисленияОплатыТрудаДляНУ с полями.
//	Начисление -  тип ПланВидовРасчетаСсылка.Начисление,  ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний
//	ВидНачисленияОплатыТрудаДляНУ - тип ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний.
//
Процедура СоздатьВТНачислениеВидНачисленияОплатыТрудаДляНУ(МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Ссылка КАК Начисление,
	|	Начисления.ВидНачисленияДляНУ КАК ВидНачисленияОплатыТрудаДляНУ
	|ПОМЕСТИТЬ ВТНачислениеВидНачисленияОплатыТрудаДляНУ
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыОсобыхНачисленийИУдержаний.Ссылка,
	|	ВЫБОР
	|		КОГДА ВидыОсобыхНачисленийИУдержаний.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ДоговорАвторскогоЗаказа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.пп21ст255)
	|		КОГДА ВидыОсобыхНачисленийИУдержаний.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ДоговорРаботыУслуги)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.пп21ст255)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка)
	|	КОНЕЦ
	|ИЗ
	|	Перечисление.ВидыОсобыхНачисленийИУдержаний КАК ВидыОсобыхНачисленийИУдержаний
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Начисление";
	Запрос.Выполнить();

КонецПроцедуры

Процедура УстановитьСписокВыбораОтношениеКЕНВД(ЭлементФормы, ИмяЭлемента) Экспорт

	ОтражениеЗарплатыВБухучетеВнутренний.УстановитьСписокВыбораОтношениеКЕНВД(ЭлементФормы, ИмяЭлемента);

КонецПроцедуры

Процедура ЗаполнитьРегистрациюВНалоговомОрганеВКоллекцииСтрок(Организация, Период, КоллекцияНачисленныйНДФЛ) Экспорт
	
	ОтражениеЗарплатыВБухучетеВнутренний.ЗаполнитьРегистрациюВНалоговомОрганеВКоллекцииСтрок(Организация, Период, КоллекцияНачисленныйНДФЛ);
	
КонецПроцедуры

Процедура УстановитьВидимостьКолонокКодовТерриторийДокументОтражениеВУчете(Форма, Месяц, ИмяТаблицыНДФЛ = "НачисленныйНДФЛ") Экспорт

	ДатаПереходаНаКодыОКТМО = УчетНДФЛ.ДатаПереходаНаКодыОКТМО();
	
	ВидимостьКолонок = Новый Соответствие;
	ВидимостьКолонок.Вставить("КодПоОКАТО", Месяц < ДатаПереходаНаКодыОКТМО);
	ВидимостьКолонок.Вставить("КодПоОКТМО",Месяц >= ДобавитьМесяц(ДатаПереходаНаКодыОКТМО, -12));
	
	Для Каждого КлючИЗначение Из ВидимостьКолонок Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы, ИмяТаблицыНДФЛ + КлючИЗначение.Ключ, "Видимость", КлючИЗначение.Значение);
	КонецЦикла;

КонецПроцедуры

Процедура УстановитьВидимостьКолонкиКПП(Форма, Организация, ИмяТаблицы = "НачисленныйНДФЛ") Экспорт

	ЮридическоеФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация,"ЮридическоеФизическоеЛицо");
	ОрганизацияЮрлицо = ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, ИмяТаблицы + "КПП", "Видимость", ОрганизацияЮрлицо);

КонецПроцедуры

Процедура УстановитьУсловноеОформлениеДокументОтражениеВУчете(Форма) Экспорт
	
	// Таблица НачисленныйНДФЛ, поля ОКАТО, КПП.
	ЭлементОформления = Форма.УсловноеОформление.Элементы.Добавить();
	// Вид оформления
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	// Условие для оформления
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.НачисленныйНДФЛ.РегистрацияВНалоговомОргане");
	// Оформляемое поле
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("НачисленныйНДФЛКодПоОКАТО");
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("НачисленныйНДФЛКодПоОКТМО");
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("НачисленныйНДФЛКПП");
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("НачисленныйНДФЛКодНалоговогоОргана");
	
	// Таблица Удержания, поле Контрагент.
	СписокУдержаний = Новый СписокЗначений;
	СписокУдержаний.ЗагрузитьЗначения(ВидыОперацийУдержанийТребующиеВВодаКонтрагента());
	
	ЭлементОформления = Форма.УсловноеОформление.Элементы.Добавить();
	// Вид оформления
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	// Условие для оформления
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеВСписке;
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.УдержаннаяЗарплата.ВидОперации");
	ЭлементОтбора.ПравоеЗначение = СписокУдержаний;
	// Оформляемое поле
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("УдержаннаяЗарплатаКонтрагент");
	
	// Таблица Удержания, поле ОписаниеУдержанияДляЧека.
	ЭлементОформления = Форма.УсловноеОформление.Элементы.Добавить();
	// Вид оформления
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	// Условие для оформления
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.УдержаннаяЗарплата.ЯвляетсяОснованиемОформленияКассовогоЧека");
	ЭлементОтбора.ПравоеЗначение = Ложь;
	// Оформляемое поле
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("УдержаннаяЗарплатаОписаниеУдержанияДляЧека");
	
	// Таблица Удержания, поле СтатьяРасходов.
	ЭлементОформления = Форма.УсловноеОформление.Элементы.Добавить();
	// Вид оформления
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	// Условие для оформления
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.УдержаннаяЗарплата.ВидОперации");
	ЭлементОтбора.ПравоеЗначение = Перечисления.ВидыОперацийПоЗарплате.НачисленоПроцентовПоЗайму;
	// Оформляемое поле
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("УдержаннаяЗарплатаСтатьяРасходов");
	
	// Таблица НачисленнаяЗарплатаИВзносы, поле НачисленнаяЗарплатаИВзносыСпособОтраженияЗарплатыВБухучете.
	СписокНачислений = Новый СписокЗначений;
	СписокНачислений.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФСС); 
	СписокНачислений.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФССНС);
	СписокНачислений.Добавить(Перечисления.ВидыОперацийПоЗарплате.КомпенсацияЗаЗадержкуЗарплаты);
	СписокНачислений.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПособиеНаПогребение);
	
	ЭлементОформления = Форма.УсловноеОформление.Элементы.Добавить();
	// Вид оформления
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	// Условие для оформления
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.НачисленнаяЗарплатаИВзносы.ВидОперации");
	ЭлементОтбора.ПравоеЗначение = СписокНачислений;
	// Оформляемое поле
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("НачисленнаяЗарплатаИВзносыСпособОтраженияЗарплатыВБухучете");
	
КонецПроцедуры

Функция ВидыОперацийУдержанийТребующиеВВодаКонтрагента() Экспорт

	ВидыОпераций = Новый Массив;
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.АлиментыПрочиеИсполнительныеЛисты);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.АлиментыПрочиеИсполнительныеЛистыКонтрагенты);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ВознаграждениеПлатежногоАгента);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ВознаграждениеПлатежногоАгентаКонтрагенты);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.Профвзносы);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ДобровольныеВзносыВНПФ);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПрочиеУдержания);
	
	Возврат ВидыОпераций;

КонецФункции

Процедура СоздатьВТСведенияОБухучетеНачислений(МенеджерВременныхТаблиц)

	ОтражениеЗарплатыВБухучетеВнутренний.СоздатьВТСведенияОБухучетеНачислений(МенеджерВременныхТаблиц);

КонецПроцедуры

Функция ДоступноИзменениеПроцентаЕНВДДляУчетаЗатратНаЗарплату()
	
	Возврат ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ПроцентЕНВДДляУчетаЗатратНаЗарплату);
	
КонецФункции

// МенеджерВременныхТаблиц - содержит временные таблицы
//			ВТБухучетНачисленийДляРегистрацииДоходовСтраховыхВзносов - с именем в свойстве ИмяВТБухучетНачислений
//			ВТНачисленияДляРегистрацииДоходовСтраховыхВзносов -  с именем в свойстве ИмяВТНачисления.
//
Процедура СоздатьВТНачисленияСДаннымиЕНВДПоТаблицеБухучетНачислений(МенеджерВременныхТаблиц, ИмяВТБухучетНачислений, ИмяВТНачисления) Экспорт

	УдалитьВТ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНачислений.Сотрудник КАК Сотрудник,
	|	СписокНачислений.ПодразделениеОрганизации КАК Подразделение,
	|	СписокНачислений.Начисление КАК Начисление,
	|	СписокНачислений.ДатаНачала КАК ДатаНачала
	|ПОМЕСТИТЬ ВТНачисленияИсходнаяТаблица
	|ИЗ
	|	ВТНачисленияДляРегистрацииДоходовСтраховыхВзносов КАК СписокНачислений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачислений.Сотрудник КАК Сотрудник,
	|	БухучетНачислений.Подразделение КАК Подразделение,
	|	БухучетНачислений.Начисление КАК Начисление,
	|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
	|	БухучетНачислений.ОблагаетсяЕНВД,
	|	СУММА(БухучетНачислений.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТБухучетНачисленийПоСотрудникам
	|ИЗ
	|	ВТБухучетНачисленийДляРегистрацииДоходовСтраховыхВзносов КАК БухучетНачислений
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.ДатаНачала,
	|	БухучетНачислений.ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.Начисление КАК Начисление,
	|	Начисления.ДатаНачала КАК ДатаНачала,
	|	СУММА(Начисления.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТБухучетНачисленийПоСотрудникамСвод
	|ИЗ
	|	ВТБухучетНачисленийПоСотрудникам КАК Начисления
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.Подразделение,
	|	Начисления.Начисление,
	|	Начисления.Сотрудник,
	|	Начисления.ДатаНачала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленияСвод.Сотрудник КАК Сотрудник,
	|	НачисленияСвод.Подразделение КАК Подразделение,
	|	НачисленияСвод.Начисление КАК Начисление,
	|	НачисленияСвод.ДатаНачала КАК ДатаНачала,
	|	ВЫБОР
	|		КОГДА Начисления.ОблагаетсяЕНВД ЕСТЬ NULL 
	|				ИЛИ НачисленияСвод.Сумма = 0
	|			ТОГДА 0
	|		КОГДА Начисления.Сумма = НачисленияСвод.Сумма
	|			ТОГДА 1
	|		ИНАЧЕ ВЫРАЗИТЬ(Начисления.Сумма / НачисленияСвод.Сумма КАК ЧИСЛО(25, 10))
	|	КОНЕЦ КАК ДоляЕНВД
	|ПОМЕСТИТЬ ВТНачисленияПоСотрудникамДоляЕНВД
	|ИЗ
	|	ВТБухучетНачисленийПоСотрудникамСвод КАК НачисленияСвод
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетНачисленийПоСотрудникам КАК Начисления
	|		ПО НачисленияСвод.Сотрудник = Начисления.Сотрудник
	|			И НачисленияСвод.Подразделение = Начисления.Подразделение
	|			И НачисленияСвод.Начисление = Начисления.Начисление
	|			И НачисленияСвод.ДатаНачала = Начисления.ДатаНачала
	|			И (Начисления.ОблагаетсяЕНВД)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленияИсходная.Сотрудник,
	|	НачисленияИсходная.Подразделение,
	|	НачисленияИсходная.Начисление,
	|	НачисленияИсходная.ДатаНачала,
	|	ВЫБОР
	|		КОГДА НачисленияПоСотрудникамДоляЕНВД.ДоляЕНВД ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ НачисленияПоСотрудникамДоляЕНВД.ДоляЕНВД
	|	КОНЕЦ КАК ДоляЕНВД
	|ПОМЕСТИТЬ ВТНачисленияСДаннымиЕНВД
	|ИЗ
	|	ВТНачисленияИсходнаяТаблица КАК НачисленияИсходная
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленияПоСотрудникамДоляЕНВД КАК НачисленияПоСотрудникамДоляЕНВД
	|		ПО НачисленияИсходная.Сотрудник = НачисленияПоСотрудникамДоляЕНВД.Сотрудник
	|			И НачисленияИсходная.Подразделение = НачисленияПоСотрудникамДоляЕНВД.Подразделение
	|			И НачисленияИсходная.Начисление = НачисленияПоСотрудникамДоляЕНВД.Начисление
	|			И НачисленияИсходная.ДатаНачала = НачисленияПоСотрудникамДоляЕНВД.ДатаНачала";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТБухучетНачисленийДляРегистрацииДоходовСтраховыхВзносов", ИмяВТБухучетНачислений);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисленияДляРегистрацииДоходовСтраховыхВзносов", ИмяВТНачисления);
	Запрос.Выполнить();
	
	УдалитьВТ.Добавить("ВТНачисленияИсходнаяТаблица");
	УдалитьВТ.Добавить("ВТБухучетНачисленийПоСотрудникам");
	УдалитьВТ.Добавить("ВТБухучетНачисленийПоСотрудникамСвод");
	УдалитьВТ.Добавить("ВТНачисленияПоСотрудникамДоляЕНВД");
	
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, УдалитьВТ);

КонецПроцедуры

Процедура СоздатьВТНачисленияСДаннымиЕНВДНулеваяДоляЕНВД(МенеджерВременныхТаблиц, ИмяВТНачисления = "ВТНачисления") Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНачислений.Сотрудник КАК Сотрудник,
	|	СписокНачислений.ПодразделениеОрганизации КАК Подразделение,
	|	СписокНачислений.Начисление КАК Начисление,
	|	СписокНачислений.ДатаНачала КАК ДатаНачала,
	|	0 КАК ДоляЕНВД
	|ПОМЕСТИТЬ ВТНачисленияСДаннымиЕНВД
	|ИЗ
	|	ВТНачисленияИсходнаяТаблица КАК СписокНачислений";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисленияИсходнаяТаблица", ИмяВТНачисления);
	Запрос.Выполнить();

КонецПроцедуры

Процедура ПроверитьНеобходимостьРегистрацииПроцентаЕНВДНаТекущийМесяцВызватьИсключение(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ИменаПолейВременнойТаблицы) Экспорт

	СоздатьВТСведенияОБухучетеНачисленийСотрудников(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ИменаПолейВременнойТаблицы, Организация);	

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СведенияОБухучете.ОтношениеКЕНВД
	|ИЗ
	|	ВТСведенияОБухучетеНачисленийСотрудников КАК СведенияОБухучете
	|ГДЕ
	|	СведенияОБухучете.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом)";
	
	Результат = Запрос.Выполнить();
	
	Запрос.Текст = 
	"УНИЧТОЖИТЬ ВТСведенияОБухучетеНачисленийСотрудников";
	Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		// На текущий месяц не задан процент ЕНВД и есть объекты учета, 
		// для которых доля ЕНВД определяется процентом,
		// вызываем исключение и сообщаем о проблеме.
		
		ТекстИсключения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Для организации ""%1"" не задан процент деятельности ЕНВД на %2 года.
		|Действие не выполнено.'"),
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "Наименование"), Формат(ПериодРегистрации, "ДФ='ММММ гггг'"));
		
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти




