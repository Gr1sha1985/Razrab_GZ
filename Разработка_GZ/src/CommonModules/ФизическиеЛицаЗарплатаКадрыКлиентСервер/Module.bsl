#Область СлужебныйПрограммныйИнтерфейс

// Формирует краткое представление из полного имени физического лица.
//
// Параметры:
//  ФамилияИмяОтчество - Строка - полное имя в виде "Фамилия Имя Отчество";
//                     - Структура - части полного имени:
//                        * Фамилия  - Строка - фамилия;
//                        * Имя      - Строка - имя;
//                        * Отчество - Строка - отчество.
//                        * Инициалы - Строка
//
// Возвращаемое значение:
//  Строка - фамилия и инициалы. Например, "Пупкин В. И.".
//
// Пример:
//  ФизическиеЛицаЗарплатаКадрыКлиентСервер.ФамилияИнициалыФизЛица("Пупкин Василий Иванович") -> "Пупкин В. И."; 
//
Функция ФамилияИнициалы(Знач ФамилияИмяОтчество) Экспорт
	
	Если ТипЗнч(ФамилияИмяОтчество) = Тип("Структура")
		Или ТипЗнч(ФамилияИмяОтчество) = Тип("ФиксированнаяСтруктура") Тогда
		
		Если Не ПустаяСтрока(ФамилияИмяОтчество.Фамилия) Тогда
			
			Инициалы = Неопределено;
			ФамилияИмяОтчество.Свойство("Инициалы", Инициалы);
			Если Не ЗначениеЗаполнено(Инициалы) Тогда
				Инициалы = ИнициалыПоИмениОтчеству(ФамилияИмяОтчество.Имя, ФамилияИмяОтчество.Отчество);
			КонецЕсли;
			
			Если ПустаяСтрока(Инициалы) Тогда
				Возврат ФамилияИмяОтчество.Фамилия;
			КонецЕсли;
			
			Возврат ФамилияИмяОтчество.Фамилия + " " + Инициалы;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ФамилияИмяОтчество);
	
КонецФункции

// Формирует инициалы имени и отчества физического лица.
//
// Параметры:
//  Имя			- Строка;
//  Отчество	- Строка;
//
// Возвращаемое значение:
//  Строка - инициал имени, отчества.
//
Функция ИнициалыПоИмениОтчеству(Знач Имя, Знач Отчество) Экспорт
	
	Если Не ПустаяСтрока(Имя) Тогда
		
		Имена = СоставныеЧастиИмени(Имя);
		Если Имена.Количество() > 1 Тогда
			
			Инициалы = Лев(Имена[0], 1) + ".-"
				+ Лев(Имена[1], 1) + ".";
			
		Иначе
			Инициалы = Лев(Имя, 1) + ".";
		КонецЕсли;
		
		Если Не ПустаяСтрока(Отчество) Тогда
			Инициалы = Инициалы + " " + Лев(Отчество, 1) + ".";
		КонецЕсли;
		
		Возврат Инициалы;
		
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

// Формирует строку вида "Фамилия Имя Отчество".
// 
// Параметры:
// 	ЧастиИмени - Структура - см. ФизическиеЛицаКлиентСервер.ЧастиИмени.
// 	 
// Возвращаемое значение:
// 	Строка - Фамилия Имя Отчество.
// 	
Функция ФИОИзЧастей(ЧастиИмени) Экспорт
	Возврат СтрСоединить(
	    ОбщегоНазначенияБЗККлиентСервер.ЗначенияВМассиве(
	        ЧастиИмени.Фамилия,
	        ЧастиИмени.Имя,
	        ЧастиИмени.Отчество),
	    " ");
КонецФункции

// Рассчитывает количество полных лет человека по дате его рождения.
// См. также ФизическиеЛицаЗарплатаКадры.Возраст.
//
// Параметры:
//  ДатаРождения - Дата - дата рождения человека, возраст которого нужно рассчитать,
//  ДатаВозраста - Дата - дата, на которую нужно рассчитать возраст.
// 
// Возвращаемое значение:
//  Число, Неопределено - количество полных лет на указанную дату,
//						Неопределено, если дата рождения не заполнена.
//
Функция Возраст(ДатаРождения, ДатаВозраста) Экспорт
	
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		"ФизическиеЛицаЗарплатаКадрыКлиентСервер.Возраст", "ДатаРождения", ДатаРождения, Новый ОписаниеТипов("Дата"));
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		"ФизическиеЛицаЗарплатаКадрыКлиентСервер.Возраст", "ДатаВозраста", ДатаВозраста, Новый ОписаниеТипов("Дата"));
	
	Если Не ЗначениеЗаполнено(ДатаРождения) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возраст = Год(ДатаВозраста) - Год(ДатаРождения);
	Если Месяц(ДатаРождения) > Месяц(ДатаВозраста) Тогда
		Возраст = Возраст - 1;
	Иначе
		Если Месяц(ДатаРождения) = Месяц(ДатаВозраста) Тогда
			Если День(ДатаРождения) > День(ДатаВозраста) Тогда
				Возраст = Возраст - 1;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Возврат Макс(Возраст, 0);
	
КонецФункции

// Формирует представление возраста человека.
// См. также ФизическиеЛицаЗарплатаКадры.ПредставлениеВозраста
//
// Параметры:
//  ДатаРождения - Дата - дата рождения человека, возраст которого нужно рассчитать,
//  ДатаВозраста - Дата - дата, на которую нужно рассчитать возраст.
// 
// Возвращаемое значение:
//  Строка - количество полных лет (или месяцев, если возраст меньше года) на указанную дату с уточнением единицы времени.
//
// Пример:
//  "31 год", "28 лет", "42 года", "3 месяца" и т.д.
//
Функция ПредставлениеВозраста(ДатаРождения, ДатаВозраста) Экспорт
	
	Возраст = Возраст(ДатаРождения, ДатаВозраста);
	
	Если Возраст = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	Если Возраст >= 1 Тогда
		Возврат СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(НСтр("ru = ';%1 год;;%1 года;%1 лет;'"), Возраст);
	КонецЕсли;
	
	Возраст = ВозрастВМесяцах(ДатаРождения, ДатаВозраста);
	
	Если Возраст = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	Если Возраст = 0 Тогда
		Возврат НСтр("ru = 'Меньше месяца'");
	КонецЕсли;
	
	Возврат СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(НСтр("ru = ';%1 месяц;;%1 месяца;%1 месяцев;'"), Возраст);
	
КонецФункции


// Формирует представление пола физического лица Мужчина / Женщина.
// 
// Параметры:
// 	Пол - ПеречислениеСсылка.ПолФизическогоЛица.
// Возвращаемое значение:
// 	Строка, Неопределено - Мужчина или Женщина, Неопределено, если Пол не задан.
//
Функция ПредставлениеПола(Пол) Экспорт
	
	Если Пол = ПредопределенноеЗначение("Перечисление.ПолФизическогоЛица.Мужской") Тогда
		Возврат НСтр("ru = 'Мужчина'");
	КонецЕсли;
	
	Если Пол = ПредопределенноеЗначение("Перечисление.ПолФизическогоЛица.Женский") Тогда
		Возврат НСтр("ru = 'Женщина'");
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СоставныеЧастиИмени(Знач Имя)
	
	Имена = Новый Массив;
	
	Если Не ПустаяСтрока(Имя) Тогда
		
		РазделительИмен = "-";
		ПозицияРазделителя = СтрНайти(Имя, РазделительИмен);
		Если ПозицияРазделителя = 0 Тогда
			РазделительИмен = " ";
			ПозицияРазделителя = СтрНайти(Имя, РазделительИмен);
		КонецЕсли;
		
		Имена = СтрРазделить(Имя, РазделительИмен, Ложь);
		
	КонецЕсли;
	
	Возврат Имена;
	
КонецФункции

// Рассчитывает количество полных месяцев человека по дате его рождения.
//
// Параметры:
//  ДатаРождения - Дата - дата рождения человека, возраст которого нужно рассчитать,
//  ДатаВозраста - Дата - дата, на которую нужно рассчитать возраст.
// 
// Возвращаемое значение:
//  Число - количество полных месяцев на указанную дату.
//
Функция ВозрастВМесяцах(ДатаРождения, ДатаВозраста)
	
	Если Не ЗначениеЗаполнено(ДатаРождения) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Лет = Год(ДатаВозраста) - Год(ДатаРождения);
	Месяцев = Месяц(ДатаВозраста) - Месяц(ДатаРождения);
	Если Месяц(ДатаРождения) > Месяц(ДатаВозраста) Тогда
		Лет = Лет - 1;
		Месяцев = Месяцев + 12;
	КонецЕсли;
	
	Если Месяц(ДатаРождения) = Месяц(ДатаВозраста) Тогда
		Если День(ДатаРождения) > День(ДатаВозраста) Тогда
			Месяцев = Месяцев - 1;
		КонецЕсли;
	КонецЕсли;

	Возврат Лет * 12 + Месяцев;
	
КонецФункции

#КонецОбласти
