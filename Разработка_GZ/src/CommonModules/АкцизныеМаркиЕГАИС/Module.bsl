#Область ПрограммныйИнтерфейс

Функция АкцизныеМаркиВДокументе(Форма, ПараметрыСканирования) Экспорт
	
	АкцизныеМаркиВДокументе = Неопределено;
	Если ЭтоАдресВременногоХранилища(ПараметрыСканирования.АдресСоответствияАкцизныхМарок) Тогда
		АкцизныеМаркиВДокументе = ПолучитьИзВременногоХранилища(ПараметрыСканирования.АдресСоответствияАкцизныхМарок);
		Если АкцизныеМаркиВДокументе = Неопределено Тогда
			
			ИсточникОрганизацияЕГАИС = ИсточникОрганизацияЕГАИС(Форма);
			
			ШтрихкодыУпаковок = ШтрихкодыУпаковок(
				ИсточникОрганизацияЕГАИС.Источник,
				ИсточникОрганизацияЕГАИС.ОрганизацияЕГАИС);
			
			АкцизныеМаркиВДокументе = Новый Соответствие;
			ПроверитьИЗаполнитьВложенныеШтрихкоды(ШтрихкодыУпаковок.ДеревоУпаковок.Строки, АкцизныеМаркиВДокументе, Новый Соответствие);
			
			ПоместитьВоВременноеХранилище(АкцизныеМаркиВДокументе, ПараметрыСканирования.АдресСоответствияАкцизныхМарок);
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат АкцизныеМаркиВДокументе
	
КонецФункции

Функция НоменклатураЯвляетсяАлкогольнойМаркируемойПродукцией(Номенклатура) Экспорт
	
	Если Не ЗначениеЗаполнено(Номенклатура) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Маркируемая = Ложь;
	АкцизныеМаркиЕГАИСПереопределяемый.ЗаполнитьПризнакМаркируемойПродукции(Маркируемая, Номенклатура);
	Возврат Маркируемая;
	
КонецФункции

#КонецОбласти

#Область ОбработкаШтрихкодов

#Область ПолучениеДанныхПоШтрихкодам

Процедура ПроверитьИЗаполнитьВложенныеШтрихкоды(ДеревоУпаковок, ВложенныеШтрихкоды, АкцизныеМаркиВДокументе,
	                                            ОбработанныеШтрихкоды = Неопределено, ШтрихкодыУпаковок = Неопределено, ПараметрыСканирования = Неопределено) Экспорт
	
	Для Каждого СтрокаДерева Из ДеревоУпаковок Цикл
		
		Если АкцизныеМаркиВДокументе <> Неопределено
			И АкцизныеМаркиВДокументе[СтрокаДерева.ШтрихкодУпаковки] <> Неопределено Тогда
			СтрокаДерева.ЕстьОшибки  = Истина;
			СтрокаДерева.ТекстОшибки = НСтр("ru='Уже добавлена в документ'");
		КонецЕсли;
		
		
		Если ОбработанныеШтрихкоды <> Неопределено 
			И ШтрихкодыУпаковок <> Неопределено Тогда
			
			Если ШтрихкодыУпаковок.Найти(СтрокаДерева.ШтрихкодУпаковки) <> Неопределено Тогда
				
				ДанныеШтрихкода = АкцизныеМаркиКлиентСервер.СтруктураДанныхШтрихкода(СтрокаДерева.Штрихкод);
				ДанныеШтрихкода.ШтрихкодУпаковки        = СтрокаДерева.ШтрихкодУпаковки;
				ДанныеШтрихкода.ТипШтрихкода            = СтрокаДерева.ТипШтрихкода;
				ДанныеШтрихкода.ТипУпаковки             = СтрокаДерева.ТипУпаковки;
				ДанныеШтрихкода.АлкогольнаяПродукция    = СтрокаДерева.АлкогольнаяПродукция;
				ДанныеШтрихкода.КодАлкогольнойПродукции = СтрокаДерева.КодАлкогольнойПродукции;
				ДанныеШтрихкода.Справка2                = СтрокаДерева.Справка2;
				ДанныеШтрихкода.Номенклатура            = СтрокаДерева.Номенклатура;
				ДанныеШтрихкода.Характеристика          = СтрокаДерева.Характеристика;
				ДанныеШтрихкода.Серия                   = СтрокаДерева.Серия;
				Если ДанныеШтрихкода.ТипУпаковки = Перечисления.ТипыУпаковок.МонотоварнаяУпаковка Тогда
					ДанныеШтрихкода.Количество = СтрокаДерева.КоличествоАкцизныхМарок;
				КонецЕсли;
				
				ОбработанныеШтрихкоды.Вставить(СтрокаДерева.ШтрихкодУпаковки, ДанныеШтрихкода);
				
			КонецЕсли;
		
		КонецЕсли;
		
		// В форме проверки и подбора алкогольной продукции вложенные штрихкоды не используются.
		Если ПараметрыСканирования <> Неопределено
			И Не ПараметрыСканирования.ИспользуетсяСоответствиеШтрихкодовСтрокДерева Тогда
			ВложенныеШтрихкоды.Вставить(СтрокаДерева.ШтрихкодУпаковки, СтрокаДерева.Штрихкод);
		КонецЕсли;
		
		ПроверитьИЗаполнитьВложенныеШтрихкоды(СтрокаДерева.Строки, ВложенныеШтрихкоды, АкцизныеМаркиВДокументе);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ШтрихкодыУпаковок(Источник, ОрганизацияЕГАИС, ИмяКолонкиАлкогольнаяПродукция = "АлкогольнаяПродукция",
	ПроверятьНаВидПродукции = Ложь, ИмяКолонкиСвязи = "ИдентификаторСтроки") Экспорт
	
	ТаблицаШтрихкодов = Новый ТаблицаЗначений;
	ТаблицаШтрихкодов.Колонки.Добавить("ШтрихкодУпаковки",             Новый ОписаниеТипов("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
	ТаблицаШтрихкодов.Колонки.Добавить("ШтрихкодРодительскойУпаковки", Новый ОписаниеТипов("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
	ТаблицаШтрихкодов.Колонки.Добавить("ИдентификаторСтроки",          Метаданные.ОпределяемыеТипы.УникальныйИдентификаторИС.Тип);
	ТаблицаШтрихкодов.Колонки.Добавить("АлкогольнаяПродукция",         Новый ОписаниеТипов("СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС"));
	ТаблицаШтрихкодов.Колонки.Добавить("Справка2",                     Новый ОписаниеТипов("СправочникСсылка.Справки2ЕГАИС"));
	ТаблицаШтрихкодов.Колонки.Добавить("ОрганизацияЕГАИС",             Новый ОписаниеТипов("СправочникСсылка.КлассификаторОрганизацийЕГАИС"));
	
	Если ПроверятьНаВидПродукции Тогда
		СоответствиеШтрихкодовУпаковокИВидовПродукции = СоответствиеШтрихкодовУпаковокИВидовПродукции(
			Источник.АкцизныеМарки.Выгрузить().ВыгрузитьКолонку("АкцизнаяМарка"));
		
		ВидПродукции = Перечисления.ВидыПродукцииИС.Алкогольная;
	КонецЕсли;
	
	Для Каждого СтрокаТЧ Из Источник.АкцизныеМарки Цикл
		
		Если ПроверятьНаВидПродукции
			И СоответствиеШтрихкодовУпаковокИВидовПродукции[СтрокаТЧ.АкцизнаяМарка] <> ВидПродукции Тогда
				
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаШтрихкодов.Добавить();
		НоваяСтрока.ШтрихкодУпаковки             = СтрокаТЧ.АкцизнаяМарка;
		НоваяСтрока.ШтрихкодРодительскойУпаковки = СтрокаТЧ.ШтрихкодУпаковки;
		НоваяСтрока.ИдентификаторСтроки          = СтрокаТЧ[ИмяКолонкиСвязи];
		НоваяСтрока.Справка2                     = СтрокаТЧ.Справка2;
		НоваяСтрока.ОрганизацияЕГАИС             = ОрганизацияЕГАИС;
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ИдентификаторСтроки", СтрокаТЧ[ИмяКолонкиСвязи]);
		НайденныеСтроки = Источник.Товары.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() > 0 Тогда
			НоваяСтрока.АлкогольнаяПродукция = НайденныеСтроки[0][ИмяКолонкиАлкогольнаяПродукция];
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ИсходныеДанные.ОрганизацияЕГАИС             КАК ОрганизацияЕГАИС,
		|	ИсходныеДанные.ИдентификаторСтроки          КАК ИдентификаторСтроки,
		|	ИсходныеДанные.АлкогольнаяПродукция         КАК АлкогольнаяПродукция,
		|	ИсходныеДанные.Справка2                     КАК Справка2,
		|	ИсходныеДанные.ШтрихкодУпаковки             КАК ШтрихкодУпаковки,
		|	ИсходныеДанные.ШтрихкодРодительскойУпаковки КАК ШтрихкодРодительскойУпаковки
		|ПОМЕСТИТЬ ВТВложенныеШтрихкодыИсходныеДанные
		|ИЗ
		|	&ИсходныеДанные КАК ИсходныеДанные");
	
	ПараметрыФормированияТекстаЗапроса = ШтрихкодированиеЕГАИС.ПараметрыФормированияТекстаЗапросаВложенныхШтрихкодов();
	ПараметрыФормированияТекстаЗапроса.ДокументСсылка                  = Неопределено;
	ПараметрыФормированияТекстаЗапроса.ИспользоватьИдентификаторСтроки = Истина;
	ТекстыЗапроса.Добавить(
		ШтрихкодированиеЕГАИС.ТекстЗапросаВложенныхШтрихкодовПоДокументу(ПараметрыФормированияТекстаЗапроса),
		"ВложенныеШтрихкоды");
	
	МенеджерВременнойТаблицы = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременнойТаблицы;
	Запрос.УстановитьПараметр("ИсходныеДанные",           ТаблицаШтрихкодов);
	Запрос.УстановитьПараметр("ПустыеЗначенияНоменклатуры", ИнтеграцияИС.НезаполненныеЗначенияОпределяемогоТипа("Номенклатура"));
	РезультатыЗапроса = ИнтеграцияИС.ВыполнитьПакетЗапросов(Запрос, ТекстыЗапроса);
	
	ШтрихкодыУпаковок = ШтрихкодированиеЕГАИС.ВложенныеШтрихкодыУпаковокПоВыборкеИМенеджеруВТ(
		РезультатыЗапроса.ВложенныеШтрихкоды.Выбрать(), МенеджерВременнойТаблицы);
	
	Возврат ШтрихкодыУпаковок;
	
КонецФункции

Функция ДанныеДокументаОснования(ПараметрыСканирования) Экспорт
	
	Если ЗначениеЗаполнено(ПараметрыСканирования.ДокументОснование) Тогда
		Если Не ЭтоАдресВременногоХранилища(ПараметрыСканирования.АдресДанныхДокументаОснования) Тогда
			
			ТаблицаДанныхДокументаОснования = Новый ТаблицаЗначений;
			ТаблицаДанныхДокументаОснования.Колонки.Добавить("Номенклатура");
			ТаблицаДанныхДокументаОснования.Колонки.Добавить("Характеристика");
			ТаблицаДанныхДокументаОснования.Колонки.Добавить("Серия");
			ТаблицаДанныхДокументаОснования.Колонки.Добавить("Количество");
			
			ИнтеграцияЕГАИСПереопределяемый.СформироватьДанныеДокументаОснования(
				ПараметрыСканирования.ДокументОснование,
				ПараметрыСканирования.ДокументЕГАИС,
				ТаблицаДанныхДокументаОснования);
			
			ТаблицаДанныхДокументаОснования.Индексы.Добавить("Номенклатура");
			ТаблицаДанныхДокументаОснования.Индексы.Добавить("Характеристика");
			ТаблицаДанныхДокументаОснования.Индексы.Добавить("Серия");
			
			ПараметрыСканирования.АдресДанныхДокументаОснования = ПоместитьВоВременноеХранилище(
				ТаблицаДанныхДокументаОснования,
				ПараметрыСканирования.ИдентификаторФормы);
			
		Иначе
			
			ТаблицаДанныхДокументаОснования = ПолучитьИзВременногоХранилища(ПараметрыСканирования.АдресДанныхДокументаОснования);
			
		КонецЕсли;
		
		Возврат ТаблицаДанныхДокументаОснования;
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

Процедура ЗаписатьДанныеВыбораПоАкцизнойМарке(ДанныеШтрихкода, ДанныеВыбора) Экспорт
	
	Если ЗначениеЗаполнено(ДанныеШтрихкода.ШтрихкодУпаковки) Тогда
		
		НовыеРеквизиты = Новый Структура;
		НовыеРеквизиты.Вставить("Номенклатура",   ДанныеВыбора.Номенклатура);
		НовыеРеквизиты.Вставить("Характеристика", ДанныеВыбора.Характеристика);
		НовыеРеквизиты.Вставить("Серия",          ДанныеВыбора.Серия);
		
		Справочники.ШтрихкодыУпаковокТоваров.ИзменитьШтрихкодУпаковки(
			ДанныеШтрихкода.ШтрихкодУпаковки, НовыеРеквизиты);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеШтрихкода.АлкогольнаяПродукция) Тогда
		
		СоответствиеНоменклатурыЕГАИС = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьМенеджерЗаписи();
		СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = ДанныеШтрихкода.АлкогольнаяПродукция;
		СоответствиеНоменклатурыЕГАИС.Номенклатура         = ДанныеШтрихкода.Номенклатура;
		СоответствиеНоменклатурыЕГАИС.Характеристика       = ДанныеШтрихкода.Характеристика;
		СоответствиеНоменклатурыЕГАИС.Серия                = ДанныеШтрихкода.Серия;
		СоответствиеНоменклатурыЕГАИС.Справка2             = ДанныеШтрихкода.Справка2;
		СоответствиеНоменклатурыЕГАИС.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеДокументов

Функция ОбработатьВыборНоменклатуры(Форма, РезультатВыбора, РезультатОбработкиШтрихкода, КэшированныеЗначения) Экспорт
	
	ПараметрыСканирования = ШтрихкодированиеИС.ПараметрыСканирования(Форма);
	
	ДанныеШтрихкода = АкцизныеМаркиВызовСервера.ОбработатьДанныеШтрихкодаПослеВыбораНоменклатуры(РезультатВыбора, РезультатОбработкиШтрихкода);
	
	Если ПараметрыСканирования.ИспользуютсяДанныеВыбораПоМаркируемойПродукции Тогда
		АкцизныеМаркиКлиентСервер.ОбработатьСохраненныйВыборДанныхПоАлкогольнойПродукции(Форма, ДанныеШтрихкода);
	КонецЕсли;
	
	Если СтрНачинаетсяС(Форма.ИмяФормы,"ОбщаяФорма") Тогда
		МенеджерДокумента = Форма;
	Иначе
		МенеджерДокумента = ИнтеграцияИС.МенеджерОбъектаПоПолномуИмени(Форма.ИмяФормы);
	КонецЕсли;
	
	Если РезультатОбработкиШтрихкода.ПараметрыВыбораНоменклатуры.ТипУпаковки = Перечисления.ТипыУпаковок.МаркированныйТовар Тогда
		
		РезультатДобавленияШтрихкодаВДокумент = МенеджерДокумента.ОбработатьШтрихкодАкцизнойМарки(
			Форма,
			ДанныеШтрихкода,
			ПараметрыСканирования);
		
		ОбработатьРезультатДобавленияШтрихкодаАкцизнойМарки(
			Форма,
			ДанныеШтрихкода,
			ПараметрыСканирования,
			РезультатДобавленияШтрихкодаВДокумент);
		
	ИначеЕсли РезультатОбработкиШтрихкода.ПараметрыВыбораНоменклатуры.ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix Тогда
		
		РезультатДобавленияШтрихкодаВДокумент = МенеджерДокумента.ОбработатьШтрихкодDataMatrix(
			Форма,
			ДанныеШтрихкода,
			ПараметрыСканирования);
		
	Иначе
		
		ВложенныеШтрихкоды = ПолучитьИзВременногоХранилища(РезультатОбработкиШтрихкода.АдресДереваУпаковок);
		
		РезультатДобавленияШтрихкодаВДокумент = МенеджерДокумента.ОбработатьШтрихкодУпаковки(
			Форма,
			ДанныеШтрихкода,
			ВложенныеШтрихкоды,
			ПараметрыСканирования);
		
		ОбработатьРезультатДобавленияШтрихкодаУпаковки(
			Форма,
			ДанныеШтрихкода,
			ПараметрыСканирования,
			РезультатДобавленияШтрихкодаВДокумент);
		
	КонецЕсли;
	
	Возврат РезультатДобавленияШтрихкодаВДокумент;
	
КонецФункции

Функция ОбработатьВыборСправки2(Форма, РезультатВыбора, РезультатОбработкиШтрихкода, КэшированныеЗначения) Экспорт
	
	ПараметрыСканирования = ШтрихкодированиеИС.ПараметрыСканирования(Форма);
	
	ДанныеШтрихкода = АкцизныеМаркиВызовСервера.ОбработатьДанныеШтрихкодаПослеВыбораСправки2(РезультатВыбора, РезультатОбработкиШтрихкода);
	
	МенеджерДокумента = ИнтеграцияИС.МенеджерОбъектаПоПолномуИмени(Форма.ИмяФормы);
	
	РезультатДобавленияШтрихкодаВДокумент = МенеджерДокумента.ОбработатьШтрихкодDataMatrix(
		Форма,
		ДанныеШтрихкода,
		ПараметрыСканирования);
	
	Возврат РезультатДобавленияШтрихкодаВДокумент;
	
КонецФункции

// Удаляет акцизные марки по идентификаторам строк.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма.
//  Данные - Массив (Строка) - Идентификаторы строк акцизных марок.
//
Процедура УдалитьАкцизныеМаркиЧека(Форма, Данные) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Объект") Тогда
		Источник = Форма.Объект;
	Иначе
		Источник = Форма;
	КонецЕсли;
	
	Если ТипЗнч(Данные) = Тип("Массив") Тогда
		ИдентификаторыСтрок = Данные;
	Иначе
		ИдентификаторыСтрок = Новый Массив;
		ИдентификаторыСтрок.Добавить(Данные);
	КонецЕсли;
	
	Для Каждого ИдентификаторСтроки Из ИдентификаторыСтрок Цикл
		
		Отбор = Новый Структура("ИдентификаторСтроки", ИдентификаторСтроки);
		НайденныеСтроки = Источник.АкцизныеМарки.НайтиСтроки(Отбор);
		
		Для Каждого СтрокаТЧ Из НайденныеСтроки Цикл
			Источник.АкцизныеМарки.Удалить(Источник.АкцизныеМарки.Индекс(СтрокаТЧ));
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Удаляет акцизные марки по справкам 2.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма
//  Данные - Массив (СправочникСсылка.Справки2ЕГАИС) - Справки 2.
//
Процедура УдалитьАкцизныеМаркиПоСправкам2(Форма, Данные) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Объект") Тогда
		Источник = Форма.Объект;
	Иначе
		Источник = Форма;
	КонецЕсли;
	
	Если ТипЗнч(Данные) = Тип("Массив") Тогда
		Справки2 = Данные;
	Иначе
		Справки2 = Новый Массив;
		Справки2.Добавить(Данные);
	КонецЕсли;
	
	Для Каждого Справка2 Из Справки2 Цикл
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Справка2", Справка2);
		НайденныеСтроки = Источник.Товары.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() = 0 Тогда
			
			АкцизныеМаркиСтрокиТЧ = Источник.АкцизныеМарки.НайтиСтроки(ПараметрыОтбора);
			Для Каждого СтрокаТЧ Из АкцизныеМаркиСтрокиТЧ Цикл
				Источник.АкцизныеМарки.Удалить(СтрокаТЧ);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПараметрыЗаполненияТоваровИАкцизныхМарок(Форма, ДобавлятьКоличество = Истина, ПараметрыСканирования = Неопределено) Экспорт
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("ДобавлятьКоличество",            ДобавлятьКоличество);
	ПараметрыЗаполнения.Вставить("ИзмененныеСтроки",               Новый Массив);
	ПараметрыЗаполнения.Вставить("ДобавленныеСтроки",              Новый Массив);
	ПараметрыЗаполнения.Вставить("ЕстьСправка2",                   Истина);
	ПараметрыЗаполнения.Вставить("ТолькоПустаяСправка2",           Ложь);
	ПараметрыЗаполнения.Вставить("УчитыватьСерии",                 Истина);
	ПараметрыЗаполнения.Вставить("ТекущаяСтрока",                  Неопределено);
	ПараметрыЗаполнения.Вставить("ЕстьКоличествоАкцизныхМарок",    Истина);
	ПараметрыЗаполнения.Вставить("ПараметрыУказанияСерий",         Неопределено);
	ПараметрыЗаполнения.Вставить("ИмяКолонкиАлкогольнаяПродукция", "АлкогольнаяПродукция");
	ПараметрыЗаполнения.Вставить("ИмяКолонкиКоличество",           "Количество");
	ПараметрыЗаполнения.Вставить("ИмяКолонкиКоличествоУпаковок",   "КоличествоУпаковок");
	
	Если ПараметрыСканирования = Неопределено Тогда
		ПараметрыЗаполнения.Вставить("ПараметрыСканирования", ШтрихкодированиеИС.ПараметрыСканирования(Форма));
	Иначе
		ПараметрыЗаполнения.Вставить("ПараметрыСканирования", ПараметрыСканирования);
	КонецЕсли;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Заполняет табличную часть Товары по данным дерева упаковок.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - Заполняемый документ.
//  ДеревоУпаковок - ДеревоЗначений - дерево упаковок.
//  УпаковкаВерхнегоУровня - СправочникСсылка.ШтрихкодыУпаковокТоваров - Упаковка верхнего уровня.
//
Процедура ЗаполнитьТовары(ДокументОбъект, ДеревоУпаковок, ПараметрыЗаполнения) Экспорт
	
	Для Каждого СтрокаДерева Из ДеревоУпаковок.Строки Цикл
		
		Если СтрокаДерева.ТипУпаковки = Перечисления.ПрочиеЗоныПересчетаАлкогольнойПродукции.БутылкиБезКоробки Тогда
			
			ЗаполнитьТовары(
				ДокументОбъект, СтрокаДерева, ПараметрыЗаполнения);
			
			Продолжить;
			
		КонецЕсли;
		
		Если СтрокаДерева.ТипУпаковки = Перечисления.ТипыУпаковок.МаркированныйТовар Тогда
			КоличествоАкцизныхМарок = 1;
		Иначе
			КоличествоАкцизныхМарок = СтрокаДерева.КоличествоАкцизныхМарок;
		КонецЕсли;
		
		Если СтрокаДерева.АлкогольнаяПродукция <> Неопределено
			И СтрокаДерева.Номенклатура <> Неопределено
			И СтрокаДерева.Характеристика <> Неопределено
			И СтрокаДерева.Серия <> Неопределено
			И СтрокаДерева.Справка2 <> Неопределено Тогда
			
			ЗаполнитьТоварИзСтроки(ДокументОбъект, СтрокаДерева, ПараметрыЗаполнения, КоличествоАкцизныхМарок);
			
		Иначе
			
			ЗаполнитьТовары(
				ДокументОбъект, СтрокаДерева, ПараметрыЗаполнения);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет табличные части Акцизные марки и Товары по данным дерева упаковок.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - Заполняемый документ.
//  ДеревоУпаковок - ДеревоЗначений - дерево упаковок.
//  УпаковкаВерхнегоУровня - СправочникСсылка.ШтрихкодыУпаковокТоваров - Упаковка верхнего уровня.
//
Процедура ЗаполнитьТоварыИАкцизныеМарки(ДокументОбъект, ДеревоУпаковок, ПараметрыЗаполнения, УпаковкаВерхнегоУровня = Неопределено, ЗаполнятьТолькоТовары = Ложь) Экспорт
	
	Для Каждого СтрокаДерева Из ДеревоУпаковок.Строки Цикл
		
		Если СтрокаДерева.ТипУпаковки = Перечисления.ПрочиеЗоныПересчетаАлкогольнойПродукции.БутылкиБезКоробки Тогда
			
			ЗаполнитьТоварыИАкцизныеМарки(
				ДокументОбъект, СтрокаДерева, ПараметрыЗаполнения,
				УпаковкаВерхнегоУровня);
			
			Продолжить;
			
		КонецЕсли;
		
		Если УпаковкаВерхнегоУровня = Неопределено
			И СтрокаДерева.ТипУпаковки <> Перечисления.ТипыУпаковок.МаркированныйТовар Тогда
			УпаковкаВерхнегоУровняСтрокиДерева = СтрокаДерева.ШтрихкодУпаковки;
		Иначе
			УпаковкаВерхнегоУровняСтрокиДерева = УпаковкаВерхнегоУровня;
		КонецЕсли;
		
		Если СтрокаДерева.ТипУпаковки = Перечисления.ТипыУпаковок.МаркированныйТовар Тогда
			КоличествоАкцизныхМарок = 1;
		Иначе
			КоличествоАкцизныхМарок = СтрокаДерева.КоличествоАкцизныхМарок;
		КонецЕсли;
		
		Если ПараметрыЗаполнения.ТолькоПустаяСправка2 Тогда
			Справка2 = Справочники.Справки2ЕГАИС.ПустаяСсылка();
		Иначе
			Справка2 = СтрокаДерева.Справка2;
		КонецЕсли;
		
		ФлагЗаполнятьТолькоТовары = ЗаполнятьТолькоТовары;
		Если Не ФлагЗаполнятьТолькоТовары
			И ЗначениеЗаполнено(Справка2) Тогда
			
			ФлагЗаполнятьТолькоТовары = Истина;
			
			СтрокаТЧАкцизныеМарки = ДокументОбъект.АкцизныеМарки.Добавить();
			СтрокаТЧАкцизныеМарки.АкцизнаяМарка = СтрокаДерева.ШтрихкодУпаковки;
			СтрокаТЧАкцизныеМарки.Справка2      = Справка2;
			СтрокаТЧАкцизныеМарки.Количество    = КоличествоАкцизныхМарок;
			
			Если СтрокаДерева.ШтрихкодУпаковки <> УпаковкаВерхнегоУровняСтрокиДерева Тогда
				СтрокаТЧАкцизныеМарки.ШтрихкодУпаковки = УпаковкаВерхнегоУровняСтрокиДерева;
			КонецЕсли;
			
		КонецЕсли;
		
		АнализУпаковок = Истина;
		Если (ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДеревоУпаковок, "ТипШтрихкода")
			Или (ТипЗнч(ДеревоУпаковок) = Тип("ДеревоЗначений") И ДеревоУпаковок.Колонки.Найти("ТипШтрихкода") <> Неопределено))
			И СтрокаДерева.ТипУпаковки <> Перечисления.ТипыУпаковок.МаркированныйТовар Тогда
				
			АнализУпаковок = Ложь;
			
		КонецЕсли;
		
		Если АнализУпаковок
			И СтрокаДерева.АлкогольнаяПродукция <> Неопределено
			И СтрокаДерева.Номенклатура <> Неопределено
			И СтрокаДерева.Характеристика <> Неопределено
			И СтрокаДерева.Серия <> Неопределено
			И СтрокаДерева.Справка2 <> Неопределено Тогда
			
			СтрокаТЧТовары = ЗаполнитьТоварИзСтроки(ДокументОбъект, СтрокаДерева, ПараметрыЗаполнения, КоличествоАкцизныхМарок);
			
			Если Не ФлагЗаполнятьТолькоТовары Тогда
				
				Если Не ЗначениеЗаполнено(СтрокаТЧТовары.ИдентификаторСтроки) Тогда
					СтрокаТЧТовары.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
				КонецЕсли;
				
				СтрокаТЧАкцизныеМарки = ДокументОбъект.АкцизныеМарки.Добавить();
				СтрокаТЧАкцизныеМарки.ИдентификаторСтроки = СтрокаТЧТовары.ИдентификаторСтроки;
				СтрокаТЧАкцизныеМарки.АкцизнаяМарка       = СтрокаДерева.ШтрихкодУпаковки;
				СтрокаТЧАкцизныеМарки.Количество          = КоличествоАкцизныхМарок;
				
				Если СтрокаДерева.ШтрихкодУпаковки <> УпаковкаВерхнегоУровняСтрокиДерева Тогда
					СтрокаТЧАкцизныеМарки.ШтрихкодУпаковки = УпаковкаВерхнегоУровняСтрокиДерева;
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			
			Если УпаковкаВерхнегоУровняСтрокиДерева = Неопределено
				И СтрокаДерева.ТипУпаковки <> Перечисления.ТипыУпаковок.МаркированныйТовар Тогда
				УпаковкаВерхнегоУровняСтрокиДерева = СтрокаДерева.ШтрихкодУпаковки;
			КонецЕсли;
			
			ЗаполнитьТоварыИАкцизныеМарки(
				ДокументОбъект, СтрокаДерева, ПараметрыЗаполнения,
				УпаковкаВерхнегоУровняСтрокиДерева, ФлагЗаполнятьТолькоТовары);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет табличную часть Товары по данным таблицы немаркируемой продукции.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - Заполняемый документ.
//  ДеревоУпаковок - ДеревоЗначений - дерево упаковок.
//  ПараметрыЗаполнения - Структура - Параметры, полученные из функции ПараметрыЗаполненияТоваровИАкцизныхМарок.
//
Процедура ЗаполнитьНеМаркируемыеТовары(ДокументОбъект, ТаблицаНеМаркируемойПродукции, ПараметрыЗаполнения) Экспорт
	
	Для Каждого СтрокаТаблицы Из ТаблицаНеМаркируемойПродукции Цикл
		
		ЗаполнитьТоварИзСтроки(ДокументОбъект, СтрокаТаблицы, ПараметрыЗаполнения, СтрокаТаблицы.Количество);
		
	КонецЦикла;
	
КонецПроцедуры

Функция НайтиСтрокиТоваров(Товары, ПараметрыОтбора, Справка2, АлкогольнаяПродукция, ПараметрыЗаполнения, ТипШтрихкода = Неопределено) Экспорт
	
	КлючевыеРеквизиты = ПараметрыЗаполнения.ПараметрыСканирования.КлючевыеРеквизиты;
	
	ЕстьКлючевыеРеквизиты = Ложь;
	ПараметрыОтбораКлючевыхРеквизитов = Новый Структура;
	ТаблицаКлючевыхРеквизитов = Новый ТаблицаЗначений;
	Для Каждого ИмяКлючевогоРеквизита Из КлючевыеРеквизиты Цикл
		ЕстьКлючевыеРеквизиты = Истина;
		ТаблицаКлючевыхРеквизитов.Колонки.Добавить(ИмяКлючевогоРеквизита);
		ПараметрыОтбораКлючевыхРеквизитов.Вставить(ИмяКлючевогоРеквизита);
	КонецЦикла;
	ТаблицаКлючевыхРеквизитов.Колонки.Добавить("ПолноеСоответствие");
	ТаблицаКлючевыхРеквизитов.Колонки.Добавить("КЗаполнению");
	ТаблицаКлючевыхРеквизитов.Колонки.Добавить("Приоритет");
	ТаблицаКлючевыхРеквизитов.Колонки.Добавить("ВключаетТекущуюСтроку");
	
	МассивСтрок = Товары.НайтиСтроки(ПараметрыОтбора);
	Если МассивСтрок.Количество() > 0 Тогда
		
		Для Каждого НайденнаяСтрока Из МассивСтрок Цикл
			
			ТипШтрихкодаПодходит =
				(ТипШтрихкода = Неопределено
					Или (ТипШтрихкода <> Неопределено
						И НайденнаяСтрока.ТипШтрихкода = ТипШтрихкода Или Не ЗначениеЗаполнено(НайденнаяСтрока.ТипШтрихкода)));
			Если Не ТипШтрихкодаПодходит Тогда
				Продолжить;
			КонецЕсли;
			
			Если ЕстьКлючевыеРеквизиты Тогда
				
				Для Каждого ИмяКлючевогоРеквизита Из КлючевыеРеквизиты Цикл
					ПараметрыОтбораКлючевыхРеквизитов[ИмяКлючевогоРеквизита] = НайденнаяСтрока[ИмяКлючевогоРеквизита];
				КонецЦикла;
				
				РезультатПоиска = ТаблицаКлючевыхРеквизитов.НайтиСтроки(ПараметрыОтбораКлючевыхРеквизитов);
				Если РезультатПоиска.Количество() > 0 Тогда
					
					НоваяСтрока = РезультатПоиска[0];
					
				Иначе
					
					НоваяСтрока = ТаблицаКлючевыхРеквизитов.Добавить();
					
					НоваяСтрока.ПолноеСоответствие = Новый Массив;
					НоваяСтрока.КЗаполнению        = Новый Массив;
					
					Для Каждого ИмяКлючевогоРеквизита Из КлючевыеРеквизиты Цикл
						НоваяСтрока[ИмяКлючевогоРеквизита] = НайденнаяСтрока[ИмяКлючевогоРеквизита];
					КонецЦикла;
					
				КонецЕсли;
				
			Иначе
				
				Если ТаблицаКлючевыхРеквизитов.Количество() = 0 Тогда
					НоваяСтрока = ТаблицаКлючевыхРеквизитов.Добавить();
					НоваяСтрока.ПолноеСоответствие = Новый Массив;
					НоваяСтрока.КЗаполнению        = Новый Массив;
				Иначе
					НоваяСтрока = ТаблицаКлючевыхРеквизитов[0];
				КонецЕсли;
				
			КонецЕсли;
			
			Если ПараметрыЗаполнения.ЕстьСправка2 Тогда
				Если НайденнаяСтрока[ПараметрыЗаполнения.ИмяКолонкиАлкогольнаяПродукция] = АлкогольнаяПродукция
					И НайденнаяСтрока.Справка2 = Справка2 Тогда
					НоваяСтрока.ПолноеСоответствие.Добавить(НайденнаяСтрока);
				ИначеЕсли НайденнаяСтрока[ПараметрыЗаполнения.ИмяКолонкиАлкогольнаяПродукция] = АлкогольнаяПродукция
					И Не ЗначениеЗаполнено(НайденнаяСтрока.Справка2) Тогда
					НоваяСтрока.КЗаполнению.Добавить(НайденнаяСтрока);
				ИначеЕсли Не ЗначениеЗаполнено(НайденнаяСтрока[ПараметрыЗаполнения.ИмяКолонкиАлкогольнаяПродукция])
					И Не ЗначениеЗаполнено(НайденнаяСтрока.Справка2) Тогда
					НоваяСтрока.КЗаполнению.Добавить(НайденнаяСтрока);
				КонецЕсли;
			Иначе
				Если НайденнаяСтрока[ПараметрыЗаполнения.ИмяКолонкиАлкогольнаяПродукция] = АлкогольнаяПродукция Тогда
					НоваяСтрока.ПолноеСоответствие.Добавить(НайденнаяСтрока);
				ИначеЕсли Не ЗначениеЗаполнено(НайденнаяСтрока[ПараметрыЗаполнения.ИмяКолонкиАлкогольнаяПродукция]) Тогда
					НоваяСтрока.КЗаполнению.Добавить(НайденнаяСтрока);
				КонецЕсли;
			КонецЕсли;
			
			Если ПараметрыЗаполнения.ТекущаяСтрока = НайденнаяСтрока
				И НоваяСтрока.ВключаетТекущуюСтроку = Неопределено Тогда
				НоваяСтрока.ВключаетТекущуюСтроку = Истина;
			КонецЕсли;
			
			Если НоваяСтрока.ПолноеСоответствие.Количество() > 0
				И НоваяСтрока.КЗаполнению.Количество() = 0 Тогда
				НоваяСтрока.Приоритет = 1;
			ИначеЕсли НоваяСтрока.ПолноеСоответствие.Количество() > 0
				И НоваяСтрока.КЗаполнению.Количество() > 0 Тогда
				НоваяСтрока.Приоритет = 2;
			Иначе
				НоваяСтрока.Приоритет = 3;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ТаблицаКлючевыхРеквизитов.Сортировать("ВключаетТекущуюСтроку УБЫВ, Приоритет ВОЗР");
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ПолноеСоответствие");
	ВозвращаемоеЗначение.Вставить("КЗаполнению");
	
	Если ТаблицаКлючевыхРеквизитов.Количество() > 0 Тогда
		Результат = ТаблицаКлючевыхРеквизитов[0];
		Если Результат.ПолноеСоответствие.Количество() > 0 Тогда
			Для Каждого ЭлементДанных Из Результат.ПолноеСоответствие Цикл
				Если ЭлементДанных = ПараметрыЗаполнения.ТекущаяСтрока Тогда
					ВозвращаемоеЗначение.ПолноеСоответствие = ЭлементДанных;
				КонецЕсли;
			КонецЦикла;
			Если ВозвращаемоеЗначение.ПолноеСоответствие = Неопределено Тогда
				ВозвращаемоеЗначение.ПолноеСоответствие = Результат.ПолноеСоответствие[0];
			КонецЕсли;
		КонецЕсли;
		Если Результат.КЗаполнению.Количество() > 0 Тогда
			ВозвращаемоеЗначение.КЗаполнению = Результат.КЗаполнению;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Процедура ОбработатьИзмененнуюСтроку(СтрокаТЧТовары, ПараметрыЗаполнения, Количество, ЭтоМаркируемаяПродукция = Истина) Экспорт
	
	ЭтоДобавленнаяСтрока = ПараметрыЗаполнения.ДобавленныеСтроки.Найти(СтрокаТЧТовары) <> Неопределено;
	ЭтоИзмененнаяСтрока  = ПараметрыЗаполнения.ИзмененныеСтроки.Найти(СтрокаТЧТовары) <> Неопределено;
	
	ИзменятьКоличествоСинхронно = (СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] = СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество]);
	ИзмененоКоличество         = Ложь;
	ИзмененоКоличествоУпаковок = Ложь;
	
	Если ПараметрыЗаполнения.ДобавлятьКоличество
		Или ЭтоДобавленнаяСтрока
		Или ЭтоИзмененнаяСтрока Тогда
		
		Если ЭтоМаркируемаяПродукция И ПараметрыЗаполнения.ЕстьКоличествоАкцизныхМарок Тогда
			СтрокаТЧТовары.КоличествоАкцизныхМарок = СтрокаТЧТовары.КоличествоАкцизныхМарок + Количество;
			Если СтрокаТЧТовары.КоличествоАкцизныхМарок > СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество] Тогда
				СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество] = СтрокаТЧТовары.КоличествоАкцизныхМарок;
				ИзмененоКоличество = Истина;
				Если ИзменятьКоличествоСинхронно Тогда
					СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] = СтрокаТЧТовары.КоличествоАкцизныхМарок;
					ИзмененоКоличествоУпаковок = Истина;
				КонецЕсли;
			КонецЕсли;
		Иначе
			СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество] = СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество] + Количество;
			ИзмененоКоличество = Истина;
			Если ИзменятьКоличествоСинхронно Тогда
				СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] = СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество] + Количество;
				ИзмененоКоличествоУпаковок = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если ЭтоДобавленнаяСтрока Тогда
			Если ЭтоМаркируемаяПродукция И ПараметрыЗаполнения.ЕстьКоличествоАкцизныхМарок Тогда
				Если СтрокаТЧТовары.КоличествоАкцизныхМарок > СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] Тогда
					Если Не ИзмененоКоличество Тогда
						СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] = СтрокаТЧТовары.КоличествоАкцизныхМарок;
					КонецЕсли;
					Если ИзменятьКоличествоСинхронно
						И Не ИзмененоКоличествоУпаковок Тогда
						СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество] = СтрокаТЧТовары.КоличествоАкцизныхМарок;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Если Не ИзмененоКоличествоУпаковок Тогда
					СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] = СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] + Количество;
				КонецЕсли;
				Если ИзменятьКоличествоСинхронно
					И Не ИзмененоКоличество Тогда
					СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество] = СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество] + Количество;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		Если ЭтоМаркируемаяПродукция И ПараметрыЗаполнения.ЕстьКоличествоАкцизныхМарок Тогда
			СтрокаТЧТовары.КоличествоАкцизныхМарок = Количество;
		КонецЕсли;
		СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество] = Количество;
		Если ИзменятьКоличествоСинхронно Тогда
			СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] = Количество;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЭтоИзмененнаяСтрока И Не ЭтоДобавленнаяСтрока Тогда
		ПараметрыЗаполнения.ИзмененныеСтроки.Добавить(СтрокаТЧТовары);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьДобавленнуюСтроку(СтрокаТЧТовары, ПараметрыЗаполнения, Количество, ЭтоМаркируемаяПродукция = Истина) Экспорт
	
	Если ПараметрыЗаполнения.ДобавлятьКоличество Тогда
		Если ЭтоМаркируемаяПродукция И ПараметрыЗаполнения.ЕстьКоличествоАкцизныхМарок Тогда
			СтрокаТЧТовары.КоличествоАкцизныхМарок = СтрокаТЧТовары.КоличествоАкцизныхМарок + Количество;
			Если СтрокаТЧТовары.КоличествоАкцизныхМарок > СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] Тогда
				СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество]         = СтрокаТЧТовары.КоличествоАкцизныхМарок;
				СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] = СтрокаТЧТовары.КоличествоАкцизныхМарок;
			КонецЕсли;
		Иначе
			СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество]         = СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество]         + Количество;
			СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] = СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] + Количество;
		КонецЕсли;
	Иначе
		Если ЭтоМаркируемаяПродукция И ПараметрыЗаполнения.ЕстьКоличествоАкцизныхМарок Тогда
			СтрокаТЧТовары.КоличествоАкцизныхМарок = Количество;
		КонецЕсли;
		СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество]         = Количество;
		СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] = Количество;
	КонецЕсли;
	
	ПараметрыЗаполнения.ДобавленныеСтроки.Добавить(СтрокаТЧТовары);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПроверитьЗаполнениеАкцизныхМарокТТНИсходящейЕГАИС(Объект, Отказ) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                                                                          КАК НомерСтроки,
	|	ТаблицаТовары.ИдентификаторСтроки                                                                  КАК ИдентификаторСтроки,
	|	ВЫРАЗИТЬ(ТаблицаТовары.АлкогольнаяПродукция КАК Справочник.КлассификаторАлкогольнойПродукцииЕГАИС) КАК АлкогольнаяПродукция,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Справка2 КАК Справочник.Справки2ЕГАИС)                                      КАК Справка2,
	|	ТаблицаТовары.Количество                                                                           КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки                      КАК НомерСтроки,
	|	Товары.ИдентификаторСтроки              КАК ИдентификаторСтроки,
	|	Товары.АлкогольнаяПродукция             КАК АлкогольнаяПродукция,
	|	Товары.Справка2                         КАК Справка2,
	|	ЕСТЬNULL(Справки2ЕГАИС.Поштучная, ЛОЖЬ) КАК Справка2Поштучная,
	|	Товары.Количество                       КАК Количество
	|ПОМЕСТИТЬ МаркируемыеТовары
	|ИЗ
	|	Товары КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|		ПО Товары.АлкогольнаяПродукция = КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Справки2ЕГАИС КАК Справки2ЕГАИС
	|		ПО Товары.Справка2 = Справки2ЕГАИС.Ссылка
	|ГДЕ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.ВидПродукции.Маркируемый
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаркируемыеТовары.Справка2 КАК Справка2
	|ПОМЕСТИТЬ ТоварыСправки2
	|ИЗ
	|	МаркируемыеТовары КАК МаркируемыеТовары
	|ГДЕ
	|	МаркируемыеТовары.Справка2 <> ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|СГРУППИРОВАТЬ ПО
	|	МаркируемыеТовары.Справка2
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАкцизныеМарки.ИдентификаторСтроки                             КАК ИдентификаторСтроки,
	|	ВЫРАЗИТЬ(ТаблицаАкцизныеМарки.Справка2 КАК Справочник.Справки2ЕГАИС) КАК Справка2,
	|	ТаблицаАкцизныеМарки.Количество                                      КАК Количество
	|ПОМЕСТИТЬ АкцизныеМарки
	|ИЗ
	|	&ТаблицаАкцизныеМарки КАК ТаблицаАкцизныеМарки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	СУММА(АкцизныеМарки.Количество)   КАК Количество
	|ПОМЕСТИТЬ АкцизныеМаркиПоСтрокам
	|ИЗ
	|	АкцизныеМарки КАК АкцизныеМарки
	|ГДЕ
	|	АкцизныеМарки.Справка2 = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|СГРУППИРОВАТЬ ПО
	|	АкцизныеМарки.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.Справка2          КАК Справка2,
	|	СУММА(АкцизныеМарки.Количество) КАК Количество
	|ПОМЕСТИТЬ АкцизныеМаркиПоСправкам2
	|ИЗ
	|	АкцизныеМарки КАК АкцизныеМарки
	|ГДЕ
	|	АкцизныеМарки.ИдентификаторСтроки = """"
	|СГРУППИРОВАТЬ ПО
	|	АкцизныеМарки.Справка2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаркируемыеТовары.НомерСтроки                    КАК НомерСтроки,
	|	МаркируемыеТовары.АлкогольнаяПродукция           КАК АлкогольнаяПродукция,
	|	МаркируемыеТовары.Количество                     КАК МаркируемаяПродукцияКоличество,
	|	ЕСТЬNULL(АкцизныеМаркиПоСправкам2.Количество, 0)
	|	+ ЕСТЬNULL(АкцизныеМаркиПоСтрокам.Количество, 0) КАК АкцизныеМаркиКоличество
	|ИЗ
	|	МаркируемыеТовары КАК МаркируемыеТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ АкцизныеМаркиПоСтрокам КАК АкцизныеМаркиПоСтрокам
	|		ПО МаркируемыеТовары.ИдентификаторСтроки = АкцизныеМаркиПоСтрокам.ИдентификаторСтроки
	|	ЛЕВОЕ СОЕДИНЕНИЕ АкцизныеМаркиПоСправкам2 КАК АкцизныеМаркиПоСправкам2
	|		ПО МаркируемыеТовары.Справка2 = АкцизныеМаркиПоСправкам2.Справка2
	|ГДЕ
	|	МаркируемыеТовары.Справка2Поштучная
	|	И МаркируемыеТовары.Количество 
	|		<> (ЕСТЬNULL(АкцизныеМаркиПоСправкам2.Количество, 0) + ЕСТЬNULL(АкцизныеМаркиПоСтрокам.Количество, 0))
	|");
	
	ТаблицаТовары        = Объект.Товары.Выгрузить(, "НомерСтроки, ИдентификаторСтроки, АлкогольнаяПродукция, Справка2, Количество");
	ТаблицаАкцизныеМарки = Объект.АкцизныеМарки.Выгрузить(, "ИдентификаторСтроки, Справка2, Количество");
	
	СтатусыОтсутствует = Новый Массив();
	СтатусыОтсутствует.Добавить(Перечисления.СтатусыАкцизныхМарок.Реализована);
	СтатусыОтсутствует.Добавить(Перечисления.СтатусыАкцизныхМарок.Отсутствует);
	
	Запрос.УстановитьПараметр("ТаблицаТовары", ТаблицаТовары);
	Запрос.УстановитьПараметр("ТаблицаАкцизныеМарки", ТаблицаАкцизныеМарки);
	Запрос.УстановитьПараметр("СтатусыОтсутствует", СтатусыОтсутствует);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекстОшибки = НСтр("ru = 'В строке %1 для %2 должно быть указано акцизных марок - %3, а указано - %4.'");
		ТекстОшибки = СтрШаблон(ТекстОшибки,
			Выборка.НомерСтроки,
			Выборка.АлкогольнаяПродукция,
			Выборка.МаркируемаяПродукцияКоличество,
			Выборка.АкцизныеМаркиКоличество);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			Объект,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "КоличествоУпаковок"),,
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеАкцизныхМарокЧекаЕГАИС(Объект, Отказ, ПроверятьТолькоЕслиЗаполнены = Ложь) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Товары.АлкогольнаяПродукция,
	|	Товары.ИдентификаторСтроки,
	|	Товары.Количество,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.ИдентификаторСтроки
	|ПОМЕСТИТЬ АкцизныеМарки
	|ИЗ
	|	&АкцизныеМарки КАК АкцизныеМарки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.АлкогольнаяПродукция,
	|	Товары.ИдентификаторСтроки,
	|	Товары.Количество,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ МаркируемаяПродукцияКоличество
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|		ПО Товары.АлкогольнаяПродукция = КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка
	|ГДЕ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.ВидПродукции.Маркируемый
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.ИдентификаторСтроки,
	|	СУММА(1) КАК Количество
	|ПОМЕСТИТЬ АкцизныеМаркиКоличество
	|ИЗ
	|	АкцизныеМарки КАК АкцизныеМарки
	|
	|СГРУППИРОВАТЬ ПО
	|	АкцизныеМарки.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаркируемаяПродукцияКоличество.АлкогольнаяПродукция,
	|	МаркируемаяПродукцияКоличество.Количество КАК КоличествоМаркируемаяПродукция,
	|	ЕСТЬNULL(АкцизныеМаркиКоличество.Количество, 0) КАК КоличествоАкцизныеМарки,
	|	МаркируемаяПродукцияКоличество.НомерСтроки
	|ИЗ
	|	МаркируемаяПродукцияКоличество КАК МаркируемаяПродукцияКоличество
	|		ЛЕВОЕ СОЕДИНЕНИЕ АкцизныеМаркиКоличество КАК АкцизныеМаркиКоличество
	|		ПО МаркируемаяПродукцияКоличество.ИдентификаторСтроки = АкцизныеМаркиКоличество.ИдентификаторСтроки
	|ГДЕ
	|	МаркируемаяПродукцияКоличество.Количество <> ЕСТЬNULL(АкцизныеМаркиКоличество.Количество, 0)
	|	И &УсловиеАкцизныеМаркиЗаполнены
	|");
	
	Если ПроверятьТолькоЕслиЗаполнены Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеАкцизныеМаркиЗаполнены", "ЕСТЬNULL(АкцизныеМаркиКоличество.Количество, 0) > 0");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеАкцизныеМаркиЗаполнены", "Истина");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Товары",        Объект.Товары.Выгрузить(, "АлкогольнаяПродукция, ИдентификаторСтроки, Количество, НомерСтроки"));
	Запрос.УстановитьПараметр("АкцизныеМарки", Объект.АкцизныеМарки.Выгрузить(, "ИдентификаторСтроки"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекстОшибки = НСтр("ru = 'В строке %1 для %2 должно быть указано акцизных марок - %3, а указано - %4.'");
		ТекстОшибки = СтрШаблон(ТекстОшибки,
		                        Выборка.НомерСтроки,
		                        Выборка.АлкогольнаяПродукция,
		                        Выборка.КоличествоМаркируемаяПродукция,
		                        Выборка.КоличествоАкцизныеМарки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				Объект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "КоличествоУпаковок"),,
				Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеАкцизныхМарок(Объект, Отказ, ПроверятьТолькоЕслиЗаполнены = Ложь, Ключ = Неопределено) Экспорт
	
	Если Ключ = Неопределено Тогда
		Ключ = Новый Структура("ВидДокумента", Перечисления.ВидыДокументовЕГАИС.ПустаяСсылка());
		ЗаполнитьЗначенияСвойств(Ключ, Объект);
	КонецЕсли;
	
	РазрешеноНеУказыватьПартионныеМаркиВСтроке = Ключ.Свойство("РазрешеноНеУказыватьПартионныеМаркиВСтроке");
	
	ВидыДокументовДляКонтроляРегистров1и3 = ВидыДокументовДляКонтроляРегистров1и3();
	ВидыДокументовДляКонтроляРегистра2    = ВидыДокументовДляКонтроляРегистра2();
	
	Если ВидыДокументовДляКонтроляРегистров1и3.Найти(Ключ.ВидДокумента) <> Неопределено Тогда
		ПроверитьЗаполнениеАкцизныхМарокРегистры13(Объект, Отказ, ПроверятьТолькоЕслиЗаполнены, РазрешеноНеУказыватьПартионныеМаркиВСтроке);
	КонецЕсли;
	
	Если ВидыДокументовДляКонтроляРегистра2.Найти(Ключ.ВидДокумента) <> Неопределено Тогда 
		ПроверитьЗаполнениеАкцизныхМарокРегистр2(Объект, Отказ);
	КонецЕсли;
	
КонецПроцедуры

// Заполняет служебные реквизиты в табличной части "Товары" в процедурах ПриСозданииНаСервере
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - Форма
//  ИмяКолонкиКоличество - Строка - Имя колонки "Количество"
//
Процедура ЗаполнитьСлужебныеРеквизиты(Форма, ИмяКолонкиКоличество = "Количество") Экспорт
	
	ИсточникОрганизацияЕГАИС = ИсточникОрганизацияЕГАИС(Форма);
	Источник         = ИсточникОрганизацияЕГАИС.Источник;
	
	Товары        = Источник.Товары.Выгрузить();
	АкцизныеМарки = Источник.АкцизныеМарки.Выгрузить();
	
	ЕстьКолонкаКоличество = АкцизныеМарки.Колонки.Найти("Количество") <> Неопределено;
	Если Не ЕстьКолонкаКоличество Тогда
		АкцизныеМарки.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0)));
		Для Каждого СтрокаТЧ Из АкцизныеМарки Цикл
			СтрокаТЧ.Количество = 1;
		КонецЦикла;
	КонецЕсли;
	
	ЕстьКолонкаТипШтрихкода = Товары.Колонки.Найти("ТипШтрихкода") <> Неопределено;
	Если ЕстьКолонкаТипШтрихкода Тогда
		ЗаполнитьЗначенияТипШтрихкодаВТаблицеАкцизныеМарки(АкцизныеМарки);
		АкцизныеМарки.Свернуть("ИдентификаторСтроки, Справка2, ТипШтрихкода", "Количество");
	Иначе
		АкцизныеМарки.Свернуть("ИдентификаторСтроки, Справка2", "Количество");
	КонецЕсли;
	
	ЕстьКолонкаСправка2 = Товары.Колонки.Найти("Справка2") <> Неопределено;
	Если Не ЕстьКолонкаСправка2 Тогда
		Товары.Колонки.Добавить("Справка2", Новый ОписаниеТипов("СправочникСсылка.Справки2ЕГАИС"));
	КонецЕсли;
	
	ЕстьКолонкаНеупакованнаяПродукция = Товары.Колонки.Найти("НеупакованнаяПродукция") <> Неопределено;
	
	ДополнениеКИндексу = 0;
	Если Товары.Колонки.Найти("НомерСтроки") = Неопределено Тогда
		
		ДополнениеКИндексу = 1;
		Товары.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0)));
		
		КоличествоСтрок = Товары.Количество() - 1;
		Для НомерСтроки = 0 По КоличествоСтрок Цикл
			Товары[НомерСтроки].НомерСтроки = НомерСтроки;
		КонецЦикла;
		
	КонецЕсли;
	
	АлкогольнаяПродукция = СлужебныеДанныеАлкогольнойПродукции(Товары);
	
	ПустаяСправка2 = Справочники.Справки2ЕГАИС.ПустаяСсылка();
	
	ИндексДляТаблицыАкцизныеМарки = "ИдентификаторСтроки";
	Если ЕстьКолонкаСправка2 Тогда
		ИндексДляТаблицыАкцизныеМарки = "ИдентификаторСтроки, Справка2";
	КонецЕсли;
	АкцизныеМарки.Индексы.Добавить(ИндексДляТаблицыАкцизныеМарки);
	
	Для Каждого Выборка Из АлкогольнаяПродукция Цикл
		
		СтрокаТЧ = Источник.Товары[Выборка.НомерСтроки - 1 + ДополнениеКИндексу];
		СтрокаТЧ.МаркируемаяПродукция    = Выборка.МаркируемаяПродукция;
		
		Если ЕстьКолонкаНеупакованнаяПродукция Тогда
			СтрокаТЧ.НеупакованнаяПродукция = Выборка.ТипПродукции = Перечисления.ТипыПродукцииЕГАИС.Неупакованная;
		КонецЕсли;
		
		СтрокаТЧ.КоличествоАкцизныхМарок = 0;
		
		Если СтрокаТЧ.МаркируемаяПродукция Тогда
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("ИдентификаторСтроки", Выборка.ИдентификаторСтроки);
			Если ЕстьКолонкаСправка2 Тогда
				ПараметрыОтбора.Вставить("Справка2", ПустаяСправка2);
			КонецЕсли;
			
			НайденныеСтроки = АкцизныеМарки.НайтиСтроки(ПараметрыОтбора);
			Для Каждого СтрокаТЧНайденныеСтроки Из НайденныеСтроки Цикл
				СтрокаТЧ.КоличествоАкцизныхМарок = СтрокаТЧ.КоличествоАкцизныхМарок + СтрокаТЧНайденныеСтроки.Количество;
				
				Если ЕстьКолонкаТипШтрихкода Тогда
					СтрокаТЧ.ТипШтрихкода = СтрокаТЧНайденныеСтроки.ТипШтрихкода;
				КонецЕсли;
			КонецЦикла;
			
			Если ЕстьКолонкаСправка2 И Выборка.Справка2 <> ПустаяСправка2 Тогда
				
				ПараметрыОтбора = Новый Структура;
				ПараметрыОтбора.Вставить("Справка2", Выборка.Справка2);
				
				НайденныеСтроки = АкцизныеМарки.НайтиСтроки(ПараметрыОтбора);
				Для Каждого СтрокаТЧНайденныеСтроки Из НайденныеСтроки Цикл
					СтрокаТЧ.КоличествоАкцизныхМарок = СтрокаТЧ.КоличествоАкцизныхМарок + СтрокаТЧНайденныеСтроки.Количество;
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
		АкцизныеМаркиКлиентСервер.ЗаполнитьИндексАкцизнойМарки(СтрокаТЧ, ИмяКолонкиКоличество);
		
	КонецЦикла;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "АдресСоответствияАкцизныхМарок")
		И Форма.АдресСоответствияАкцизныхМарок = "" Тогда
		Форма.АдресСоответствияАкцизныхМарок = ПоместитьВоВременноеХранилище(Неопределено, Форма.УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

// Функция возвращает таблицу значений классификатора типов акцизных марок.
//
Функция КлассификаторТиповАкцизныхМарок() Экспорт
	
	ТаблицаТиповАкцизныхМарок = Новый ТаблицаЗначений;
	
	Макет = ПолучитьОбщийМакет("ТипыАкцизныхМарокЕГАИС");
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(Макет.ПолучитьТекст());
	
	Если Не ЧтениеXML.Прочитать() Тогда
		ВызватьИсключение НСтр("ru = 'Пустой XML'");
	ИначеЕсли ЧтениеXML.Имя <> "Items" Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка в структуре XML'");
	КонецЕсли;
	
	ИменаКолонок = СтрЗаменить(ЧтениеXML.ПолучитьАтрибут("Columns"), ",", Символы.ПС);
	КоличествоКолонок = СтрЧислоСтрок(ИменаКолонок);
	
	Для Сч = 1 По КоличествоКолонок Цикл
		ИмяКолонки = СтрПолучитьСтроку(ИменаКолонок, Сч);
		
		ТаблицаТиповАкцизныхМарок.Колонки.Добавить(ИмяКолонки, Новый ОписаниеТипов("Строка"));
	КонецЦикла;
	
	Пока ЧтениеXML.Прочитать() Цикл
		
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента И ЧтениеXML.Имя = "Items" Тогда
			Прервать;
		ИначеЕсли ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента Тогда
			Продолжить;
		ИначеЕсли ЧтениеXML.Имя <> "Item" Тогда
			ВызватьИсключение НСтр("ru = 'Ошибка в структуре XML'");
		КонецЕсли;
		
		новСтр = ТаблицаТиповАкцизныхМарок.Добавить();
		Для Сч = 1 По КоличествоКолонок Цикл
			ИмяКолонки = СтрПолучитьСтроку(ИменаКолонок, Сч);
			
			новСтр[Сч-1] = ЧтениеXML.ПолучитьАтрибут(ИмяКолонки);
		КонецЦикла;
		
	КонецЦикла;
	
	ТаблицаТиповАкцизныхМарок.Сортировать(ТаблицаТиповАкцизныхМарок.Колонки[0].Имя + " Возр");
	
	Возврат ТаблицаТиповАкцизныхМарок;
	
КонецФункции

// Возвращает признак видимости информационной надписи о доступности сканирования штрихкода "Data Matrix" акцизной марки.
//
// Параметры:
//  РассчитыватьПоОстаткам - Булево - признак расчета статистики заполнения по остаткам справок 2.
//
// Возвращаемое значение:
//  Булево - признак видимости информационной надписи.
//
Функция ВидимостьИнформацииОСканированииDataMatrix(РассчитыватьПоОстаткам) Экспорт
	
	ПроцентЗаполнения = ПроцентЗаполненияДиапазоновНомеровАкцизныхМарок(РассчитыватьПоОстаткам);
	
	Возврат ПроцентЗаполнения >= 50;
	
КонецФункции

Процедура СообщитьОбОшибкеЗаполненияСправки2(ШтрихкодУпаковки) Экспорт
	
	Если ОбщегоНазначения.РежимОтладки() Тогда
		
		ТекстОшибки = СтрШаблон(
			НСтр("ru = 'При изменении статуса акцизной марки %1 возникла ошибка:
			           |Не удалось определить справку 2 и (или) алкогольную продукцию'"),
			ШтрихкодУпаковки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		ИнтеграцияЕГАИСВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(ТекстОшибки);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СообщитьОбОшибкеЧтенияСтатуса(ШтрихкодУпаковки) Экспорт
	
	Если ОбщегоНазначения.РежимОтладки() Тогда
		
		ТекстОшибки = СтрШаблон(
			НСтр("ru = 'При изменении статуса акцизной марки %1 возникла ошибка:
			           |Прочитанный статус не актуален'"),
			ШтрихкодУпаковки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		ИнтеграцияЕГАИСВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(ТекстОшибки);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СлужебныеДанныеАлкогольнойПродукции(Товары)
	
	Результат = Неопределено;
	АкцизныеМаркиЕГАИСПереопределяемый.СлужебныеДанныеАлкогольнойПродукции(Товары, Результат);
	Если Результат <> Неопределено Тогда
		Возврат  Результат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.НомерСтроки,
	|	Т.ИдентификаторСтроки,
	|	Т.АлкогольнаяПродукция,
	|	Т.Справка2,
	|	Т.Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки          КАК НомерСтроки,
	|	Товары.ИдентификаторСтроки  КАК ИдентификаторСтроки,
	|	Товары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Товары.Справка2             КАК Справка2,
	|	Товары.Количество           КАК Количество,
	|	0                           КАК КоличествоАкцизныхМарок,
	|	ЕСТЬNULL(Товары.АлкогольнаяПродукция.ВидПродукции.Маркируемый, ЛОЖЬ) КАК МаркируемаяПродукция,
	|	ЕСТЬNULL(Товары.АлкогольнаяПродукция.ТипПродукции, ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)) КАК ТипПродукции
	|ИЗ
	|	Товары КАК Товары");
	
	Запрос.Параметры.Вставить("Товары", Товары);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;

КонецФункции

Процедура ПроверитьЗаполнениеАкцизныхМарокРегистры13(Объект, Отказ, ПроверятьТолькоЕслиЗаполнены, РазрешеноНеУказыватьПартионныеМаркиВСтроке)
	
	Товары        = Объект.Товары.Выгрузить();
	АкцизныеМарки = Объект.АкцизныеМарки.Выгрузить();
	АкцизныеМарки.Свернуть("ИдентификаторСтроки, Справка2", "Количество");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.НомерСтроки КАК НомерСтроки,
	|	Т.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВЫРАЗИТЬ(Т.АлкогольнаяПродукция КАК Справочник.КлассификаторАлкогольнойПродукцииЕГАИС) КАК АлкогольнаяПродукция,
	|	ВЫРАЗИТЬ(Т.Справка2 КАК Справочник.Справки2ЕГАИС) КАК Справка2,
	|	Т.Количество КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Т
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Товары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Товары.Справка2 КАК Справка2,
	|	ЕСТЬNULL(Товары.Справка2.Поштучная, ЛОЖЬ) КАК ПомарочныйУчет,
	|	Товары.Количество КАК Количество,
	|	0 КАК КоличествоАкцизныхМарок
	|ИЗ
	|	Товары КАК Товары
	|ГДЕ
	|	ЕСТЬNULL(Товары.АлкогольнаяПродукция.ВидПродукции.Маркируемый, ЛОЖЬ)");
	
	Запрос.Параметры.Вставить("Товары", Товары);
	Товары = Запрос.Выполнить().Выгрузить();
		
	Для Каждого СтрокаТЧ Из Товары Цикл
		
		Если ЗначениеЗаполнено(СтрокаТЧ.ИдентификаторСтроки) Тогда
			
			ПараметрыОтбора = Новый Структура("ИдентификаторСтроки", СтрокаТЧ.ИдентификаторСтроки);
			
			НайденныеСтроки = АкцизныеМарки.НайтиСтроки(ПараметрыОтбора);
			Для Каждого СтрокаТЧНайденныеСтроки Из НайденныеСтроки Цикл
				СтрокаТЧ.КоличествоАкцизныхМарок = СтрокаТЧ.КоличествоАкцизныхМарок + СтрокаТЧНайденныеСтроки.Количество;
			КонецЦикла;
			
		КонецЕсли;
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ИдентификаторСтроки", "");
		ПараметрыОтбора.Вставить("Справка2",            СтрокаТЧ.Справка2);
		
		НайденныеСтроки = АкцизныеМарки.НайтиСтроки(ПараметрыОтбора);
		Для Каждого СтрокаТЧНайденныеСтроки Из НайденныеСтроки Цикл
			СтрокаТЧ.КоличествоАкцизныхМарок = СтрокаТЧ.КоличествоАкцизныхМарок + СтрокаТЧНайденныеСтроки.Количество;
		КонецЦикла;
		
	КонецЦикла;
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		
		Если ПроверятьТолькоЕслиЗаполнены
			И СтрокаТЧ.КоличествоАкцизныхМарок = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если РазрешеноНеУказыватьПартионныеМаркиВСтроке
			И СтрокаТЧ.ПомарочныйУчет = Ложь
			И СтрокаТЧ.КоличествоАкцизныхМарок = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаТЧ.Количество = СтрокаТЧ.КоличествоАкцизныхМарок Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстОшибки = НСтр("ru = 'В строке %1 для алкогольной продукции """"%2"""" должно быть указано акцизных марок - %3, а указано - %4.'");
		ТекстОшибки = СтрШаблон(
			ТекстОшибки,
			СтрокаТЧ.НомерСтроки,
			СтрокаТЧ.АлкогольнаяПродукция,
			СтрокаТЧ.Количество,
			СтрокаТЧ.КоличествоАкцизныхМарок);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			Объект,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрокаТЧ.НомерСтроки, "КоличествоУпаковок"),,
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеАкцизныхМарокРегистр2(Объект, Отказ)
	
	Товары        = Объект.Товары.Выгрузить();
	
	ЕстьАкцизныеМарки = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Объект,"АкцизныеМарки");
	Если ЕстьАкцизныеМарки Тогда 
		АкцизныеМарки = Объект.АкцизныеМарки.Выгрузить();
	Иначе 
		АкцизныеМарки = ПустаяТаблицаАкцизныеМарки();
		Товары.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Булево"));
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.НомерСтроки КАК НомерСтроки,
	|	Т.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВЫРАЗИТЬ(Т.АлкогольнаяПродукция КАК Справочник.КлассификаторАлкогольнойПродукцииЕГАИС) КАК АлкогольнаяПродукция,
	|	ВЫРАЗИТЬ(Т.Справка2 КАК Справочник.Справки2ЕГАИС) КАК Справка2,
	|	Т.Количество КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Товары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Товары.Справка2 КАК Справка2,
	|	ЕСТЬNULL(Товары.Справка2.Поштучная, ЛОЖЬ) КАК Поштучная,
	|	Товары.Количество КАК Количество,
	|	0 КАК КоличествоАкцизныхМарок
	|ИЗ
	|	Товары КАК Товары
	|ГДЕ
	|	ЕСТЬNULL(Товары.АлкогольнаяПродукция.ВидПродукции.Маркируемый, ЛОЖЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Т.Справка2 КАК Справка2,
	|	Т.Количество КАК Количество,
	|	ВЫРАЗИТЬ(Т.АкцизнаяМарка КАК Справочник.ШтрихкодыУпаковокТоваров) КАК АкцизнаяМарка
	|ПОМЕСТИТЬ АкцизныеМарки
	|ИЗ
	|	&АкцизныеМарки КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АкцизныеМарки.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	АкцизныеМарки КАК АкцизныеМарки
	|ГДЕ
	|	ВЫБОР
	|			КОГДА АкцизныеМарки.АкцизнаяМарка.ТипШтрихкода = ЗНАЧЕНИЕ(Перечисление.ТипыШтрихкодов.DataMatrix)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И АкцизныеМарки.Справка2 = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)");
	
	Запрос.Параметры.Вставить("Товары", Товары);
	Запрос.Параметры.Вставить("АкцизныеМарки", АкцизныеМарки);
	Пакет = Запрос.ВыполнитьПакет();
	
	Товары = Пакет[1].Выгрузить();
	АкцизныеМарки = Пакет[3].Выгрузить();
	АкцизныеМарки.Индексы.Добавить("ИдентификаторСтроки");
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		
		Если СтрокаТЧ.Поштучная = Истина Тогда
			ТекстОшибки = СтрШаблон(
				НСтр("ru = 'В строке %1 для алкогольной продукции """"%2"""" указана поштучная Справка 2 которая не может быть учтена в регистре 2 ЕГАИС.'"),
				СтрокаТЧ.НомерСтроки,
				СтрокаТЧ.АлкогольнаяПродукция);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				Объект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрокаТЧ.НомерСтроки, "Справка2"),,
				Отказ);
			Продолжить;
		КонецЕсли;
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ИдентификаторСтроки", СтрокаТЧ.ИдентификаторСтроки);
		
		НайденныеСтроки = АкцизныеМарки.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() Тогда
			ТекстОшибки = НСтр("ru = 'В строке %1 для алкогольной продукции """"%2"""" указана поштучная акцизная марка которая не может быть учтена в регистре 2 ЕГАИС.'");
			ТекстОшибки = СтрШаблон(ТекстОшибки,
				СтрокаТЧ.НомерСтроки,
				СтрокаТЧ.АлкогольнаяПродукция);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				Объект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрокаТЧ.НомерСтроки, "Справка2"),,
				Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ИсточникОрганизацияЕГАИС(Форма)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Объект") Тогда
		Источник = Форма.Объект;
	Иначе
		Источник = Форма;
	КонецЕсли;
	
	ОрганизацияЕГАИС = Неопределено;
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Источник, "ОрганизацияЕГАИС") Тогда
		ОрганизацияЕГАИС = Источник.ОрганизацияЕГАИС;
	Иначе
		МассивСтроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Форма.ИмяФормы, ".");
		Если МассивСтроки.Количество() > 1 Тогда
			Если МассивСтроки[1] = "ТТНВходящаяЕГАИС" Тогда
				ОрганизацияЕГАИС = Источник.Грузополучатель;
			ИначеЕсли МассивСтроки[1] = "ТТНИсходящаяЕГАИС" Тогда
				ОрганизацияЕГАИС = Источник.Грузоотправитель;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("Источник",         Источник);
	ВозвращаемоеЗначение.Вставить("ОрганизацияЕГАИС", ОрганизацияЕГАИС);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#Область ЗаполнениеДокументов

Функция ЗаполнитьТоварИзСтроки(ДокументОбъект, СтрокаТовара, ПараметрыЗаполнения, Количество)
	
	ЭтоМаркируемаяПродукция = (ТипЗнч(СтрокаТовара) = Тип("СтрокаДереваЗначений"));
	
	Если ЭтоМаркируемаяПродукция И ПараметрыЗаполнения.ТолькоПустаяСправка2 Тогда
		Справка2 = Справочники.Справки2ЕГАИС.ПустаяСсылка();
	Иначе
		Справка2 = СтрокаТовара.Справка2;
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТовара, "ИдентификаторСтроки") Тогда
		ИдентификаторСтроки = СтрокаТовара.ИдентификаторСтроки;
	Иначе
		ИдентификаторСтроки = Неопределено;
	КонецЕсли;
	
	ВыполнитьПоискПоНоменклатуре = Истина;
	
	Если ЗначениеЗаполнено(ИдентификаторСтроки) Тогда
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ИдентификаторСтроки", ИдентификаторСтроки);
		
		НайденныеСтроки = ДокументОбъект.Товары.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() > 0 Тогда
			ВыполнитьПоискПоНоменклатуре    = Ложь;
			СтрокаТЧТовары                  = НайденныеСтроки[0];
			СтрокиТЧДляУменьшенияКоличества = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВыполнитьПоискПоНоменклатуре Тогда
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Номенклатура",   СтрокаТовара.Номенклатура);
		ПараметрыОтбора.Вставить("Характеристика", СтрокаТовара.Характеристика);
		
		ТипШтрихкода = Неопределено;
		Если ГруппироватьНоменклатуруПоТипуШтрихкода(ДокументОбъект)
			И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТовара, "ШтрихкодУпаковки") Тогда
			ТипШтрихкода = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТовара.ШтрихкодУпаковки, "ТипШтрихкода");
		КонецЕсли;
		
		Если ПараметрыЗаполнения.УчитыватьСерии Тогда
			ПараметрыОтбора.Вставить("Серия", СтрокаТовара.Серия);
		КонецЕсли;
		
		РезультатПоиска = АкцизныеМаркиЕГАИС.НайтиСтрокиТоваров(
			ДокументОбъект.Товары, ПараметрыОтбора,
			Справка2, СтрокаТовара.АлкогольнаяПродукция, ПараметрыЗаполнения, ТипШтрихкода);
		
		СтрокаТЧТовары                  = РезультатПоиска.ПолноеСоответствие;
		СтрокиТЧДляУменьшенияКоличества = РезультатПоиска.КЗаполнению;
		
	КонецЕсли;
	
	Если СтрокиТЧДляУменьшенияКоличества = Неопределено
		И СтрокаТЧТовары = Неопределено Тогда
		
		СтрокаТЧТовары = ДокументОбъект.Товары.Добавить();
		
		СтрокаТЧТовары.Номенклатура         = СтрокаТовара.Номенклатура;
		СтрокаТЧТовары.Характеристика       = СтрокаТовара.Характеристика;
		СтрокаТЧТовары.Серия                = СтрокаТовара.Серия;
		Если ТипШтрихкода <> Неопределено Тогда
			СтрокаТЧТовары.ТипШтрихкода = ТипШтрихкода;
		КонецЕсли;

		СтрокаТЧТовары.АлкогольнаяПродукция = СтрокаТовара.АлкогольнаяПродукция;
		Если ПараметрыЗаполнения.ЕстьСправка2 Тогда
			СтрокаТЧТовары.Справка2 = Справка2;
		КонецЕсли;
		
		УстановитьИдентификаторСтроки(СтрокаТЧТовары, ИдентификаторСтроки);
		
		ОбработатьДобавленнуюСтроку(СтрокаТЧТовары, ПараметрыЗаполнения, Количество, ЭтоМаркируемаяПродукция);
		
	ИначеЕсли СтрокиТЧДляУменьшенияКоличества = Неопределено
		И СтрокаТЧТовары <> Неопределено Тогда
		
		ОбработатьИзмененнуюСтроку(СтрокаТЧТовары, ПараметрыЗаполнения, Количество, ЭтоМаркируемаяПродукция);
		
	Иначе
		
		КоличествоКРаспределению = Количество;
		
		Пока КоличествоКРаспределению > 0
			И СтрокиТЧДляУменьшенияКоличества.Количество() > 0 Цикл
			
			ОбработанныеСтроки = Новый Массив;
			
			Для Каждого СтрокаТЧДляУменьшенияКоличества Из СтрокиТЧДляУменьшенияКоличества Цикл
				
				Если СтрокаТЧДляУменьшенияКоличества.Количество <= КоличествоКРаспределению Тогда
					
					Если СтрокаТЧТовары = Неопределено Тогда
						
						СтрокаТЧТовары = СтрокаТЧДляУменьшенияКоличества;
						
						СтрокаТЧТовары.АлкогольнаяПродукция = СтрокаТовара.АлкогольнаяПродукция;
						Если ПараметрыЗаполнения.ЕстьСправка2 Тогда
							СтрокаТЧТовары.Справка2 = Справка2;
						КонецЕсли;
						
					Иначе
						
						ДокументОбъект.Товары.Удалить(СтрокаТЧДляУменьшенияКоличества);
						
						Индекс = ПараметрыЗаполнения.ИзмененныеСтроки.Найти(СтрокаТЧДляУменьшенияКоличества);
						Если Индекс <> Неопределено Тогда
							ПараметрыЗаполнения.ИзмененныеСтроки.Удалить(Индекс);
						КонецЕсли;
						
					КонецЕсли;
					
					ОбработанныеСтроки.Добавить(СтрокаТЧДляУменьшенияКоличества);
					
					СписываемоеКоличество = СтрокаТЧДляУменьшенияКоличества.Количество;
					
					ОбработатьИзмененнуюСтроку(СтрокаТЧТовары, ПараметрыЗаполнения, СписываемоеКоличество, ЭтоМаркируемаяПродукция);
					
					КоличествоКРаспределению = КоличествоКРаспределению - СписываемоеКоличество;
					
				Иначе
					
					СтрокаТЧДляУменьшенияКоличества.Количество = СтрокаТЧДляУменьшенияКоличества.Количество - КоличествоКРаспределению;
					ПараметрыЗаполнения.ИзмененныеСтроки.Добавить(СтрокаТЧДляУменьшенияКоличества);
					
					Если СтрокаТЧТовары = Неопределено Тогда
						
						СтрокаТЧТовары = ДокументОбъект.Товары.Вставить(ДокументОбъект.Товары.Индекс(СтрокаТЧДляУменьшенияКоличества) + 1);
						ЗаполнитьЗначенияСвойств(СтрокаТЧТовары, СтрокаТЧДляУменьшенияКоличества,,"Количество, КоличествоУпаковок");
						
						СтрокаТЧТовары.АлкогольнаяПродукция = СтрокаТовара.АлкогольнаяПродукция;
						Если ПараметрыЗаполнения.ЕстьСправка2 Тогда
							СтрокаТЧТовары.Справка2 = Справка2;
						КонецЕсли;
						
						УстановитьИдентификаторСтроки(СтрокаТЧТовары, ИдентификаторСтроки);
						
						ОбработатьДобавленнуюСтроку(СтрокаТЧТовары, ПараметрыЗаполнения, КоличествоКРаспределению, ЭтоМаркируемаяПродукция);
						
					Иначе
						
						ОбработатьИзмененнуюСтроку(СтрокаТЧТовары, ПараметрыЗаполнения, КоличествоКРаспределению, ЭтоМаркируемаяПродукция);
						
					КонецЕсли;
					
					КоличествоКРаспределению = 0;
					
				КонецЕсли;
				
				Если КоличествоКРаспределению <= 0 Тогда
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			Для Каждого ОбработаннаяСтрока Из ОбработанныеСтроки Цикл
				Индекс = СтрокиТЧДляУменьшенияКоличества.Найти(ОбработаннаяСтрока);
				Если Индекс <> Неопределено Тогда
					СтрокиТЧДляУменьшенияКоличества.Удалить(Индекс);
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;
		
		Если КоличествоКРаспределению > 0 И СтрокаТЧТовары <> Неопределено Тогда
			ОбработатьИзмененнуюСтроку(СтрокаТЧТовары, ПараметрыЗаполнения, КоличествоКРаспределению, ЭтоМаркируемаяПродукция);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтрокаТЧТовары;
	
КонецФункции

Процедура УстановитьИдентификаторСтроки(СтрокаТЧТовары, ИдентификаторСтроки)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТЧТовары, "ИдентификаторСтроки") Тогда
		Если ЗначениеЗаполнено(ИдентификаторСтроки) Тогда
			СтрокаТЧТовары.ИдентификаторСтроки = ИдентификаторСтроки;
		Иначе
			СтрокаТЧТовары.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьРезультатДобавленияШтрихкодаУпаковки(Форма, ДанныеШтрихкода, ПараметрыСканирования, РезультатДобавленияШтрихкодаВДокумент)
	
	Если Не РезультатДобавленияШтрихкодаВДокумент.ЕстьОшибкиВДеревеУпаковок Тогда
		
		Если ПараметрыСканирования.АдресСоответствияАкцизныхМарок <> Неопределено Тогда
			
			Если ЭтоАдресВременногоХранилища(Форма.АдресСоответствияАкцизныхМарок) Тогда
				
				АкцизныеМаркиВДокументе = ПолучитьИзВременногоХранилища(Форма.АдресСоответствияАкцизныхМарок);
				АкцизныеМаркиВДокументе.Вставить(ДанныеШтрихкода.ШтрихкодУпаковки, ДанныеШтрихкода.Штрихкод);
				
				Для Каждого ВложенныйШтрихкод Из ДанныеШтрихкода.ВложенныеШтрихкоды Цикл
					АкцизныеМаркиВДокументе.Вставить(ВложенныйШтрихкод.Ключ, ВложенныйШтрихкод.Значение);
				КонецЦикла;
				
				ПоместитьВоВременноеХранилище(АкцизныеМаркиВДокументе, Форма.АдресСоответствияАкцизныхМарок);
				
			Иначе
				
				АкцизныеМаркиВДокументе = Новый Соответствие;
				АкцизныеМаркиВДокументе.Вставить(ДанныеШтрихкода.ШтрихкодУпаковки, ДанныеШтрихкода.Штрихкод);
				
				Для Каждого ВложенныйШтрихкод Из ДанныеШтрихкода.ВложенныеШтрихкоды Цикл
					АкцизныеМаркиВДокументе.Вставить(ВложенныйШтрихкод.Ключ, ВложенныйШтрихкод.Значение);
				КонецЦикла;
				
				Форма.АдресСоответствияАкцизныхМарок = ПоместитьВоВременноеХранилище(АкцизныеМаркиВДокументе, Форма.УникальныйИдентификатор);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьРезультатДобавленияШтрихкодаАкцизнойМарки(Форма, ДанныеШтрихкода, ПараметрыСканирования, РезультатДобавленияШтрихкодаВДокумент)
	
	Если Не ЗначениеЗаполнено(РезультатДобавленияШтрихкодаВДокумент.ТекстОшибки) Тогда
		
		Если ПараметрыСканирования.АдресСоответствияАкцизныхМарок <> Неопределено Тогда
			
			Если ЭтоАдресВременногоХранилища(Форма.АдресСоответствияАкцизныхМарок) Тогда
				
				АкцизныеМаркиВДокументе = ПолучитьИзВременногоХранилища(Форма.АдресСоответствияАкцизныхМарок);
				АкцизныеМаркиВДокументе.Вставить(ДанныеШтрихкода.ШтрихкодУпаковки, ДанныеШтрихкода.Штрихкод);
				
				ПоместитьВоВременноеХранилище(АкцизныеМаркиВДокументе, Форма.АдресСоответствияАкцизныхМарок);
				
			Иначе
				
				АкцизныеМаркиВДокументе = Новый Соответствие;
				АкцизныеМаркиВДокументе.Вставить(ДанныеШтрихкода.ШтрихкодУпаковки, ДанныеШтрихкода.Штрихкод);
				
				Форма.АдресСоответствияАкцизныхМарок = ПоместитьВоВременноеХранилище(АкцизныеМаркиВДокументе, Форма.УникальныйИдентификатор);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// Описание
// Определяет вид продукции по переданному списку штрихкодов упаковок.
// Параметры:
// 	ШтрихкодыУпаковок - Массив - Список типа СправочникСсылка.ШтрихкодыУпаковокТоваров
// Возвращаемое значение:
// 	Соответствие - Соответствие СправочникСсылка.ШтрихкодыУпаковокТоваров:ПеречислениеСсылка.ВидыПродукцииИС.
Функция СоответствиеШтрихкодовУпаковокИВидовПродукции(ШтрихкодыУпаковок)
	
	Результат = Новый Соответствие;
	
	СписокЗапросов = Новый СписокЗначений;
	
	СписокЗапросов.Добавить(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ШтрихкодыУпаковок.Ссылка КАК ШтрихкодСсылка,
		|	ШтрихкодыУпаковок.Номенклатура,
		|	ШтрихкодыУпаковок.Характеристика,
		|	ШтрихкодыУпаковок.Серия
		|ПОМЕСТИТЬ ДанныеШтрихкодовУпаковок
		|ИЗ
		|	Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковок
		|ГДЕ
		|	ШтрихкодыУпаковок.Ссылка В (&ШтрихкодыУпаковок)
		|	И ШтрихкодыУпаковок.Номенклатура <> &ПустаяНоменклатура
		|");
	
	СписокЗапросов.Добавить(
		ШтрихкодированиеИС.ОпределитьТекстЗапросаСвойстваМаркируемойПродукции());
	
	СписокЗапросов.Добавить(
		"ВЫБРАТЬ
		|	ДанныеШтрихкодовУпаковок.ШтрихкодСсылка   КАК ШтрихкодСсылка,
		|	СвойстваМаркируемойПродукции.ВидПродукции КАК ВидПродукции
		|ИЗ
		|	ДанныеШтрихкодовУпаковок КАК ДанныеШтрихкодовУпаковок
		|		ЛЕВОЕ СОЕДИНЕНИЕ СвойстваМаркируемойПродукции КАК СвойстваМаркируемойПродукции
		|		ПО ДанныеШтрихкодовУпаковок.Номенклатура = СвойстваМаркируемойПродукции.Номенклатура",
		"ВидыПродукцииПоШтрихкодам");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ШтрихкодыУпаковок",  ШтрихкодыУпаковок);
	Запрос.УстановитьПараметр("ПустаяНоменклатура", ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("Номенклатура"));
	
	РезультатыЗапроса = ИнтеграцияИС.ВыполнитьПакетЗапросов(Запрос, СписокЗапросов, Ложь);
	
	Выборка = РезультатыЗапроса["ВидыПродукцииПоШтрихкодам"].Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат.Вставить(Выборка.ШтрихкодСсылка, Выборка.ВидПродукции);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ГруппироватьНоменклатуруПоТипуШтрихкода(ДокументОбъект)
	
	Возврат ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.АктПостановкиНаБалансЕГАИС");
	
КонецФункции

// Возвращает процент заполнения диапазонов номеров акцизных марок в справках 2.
//
Функция ПроцентЗаполненияДиапазоновНомеровАкцизныхМарок(РассчитыватьПоОстаткам)
	
	Результат = 0;
	
	Запрос = Новый Запрос;
	
	Если РассчитыватьПоОстаткам Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.Справка2 КАК Справка2
		|ПОМЕСТИТЬ ИсходныеДанные
		|ИЗ
		|	РегистрНакопления.ОстаткиАлкогольнойПродукцииЕГАИС.Остатки(, Справка2 <> ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)) КАК ОстаткиАлкогольнойПродукцииЕГАИСОстатки
		|ГДЕ
		|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.КоличествоОстаток > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Справка2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка) КАК КоличествоСправок
		|ПОМЕСТИТЬ ЗаполненныеДиапазоны
		|ИЗ
		|	Справочник.Справки2ЕГАИС.ДиапазоныНомеровАкцизныхМарок КАК Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсходныеДанные КАК ИсходныеДанные
		|		ПО Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка = ИсходныеДанные.Справка2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ИсходныеДанные.Справка2) КАК КоличествоСправок
		|ПОМЕСТИТЬ ОстаткиСправок2
		|ИЗ
		|	ИсходныеДанные КАК ИсходныеДанные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ОстаткиСправок2.КоличествоСправок, 0) = 0
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ЗаполненныеДиапазоны.КоличествоСправок, 0) / ОстаткиСправок2.КоличествоСправок * 100
		|	КОНЕЦ КАК ПроцентЗаполнения
		|ИЗ
		|	ЗаполненныеДиапазоны КАК ЗаполненныеДиапазоны,
		|	ОстаткиСправок2 КАК ОстаткиСправок2";
		
	Иначе
		
		ПереданныеСправки2 = Новый Массив;
		Период = Неопределено;
		
		Пока ПереданныеСправки2.Количество() < 500 Цикл
			
			ЗапросПоСправкам = Новый Запрос;
			
			Если Период = Неопределено Тогда
				ЗапросПоСправкам.Текст =
				"ВЫБРАТЬ ПЕРВЫЕ 500
				|	ОстаткиАлкогольнойПродукцииЕГАИС.Период КАК Период,
				|	ОстаткиАлкогольнойПродукцииЕГАИС.Справка2 КАК Справка2
				|ИЗ
				|	РегистрНакопления.ОстаткиАлкогольнойПродукцииЕГАИС КАК ОстаткиАлкогольнойПродукцииЕГАИС
				|ГДЕ
				|	ОстаткиАлкогольнойПродукцииЕГАИС.Регистратор ССЫЛКА Документ.ПередачаВРегистр2ЕГАИС
				|
				|УПОРЯДОЧИТЬ ПО
				|	Период УБЫВ";
			Иначе
				ЗапросПоСправкам.УстановитьПараметр("Период", Период);
				ЗапросПоСправкам.Текст =
				"ВЫБРАТЬ ПЕРВЫЕ 500
				|	ОстаткиАлкогольнойПродукцииЕГАИС.Период КАК Период,
				|	ОстаткиАлкогольнойПродукцииЕГАИС.Справка2 КАК Справка2
				|ИЗ
				|	РегистрНакопления.ОстаткиАлкогольнойПродукцииЕГАИС КАК ОстаткиАлкогольнойПродукцииЕГАИС
				|ГДЕ
				|	ОстаткиАлкогольнойПродукцииЕГАИС.Регистратор ССЫЛКА Документ.ПередачаВРегистр2ЕГАИС
				|	И ОстаткиАлкогольнойПродукцииЕГАИС.Период <= &Период
				|
				|УПОРЯДОЧИТЬ ПО
				|	Период УБЫВ";
			КонецЕсли;
			
			РезультатЗапроса = ЗапросПоСправкам.Выполнить();
			Если РезультатЗапроса.Пустой() Тогда
				Прервать;
			КонецЕсли;
			
			Выборка = ЗапросПоСправкам.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				Если ПереданныеСправки2.Найти(Выборка.Справка2) = Неопределено Тогда
					ПереданныеСправки2.Добавить(Выборка.Справка2);
				КонецЕсли;
				
				Период = Выборка.Период;
			КонецЦикла;
			
			Если Выборка.Количество() < 500 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Запрос.УстановитьПараметр("Справки2", ПереданныеСправки2);
		Запрос.УстановитьПараметр("ПереданоСправок", ПереданныеСправки2.Количество());
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка) КАК КоличествоСправок
		|ПОМЕСТИТЬ ЗаполненныеДиапазоны
		|ИЗ
		|	Справочник.Справки2ЕГАИС.ДиапазоныНомеровАкцизныхМарок КАК Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок
		|ГДЕ
		|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка В(&Справки2)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА &ПереданоСправок = 0
		|			ТОГДА 0
		|		ИНАЧЕ ЗаполненныеДиапазоны.КоличествоСправок / &ПереданоСправок * 100
		|	КОНЕЦ КАК ПроцентЗаполнения
		|ИЗ
		|	ЗаполненныеДиапазоны КАК ЗаполненныеДиапазоны";
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Если ТипЗнч(Выборка.ПроцентЗаполнения) = Тип("Число") Тогда
			Результат = Выборка.ПроцентЗаполнения;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Окр(Результат, 2);
	
КонецФункции

// Для служебного использования
// Возвращает пустую таблицу - аналог ТЧ "Акцизные марки", при ее отсутствии
//
Функция ПустаяТаблицаАкцизныеМарки()
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Булево"));
	Результат.Колонки.Добавить("Справка2",            Новый ОписаниеТипов("СправочникСсылка.Справки2ЕГАИС"));
	Результат.Колонки.Добавить("Количество",          Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("АкцизнаяМарка",       Новый ОписаниеТипов("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
	Возврат Результат;
	
КонецФункции

Функция ВидыДокументовДляКонтроляРегистра2()
	
	МассивДокументов = Новый Массив();
	МассивДокументов.Добавить(Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр2);
	МассивДокументов.Добавить(Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2);
	МассивДокументов.Добавить(Перечисления.ВидыДокументовЕГАИС.ВозвратИзРегистра2);
	МассивДокументов.Добавить(Перечисления.ВидыДокументовЕГАИС.ПередачаВРегистр2);
	
	Возврат МассивДокументов;
	
КонецФункции

Функция ВидыДокументовДляКонтроляРегистров1и3()

	
	МассивДокументов = Новый Массив();
	МассивДокументов.Добавить(Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр1);
	МассивДокументов.Добавить(Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр3);
	МассивДокументов.Добавить(Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1);
	МассивДокументов.Добавить(Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра3);
	МассивДокументов.Добавить(Перечисления.ВидыДокументовЕГАИС.ПустаяСсылка());
	
	Возврат МассивДокументов;
	
КонецФункции

Процедура ЗаполнитьЗначенияТипШтрихкодаВТаблицеАкцизныеМарки(АкцизныеМарки)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ АкцизныеМарки
	|ИЗ
	|	&АкцизныеМарки КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.*,
	|	АкцизныеМарки.АкцизнаяМарка.ТипШтрихкода КАК ТипШтрихкода
	|ИЗ 
	|	АкцизныеМарки КАК АкцизныеМарки");
	
	Запрос.УстановитьПараметр("АкцизныеМарки", АкцизныеМарки);
	АкцизныеМарки = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

#КонецОбласти