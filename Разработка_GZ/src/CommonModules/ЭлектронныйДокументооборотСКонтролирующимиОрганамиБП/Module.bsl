#Область ПрограммныйИнтерфейс

// Возвращает таблицу сообщений регламентированной отчетности.
//
// Параметры:
//   Организация - СправочникСсылка.Организации - ссылка на организацию.
//
// Возвращаемое значение:
//   ТаблицаЗначений - таблица сообщений регламентированной отчетности с колонками:
//      * ТипСообщения - Строка - тип сообщения отчетности;
//      * Наименование - Строка - текст сообщения;
//      * ДатаСобытия - Дата - дата создания сообщения;
//      * Приоритет - Число(1, 0) - приоритет сообщения.
//
Функция ПолучитьНовыеСообщенияОтчетности(Организация = Неопределено) Экспорт
	
	СообщенияОтчетности = ЭлектронныйДокументооборотСКонтролирующимиОрганами.ПолучитьНовыеСообщенияОтчетности(Организация);
	СообщенияОтчетности.Колонки.Добавить("Приоритет", ОбщегоНазначения.ОписаниеТипаЧисло(1));
	
	Для Каждого Сообщение Из СообщенияОтчетности Цикл
		Сообщение.Приоритет = ПриоритетСообщенийОтчетности(Сообщение.ТипСообщения);
	КонецЦикла;
	
	Возврат СообщенияОтчетности;
	
КонецФункции

#КонецОбласти

#Область ДокументыПоТребованиюФНС

//Формирует сведения о документах-источниках, которые будут использоваться для заполнения реквизитов сканированных документов, 
//представляемых по требованию ФНС. Требуется заполнить для всех объектов метаданных,
//указанных в определяемом типе ИсточникДокументаПоТребованиюФНСБРО, за исключением тех, 
//которые предназначены исключительно для формирования элетронных документов.
//
//Параметры:
//
//	СвойстваИсточников	- Соответствие, соответствие переданных ссылок на источники и массива структур
//		Ключ 		– ссылка на источник для заполнения реквизитов сканированных документов
//		Значение 	– Массив, массив структур (начальное значение: пустой массив)
//		(каждый элемент массива – реквизиты для заполнения одного сканированного документа)
//
//		В общем случае один источник может служить источником для заполнения реквизитов нескольких сканированных документов (например документы РеализацияТоваровУслуг, ОказаниеУслуг).
//		Если у источника стоит пометка на удаление, массив структур должен остаться пустым.
//		Состав полей структуры различен для различных видов документов.
//
//		Поля структуры:
//
//			(обязательный)		Организация				- СправочникСсылка.Организации
//			(обязательный)		ВидДокументаФНС 		- ПеречислениеСсылка.ВидыПредставляемыхДокументов
//			(необязательный)	НомерСтрокиИсточника	- Число, обязательно указывается, если данный источник может служить 
//														источником для заполнения реквизитов нескольких документов одного вида ФНС  
//														Для остальных документов-источников не указывается.
//			(необязательный)	Направление 			- Перечисление.НаправленияДокументаПоТребованиюФНС,
//														обязателен для следующих видов документов ФНС:
//															Счет-фактура
//															Корректировочный счет-фактура
//															Акт приемки-сдачи работ (услуг)
//															Товарная накладная (ТОРГ-12)
//															Товарно-транспортная накладная
//														Для остальных видов документов ФНС не указывается.			
// 
//			Состав следующих полей структуры различен для различных видов документов.
//
//			(необязательный)	Дата			- Дата
//			(необязательный)	Номер			- Строка
//			(необязательный)	СуммаВсего		- Число
//			(необязательный)	СуммаНалога		- Число
//			(необязательный)	НомерОснования	- Строка
//			(необязательный)	ДатаОснования	- Дата
//			(необязательный)	Предмет			- Строка
//			(необязательный)	НачалоПериода	- Дата
//			(необязательный)	КонецПериода	- Дата
//			(необязательный)	Участники		- Массив структур, 
//				поля структуры
//					(обязательный)		Роль				- ПеречислениеСсылка.РолиУчастниковСделкиДокументаПоТребованиюФНС
//					(обязательный)		ЯвляетсяЮрЛицом		- Булево
//					(необязательный)	ЮрЛицоНаименование	- Строка
//					(необязательный)	ЮрЛицоИНН			- Строка
//					(необязательный)	ЮрЛицоКПП			- Строка
//					(необязательный)	ФизЛицоИНН			- Строка
//					(необязательный)	ФизЛицоФамилия		- Строка
//					(необязательный)	ФизЛицоИмя			- Строка
//					(необязательный)	ФизЛицоОтчество		- Строка
//
//			Максимально возможный состав полей структуры для различных видов документов:
//				Счет-фактура
//					Дата
//					Номер
//					СуммаВсего
//					СуммаНалога
//					Участники
//				Корректировочный счет-фактура
//					Дата
//					Номер
//					СуммаВсего
//					СуммаНалога
//					НомерОснования
//					ДатаОснования
//					Участники
//				Акт приемки-сдачи работ (услуг)
//					Дата
//					Номер
//					СуммаВсего
//					СуммаНалога
//					НомерОснования
//					ДатаОснования
//					НачалоПериода
//					КонецПериода
//					Участники
//				Товарная накладная (ТОРГ-12)
//					Дата
//					Номер
//					СуммаВсего
//					СуммаНалога
//					НомерОснования
//					ДатаОснования
//					Участники
//				Товарно-транспортная накладная
//					Дата
//					Номер
//					СуммаВсего
//					СуммаНалога
//					НомерОснования
//					ДатаОснования
//					Участники
//				Грузовая таможенная декларация
//					Номер
//					Участники
//				Добавочный лист к грузовой таможенной декларации
//					Номер
//					НомерОснования
//					Участники
//				Договор
//					Дата
//					Номер
//					СуммаВсего
//					СуммаНалога
//					Предмет
//					Участники
//				Дополнение к договору
//					Дата
//					Номер
//					СуммаВсего
//					СуммаНалога
//					Предмет
//					НомерОснования
//					ДатаОснования
//					Участники
//				Спецификация (калькуляция, расчет) цены (стоимости)
//					Дата
//					Номер
//					СуммаВсего
//					СуммаНалога
//					Предмет
//					НомерОснования
//					ДатаОснования
//					Участники
//
//				Роли участников следует выбирать из возможных значений БРО перечисления РолиУчастниковСделкиДокументаПоТребованиюФНС.
//				Общий список возможных значений:
//					Агент
//					Акционер
//					Арендатор
//					Арендодатель
//					Векселедатель
//					Векселеполучатель
//					Генеральный подрядчик
//					Грузоотправитель
//					Грузополучатель
//					Декларант
//					Займодатель
//					Займополучатель (заемщик)
//					Заказчик
//					Импортер
//					Инвестор
//					Исполнитель
//					Лицо, составившее документ 
//					Отправитель
//					Перевозчик
//					Плательщик
//					Поверенный
//					Подрядчик
//					Покупатель
//					Получатель
//					Пользователь
//					Посредник
//					Поставщик
//					Продавец
//					Работник
//					Работодатель
//					Страхователь
//					Страховщик
//					Субподрядчик
//					Участник
//					Учредитель
//					Хранитель
//					Экспедитор
//					Экспортер
//					Эмитент
//
//				Вариант состава ролей участников для различных видов документов:
//					Счет-фактура
//						Агент
//						Грузоотправитель (если приобретаются/реализуются НЕ услуги)
//						Грузополучатель (если приобретаются/реализуются НЕ услуги)
//						Покупатель
//						Продавец
//					Корректировочный счет-фактура
//						Агент
//						Покупатель
//						Продавец
//					Акт приемки-сдачи работ (услуг)
//						Агент
//						Заказчик
//						Исполнитель
//					Товарная накладная (ТОРГ-12)
//						Грузоотправитель
//						Грузополучатель
//						Плательщик
//						Поставщик
//						Экспедитор
//					Товарно-транспортная накладная
//						Грузоотправитель
//						Грузополучатель
//						Заказчик
//						Перевозчик
//						Плательщик
//						Экспедитор
//					Грузовая таможенная декларация
//						Декларант
//						Импортер
//						Экспортер
//						Отправитель
//						Получатель
//					Добавочный лист к грузовой таможенной декларации
//						Декларант
//						Импортер
//						Экспортер
//						Отправитель
//						Получатель
//					Договор
//						Любые значения из общего списка
//					Дополнение к договору
//						Любые значения из общего списка
//					Спецификация (калькуляция, расчет) цены (стоимости)
//						Заказчик
//						Исполнитель
//
Процедура ОпределитьСвойстваИсточниковДляЗаполненияСканированныхДокументовПоТребованиюФНС(СвойстваИсточников) Экспорт
	
	ЗаполнитьСведения_ДоговорКонтрагента(СвойстваИсточников,                 Ложь);
	ЗаполнитьСведения_РеализацияТоваровУслуг(СвойстваИсточников,             Ложь);
	ЗаполнитьСведения_ПоступлениеТоваровУслуг(СвойстваИсточников,            Ложь);
	ЗаполнитьСведения_СчетФактураВыданный(СвойстваИсточников,                Ложь);
	ЗаполнитьСведения_СчетФактураПолученный(СвойстваИсточников,              Ложь);
	ЗаполнитьСведения_КорректировкаПоступления(СвойстваИсточников,           Ложь);
	ЗаполнитьСведения_КорректировкаРеализации(СвойстваИсточников,            Ложь);
	ЗаполнитьСведения_ОказаниеУслуг(СвойстваИсточников,                      Ложь);
	ЗаполнитьСведения_ОтчетКомитентуОПродажах(СвойстваИсточников,            Ложь);
	ЗаполнитьСведения_ГТДИмпорт(СвойстваИсточников,                          Ложь);
	ЗаполнитьСведения_АктОбОказанииПроизводственныхУслуг(СвойстваИсточников, Ложь);
	ЗаполнитьСведения_РеализацияУслугПоПереработке(СвойстваИсточников,       Ложь);
	ЗаполнитьСведения_ПередачаТоваров(СвойстваИсточников,                    Ложь);
	ЗаполнитьСведения_ВозвратТоваровПоставщику(СвойстваИсточников,           Ложь);
	ЗаполнитьСведения_ПоступлениеДопРасходов(СвойстваИсточников,             Ложь);
	ЗаполнитьСведения_АктОРасхождениях(СвойстваИсточников,                   Ложь);
	ЗаполнитьСведения_АктОРасхожденияхПолученный(СвойстваИсточников,         Ложь);
	
	
КонецПроцедуры

//Формирует сведения о документах-источниках, которые будут отражаться в едином списке документов, представляемых по требованию ФНС. 
//Требуется заполнить для всех объектов метаданных, указанных в определяемом типе ИсточникДокументаПоТребованиюФНСБРО..
//
//Параметры: 
//
//	СвойстваИсточников	- Соответствие, соответствие переданных ссылок на источники и массива структур 
//		Ключ 		– ссылка на источник
//		Значение 	– массив структур (начальное значение: пустой массив)
//		(каждый элемент массива – реквизиты для отображения свойств одного документа в журнале документов, 
//		представляемых по требованию ФНС)
//
//		В общем случае один источник может служить источником для отображения свойств нескольких документов.
//		Если у источника стоит пометка на удаление, массив структур должен остаться пустым массивом.
//		Состав полей структуры различен для различных видов документов-источников.
//
//			Поля структуры:
//				(обязательный)	Организация			- СправочникСсылка.Организации
//				(обязательный)	ВидДокументаФНС		- ПеречислениеСсылка.ВидыПредставляемыхДокументов
//				(необязательный)	Контрагент			- Ссылка на справочник контрагентов
//				(необязательный)	НомерСтрокиИсточника	- Число, обязательно указывается, 
//											если данный источник может служить 
//											источником для заполнения реквизитов 
//											нескольких документов одного вида ФНС 
//											(например Оказание услуг в БПКОРП3) 
//											Для остальных видов документов-источников не указывается.			
//				(необязательный)	Направление 			- Перечисление.
//												НаправленияДокументаПоТребованиюФНС,
//											обязателен для следующих видов документов ФНС:
//												Счет-фактура
//												Корректировочный счет-фактура
//												Акт приемки-сдачи работ (услуг)
//												Товарная накладная (ТОРГ-12)
//												Товарно-транспортная накладная
//												Для остальных видов документов ФНС не указывается.			
//
//			Состав следующих полей структуры различен для различных видов документов ФНС.
//
//				(необязательный)	Дата					- Дата
//				(необязательный)	Номер					- Строка
//				(необязательный)	СуммаВсего				- Число
//
//			Максимально возможный состав полей структуры для различных видов документов ФНС:
//				Счет-фактура
//					Дата
//					Номер
//					СуммаВсего
//				Корректировочный счет-фактура
//					Дата
//					Номер
//					СуммаВсего
//				Акт приемки-сдачи работ (услуг)
//					Дата
//					Номер
//					СуммаВсего
//				Товарная накладная (ТОРГ-12)
//					Дата
//					Номер
//					СуммаВсего
//				Товарно-транспортная накладная
//					Дата
//					Номер
//					СуммаВсего
//				Грузовая таможенная декларация
//					Номер
//				Добавочный лист к грузовой таможенной декларации
//					Номер
//				Договор
//					Дата
//					Номер
//					СуммаВсего
//				Дополнение к договору
//					Дата
//					Номер
//					СуммаВсего
//				Спецификация (калькуляция, расчет) цены (стоимости)
//					Дата
//					Номер
//					СуммаВсего
//
Процедура ОпределитьСвойстваИсточниковДляРегистраДокументыПоТребованиюФНС(СвойстваИсточников) Экспорт
	
	ЗаполнитьСведения_ДоговорКонтрагента(СвойстваИсточников,                 Истина);
	ЗаполнитьСведения_РеализацияТоваровУслуг(СвойстваИсточников,             Истина);
	ЗаполнитьСведения_ПоступлениеТоваровУслуг(СвойстваИсточников,            Истина);
	ЗаполнитьСведения_СчетФактураВыданный(СвойстваИсточников,                Истина);
	ЗаполнитьСведения_СчетФактураПолученный(СвойстваИсточников,              Истина);
	ЗаполнитьСведения_КорректировкаПоступления(СвойстваИсточников,           Истина);
	ЗаполнитьСведения_КорректировкаРеализации(СвойстваИсточников,            Истина);
	ЗаполнитьСведения_ОказаниеУслуг(СвойстваИсточников,                      Истина);
	ЗаполнитьСведения_ОтчетКомитентуОПродажах(СвойстваИсточников,            Истина);
	ЗаполнитьСведения_ГТДИмпорт(СвойстваИсточников,                          Истина);
	ЗаполнитьСведения_АктОбОказанииПроизводственныхУслуг(СвойстваИсточников, Истина);
	ЗаполнитьСведения_РеализацияУслугПоПереработке(СвойстваИсточников,       Истина);
	ЗаполнитьСведения_ПередачаТоваров(СвойстваИсточников,                    Истина);
	ЗаполнитьСведения_ВозвратТоваровПоставщику(СвойстваИсточников,           Истина);
	ЗаполнитьСведения_ПоступлениеДопРасходов(СвойстваИсточников,             Истина);
	ЗаполнитьСведения_АктОРасхождениях(СвойстваИсточников,                   Истина);
	ЗаполнитьСведения_АктОРасхожденияхПолученный(СвойстваИсточников,         Истина);
	
КонецПроцедуры

Процедура ЗаполнитьСведения_ДоговорКонтрагента(СвойстваИсточников, ТолькоОсновныеСвойства) Экспорт
	
	Источники = МассивИсточников(СвойстваИсточников, Тип("СправочникСсылка.ДоговорыКонтрагентов"));
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Договор,
	|	ДоговорыКонтрагентов.Организация,
	|	ДоговорыКонтрагентов.Владелец КАК Контрагент,
	|	ДоговорыКонтрагентов.Дата,
	|	ДоговорыКонтрагентов.Номер
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка В(&Источники)
	|	И НЕ ДоговорыКонтрагентов.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Справочник = Новый Структура();
		Справочник.Вставить("Организация",         Выборка.Организация);
		Справочник.Вставить("ВидДокументаФНС",     Перечисления.ВидыПредставляемыхДокументов.Договор);
		Справочник.Вставить("Контрагент",          Выборка.Контрагент);
		Справочник.Вставить("ЭлектронныйДокумент", Ложь);
		
		Если НЕ ТолькоОсновныеСвойства Тогда
			Справочник.Вставить("Участники",     Новый Массив);
			ДобавитьУчастника(Справочник.Участники, Выборка.Контрагент);
			ДобавитьУчастника(Справочник.Участники, Выборка.Организация);
		КонецЕсли;
		
		Справочник.Вставить("Дата",            Выборка.Дата);
		Справочник.Вставить("Номер",           Выборка.Номер);
		Справочник.Вставить("СуммаВсего",      0);
		
		СвойстваИсточников.Получить(Выборка.Договор).Добавить(Справочник);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_РеализацияТоваровУслуг(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = Тип("ДокументСсылка.РеализацияТоваровУслуг");
	
	Источники = МассивИсточников(СвойстваИсточников, ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = Новый Соответствие;
	ОбменСКонтрагентами.ОпределитьСвойстваВладельцевЭлектронныхДокументов(СозданныеЭлектронныеДокументы, Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(ТипДокумента);
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Документ,
	|	РеализацияТоваровУслуг.Организация,
	|	РеализацияТоваровУслуг.Контрагент,
	|	РеализацияТоваровУслуг.Организация КАК Продавец,
	|	РеализацияТоваровУслуг.Контрагент КАК Покупатель,
	|	РеализацияТоваровУслуг.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.ДоговорКонтрагента.Номер, """") КАК НомерОснования,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОснования,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.ДоговорКонтрагента.ОплатаВВалюте, ЛОЖЬ) КАК ОплатаВВалюте,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	РеализацияТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	РеализацияТоваровУслуг.Грузополучатель,
	|	РеализацияТоваровУслуг.Грузоотправитель,
	|	РеализацияТоваровУслуг.ВалютаДокумента,
	|	РеализацияТоваровУслуг.СуммаДокумента
	|ПОМЕСТИТЬ Документы
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО РеализацияТоваровУслуг.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И РеализацияТоваровУслуг.Организация = ДанныеПервичныхДокументов.Организация
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В(&Источники)
	|	И РеализацияТоваровУслуг.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ КАК Документ,
	|	1 КАК ТоварыКоличество,
	|	РеализацияТоваровУслугТовары.Сумма КАК ТоварыСумма,
	|	РеализацияТоваровУслугТовары.СуммаНДС КАК ТоварыСуммаНДС,
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.Всего, 0) КАК ТоварыСуммаРублевая,
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НДС, 0) КАК ТоварыСуммаНДСРублевая,
	|	0 КАК УслугиКоличество,
	|	0 КАК УслугиСумма,
	|	0 КАК УслугиСуммаНДС,
	|	0 КАК УслугиСуммаРублевая,
	|	0 КАК УслугиСуммаНДСРублевая
	|ПОМЕСТИТЬ СтрокиДокументов
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|		ПО Документы.Документ = РеализацияТоваровУслугТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ПО (РублевыеСуммыДокументовВВалюте.Регистратор = РеализацияТоваровУслугТовары.Ссылка)
	|			И (РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|			И (РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента = РеализацияТоваровУслугТовары.НомерСтроки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	1,
	|	РеализацияТоваровУслугУслуги.Сумма,
	|	РеализацияТоваровУслугУслуги.СуммаНДС,
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НДС, 0)
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
	|		ПО Документы.Документ = РеализацияТоваровУслугУслуги.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ПО (РублевыеСуммыДокументовВВалюте.Регистратор = РеализацияТоваровУслугУслуги.Ссылка)
	|			И (РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|			И (РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента = РеализацияТоваровУслугУслуги.НомерСтроки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	1,
	|	РеализацияТоваровУслугАгентскиеУслуги.Сумма,
	|	РеализацияТоваровУслугАгентскиеУслуги.СуммаНДС,
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НДС, 0)
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.АгентскиеУслуги КАК РеализацияТоваровУслугАгентскиеУслуги
	|		ПО Документы.Документ = РеализацияТоваровУслугАгентскиеУслуги.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ПО (РублевыеСуммыДокументовВВалюте.Регистратор = РеализацияТоваровУслугАгентскиеУслуги.Ссылка)
	|			И (РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги))
	|			И (РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента = РеализацияТоваровУслугАгентскиеУслуги.НомерСтроки)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.Продавец,
	|	Документы.Покупатель,
	|	Документы.ДоговорКонтрагента,
	|	Документы.ВалютаДокумента,
	|	Документы.НомерОснования,
	|	Документы.ДатаОснования,
	|	Документы.ОплатаВВалюте,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.СуммаВключаетНДС,
	|	Документы.СуммаДокумента,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыКоличество), 0) КАК ТоварыКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСумма), 0) КАК ТоварыСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСуммаНДС), 0) КАК ТоварыСуммаНДС,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСуммаРублевая), 0) КАК ТоварыСуммаРублевая,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСуммаНДСРублевая), 0) КАК ТоварыСуммаНДСРублевая,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиКоличество), 0) КАК УслугиКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСумма), 0) КАК УслугиСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСуммаНДС), 0) КАК УслугиСуммаНДС,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСуммаРублевая), 0) КАК УслугиСуммаРублевая,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСуммаНДСРублевая), 0) КАК УслугиСуммаНДСРублевая
	|ИЗ
	|	Документы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиДокументов КАК СтрокиДокументов
	|		ПО Документы.Документ = СтрокиДокументов.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.Продавец,
	|	Документы.Покупатель,
	|	Документы.ДоговорКонтрагента,
	|	Документы.НомерОснования,
	|	Документы.ОплатаВВалюте,
	|	Документы.ДатаОснования,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.СуммаВключаетНДС,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель,
	|	Документы.ВалютаДокумента,
	|	Документы.СуммаДокумента";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(Выборка.Документ, СозданныеЭлектронныеДокументы, 
																				ДоступныеВидыЭлектронныхДокументов);
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		
		ЗаполнитьАктПриемкиСдачиРабот(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
		ЗаполнитьТоварнаяНакладнаяТОРГ12(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
		ЗаполнитьТоварноТранспортнаяНакладная(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
		ЗаполнитьАктНаПередачуПрав(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
		Если ДокументПередаетсяТолькоВЭлектронномВиде(ВидПредставляемогоДокумента) Тогда
			ЗаполнитьЭлектронныйДокумент(Выборка, ОбъектИсточник, СвойстваИсточников, ВидПредставляемогоДокумента);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_ПоступлениеТоваровУслуг(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = Тип("ДокументСсылка.ПоступлениеТоваровУслуг");
	
	Источники = МассивИсточников(СвойстваИсточников, ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = Новый Соответствие;
	ОбменСКонтрагентами.ОпределитьСвойстваВладельцевЭлектронныхДокументов(СозданныеЭлектронныеДокументы, Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(ТипДокумента);
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка КАК Документ,
	|	ПоступлениеТоваровУслуг.Организация,
	|	ПоступлениеТоваровУслуг.Контрагент,
	|	ПоступлениеТоваровУслуг.Контрагент КАК Продавец,
	|	ПоступлениеТоваровУслуг.Организация КАК Покупатель,
	|	ПоступлениеТоваровУслуг.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.ДоговорКонтрагента.Номер, """") КАК НомерОснования,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОснования,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.ДоговорКонтрагента.ОплатаВВалюте, ЛОЖЬ) КАК ОплатаВВалюте,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	ПоступлениеТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ПоступлениеТоваровУслуг.Грузополучатель,
	|	ПоступлениеТоваровУслуг.Грузоотправитель,
	|	ПоступлениеТоваровУслуг.ВалютаДокумента,
	|	ПоступлениеТоваровУслуг.СуммаДокумента
	|ПОМЕСТИТЬ Документы
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПоступлениеТоваровУслуг.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И ПоступлениеТоваровУслуг.Организация = ДанныеПервичныхДокументов.Организация
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В(&Источники)
	|	И ПоступлениеТоваровУслуг.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ КАК Документ,
	|	1 КАК ТоварыКоличество,
	|	ПоступлениеТоваровУслугТовары.Сумма КАК ТоварыСумма,
	|	ПоступлениеТоваровУслугТовары.СуммаНДС КАК ТоварыСуммаНДС,
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.Всего, 0) КАК ТоварыСуммаРублевая,
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НДС, 0) КАК ТоварыСуммаНДСРублевая,
	|	0 КАК УслугиКоличество,
	|	0 КАК УслугиСумма,
	|	0 КАК УслугиСуммаНДС,
	|	0 КАК УслугиСуммаРублевая,
	|	0 КАК УслугиСуммаНДСРублевая
	|ПОМЕСТИТЬ СтрокиДокументов
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|		ПО Документы.Документ = ПоступлениеТоваровУслугТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ПО (РублевыеСуммыДокументовВВалюте.Регистратор = ПоступлениеТоваровУслугТовары.Ссылка)
	|			И (РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|			И (РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента = ПоступлениеТоваровУслугТовары.НомерСтроки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	1,
	|	ПоступлениеТоваровУслугУслуги.Сумма,
	|	ПоступлениеТоваровУслугУслуги.СуммаНДС,
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НДС, 0)
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
	|		ПО Документы.Документ = ПоступлениеТоваровУслугУслуги.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ПО (РублевыеСуммыДокументовВВалюте.Регистратор = ПоступлениеТоваровУслугУслуги.Ссылка)
	|			И (РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|			И (РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента = ПоступлениеТоваровУслугУслуги.НомерСтроки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	1,
	|	ПоступлениеТоваровУслугАгентскиеУслуги.Сумма,
	|	ПоступлениеТоваровУслугАгентскиеУслуги.СуммаНДС,
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НДС, 0)
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.АгентскиеУслуги КАК ПоступлениеТоваровУслугАгентскиеУслуги
	|		ПО Документы.Документ = ПоступлениеТоваровУслугАгентскиеУслуги.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ПО (РублевыеСуммыДокументовВВалюте.Регистратор = ПоступлениеТоваровУслугАгентскиеУслуги.Ссылка)
	|			И (РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги))
	|			И (РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента = ПоступлениеТоваровУслугАгентскиеУслуги.НомерСтроки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	1,
	|	ПоступлениеТоваровУслугОборудование.Сумма,
	|	ПоступлениеТоваровУслугОборудование.СуммаНДС,
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НДС, 0),
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Оборудование КАК ПоступлениеТоваровУслугОборудование
	|		ПО Документы.Документ = ПоступлениеТоваровУслугОборудование.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ПО (РублевыеСуммыДокументовВВалюте.Регистратор = ПоступлениеТоваровУслугОборудование.Ссылка)
	|			И (РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Оборудование))
	|			И (РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента = ПоступлениеТоваровУслугОборудование.НомерСтроки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	1,
	|	ПоступлениеТоваровУслугОбъектыСтроительства.Сумма,
	|	ПоступлениеТоваровУслугОбъектыСтроительства.СуммаНДС,
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НДС, 0),
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.ОбъектыСтроительства КАК ПоступлениеТоваровУслугОбъектыСтроительства
	|		ПО Документы.Документ = ПоступлениеТоваровУслугОбъектыСтроительства.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ПО (РублевыеСуммыДокументовВВалюте.Регистратор = ПоступлениеТоваровУслугОбъектыСтроительства.Ссылка)
	|			И (РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ОбъектыСтроительства))
	|			И (РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента = ПоступлениеТоваровУслугОбъектыСтроительства.НомерСтроки)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.Продавец,
	|	Документы.Покупатель,
	|	Документы.ДоговорКонтрагента,
	|	Документы.НомерОснования,
	|	Документы.ДатаОснования,
	|	Документы.ОплатаВВалюте,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.СуммаВключаетНДС,
	|	Документы.СуммаДокумента,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель,
	|	Документы.ВалютаДокумента,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыКоличество), 0) КАК ТоварыКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСумма), 0) КАК ТоварыСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСуммаНДС), 0) КАК ТоварыСуммаНДС,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСуммаРублевая), 0) КАК ТоварыСуммаРублевая,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСуммаНДСРублевая), 0) КАК ТоварыСуммаНДСРублевая,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиКоличество), 0) КАК УслугиКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСумма), 0) КАК УслугиСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСуммаНДС), 0) КАК УслугиСуммаНДС,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСуммаРублевая), 0) КАК УслугиСуммаРублевая,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСуммаНДСРублевая), 0) КАК УслугиСуммаНДСРублевая
	|ИЗ
	|	Документы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиДокументов КАК СтрокиДокументов
	|		ПО Документы.Документ = СтрокиДокументов.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.Продавец,
	|	Документы.Покупатель,
	|	Документы.ДоговорКонтрагента,
	|	Документы.НомерОснования,
	|	Документы.ДатаОснования,
	|	Документы.ОплатаВВалюте,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.СуммаВключаетНДС,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель,
	|	Документы.ВалютаДокумента,
	|	Документы.СуммаДокумента";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(Выборка.Документ, СозданныеЭлектронныеДокументы, 
																				ДоступныеВидыЭлектронныхДокументов);
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Получен);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		
		ЗаполнитьАктПриемкиСдачиРабот(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
		ЗаполнитьТоварнаяНакладнаяТОРГ12(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
		ЗаполнитьТоварноТранспортнаяНакладная(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
		ЗаполнитьАктНаПередачуПрав(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
		Если ДокументПередаетсяТолькоВЭлектронномВиде(ВидПредставляемогоДокумента) Тогда
			ЗаполнитьЭлектронныйДокумент(Выборка, ОбъектИсточник, СвойстваИсточников, ВидПредставляемогоДокумента);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_СчетФактураВыданный(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = Тип("ДокументСсылка.СчетФактураВыданный");
	
	Источники = МассивИсточников(СвойстваИсточников, ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = Новый Соответствие;
	ОбменСКонтрагентами.ОпределитьСвойстваВладельцевЭлектронныхДокументов(СозданныеЭлектронныеДокументы, Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(ТипДокумента);
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактураВыданный.Ссылка КАК Документ,
	|	СчетФактураВыданный.Организация,
	|	СчетФактураВыданный.Контрагент,
	|	СчетФактураВыданный.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(СчетФактураВыданный.ДоговорКонтрагента.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(СчетФактураВыданный.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	СчетФактураВыданный.Продавец,
	|	СчетФактураВыданный.СуммаНДСДокумента,
	|	СчетФактураВыданный.СуммаДокумента,
	|	СчетФактураВыданный.ВидСчетаФактуры,
	|	СчетФактураВыданный.НомерИсходногоДокумента КАК НомерОснования,
	|	СчетФактураВыданный.ДатаИсходногоДокумента КАК ДатаОснования
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО СчетФактураВыданный.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И СчетФактураВыданный.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
	|		ПО СчетФактураВыданный.Ссылка = СчетФактураВыданныйДокументыОснования.Ссылка
	|ГДЕ
	|	СчетФактураВыданный.Ссылка В(&Источники)
	|	И СчетФактураВыданный.Проведен
	|	И СчетФактураВыданный.ВидСчетаФактуры <> ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.СводнаяСправка)
	|	И СчетФактураВыданный.ВидСчетаФактуры <> ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.КорректировочнаяСправка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(Выборка.Документ, СозданныеЭлектронныеДокументы, 
																				ДоступныеВидыЭлектронныхДокументов);
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		
		ЗаполнитьСчетФактуруВыданный(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
		Если ДокументПередаетсяТолькоВЭлектронномВиде(ВидПредставляемогоДокумента) Тогда
			ЗаполнитьЭлектронныйДокумент(Выборка, ОбъектИсточник, СвойстваИсточников, ВидПредставляемогоДокумента);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_СчетФактураПолученный(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = Тип("ДокументСсылка.СчетФактураПолученный");
	
	Источники = МассивИсточников(СвойстваИсточников, ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = Новый Соответствие;
	ОбменСКонтрагентами.ОпределитьСвойстваВладельцевЭлектронныхДокументов(СозданныеЭлектронныеДокументы, Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(ТипДокумента);
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	СчетФактураПолученный.Ссылка КАК Документ,
	|	СчетФактураПолученный.Организация,
	|	СчетФактураПолученный.Контрагент,
	|	СчетФактураПолученный.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(СчетФактураПолученный.ДоговорКонтрагента.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(СчетФактураПолученный.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	СчетФактураПолученный.Продавец,
	|	СчетФактураПолученный.СуммаНДСДокумента,
	|	СчетФактураПолученный.СуммаДокумента,
	|	СчетФактураПолученный.ВидСчетаФактуры,
	|	СчетФактураПолученный.НомерИсходногоДокумента КАК НомерОснования,
	|	СчетФактураПолученный.ДатаИсходногоДокумента КАК ДатаОснования,
	|	СчетФактураПолученныйДокументыОснования.ДокументОснование
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО СчетФактураПолученный.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И СчетФактураПолученный.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	|		ПО СчетФактураПолученный.Ссылка = СчетФактураПолученныйДокументыОснования.Ссылка
	|ГДЕ
	|	СчетФактураПолученный.Ссылка В(&Источники)
	|	И СчетФактураПолученный.Проведен";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(Выборка.Документ, СозданныеЭлектронныеДокументы, 
																				ДоступныеВидыЭлектронныхДокументов);
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Получен);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		
		ЗаполнитьСчетФактуруПолученный(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
		Если ДокументПередаетсяТолькоВЭлектронномВиде(ВидПредставляемогоДокумента) Тогда
			ЗаполнитьЭлектронныйДокумент(Выборка, ОбъектИсточник, СвойстваИсточников, ВидПредставляемогоДокумента);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_КорректировкаПоступления(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = Тип("ДокументСсылка.КорректировкаПоступления");
	
	Источники = МассивИсточников(СвойстваИсточников, ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = Новый Соответствие;
	ОбменСКонтрагентами.ОпределитьСвойстваВладельцевЭлектронныхДокументов(СозданныеЭлектронныеДокументы, Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(ТипДокумента);
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КорректировкаПоступления.Ссылка КАК Документ,
	|	КорректировкаПоступления.Организация КАК Организация,
	|	КорректировкаПоступления.Контрагент КАК Контрагент,
	|	КорректировкаПоступления.Контрагент КАК Продавец,
	|	КорректировкаПоступления.Организация КАК Покупатель,
	|	ЕСТЬNULL(КорректировкаПоступления.ДоговорКонтрагента.ОплатаВВалюте, ЛОЖЬ) КАК ОплатаВВалюте,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	КорректировкаПоступления.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	КорректировкаПоступления.ДокументПоступления КАК ДокументПоступления,
	|	ЕСТЬNULL(ДанныеПервичныхДокументовОснования.Номер, """") КАК НомерОснования,
	|	ЕСТЬNULL(ДанныеПервичныхДокументовОснования.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОснования,
	|	КорректировкаПоступления.Грузополучатель КАК Грузополучатель,
	|	КорректировкаПоступления.Грузоотправитель КАК Грузоотправитель,
	|	КорректировкаПоступления.ВалютаДокумента КАК ВалютаДокумента,
	|	КорректировкаПоступления.ВидОперации КАК ВидОперации
	|ПОМЕСТИТЬ Документы
	|ИЗ
	|	Документ.КорректировкаПоступления КАК КорректировкаПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО КорректировкаПоступления.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И КорректировкаПоступления.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовОснования
	|		ПО КорректировкаПоступления.ДокументПоступления = ДанныеПервичныхДокументовОснования.Документ
	|			И КорректировкаПоступления.Организация = ДанныеПервичныхДокументовОснования.Организация
	|ГДЕ
	|	КорректировкаПоступления.Ссылка В(&Источники)
	|	И КорректировкаПоступления.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ КАК Документ,
	|	1 КАК ТоварыКоличество,
	|	КорректировкаПоступленияТовары.Сумма КАК ТоварыСумма,
	|	КорректировкаПоступленияТовары.СуммаНДС КАК ТоварыСуммаНДС,
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.Всего, 0) КАК ТоварыСуммаРублевая,
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НДС, 0) КАК ТоварыСуммаНДСРублевая,
	|	0 КАК УслугиКоличество,
	|	0 КАК УслугиСумма,
	|	0 КАК УслугиСуммаНДС,
	|	0 КАК УслугиСуммаРублевая,
	|	0 КАК УслугиСуммаНДСРублевая
	|ПОМЕСТИТЬ СтрокиДокументов
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления.Товары КАК КорректировкаПоступленияТовары
	|		ПО Документы.Документ = КорректировкаПоступленияТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ПО (РублевыеСуммыДокументовВВалюте.Регистратор = КорректировкаПоступленияТовары.Ссылка)
	|			И (РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|			И (РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента = КорректировкаПоступленияТовары.НомерСтроки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	1,
	|	КорректировкаПоступленияУслуги.Сумма,
	|	КорректировкаПоступленияУслуги.СуммаНДС,
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НДС, 0)
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления.Услуги КАК КорректировкаПоступленияУслуги
	|		ПО Документы.Документ = КорректировкаПоступленияУслуги.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ПО (РублевыеСуммыДокументовВВалюте.Регистратор = КорректировкаПоступленияУслуги.Ссылка)
	|			И (РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|			И (РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента = КорректировкаПоступленияУслуги.НомерСтроки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	1,
	|	КорректировкаПоступленияАгентскиеУслуги.Сумма,
	|	КорректировкаПоступленияАгентскиеУслуги.СуммаНДС,
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НДС, 0)
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления.АгентскиеУслуги КАК КорректировкаПоступленияАгентскиеУслуги
	|		ПО Документы.Документ = КорректировкаПоступленияАгентскиеУслуги.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ПО (РублевыеСуммыДокументовВВалюте.Регистратор = КорректировкаПоступленияАгентскиеУслуги.Ссылка)
	|			И (РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги))
	|			И (РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента = КорректировкаПоступленияАгентскиеУслуги.НомерСтроки)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ КАК Документ,
	|	Документы.Организация КАК Организация,
	|	Документы.Контрагент КАК Контрагент,
	|	Документы.Продавец КАК Продавец,
	|	Документы.Покупатель КАК Покупатель,
	|	Документы.Номер КАК Номер,
	|	Документы.Дата КАК Дата,
	|	Документы.ОплатаВВалюте КАК ОплатаВВалюте,
	|	Документы.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Документы.Грузополучатель КАК Грузополучатель,
	|	Документы.Грузоотправитель КАК Грузоотправитель,
	|	Документы.НомерОснования КАК НомерОснования,
	|	Документы.ДатаОснования КАК ДатаОснования,
	|	Документы.ДокументПоступления КАК ДокументПоступления,
	|	Документы.ВалютаДокумента КАК ВалютаДокумента,
	|	Документы.ВидОперации КАК ВидОперации,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыКоличество), 0) КАК ТоварыКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСумма), 0) КАК ТоварыСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСуммаНДС), 0) КАК ТоварыСуммаНДС,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиКоличество), 0) КАК УслугиКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСумма), 0) КАК УслугиСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСуммаНДС), 0) КАК УслугиСуммаНДС
	|ИЗ
	|	Документы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиДокументов КАК СтрокиДокументов
	|		ПО Документы.Документ = СтрокиДокументов.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.СуммаВключаетНДС,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель,
	|	Документы.НомерОснования,
	|	Документы.ДатаОснования,
	|	Документы.ДокументПоступления,
	|	Документы.Продавец,
	|	Документы.Покупатель,
	|	Документы.ОплатаВВалюте,
	|	Документы.ВалютаДокумента,
	|	Документы.ВидОперации";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(Выборка.Документ, СозданныеЭлектронныеДокументы,
			ДоступныеВидыЭлектронныхДокументов);
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Получен);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		
		ЗаполнитьАктПриемкиСдачиРабот(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
		ЗаполнитьТоварнаяНакладнаяТОРГ12(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
		ЗаполнитьТоварноТранспортнаяНакладная(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
		ЗаполнитьАктНаПередачуПрав(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
		ЗаполнитьДокументОбИзмененииСтоимости(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_КорректировкаРеализации(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = Тип("ДокументСсылка.КорректировкаРеализации");
	
	Источники = МассивИсточников(СвойстваИсточников, ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = Новый Соответствие;
	ОбменСКонтрагентами.ОпределитьСвойстваВладельцевЭлектронныхДокументов(СозданныеЭлектронныеДокументы, Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(ТипДокумента);
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК Документ,
	|	КорректировкаРеализации.Организация КАК Организация,
	|	КорректировкаРеализации.Контрагент КАК Контрагент,
	|	КорректировкаРеализации.Организация КАК Продавец,
	|	КорректировкаРеализации.Контрагент КАК Покупатель,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	ЕСТЬNULL(КорректировкаРеализации.ДоговорКонтрагента.ОплатаВВалюте, ЛОЖЬ) КАК ОплатаВВалюте,
	|	КорректировкаРеализации.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	КорректировкаРеализации.ДокументРеализации КАК ДокументРеализации,
	|	ЕСТЬNULL(ДанныеПервичныхДокументовОснования.Номер, """") КАК НомерОснования,
	|	ЕСТЬNULL(ДанныеПервичныхДокументовОснования.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОснования,
	|	КорректировкаРеализации.Грузополучатель КАК Грузополучатель,
	|	КорректировкаРеализации.Грузоотправитель КАК Грузоотправитель,
	|	КорректировкаРеализации.ВалютаДокумента КАК ВалютаДокумента,
	|	КорректировкаРеализации.ВидОперации КАК ВидОперации
	|ПОМЕСТИТЬ Документы
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО КорректировкаРеализации.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И КорректировкаРеализации.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовОснования
	|		ПО КорректировкаРеализации.ДокументРеализации = ДанныеПервичныхДокументовОснования.Документ
	|			И КорректировкаРеализации.Организация = ДанныеПервичныхДокументовОснования.Организация
	|ГДЕ
	|	КорректировкаРеализации.Ссылка В(&Источники)
	|	И КорректировкаРеализации.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ КАК Документ,
	|	1 КАК ТоварыКоличество,
	|	КорректировкаРеализацииТовары.Сумма КАК ТоварыСумма,
	|	КорректировкаРеализацииТовары.СуммаНДС КАК ТоварыСуммаНДС,
	|	0 КАК УслугиКоличество,
	|	0 КАК УслугиСумма,
	|	0 КАК УслугиСуммаНДС,
	|	0 КАК АгентскиеУслугиКоличество,
	|	0 КАК АгентскиеУслугиСумма,
	|	0 КАК АгентскиеУслугиСуммаНДС
	|ПОМЕСТИТЬ СтрокиДокументов
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|		ПО Документы.Документ = КорректировкаРеализацииТовары.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	1,
	|	КорректировкаРеализацииУслуги.Сумма,
	|	КорректировкаРеализацииУслуги.СуммаНДС,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
	|		ПО Документы.Документ = КорректировкаРеализацииУслуги.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	1,
	|	КорректировкаРеализацииАгентскиеУслуги.Сумма,
	|	КорректировкаРеализацииАгентскиеУслуги.СуммаНДС
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.АгентскиеУслуги КАК КорректировкаРеализацииАгентскиеУслуги
	|		ПО Документы.Документ = КорректировкаРеализацииАгентскиеУслуги.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ КАК Документ,
	|	Документы.Организация КАК Организация,
	|	Документы.Контрагент КАК Контрагент,
	|	Документы.Продавец КАК Продавец,
	|	Документы.Покупатель КАК Покупатель,
	|	Документы.Номер КАК Номер,
	|	Документы.Дата КАК Дата,
	|	Документы.ОплатаВВалюте КАК ОплатаВВалюте,
	|	Документы.НомерОснования КАК НомерОснования,
	|	Документы.ДатаОснования КАК ДатаОснования,
	|	Документы.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Документы.Грузополучатель КАК Грузополучатель,
	|	Документы.Грузоотправитель КАК Грузоотправитель,
	|	Документы.ДокументРеализации КАК ДокументРеализации,
	|	Документы.ВалютаДокумента КАК ВалютаДокумента,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыКоличество), 0) КАК ТоварыКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСумма), 0) КАК ТоварыСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСуммаНДС), 0) КАК ТоварыСуммаНДС,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиКоличество), 0) КАК УслугиКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСумма), 0) КАК УслугиСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСуммаНДС), 0) КАК УслугиСуммаНДС,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.АгентскиеУслугиКоличество), 0) КАК АгентскиеУслугиКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.АгентскиеУслугиСумма), 0) КАК АгентскиеУслугиСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.АгентскиеУслугиСуммаНДС), 0) КАК АгентскиеУслугиСуммаНДС,
	|	Документы.ВидОперации КАК ВидОперации
	|ИЗ
	|	Документы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиДокументов КАК СтрокиДокументов
	|		ПО Документы.Документ = СтрокиДокументов.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.СуммаВключаетНДС,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель,
	|	Документы.НомерОснования,
	|	Документы.ДатаОснования,
	|	Документы.ДокументРеализации,
	|	Документы.Продавец,
	|	Документы.Покупатель,
	|	Документы.ОплатаВВалюте,
	|	Документы.ВалютаДокумента,
	|	Документы.ВидОперации";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(Выборка.Документ, СозданныеЭлектронныеДокументы,
			ДоступныеВидыЭлектронныхДокументов);
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		
		ЗаполнитьАктПриемкиСдачиРабот(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
		ЗаполнитьТоварнаяНакладнаяТОРГ12(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
		ЗаполнитьТоварноТранспортнаяНакладная(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
		ЗаполнитьАктНаПередачуПрав(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
		ЗаполнитьДокументОбИзмененииСтоимости(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_ОказаниеУслуг(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = Тип("ДокументСсылка.ОказаниеУслуг");
	
	Источники = МассивИсточников(СвойстваИсточников, ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = Новый Соответствие;
	ОбменСКонтрагентами.ОпределитьСвойстваВладельцевЭлектронныхДокументов(СозданныеЭлектронныеДокументы, Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(ТипДокумента);
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОказаниеУслуг.Ссылка КАК Документ,
	|	ОказаниеУслуг.Организация,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	ОказаниеУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ОказаниеУслугКонтрагенты.Сумма КАК КонтрагентыСумма,
	|	ОказаниеУслугКонтрагенты.СуммаНДС КАК КонтрагентыСуммаНДС,
	|	ОказаниеУслугКонтрагенты.Контрагент,
	|	ОказаниеУслугКонтрагенты.ДоговорКонтрагента,
	|	ЕСТЬNULL(ОказаниеУслугКонтрагенты.ДоговорКонтрагента.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(ОказаниеУслугКонтрагенты.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора,
	|	ОказаниеУслугКонтрагенты.НомерСтроки
	|ИЗ
	|	Документ.ОказаниеУслуг КАК ОказаниеУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ОказаниеУслуг.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И ОказаниеУслуг.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОказаниеУслуг.Контрагенты КАК ОказаниеУслугКонтрагенты
	|		ПО ОказаниеУслуг.Ссылка = ОказаниеУслугКонтрагенты.Ссылка
	|ГДЕ
	|	ОказаниеУслуг.Ссылка В(&Источники)
	|	И ОказаниеУслуг.Проведен";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(Выборка.Документ, СозданныеЭлектронныеДокументы,
			ДоступныеВидыЭлектронныхДокументов);
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		
		// Акт об оказании услуг
		СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.КонтрагентыСумма, Выборка.КонтрагентыСумма + Выборка.КонтрагентыСуммаНДС);
		
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		Документ.Вставить("НомерСтрокиИсточника", Выборка.НомерСтроки);
		Документ.Вставить("ВидДокументаФНС",      Перечисления.ВидыПредставляемыхДокументов.АктПриемкиСдачиРабот);
		Документ.Вставить("СуммаВсего",           СуммаДокумента);
		
		Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
			Документ.Вставить("НомерОснования", Выборка.НомерДоговора);
			Документ.Вставить("ДатаОснования",  Выборка.ДатаДоговора);
		КонецЕсли;
		
		Если НЕ ТолькоОсновныеСвойства Тогда
			Документ.Вставить("СуммаНалога",   Выборка.КонтрагентыСуммаНДС);
			Документ.Вставить("НачалоПериода", Выборка.Дата);
			Документ.Вставить("КонецПериода",  Выборка.Дата);
			Документ.Вставить("Участники",     Новый Массив);
			ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Заказчик",    Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Заказчик);
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Исполнитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Исполнитель);
		КонецЕсли;
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_ОтчетКомитентуОПродажах(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = Тип("ДокументСсылка.ОтчетКомитентуОПродажах");
	
	Источники = МассивИсточников(СвойстваИсточников, ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтчетКомитентуОПродажах.Ссылка КАК Документ,
	|	ОтчетКомитентуОПродажах.Организация,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	ОтчетКомитентуОПродажах.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ОтчетКомитентуОПродажах.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ЕСТЬNULL(СУММА(ОтчетКомитентуОПродажахТовары.СуммаНДСВознаграждения), 0) КАК СуммаНДСВознаграждения,
	|	ОтчетКомитентуОПродажах.Контрагент,
	|	ОтчетКомитентуОПродажах.ДоговорКонтрагента,
	|	ЕСТЬNULL(ОтчетКомитентуОПродажах.ДоговорКонтрагента.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(ОтчетКомитентуОПродажах.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК ОтчетКомитентуОПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ОтчетКомитентуОПродажах.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И ОтчетКомитентуОПродажах.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОПродажах.Товары КАК ОтчетКомитентуОПродажахТовары
	|		ПО ОтчетКомитентуОПродажах.Ссылка = ОтчетКомитентуОПродажахТовары.Ссылка
	|ГДЕ
	|	ОтчетКомитентуОПродажах.Ссылка В(&Источники)
	|	И ОтчетКомитентуОПродажах.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	|	ОтчетКомитентуОПродажах.Ссылка,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """"),
	|	ЕСТЬNULL(ОтчетКомитентуОПродажах.ДоговорКонтрагента.Номер, """"),
	|	ЕСТЬNULL(ОтчетКомитентуОПродажах.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	|	ОтчетКомитентуОПродажах.ДоговорКонтрагента,
	|	ОтчетКомитентуОПродажах.Контрагент,
	|	ОтчетКомитентуОПродажах.СуммаВознаграждения,
	|	ОтчетКомитентуОПродажах.СуммаВключаетНДС,
	|	ОтчетКомитентуОПродажах.Организация";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		
		// Акт об оказании услуг
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.АктПриемкиСдачиРабот);
		Документ.Вставить("СуммаВсего",      Выборка.СуммаВознаграждения);
		
		Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
			Документ.Вставить("НомерОснования", Выборка.НомерДоговора);
			Документ.Вставить("ДатаОснования",  Выборка.ДатаДоговора);
		КонецЕсли;
		
		Если НЕ ТолькоОсновныеСвойства Тогда
			Документ.Вставить("СуммаНалога",   Выборка.СуммаНДСВознаграждения);
			Документ.Вставить("НачалоПериода", Выборка.Дата);
			Документ.Вставить("КонецПериода",  Выборка.Дата);
			Документ.Вставить("Участники",     Новый Массив);
			ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Заказчик",    Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Заказчик);
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Исполнитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Исполнитель);
		КонецЕсли;
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_ГТДИмпорт(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = Тип("ДокументСсылка.ГТДИмпорт");
	
	Источники = МассивИсточников(СвойстваИсточников, ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГТДИмпорт.Ссылка КАК Документ,
	|	ГТДИмпорт.Организация,
	|	ГТДИмпорт.НомерГТД КАК НомерГТД,
	|	ГТДИмпорт.Контрагент,
	|	ГТДИмпорт.ДоговорКонтрагента,
	|	ЕСТЬNULL(ГТДИмпорт.ДоговорКонтрагента.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(ГТДИмпорт.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора
	|ИЗ
	|	Документ.ГТДИмпорт КАК ГТДИмпорт
	|ГДЕ
	|	ГТДИмпорт.Ссылка В(&Источники)
	|	И ГТДИмпорт.Проведен";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Получен);
		ОбъектИсточник.Вставить("Номер",           Выборка.НомерГТД);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ГрузоваяТаможеннаяДекларация);
		
		Если НЕ ТолькоОсновныеСвойства Тогда
			Документ.Вставить("Участники",   Новый Массив);
			
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Получатель",  Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Получатель);
			ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Отправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Отправитель);
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Декларант",   Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Декларант);
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Импортер",    Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Импортер);
		КонецЕсли;
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_АктОбОказанииПроизводственныхУслуг(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг");
	
	Источники = МассивИсточников(СвойстваИсточников, ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = Новый Соответствие;
	ОбменСКонтрагентами.ОпределитьСвойстваВладельцевЭлектронныхДокументов(СозданныеЭлектронныеДокументы, Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(ТипДокумента);
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АктОбОказанииПроизводственныхУслуг.Ссылка КАК Документ,
	|	АктОбОказанииПроизводственныхУслуг.Организация,
	|	АктОбОказанииПроизводственныхУслуг.Контрагент,
	|	АктОбОказанииПроизводственныхУслуг.Организация КАК Продавец,
	|	АктОбОказанииПроизводственныхУслуг.Контрагент КАК Покупатель,
	|	АктОбОказанииПроизводственныхУслуг.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(АктОбОказанииПроизводственныхУслуг.ДоговорКонтрагента.Номер, """") КАК НомерОснования,
	|	ЕСТЬNULL(АктОбОказанииПроизводственныхУслуг.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОснования,
	|	ЕСТЬNULL(АктОбОказанииПроизводственныхУслуг.ДоговорКонтрагента.ОплатаВВалюте, ЛОЖЬ) КАК ОплатаВВалюте,
	|	АктОбОказанииПроизводственныхУслуг.ВалютаДокумента,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	АктОбОказанииПроизводственныхУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	1 КАК УслугиКоличество,
	|	ЕСТЬNULL(СУММА(АктОбОказанииПроизводственныхУслугУслуги.Сумма), 0) КАК УслугиСумма,
	|	ЕСТЬNULL(СУММА(АктОбОказанииПроизводственныхУслугУслуги.СуммаНДС), 0) КАК УслугиСуммаНДС,
	|	ЕСТЬNULL(СУММА(РублевыеСуммыДокументовВВалюте.Всего), 0) КАК УслугиСуммаРублевая,
	|	ЕСТЬNULL(СУММА(РублевыеСуммыДокументовВВалюте.НДС), 0) КАК УслугиСуммаНДСРублевая
	|ИЗ
	|	Документ.АктОбОказанииПроизводственныхУслуг КАК АктОбОказанииПроизводственныхУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО АктОбОказанииПроизводственныхУслуг.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И АктОбОказанииПроизводственныхУслуг.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК АктОбОказанииПроизводственныхУслугУслуги
	|		ПО АктОбОказанииПроизводственныхУслуг.Ссылка = АктОбОказанииПроизводственныхУслугУслуги.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ПО (РублевыеСуммыДокументовВВалюте.Регистратор = АктОбОказанииПроизводственныхУслугУслуги.Ссылка)
	|			И (РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|			И (РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента = АктОбОказанииПроизводственныхУслугУслуги.НомерСтроки)
	|ГДЕ
	|	АктОбОказанииПроизводственныхУслуг.Ссылка В(&Источники)
	|	И АктОбОказанииПроизводственныхУслуг.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОбОказанииПроизводственныхУслуг.Ссылка,
	|	АктОбОказанииПроизводственныхУслуг.Организация,
	|	ДанныеПервичныхДокументов.Номер,
	|	ДанныеПервичныхДокументов.Дата,
	|	АктОбОказанииПроизводственныхУслуг.Контрагент,
	|	АктОбОказанииПроизводственныхУслуг.ДоговорКонтрагента,
	|	АктОбОказанииПроизводственныхУслуг.СуммаВключаетНДС,
	|	ЕСТЬNULL(АктОбОказанииПроизводственныхУслуг.ДоговорКонтрагента.Номер, """"),
	|	ЕСТЬNULL(АктОбОказанииПроизводственныхУслуг.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	|	АктОбОказанииПроизводственныхУслуг.ВалютаДокумента,
	|	ЕСТЬNULL(АктОбОказанииПроизводственныхУслуг.ДоговорКонтрагента.ОплатаВВалюте, ЛОЖЬ),
	|	АктОбОказанииПроизводственныхУслуг.Организация,
	|	АктОбОказанииПроизводственныхУслуг.Контрагент";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(Выборка.Документ, СозданныеЭлектронныеДокументы,
			ДоступныеВидыЭлектронныхДокументов);
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		
		ЗаполнитьАктПриемкиСдачиРабот(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_РеализацияУслугПоПереработке(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = Тип("ДокументСсылка.РеализацияУслугПоПереработке");
	
	Источники = МассивИсточников(СвойстваИсточников, ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияУслугПоПереработке.Ссылка КАК Документ,
	|	РеализацияУслугПоПереработке.Организация,
	|	РеализацияУслугПоПереработке.Контрагент,
	|	РеализацияУслугПоПереработке.Организация КАК Продавец,
	|	РеализацияУслугПоПереработке.Контрагент КАК Покупатель,
	|	РеализацияУслугПоПереработке.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(РеализацияУслугПоПереработке.ДоговорКонтрагента.Номер, """") КАК НомерОснования,
	|	ЕСТЬNULL(РеализацияУслугПоПереработке.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОснования,
	|	ЕСТЬNULL(РеализацияУслугПоПереработке.ДоговорКонтрагента.ОплатаВВалюте, ЛОЖЬ) КАК ОплатаВВалюте,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	РеализацияУслугПоПереработке.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	РеализацияУслугПоПереработке.ВалютаДокумента,
	|	1 КАК УслугиКоличество,
	|	ЕСТЬNULL(СУММА(РеализацияУслугПоПереработкеУслуги.Сумма), 0) КАК УслугиСумма,
	|	ЕСТЬNULL(СУММА(РеализацияУслугПоПереработкеУслуги.СуммаНДС), 0) КАК УслугиСуммаНДС,
	|	ЕСТЬNULL(СУММА(РублевыеСуммыДокументовВВалюте.Всего), 0) КАК УслугиСуммаРублевая,
	|	ЕСТЬNULL(СУММА(РублевыеСуммыДокументовВВалюте.НДС), 0) КАК УслугиСуммаНДСРублевая
	|ИЗ
	|	Документ.РеализацияУслугПоПереработке КАК РеализацияУслугПоПереработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО РеализацияУслугПоПереработке.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И РеализацияУслугПоПереработке.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПоПереработке.Услуги КАК РеализацияУслугПоПереработкеУслуги
	|		ПО РеализацияУслугПоПереработке.Ссылка = РеализацияУслугПоПереработкеУслуги.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ПО (РублевыеСуммыДокументовВВалюте.Регистратор = РеализацияУслугПоПереработкеУслуги.Ссылка)
	|			И (РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|			И (РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента = РеализацияУслугПоПереработкеУслуги.НомерСтроки)
	|ГДЕ
	|	РеализацияУслугПоПереработке.Ссылка В(&Источники)
	|	И РеализацияУслугПоПереработке.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияУслугПоПереработке.Ссылка,
	|	РеализацияУслугПоПереработке.Организация,
	|	ДанныеПервичныхДокументов.Номер,
	|	ДанныеПервичныхДокументов.Дата,
	|	РеализацияУслугПоПереработке.Контрагент,
	|	РеализацияУслугПоПереработке.ДоговорКонтрагента,
	|	РеализацияУслугПоПереработке.СуммаВключаетНДС,
	|	ЕСТЬNULL(РеализацияУслугПоПереработке.ДоговорКонтрагента.Номер, """"),
	|	ЕСТЬNULL(РеализацияУслугПоПереработке.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	|	РеализацияУслугПоПереработке.Организация,
	|	РеализацияУслугПоПереработке.Контрагент,
	|	РеализацияУслугПоПереработке.ВалютаДокумента,
	|	ЕСТЬNULL(РеализацияУслугПоПереработке.ДоговорКонтрагента.ОплатаВВалюте, ЛОЖЬ)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		
		ЗаполнитьАктПриемкиСдачиРабот(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_ПередачаТоваров(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = Тип("ДокументСсылка.ПередачаТоваров");
	
	Источники = МассивИсточников(СвойстваИсточников, ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПередачаТоваров.Ссылка КАК Документ,
	|	ПередачаТоваров.Организация,
	|	ПередачаТоваров.Контрагент,
	|	ПередачаТоваров.Организация КАК Грузоотправитель,
	|	ПередачаТоваров.Контрагент КАК Грузополучатель,
	|	ПередачаТоваров.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ПередачаТоваров.ДоговорКонтрагента.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(ПередачаТоваров.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата
	|ИЗ
	|	Документ.ПередачаТоваров КАК ПередачаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПередачаТоваров.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И ПередачаТоваров.Организация = ДанныеПервичныхДокументов.Организация
	|ГДЕ
	|	ПередачаТоваров.Ссылка В(&Источники)
	|	И ПередачаТоваров.Проведен";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		
		// Товарная накладная (ТОРГ-12)
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ТоварнаяНакладнаяТОРГ12);
		
		Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
			Документ.Вставить("НомерОснования", Выборка.НомерДоговора);
			Документ.Вставить("ДатаОснования",  Выборка.ДатаДоговора);
		КонецЕсли;
		
		Если ТолькоОсновныеСвойства Тогда
			Документ.Вставить("СуммаВсего", 0);
		Иначе
			МассивРегистраторов = Новый Массив;
			МассивРегистраторов.Добавить(Выборка.Документ);
			ТаблицаСуммСписанияПоДокументам = БухгалтерскийУчетПереопределяемый.ПолучитьСуммуСписанияАктивов(МассивРегистраторов, Выборка.Дата, Выборка.Дата);
			
			Документ.Вставить("СуммаВсего",  ТаблицаСуммСписанияПоДокументам.Итог("Сумма"));
			Документ.Вставить("СуммаНалога", 0);
			Документ.Вставить("Участники",   Новый Массив);
			
			ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Плательщик", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Плательщик);
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Поставщик",  Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Поставщик);
			Если ЗначениеЗаполнено(Выборка.Грузополучатель) Тогда
				ДобавитьУчастника(Документ.Участники, Выборка.Грузополучатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
			Иначе
				ДобавитьУчастника(Документ.Участники, Документ.Контрагент, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
				ДобавитьУчастника(Документ.Участники, Выборка.Грузоотправитель, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
			Иначе
				ДобавитьУчастника(Документ.Участники, Документ.Организация, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
			КонецЕсли;
			
		КонецЕсли;
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
		
		// Товарно-транспортная накладная
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ТоварноТранспортнаяНакладная);
		
		Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
			Документ.Вставить("НомерОснования", Выборка.НомерДоговора);
			Документ.Вставить("ДатаОснования",  Выборка.ДатаДоговора);
		КонецЕсли;
		
		Если ТолькоОсновныеСвойства Тогда
			Документ.Вставить("СуммаВсего", 0);
		Иначе
			МассивРегистраторов = Новый Массив;
			МассивРегистраторов.Добавить(Выборка.Документ);
			ТаблицаСуммСписанияПоДокументам = БухгалтерскийУчетПереопределяемый.ПолучитьСуммуСписанияАктивов(МассивРегистраторов, Выборка.Дата, Выборка.Дата);
			
			Документ.Вставить("СуммаВсего",  ТаблицаСуммСписанияПоДокументам.Итог("Сумма"));
			Документ.Вставить("СуммаНалога", 0);
			Документ.Вставить("Участники",   Новый Массив);
			
			ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Плательщик", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Плательщик);
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Поставщик",  Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Поставщик);
			Если ЗначениеЗаполнено(Выборка.Грузополучатель) Тогда
				ДобавитьУчастника(Документ.Участники, Выборка.Грузополучатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
			Иначе
				ДобавитьУчастника(Документ.Участники, Документ.Контрагент, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
				ДобавитьУчастника(Документ.Участники, Выборка.Грузоотправитель, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
			Иначе
				ДобавитьУчастника(Документ.Участники, Документ.Организация, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
			КонецЕсли;
			
		КонецЕсли;
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_ВозвратТоваровПоставщику(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровПоставщику");
	
	Источники = МассивИсточников(СвойстваИсточников, ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = Новый Соответствие;
	ОбменСКонтрагентами.ОпределитьСвойстваВладельцевЭлектронныхДокументов(СозданныеЭлектронныеДокументы, Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(ТипДокумента);
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВозвратТоваровПоставщику.Ссылка КАК Документ,
	|	ВозвратТоваровПоставщику.Организация,
	|	ВозвратТоваровПоставщику.Контрагент,
	|	ВозвратТоваровПоставщику.Организация КАК Продавец,
	|	ВозвратТоваровПоставщику.Контрагент КАК Покупатель,
	|	ВозвратТоваровПоставщику.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ВозвратТоваровПоставщику.ДоговорКонтрагента.Номер, """") КАК НомерОснования,
	|	ЕСТЬNULL(ВозвратТоваровПоставщику.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОснования,
	|	ЕСТЬNULL(ВозвратТоваровПоставщику.ДоговорКонтрагента.ОплатаВВалюте, ЛОЖЬ) КАК ОплатаВВалюте,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	ВозвратТоваровПоставщику.ВалютаДокумента,
	|	1 КАК ТоварыКоличество,
	|	ЕСТЬNULL(СУММА(ВозвратТоваровПоставщикуТовары.Сумма), 0) КАК ТоварыСумма,
	|	ЕСТЬNULL(СУММА(ВозвратТоваровПоставщикуТовары.СуммаНДС), 0) КАК ТоварыСуммаНДС,
	|	ЕСТЬNULL(СУММА(РублевыеСуммыДокументовВВалюте.Всего), 0) КАК ТоварыСуммаРублевая,
	|	ЕСТЬNULL(СУММА(РублевыеСуммыДокументовВВалюте.НДС), 0) КАК ТоварыСуммаНДСРублевая,
	|	ВозвратТоваровПоставщику.Грузоотправитель,
	|	ВозвратТоваровПоставщику.Грузополучатель,
	|	ВозвратТоваровПоставщику.СуммаВключаетНДС
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ВозвратТоваровПоставщику.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И ВозвратТоваровПоставщику.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
	|		ПО ВозвратТоваровПоставщику.Ссылка = ВозвратТоваровПоставщикуТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ПО (РублевыеСуммыДокументовВВалюте.Регистратор = ВозвратТоваровПоставщикуТовары.Ссылка)
	|			И (РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|			И (РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента = ВозвратТоваровПоставщикуТовары.НомерСтроки)
	|ГДЕ
	|	ВозвратТоваровПоставщику.Ссылка В(&Источники)
	|	И ВозвратТоваровПоставщику.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровПоставщику.Ссылка,
	|	ВозвратТоваровПоставщику.Организация,
	|	ВозвратТоваровПоставщику.Контрагент,
	|	ВозвратТоваровПоставщику.ДоговорКонтрагента,
	|	ЕСТЬNULL(ВозвратТоваровПоставщику.ДоговорКонтрагента.Номер, """"),
	|	ЕСТЬNULL(ВозвратТоваровПоставщику.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """"),
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	|	ВозвратТоваровПоставщику.Грузоотправитель,
	|	ВозвратТоваровПоставщику.Грузополучатель,
	|	ВозвратТоваровПоставщику.Организация,
	|	ВозвратТоваровПоставщику.Контрагент,
	|	ВозвратТоваровПоставщику.ВалютаДокумента,
	|	ВозвратТоваровПоставщику.СуммаВключаетНДС,
	|	ЕСТЬNULL(ВозвратТоваровПоставщику.ДоговорКонтрагента.ОплатаВВалюте, ЛОЖЬ)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(Выборка.Документ, СозданныеЭлектронныеДокументы,
			ДоступныеВидыЭлектронныхДокументов);
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		
		ЗаполнитьТоварнаяНакладнаяТОРГ12(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
		ЗаполнитьТоварноТранспортнаяНакладная(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_ПоступлениеДопРасходов(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = Тип("ДокументСсылка.ПоступлениеДопРасходов");
	
	Источники = МассивИсточников(СвойстваИсточников, ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = Новый Соответствие;
	ОбменСКонтрагентами.ОпределитьСвойстваВладельцевЭлектронныхДокументов(СозданныеЭлектронныеДокументы, Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(ТипДокумента);
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеДопРасходов.Ссылка КАК Документ,
	|	ПоступлениеДопРасходов.Организация,
	|	ПоступлениеДопРасходов.Контрагент,
	|	ПоступлениеДопРасходов.Контрагент КАК Продавец,
	|	ПоступлениеДопРасходов.Организация КАК Покупатель,
	|	ПоступлениеДопРасходов.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ПоступлениеДопРасходов.ДоговорКонтрагента.Номер, """") КАК НомерОснования,
	|	ЕСТЬNULL(ПоступлениеДопРасходов.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОснования,
	|	ЕСТЬNULL(ПоступлениеДопРасходов.ДоговорКонтрагента.ОплатаВВалюте, ЛОЖЬ) КАК ОплатаВВалюте,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	ПоступлениеДопРасходов.ВалютаДокумента,
	|	ПоступлениеДопРасходов.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	1 КАК УслугиКоличество,
	|	ПоступлениеДопРасходов.Сумма + ЕСТЬNULL(СУММА(ПоступлениеДопРасходовТовары.Сумма), 0) КАК УслугиСумма,
	|	ПоступлениеДопРасходов.СуммаНДС + ЕСТЬNULL(СУММА(ПоступлениеДопРасходовТовары.СуммаНДС), 0) КАК УслугиСуммаНДС,
	|	ЕСТЬNULL(СУММА(РублевыеСуммыДокументовВВалюте.Всего), 0) КАК УслугиСуммаРублевая,
	|	ЕСТЬNULL(СУММА(РублевыеСуммыДокументовВВалюте.НДС), 0) КАК УслугиСуммаНДСРублевая
	|ИЗ
	|	Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПоступлениеДопРасходов.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И ПоступлениеДопРасходов.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	|		ПО ПоступлениеДопРасходов.Ссылка = ПоступлениеДопРасходовТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ПО (РублевыеСуммыДокументовВВалюте.Регистратор = ПоступлениеДопРасходовТовары.Ссылка)
	|			И (РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|			И (РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента = ПоступлениеДопРасходовТовары.НомерСтроки)
	|ГДЕ
	|	ПоступлениеДопРасходов.Ссылка В(&Источники)
	|	И ПоступлениеДопРасходов.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеДопРасходов.Ссылка,
	|	ПоступлениеДопРасходов.Организация,
	|	ДанныеПервичныхДокументов.Номер,
	|	ДанныеПервичныхДокументов.Дата,
	|	ПоступлениеДопРасходов.Контрагент,
	|	ПоступлениеДопРасходов.ДоговорКонтрагента,
	|	ПоступлениеДопРасходов.СуммаВключаетНДС,
	|	ЕСТЬNULL(ПоступлениеДопРасходов.ДоговорКонтрагента.Номер, """"),
	|	ЕСТЬNULL(ПоступлениеДопРасходов.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	|	ПоступлениеДопРасходов.ВалютаДокумента,
	|	ЕСТЬNULL(ПоступлениеДопРасходов.ДоговорКонтрагента.ОплатаВВалюте, ЛОЖЬ),
	|	ПоступлениеДопРасходов.Контрагент,
	|	ПоступлениеДопРасходов.Организация,
	|	ПоступлениеДопРасходов.Сумма,
	|	ПоступлениеДопРасходов.СуммаНДС";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(Выборка.Документ, СозданныеЭлектронныеДокументы,
			ДоступныеВидыЭлектронныхДокументов);
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Получен);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		
		ЗаполнитьАктПриемкиСдачиРабот(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_АктОРасхождениях(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = Тип("ДокументСсылка.АктОРасхождениях");
	
	Источники = МассивИсточников(СвойстваИсточников, ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = Новый Соответствие;
	ОбменСКонтрагентами.ОпределитьСвойстваВладельцевЭлектронныхДокументов(СозданныеЭлектронныеДокументы, Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(ТипДокумента);
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АктОРахождениях.Ссылка КАК Документ,
	|	АктОРахождениях.Организация КАК Организация,
	|	АктОРахождениях.Контрагент КАК Контрагент,
	|	АктОРахождениях.Контрагент КАК Продавец,
	|	АктОРахождениях.Организация КАК Покупатель,
	|	АктОРахождениях.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(АктОРахождениях.ДоговорКонтрагента.Номер, """") КАК НомерОснования,
	|	ЕСТЬNULL(АктОРахождениях.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОснования,
	|	ЕСТЬNULL(АктОРахождениях.ДоговорКонтрагента.ОплатаВВалюте, ЛОЖЬ) КАК ОплатаВВалюте,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	АктОРахождениях.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	АктОРахождениях.ВалютаДокумента КАК ВалютаДокумента,
	|	АктОРахождениях.СуммаДокумента КАК СуммаДокумента
	|ПОМЕСТИТЬ Документы
	|ИЗ
	|	Документ.АктОРасхождениях КАК АктОРахождениях
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО АктОРахождениях.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И АктОРахождениях.Организация = ДанныеПервичныхДокументов.Организация
	|ГДЕ
	|	АктОРахождениях.Ссылка В(&Источники)
	|	И АктОРахождениях.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ КАК Документ,
	|	АктОРасхожденияхТовары.Сумма КАК Сумма,
	|	АктОРасхожденияхТовары.СуммаНДС КАК СуммаНДС
	|ПОМЕСТИТЬ СтрокиДокументов
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОРасхождениях.Товары КАК АктОРасхожденияхТовары
	|		ПО Документы.Документ = АктОРасхожденияхТовары.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	АктОРасхожденияхУслуги.Сумма,
	|	АктОРасхожденияхУслуги.СуммаНДС
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОРасхождениях.Услуги КАК АктОРасхожденияхУслуги
	|		ПО Документы.Документ = АктОРасхожденияхУслуги.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	АктОРасхожденияхАгентскиеУслуги.Сумма,
	|	АктОРасхожденияхАгентскиеУслуги.СуммаНДС
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОРасхождениях.АгентскиеУслуги КАК АктОРасхожденияхАгентскиеУслуги
	|		ПО Документы.Документ = АктОРасхожденияхАгентскиеУслуги.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ КАК Документ,
	|	Документы.Организация КАК Организация,
	|	Документы.Контрагент КАК Контрагент,
	|	Документы.Продавец КАК Продавец,
	|	Документы.Покупатель КАК Покупатель,
	|	Документы.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Документы.НомерОснования КАК НомерОснования,
	|	Документы.ДатаОснования КАК ДатаОснования,
	|	Документы.ОплатаВВалюте КАК ОплатаВВалюте,
	|	Документы.Номер КАК Номер,
	|	Документы.Дата КАК Дата,
	|	Документы.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Документы.СуммаДокумента КАК СуммаДокумента,
	|	Документы.ВалютаДокумента КАК ВалютаДокумента,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.Сумма), 0) КАК Сумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.СуммаНДС), 0) КАК СуммаНДС
	|ИЗ
	|	Документы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиДокументов КАК СтрокиДокументов
	|		ПО Документы.Документ = СтрокиДокументов.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.Продавец,
	|	Документы.Покупатель,
	|	Документы.ДоговорКонтрагента,
	|	Документы.НомерОснования,
	|	Документы.ДатаОснования,
	|	Документы.ОплатаВВалюте,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.СуммаВключаетНДС,
	|	Документы.ВалютаДокумента,
	|	Документы.СуммаДокумента";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(Выборка.Документ, СозданныеЭлектронныеДокументы,
			ДоступныеВидыЭлектронныхДокументов);
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		
		ЗаполнитьАктОРасхождениях(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_АктОРасхожденияхПолученный(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = Тип("ДокументСсылка.АктОРасхожденияхПолученный");
	
	Источники = МассивИсточников(СвойстваИсточников, ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = Новый Соответствие;
	ОбменСКонтрагентами.ОпределитьСвойстваВладельцевЭлектронныхДокументов(СозданныеЭлектронныеДокументы, Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(ТипДокумента);
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АктОРасхожденияхПолученный.Ссылка КАК Документ,
	|	АктОРасхожденияхПолученный.Организация КАК Организация,
	|	АктОРасхожденияхПолученный.Контрагент КАК Контрагент,
	|	АктОРасхожденияхПолученный.Контрагент КАК Покупатель,
	|	АктОРасхожденияхПолученный.Организация КАК Продавец,
	|	АктОРасхожденияхПолученный.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(АктОРасхожденияхПолученный.ДоговорКонтрагента.Номер, """") КАК НомерОснования,
	|	ЕСТЬNULL(АктОРасхожденияхПолученный.ДоговорКонтрагента.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОснования,
	|	ЕСТЬNULL(АктОРасхожденияхПолученный.ДоговорКонтрагента.ОплатаВВалюте, ЛОЖЬ) КАК ОплатаВВалюте,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	АктОРасхожденияхПолученный.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	АктОРасхожденияхПолученный.ВалютаДокумента КАК ВалютаДокумента,
	|	АктОРасхожденияхПолученный.СуммаДокумента КАК СуммаДокумента
	|ПОМЕСТИТЬ Документы
	|ИЗ
	|	Документ.АктОРасхожденияхПолученный КАК АктОРасхожденияхПолученный
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО АктОРасхожденияхПолученный.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И АктОРасхожденияхПолученный.Организация = ДанныеПервичныхДокументов.Организация
	|ГДЕ
	|	АктОРасхожденияхПолученный.Ссылка В(&Источники)
	|	И АктОРасхожденияхПолученный.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ КАК Документ,
	|	АктОРасхожденияхПолученныйТовары.Сумма КАК Сумма,
	|	АктОРасхожденияхПолученныйТовары.СуммаНДС КАК СуммаНДС
	|ПОМЕСТИТЬ СтрокиДокументов
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОРасхожденияхПолученный.Товары КАК АктОРасхожденияхПолученныйТовары
	|		ПО Документы.Документ = АктОРасхожденияхПолученныйТовары.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	АктОРасхожденияхПолученныйУслуги.Сумма,
	|	АктОРасхожденияхПолученныйУслуги.СуммаНДС
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОРасхожденияхПолученный.Услуги КАК АктОРасхожденияхПолученныйУслуги
	|		ПО Документы.Документ = АктОРасхожденияхПолученныйУслуги.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	АктОРасхожденияхПолученныйАгентскиеУслуги.Сумма,
	|	АктОРасхожденияхПолученныйАгентскиеУслуги.СуммаНДС
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОРасхожденияхПолученный.АгентскиеУслуги КАК АктОРасхожденияхПолученныйАгентскиеУслуги
	|		ПО Документы.Документ = АктОРасхожденияхПолученныйАгентскиеУслуги.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ КАК Документ,
	|	Документы.Организация КАК Организация,
	|	Документы.Контрагент КАК Контрагент,
	|	Документы.Продавец КАК Продавец,
	|	Документы.Покупатель КАК Покупатель,
	|	Документы.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Документы.НомерОснования КАК НомерОснования,
	|	Документы.ДатаОснования КАК ДатаОснования,
	|	Документы.ОплатаВВалюте КАК ОплатаВВалюте,
	|	Документы.Номер КАК Номер,
	|	Документы.Дата КАК Дата,
	|	Документы.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Документы.СуммаДокумента КАК СуммаДокумента,
	|	Документы.ВалютаДокумента КАК ВалютаДокумента,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.Сумма), 0) КАК Сумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.СуммаНДС), 0) КАК СуммаНДС
	|ИЗ
	|	Документы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиДокументов КАК СтрокиДокументов
	|		ПО Документы.Документ = СтрокиДокументов.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.Продавец,
	|	Документы.Покупатель,
	|	Документы.ДоговорКонтрагента,
	|	Документы.НомерОснования,
	|	Документы.ДатаОснования,
	|	Документы.ОплатаВВалюте,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.СуммаВключаетНДС,
	|	Документы.ВалютаДокумента,
	|	Документы.СуммаДокумента";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(Выборка.Документ, СозданныеЭлектронныеДокументы,
			ДоступныеВидыЭлектронныхДокументов);
		
		ОбъектИсточник = Новый Структура();
		ОбъектИсточник.Вставить("Организация",     Выборка.Организация);
		ОбъектИсточник.Вставить("Направление",     Перечисления.НаправленияДокументаПоТребованиюФНС.Получен);
		ОбъектИсточник.Вставить("Дата",            Выборка.Дата);
		ОбъектИсточник.Вставить("Номер",           Выборка.Номер);
		ОбъектИсточник.Вставить("Контрагент",      Выборка.Контрагент);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		
		ЗаполнитьАктОРасхождениях(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства);
		
	КонецЦикла;
	
КонецПроцедуры

Функция СтруктураОсновныхСвойств(ОписаниеИсточника)
	
	ОбъектИсточник = Новый Структура("Организация, Направление, Дата, Номер, Контрагент, ЭлектронныйДокумент");
	ЗаполнитьЗначенияСвойств(ОбъектИсточник, ОписаниеИсточника);
	ОбъектИсточник.ЭлектронныйДокумент = Ложь;
	Возврат ОбъектИсточник;
	
КонецФункции

Процедура УстановитьНаличиеЭлектронногоДокумента(Документ, ОписаниеИсточника)
	
	Если ОписаниеИсточника.Свойство("ВидЭлектронногоДокумента")
		И ЗначениеЗаполнено(ОписаниеИсточника.ВидЭлектронногоДокумента) Тогда
		
		Если Документ.ВидДокументаФНС = ОписаниеИсточника.ВидЭлектронногоДокумента Тогда
			Документ.ЭлектронныйДокумент = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция МассивИсточников(СвойстваИсточников, ТипРегистрируемогоОбъекта)
	
	Источники = Новый Массив;
	
	Для Каждого СвойствоИсточника Из СвойстваИсточников Цикл
		
		Если ТипЗнч(СвойствоИсточника.Ключ) = ТипРегистрируемогоОбъекта Тогда
			Источники.Добавить(СвойствоИсточника.Ключ);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Источники;
	
КонецФункции

Процедура ДобавитьУчастника(Участники, Контрагент, ВидКонтрагента = "", Роль = "")
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		
		СвойстваКонтрагента = Новый Структура();
		СвойстваКонтрагента.Вставить("Роль", Роль);
		
		Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
			СвойстваДляПолучения = Новый Структура();
			СвойстваДляПолучения.Вставить("ЮридическоеФизическоеЛицо", "Владелец.ЮридическоеФизическоеЛицо");
			СвойстваДляПолучения.Вставить("НаименованиеПолное", "Ссылка.НаименованиеПолное");
			СвойстваДляПолучения.Вставить("ИНН", "Владелец.ИНН");
			СвойстваДляПолучения.Вставить("КПП", "Ссылка.КПП");
			Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Контрагент, СвойстваДляПолучения);
		Иначе
			Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Контрагент, "ЮридическоеФизическоеЛицо, НаименованиеПолное, ИНН, КПП");
		КонецЕсли;
		
		СвойстваКонтрагента.Вставить("ЯвляетсяЮрЛицом", Реквизиты.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо);
		Если СвойстваКонтрагента.ЯвляетсяЮрЛицом Тогда
			СвойстваКонтрагента.Вставить("ЮрЛицоНаименование", Реквизиты.НаименованиеПолное);
			СвойстваКонтрагента.Вставить("ЮрЛицоИНН",          Реквизиты.ИНН);
			СвойстваКонтрагента.Вставить("ЮрЛицоКПП",          Реквизиты.КПП);
		Иначе
			ФИО = РегламентированнаяОтчетность.РазложитьФИО(Реквизиты.НаименованиеПолное);
			СвойстваКонтрагента.Вставить("ФизЛицоФамилия",     ФИО.Фамилия);
			СвойстваКонтрагента.Вставить("ФизЛицоИмя",         ФИО.Имя);
			СвойстваКонтрагента.Вставить("ФизЛицоОтчество",    ФИО.Отчество);
			СвойстваКонтрагента.Вставить("ФизЛицоИНН",         Реквизиты.ИНН);
		КонецЕсли;
		
		Если ТипЗнч(Контрагент) = Тип("СправочникОбъект.Контрагенты")
			ИЛИ ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
			
			СвойстваКонтрагента.Вставить("Контрагент", Контрагент);
			
		КонецЕсли;
		
		Участники.Добавить(СвойстваКонтрагента);
		
	КонецЕсли;
	
КонецПроцедуры

#Область ЗаполнениеДокументов

Процедура ЗаполнитьАктПриемкиСдачиРабот(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Если Выборка.УслугиКоличество > 0 Тогда
		
		// Акт об оказании услуг
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.АктПриемкиСдачиРабот);
		УстановитьНаличиеЭлектронногоДокумента(Документ, ОбъектИсточник);
		
		Документ.Вставить("НомерОснования", Выборка.НомерОснования);
		Документ.Вставить("ДатаОснования",  Выборка.ДатаОснования);
		
		Если ТолькоОсновныеСвойства Тогда
			// Если запрашиваются только основные свойства, возвращаем сумму в валюте документа
			СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.УслугиСумма, Выборка.УслугиСумма + Выборка.УслугиСуммаНДС);
			Документ.Вставить("СуммаВсего",   СуммаДокумента);
		Иначе
			Если Выборка.ВалютаДокумента <> ВалютаРегламентированногоУчета
				И НЕ Выборка.ОплатаВВалюте Тогда
				СуммаДокумента = Выборка.УслугиСуммаРублевая;
				СуммаНДСДокумента = Выборка.УслугиСуммаНДСРублевая;
			Иначе
				СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.УслугиСумма,
				Выборка.УслугиСумма + Выборка.УслугиСуммаНДС);
				СуммаНДСДокумента = Выборка.УслугиСуммаНДС;
			КонецЕсли;
			
			Документ.Вставить("СуммаВсего",  СуммаДокумента);
			Документ.Вставить("СуммаНалога", СуммаНДСДокумента);
			
			Документ.Вставить("НачалоПериода", Выборка.Дата);
			Документ.Вставить("КонецПериода",  Выборка.Дата);
			Документ.Вставить("Участники",     Новый Массив);
			
			ДобавитьУчастника(Документ.Участники, Выборка.Покупатель,  "Заказчик",    Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Заказчик);
			ДобавитьУчастника(Документ.Участники, Выборка.Продавец, "Исполнитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Исполнитель);
		КонецЕсли;
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТоварнаяНакладнаяТОРГ12(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Если Выборка.ТоварыКоличество > 0 Тогда
		
		// Товарная накладная (ТОРГ-12)
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ТоварнаяНакладнаяТОРГ12);
		УстановитьНаличиеЭлектронногоДокумента(Документ, ОбъектИсточник);
		
		Документ.Вставить("НомерОснования", Выборка.НомерОснования);
		Документ.Вставить("ДатаОснования",  Выборка.ДатаОснования);
		
		Если ТолькоОсновныеСвойства Тогда
			// Если запрашиваются только основные свойства, возвращаем сумму в валюте документа
			СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.ТоварыСумма,
									Выборка.ТоварыСумма + Выборка.ТоварыСуммаНДС);
			Документ.Вставить("СуммаВсего", СуммаДокумента);
		Иначе
			Если Выборка.ВалютаДокумента <> ВалютаРегламентированногоУчета Тогда
				СуммаДокумента = Выборка.ТоварыСуммаРублевая;
				СуммаНДСДокумента = Выборка.ТоварыСуммаНДСРублевая;
			Иначе
				СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.ТоварыСумма,
									Выборка.ТоварыСумма + Выборка.ТоварыСуммаНДС);
				СуммаНДСДокумента = Выборка.ТоварыСуммаНДС;
			КонецЕсли;
			
			Документ.Вставить("СуммаВсего",  СуммаДокумента);
			Документ.Вставить("СуммаНалога", СуммаНДСДокумента);
			Документ.Вставить("Участники",   Новый Массив);
			
			ДобавитьУчастника(Документ.Участники, Выборка.Покупатель, "Плательщик", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Плательщик);
			ДобавитьУчастника(Документ.Участники, Выборка.Продавец,  "Поставщик",  Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Поставщик);
			Если ЗначениеЗаполнено(Выборка.Грузополучатель) Тогда
				ДобавитьУчастника(Документ.Участники, Выборка.Грузополучатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
			Иначе
				ДобавитьУчастника(Документ.Участники, Выборка.Покупатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
				ДобавитьУчастника(Документ.Участники, Выборка.Грузоотправитель, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
			Иначе
				ДобавитьУчастника(Документ.Участники, Выборка.Продавец, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
			КонецЕсли;
			
		КонецЕсли;
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТоварноТранспортнаяНакладная(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Если Выборка.ТоварыКоличество > 0 Тогда
		
		// Товарно-транспортная накладная
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ТоварноТранспортнаяНакладная);
		УстановитьНаличиеЭлектронногоДокумента(Документ, ОбъектИсточник);
		
		Документ.Вставить("НомерОснования", Выборка.НомерОснования);
		Документ.Вставить("ДатаОснования",  Выборка.ДатаОснования);
		
		Если ТолькоОсновныеСвойства Тогда
			// Если запрашиваются только основные свойства, возвращаем сумму в валюте документа
			СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.ТоварыСумма,
									Выборка.ТоварыСумма + Выборка.ТоварыСуммаНДС);
			Документ.Вставить("СуммаВсего", СуммаДокумента);
		Иначе
			Если Выборка.ВалютаДокумента <> ВалютаРегламентированногоУчета Тогда
				СуммаДокумента = Выборка.ТоварыСуммаРублевая;
				СуммаНДСДокумента = Выборка.ТоварыСуммаНДСРублевая;
			Иначе
				СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.ТоварыСумма,
									Выборка.ТоварыСумма + Выборка.ТоварыСуммаНДС);
				СуммаНДСДокумента = Выборка.ТоварыСуммаНДС;
			КонецЕсли;
			
			Документ.Вставить("СуммаВсего",  СуммаДокумента);
			Документ.Вставить("СуммаНалога", СуммаНДСДокумента);
			
			Документ.Вставить("Участники",   Новый Массив);
			
			ДобавитьУчастника(Документ.Участники, Выборка.Покупатель, "Плательщик", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Плательщик);
			ДобавитьУчастника(Документ.Участники, Выборка.Продавец,   "Поставщик",  Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Поставщик);
			Если ЗначениеЗаполнено(Выборка.Грузополучатель) Тогда
				ДобавитьУчастника(Документ.Участники, Выборка.Грузополучатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
			Иначе
				ДобавитьУчастника(Документ.Участники, Выборка.Покупатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
				ДобавитьУчастника(Документ.Участники, Выборка.Грузоотправитель, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
			Иначе
				ДобавитьУчастника(Документ.Участники, Выборка.Продавец, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
			КонецЕсли;
			
		КонецЕсли;
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСчетФактуруВыданный(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства)
	
	Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
	
	Если Выборка.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный Тогда
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.КорректировочныйСчетФактура);
	Иначе
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.СчетФактура);
	КонецЕсли;
	УстановитьНаличиеЭлектронногоДокумента(Документ, ОбъектИсточник);
	
	Если Выборка.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный Тогда
		Документ.Вставить("НомерОснования", Выборка.НомерОснования);
		Документ.Вставить("ДатаОснования",  Выборка.ДатаОснования);
	КонецЕсли;
	
	Если ТолькоОсновныеСвойства Тогда
		
		Документ.Вставить("СуммаВсего", Выборка.СуммаДокумента);
		
	Иначе
		
		Документ.Вставить("Участники",   Новый Массив);
		ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Покупатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Плательщик);
		ДобавитьУчастника(Документ.Участники, Документ.Организация, "Продавец",   Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Поставщик);
		
		Если ЗначениеЗаполнено(Выборка.Продавец) Тогда
			ДобавитьУчастника(Документ.Участники, Документ.Организация, "Агент", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Агент);
		КонецЕсли;
		
		МассивСчетовФактур = Новый Массив;
		МассивСчетовФактур.Добавить(Выборка.Документ);
		Если Выборка.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный Тогда
			ТаблицаСчетовФактур = УчетНДС.ПолучитьДанныеДляПечатиКорректировочныхСчетовФактур1137(
				МассивСчетовФактур, Документы.СчетФактураВыданный.ТекстЗапросаПечатьКорректировочныхСчетовФактур());
				
			Если ТаблицаСчетовФактур.Количество() > 0 Тогда
				СведенияОСчетеФактуре = ТаблицаСчетовФактур[0];
				
				Документ.Вставить("СуммаВсего", СведенияОСчетеФактуре.ТаблицаДокумента.Итог("СтоимостьСНДСПослеИзменения") - СведенияОСчетеФактуре.ТаблицаДокумента.Итог("СтоимостьСНДСДоИзменения"));
				Документ.Вставить("СуммаНалога", СведенияОСчетеФактуре.ТаблицаДокумента.Итог("СуммаНДСПослеИзменения") - СведенияОСчетеФактуре.ТаблицаДокумента.Итог("СуммаНДСДоИзменения"));
				
			КонецЕсли;
				
		Иначе
			ТаблицаСчетовФактур = УчетНДС.ПолучитьДанныеДляПечатиСчетаФактуры1137(
				МассивСчетовФактур, Документы.СчетФактураВыданный.ТекстЗапросаПечатьСчетовФактур());
			
			Если ТаблицаСчетовФактур.Количество() > 0 Тогда
				
				СведенияОСчетеФактуре = ТаблицаСчетовФактур[0];
				
				Документ.Вставить("СуммаВсего", СведенияОСчетеФактуре.ТаблицаДокумента.Итог("Всего"));
				Документ.Вставить("СуммаНалога", СведенияОСчетеФактуре.ТаблицаДокумента.Итог("СуммаНДС"));
				
				Если ЗначениеЗаполнено(СведенияОСчетеФактуре.ДанныеШапки.Грузополучатель)
					И СведенияОСчетеФактуре.ДанныеШапки.Грузополучатель <> "он же" Тогда
					ДобавитьУчастника(Документ.Участники, СведенияОСчетеФактуре.ДанныеШапки.Грузополучатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Контрагент, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СведенияОСчетеФактуре.ДанныеШапки.Грузоотправитель)
					И СведенияОСчетеФактуре.ДанныеШапки.Грузоотправитель <> "он же" Тогда
					ДобавитьУчастника(Документ.Участники, СведенияОСчетеФактуре.ДанныеШапки.Грузоотправитель, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Организация, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
	
КонецПроцедуры

Процедура ЗаполнитьСчетФактуруПолученный(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства)
	
	Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
	
	Если Выборка.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный Тогда
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.КорректировочныйСчетФактура);
	Иначе
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.СчетФактура);
	КонецЕсли;
	УстановитьНаличиеЭлектронногоДокумента(Документ, ОбъектИсточник);
	
	Если Выборка.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный Тогда
		Документ.Вставить("НомерОснования", Выборка.НомерОснования);
		Документ.Вставить("ДатаОснования",  Выборка.ДатаОснования);
	КонецЕсли;
	
	Если ТолькоОсновныеСвойства Тогда
		
		Документ.Вставить("СуммаВсего", Выборка.СуммаДокумента);
		
	Иначе
		
		Документ.Вставить("Участники",   Новый Массив);
		ДобавитьУчастника(Документ.Участники, Документ.Организация, "Покупатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Плательщик);
		ДобавитьУчастника(Документ.Участники, Документ.Контрагент,  "Продавец",   Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Поставщик);
		Если ЗначениеЗаполнено(Выборка.Продавец) Тогда
			ДобавитьУчастника(Документ.Участники, Документ.Контрагент, "Агент", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Агент);
		КонецЕсли;
		
		МассивСчетовФактур = Новый Массив;
		МассивСчетовФактур.Добавить(Выборка.Документ);
		Если Выборка.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный Тогда
			ТаблицаСчетовФактур = УчетНДС.ПолучитьДанныеДляПечатиКорректировочныхСчетовФактур1137(
				МассивСчетовФактур, Документы.СчетФактураПолученный.ТекстЗапросаПечатьКорректировочныхСчетовФактур());
				
			Если ТаблицаСчетовФактур.Количество() > 0 Тогда
				СведенияОСчетеФактуре = ТаблицаСчетовФактур[0];
				
				Если Выборка.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный
					И СведенияОСчетеФактуре.ДанныеШапки.ТаблицаРеквизитовОснований.Количество()>0 Тогда
					
					Основание = СведенияОСчетеФактуре.ДанныеШапки.ТаблицаРеквизитовОснований[0];
					
					Документ.Вставить("НомерОснования", Основание.НомерСчетаФактуры);
					Документ.Вставить("ДатаОснования",  Основание.ДатаСчетаФактуры);
				КонецЕсли;
				
				Документ.Вставить("СуммаВсего", СведенияОСчетеФактуре.ТаблицаДокумента.Итог("СтоимостьСНДСПослеИзменения") - СведенияОСчетеФактуре.ТаблицаДокумента.Итог("СтоимостьСНДСДоИзменения"));
				Документ.Вставить("СуммаНалога", СведенияОСчетеФактуре.ТаблицаДокумента.Итог("СуммаНДСПослеИзменения") - СведенияОСчетеФактуре.ТаблицаДокумента.Итог("СуммаНДСДоИзменения"));
				
			КонецЕсли;
				
		Иначе
			ТаблицаСчетовФактур = УчетНДС.ПолучитьДанныеДляПечатиСчетаФактуры1137(
				МассивСчетовФактур, Документы.СчетФактураПолученный.ТекстЗапросаПечатьСчетовФактур());
			
			Если ТаблицаСчетовФактур.Количество() > 0 Тогда
				
				СведенияОСчетеФактуре = ТаблицаСчетовФактур[0];
				
				Документ.Вставить("СуммаВсего", СведенияОСчетеФактуре.ТаблицаДокумента.Итог("Всего"));
				Документ.Вставить("СуммаНалога", СведенияОСчетеФактуре.ТаблицаДокумента.Итог("СуммаНДС"));
				
				Если ЗначениеЗаполнено(СведенияОСчетеФактуре.ДанныеШапки.Грузополучатель)
					И СведенияОСчетеФактуре.ДанныеШапки.Грузополучатель <> "он же" Тогда
					ДобавитьУчастника(Документ.Участники, СведенияОСчетеФактуре.ДанныеШапки.Грузополучатель, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Организация, "Грузополучатель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузополучатель);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СведенияОСчетеФактуре.ДанныеШапки.Грузоотправитель)
					И СведенияОСчетеФактуре.ДанныеШапки.Грузоотправитель <> "он же" Тогда
					ДобавитьУчастника(Документ.Участники, СведенияОСчетеФактуре.ДанныеШапки.Грузоотправитель, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				Иначе
					ДобавитьУчастника(Документ.Участники, Документ.Контрагент, "Грузоотправитель", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Грузоотправитель);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
	
КонецПроцедуры

Процедура ЗаполнитьАктОРасхождениях(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства)
	
	// Акт о расхождениях
	Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
	Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.АктОРасхождениях);
	УстановитьНаличиеЭлектронногоДокумента(Документ, ОбъектИсточник);
	
	Документ.Вставить("НомерОснования", Выборка.НомерОснования);
	Документ.Вставить("ДатаОснования",  Выборка.ДатаОснования);
	
	Если ТолькоОсновныеСвойства Тогда
		// Если запрашиваются только основные свойства, возвращаем сумму в валюте документа
		СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.Сумма, Выборка.Сумма + Выборка.СуммаНДС);
		Документ.Вставить("СуммаВсего", СуммаДокумента);
	Иначе
		СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.Сумма, Выборка.Сумма + Выборка.СуммаНДС);
		СуммаНДСДокумента = Выборка.СуммаНДС;
		
		Документ.Вставить("СуммаВсего",  СуммаДокумента);
		Документ.Вставить("СуммаНалога", СуммаНДСДокумента);
		Документ.Вставить("Участники",   Новый Массив);
		
		ДобавитьУчастника(Документ.Участники, Выборка.Покупатель, "Плательщик", Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Плательщик);
		ДобавитьУчастника(Документ.Участники, Выборка.Продавец,  "Поставщик",  Перечисления.РолиУчастниковСделкиДокументаПоТребованиюФНС.Поставщик);
		
	КонецЕсли;
	
	СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
	
КонецПроцедуры

Процедура ЗаполнитьАктНаПередачуПрав(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Если Выборка.ТоварыКоличество > 0
		Или Выборка.УслугиКоличество > 0 Тогда
		
		// Акт на передачу прав
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.АктНаПередачуПрав);
		УстановитьНаличиеЭлектронногоДокумента(Документ, ОбъектИсточник);
		
		Документ.Вставить("НомерОснования", Выборка.НомерОснования);
		Документ.Вставить("ДатаОснования",  Выборка.ДатаОснования);
		
		Если ТолькоОсновныеСвойства Тогда
			// Если запрашиваются только основные свойства, возвращаем сумму в валюте документа
			СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.ТоварыСумма + Выборка.УслугиСумма,
				Выборка.ТоварыСумма + Выборка.ТоварыСуммаНДС + Выборка.УслугиСумма + Выборка.УслугиСуммаНДС);
			Документ.Вставить("СуммаВсего", СуммаДокумента);
		Иначе
			Если Выборка.ВалютаДокумента <> ВалютаРегламентированногоУчета
				И НЕ Выборка.ОплатаВВалюте Тогда
				СуммаДокумента = Выборка.ТоварыСуммаРублевая + Выборка.УслугиСуммаРублевая;
				СуммаНДСДокумента = Выборка.ТоварыСуммаНДСРублевая + Выборка.УслугиСуммаНДСРублевая;
			Иначе
				СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.ТоварыСумма + Выборка.УслугиСумма,
					Выборка.ТоварыСумма + Выборка.ТоварыСуммаНДС + Выборка.УслугиСумма + Выборка.УслугиСуммаНДС);
				СуммаНДСДокумента = Выборка.ТоварыСуммаНДС + Выборка.УслугиСуммаНДС;
			КонецЕсли;
			
			Документ.Вставить("СуммаВсего",  СуммаДокумента);
			Документ.Вставить("СуммаНалога", СуммаНДСДокумента);
			
		КонецЕсли;
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДокументОбИзмененииСтоимости(Выборка, ОбъектИсточник, СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Если Не ЭтоСоглашениеОбИзмененииСтоимости(Выборка) Тогда
		Возврат;
	КонецЕсли;
	
	Если Выборка.ТоварыКоличество > 0
		Или Выборка.УслугиКоличество > 0 Тогда
		
		// Соглашение об изменении стоимости
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		
		Документ.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ДокументОбИзмененииСтоимости);
		УстановитьНаличиеЭлектронногоДокумента(Документ, ОбъектИсточник);
		
		Документ.Вставить("НомерОснования", Выборка.НомерОснования);
		Документ.Вставить("ДатаОснования",  Выборка.ДатаОснования);
		
		Если ТолькоОсновныеСвойства Тогда
			// Если запрашиваются только основные свойства, возвращаем сумму в валюте документа
			СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.ТоварыСумма + Выборка.УслугиСумма,
				Выборка.ТоварыСумма + Выборка.ТоварыСуммаНДС + Выборка.УслугиСумма + Выборка.УслугиСуммаНДС);
			Документ.Вставить("СуммаВсего", СуммаДокумента);
		Иначе
			Если Выборка.ВалютаДокумента <> ВалютаРегламентированногоУчета
				И НЕ Выборка.ОплатаВВалюте Тогда
				СуммаДокумента = Выборка.ТоварыСуммаРублевая + Выборка.УслугиСуммаРублевая;
				СуммаНДСДокумента = Выборка.ТоварыСуммаНДСРублевая + Выборка.УслугиСуммаНДСРублевая;
			Иначе
				СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.ТоварыСумма + Выборка.УслугиСумма,
					Выборка.ТоварыСумма + Выборка.ТоварыСуммаНДС + Выборка.УслугиСумма + Выборка.УслугиСуммаНДС);
				СуммаНДСДокумента = Выборка.ТоварыСуммаНДС + Выборка.УслугиСуммаНДС;
			КонецЕсли;
			
			Документ.Вставить("СуммаВсего",  СуммаДокумента);
			Документ.Вставить("СуммаНалога", СуммаНДСДокумента);
			
		КонецЕсли;
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ЭтоСоглашениеОбИзмененииСтоимости(Выборка)
	
	Если Выборка.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ТипЗнч(Выборка.Документ) = Тип("ДокументСсылка.КорректировкаПоступления")
		И ТипЗнч(Выборка.ДокументПоступления) = Тип("ДокументСсылка.КорректировкаПоступления")
		И ОбщегоНазначения.СсылкаСуществует(Выборка.ДокументПоступления)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.ДокументПоступления, "ВидОперации")
			= Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение Тогда
		Возврат Истина;
	ИначеЕсли ТипЗнч(Выборка.Документ) = Тип("ДокументСсылка.КорректировкаРеализации")
		И ТипЗнч(Выборка.ДокументРеализации) = Тип("ДокументСсылка.КорректировкаРеализации")
		И ОбщегоНазначения.СсылкаСуществует(Выборка.ДокументРеализации)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.ДокументРеализации, "ВидОперации")
			= Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Процедура ЗаполнитьЭлектронныйДокумент(Выборка, ОбъектИсточник, СвойстваИсточников, ВидПредставляемогоДокумента)
	
	Если ЗначениеЗаполнено(ВидПредставляемогоДокумента) Тогда
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		Документ.ЭлектронныйДокумент = Истина;
		Документ.Вставить("ВидДокументаФНС", ВидПредставляемогоДокумента);
		
		Документ.Вставить("НомерОснования", Выборка.НомерОснования);
		Документ.Вставить("ДатаОснования",  Выборка.ДатаОснования);
		
		Если ВидПредставляемогоДокумента = Перечисления.ВидыПредставляемыхДокументов.ПередачаТоваров Тогда
			СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.ТоварыСумма,
									Выборка.ТоварыСумма + Выборка.ТоварыСуммаНДС);
			Документ.Вставить("СуммаВсего", СуммаДокумента);
		ИначеЕсли ВидПредставляемогоДокумента = Перечисления.ВидыПредставляемыхДокументов.ПередачаУслуг Тогда
			СуммаДокумента = ?(Выборка.СуммаВключаетНДС, Выборка.УслугиСумма, 
									Выборка.УслугиСумма + Выборка.УслугиСуммаНДС);
			Документ.Вставить("СуммаВсего", СуммаДокумента);
		Иначе
			Документ.Вставить("СуммаВсего", Выборка.СуммаДокумента);
		КонецЕсли;
		
		СвойстваИсточников.Получить(Выборка.Документ).Добавить(Документ);
	КонецЕсли;
	
КонецПроцедуры

Функция ВидПредставляемогоДокумента(Документ, СозданныеЭлектронныеДокументы, ДоступныеВидыЭлектронныхДокументов)
	
	ВидПредставляемогоДокумента = Неопределено;
	
	// Всегда заполняем только основные свойства
	ВидЭД = СозданныеЭлектронныеДокументы.Получить(Документ);
	Если ЗначениеЗаполнено(ВидЭД) Тогда
		ВидПредставляемогоДокумента = Перечисления.ВидыПредставляемыхДокументов[ВидЭД];
	КонецЕсли;
	
	Если ДоступныеВидыЭлектронныхДокументов.Получить(ВидПредставляемогоДокумента) = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ВидПредставляемогоДокумента;
	
КонецФункции

Функция ДокументПередаетсяТолькоВЭлектронномВиде(ВидПредставляемогоДокумента)
	
	Если ВидПредставляемогоДокумента = Перечисления.ВидыПредставляемыхДокументов.ПередачаТоваров
		ИЛИ ВидПредставляемогоДокумента = Перечисления.ВидыПредставляемыхДокументов.ПередачаУслуг
		ИЛИ ВидПредставляемогоДокумента = Перечисления.ВидыПредставляемыхДокументов.УПД
		ИЛИ ВидПредставляемогоДокумента = Перечисления.ВидыПредставляемыхДокументов.УКД
		ИЛИ ВидПредставляемогоДокумента = Перечисления.ВидыПредставляемыхДокументов.АктОРасхождениях
		ИЛИ ВидПредставляемогоДокумента = Перечисления.ВидыПредставляемыхДокументов.АктНаПередачуПрав
		ИЛИ ВидПредставляемогоДокумента = Перечисления.ВидыПредставляемыхДокументов.ДокументОбИзмененииСтоимости Тогда
		
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция ДоступныеВидыЭлектронныхДокументов(ТипОбъекта)
	
	// Возвращает доступные виды электронных документов
	// для данного типа объектов.
	// В качестве источника используется результат процедуры
	// ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ОпределитьСоответствиеТиповИсточниковВидамДокументовФНС
	
	ВидыДокументовТипаОбъекта = Новый Соответствие;
	
	СоответствиеВидовДокументов = Новый Соответствие;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ОпределитьСоответствиеТиповИсточниковВидамДокументовФНС(СоответствиеВидовДокументов);
	Для Каждого ВидДокумента Из СоответствиеВидовДокументов Цикл
		Для Каждого ТипДляВидаДокумента Из ВидДокумента.Значение Цикл
			Если ТипДляВидаДокумента = ТипОбъекта Тогда
				ВидыДокументовТипаОбъекта.Вставить(ВидДокумента.Ключ, Истина);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ВидыДокументовТипаОбъекта;
	
КонецФункции

#КонецОбласти

#Область ЗаявлениеПо1СОтчетности

Функция ПользователиСДоступомК1СОтчетности(Организация) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.ПометкаУдаления = ЛОЖЬ
	|	И Пользователи.Недействителен = ЛОЖЬ
	|	И Пользователи.Служебный = ЛОЖЬ";
	
	ПользователиСДоступомК1СОтчетности = Новый Массив;
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	Пока Выборка.Следующий() Цикл
		Если Пользователи.ЭтоПолноправныйПользователь(Выборка.Ссылка) Тогда
			ПользователиСДоступомК1СОтчетности.Добавить(Выборка.Ссылка);
		ИначеЕсли Пользователи.РолиДоступны("ПравоНаЗащищенныйДокументооборотСКонтролирующимиОрганами", Выборка.Ссылка, Ложь) Тогда
			// Проверяем, что у пользователя есть доступ к организации.
			ДоступныеОрганизации = УправлениеДоступомБП.ОрганизацииДанныеКоторыхДоступныПользователю(
				"РегистрБухгалтерии.Хозрасчетный", Ложь, Выборка.Ссылка);
			Если ДоступныеОрганизации.Найти(Организация) <> Неопределено Тогда
				ПользователиСДоступомК1СОтчетности.Добавить(Выборка.Ссылка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПользователиСДоступомК1СОтчетности;
	
КонецФункции

// См. ЭлектронныйДокументооборотСКонтролирующимиОрганамиПереопределяемый.ОпределитьПодключаемыеНаправленияСдачиОтчетности
Процедура ОпределитьПодключаемыеНаправленияСдачиОтчетности(Организация, Направления) Экспорт
	
	Если СервисЭлектронныхТрудовыхКнижек.ИспользуетсяСервисЭлектронныхТрудовыхКнижек() Тогда
		СервисЭлектронныхТрудовыхКнижек.ОпределитьПодключаемыеНаправленияСдачиОтчетности(Направления);
		Возврат;
	КонецЕсли;
	
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, 
		"НекредитнаяФинансоваяОрганизация, ЮридическоеФизическоеЛицо");
	
	РеквизитыОрганизации.Вставить("ИПИспользуетТрудНаемныхРаботников",
		УчетЗарплаты.ИПИспользуетТрудНаемныхРаботников(Организация));
	
	Для каждого Направление ИЗ Направления Цикл
		Если Направление.Орган = Перечисления.ТипыКонтролирующихОрганов.ФНС Тогда
			УстановитьСвойстваНаправленияФНС(Направление);
		ИначеЕсли Направление.Орган = Перечисления.ТипыКонтролирующихОрганов.ФСС Тогда
			УстановитьСвойстваНаправленияФСС(РеквизитыОрганизации, Направление);
		ИначеЕсли Направление.Орган = Перечисления.ТипыКонтролирующихОрганов.ПФР Тогда
			УстановитьСвойстваНаправленияПФР(РеквизитыОрганизации, Направление);
		ИначеЕсли Направление.Орган = Перечисления.ТипыКонтролирующихОрганов.ФСРАР Тогда
			УстановитьСвойстваНаправленияРосалкогольрегулирования(Направление);
		ИначеЕсли Направление.Орган = Перечисления.ТипыКонтролирующихОрганов.БанкРоссии Тогда
			УстановитьСвойстваНаправленияБанкаРоссии(Направление);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьСвойстваНаправленияФНС(Направление)
	
	Направление.Подключить = Истина;
	
КонецПроцедуры

Процедура УстановитьСвойстваНаправленияФСС(РеквизитыОрганизации, Направление)
	
	ОтправлятьОтчетностьФСС = РеквизитыОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо
		ИЛИ (РеквизитыОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо
			И РеквизитыОрганизации.ИПИспользуетТрудНаемныхРаботников);
	
	Направление.Подключить = ОтправлятьОтчетностьФСС;
	Направление.Доступен = Истина;
	
КонецПроцедуры

Процедура УстановитьСвойстваНаправленияПФР(РеквизитыОрганизации, Направление)
	
	ОтправлятьОтчетностьПФР =
		РеквизитыОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо
		ИЛИ (РеквизитыОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо
			И РеквизитыОрганизации.ИПИспользуетТрудНаемныхРаботников);
	
	Направление.Подключить = ОтправлятьОтчетностьПФР;
	Направление.Доступен = Истина;
	
КонецПроцедуры

Процедура УстановитьСвойстваНаправленияРосалкогольрегулирования(Направление)
	
	ВедетсяУчетАлкоголя = ПолучитьФункциональнуюОпцию("ВедетсяУчетРозничнойПродажиАлкогольнойПродукцииПива");
	Если ВедетсяУчетАлкоголя Тогда
		Запрос = Новый Запрос();
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СведенияОбАлкогольнойПродукции.Номенклатура КАК Номенклатура
		|ИЗ
		|	РегистрСведений.СведенияОбАлкогольнойПродукции КАК СведенияОбАлкогольнойПродукции";
		ВедетсяУчетАлкоголя = НЕ Запрос.Выполнить().Пустой();
	КонецЕсли;
	
	Направление.Доступен   = Истина;
	Направление.Подключить = ВедетсяУчетАлкоголя;
	
КонецПроцедуры

Процедура УстановитьСвойстваНаправленияБанкаРоссии(Направление)
	
	Направление.Доступен = Метаданные.Подсистемы.РегламентированнаяОтчетность.Подсистемы.ЭлектронныйДокументооборотСКонтролирующимиОрганами.Подсистемы.Найти(
		"СдачаОтчетностиВБанкРоссии") <> Неопределено;
	
	Если Направление.Доступен Тогда
		Направление.Подключить = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПриоритетСообщенийОтчетности(ТипСообщений)
	
	Если ТипСообщений = "ОтклоненныйОтчет" Тогда
		Возврат 1;
	ИначеЕсли ТипСообщений = "Требование" Тогда
		Возврат 2;
	ИначеЕсли ТипСообщений = "ВходящееПисьмо" Тогда
		Возврат 3;
	ИначеЕсли ТипСообщений = "ОтветНаЗапрос" Тогда
		Возврат 4;
	ИначеЕсли ТипСообщений = "СданныйОтчет" Тогда
		Возврат 5;
	Иначе
		// Не знаем, как обрабатывать такой тип сообщений
		Возврат 0;
	КонецЕсли;
	
КонецФункции

#КонецОбласти
