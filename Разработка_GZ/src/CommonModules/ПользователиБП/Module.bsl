
#Область ПрограммныйИнтерфейс

// Создает новый пароль, соответствующий заданным правилам проверки сложности.
// Для облегчения запоминания, пароль формируется из слогов (согласная-гласная).
//
// Параметры:
//  НаименьшаяДлина - Число - наименьшая длина пароля.
//
//  Сложный - Булево - учитывать требования сложности пароля.
//
//  УчестьНастройки - Строка - "НеУчитыватьНастройки" - не учитывать настройки администратора,
//                                            "ДляПользователей" - учесть настройки для пользователей,
//                                            "ДляВнешнихПользователей" - учесть настройки для внешних пользователей.
//                                            Если настройки администратора учитываются, тогда указанные параметры
//                                            длины и сложности пароля будут увеличены до значений, указанных в настройках.
//
// Возвращаемое значение:
//  Строка - новый пароль.
//
Функция СоздатьПароль(НаименьшаяДлина = 7, Сложный = Ложь, УчестьНастройки = "ДляПользователей") Экспорт
	
	Если УчестьНастройки = "ДляПользователей" Тогда
		НастройкиВхода = ПользователиСлужебныйПовтИсп.Настройки().Пользователи;
	ИначеЕсли УчестьНастройки = "ДляВнешнихПользователей" Тогда
		НастройкиВхода = ПользователиСлужебныйПовтИсп.Настройки().ВнешниеПользователи;
	Иначе
		НастройкиВхода = Неопределено;
	КонецЕсли;
	
	Если НастройкиВхода <> Неопределено Тогда
		ДлинаПароляИзНастроек = НастройкиВхода.МинимальнаяДлинаПароля
	Иначе
		ДлинаПароляИзНастроек = 0;
	КонецЕсли;
	
	МинимальнаяДлинаПароля = Макс(НаименьшаяДлина,
		ДлинаПароляИзНастроек,
		ПолучитьМинимальнуюДлинуПаролейПользователей());
	
	ПараметрыПароля = ПользователиСлужебный.ПараметрыПароля(МинимальнаяДлинаПароля, Сложный);
	
	НовыйПароль = ПользователиСлужебный.СоздатьПароль(ПараметрыПароля);
	
	Возврат НовыйПароль;
	
КонецФункции

#Область БизнесСтатистика

// См. ЦентрМониторингаПереопределяемый.ПриСбореПоказателейСтатистикиКонфигурации.
Процедура ПриСбореПоказателейСтатистикиКонфигурации() Экспорт
	
	ПоказателиСтатистики = ПоказателиСтатистикиПоПользователям();
	
	ЦентрМониторинга.ЗаписатьОперациюБизнесСтатистики(
		"СтатистикаБП.Пользователи.РолиПользователей",
		1,
		ОбщегоНазначенияБП.ЗначениеВСтрокуJSON(ПоказателиСтатистики, Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет)));
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область БизнесСтатистика

Функция ПоказателиСтатистикиПоПользователям()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоОтбора", НачалоГода(ТекущаяДатаСеанса()));
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Пользователь,
	|	Пользователи.ИдентификаторПользователяИБ КАК ИдентификаторПользователяИБ
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	НЕ Пользователи.Служебный
	|	И НЕ Пользователи.Недействителен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЖурналОпераций.Ответственный КАК Пользователь,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЖурналОпераций.Ссылка) КАК Количество
	|ИЗ
	|	ЖурналДокументов.ЖурналОпераций КАК ЖурналОпераций
	|ГДЕ
	|	ЖурналОпераций.Дата >= &НачалоОтбора
	|
	|СГРУППИРОВАТЬ ПО
	|	ЖурналОпераций.Ответственный";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаПользователи = РезультатыЗапроса[0].Выбрать();
	ТаблицаДокументов = РезультатыЗапроса[1].Выгрузить();
	
	ПоказателиСтатистики = Новый Структура;
	ПоказателиСтатистики.Вставить("ДатаСобытия", НачалоЧаса(ТекущаяДатаСеанса()));
	ПоказателиСтатистики.Вставить("Пользователи", Новый Массив);
	
	Пока ВыборкаПользователи.Следующий() Цикл
		
		СтатистикаПользователя = Новый Структура;
		СтатистикаПользователя.Вставить("Пользователь", ВыборкаПользователи.ИдентификаторПользователяИБ);
		
		ДокументыПользователя = ТаблицаДокументов.Найти(ВыборкаПользователи.Пользователь, "Пользователь");
		Если ДокументыПользователя <> Неопределено Тогда
			КоличествоДокументов = ДокументыПользователя.Количество;
		Иначе
			КоличествоДокументов = 0;
		КонецЕсли;
		
		СтатистикаПользователя.Вставить("КоличествоДокументовСНачалаГода", КоличествоДокументов);
		
		ПоказателиСтатистики.Пользователи.Добавить(СтатистикаПользователя);
		
	КонецЦикла;
	
	Возврат ПоказателиСтатистики;
	
КонецФункции

#КонецОбласти

#КонецОбласти
