////////////////////////////////////////////////////////////////////////////////
// Модуль содержит клиентские методы сервиса электронных трудовых книжек
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Процедура выполняет назначаемую команду формы "РегламентированнаяОтчетность".
//
// Параметры:
//   Форма   - Форма - форма, из которой вызвана команда.
//   Команда - КомандаФормы - назначенная команда формы.
//
// Пример:
//   Если Команда.Имя = "ОтчетыПоказатьДополнительнуюИнформацию" Тогда
//   	ПоказатьПредупреждение(, "Заполните обработчик команды """ + Команда.Имя + """");
//   КонецЕсли;
//
Процедура ФормаРегламентированнойОтчетности_ВыполнитьНазначаемуюКомандуНаКлиенте(Форма, Команда) Экспорт
	
	Если Команда.Имя = "ОткрытьФормуМастераЗаявленияНаПодключение" Тогда
	
		ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьФормуМастераЗаявленияНаПодключение(
			Форма.Организация, Форма, , , , , Истина);
	
	КонецЕсли;
	
КонецПроцедуры

// Дополняет функционал обработчика "ОбработкаОповещения" общей формы "Регламентированная отчетность",
// здесь можно добавить новую функциональность к существующей обработке оповещения.
//
// Параметры:
//  ИмяСобытия - Строка - Имя события может быть использовано для идентификации сообщений принимающими их формами.
//  Параметр   - Параметр сообщения. Могут быть переданы любые необходимые данные.
//  Источник   - Источник события. Например, в качестве источника может быть указана другая форма.
//  Форма      - ФормаКлиентскогоПриложения - Общая форма "Регламентированная отчетность".
//
// Пример:
//  Если ИмяСобытия = "Получены новые сообщения 1С-Отчетности" И Источник <> Форма Тогда
//      Оповестить("Закрыть форму новых сообщений 1С-Отчетности",, Форма);
//  КонецЕсли;
//
Процедура ФормаРегламентированнойОтчетности_ОбработкаОповещения(ИмяСобытия, Параметр, Источник, Форма) Экспорт
	
	Если ИмяСобытия = "ИзменениеНастроекЭДООрганизации" ИЛИ ИмяСобытия = "ОбновитьУчетнуюЗапись" Тогда
	
		Элементы = Форма.Элементы;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ГруппаФормы",
			"Видимость",
			НЕ Форма.ЭлектронныйДокументооборотДоступен);
			
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
