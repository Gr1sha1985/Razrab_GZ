////////////////////////////////////////////////////////////////////////////////
//
//   Базовая реализация подсистемы персонифицированного учета.
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Процедура СоздатьВТЗаписиСтажаПоДаннымУчета(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод, ОкончаниеОтчетногоПериода, ПараметрыПолученияДанных, ПараметрыОтбора) Экспорт
	ПараметрыОтбораСтажа = УчетСтажаПФР.ПараметрыОтбораСоздатьВТДанныеУчетаСтажаПФР();
	ПараметрыОтбораСтажа.Организация = Организация;
	ПараметрыОтбораСтажа.НачалоПериода = ОтчетныйПериод;
	ПараметрыОтбораСтажа.ОкончаниеПериода = ОкончаниеОтчетногоПериода;
	
	Если ПараметрыОтбора.СписокФизическихЛиц <> Неопределено Тогда	
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("СписокФизическихЛиц", ПараметрыОтбора.СписокФизическихЛиц);
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадры.ГоловнаяОрганизация(Организация));
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	&ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ФизическиеЛица.Ссылка КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТФильтрДляФормированияСтажа
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.Ссылка В(&СписокФизическихЛиц)";
		
		Запрос.Выполнить();
		
		ПараметрыОтбораСтажа.ИмяВТОтбор = "ВТФильтрДляФормированияСтажа";
		ПараметрыОтбораСтажа.ИзмеренияОтбора.Добавить("ФизическоеЛицо");
		ПараметрыОтбораСтажа.ИзмеренияОтбора.Добавить("ГоловнаяОрганизация");
		
	КонецЕсли;	
		
	УчетСтажаПФР.СоздатьВТДанныеУчетаСтажаПФР(МенеджерВременныхТаблиц, ПараметрыОтбораСтажа, "ВТЗаписиСтажаПоДаннымУчета");
КонецПроцедуры	

Процедура СоздатьВТЗарегистрированныеКорректировкиСтажа(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод) Экспорт
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК КорректируемыйПериод
	|ПОМЕСТИТЬ ВТЗарегистрированныеКорректировкиСтажа
	|ГДЕ
	|	ЛОЖЬ";
	
	Запрос.Выполнить();
КонецПроцедуры	

Функция КвартальнаяОтчетностьПерераспределятьВзносыАвтоматически() Экспорт 
	Возврат Истина;	
КонецФункции

Процедура КвартальнаяОтчетностьПФРДополнитьКомандыФормы(Форма) Экспорт
	
КонецПроцедуры

Процедура КвартальнаяОтчетностьПФРОбновитьДанныеФормы(Форма) Экспорт
	
КонецПроцедуры

Функция ПараметрыДляСоздатьВТСотрудникиОрганизации(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод, СписокФизическихЛиц) Экспорт
	
	ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудников.Организация = Организация;
	ПараметрыПолученияСотрудников.НачалоПериода = НачалоМесяца(ОтчетныйПериод);
	ПараметрыПолученияСотрудников.ОкончаниеПериода = КонецМесяца(ОтчетныйПериод);
	ПараметрыПолученияСотрудников.КадровыеДанные = "ГоловнаяОрганизация, ЯвляетсяПрокурором, ЯвляетсяВоеннослужащим, РаботаетВСтуденческомОтряде, ВидЗастрахованногоЛица, СтраховойНомерПФР";
	
	Если СписокФизическихЛиц <> Неопределено Тогда
		ПараметрыПолученияСотрудников.СписокФизическихЛиц = СписокФизическихЛиц;
	КонецЕсли;
	
	Если ПараметрыПолученияСотрудников.Свойство("РаботникиПоДоговорамГПХ") Тогда
		ПараметрыПолученияСотрудников.РаботникиПоДоговорамГПХ = Истина;
	КонецЕсли;
	
	Возврат ПараметрыПолученияСотрудников;
	
КонецФункции

Процедура СоздатьВТДосрочноеНазначениеПенсииДляСЗВ_СТАЖ(МенеджерВременныхТаблиц, Организация, Год, ЗаписиОСтаже) Экспорт
	
	ФизическиеЛица = Новый Массив;
	
	ОснованияВыслугиЛетСотрудников = Новый ТаблицаЗначений;
	ОснованияВыслугиЛетСотрудников.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ОснованияВыслугиЛетСотрудников.Колонки.Добавить("ОсобыеУсловияТруда", Новый ОписаниеТипов("СправочникСсылка.ОсобыеУсловияТрудаПФР,СправочникСсылка.ОсобыеУсловияТрудаДляСЗВКПФР"));
	ОснованияВыслугиЛетСотрудников.Колонки.Добавить("ОснованиеВыслугиЛет", Новый ОписаниеТипов("СправочникСсылка.ОснованияДосрочногоНазначенияПенсии"));
	ОснованияВыслугиЛетСотрудников.Колонки.Добавить("КодПозицииСписка", Новый ОписаниеТипов("СправочникСсылка.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения"));
	
	Для Каждого СтрокаСотрудника Из ЗаписиОСтаже Цикл 
		Если Не ЗначениеЗаполнено(СтрокаСотрудника.ОсобыеУсловияТруда) 
			И Не ЗначениеЗаполнено(СтрокаСотрудника.ОснованиеВыслугиЛет) Тогда 
			Продолжить;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ОснованияВыслугиЛетСотрудников.Добавить(), СтрокаСотрудника);
		ФизическиеЛица.Добавить(СтрокаСотрудника.Сотрудник);
	КонецЦикла;
	
	ОснованияВыслугиЛетСотрудников.Свернуть("Сотрудник,ОсобыеУсловияТруда,ОснованиеВыслугиЛет,КодПозицииСписка");
	
	ОтчетныйПериод = Дата(Год, 1, 1);
	
	ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	
	ПараметрыПолученияСотрудников.Организация = Организация;
	ПараметрыПолученияСотрудников.НачалоПериода = ОтчетныйПериод; 
	ПараметрыПолученияСотрудников.ОкончаниеПериода = КонецГода(ОтчетныйПериод); 
	ПараметрыПолученияСотрудников.КадровыеДанные = "ФизическоеЛицо, Подразделение, Должность";
	
	Если ПараметрыПолученияСотрудников.Свойство("РаботникиПоДоговорамГПХ") Тогда
		ПараметрыПолученияСотрудников.РаботникиПоДоговорамГПХ = Истина;
	КонецЕсли;	
	
	ПараметрыПолученияСотрудников.СписокФизическихЛиц = ФизическиеЛица;
	
	УстановитьПривилегированныйРежим(Истина);
	КадровыйУчет.СоздатьВТСотрудникиОрганизации(МенеджерВременныхТаблиц, Ложь, ПараметрыПолученияСотрудников);
	УстановитьПривилегированныйРежим(Ложь);
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ОснованияВыслугиЛетСотрудников", ОснованияВыслугиЛетСотрудников);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОснованияВыслугиЛетСотрудников.Сотрудник КАК ФизическоеЛицо,
	               |	ОснованияВыслугиЛетСотрудников.ОсобыеУсловияТруда КАК ОсобыеУсловияТруда,
	               |	ОснованияВыслугиЛетСотрудников.ОснованиеВыслугиЛет КАК ОснованиеДосрочногоНазначенияПенсии,
	               |	ОснованияВыслугиЛетСотрудников.КодПозицииСписка КАК КодПозицииСписка
	               |ПОМЕСТИТЬ ВТОснованияВыслугиЛет
	               |ИЗ
	               |	&ОснованияВыслугиЛетСотрудников КАК ОснованияВыслугиЛетСотрудников
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СотрудникиОрганизации.Подразделение КАК Подразделение,
	               |	СотрудникиОрганизации.Должность КАК Должность,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СотрудникиОрганизации.ФизическоеЛицо) КАК КоличествоРаботающих,
	               |	ОснованияВыслугиЛет.ОсобыеУсловияТруда КАК ОсобыеУсловияТруда,
	               |	ОснованияВыслугиЛет.ОснованиеДосрочногоНазначенияПенсии КАК ОснованиеДосрочногоНазначенияПенсии,
	               |	ОснованияВыслугиЛет.КодПозицииСписка КАК КодПозицииСписка,
	               |	"""" КАК ХарактерВыполняемыхРабот,
	               |	"""" КАК ПервичныеДокументы
	               |ПОМЕСТИТЬ ВТДосрочноеНазначениеПенсии
	               |ИЗ
	               |	ВТСотрудникиОрганизации КАК СотрудникиОрганизации
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОснованияВыслугиЛет КАК ОснованияВыслугиЛет
	               |		ПО СотрудникиОрганизации.ФизическоеЛицо = ОснованияВыслугиЛет.ФизическоеЛицо
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СотрудникиОрганизации.Подразделение,
	               |	СотрудникиОрганизации.Должность,
	               |	ОснованияВыслугиЛет.ОсобыеУсловияТруда,
	               |	ОснованияВыслугиЛет.ОснованиеДосрочногоНазначенияПенсии,
	               |	ОснованияВыслугиЛет.КодПозицииСписка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СотрудникиОрганизации.ФизическоеЛицо) КАК ВсегоРаботающихДНП,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СотрудникиОрганизации.ФизическоеЛицо) КАК ВсегоРабочихМестДНП
	               |ПОМЕСТИТЬ ВТИтоговыеСведения
	               |ИЗ
	               |	ВТСотрудникиОрганизации КАК СотрудникиОрганизации";
				   
	Запрос.Выполнить();			   
	
КонецПроцедуры

Процедура СоздатьВТЗамещениеГосударственныхДолжностей(МенеджерВременныхТаблиц) Экспорт 
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 0
	               |	ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка) КАК Должность,
	               |	ЗНАЧЕНИЕ(Справочник.ЗамещениеГосударственныхМуниципальныхДолжностейПФР.ПустаяСсылка) КАК ЗамещениеГосударственныхМуниципальныхДолжностей
	               |ПОМЕСТИТЬ ВТЗамещениеГосударственныхДолжностей";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СоздатьВТКадровыеДанныеФизическихЛицДоНачалаЭксплуатации(МенеджерВременныхТаблиц, Организация = Неопределено, ОтчетныйПериод = Неопределено, ОкончаниеОтчетногоПериода = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
		|	ВЫРАЗИТЬ("""" КАК СТРОКА) КАК Фамилия,
		|	ВЫРАЗИТЬ("""" КАК СТРОКА) КАК Имя,
		|	ВЫРАЗИТЬ("""" КАК СТРОКА) КАК Отчество,
		|	ВЫРАЗИТЬ("""" КАК СТРОКА) КАК СтраховойНомерПФР
		|ПОМЕСТИТЬ ВТКадровыеДанныеФизическихЛиц";
		
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаполнитьДанныеРуководителя(Объект) Экспорт
	
	Сведения = Новый СписокЗначений;
	Сведения.Добавить("", "РукСсылка");
	Сведения.Добавить("", "ДолжнРукСсылка");
	
	ОргСведения = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Объект.Организация, Объект.Дата, Сведения);
	ОргСведения.Свойство("РукСсылка", Объект.Руководитель);
	ОргСведения.Свойство("ДолжнРукСсылка", Объект.ДолжностьРуководителя);
	
КонецПроцедуры

Процедура ЗаполнитьРазрядыКатегорииДокументовТрудовыхКнижек(ПараметрыОбновления) Экспорт
	
	ОбработкаЗавершена = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Мероприятия КАК СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия
		|ГДЕ
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.РазрядКатегория <> СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.УдалитьРазрядКатегория";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() > 0 Тогда
	
		ОбработкаЗавершена = Ложь;
		Пока Выборка.Следующий() Цикл
			
			Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД", "Ссылка", Выборка.Ссылка) Тогда
				Продолжить;
			КонецЕсли;
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Для Каждого СтрокаМероприятия Из ДокументОбъект.Мероприятия Цикл 
				СтрокаМероприятия.РазрядКатегория = СтрокаМероприятия.УдалитьРазрядКатегория;
			КонецЦикла;
			
			ДокументОбъект.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", ОбработкаЗавершена);
	
КонецПроцедуры

#КонецОбласти
