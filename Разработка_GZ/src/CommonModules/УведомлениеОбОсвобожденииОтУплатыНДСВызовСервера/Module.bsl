#Область ПрограммныйИнтерфейс

// Процедура заполняет переданную в виде контейнера структуру данных отчета.
//
// Параметры:
//   ПараметрыОтчета - Структура - параметры уведомления.
//   Контейнер - Структура - данные уведомления.
//
Процедура ЗаполнитьУведомление(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	Если ПараметрыОтчета.ДатаНачало = Неопределено
		Или ПараметрыОтчета.ДатаНачало = '00010101' Тогда
		Дата = НачалоМесяца(ТекущаяДатаСеанса()) - 1;
	Иначе 
		Дата = ПараметрыОтчета.ДатаНачало - 1;
	КонецЕсли;
	
	ДанныеОВыручке = ДанныеПоВыручкеИДляВыписок(Организация, Дата);
	
	ЭтоЮрЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ЮридическоеФизическоеЛицо")
	= Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	
	ДанныеШапки = ПолучитьДанныеШапки(Организация, Дата, ЭтоЮрЛицо);
	
	#Область ТитульныйЛист
	
	Выручка = Новый Структура;
	Выручка.Вставить("ДатаНачало", Дата + 1);
	Выручка.Вставить("ВыручкаОтРеализации", 0);
	Выручка.Вставить("ВыручкаОтРеализацииПомесячно");
	Выручка.Вставить("Листов1", 0);
	Выручка.Вставить("Листов2", 0);
	Выручка.Вставить("Листов3", 0);
	Выручка.Вставить("Листов4", 0);
	Выручка.Вставить("Листов5", 0);
	Выручка.Вставить("НаименованиеНО", ДанныеШапки.НаименованиеИнспекции);
	Выручка.Вставить("НПЛ", ДанныеШапки.Организация);
	Выручка.Вставить("ИННКПП", ДанныеШапки.ИННКПП);
	Выручка.Вставить("НаименованиеНПЛ", ДанныеШапки.Организация);
	Выручка.Вставить("АддрТел1", ДанныеШапки.АддрТел1);
	Выручка.Вставить("АддрТел2", ДанныеШапки.АддрТел2);
	Выручка.Вставить("ФИОРуководителя", ДанныеШапки.ФИОРуководителя);
	Выручка.Вставить("ФИОГлавногоБухгалтера", ДанныеШапки.ФИОГлавногоБухгалтера);
	
	ВыручкаОтРеализации = 0;
	ВыручкаОтРеализацииПомесячно = "";
	ВсегоЛистов = 0;
	// Выручка в уведомление представляется в тыс. рублей
	Разрядность = 1000;
	
	Если ДанныеОВыручке.ВыручкаПоУСН.Количество() > 0 Тогда
		
		ВыручкаПомесячноДляУведомления(ДанныеОВыручке.ВыручкаПоУСН, ВыручкаОтРеализации,
			ВыручкаОтРеализацииПомесячно, Разрядность);
		Выручка.Листов5 = 1;
		ВсегоЛистов = ВсегоЛистов + 1;
		
	КонецЕсли;
	
	Если ДанныеОВыручке.ВыручкаПоОСН.Количество() > 0 Тогда
		
		ВыручкаПомесячноДляУведомления(ДанныеОВыручке.ВыручкаПоОСН, ВыручкаОтРеализации,
			ВыручкаОтРеализацииПомесячно, Разрядность);
		Если ЭтоЮрЛицо Тогда
			Выручка.Листов2 = 1;
		Иначе
			Выручка.Листов4 = 1;
		КонецЕсли;
		Выручка.Листов3 = 1;
		ВсегоЛистов = ВсегоЛистов + 2;
		
	КонецЕсли;
	
	Выручка.ВыручкаОтРеализации = ВыручкаОтРеализации / Разрядность;
	Выручка.ВыручкаОтРеализацииПомесячно = ВыручкаОтРеализацииПомесячно;
	Выручка.Листов1 = ВсегоЛистов;
	
	Контейнер.Вставить("Титульная", Выручка);
	
	#КонецОбласти
	
	#Область ВыпискаИзКнигиПродаж
	
	Лист2 = Новый Структура;
	Лист2.Вставить("Организация1", ДанныеШапки.Организация);
	Лист2.Вставить("Адрес1", ДанныеШапки.Адрес);
	Лист2.Вставить("ИННКПП1", ДанныеШапки.ИННКПП);
	Лист2.Вставить("НаименованиеИнспекции1", ДанныеШапки.НаименованиеИнспекции);
	ВыпискаПоКнигеПродаж = ДанныеОВыручке.ВыпискаПоКнигеПродаж;
	Если ВыпискаПоКнигеПродаж.Количество() > 0 Тогда
		ПараметрыДляОписанияКнигиПродаж = ДанныеОВыручке.ПараметрыДляОписанияКнигиПродаж;
		СтрокаОписание = СтрШаблон(НСтр("ru=' %1 сообщает, что за предшествующие %2 (%3) '"),
		ДанныеШапки.Организация, ПараметрыДляОписанияКнигиПродаж.КоличествоМесяцев, ПараметрыДляОписанияКнигиПродаж.Период)
		+ СтрШаблон(НСтр("ru='выручка от реализации товаров (работ, услуг) составила %1 руб. (Без НДС)'"),
		ПараметрыДляОписанияКнигиПродаж.СуммаВыручки);
		
		Лист2.Вставить("Описание1", СтрокаОписание);
		Инд = 1;
		Для Каждого Стр Из ВыпискаПоКнигеПродаж Цикл
			Постфикс0 = ?(Инд < 10, "0", "");
			Лист2.Вставить("КнигаПродаж02" + Постфикс0 + Инд, Инд);
			Лист2.Вставить("КнигаПродаж03" + Постфикс0 + Инд, Формат(Стр.Период,"ДФ=""ММММ гггг 'г.'"""));
			Лист2.Вставить("КнигаПродаж04" + Постфикс0 + Инд, Стр.ВсегоПродаж);
			Лист2.Вставить("КнигаПродаж05" + Постфикс0 + Инд, Стр.СуммаБезНДС20);
			Лист2.Вставить("КнигаПродаж06" + Постфикс0 + Инд, Стр.СуммаБезНДС18);
			Лист2.Вставить("КнигаПродаж07" + Постфикс0 + Инд, Стр.СуммаБезНДС10);
			Лист2.Вставить("КнигаПродаж08" + Постфикс0 + Инд, Стр.НДС0);
			Лист2.Вставить("КнигаПродаж09" + Постфикс0 + Инд, Стр.НДС20);
			Лист2.Вставить("КнигаПродаж10" + Постфикс0 + Инд, Стр.НДС18);
			Лист2.Вставить("КнигаПродаж11" + Постфикс0 + Инд, Стр.НДС10);
			Лист2.Вставить("КнигаПродаж12" + Постфикс0 + Инд, Стр.СуммаСовсемБезНДС); 
			Инд = Инд + 1;
		КонецЦикла;
	КонецЕсли;
	
	Лист2.Вставить("ФИОРуководителя1", ДанныеШапки.ФИОРуководителя);
	Лист2.Вставить("ФИОГлавногоБухгалтера1", ДанныеШапки.ФИОГлавногоБухгалтера);
	
	Контейнер.Вставить("Лист2", Лист2);
	
	#КонецОбласти
	
	#Область ВыпискаИзБухБаланса
	
	Если ЭтоЮрЛицо И ДанныеОВыручке.ВыручкаПоОСН.Количество() > 0 Тогда
		Лист3 = ЗаполнитьЛист(ДанныеШапки, ДанныеОВыручке.ПараметрыДляОписанияВыручкиОСН,
		ДанныеОВыручке.ВыручкаПоОСН);
		Контейнер.Вставить("Лист3", Лист3);
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ВыпискаИзКнигиДоходовРасходовИП
	
	Если НЕ ЭтоЮрЛицо И ДанныеОВыручке.ВыручкаПоОСН.Количество() > 0 Тогда
		Лист4 = ЗаполнитьЛист(ДанныеШапки, ДанныеОВыручке.ПараметрыДляОписанияВыручкиОСН,
		ДанныеОВыручке.ВыручкаПоОСН);
		Контейнер.Вставить("Лист4", Лист4);
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ВыпискаИзКнигиДоходовРасходовУСН
	
	Если ДанныеОВыручке.ВыручкаПоУСН.Количество() > 0 Тогда
		Лист5 = ЗаполнитьЛист(ДанныеШапки, ДанныеОВыручке.ПараметрыДляОписанияВыручкиУСН,
		ДанныеОВыручке.ВыручкаПоУСН);
		Контейнер.Вставить("Лист5", Лист5);
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры

// В функции проверяется, установлено ли в программе освобождение от уплаты НДС
// Параметры:
//   Организация - СправочникСсылка.Организации - организация для которой будут проверяться настройки учета НДС
//   Дата - Дата - дата на которую будут проверяться настройки
//
// Возвращаемое значение:
//   ДатаОсвобождения - Дата
// В случае, если для организации не установлен признак Освобождения от уплаты НДС будет возвращаться пустая дата.
//
Функция ДатаОсвобожденияОтУплатыНДС(Организация, Дата) Экспорт
	
	ДатаОсвобождения = '00010101';
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиУчетаНДССрезПоследних.Организация КАК Организация,
	|	НастройкиУчетаНДССрезПоследних.Период КАК Период,
	|	НастройкиУчетаНДССрезПоследних.ПрименяетсяОсвобождениеОтУплатыНДС КАК ПрименяетсяОсвобождениеОтУплатыНДС
	|ПОМЕСТИТЬ ПоследнийПериодБезОсвобождения
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНДС.СрезПоследних(
	|			&Дата,
	|			Организация = &Организация
	|				И ПрименяетсяОсвобождениеОтУплатыНДС = ЛОЖЬ) КАК НастройкиУчетаНДССрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	НастройкиУчетаНДС.Период КАК Период,
	|	НастройкиУчетаНДС.ПрименяетсяОсвобождениеОтУплатыНДС КАК ПрименяетсяОсвобождениеОтУплатыНДС
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНДС КАК НастройкиУчетаНДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследнийПериодБезОсвобождения КАК ПоследнийПериодБезОсвобождения
	|		ПО НастройкиУчетаНДС.Организация = ПоследнийПериодБезОсвобождения.Организация
	|			И НастройкиУчетаНДС.Период > ПоследнийПериодБезОсвобождения.Период
	|ГДЕ
	|	НастройкиУчетаНДС.ПрименяетсяОсвобождениеОтУплатыНДС = ИСТИНА
	|	И НастройкиУчетаНДС.Период <= &Дата
	|	И НастройкиУчетаНДС.Организация = &Организация";
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата", Дата);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		ДатаОсвобождения = Результат.Период;
	КонецЕсли;
	
	Возврат ДатаОсвобождения;
	
КонецФункции

// Функция возвращает список листов, которые отображаются в дереве
// в форме уведомления об освобождении от уплаты НДС.
// В форме уведомления всегда будут отображаться само уведомление и
// выписка из книги продаж.
// Состав выписок по выручке может отличаться.
// Если это первая подача уведомления и за 3 предыдущих месяца был переход с УСН на ОСН
// Тогда будет выводиться выписка из книги доходов и расходов УСН.
// Если организация на ОСН, тогда будет либо выписка из книги доходов и расходов ИП
// Или выписка из бухгалтерского баланса.
//
// Параметры:
//   Организация - СправочникССылка.Организации - Организация,
//      для которой будет сформирован список листов для отображения
//   Дата - Дата - Дата, на которую подается уведомление.
//
// Возвращаемое значение:
//   СписокЛистов - СписокЗначений - список листов, который будет отображаться в уведомлении.
//
Функция ПодготовитьСписокЛистов(Организация, Дата) Экспорт
	
	Дата = Дата - 1;
	
	СписокЛистов = Новый СписокЗначений;
	СписокЛистов.Добавить(2, "Выписка из книги продаж");
	
	ЭтоЮрЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ЮридическоеФизическоеЛицо")
	= Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	
	ПериодыВыписок = ПериодыФормированияВыписок(Организация, Дата);
	ПустаяДата = '00010101';
	
	Если ПериодыВыписок.УСНДатаС > ПустаяДата Тогда
		СписокЛистов.Добавить(5, "Выписка из книги доходов и расходов УСН");
	КонецЕсли;
	
	Если ПериодыВыписок.ОСНДатаС > ПустаяДата Тогда
		Если ЭтоЮрЛицо Тогда
			СписокЛистов.Добавить(3, "Выписка из бухгалтерского баланса");
		Иначе
			СписокЛистов.Добавить(4, "Выписка из книги доходов и расходов ИП");
		КонецЕсли;
	КонецЕсли;
	
	Возврат СписокЛистов;
	
КонецФункции

// Функция возвращает структуру параметров для отображения баннера
// Баннер будет показан в форме уведомления об освобождении от уплаты НДС
// и служит напоминанием, о том, что необходимо для применения освобождения в программе изменить настройки учета НДС
// Путь к форме настроек разный, в простом и полном интерфейсе.
//
// Параметры:
//   Организация - СправочникСсылка.Организации - организация, для которой определяются параметры отображения баннера
//
// Возвращаемое значение:
//   Параметры - Структура - содержит:
//    * ТекстЗаголовок   - ФорматированнаяСтрока - Текст баннера
//    * КартинкаКотик    - Картинка - картинка с котиком
//    * КартинкаЗакрытие - Картинка - картинка для закрытия баннера 
//    * ЦветФонаБаннера  - Цвет - зеленый цвет фона баннера
//
Функция ПараметрыБаннера(Организация) Экспорт
	
	ПростойИнтерфейс = ПолучитьФункциональнуюОпцию("ИнтерфейсТаксиПростой");
	
	Параметры = Новый Структура;
	Параметры.Вставить("ТекстЗаголовок");
	Параметры.Вставить("КартинкаКотик");
	Параметры.Вставить("КартинкаЗакрытие");
	Параметры.Вставить("ЦветФонаБаннера");
	
	Массив = Новый Массив;
	Массив.Добавить(Нстр("ru = 'Не забудьте установить флажок ""Организация освобождена от уплаты НДС"" в настройке '"));
	Массив.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Налогов и отчетов'"),
	, , , "ОткрытьНалогиИОтчеты"));
	Если ПростойИнтерфейс Тогда
		Массив.Добавить(Нстр("ru = ' (Настройки - 
				|Настройки налогов и отчетов)'"));
	Иначе
		Массив.Добавить(Нстр("ru = ' (Главное - Налоги и отчеты)'"));
	КонецЕсли;
	Параметры.ТекстЗаголовок = Новый ФорматированнаяСтрока(Массив, ШрифтыСтиля.ШрифтТекстаБаннера);
	Параметры.КартинкаКотик = БиблиотекаКартинок.КотКритичноеСообщениеСервиса;
	Параметры.КартинкаЗакрытие = БиблиотекаКартинок.ОчиститьЗначение;
	Параметры.ЦветФонаБаннера = ЦветаСтиля.ЦветФонаБаннерКонтрагент;
	
	Возврат Параметры;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыручкаПомесячноДляУведомления(ТЧВыручки, ВыручкаОтРеализации, ВыручкаОтРеализацииПомесячно, Разрядность)
	
	ВыручкаОтРеализации = ВыручкаОтРеализации + ТЧВыручки.Итог("Выручка");
	Для Каждого Стр Из ТЧВыручки Цикл 
		ВыручкаЗаМесяц = Стр.Выручка / Разрядность;
		ВыручкаОтРеализацииПомесячно = ВыручкаОтРеализацииПомесячно + Формат(Стр.Период, "ДФ=""МММ гггг 'г. = '""")
		+ Формат(ВыручкаЗаМесяц, "ЧЦ=10; ЧДЦ=2") + "; ";
	КонецЦикла;
	
КонецПроцедуры

Функция ЗаполнитьЛист(ДанныеШапки, ПараметрыДляОписанияВыручки, Выручка)
	
	Лист = Новый Структура;
	Лист.Вставить("Организация", ДанныеШапки.Организация);
	Лист.Вставить("Адрес", ДанныеШапки.Адрес);
	Лист.Вставить("ИННКПП", ДанныеШапки.ИННКПП);
	Лист.Вставить("НаименованиеИнспекции", ДанныеШапки.НаименованиеИнспекции);
	СтрокаОписание = СтрШаблон(НСтр("ru=' %1 сообщает, что за предшествующие %2 (%3) '"),
	ДанныеШапки.Организация, ПараметрыДляОписанияВыручки.КоличествоМесяцев, ПараметрыДляОписанияВыручки.Период)
	+ СтрШаблон(НСтр("ru='выручка от реализации товаров (работ, услуг) составила %1 руб. (Без НДС)'"),
	ПараметрыДляОписанияВыручки.СуммаВыручки);
	Лист.Вставить("Описание", СтрокаОписание);
	Инд = 1;
	Для каждого Стр Из Выручка Цикл
		Лист.Вставить("Период" + Инд, Формат(Стр.Период,"ДФ=""ММММ гггг 'г.'"""));
		Лист.Вставить("Выручка" + Инд, Стр.Выручка);
		Инд = Инд + 1;
	КонецЦикла;
	Лист.Вставить("ФИОРуководителя", ДанныеШапки.ФИОРуководителя);
	Лист.Вставить("ФИОГлавногоБухгалтера", ДанныеШапки.ФИОГлавногоБухгалтера);
	
	Возврат Лист;
	
КонецФункции

Функция ПолучитьДанныеШапки(Организация, Дата, ЭтоЮрЛицо)
	
	ДанныеШапки = Новый Структура;
	ДанныеШапки.Вставить("Организация");
	ДанныеШапки.Вставить("Адрес");
	ДанныеШапки.Вставить("ИННКПП");
	ДанныеШапки.Вставить("НаименованиеИнспекции");
	ДанныеШапки.Вставить("ФИОРуководителя");
	ДанныеШапки.Вставить("ФИОГлавногоБухгалтера");
	ДанныеШапки.Вставить("АддрТел1");
	ДанныеШапки.Вставить("АддрТел2"); 
	
	Если ЭтоЮрЛицо Тогда 
		СтрокаСведений = "ИННЮЛ,КППЮЛ,НаимЮЛПол,ТелОрганизации";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация,
		Дата, СтрокаСведений);
		ДанныеШапки.Организация = СведенияОбОрганизации.НаимЮЛПол;
		ДанныеШапки.ИННКПП = СведенияОбОрганизации.ИННЮЛ + "/" + СведенияОбОрганизации.КППЮЛ;
		КонтактнаяИнформация = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация,
		Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации, ТекущаяДатаСеанса(), Ложь);
		Если ТипЗнч(КонтактнаяИнформация) = Тип("ТаблицаЗначений")
			И КонтактнаяИнформация.Количество() = 1
			И КонтактнаяИнформация.Колонки.Найти("Значение") <> Неопределено Тогда
			
			ДанныеШапки.Адрес = КонтактнаяИнформация[0].Представление +", "+ СведенияОбОрганизации.ТелОрганизации;
			ДанныеШапки.АддрТел1 = КонтактнаяИнформация[0].Представление;
			ДанныеШапки.АддрТел2 = СведенияОбОрганизации.ТелОрганизации;
			
		КонецЕсли;
		Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Организация, Дата);
		ДанныеШапки.ФИОРуководителя = Руководители.РуководительПредставление;
		ДанныеШапки.ФИОГлавногоБухгалтера = Руководители.ГлавныйБухгалтерПредставление;
		
	Иначе
		СтрокаСведений = "ИННФЛ,ФИО,ТелДом";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация,
		Дата, СтрокаСведений);
		ДанныеШапки.Организация = СведенияОбОрганизации.ФИО;
		КонтактнаяИнформация = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация,
		Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации, ТекущаяДатаСеанса(), Ложь);
		Если ТипЗнч(КонтактнаяИнформация) = Тип("ТаблицаЗначений")
			И КонтактнаяИнформация.Количество() = 1
			И КонтактнаяИнформация.Колонки.Найти("Значение") <> Неопределено Тогда
			
			ДанныеШапки.Адрес = КонтактнаяИнформация[0].Представление +", "+ СведенияОбОрганизации.ТелДом;
			ДанныеШапки.АддрТел1 = КонтактнаяИнформация[0].Представление;
			ДанныеШапки.АддрТел2 = СведенияОбОрганизации.ТелДом;
			
		КонецЕсли;
		ДанныеШапки.ИННКПП = СведенияОбОрганизации.ИННФЛ;
		Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Организация, Дата);
		ДанныеШапки.ФИОРуководителя = Руководители.РуководительПредставление;
	КонецЕсли;
	
	ДанныеШапки.НаименованиеИнспекции = НаименованиеНалоговогоОргана(Организация);
	
	Возврат ДанныеШапки;
	
КонецФункции

Функция ДатаПереходаНаОСНо(Организация, Дата)
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкиСистемыНалогообложенияСрезПоследних.Период КАК Период,
	|	НастройкиСистемыНалогообложенияСрезПоследних.СистемаНалогообложения КАК СистемаНалогообложения
	|ПОМЕСТИТЬ ДатаУСН
	|ИЗ
	|	РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(
	|			&Дата,
	|			Организация = &Организация
	|				И СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная)) КАК НастройкиСистемыНалогообложенияСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	НастройкиСистемыНалогообложения.Период КАК Период,
	|	НастройкиСистемыНалогообложения.СистемаНалогообложения КАК СистемаНалогообложения
	|ИЗ
	|	РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДатаУСН КАК ДатаУСН
	|		ПО НастройкиСистемыНалогообложения.Период > ДатаУСН.Период
	|ГДЕ
	|	НастройкиСистемыНалогообложения.Организация = &Организация
	|	И НастройкиСистемыНалогообложения.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Общая)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата", Дата);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		Возврат Результат.Период;
	Иначе
		Возврат '00010101';
	КонецЕсли;
	
КонецФункции

Функция ВыручкаОСНЮрЛицо(Организация, НачалоПериода, КонецПериода, КоличествоМесяцевДляВыручки)
	
	Запрос = Новый Запрос();
	
	СтавкиБезНДС = Новый Массив();
	СтавкиБезНДС.Добавить(Перечисления.СтавкиНДС.НДС0);
	Если КоличествоМесяцевДляВыручки = 3 Тогда 
		СтавкиБезНДС.Добавить(Перечисления.СтавкиНДС.БезНДС);
	КонецЕсли;
	
	ПланСчетов = ПланыСчетов.Хозрасчетный;
	
	СубконтоСтавкаНДС = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтавкиНДС;
	СчетНДС = ПланСчетов.Продажи_НДС; // 90.03
	
	ПредопределенныйСчетУчетаВыручки = Новый Массив;
	ПредопределенныйСчетУчетаВыручки .Добавить(ПланСчетов.Выручка);                    // 90.01
	СчетаВыручки = БухгалтерскийУчет.СформироватьМассивСубсчетов(ПредопределенныйСчетУчетаВыручки);
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("НачалоПериода",		НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",		КонецПериода);
	Запрос.УстановитьПараметр("СчетаВыручки", 		СчетаВыручки);
	Запрос.УстановитьПараметр("СчетНДС",			СчетНДС);
	Запрос.УстановитьПараметр("СубконтоСтавкаНДС",	СубконтоСтавкаНДС);
	Запрос.УстановитьПараметр("СтавкиБезНДС",		СтавкиБезНДС);
		
	БылУчетПоЕНВДЗаПериод = УчетнаяПолитика.ПлательщикЕНВДЗаПериод(Организация, НачалоПериода, КонецПериода);
	
	Если БылУчетПоЕНВДЗаПериод Тогда
		СчетаЕНВД = БухгалтерскийУчетПереопределяемый.СчетаВыручкиЕНВД();
		Если СчетаЕНВД = Неопределено Тогда
			Запрос.УстановитьПараметр("СчетаЕНВД", ПланСчетов.ВыручкаЕНВД);
		Иначе
			Запрос.УстановитьПараметр("СчетаЕНВД", СчетаЕНВД);
		КонецЕсли;
				
		СчетВыручкаНеЕНВД = ПланСчетов.ВыручкаНеЕНВД; // 90.01.1
			
		ПредопределенныеИсключаемыеСчетаВыручки = Новый Массив;
		ПредопределенныеИсключаемыеСчетаВыручки.Добавить(СчетВыручкаНеЕНВД);
		
		СчетаВыручки = ОбщегоНазначенияКлиентСервер.РазностьМассивов(СчетаВыручки,
		БухгалтерскийУчет.СформироватьМассивСубсчетов(ПредопределенныеИсключаемыеСчетаВыручки));
		
		Запрос.УстановитьПараметр("СчетВыручкаНеЕНВД", 	СчетВыручкаНеЕНВД);
		Запрос.УстановитьПараметр("ДопСчетаВыручки",	СчетаВыручки);
				
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот,
		|	ХозрасчетныйОборотыДтКт.Период КАК Период
		|ПОМЕСТИТЬ ОсновнаяВыручка
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Месяц,
		|			,
		|			,
		|			СчетКт В (&СчетВыручкаНеЕНВД),
		|			&СубконтоСтавкаНДС,
		|			Организация = &Организация
		|				И НЕ СубконтоКт1 В (&СтавкиБезНДС)) КАК ХозрасчетныйОборотыДтКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиСистемыНалогообложения.Период КАК Период,
		|	НастройкиСистемыНалогообложения.ПлательщикЕНВД КАК ПлательщикЕНВД
		|ПОМЕСТИТЬ ЕстьЕНВД
		|ИЗ
		|	РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения
		|ГДЕ
		|	НастройкиСистемыНалогообложения.Организация = &Организация
		|	И НастройкиСистемыНалогообложения.Период <= &КонецПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот,
		|	ХозрасчетныйОборотыДтКт.Период КАК Период,
		|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт
		|ПОМЕСТИТЬ ДопВыручка
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Месяц, , , СчетКт В (&ДопСчетаВыручки), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДопВыручка.Период КАК Период,
		|	МАКСИМУМ(ЕстьЕНВД.Период) КАК ПериодЕНВД,
		|	МАКСИМУМ(ДопВыручка.СуммаОборот) КАК СуммаОборот,
		|	ДопВыручка.СчетКт КАК СчетКт
		|ПОМЕСТИТЬ ДопВыручкамиСПериодамиЕНВД
		|ИЗ
		|	ДопВыручка КАК ДопВыручка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЕстьЕНВД КАК ЕстьЕНВД
		|		ПО ДопВыручка.Период >= ЕстьЕНВД.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ДопВыручка.Период,
		|	ДопВыручка.СчетКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДопВыручкамиСПериодамиЕНВД.Период КАК Период,
		|	СУММА(ВЫБОР
		|			КОГДА ЕстьЕНВД.ПлательщикЕНВД
		|					И ДопВыручкамиСПериодамиЕНВД.СчетКт В (&СчетаЕНВД)
		|				ТОГДА 0
		|			ИНАЧЕ ДопВыручкамиСПериодамиЕНВД.СуммаОборот
		|		КОНЕЦ) КАК СуммаДопВыручки
		|ПОМЕСТИТЬ ДопВыручкаБезЕНВД
		|ИЗ
		|	ДопВыручкамиСПериодамиЕНВД КАК ДопВыручкамиСПериодамиЕНВД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЕстьЕНВД КАК ЕстьЕНВД
		|		ПО ДопВыручкамиСПериодамиЕНВД.ПериодЕНВД = ЕстьЕНВД.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ДопВыручкамиСПериодамиЕНВД.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.Период КАК Период,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот
		|ПОМЕСТИТЬ СуммыНДС
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Месяц, СчетДт = &СчетНДС, , , , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновнаяВыручка.Период КАК Период,
		|	ОсновнаяВыручка.СуммаОборот + ЕСТЬNULL(ДопВыручкаБезЕНВД.СуммаДопВыручки, 0) - ЕСТЬNULL(СуммыНДС.СуммаОборот, 0) КАК Выручка
		|ИЗ
		|	ОсновнаяВыручка КАК ОсновнаяВыручка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДопВыручкаБезЕНВД КАК ДопВыручкаБезЕНВД
		|		ПО ОсновнаяВыручка.Период = ДопВыручкаБезЕНВД.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыНДС КАК СуммыНДС
		|		ПО ОсновнаяВыручка.Период = СуммыНДС.Период
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
		
	Иначе
		Запрос.УстановитьПараметр("СчетаВыручки", 		СчетаВыручки);
			
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот,
		|	ХозрасчетныйОборотыДтКт.Период КАК Период
		|ПОМЕСТИТЬ ОсновнаяВыручка
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Месяц,
		|			,
		|			,
		|			СчетКт В (&СчетаВыручки),
		|			&СубконтоСтавкаНДС,
		|			Организация = &Организация
		|				И НЕ СубконтоКт1 В (&СтавкиБезНДС)) КАК ХозрасчетныйОборотыДтКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.Период КАК Период,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот
		|ПОМЕСТИТЬ СуммыНДС
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Месяц, СчетДт = &СчетНДС, , , , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновнаяВыручка.Период КАК Период,
		|	ОсновнаяВыручка.СуммаОборот - ЕСТЬNULL(СуммыНДС.СуммаОборот, 0) КАК Выручка
		|ИЗ
		|	ОсновнаяВыручка КАК ОсновнаяВыручка
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыНДС КАК СуммыНДС
		|		ПО ОсновнаяВыручка.Период = СуммыНДС.Период
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
		
	КонецЕсли;
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

Функция ВыручкаОСНИП(Организация, НачалоПериода, КонецПериода)
	
	СписокТаблиц = Новый ТаблицаЗначений;
	СписокТаблиц.Колонки.Добавить("КодТаблицы",         ОбщегоНазначения.ОписаниеТипаЧисло(2));
	СписокТаблиц.Колонки.Добавить("Формировать",        Новый ОписаниеТипов("Булево"));
	СписокТаблиц.Колонки.Добавить("АдресХранилища",     Новый ОписаниеТипов("Строка"));
	СписокТаблиц.Колонки.Добавить("ИмяМакета",          ОбщегоНазначения.ОписаниеТипаСтрока(20));
	СписокТаблиц.Колонки.Добавить("ЗаголовокТаблицы",   ОбщегоНазначения.ОписаниеТипаСтрока(15));
	СписокТаблиц.Колонки.Добавить("Наименование",       ОбщегоНазначения.ОписаниеТипаСтрока(50));
	СписокТаблиц.Колонки.Добавить("НаименованиеПолное", Новый ОписаниеТипов("Строка"));
	
	НоваяСтрока 				= СписокТаблиц.Добавить();
	НоваяСтрока.КодТаблицы		= 61;
	НоваяСтрока.Формировать		= Истина;
	НоваяСтрока.АдресХранилища	= ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
	НоваяСтрока.ИмяМакета		= "Т61";
	
	ПараметрыЗаполненияОтчета = Новый Структура();
	
	ПараметрыЗаполненияОтчета.Вставить("Организация",		Организация);
	ПараметрыЗаполненияОтчета.Вставить("НачалоПериода",		НачалоПериода);
	ПараметрыЗаполненияОтчета.Вставить("КонецПериода",		КонецПериода);
	ПараметрыЗаполненияОтчета.Вставить("ВидДеятельности"	);
	ПараметрыЗаполненияОтчета.Вставить("ОблагаетсяНДС",		НЕ УчетнаяПолитика.ПлательщикНДС(Организация, КонецПериода));
	ПараметрыЗаполненияОтчета.Вставить("ВыводитьРеквизиты",	Ложь);
	ПараметрыЗаполненияОтчета.Вставить("СписокТаблиц",		СписокТаблиц);
	ПараметрыЗаполненияОтчета.Вставить("ОблагаетсяНДС",		Истина);
	АдресХранилища	= ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
	Отчеты.КнигаУчетаДоходовИРасходовПредпринимателя.СформироватьОтчет(ПараметрыЗаполненияОтчета, АдресХранилища);
	
	ВыборкаОбщие = ПараметрыЗаполненияОтчета.НалоговаяБаза.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыручкаИП = Новый ТаблицаЗначений();
	ВыручкаИП.Колонки.Добавить("Период");
	ВыручкаИП.Колонки.Добавить("Выручка");
	
	ВыборкаОбщие.Следующий();
	ВыборкаДетальные = ВыборкаОбщие.Выбрать();
	Пока ВыборкаДетальные.Следующий() Цикл
		Если ВыборкаДетальные.ИтогоДоходов > 0 Тогда
			НоваяСтр = ВыручкаИП.Добавить();
			НоваяСтр.Период = ВыборкаДетальные.Период;
			НоваяСтр.Выручка = ВыборкаДетальные.ИтогоДоходов;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ВыручкаИП;
	
КонецФункции

Функция ВыручкаУСН(Организация, НачалоПериода, КонецПериода)
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот - ЕСТЬNULL(КнигаУчетаДоходовИРасходовОбороты.ДоходЕНВДОборот, 0) КАК Выручка,
	|	КнигаУчетаДоходовИРасходовОбороты.Период КАК Период
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(&НачалоПериода, &КонецПериода, Месяц, Организация = &Организация) КАК КнигаУчетаДоходовИРасходовОбороты
	|ГДЕ
	|	КнигаУчетаДоходовИРасходовОбороты.Организация = &Организация
	|	И КнигаУчетаДоходовИРасходовОбороты.Период МЕЖДУ &НачалоПериода И &КонецПериода";
	Запрос.УстановитьПараметр("Организация",	Организация);
	Запрос.УстановитьПараметр("НачалоПериода",	НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",	КонецПериода);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

Функция ВыпискаИзКнигиПродаж(Организация, НачалоПериода, КонецПериода) 
	
	ПараметрыКнигиПродаж = ПараметрыКнигиПродаж(Организация, НачалоПериода, КонецПериода);
	РезультатВыполнения = Отчеты.КнигаПродаж.ПолучитьИтогиЗаПериодКнигаПродаж(ПараметрыКнигиПродаж);
	Если ТипЗнч(РезультатВыполнения) <> Тип("Структура") Тогда
		РезультатВыполнения.Сортировать("Период Возр");
	Иначе
		РезультатВыполнения = Новый ТаблицаЗначений;
	КонецЕсли;
	
	Возврат РезультатВыполнения;
	
КонецФункции

Функция ПараметрыКнигиПродаж(Организация, НачалоПериода, КонецПериода)
	
	СписокОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьСписокОбособленныхПодразделений(
	Организация);
	
	ПараметрыПолученияИтогов = Новый Структура;
	ПараметрыПолученияИтогов.Вставить("НалоговыйПериод",            НачалоПериода);
	ПараметрыПолученияИтогов.Вставить("КонецНалоговогоПериода",     КонецПериода);
	ПараметрыПолученияИтогов.Вставить("ДатаФормированияДопЛиста",   НачалоПериода);
	ПараметрыПолученияИтогов.Вставить("СписокОрганизаций",          СписокОрганизаций);
	ПараметрыПолученияИтогов.Вставить("Организация",                Организация);
	ПараметрыПолученияИтогов.Вставить("ЗаписьДополнительногоЛиста", Ложь);
	ПараметрыПолученияИтогов.Вставить("ЭтоВыписка",					Истина);
	
	Возврат ПараметрыПолученияИтогов;
	
КонецФункции

Функция ДанныеПоВыручкеИДляВыписок(Организация, Дата)
	
	ЭтоЮрЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ЮридическоеФизическоеЛицо")
	= Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	
	ВыручкаПоУСН = Новый ТаблицаЗначений;
	ВыручкаПоОСН = Новый ТаблицаЗначений;
	ВыпискаПоКнигеПродаж = Новый ТаблицаЗначений;
	
	ПериодыВыписок = ПериодыФормированияВыписок(Организация, Дата);
	КоличествоМесяцевДляВыручки = ПериодыВыписок.КоличествоМесяцевДляВыручки;
	ПустаяДата = '00010101';
	
	Если ПериодыВыписок.УСНДатаС > ПустаяДата Тогда
		ВыручкаПоУСН = ВыручкаУСН(Организация, ПериодыВыписок.УСНДатаС, ПериодыВыписок.УСНДатаПо);
	КонецЕсли;
	
	Если ПериодыВыписок.ОСНДатаС > ПустаяДата Тогда
		Если ЭтоЮрЛицо Тогда
			ВыручкаПоОСН = ВыручкаОСНЮрЛицо(Организация, ПериодыВыписок.ОСНДатаС, ПериодыВыписок.ОСНДатаПо,
			КоличествоМесяцевДляВыручки);
		Иначе
			ВыручкаПоОСН = ВыручкаОСНИП(Организация, ПериодыВыписок.ОСНДатаС, ПериодыВыписок.ОСНДатаПо);
		КонецЕсли;
		ВыпискаПоКнигеПродаж = ВыпискаИзКнигиПродаж(Организация, ПериодыВыписок.ОСНДатаС, ПериодыВыписок.ОСНДатаПо);
	КонецЕсли;
	
	ДанныеПоВыручкеИВыпискам = Новый Структура;
	ДанныеПоВыручкеИВыпискам.Вставить("ВыручкаПоОСН", ВыручкаПоОСН);
	ДанныеПоВыручкеИВыпискам.Вставить("ВыручкаПоУСН", ВыручкаПоУСН);
	ДанныеПоВыручкеИВыпискам.Вставить("ВыпискаПоКнигеПродаж", ВыпискаПоКнигеПродаж);
	Если ВыручкаПоУСН.Количество() > 0 Тогда
		ПараметрыДляОписанияВыручкиУСН = ОписаниеПоВыручке(ВыручкаПоУСН, ПериодыВыписок.УСНДатаС, ПериодыВыписок.УСНДатаПо);
		ДанныеПоВыручкеИВыпискам.Вставить("ПараметрыДляОписанияВыручкиУСН", ПараметрыДляОписанияВыручкиУСН);
	КонецЕсли;
	Если ВыручкаПоОСН.Количество() > 0 Тогда
		ПараметрыДляОписанияВыручкиОСН = ОписаниеПоВыручке(ВыручкаПоОСН, ПериодыВыписок.ОСНДатаС, ПериодыВыписок.ОСНДатаПо);
		ДанныеПоВыручкеИВыпискам.Вставить("ПараметрыДляОписанияВыручкиОСН", ПараметрыДляОписанияВыручкиОСН);
	КонецЕсли;
	
	Если ВыпискаПоКнигеПродаж.Количество() > 0 Тогда
		ПараметрыДляОписанияКнигиПродаж = ОписаниеПоВыручке(ВыпискаПоКнигеПродаж, ПериодыВыписок.ОСНДатаС,
				ПериодыВыписок.ОСНДатаПо, Истина);
		ДанныеПоВыручкеИВыпискам.Вставить("ПараметрыДляОписанияКнигиПродаж", ПараметрыДляОписанияКнигиПродаж);
	КонецЕсли;
	
	Возврат ДанныеПоВыручкеИВыпискам;
	
КонецФункции

Функция ОписаниеПоВыручке(ТЧВыручка, ДатаС, ДатаПо, ЭтоКнигаПродаж = Ложь)
	
	ПараметрыДляОписанияВыручки = Новый Структура;
	ОписаниеПериода = Новый ФорматированнаяСтрока(НСтр("ru = 'с '")
	+ Формат(ДатаС,"ДФ=""дд ММММ гггг 'г.'""")
	+ НСтр("ru = ' по '")
	+ Формат(ДатаПо,"ДФ=""дд ММММ гггг 'г.'"""));
	Годы = Год(ДатаПо) - Год(ДатаС);
	Месяцы = Месяц(ДатаПо) - Месяц(ДатаС); 
	КоличествоМесяцев = Месяцы + Годы * 12 + 1; 
	Если КоличествоМесяцев = 1 Тогда 
		КоличествоМесяцев = НСтр("ru = '1 календарный месяц '");
	ИначеЕсли КоличествоМесяцев = 2 Тогда
		КоличествоМесяцев = НСтр("ru = '2 календарных месяца '");
	ИначеЕсли КоличествоМесяцев = 3 Тогда
		КоличествоМесяцев = НСтр("ru = '3 календарных месяца '");
	Иначе
		КоличествоМесяцев = НСтр("ru = '12 календарных месяцев '");
	КонецЕсли;
	ПараметрыДляОписанияВыручки.Вставить("Период", ОписаниеПериода);
	ПараметрыДляОписанияВыручки.Вставить("КоличествоМесяцев", КоличествоМесяцев);
	Если ЭтоКнигаПродаж Тогда 
		ВыручкаДляКнигиПродаж = ТЧВыручка.Итог("ВсегоПродаж") - ТЧВыручка.Итог("НДС20")
		- ТЧВыручка.Итог("НДС18") - ТЧВыручка.Итог("НДС10");
		ПараметрыДляОписанияВыручки.Вставить("СуммаВыручки", ВыручкаДляКнигиПродаж);
	Иначе
		ПараметрыДляОписанияВыручки.Вставить("СуммаВыручки", ТЧВыручка.Итог("Выручка"));
	КонецЕсли;
	
	Возврат ПараметрыДляОписанияВыручки;
	
КонецФункции

Функция ПериодыФормированияВыписок(Организация, Дата)
	
	ПараметрыФормированияВыписок = Новый Структура;
	ПараметрыФормированияВыписок.Вставить("КоличествоМесяцевДляВыручки", 0);
	ПараметрыФормированияВыписок.Вставить("УСНДатаС", '00010101');
	ПараметрыФормированияВыписок.Вставить("УСНДатаПо", '00010101');
	ПараметрыФормированияВыписок.Вставить("ОСНДатаС", '00010101');
	ПараметрыФормированияВыписок.Вставить("ОСНДатаПо", '00010101');
	
	// 1. Нам нужно опеределить, включено ли освобождение и за какой период получать данные
	// за 3 или за 12 месяцев.
	ДатаОсвобожденияОтУплатыНДС = ДатаОсвобожденияОтУплатыНДС(Организация, Дата + 1);
	ДатаОсвобожденияОтУплатыНДС = ?(ДатаОсвобожденияОтУплатыНДС > '00010101', ДатаОсвобожденияОтУплатыНДС, Дата + 1);
	КоличествоМесяцевДляВыручки = 0;
	
	Если НачалоМесяца(Дата + 1) = НачалоМесяца(ДатаОсвобожденияОтУплатыНДС) Тогда
		КоличествоМесяцевДляВыручки = 3;
	Иначе
		КоличествоМесяцевДляВыручки = 12;
	КонецЕсли;
	
	ПараметрыФормированияВыписок.КоличествоМесяцевДляВыручки = КоличествоМесяцевДляВыручки;
	
	// 2. Нужно понять, откуда собирать выручку
	// Если был переход с УСН на ОСН тогда выручка из книги доходов и расходов УСН
	// Если ОСН - ИП тогда из книги доходов и расходов предпринимателя
	// Если ОСН - организация по счетам бухучета.
	ДатаНачалаФормированияВыписок = НачалоМесяца(ДобавитьМесяц(Дата, - КоличествоМесяцевДляВыручки + 1));
	
	ДатаНачалаВыпискиОСН = ДатаНачалаФормированияВыписок;
	ДатаПереходаНаОСН = '00010101';
	ДатаПо = '00010101';
	Если КоличествоМесяцевДляВыручки = 3 Тогда
		// Проверить был ли переход за предыдущие 3 месяца с УСН
		ДатаПереходаНаОСН = ДатаПереходаНаОСНо(Организация, Дата);
		Если ДатаПереходаНаОСН > ДатаНачалаФормированияВыписок Тогда
			ДатаПо = ?(ДатаПереходаНаОСН < Дата + 1, ДатаПереходаНаОСН - 1, Дата);
			ПараметрыФормированияВыписок.УСНДатаС = ДатаНачалаФормированияВыписок;
			ПараметрыФормированияВыписок.УСНДатаПо = ДатаПо;
			ДатаНачалаВыпискиОСН = ДатаПереходаНаОСН;
		КонецЕсли;
	КонецЕсли;
	
	Если ДатаНачалаВыпискиОСН < Дата Тогда
		ПараметрыФормированияВыписок.ОСНДатаС = ДатаНачалаВыпискиОСН;
		ПараметрыФормированияВыписок.ОСНДатаПо = Дата;
	КонецЕсли;
	
	Возврат ПараметрыФормированияВыписок;
	
КонецФункции

Функция НаименованиеНалоговогоОргана(Организация)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|	РегистрацииВНалоговомОргане.Наименование КАК Наименование,
	|	РегистрацииВНалоговомОргане.Код КАК КодНО
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|		ПО Организации.Ссылка = РегистрацииВНалоговомОргане.Владелец
	|			И Организации.КодНалоговогоОргана = РегистрацииВНалоговомОргане.Код
	|ГДЕ
	|	Организации.Ссылка = &Организация";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Наименование = "";
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Наименование = ВыборкаДетальныеЗаписи.Наименование;
		КодНО = ВыборкаДетальныеЗаписи.КодНО;
	КонецЦикла;
	
	Если Наименование = "" Тогда
		Наименование = НСтр("ru = 'ИФНС '") + Строка(КодНО);
	КонецЕсли;
	
	Возврат Наименование;
	
КонецФункции

#КонецОбласти
