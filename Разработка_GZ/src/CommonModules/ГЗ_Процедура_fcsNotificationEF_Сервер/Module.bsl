
//Структура простых обязательных реквизитов первого уровня
Функция СформироватьСтруктуруОбязательныхРеквизитовПоПроцедуре_epNotificationEF_(xdto_пакет) Экспорт 
	
	СтруктураДанныхДляИзвещения = Новый Структура;
	СтруктураДанныхДляИзвещения.Вставить("schemeVersion", xdto_пакет.schemeVersion);
	
	СтруктураДанныхДляИзвещения.Вставить("Дата",?(xdto_пакет.Свойства().Получить("docPublishDate")<> Неопределено, XMLЗначение(Тип("Дата"),xdto_пакет.docPublishDate),ТекущаяДата()));
	
	СтруктураДанныхДляИзвещения.Вставить("id", xdto_пакет.id);
	СтруктураДанныхДляИзвещения.Вставить("externalId",?(xdto_пакет.Свойства().Получить("externalId")<> Неопределено, xdto_пакет.externalId, ""));
	СтруктураДанныхДляИзвещения.Вставить("purchaseNumber",?(xdto_пакет.Свойства().Получить("purchaseNumber")<> Неопределено, xdto_пакет.purchaseNumber, "purchaseNumber"));
	СтруктураДанныхДляИзвещения.Вставить("directDate",?(xdto_пакет.Свойства().Получить("directDate")<> Неопределено, XMLЗначение(Тип("Дата"),xdto_пакет.directDate), Дата("00010101")));
	СтруктураДанныхДляИзвещения.Вставить("docPublishDate",?(xdto_пакет.Свойства().Получить("docPublishDate")<> Неопределено, xdto_пакет.docPublishDate, Дата("00010101")));
	СтруктураДанныхДляИзвещения.Вставить("docNumber",?(xdto_пакет.Свойства().Получить("docNumber")<> Неопределено, СтрЗаменить(xdto_пакет.docNumber, "№",""),""));
	СтруктураДанныхДляИзвещения.Вставить("href",?(xdto_пакет.Свойства().Получить("href")<> Неопределено, xdto_пакет.href, "href"));
	СтруктураДанныхДляИзвещения.Вставить("printForm",?(xdto_пакет.Свойства().Получить("printForm")<> Неопределено, xdto_пакет.printForm.url, ""));
	СтруктураДанныхДляИзвещения.Вставить("isGOZ",?(xdto_пакет.Свойства().Получить("isGOZ")<> Неопределено, ?(xdto_пакет.isGOZ = "true", Истина, Ложь), Ложь));
	СтруктураДанныхДляИзвещения.Вставить("isBBST",?(xdto_пакет.Свойства().Получить("isBBST")<> Неопределено, ?(xdto_пакет.isBBST = "true", Истина, Ложь), Ложь));
	СтруктураДанныхДляИзвещения.Вставить("purchaseObjectInfo",?(xdto_пакет.Свойства().Получить("purchaseObjectInfo")<> Неопределено, xdto_пакет.purchaseObjectInfo, ""));
	СтруктураДанныхДляИзвещения.Вставить("modification", ?(xdto_пакет.Свойства().Получить("modification")<> Неопределено, xdto_пакет.modification.modificationNumber, 0));
	
	
	СтруктураЗаполненияplacingWay = Новый Структура;
	СтруктураЗаполненияplacingWay.Вставить("GZcode",xdto_пакет.placingWay.code);
	СтруктураЗаполненияplacingWay.Вставить("ГЗ_НаименованиеПолное",?(xdto_пакет.placingWay.Свойства().Получить("name")<> Неопределено, xdto_пакет.placingWay.name, "ETP"));
	СтруктураЗаполненияplacingWay.Вставить("Наименование",?(xdto_пакет.placingWay.Свойства().Получить("name")<> Неопределено, xdto_пакет.placingWay.name, "ETP"));
	СтруктураДанныхДляИзвещения.Вставить("placingWay", справочники.ГЗ_placingWay_ПодспособОпределенияПоставщика.СоздатьПодспособОпределенияПоставщика(СтруктураЗаполненияplacingWay));
	
	СтруктураДанныхДляИзвещения.Вставить("article15FeaturesInfo",?(xdto_пакет.Свойства().Получить("article15FeaturesInfo")<> Неопределено, xdto_пакет.article15FeaturesInfo, ""));
	СтруктураДанныхДляИзвещения.Вставить("contractConclusionOnSt83Ch2",?(xdto_пакет.Свойства().Получить("contractConclusionOnSt83Ch2")<> Неопределено, ГЗ_РаботаСXML.ПреобразоватьЗначениеВБулево(xdto_пакет.contractConclusionOnSt83Ch2), "Ложь"));
	
	//Информация об ЭТП
	Если xdto_пакет.Свойства().Получить("ETP")<> Неопределено Тогда 
		СтруктураДанныхДляИзвещения.Вставить("ETP", ГЗ_РаботаСXML.ПолучитьЗначениеETP(xdto_пакет.ETP));
	КонецЕсли;	
	
	//Информация о прецедуре закупки, состоит из блоков collecting (обязательный), scoring(необязательный), bidding(необязательный)
	procedureInfo =?(xdto_пакет.Свойства().Получить("procedureInfo")<> Неопределено, xdto_пакет.procedureInfo, "");
	
	Если ТипЗнч(procedureInfo) = Тип("ОбъектXDTO") Тогда 
		
		Если procedureInfo.Свойства().Получить("collecting")<> Неопределено Тогда 
			СтруктураДанныхДляИзвещения.Вставить("collectiing_startDate",?(procedureInfo.collecting.Свойства().Получить("startDate")<> Неопределено, XMLЗначение(Тип("Дата"),procedureInfo.collecting.startDate), Дата("00010101")));
			СтруктураДанныхДляИзвещения.Вставить("collectiing_place",?(procedureInfo.collecting.Свойства().Получить("place")<> Неопределено, procedureInfo.collecting.place, ""));
			СтруктураДанныхДляИзвещения.Вставить("collectiing_order",?(procedureInfo.collecting.Свойства().Получить("order")<> Неопределено, procedureInfo.collecting.order, ""));
			СтруктураДанныхДляИзвещения.Вставить("collectiing_endDate",?(procedureInfo.collecting.Свойства().Получить("endDate")<> Неопределено, XMLЗначение(Тип("Дата"),procedureInfo.collecting.endDate), Дата("00010101")));
			СтруктураДанныхДляИзвещения.Вставить("collectiing_addInfo",?(procedureInfo.collecting.Свойства().Получить("addInfo")<> Неопределено, procedureInfo.collecting.addInfo, ""));
		КонецЕсли;
		
		
		//Информация о прецедуре рассмотрения закупки
		
		Если procedureInfo.Свойства().Получить("scoring")<> Неопределено Тогда 
			СтруктураДанныхДляИзвещения.Вставить("scoring_date",?(procedureInfo.scoring.Свойства().Получить("date")<> Неопределено, XMLЗначение(Тип("Дата"),procedureInfo.scoring.date), Дата("00010101")));
		КонецЕсли;
		
		//Информация о проведении аукциона в электронной форме	
		Если procedureInfo.Свойства().Получить("bidding")<> Неопределено Тогда 
			СтруктураДанныхДляИзвещения.Вставить("bidding_date",?(procedureInfo.bidding.Свойства().Получить("date")<> Неопределено, XMLЗначение(Тип("Дата"),procedureInfo.bidding.date), Дата("00010101")));
			СтруктураДанныхДляИзвещения.Вставить("bidding_addinfo",?(procedureInfo.bidding.Свойства().Получить("addinfo")<> Неопределено, procedureInfo.bidding.addinfo,""));
		КонецЕсли;
		
	КонецЕсли;
	
	Если xdto_пакет.Свойства().Получить("lot")<> Неопределено Тогда
		ЛотСДанными = xdto_пакет.lot;
	ИначеЕсли xdto_пакет.Свойства().Получить("lots")<> Неопределено Тогда
		Если ТипЗнч(xdto_пакет.lots) = Тип("ОбъектXDTO") Тогда
			Если ТипЗнч(xdto_пакет.lots.lot) = Тип("ОбъектXDTO") Тогда
				ЛотСДанными = xdto_пакет.lots.lot;
			Иначе
				ЛотСДанными = xdto_пакет.lots.lot[0]; //Пока берем первый лот в дальнейшем нужен будет разбор
				ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ФЗ_44_ЗагрузкаДанныхИзXML", 
				УровеньЖурналаРегистрации.Ошибка, , ,
				"При загрузке данных для табличной части загружены не все данные. Номер документа: " + Строка(?(xdto_пакет.Свойства().Получить("purchaseNumber")<> Неопределено, xdto_пакет.purchaseNumber, "№")));
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(xdto_пакет.lots) = Тип("СписокXDTO") Тогда
			ЛотСДанными = Неопределено;
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ФЗ_44_ЗагрузкаДанныхИзXML", 
			УровеньЖурналаРегистрации.Ошибка, , ,
			"При загрузке данных для табличной части не обнаружен источник. Номер документа: " + Строка(?(xdto_пакет.Свойства().Получить("docNumber")<> Неопределено, xdto_пакет.docNumber, "№")));

		КонецЕсли;	
	КонецЕсли;
	Если ЛотСДанными <> Неопределено Тогда 
		СтруктураДанныхДляИзвещения.Вставить("purchaseObjects", СтруктураДанных_СписокТоваровУслуг(ЛотСДанными));
		СтруктураДанныхДляИзвещения.Вставить("maxPrice",?(ЛотСДанными.Свойства().Получить("maxPrice")<> Неопределено, ЛотСДанными.maxPrice, 0));
		
		Если ЛотСДанными.свойства().Получить("purchaseObjects") <> Неопределено Тогда 
			СтруктураДанныхДляИзвещения.Вставить("totalSum",?(ЛотСДанными.purchaseObjects.Свойства().Получить("totalSum")<> Неопределено, ЛотСДанными.purchaseObjects.totalSum, 0));
			СтруктураДанныхДляИзвещения.Вставить("totalSumCurrency",?(ЛотСДанными.purchaseObjects.Свойства().Получить("totalSumCurrency")<> Неопределено, ЛотСДанными.purchaseObjects.totalSumCurrency, 0));
		ИначеЕсли  ЛотСДанными.свойства().Получить("drugPurchaseObjectsInfo") <> Неопределено Тогда 
			СтруктураДанныхДляИзвещения.Вставить("totalSum",?(ЛотСДанными.drugPurchaseObjectsInfo.Свойства().Получить("total")<> Неопределено, ЛотСДанными.drugPurchaseObjectsInfo.total, 0));
			СтруктураДанныхДляИзвещения.Вставить("totalSumCurrency",?(ЛотСДанными.drugPurchaseObjectsInfo.Свойства().Получить("total")<> Неопределено, ЛотСДанными.drugPurchaseObjectsInfo.total, 0));
		КонецЕсли;
				
		//Валюта извещения
		Если  ЛотСДанными.Свойства().Получить("currency")<> Неопределено Тогда
			СтруктураДанныхДляИзвещения.Вставить("currency",Справочники.Валюты.НайтиПоКоду(ЛотСДанными.currency.code));
		Иначе 
			СтруктураДанныхДляИзвещения.Вставить("currency",Справочники.Валюты.НайтиПоНаименованию("RUB")); 
		КонецЕсли;		
		
		//Требования заказчиков
		Если  ЛотСДанными.Свойства().Получить("customerRequirements")<> Неопределено Тогда
			Если  ЛотСДанными.customerRequirements.Свойства().Получить("customerRequirement")<> Неопределено Тогда
				Если ТипЗнч(ЛотСДанными.customerRequirements.customerRequirement) = Тип("ОбъектXDTO") Тогда // Доработать разбор списка!!!! 
					СтруктураДанныхДляИзвещения.Вставить("maxPrice",?(ЛотСДанными.customerRequirements.customerRequirement.Свойства().Получить("maxPrice")<> Неопределено,ЛотСДанными.customerRequirements.customerRequirement.maxPrice, 0));
					СтруктураДанныхДляИзвещения.Вставить("maxPriceCurrency",?(ЛотСДанными.customerRequirements.customerRequirement.Свойства().Получить("maxPriceCurrency")<> Неопределено,ЛотСДанными.customerRequirements.customerRequirement.maxPriceCurrency, 0));
					СтруктураДанныхДляИзвещения.Вставить("advancePaymentSum",?(ЛотСДанными.customerRequirements.customerRequirement.Свойства().Получить("advancePaymentSum")<> Неопределено,ЛотСДанными.customerRequirements.customerRequirement.advancePaymentSum.sumInPercents, 0));
					СтруктураДанныхДляИзвещения.Вставить("provisionWarranty",?(ЛотСДанными.customerRequirements.customerRequirement.Свойства().Получить("provisionWarranty")<> Неопределено,ЛотСДанными.customerRequirements.customerRequirement.provisionWarranty.amount, 0));
					//СтруктураДанныхДляИзвещения.Вставить("contractGuarantee",?(ЛотСДанными.customerRequirements.customerRequirement.Свойства().Получить("contractGuarantee")<> Неопределено,ЛотСДанными.customerRequirements.customerRequirement.contractGuarantee.amount, 0));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
 	КонецЕсли;	
	
	СтруктураДанныхДляИзвещения.Вставить("Организация", ГЗ_РаботаСXML.СоздатьОрганизацию44ФЗ(xdto_пакет.purchaseResponsible.responsibleOrg));  //данные заказчика- организации
	
	
	Возврат СтруктураДанныхДляИзвещения;
		
КонецФункции
 
Функция  СтруктураДанных_procedureInfo (procedureInfo)
	
	    collectingEndDate = procedureInfo.collectingEndDate;
		
КонецФункции

Функция  СтруктураДанных_СписокТоваровУслуг (xdto_пакет)
	
	//1 варинат drugPurchaseObjectsInfo.drugPurchaseObjectInfo  - лекарства
	//2 вариант purchaseObjects.purchaseObject - остальное
	ТабличнаяЧастьИзвещения = Новый ТаблицаЗначений;
	
	Если xdto_пакет.свойства().Получить("purchaseObjects") <> Неопределено Тогда 
		ТабличнаяЧастьИзвещения = ГЗ_РаботаСXML.ЗаполнитьТЧИзвещения_purchaseObjects(xdto_пакет); //передавать объект XDTO с которым будет работа 
	ИначеЕсли   xdto_пакет.свойства().Получить("drugPurchaseObjectsInfo") <> Неопределено Тогда 
		ТабличнаяЧастьИзвещения = ГЗ_РаботаСXML.ЗаполнитьТЧИзвещения_drugPurchaseObjectsInfo(xdto_пакет);	
	Иначе	
		ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ФЗ_44_ЗагрузкаДанныхИзXML", 
		УровеньЖурналаРегистрации.Ошибка, , ,
		"При загрузке данных для табличной части не обнаружен источник. Номер документа: " + Строка(?(xdto_пакет.Свойства().Получить("docNumber")<> Неопределено, xdto_пакет.docNumber, "№")));
	КонецЕсли;
	
	Возврат ТабличнаяЧастьИзвещения;	
КонецФункции



//СтруктураДанныхДляИзвещения.Вставить("priceFormula",?(ЛотСДанными.Свойства().Получить("priceFormula")<> Неопределено, ЛотСДанными.priceFormula, ""));
		//СтруктураДанныхДляИзвещения.Вставить("standardContractNumber",?(ЛотСДанными.Свойства().Получить("standardContractNumber")<> Неопределено, ЛотСДанными.standardContractNumber, ""));
		//СтруктураДанныхДляИзвещения.Вставить("financeSource",?(ЛотСДанными.Свойства().Получить("financeSource")<> Неопределено, ЛотСДанными.financeSource, ""));		
		//СтруктураДанныхДляИзвещения.Вставить("interbudgetaryTransfer",?(ЛотСДанными.Свойства().Получить("interbudgetaryTransfer")<> Неопределено, ГЗ_РаботаСXML.ПреобразоватьЗначениеВБулево(ЛотСДанными.interbudgetaryTransfer), ""));
		//СтруктураДанныхДляИзвещения.Вставить("quantityUndefined",?(ЛотСДанными.Свойства().Получить("quantityUndefined")<> Неопределено, ГЗ_РаботаСXML.ПреобразоватьЗначениеВБулево(ЛотСДанными.quantityUndefined), ""));
		//СтруктураДанныхДляИзвещения.Вставить("isContractPriceFormula",?(ЛотСДанными.Свойства().Получить("isContractPriceFormula")<> Неопределено, ГЗ_РаботаСXML.ПреобразоватьЗначениеВБулево(ЛотСДанными.isContractPriceFormula), ""));
		//
		//СтруктураДанныхДляИзвещения.Вставить("restrictInfo",?(ЛотСДанными.Свойства().Получить("restrictInfo")<> Неопределено, ЛотСДанными.restrictInfo, ""));
		//
		//СтруктураДанныхДляИзвещения.Вставить("restrictForeignsInfo",?(ЛотСДанными.Свойства().Получить("restrictForeignsInfo")<> Неопределено, ЛотСДанными.restrictForeignsInfo, ""));
		//СтруктураДанныхДляИзвещения.Вставить("addInfo",?(ЛотСДанными.Свойства().Получить("addInfo")<> Неопределено, ЛотСДанными.addInfo, ""));
		//СтруктураДанныхДляИзвещения.Вставить("noPublicDiscussion",?(ЛотСДанными.Свойства().Получить("noPublicDiscussion")<> Неопределено, ГЗ_РаботаСXML.ПреобразоватьЗначениеВБулево(ЛотСДанными.noPublicDiscussion), ""));
		//СтруктураДанныхДляИзвещения.Вставить("mustPublicDiscussion",?(ЛотСДанными.Свойства().Получить("mustPublicDiscussion")<> Неопределено, ГЗ_РаботаСXML.ПреобразоватьЗначениеВБулево(ЛотСДанными.mustPublicDiscussion), ""));
