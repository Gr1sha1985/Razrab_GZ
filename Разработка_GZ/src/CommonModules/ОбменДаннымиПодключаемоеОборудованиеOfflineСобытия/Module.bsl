
Процедура ЗарегистрироватьИзмененияСправочника(Источник, Отказ) Экспорт
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТипИсточника = ТипЗнч(Источник);
	Если ТипИсточника = Тип("СправочникОбъект.Номенклатура") Тогда
		
		Номенклатура = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Источник.Ссылка);
		СписокУзлов = СписокУзловОбменаПоНоменклатуре(Номенклатура);
		Если СписокУзлов.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Результат = ЗапросПоКодамНоменклатуры(Номенклатура);
		
	ИначеЕсли ТипИсточника = Тип("СправочникОбъект.Склады") Тогда
		
		ТипЦенНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник.Ссылка, "ТипЦенРозничнойТорговли");
		
		ТипЦенДоИзменения = Неопределено;
		Если НЕ ЗначениеЗаполнено(ТипЦенНоменклатуры)
			ИЛИ (Источник.ДополнительныеСвойства.Свойство("ТипЦенДоИзменения", ТипЦенДоИзменения) 
			И ТипЦенДоИзменения = ТипЦенНоменклатуры) Тогда
		
			Возврат;
		КонецЕсли; 
		
		СписокУзлов        = СписокУзловОбменаПоСкладу(Источник.Ссылка);
		
		Если СписокУзлов.Количество() = 0 Тогда
			Возврат;
		КонецЕсли; 
		
		Результат = ЗапросПоТипамЦен(ТипЦенНоменклатуры);
	Иначе
		Возврат;
	КонецЕсли;
	
	ЗарегистроватьИзмененияНоменклатуры(Результат, СписокУзлов);
	
КонецПроцедуры

Процедура ЗарегистрироватьИзмененияРегистраСведений(Источник, Отказ, Замещение) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТипИсточника = ТипЗнч(Источник);
	Если ТипИсточника = Тип("РегистрСведенийНаборЗаписей.ШтрихкодыНоменклатуры") Тогда
		
		Номенклатура = Источник.ВыгрузитьКолонку("Номенклатура");
		Если Номенклатура.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		СписокУзлов = СписокУзловОбменаПоНоменклатуре(Номенклатура);
		Если СписокУзлов.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Результат = ЗапросПоКодамНоменклатуры(Номенклатура);
		
	ИначеЕсли ТипИсточника = Тип("РегистрСведенийНаборЗаписей.ЦеныНоменклатуры") Тогда
		
		ТипыЦен = Источник.ВыгрузитьКолонку("ТипЦен");
		Если ТипыЦен.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		СписокУзлов = СписокУзловОбменаПоТипуЦен(ТипыЦен);
		Если СписокУзлов.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Результат = ЗапросПоКодамНоменклатуры(Источник.ВыгрузитьКолонку("Номенклатура"));
	Иначе
		Возврат;
	КонецЕсли;
	
	ЗарегистроватьИзмененияНоменклатуры(Результат, СписокУзлов);
	
КонецПроцедуры

Функция СписокУзловОбменаПоНоменклатуре(Номенклатура)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЦеныНоменклатурыСрезПоследних.ТипЦен
	|ПОМЕСТИТЬ ТипыЦен
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, Номенклатура В (&Номенклатура)) КАК ЦеныНоменклатурыСрезПоследних
	|ГДЕ
	|	ЦеныНоменклатурыСрезПоследних.Цена <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОборудованиеПоОрганизациям.УзелОбмена
	|ИЗ
	|	РегистрСведений.ОборудованиеПоОрганизациям КАК ОборудованиеПоОрганизациям
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО ОборудованиеПоОрганизациям.Склад = Склады.Ссылка
	|ГДЕ
	|	Склады.ТипЦенРозничнойТорговли В
	|			(ВЫБРАТЬ
	|				ТипыЦен.ТипЦен
	|			ИЗ
	|				ТипыЦен)
	|	И НЕ ОборудованиеПоОрганизациям.УзелОбмена = ЗНАЧЕНИЕ(ПланОбмена.ОбменСПодключаемымОборудованиемOffline.ПустаяСсылка)");
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	ТаблицаУзлов = Запрос.Выполнить().Выгрузить();
	Возврат ТаблицаУзлов.ВыгрузитьКолонку("УзелОбмена");
	
КонецФункции

Функция СписокУзловОбменаПоТипуЦен(ТипЦен)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОборудованиеПоОрганизациям.УзелОбмена
	|ИЗ
	|	РегистрСведений.ОборудованиеПоОрганизациям КАК ОборудованиеПоОрганизациям
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО ОборудованиеПоОрганизациям.Склад = Склады.Ссылка
	|ГДЕ
	|	Склады.ТипЦенРозничнойТорговли В(&ТипЦен)
	|	И НЕ ОборудованиеПоОрганизациям.УзелОбмена = ЗНАЧЕНИЕ(ПланОбмена.ОбменСПодключаемымОборудованиемOffline.ПустаяСсылка)");
	
	Запрос.УстановитьПараметр("ТипЦен", ТипЦен);
	
	ТаблицаУзлов = Запрос.Выполнить().Выгрузить();
	Возврат ТаблицаУзлов.ВыгрузитьКолонку("УзелОбмена");
	
КонецФункции

Функция СписокУзловОбменаПоСкладу(Склад)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОборудованиеПоОрганизациям.УзелОбмена
	|ИЗ
	|	РегистрСведений.ОборудованиеПоОрганизациям КАК ОборудованиеПоОрганизациям
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО ОборудованиеПоОрганизациям.Склад = Склады.Ссылка
	|ГДЕ
	|	Склады.Ссылка = &Склад
	|	И НЕ ОборудованиеПоОрганизациям.УзелОбмена = ЗНАЧЕНИЕ(ПланОбмена.ОбменСПодключаемымОборудованиемOffline.ПустаяСсылка)");
	
	Запрос.УстановитьПараметр("Склад", Склад);
	
	ТаблицаУзлов = Запрос.Выполнить().Выгрузить();
	Возврат ТаблицаУзлов.ВыгрузитьКолонку("УзелОбмена");
	
КонецФункции


Функция ЗапросПоКодамНоменклатуры(Номенклатура)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Товары.Ссылка КАК Номенклатура,
	|	ЕСТЬNULL(КодыТоваровПодключаемогоОборудованияOffline.Код, 0) КАК Код
	|ИЗ
	|	Справочник.Номенклатура КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КодыТоваровПодключаемогоОборудованияOffline КАК КодыТоваровПодключаемогоОборудованияOffline
	|		ПО Товары.Ссылка = КодыТоваровПодключаемогоОборудованияOffline.Номенклатура
	|ГДЕ
	|	Товары.Ссылка В (&Номенклатура)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(КодыТоваровПодключаемогоОборудованияOffline.Код) КАК ПоследнийКод
	|ИЗ
	|	РегистрСведений.КодыТоваровПодключаемогоОборудованияOffline КАК КодыТоваровПодключаемогоОборудованияOffline");
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Возврат Запрос.ВыполнитьПакет();

КонецФункции

Функция ЗапросПоТипамЦен(ТипыЦенНоменклатуры)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Товары.Ссылка КАК Номенклатура,
	|	ЕСТЬNULL(КодыТоваровПодключаемогоОборудованияOffline.Код, 0) КАК Код
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Товары
	|		ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = Товары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КодыТоваровПодключаемогоОборудованияOffline КАК КодыТоваровПодключаемогоОборудованияOffline
	|		ПО (Товары.Ссылка = КодыТоваровПодключаемогоОборудованияOffline.Номенклатура)
	|ГДЕ
	|	ЦеныНоменклатурыСрезПоследних.ТипЦен = &ТипЦен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(КодыТоваровПодключаемогоОборудованияOffline.Код) КАК ПоследнийКод
	|ИЗ
	|	РегистрСведений.КодыТоваровПодключаемогоОборудованияOffline КАК КодыТоваровПодключаемогоОборудованияOffline");
	
	Запрос.УстановитьПараметр("ТипЦен", ТипыЦенНоменклатуры);
	
	Возврат Запрос.ВыполнитьПакет();

КонецФункции
 

Процедура ЗарегистроватьИзмененияНоменклатуры(РезультатЗапроса, СписокУзлов)
	
	//Последний код
	ПоследнийКод = 0;
	ВыборкаПоследнийКод = РезультатЗапроса[1].Выбрать();
	Если ВыборкаПоследнийКод.Следующий() И ЗначениеЗаполнено(ВыборкаПоследнийКод.ПоследнийКод) Тогда
		ПоследнийКод = ВыборкаПоследнийКод.ПоследнийКод;
	КонецЕсли;
	
	Набор = РегистрыСведений.КодыТоваровПодключаемогоОборудованияOffline.СоздатьНаборЗаписей();
	
	//Регистрация записей
	ВыборкаТоваров = РезультатЗапроса[0].Выбрать();
	Пока ВыборкаТоваров.Следующий() Цикл
		
		//Создаем запись в регистре
		Если ВыборкаТоваров.Код = 0 Тогда
			МенеджерЗаписи = РегистрыСведений.КодыТоваровПодключаемогоОборудованияOffline.СоздатьМенеджерЗаписи();
			ПоследнийКод = ПоследнийКод + 1;
			МенеджерЗаписи.Код             = ПоследнийКод;
			МенеджерЗаписи.Номенклатура    = ВыборкаТоваров.Номенклатура;
			МенеджерЗаписи.Используется    = Истина;
			МенеджерЗаписи.Записать();
			
			КодЗначение = ПоследнийКод;
		Иначе
			КодЗначение = ВыборкаТоваров.Код;
		КонецЕсли;
		
		//Регистрируем к обмену
		Набор.Отбор.Код.Значение = КодЗначение;
		Набор.Отбор.Код.Использование = Истина;
		ПланыОбмена.ЗарегистрироватьИзменения(СписокУзлов, Набор);
			
	КонецЦикла;
	
КонецПроцедуры
