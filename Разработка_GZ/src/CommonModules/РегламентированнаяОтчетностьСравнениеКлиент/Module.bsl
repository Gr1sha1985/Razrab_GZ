////////////////////////////////////////////////////////////////////////////////
// Модуль содержит общие процедуры и функции для проведения сравнения данных
// регламентированных отчетов.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Выполняет сравнение данных двух регламентированных отчетов и выводит форму
// с результатами сравнения показателей этих отчетов.
//
// Параметры:
//  Форма  - Форма клиентского приложения - Форма регламентированного отчета.
//
Процедура СравнитьОтчеты(Форма) Экспорт
	
	Если ТипЗнч(Форма) <> Тип("ФормаКлиентскогоПриложения") Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоФормаРеглОтчета = ЭтоФормаРегламентированногоОтчета(Форма);
	
	Если НЕ ЭтоФормаРеглОтчета Тогда
		Возврат;
	КонецЕсли;
	
	СохраненныйДок = Форма.СтруктураРеквизитовФормы.мСохраненныйДок;
	
	ДополнительныеПараметрыОповещения = Новый Структура;
	ДополнительныеПараметрыОповещения.Вставить("Форма", Форма);
	ОповещениеОЗакрытииФормы = Новый ОписаниеОповещения("СравнитьОтчетыПродолжение", ЭтотОбъект, ДополнительныеПараметрыОповещения);
	
	ДополнительныеПараметрыФормы = Новый Структура;
	ДополнительныеПараметрыФормы.Вставить("СохраненныйДок", СохраненныйДок);
	
	ОткрытьФорму("ОбщаяФорма.ВыборОтчетаДляСравнения", ДополнительныеПараметрыФормы, Форма, , , ,
		ОповещениеОЗакрытииФормы, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Смотрите описание процедуры "СравнитьОтчеты(Форма)".
//
Процедура СравнитьОтчетыПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ДокументОтчетаПравый = Неопределено;
	Результат.Свойство("ДокументОтчетаПравый", ДокументОтчетаПравый);
	Если ДокументОтчетаПравый = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ФормаОтчета = ДополнительныеПараметры.Форма;
	Если ФормаОтчета = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РезультатСравнения = ФормаОтчета.СравнениеОтчетов(Результат);
	
	ДополнительныеПараметры.Вставить("ФормаОтчета",          ФормаОтчета);
	
	ДополнительныеПараметры.Вставить("ДанныеДляСравнения", Результат);
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("СравнитьОтчетыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	РезультатДлительнойОперации = Неопределено;
	Если РезультатСравнения И Результат.Свойство("РезультатДлительнойОперации", РезультатДлительнойОперации) Тогда
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ФормаОтчета);
		ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Выполняется сравнение отчетов'");
		ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
		ПараметрыОжидания.ВыводитьСообщения = Истина;
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(РезультатДлительнойОперации, ОповещениеОЗавершении, ПараметрыОжидания);
	Иначе
		АдресРезультата = ПоместитьВоВременноеХранилище(РезультатСравнения, ФормаОтчета.УникальныйИдентификатор);
		ПараметрыРезультатаЗагрузки = Новый Структура(
			"Статус,АдресРезультата,АдресДополнительногоРезультата", "Выполнено", АдресРезультата, "");
		
		ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, ПараметрыРезультатаЗагрузки);
	КонецЕсли;
	
КонецПроцедуры

// Смотрите описание процедуры "СравнитьОтчеты(Форма)".
//
Процедура СравнитьОтчетыЗавершение(РезультатСравнения, ДополнительныеПараметры) Экспорт
	
	Если РезультатСравнения = Неопределено
		ИЛИ РезультатСравнения.Статус <> "Выполнено" Тогда
		Возврат;
	КонецЕсли;
	
	ФормаОтчета        = ДополнительныеПараметры.ФормаОтчета;
	ДанныеДляСравнения = ДополнительныеПараметры.ДанныеДляСравнения;
	
	СтатусСравнения = ПолучитьИзВременногоХранилища(РезультатСравнения.АдресРезультата);
	
	Если СтатусСравнения Тогда

		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("ДанныеДляСравнения",            ДанныеДляСравнения);
		ПараметрыФормы.Вставить("АдресРезультатаСравнения",      РезультатСравнения.АдресДополнительногоРезультата);
		ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", Ложь);
		
		ФормаРезультата = ОткрытьФорму("ОбщаяФорма.РезультатСравненияОтчетов", ПараметрыФормы, ФормаОтчета, Ложь);
		
		// Вывести последнее сообщение сформированное в фоновом задании.
		Если РезультатСравнения.Свойство("Сообщения") И РезультатСравнения.Сообщения.Количество() > 0 Тогда
			ТекстСообщения = РезультатСравнения.Сообщения[РезультатСравнения.Сообщения.ВГраница()].Текст;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.ИдентификаторНазначения = ФормаРезультата.УникальныйИдентификатор;
			Сообщение.Текст = ТекстСообщения;
			Сообщение.Сообщить();
		КонецЕсли;
		
	Иначе
		
		СообщениеОбОшибке = Неопределено;
		Если ДанныеДляСравнения.Свойство("СообщениеОбОшибке", СообщениеОбОшибке) И СообщениеОбОшибке <> Неопределено Тогда
			Если ТипЗнч(СообщениеОбОшибке) = Тип("Структура") Тогда
				СпособВывода   = СообщениеОбОшибке.Способ;
				ТекстСообщения = СообщениеОбОшибке.ТекстСообщения;
				Если СпособВывода = "Предупреждение" Тогда
					ПоказатьПредупреждение(, ТекстСообщения);
				ИначеЕсли СпособВывода = "Сообщение" Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = ТекстСообщения;
					Сообщение.Сообщить();
				Иначе
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = НСтр("ru = 'Сравнение показателей отчетов не выполнено.'");
					Сообщение.Сообщить();
				КонецЕсли;
			Иначе
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СообщениеОбОшибке;
				Сообщение.Сообщить();
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЭтоФормаРегламентированногоОтчета(Форма) Экспорт
	
	СвойстваФормы = Новый Структура("СтруктураРеквизитовФормы");
	ЗаполнитьЗначенияСвойств(СвойстваФормы, Форма);
	
	Если ТипЗнч(СвойстваФормы.СтруктураРеквизитовФормы) = Тип("Структура") Тогда
		Если СвойстваФормы.СтруктураРеквизитовФормы.Свойство("мСохраненныйДок") Тогда
			
			Возврат Истина;
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти