#Область ПрограммныйИнтерфейс

// Указание автоматически заполняемых показателей отчета "Операции с денежными средствами НФО".
//
// Параметры:
//  ПоказателиОтчета  - Структура - структура, описывающая показатели отчета.
//                 Содержание структуры определяется БРО.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаОперацииСДенежнымиСредствамиНФО2015Кв3(ПоказателиОтчета) Экспорт
	
	// Раздел 1
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "РегНомерКредОрг", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "ПорядНомерФил",   Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "БИККредОрг",      Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "СокрНаимКредОрг", Истина, Ложь);
	// Раздел 1.1.
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "Валюта",            Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "ОстаткиНачПериода", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1110001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1110002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1110003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1120001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1120002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1120003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1130001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1130002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1130003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1140001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1140002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1140003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1150001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1150002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1150003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1160001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1160002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1160003", Истина, Ложь);
	// Раздел 1.2.
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1210001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1210002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1210003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1210004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1210005", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1220001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1220002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1220003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1220004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1220005", Истина, Ложь);
	// Раздел 1.3 автоматически не заполняется.
	// Раздел 2.1.
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2110001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2110002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2110003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2120001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2120002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2120003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2130001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2130002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2130003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2140001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2140002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2140003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2150001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2150002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2150003", Истина, Ложь);
	// Раздел 2.2.
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2200001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2200002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2200003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2200004", Истина, Ложь);
	
КонецПроцедуры

// Указание автоматически заполняемых показателей отчета "Операции с денежными средствами НФО".
//
// Параметры:
//  ПоказателиОтчета  - Структура - структура, описывающая показатели отчета.
//                 Содержание структуры определяется БРО.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаОперацииСДенежнымиСредствамиНФО2017Кв2(ПоказателиОтчета) Экспорт
	
	// Раздел 1
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "РегНомерКредОрг", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "ПорядНомерФил",   Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "СокрНаимКредОрг", Истина, Ложь);
	// Раздел 1.1.
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "Валюта",            Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "ОстаткиНачПериода", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1110001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1110002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1110003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1120001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1120002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1120003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1130001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1130002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1130003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1140001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1140002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1140003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1150001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1150002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1150003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1160001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1160002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1160003", Истина, Ложь);
	// Раздел 1.2.
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1210001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1210002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1210003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1210004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1210005", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1220001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1220002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1220003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1220004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1220005", Истина, Ложь);
	// Раздел 1.3 автоматически не заполняется.
	// Раздел 2.1.
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2110001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2110002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2110003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2120001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2120002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2120003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2130001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2130002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2130003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2140001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2140002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2140003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2150001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2150002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2150003", Истина, Ложь);
	// Раздел 2.2.
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2200001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2200002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2200003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2200004", Истина, Ложь);
	
КонецПроцедуры

// Указание автоматически заполняемых показателей отчета "Операции с денежными средствами НФО".
//
// Параметры:
//  ПоказателиОтчета  - Структура - структура, описывающая показатели отчета.
//                 Содержание структуры определяется БРО.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаОперацииСДенежнымиСредствамиНФО2019Кв2(ПоказателиОтчета) Экспорт
	
	// Раздел 1
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "РегНомерКредОрг", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "ПорядНомерФил",   Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "СокрНаимКредОрг", Истина, Ложь);
	// Раздел 1.1.
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "Валюта",            Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "ОстаткиНачПериода", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1110001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1110002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1110003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1120001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1120002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1120003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1130001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1130002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1130003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1140001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1140002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1140003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1150001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1150002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1150003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1160001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1160002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1160003", Истина, Ложь);
	// Раздел 1.2.
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1210001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1210002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1210003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1210004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1210005", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1220001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1220002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1220003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1220004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П1220005", Истина, Ложь);
	// Раздел 1.3 автоматически не заполняется.
	// Раздел 2.1.
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2110001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2110002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2110003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2120001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2120002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2120003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2130001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2130002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2130003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2140001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2140002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2140003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2150001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2150002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2150003", Истина, Ложь);
	// Раздел 2.2.
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2200001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2200002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2200003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П2200004", Истина, Ложь);
	
КонецПроцедуры

// Заполнение показателей отчета "Операции с денежными средствами НФО".
//
// Параметры:
//  ПараметрыОтчета  - Структура - структура, описывающая параметры формируемого отчета.
//                 Содержит свойства: Организация, мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета.
//  Контейнер  - Структура - структура с адресами во временном хранилище для помещения данных заполнения отчета.
//                 Содержит свойства: Раздел1, Раздел21, Раздел22.
//
Процедура ЗаполнитьРегламентированныйОтчетОперацииСДенежнымиСредствамиНФО2015Кв3(ПараметрыОтчета, Контейнер) Экспорт
	
	ПараметрыЗаполнения = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПараметрыОтчета);
	ПараметрыЗаполнения.Вставить("ЗнакиДробнойЧасти", 3);
	ОперацииНФО = ПодготовитьОперацииСДенежнымиСредствамиНФО(ПараметрыЗаполнения);
	
	ПоместитьВоВременноеХранилище(ОперацииНФО.ДеревоРаздел1,  Контейнер.Раздел1);
	ПоместитьВоВременноеХранилище(ОперацииНФО.ДеревоРаздел21, Контейнер.Раздел21);
	ПоместитьВоВременноеХранилище(ОперацииНФО.ДеревоРаздел22, Контейнер.Раздел22);
	
КонецПроцедуры

// Заполнение показателей отчета "Операции с денежными средствами НФО".
//
// Параметры:
//  ПараметрыОтчета  - Структура - структура, описывающая параметры формируемого отчета.
//                 Содержит свойства: Организация, мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета.
//  Контейнер  - Структура - структура с адресами во временном хранилище для помещения данных заполнения отчета.
//                 Содержит свойства: Раздел1, Раздел21, Раздел22.
//
Процедура ЗаполнитьРегламентированныйОтчетОперацииСДенежнымиСредствамиНФО2017Кв2(ПараметрыОтчета, Контейнер) Экспорт
	
	ПараметрыЗаполнения = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПараметрыОтчета);
	ПараметрыЗаполнения.Вставить("ЗнакиДробнойЧасти", 3);
	ОперацииНФО = ПодготовитьОперацииСДенежнымиСредствамиНФО(ПараметрыЗаполнения);
	
	// В версии 2017 года в составе показателей Раздела1 отсутствует БИК, удалим соответствующий ключ из данных.
	Для каждого СтрокаРаздел1 Из ОперацииНФО.ДеревоРаздел1.Строки Цикл
		СтрокаРаздел1.Данные.Удалить("БИККредОрг");
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(ОперацииНФО.ДеревоРаздел1,  Контейнер.Раздел1);
	ПоместитьВоВременноеХранилище(ОперацииНФО.ДеревоРаздел21, Контейнер.Раздел21);
	ПоместитьВоВременноеХранилище(ОперацииНФО.ДеревоРаздел22, Контейнер.Раздел22);
	
КонецПроцедуры

// Заполнение показателей отчета "Операции с денежными средствами НФО".
//
// Параметры:
//  ПараметрыОтчета  - Структура - структура, описывающая параметры формируемого отчета.
//                 Содержит свойства: Организация, мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета.
//  Контейнер  - Структура - структура с адресами во временном хранилище для помещения данных заполнения отчета.
//                 Содержит свойства: Раздел1, Раздел21, Раздел22.
//
Процедура ЗаполнитьРегламентированныйОтчетОперацииСДенежнымиСредствамиНФО2019Кв2(ПараметрыОтчета, Контейнер) Экспорт
	
	ПараметрыЗаполнения = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПараметрыОтчета);
	ПараметрыЗаполнения.Вставить("ЗнакиДробнойЧасти", 5);
	ОперацииНФО = ПодготовитьОперацииСДенежнымиСредствамиНФО(ПараметрыЗаполнения);
	
	// В версии 2017 года в составе показателей Раздела1 отсутствует БИК, удалим соответствующий ключ из данных.
	Для каждого СтрокаРаздел1 Из ОперацииНФО.ДеревоРаздел1.Строки Цикл
		СтрокаРаздел1.Данные.Удалить("БИККредОрг");
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(ОперацииНФО.ДеревоРаздел1,  Контейнер.Раздел1);
	ПоместитьВоВременноеХранилище(ОперацииНФО.ДеревоРаздел21, Контейнер.Раздел21);
	ПоместитьВоВременноеХранилище(ОперацииНФО.ДеревоРаздел22, Контейнер.Раздел22);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполнение показателей отчета "Операции с денежными средствами НФО".
//
// Параметры:
//  ПараметрыОтчета  - Структура - структура, описывающая параметры формируемого отчета.
//                 Содержит свойства: Организация, мДатаНачалаПериодаОтчета, мДатаКонцаПериодаОтчета.
//
// Возвращаемое значение:
//	Структура - Содержит ключи:
//		* ДеревоРаздел1 - см. НовоеДеревоДанных()
//		* ДеревоРаздел21 - см. НовоеДеревоДанных()
//		* ДеревоРаздел22 - см. НовоеДеревоДанных()
//
Функция ПодготовитьОперацииСДенежнымиСредствамиНФО(ПараметрыОтчета) Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("ДеревоРаздел1",  НовоеДеревоДанных());
	Результат.Вставить("ДеревоРаздел21", НовоеДеревоДанных());
	Результат.Вставить("ДеревоРаздел22", НовоеДеревоДанных());

	ДанныеОтчета = ДанныеОтчетаОперацииСДенежнымиСредствамиНФО(ПараметрыОтчета);
	ДанныеОтчета.ОперацииБанк.Индексы.Добавить("Банк,Валюта,ВидКонтрагентов");
	ДанныеОтчета.НерезидентыБанк.Индексы.Добавить("Банк,ВидКонтрагентов");
	ДанныеОтчета.ОперацииКасса.Индексы.Добавить("Валюта,ВидКонтрагентов");
	
	ЗнакиПослеЗапятой = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыОтчета, "ЗнакиПослеЗапятой", 5);
	
	// Раздел 1
	
	ДеревоРаздел1 = Результат.ДеревоРаздел1;
	Отбор11 = Новый Структура("Банк,Валюта");
	Отбор12 = Новый Структура("Банк");
	
	Для каждого СтрокаБанк Из ДанныеОтчета.Банки.Строки Цикл
	
		СтрокаРаздел1 = НоваяСтрокаРаздел1(ДеревоРаздел1);
		
		СтрокаРаздел1.Данные.РегНомерКредОрг = СтрокаБанк.РегистрационныйНомер;
		СтрокаРаздел1.Данные.ПорядНомерФил   = СтрокаБанк.ПорядковыйНомерФилиала;
		СтрокаРаздел1.Данные.БИККредОрг      = СтрокаБанк.БИК;
		СтрокаРаздел1.Данные.СокрНаимКредОрг = СтрокаБанк.Наименование;
		
		// Страницы раздела 1.1.
		Для каждого СтрокаВалюта Из СтрокаБанк.Строки Цикл
			
			СтрокаСтраница11 = НоваяСтрокаСтраница11(СтрокаРаздел1.Строки[0]);
			
			СтрокаСтраница11.Данные.Валюта            = СтрокаВалюта.НаименованиеВалюты + " (" + СтрокаВалюта.КодВалюты + ")";
			СтрокаСтраница11.Данные.ОстаткиНачПериода = Окр(СтрокаВалюта.НачОстаток / 1000, ЗнакиПослеЗапятой);
			СтрокаСтраница11.Данные.ОборотыСписание   = Окр(СтрокаВалюта.Расход / 1000, ЗнакиПослеЗапятой);
			СтрокаСтраница11.Данные.ОборотыЗачисление = Окр(СтрокаВалюта.Приход / 1000, ЗнакиПослеЗапятой);
			СтрокаСтраница11.Данные.ОстаткиКонПериода = Окр(СтрокаВалюта.КонОстаток / 1000, ЗнакиПослеЗапятой);
			
			ЗаполнитьЗначенияСвойств(Отбор11, СтрокаВалюта);
			
			ТаблицаДанные = ОперацииПоВидуКонтрагентов(ДанныеОтчета.ОперацииБанк, Отбор11, "ЮрЛица");
			Для каждого СтрокаТаблицы Из ТаблицаДанные Цикл
				НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница11, "111");
				ЗаполнитьСтрокуТаблицыОперации(НоваяСтрока, СтрокаТаблицы, "111", ЗнакиПослеЗапятой);
			КонецЦикла;
			
			ТаблицаДанные = ОперацииПоВидуКонтрагентов(ДанныеОтчета.ОперацииБанк, Отбор11, "Предприниматели");
			Для каждого СтрокаТаблицы Из ТаблицаДанные Цикл
				НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница11, "112");
				ЗаполнитьСтрокуТаблицыОперации(НоваяСтрока, СтрокаТаблицы, "112", ЗнакиПослеЗапятой);
			КонецЦикла;
			
			ТаблицаДанные = ОперацииПоВидуКонтрагентов(ДанныеОтчета.ОперацииБанк, Отбор11, "ФизЛица");
			Для каждого СтрокаТаблицы Из ТаблицаДанные Цикл
				НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница11, "113");
				ЗаполнитьСтрокуТаблицыОперации(НоваяСтрока, СтрокаТаблицы, "113", ЗнакиПослеЗапятой);
			КонецЦикла;
			
			ТаблицаДанные = ОперацииПоВидуКонтрагентов(ДанныеОтчета.ОперацииБанк, Отбор11, "НерезидентыЮрЛица");
			Для каждого СтрокаТаблицы Из ТаблицаДанные Цикл
				НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница11, "114");
				ЗаполнитьСтрокуТаблицыОперации(НоваяСтрока, СтрокаТаблицы, "114", ЗнакиПослеЗапятой);
			КонецЦикла;
			
			ТаблицаДанные = ОперацииПоВидуКонтрагентов(ДанныеОтчета.ОперацииБанк, Отбор11, "НерезидентыФизЛица");
			Для каждого СтрокаТаблицы Из ТаблицаДанные Цикл
				НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница11, "115");
				ЗаполнитьСтрокуТаблицыОперации(НоваяСтрока, СтрокаТаблицы, "115", ЗнакиПослеЗапятой);
			КонецЦикла;
			
			ТаблицаДанные = ОперацииПоВидуКонтрагентов(ДанныеОтчета.ОперацииБанк, Отбор11, "НеустановленныеЛица");
			Для каждого СтрокаТаблицы Из ТаблицаДанные Цикл
				НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница11, "116");
				ЗаполнитьСтрокуТаблицыОперации(НоваяСтрока, СтрокаТаблицы, "116", ЗнакиПослеЗапятой);
			КонецЦикла;
			
		КонецЦикла;
		
		// Страница раздела 1.2.
		
		СтрокаСтраница12 = НоваяСтрокаСтраница12(СтрокаРаздел1.Строки[1]);
		Отбор12.Банк     = СтрокаБанк.Банк;
		
		ТаблицаДанные = ОперацииНерезидентов(ДанныеОтчета.НерезидентыБанк, Отбор12, "НерезидентыЮрЛица");
		Для каждого СтрокаТаблицы Из ТаблицаДанные Цикл
			НоваяСтрока = НоваяСтрокаТаблицыНерезидентыБанк(СтрокаСтраница12, "121");
			ЗаполнитьСтрокуНерезидентыБанк(НоваяСтрока, СтрокаТаблицы, "121", ЗнакиПослеЗапятой);
		КонецЦикла;
		
		ТаблицаДанные = ОперацииНерезидентов(ДанныеОтчета.НерезидентыБанк, Отбор12, "НерезидентыФизЛица");
		Для каждого СтрокаТаблицы Из ТаблицаДанные Цикл
			НоваяСтрока = НоваяСтрокаТаблицыНерезидентыБанк(СтрокаСтраница12, "122");
			ЗаполнитьСтрокуНерезидентыБанк(НоваяСтрока, СтрокаТаблицы, "122", ЗнакиПослеЗапятой);
		КонецЦикла;

	КонецЦикла;
	
	// Раздел 2.1
	// Страница раздела 2.1.
	
	ДеревоРаздел21   = Результат.ДеревоРаздел21;
	Отбор21          = Новый Структура;
	СтрокаСтраница21 = НоваяСтрокаСтраница21(ДеревоРаздел21);
	
	СтрокаСтраница21.Данные.ОстаткиНачПериода = Окр(ДанныеОтчета.Касса.Итог("НачОстаток") / 1000, ЗнакиПослеЗапятой);
	СтрокаСтраница21.Данные.ОборотыСписание   = Окр(ДанныеОтчета.Касса.Итог("Расход") / 1000, ЗнакиПослеЗапятой);
	СтрокаСтраница21.Данные.ОборотыЗачисление = Окр(ДанныеОтчета.Касса.Итог("Приход") / 1000, ЗнакиПослеЗапятой);
	СтрокаСтраница21.Данные.ОстаткиКонПериода = Окр(ДанныеОтчета.Касса.Итог("КонОстаток") / 1000, ЗнакиПослеЗапятой);
	
	ТаблицаДанные = ОперацииПоВидуКонтрагентов(ДанныеОтчета.ОперацииКасса, Отбор21, "ЮрЛица");
	Для каждого СтрокаТаблицы Из ТаблицаДанные Цикл
		НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница21, "211");
		ЗаполнитьСтрокуТаблицыОперации(НоваяСтрока, СтрокаТаблицы, "211", ЗнакиПослеЗапятой);
	КонецЦикла;
	
	ТаблицаДанные = ОперацииПоВидуКонтрагентов(ДанныеОтчета.ОперацииКасса, Отбор21, "Предприниматели");
	Для каждого СтрокаТаблицы Из ТаблицаДанные Цикл
		НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница21, "212");
		ЗаполнитьСтрокуТаблицыОперации(НоваяСтрока, СтрокаТаблицы, "212", ЗнакиПослеЗапятой);
	КонецЦикла;
	
	ТаблицаДанные = ОперацииПоВидуКонтрагентов(ДанныеОтчета.ОперацииКасса, Отбор21, "ФизЛица");
	Для каждого СтрокаТаблицы Из ТаблицаДанные Цикл
		НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница21, "213");
		ЗаполнитьСтрокуТаблицыОперации(НоваяСтрока, СтрокаТаблицы, "213", ЗнакиПослеЗапятой);
	КонецЦикла;
	
	ТаблицаДанные = ОперацииПоВидуКонтрагентов(ДанныеОтчета.ОперацииКасса, Отбор21, "НерезидентыЮрЛица");
	Для каждого СтрокаТаблицы Из ТаблицаДанные Цикл
		НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница21, "214");
		ЗаполнитьСтрокуТаблицыОперации(НоваяСтрока, СтрокаТаблицы, "214", ЗнакиПослеЗапятой);
	КонецЦикла;
	
	ТаблицаДанные = ОперацииПоВидуКонтрагентов(ДанныеОтчета.ОперацииКасса, Отбор21, "НерезидентыФизЛица");
	Для каждого СтрокаТаблицы Из ТаблицаДанные Цикл
		НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница21, "215");
		ЗаполнитьСтрокуТаблицыОперации(НоваяСтрока, СтрокаТаблицы, "215", ЗнакиПослеЗапятой);
	КонецЦикла;
	
	// Раздел 2.2
	// Страница раздела 2.2.
	
	ДеревоРаздел22   = Результат.ДеревоРаздел22;
	СтрокаСтраница22 = НоваяСтрокаСтраница22(ДеревоРаздел22);

	Для каждого СтрокаТаблицы Из ДанныеОтчета.НерезидентыКасса Цикл
		НоваяСтрока = НоваяСтрокаТаблицыНерезидентыКасса(СтрокаСтраница22);
		ЗаполнитьСтрокуНерезидентыКасса(НоваяСтрока, СтрокаТаблицы, "220", ЗнакиПослеЗапятой);
	КонецЦикла;
	
	// Сохраняем данные автозаполнения.
	
	ДополнитьДанныеАвтоЗаполненияПустымиСтроками(ДеревоРаздел1, ДеревоРаздел21, ДеревоРаздел22);
	
	Возврат Результат;
	
КонецФункции

Функция ДанныеОтчетаОперацииСДенежнымиСредствамиНФО(ПараметрыОтчета)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",   ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Рубли",         Константы.ВалютаРегламентированногоУчета.Получить());
	ВидыСубконтоБанк = Новый Массив;
	ВидыСубконтоБанк.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.БанковскиеСчета);
	ВидыСубконтоБанк.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств);
	Запрос.УстановитьПараметр("ВидыСубконтоБанк", ВидыСубконтоБанк);
	Запрос.УстановитьПараметр("ВидСубконтоСтатьиДДС", 
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств);
	Запрос.УстановитьПараметр("ВидСубконтоБанковскиеСчета", 
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.БанковскиеСчета);
	Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", 
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	Запрос.УстановитьПараметр("ВидСубконтоРаботники", 
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций);
	
	МассивИсключений = Новый Массив;
	МассивИсключений.Добавить(ПланыСчетов.Хозрасчетный.ДепозитныеСчета);
	МассивИсключений.Добавить(ПланыСчетов.Хозрасчетный.ДепозитныеСчетаВал);
	УсловияОтбора = БухгалтерскийУчет.НовыеУсловияОтбораСубсчетов();
	УсловияОтбора.СчетаИсключения = МассивИсключений;
	МассивСчетов = Новый Массив;
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.СпециальныеСчета);
	УсловияОтбора.Валютный = Ложь;
	Запрос.УстановитьПараметр("СчетаБанкРубли", 
		БухгалтерскийУчет.СформироватьМассивСубсчетовПоОтбору(МассивСчетов, УсловияОтбора));
	МассивСчетов = Новый Массив;
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ВалютныеСчета);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.СпециальныеСчета);
	УсловияОтбора.Валютный = Истина;
	Запрос.УстановитьПараметр("СчетаБанкВалюта", 
		БухгалтерскийУчет.СформироватьМассивСубсчетовПоОтбору(МассивСчетов, УсловияОтбора));
	Запрос.УстановитьПараметр("СчетаКассаРубли", ПланыСчетов.Хозрасчетный.КассаОрганизации);
	Запрос.УстановитьПараметр("ЮридическоеЛицо", Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо);
	Запрос.УстановитьПараметр("ФизическоеЛицо",  Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо);
	Запрос.УстановитьПараметр("Россия",          Справочники.СтраныМира.Россия);
	Запрос.УстановитьПараметр("ПустойБанк",           Справочники.Банки.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойКонтрагент",     Справочники.Контрагенты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустоеФизическоеЛицо", Справочники.ФизическиеЛица.ПустаяСсылка());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.БанковскиеСчета).Банк, &ПустойБанк) КАК Банк,
	|	&Рубли КАК Валюта,
	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток) КАК НачОстаток,
	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток) КАК КонОстаток,
	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотДт) КАК Приход,
	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотКт) КАК Расход
	|ПОМЕСТИТЬ ОстаткиБанк
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, , , Счет В (&СчетаБанкРубли), &ВидСубконтоБанковскиеСчета, Организация В (&Организация)) КАК ХозрасчетныйОстаткиИОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.БанковскиеСчета).Банк, &ПустойБанк)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.БанковскиеСчета).Банк, &ПустойБанк),
	|	ХозрасчетныйОстаткиИОбороты.Валюта,
	|	СУММА(ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаНачальныйОстаток),
	|	СУММА(ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаКонечныйОстаток),
	|	СУММА(ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотДт),
	|	СУММА(ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотКт)
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, , , Счет В (&СчетаБанкВалюта), &ВидСубконтоБанковскиеСчета, Организация В (&Организация)) КАК ХозрасчетныйОстаткиИОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.БанковскиеСчета).Банк, &ПустойБанк),
	|	ХозрасчетныйОстаткиИОбороты.Валюта
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Банк
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Рубли КАК Валюта,
	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток) КАК НачОстаток,
	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток) КАК КонОстаток,
	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотДт) КАК Приход,
	|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотКт) КАК Расход
	|ПОМЕСТИТЬ ОстаткиКасса
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, , , Счет В (&СчетаКассаРубли), , Организация В (&Организация)) КАК ХозрасчетныйОстаткиИОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.БанковскиеСчета).Банк, &ПустойБанк) КАК Банк,
	|	&Рубли КАК Валюта,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто2 КАК Справочник.СтатьиДвиженияДенежныхСредств).КодВидаОперацииНФО, """") КАК КодОперации,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК Приход,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК Расход
	|ПОМЕСТИТЬ ВсеОборотыБанк
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, , Счет В (&СчетаБанкРубли), &ВидыСубконтоБанк, Организация В (&Организация), , ) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.БанковскиеСчета).Банк, &ПустойБанк),
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто2 КАК Справочник.СтатьиДвиженияДенежныхСредств).КодВидаОперацииНФО, """")
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.БанковскиеСчета).Банк, &ПустойБанк),
	|	ХозрасчетныйОбороты.Валюта,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто2 КАК Справочник.СтатьиДвиженияДенежныхСредств).КодВидаОперацииНФО, """"),
	|	СУММА(ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт),
	|	СУММА(ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт)
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, , Счет В (&СчетаБанкВалюта), &ВидыСубконтоБанк, Организация В (&Организация), , ) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.БанковскиеСчета).Банк, &ПустойБанк),
	|	ХозрасчетныйОбороты.Валюта,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто2 КАК Справочник.СтатьиДвиженияДенежныхСредств).КодВидаОперацииНФО, """")
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Банк,
	|	Валюта,
	|	КодОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Рубли КАК Валюта,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.СтатьиДвиженияДенежныхСредств).КодВидаОперацииНФО, """") КАК КодОперации,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК Приход,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК Расход
	|ПОМЕСТИТЬ ВсеОборотыКасса
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, , Счет В (&СчетаКассаРубли), &ВидСубконтоСтатьиДДС, Организация В (&Организация), , ) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.СтатьиДвиженияДенежныхСредств).КодВидаОперацииНФО, """")
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта,
	|	КодОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.БанковскиеСчета).Банк, &ПустойБанк) КАК Банк,
	|	&Рубли КАК Валюта,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто2 КАК Справочник.СтатьиДвиженияДенежныхСредств).КодВидаОперацииНФО, """") КАК КодОперации,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.КорСубконто1 КАК Справочник.Контрагенты).Ссылка, &ПустойКонтрагент) КАК Контрагент,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК Приход,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК Расход
	|ПОМЕСТИТЬ ОборотыБанкПоКонтрагентам
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, , Счет В (&СчетаБанкРубли), &ВидыСубконтоБанк, Организация В (&Организация), , &ВидСубконтоКонтрагенты) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.БанковскиеСчета).Банк, &ПустойБанк),
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто2 КАК Справочник.СтатьиДвиженияДенежныхСредств).КодВидаОперацииНФО, """"),
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.КорСубконто1 КАК Справочник.Контрагенты).Ссылка, &ПустойКонтрагент)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.БанковскиеСчета).Банк, &ПустойБанк),
	|	ХозрасчетныйОбороты.Валюта,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто2 КАК Справочник.СтатьиДвиженияДенежныхСредств).КодВидаОперацииНФО, """"),
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.КорСубконто1 КАК Справочник.Контрагенты).Ссылка, &ПустойКонтрагент),
	|	СУММА(ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт),
	|	СУММА(ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт)
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, , Счет В (&СчетаБанкВалюта), &ВидыСубконтоБанк, Организация В (&Организация), , &ВидСубконтоКонтрагенты) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.БанковскиеСчета).Банк, &ПустойБанк),
	|	ХозрасчетныйОбороты.Валюта,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто2 КАК Справочник.СтатьиДвиженияДенежныхСредств).КодВидаОперацииНФО, """"),
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.КорСубконто1 КАК Справочник.Контрагенты).Ссылка, &ПустойКонтрагент)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.БанковскиеСчета).Банк, &ПустойБанк) КАК Банк,
	|	&Рубли КАК Валюта,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто2 КАК Справочник.СтатьиДвиженияДенежныхСредств).КодВидаОперацииНФО, """") КАК КодОперации,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.КорСубконто1 КАК Справочник.ФизическиеЛица).Ссылка, &ПустоеФизическоеЛицо) КАК ФизическоеЛицо,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК Приход,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК Расход
	|ПОМЕСТИТЬ ОборотыБанкПоРаботникам
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, , Счет В (&СчетаБанкРубли), &ВидыСубконтоБанк, Организация В (&Организация), , &ВидСубконтоРаботники) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.БанковскиеСчета).Банк, &ПустойБанк),
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто2 КАК Справочник.СтатьиДвиженияДенежныхСредств).КодВидаОперацииНФО, """"),
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.КорСубконто1 КАК Справочник.ФизическиеЛица).Ссылка, &ПустоеФизическоеЛицо)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.БанковскиеСчета).Банк, &ПустойБанк),
	|	ХозрасчетныйОбороты.Валюта,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто2 КАК Справочник.СтатьиДвиженияДенежныхСредств).КодВидаОперацииНФО, """"),
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.КорСубконто1 КАК Справочник.ФизическиеЛица).Ссылка, &ПустоеФизическоеЛицо),
	|	СУММА(ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт),
	|	СУММА(ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт)
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, , Счет В (&СчетаБанкВалюта), &ВидыСубконтоБанк, Организация В (&Организация), , &ВидСубконтоРаботники) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.БанковскиеСчета).Банк, &ПустойБанк),
	|	ХозрасчетныйОбороты.Валюта,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто2 КАК Справочник.СтатьиДвиженияДенежныхСредств).КодВидаОперацииНФО, """"),
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.КорСубконто1 КАК Справочник.ФизическиеЛица).Ссылка, &ПустоеФизическоеЛицо)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОборотыБанкПоКонтрагентам.Банк КАК Банк,
	|	ОборотыБанкПоКонтрагентам.Валюта КАК Валюта,
	|	ОборотыБанкПоКонтрагентам.КодОперации КАК КодОперации,
	|	ОборотыБанкПоКонтрагентам.Контрагент КАК Контрагент,
	|	ОборотыБанкПоКонтрагентам.Приход КАК Приход,
	|	ОборотыБанкПоКонтрагентам.Расход КАК Расход
	|ПОМЕСТИТЬ ОборотыБанкПоКонтрагентамИРаботникам
	|ИЗ
	|	ОборотыБанкПоКонтрагентам КАК ОборотыБанкПоКонтрагентам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОборотыБанкПоРаботникам.Банк,
	|	ОборотыБанкПоРаботникам.Валюта,
	|	ОборотыБанкПоРаботникам.КодОперации,
	|	ОборотыБанкПоРаботникам.ФизическоеЛицо,
	|	ОборотыБанкПоРаботникам.Приход,
	|	ОборотыБанкПоРаботникам.Расход
	|ИЗ
	|	ОборотыБанкПоРаботникам КАК ОборотыБанкПоРаботникам
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Рубли КАК Валюта,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.СтатьиДвиженияДенежныхСредств).КодВидаОперацииНФО, """") КАК КодОперации,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.КорСубконто1 КАК Справочник.Контрагенты).Ссылка, &ПустойКонтрагент) КАК Контрагент,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК Приход,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК Расход
	|ПОМЕСТИТЬ ОборотыКассаПоКонтрагентам
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, , Счет В (&СчетаКассаРубли), &ВидСубконтоСтатьиДДС, Организация В (&Организация), , &ВидСубконтоКонтрагенты) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.СтатьиДвиженияДенежныхСредств).КодВидаОперацииНФО, """"),
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.КорСубконто1 КАК Справочник.Контрагенты).Ссылка, &ПустойКонтрагент)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Рубли КАК Валюта,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.СтатьиДвиженияДенежныхСредств).КодВидаОперацииНФО, """") КАК КодОперации,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.КорСубконто1 КАК Справочник.ФизическиеЛица).Ссылка, &ПустоеФизическоеЛицо) КАК ФизическоеЛицо,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК Приход,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК Расход
	|ПОМЕСТИТЬ ОборотыКассаПоРаботникам
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, , Счет В (&СчетаКассаРубли), &ВидСубконтоСтатьиДДС, Организация В (&Организация), , &ВидСубконтоРаботники) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.СтатьиДвиженияДенежныхСредств).КодВидаОперацииНФО, """"),
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.КорСубконто1 КАК Справочник.ФизическиеЛица).Ссылка, &ПустоеФизическоеЛицо)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОборотыКассаПоКонтрагентам.Валюта КАК Валюта,
	|	ОборотыКассаПоКонтрагентам.КодОперации КАК КодОперации,
	|	ОборотыКассаПоКонтрагентам.Контрагент КАК Контрагент,
	|	ОборотыКассаПоКонтрагентам.Приход КАК Приход,
	|	ОборотыКассаПоКонтрагентам.Расход КАК Расход
	|ПОМЕСТИТЬ ОборотыКассаПоКонтрагентамИРаботникам
	|ИЗ
	|	ОборотыКассаПоКонтрагентам КАК ОборотыКассаПоКонтрагентам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОборотыКассаПоРаботникам.Валюта,
	|	ОборотыКассаПоРаботникам.КодОперации,
	|	ОборотыКассаПоРаботникам.ФизическоеЛицо,
	|	ОборотыКассаПоРаботникам.Приход,
	|	ОборотыКассаПоРаботникам.Расход
	|ИЗ
	|	ОборотыКассаПоРаботникам КАК ОборотыКассаПоРаботникам
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Контрагент
	|ПОМЕСТИТЬ КонтрагентыФизическиеЛица
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	НЕ Контрагенты.ЭтоГруппа
	|	И Контрагенты.ЮридическоеФизическоеЛицо = &ФизическоеЛицо
	|	И Контрагенты.Ссылка В ИЕРАРХИИ
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ГруппыКонтрагентов.ГруппаКонтрагентов
	|			ИЗ
	|				РегистрСведений.ГруппыКонтрагентовФизическихЛиц КАК ГруппыКонтрагентов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГражданствоФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ГражданствоФизическихЛиц.Страна КАК СтранаРегистрации
	|ПОМЕСТИТЬ ГражданствоРаботников
	|ИЗ
	|	РегистрСведений.ГражданствоФизическихЛиц.СрезПоследних(&КонецПериода, ) КАК ГражданствоФизическихЛиц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОборотыБанкПоКонтрагентамИРаботникам.Банк КАК Банк,
	|	ОборотыБанкПоКонтрагентамИРаботникам.Валюта КАК Валюта,
	|	ВЫБОР
	|		КОГДА ОборотыБанкПоКонтрагентамИРаботникам.Контрагент = &ПустойКонтрагент
	|			ТОГДА ""НеустановленныеЛица""
	|		КОГДА ОборотыБанкПоКонтрагентамИРаботникам.Контрагент = &ПустоеФизическоеЛицо
	|			ТОГДА ""НеустановленныеЛица""
	|		КОГДА ОборотыБанкПоКонтрагентамИРаботникам.Контрагент ССЫЛКА Справочник.ФизическиеЛица
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ГражданствоРаботников.СтранаРегистрации, &Россия) = &Россия
	|						ТОГДА ""ФизЛица""
	|					ИНАЧЕ ""НерезидентыФизЛица""
	|				КОНЕЦ
	|		КОГДА Контрагенты.СтранаРегистрации = &Россия
	|			ТОГДА ВЫБОР
	|					КОГДА Контрагенты.ЮридическоеФизическоеЛицо = &ЮридическоеЛицо
	|						ТОГДА ""ЮрЛица""
	|					КОГДА КонтрагентыФизическиеЛица.Контрагент ЕСТЬ НЕ NULL 
	|						ТОГДА ""ФизЛица""
	|					ИНАЧЕ ""Предприниматели""
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Контрагенты.ЮридическоеФизическоеЛицо = &ЮридическоеЛицо
	|					ТОГДА ""НерезидентыЮрЛица""
	|				ИНАЧЕ ""НерезидентыФизЛица""
	|			КОНЕЦ
	|	КОНЕЦ КАК ВидКонтрагентов,
	|	ОборотыБанкПоКонтрагентамИРаботникам.КодОперации КАК КодОперации,
	|	ЕСТЬNULL(Контрагенты.СтранаРегистрации, ЕСТЬNULL(ГражданствоРаботников.СтранаРегистрации, &Россия)) КАК СтранаРегистрации,
	|	СУММА(ОборотыБанкПоКонтрагентамИРаботникам.Приход) КАК Приход,
	|	СУММА(ОборотыБанкПоКонтрагентамИРаботникам.Расход) КАК Расход
	|ПОМЕСТИТЬ ОборотыБанкПоВидамКонтрагентов
	|ИЗ
	|	ОборотыБанкПоКонтрагентамИРаботникам КАК ОборотыБанкПоКонтрагентамИРаботникам
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ОборотыБанкПоКонтрагентамИРаботникам.Контрагент = Контрагенты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ КонтрагентыФизическиеЛица КАК КонтрагентыФизическиеЛица
	|		ПО ОборотыБанкПоКонтрагентамИРаботникам.Контрагент = КонтрагентыФизическиеЛица.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ ГражданствоРаботников КАК ГражданствоРаботников
	|		ПО ОборотыБанкПоКонтрагентамИРаботникам.Контрагент = ГражданствоРаботников.ФизическоеЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ОборотыБанкПоКонтрагентамИРаботникам.Банк,
	|	ОборотыБанкПоКонтрагентамИРаботникам.Валюта,
	|	ВЫБОР
	|		КОГДА ОборотыБанкПоКонтрагентамИРаботникам.Контрагент = &ПустойКонтрагент
	|			ТОГДА ""НеустановленныеЛица""
	|		КОГДА ОборотыБанкПоКонтрагентамИРаботникам.Контрагент = &ПустоеФизическоеЛицо
	|			ТОГДА ""НеустановленныеЛица""
	|		КОГДА ОборотыБанкПоКонтрагентамИРаботникам.Контрагент ССЫЛКА Справочник.ФизическиеЛица
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ГражданствоРаботников.СтранаРегистрации, &Россия) = &Россия
	|						ТОГДА ""ФизЛица""
	|					ИНАЧЕ ""НерезидентыФизЛица""
	|				КОНЕЦ
	|		КОГДА Контрагенты.СтранаРегистрации = &Россия
	|			ТОГДА ВЫБОР
	|					КОГДА Контрагенты.ЮридическоеФизическоеЛицо = &ЮридическоеЛицо
	|						ТОГДА ""ЮрЛица""
	|					КОГДА КонтрагентыФизическиеЛица.Контрагент ЕСТЬ НЕ NULL 
	|						ТОГДА ""ФизЛица""
	|					ИНАЧЕ ""Предприниматели""
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Контрагенты.ЮридическоеФизическоеЛицо = &ЮридическоеЛицо
	|					ТОГДА ""НерезидентыЮрЛица""
	|				ИНАЧЕ ""НерезидентыФизЛица""
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ОборотыБанкПоКонтрагентамИРаботникам.КодОперации,
	|	ЕСТЬNULL(Контрагенты.СтранаРегистрации, ЕСТЬNULL(ГражданствоРаботников.СтранаРегистрации, &Россия))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОборотыБанкПоВидамКонтрагентов.Банк КАК Банк,
	|	ОборотыБанкПоВидамКонтрагентов.Валюта КАК Валюта,
	|	ОборотыБанкПоВидамКонтрагентов.КодОперации КАК КодОперации,
	|	СУММА(ОборотыБанкПоВидамКонтрагентов.Приход) КАК Приход,
	|	СУММА(ОборотыБанкПоВидамКонтрагентов.Расход) КАК Расход
	|ПОМЕСТИТЬ ОборотыБанкПоКонтрагентамСвернуто
	|ИЗ
	|	ОборотыБанкПоВидамКонтрагентов КАК ОборотыБанкПоВидамКонтрагентов
	|
	|СГРУППИРОВАТЬ ПО
	|	ОборотыБанкПоВидамКонтрагентов.Банк,
	|	ОборотыБанкПоВидамКонтрагентов.Валюта,
	|	ОборотыБанкПоВидамКонтрагентов.КодОперации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Банк,
	|	Валюта,
	|	КодОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеОборотыБанк.Банк КАК Банк,
	|	ВсеОборотыБанк.Валюта КАК Валюта,
	|	ВсеОборотыБанк.КодОперации КАК КодОперации,
	|	ВсеОборотыБанк.Приход - ЕСТЬNULL(ОборотыБанкПоКонтрагентамСвернуто.Приход, 0) КАК Приход,
	|	ВсеОборотыБанк.Расход - ЕСТЬNULL(ОборотыБанкПоКонтрагентамСвернуто.Расход, 0) КАК Расход
	|ПОМЕСТИТЬ ОборотыБанкБезКонтрагентов
	|ИЗ
	|	ВсеОборотыБанк КАК ВсеОборотыБанк
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОборотыБанкПоКонтрагентамСвернуто КАК ОборотыБанкПоКонтрагентамСвернуто
	|		ПО ВсеОборотыБанк.Банк = ОборотыБанкПоКонтрагентамСвернуто.Банк
	|			И ВсеОборотыБанк.Валюта = ОборотыБанкПоКонтрагентамСвернуто.Валюта
	|			И ВсеОборотыБанк.КодОперации = ОборотыБанкПоКонтрагентамСвернуто.КодОперации
	|ГДЕ
	|	(ВсеОборотыБанк.Приход - ЕСТЬNULL(ОборотыБанкПоКонтрагентамСвернуто.Приход, 0) <> 0
	|			ИЛИ ВсеОборотыБанк.Расход - ЕСТЬNULL(ОборотыБанкПоКонтрагентамСвернуто.Расход, 0) <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОборотыКассаПоКонтрагентамИРаботникам.Валюта КАК Валюта,
	|	ВЫБОР
	|		КОГДА ОборотыКассаПоКонтрагентамИРаботникам.Контрагент = &ПустойКонтрагент
	|			ТОГДА ""ЮрЛица""
	|		КОГДА ОборотыКассаПоКонтрагентамИРаботникам.Контрагент = &ПустоеФизическоеЛицо
	|			ТОГДА ""ЮрЛица""
	|		КОГДА ОборотыКассаПоКонтрагентамИРаботникам.Контрагент ССЫЛКА Справочник.ФизическиеЛица
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ГражданствоРаботников.СтранаРегистрации, &Россия) = &Россия
	|						ТОГДА ""ФизЛица""
	|					ИНАЧЕ ""НерезидентыФизЛица""
	|				КОНЕЦ
	|		КОГДА Контрагенты.СтранаРегистрации = &Россия
	|			ТОГДА ВЫБОР
	|					КОГДА Контрагенты.ЮридическоеФизическоеЛицо = &ЮридическоеЛицо
	|						ТОГДА ""ЮрЛица""
	|					КОГДА КонтрагентыФизическиеЛица.Контрагент ЕСТЬ НЕ NULL 
	|						ТОГДА ""ФизЛица""
	|					ИНАЧЕ ""Предприниматели""
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Контрагенты.ЮридическоеФизическоеЛицо = &ЮридическоеЛицо
	|					ТОГДА ""НерезидентыЮрЛица""
	|				ИНАЧЕ ""НерезидентыФизЛица""
	|			КОНЕЦ
	|	КОНЕЦ КАК ВидКонтрагентов,
	|	ОборотыКассаПоКонтрагентамИРаботникам.КодОперации КАК КодОперации,
	|	ЕСТЬNULL(Контрагенты.СтранаРегистрации, ЕСТЬNULL(ГражданствоРаботников.СтранаРегистрации, &Россия)) КАК СтранаРегистрации,
	|	СУММА(ОборотыКассаПоКонтрагентамИРаботникам.Приход) КАК Приход,
	|	СУММА(ОборотыКассаПоКонтрагентамИРаботникам.Расход) КАК Расход
	|ПОМЕСТИТЬ ОборотыКассаПоВидамКонтрагентов
	|ИЗ
	|	ОборотыКассаПоКонтрагентамИРаботникам КАК ОборотыКассаПоКонтрагентамИРаботникам
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ОборотыКассаПоКонтрагентамИРаботникам.Контрагент = Контрагенты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ КонтрагентыФизическиеЛица КАК КонтрагентыФизическиеЛица
	|		ПО ОборотыКассаПоКонтрагентамИРаботникам.Контрагент = КонтрагентыФизическиеЛица.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ ГражданствоРаботников КАК ГражданствоРаботников
	|		ПО ОборотыКассаПоКонтрагентамИРаботникам.Контрагент = ГражданствоРаботников.ФизическоеЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ОборотыКассаПоКонтрагентамИРаботникам.Валюта,
	|	ВЫБОР
	|		КОГДА ОборотыКассаПоКонтрагентамИРаботникам.Контрагент = &ПустойКонтрагент
	|			ТОГДА ""ЮрЛица""
	|		КОГДА ОборотыКассаПоКонтрагентамИРаботникам.Контрагент = &ПустоеФизическоеЛицо
	|			ТОГДА ""ЮрЛица""
	|		КОГДА ОборотыКассаПоКонтрагентамИРаботникам.Контрагент ССЫЛКА Справочник.ФизическиеЛица
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ГражданствоРаботников.СтранаРегистрации, &Россия) = &Россия
	|						ТОГДА ""ФизЛица""
	|					ИНАЧЕ ""НерезидентыФизЛица""
	|				КОНЕЦ
	|		КОГДА Контрагенты.СтранаРегистрации = &Россия
	|			ТОГДА ВЫБОР
	|					КОГДА Контрагенты.ЮридическоеФизическоеЛицо = &ЮридическоеЛицо
	|						ТОГДА ""ЮрЛица""
	|					КОГДА КонтрагентыФизическиеЛица.Контрагент ЕСТЬ НЕ NULL 
	|						ТОГДА ""ФизЛица""
	|					ИНАЧЕ ""Предприниматели""
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Контрагенты.ЮридическоеФизическоеЛицо = &ЮридическоеЛицо
	|					ТОГДА ""НерезидентыЮрЛица""
	|				ИНАЧЕ ""НерезидентыФизЛица""
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ОборотыКассаПоКонтрагентамИРаботникам.КодОперации,
	|	ЕСТЬNULL(Контрагенты.СтранаРегистрации, ЕСТЬNULL(ГражданствоРаботников.СтранаРегистрации, &Россия))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОборотыКассаПоВидамКонтрагентов.Валюта КАК Валюта,
	|	ОборотыКассаПоВидамКонтрагентов.КодОперации КАК КодОперации,
	|	СУММА(ОборотыКассаПоВидамКонтрагентов.Приход) КАК Приход,
	|	СУММА(ОборотыКассаПоВидамКонтрагентов.Расход) КАК Расход
	|ПОМЕСТИТЬ ОборотыКассаПоКонтрагентамСвернуто
	|ИЗ
	|	ОборотыКассаПоВидамКонтрагентов КАК ОборотыКассаПоВидамКонтрагентов
	|
	|СГРУППИРОВАТЬ ПО
	|	ОборотыКассаПоВидамКонтрагентов.Валюта,
	|	ОборотыКассаПоВидамКонтрагентов.КодОперации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта,
	|	КодОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеОборотыКасса.Валюта КАК Валюта,
	|	ВсеОборотыКасса.КодОперации КАК КодОперации,
	|	ВсеОборотыКасса.Приход - ЕСТЬNULL(ОборотыКассаПоКонтрагентамСвернуто.Приход, 0) КАК Приход,
	|	ВсеОборотыКасса.Расход - ЕСТЬNULL(ОборотыКассаПоКонтрагентамСвернуто.Расход, 0) КАК Расход
	|ПОМЕСТИТЬ ОборотыКассаБезКонтрагентов
	|ИЗ
	|	ВсеОборотыКасса КАК ВсеОборотыКасса
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОборотыКассаПоКонтрагентамСвернуто КАК ОборотыКассаПоКонтрагентамСвернуто
	|		ПО ВсеОборотыКасса.Валюта = ОборотыКассаПоКонтрагентамСвернуто.Валюта
	|			И ВсеОборотыКасса.КодОперации = ОборотыКассаПоКонтрагентамСвернуто.КодОперации
	|ГДЕ
	|	(ВсеОборотыКасса.Приход - ЕСТЬNULL(ОборотыКассаПоКонтрагентамСвернуто.Приход, 0) <> 0
	|			ИЛИ ВсеОборотыКасса.Расход - ЕСТЬNULL(ОборотыКассаПоКонтрагентамСвернуто.Расход, 0) <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиБанк.Банк КАК Банк,
	|	ОстаткиБанк.Валюта КАК Валюта,
	|	Валюты.Код КАК КодВалюты,
	|	Валюты.НаименованиеПолное КАК НаименованиеВалюты,
	|	ОстаткиБанк.НачОстаток КАК НачОстаток,
	|	ОстаткиБанк.Приход КАК Приход,
	|	ОстаткиБанк.Расход КАК Расход,
	|	ОстаткиБанк.КонОстаток КАК КонОстаток,
	|	Банки.Код КАК БИК,
	|	Банки.Наименование КАК Наименование,
	|	ЕСТЬNULL(РегистрационныеНомераБанков.РегистрационныйНомер, """") КАК РегистрационныйНомер,
	|	ЕСТЬNULL(РегистрационныеНомераБанков.ПорядковыйНомерФилиала, """") КАК ПорядковыйНомерФилиала
	|ИЗ
	|	ОстаткиБанк КАК ОстаткиБанк
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Банки КАК Банки
	|		ПО ОстаткиБанк.Банк = Банки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрационныеНомераБанков КАК РегистрационныеНомераБанков
	|		ПО ОстаткиБанк.Банк = РегистрационныеНомераБанков.Банк
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Валюты КАК Валюты
	|		ПО ОстаткиБанк.Валюта = Валюты.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование,
	|	КодВалюты
	|ИТОГИ
	|	МАКСИМУМ(БИК),
	|	МАКСИМУМ(Наименование),
	|	МАКСИМУМ(РегистрационныйНомер),
	|	МАКСИМУМ(ПорядковыйНомерФилиала)
	|ПО
	|	Банк
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиКасса.НачОстаток КАК НачОстаток,
	|	ОстаткиКасса.Приход КАК Приход,
	|	ОстаткиКасса.Расход КАК Расход,
	|	ОстаткиКасса.КонОстаток КАК КонОстаток
	|ИЗ
	|	ОстаткиКасса КАК ОстаткиКасса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОборотыБанкПолные.Банк,
	|	ОборотыБанкПолные.Валюта,
	|	ОборотыБанкПолные.ВидКонтрагентов,
	|	ОборотыБанкПолные.КодОперации,
	|	СУММА(ОборотыБанкПолные.Приход) КАК Приход,
	|	СУММА(ОборотыБанкПолные.Расход) КАК Расход
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОборотыБанкПоВидамКонтрагентов.Банк КАК Банк,
	|		ОборотыБанкПоВидамКонтрагентов.Валюта КАК Валюта,
	|		ОборотыБанкПоВидамКонтрагентов.ВидКонтрагентов КАК ВидКонтрагентов,
	|		ОборотыБанкПоВидамКонтрагентов.КодОперации КАК КодОперации,
	|		ОборотыБанкПоВидамКонтрагентов.Приход КАК Приход,
	|		ОборотыБанкПоВидамКонтрагентов.Расход КАК Расход
	|	ИЗ
	|		ОборотыБанкПоВидамКонтрагентов КАК ОборотыБанкПоВидамКонтрагентов
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОборотыБанкБезКонтрагентов.Банк,
	|		ОборотыБанкБезКонтрагентов.Валюта,
	|		""ЮрЛица"",
	|		ОборотыБанкБезКонтрагентов.КодОперации,
	|		ОборотыБанкБезКонтрагентов.Приход,
	|		ОборотыБанкБезКонтрагентов.Расход
	|	ИЗ
	|		ОборотыБанкБезКонтрагентов КАК ОборотыБанкБезКонтрагентов) КАК ОборотыБанкПолные
	|
	|СГРУППИРОВАТЬ ПО
	|	ОборотыБанкПолные.Банк,
	|	ОборотыБанкПолные.Валюта,
	|	ОборотыБанкПолные.ВидКонтрагентов,
	|	ОборотыБанкПолные.КодОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОборотыКассаПолные.Валюта,
	|	ОборотыКассаПолные.ВидКонтрагентов,
	|	ОборотыКассаПолные.КодОперации,
	|	СУММА(ОборотыКассаПолные.Приход) КАК Приход,
	|	СУММА(ОборотыКассаПолные.Расход) КАК Расход
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОборотыКассаПоВидамКонтрагентов.Валюта КАК Валюта,
	|		ОборотыКассаПоВидамКонтрагентов.ВидКонтрагентов КАК ВидКонтрагентов,
	|		ОборотыКассаПоВидамКонтрагентов.КодОперации КАК КодОперации,
	|		ОборотыКассаПоВидамКонтрагентов.Приход КАК Приход,
	|		ОборотыКассаПоВидамКонтрагентов.Расход КАК Расход
	|	ИЗ
	|		ОборотыКассаПоВидамКонтрагентов КАК ОборотыКассаПоВидамКонтрагентов
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОборотыКассаБезКонтрагентов.Валюта,
	|		""ЮрЛица"",
	|		ОборотыКассаБезКонтрагентов.КодОперации,
	|		ОборотыКассаБезКонтрагентов.Приход,
	|		ОборотыКассаБезКонтрагентов.Расход
	|	ИЗ
	|		ОборотыКассаБезКонтрагентов КАК ОборотыКассаБезКонтрагентов) КАК ОборотыКассаПолные
	|
	|СГРУППИРОВАТЬ ПО
	|	ОборотыКассаПолные.Валюта,
	|	ОборотыКассаПолные.ВидКонтрагентов,
	|	ОборотыКассаПолные.КодОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОборотыБанкПоВидамКонтрагентов.Банк,
	|	ОборотыБанкПоВидамКонтрагентов.ВидКонтрагентов,
	|	ОборотыБанкПоВидамКонтрагентов.СтранаРегистрации.Код КАК КодСтраны,
	|	ОборотыБанкПоВидамКонтрагентов.КодОперации,
	|	ОборотыБанкПоВидамКонтрагентов.Валюта.Код КАК КодВалюты,
	|	ОборотыБанкПоВидамКонтрагентов.Приход,
	|	ОборотыБанкПоВидамКонтрагентов.Расход
	|ИЗ
	|	ОборотыБанкПоВидамКонтрагентов КАК ОборотыБанкПоВидамКонтрагентов
	|ГДЕ
	|	ОборотыБанкПоВидамКонтрагентов.СтранаРегистрации <> &Россия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОборотыКассаПоВидамКонтрагентов.СтранаРегистрации.Код КАК КодСтраны,
	|	ОборотыКассаПоВидамКонтрагентов.КодОперации,
	|	СУММА(ОборотыКассаПоВидамКонтрагентов.Приход) КАК Приход,
	|	СУММА(ОборотыКассаПоВидамКонтрагентов.Расход) КАК Расход
	|ИЗ
	|	ОборотыКассаПоВидамКонтрагентов КАК ОборотыКассаПоВидамКонтрагентов
	|ГДЕ
	|	ОборотыКассаПоВидамКонтрагентов.СтранаРегистрации <> &Россия
	|
	|СГРУППИРОВАТЬ ПО
	|	ОборотыКассаПоВидамКонтрагентов.СтранаРегистрации.Код,
	|	ОборотыКассаПоВидамКонтрагентов.КодОперации";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Результат = Новый Структура;
	Результат.Вставить("Банки",            РезультатЗапроса[18].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам));
	Результат.Вставить("Касса",            РезультатЗапроса[19].Выгрузить());
	Результат.Вставить("ОперацииБанк",     РезультатЗапроса[20].Выгрузить());
	Результат.Вставить("ОперацииКасса",    РезультатЗапроса[21].Выгрузить());
	Результат.Вставить("НерезидентыБанк",  РезультатЗапроса[22].Выгрузить());
	Результат.Вставить("НерезидентыКасса", РезультатЗапроса[23].Выгрузить());
	
	Возврат Результат;

КонецФункции

Функция НовоеДеревоДанных()

	Результат = Новый ДеревоЗначений;
	Результат.Колонки.Добавить("Данные");
	Результат.Колонки.Добавить("ДанныеМногострочныхЧастей");
	Возврат Результат;

КонецФункции

Функция ОперацииПоВидуКонтрагентов(Операции, Отбор, ВидКонтрагентов)
	
	Отбор.Вставить("ВидКонтрагентов", ВидКонтрагентов);
	Результат = Операции.Скопировать(Отбор);
	Результат.Сортировать("КодОперации");
	Возврат Результат;

КонецФункции

Функция ОперацииНерезидентов(Операции, Отбор, ВидКонтрагентов)
	
	Отбор.Вставить("ВидКонтрагентов", ВидКонтрагентов);
	Результат = Операции.Скопировать(Отбор);
	Результат.Сортировать("КодСтраны,КодОперации,КодВалюты");
	Возврат Результат;

КонецФункции

Функция НоваяСтрокаРаздел1(ДеревоРаздела)

	НоваяСтрока = ДеревоРаздела.Строки.Добавить();
	НоваяСтрока.Данные = Новый Структура;
	НоваяСтрока.ДанныеМногострочныхЧастей = Новый Структура;
	
	// Общие данные для разделов 1.1 - 1.3.
	НоваяСтрока.Данные.Вставить("РегНомерКредОрг", "");
	НоваяСтрока.Данные.Вставить("ПорядНомерФил",   "");
	НоваяСтрока.Данные.Вставить("БИККредОрг",      "");
	НоваяСтрока.Данные.Вставить("СокрНаимКредОрг", "");
	
	// Подразделы
	СтрокаРаздел11 = НоваяСтрока.Строки.Добавить();
	СтрокаРаздел12 = НоваяСтрока.Строки.Добавить();
	СтрокаРаздел13 = НоваяСтрока.Строки.Добавить();
	
	Возврат НоваяСтрока;

КонецФункции

Функция НоваяСтрокаСтраница11(СтрокаРаздел11)

	НоваяСтрока = СтрокаРаздел11.Строки.Добавить();
	НоваяСтрока.Данные = Новый Структура;
	НоваяСтрока.ДанныеМногострочныхЧастей = Новый Структура;
		
	НоваяСтрока.Данные.Вставить("Валюта",            "");
	НоваяСтрока.Данные.Вставить("ОстаткиНачПериода", 0);
	НоваяСтрока.Данные.Вставить("ОборотыСписание",   0);
	НоваяСтрока.Данные.Вставить("ОборотыЗачисление", 0);
	НоваяСтрока.Данные.Вставить("ОстаткиКонПериода", 0);
	
	НоваяСтрока.ДанныеМногострочныхЧастей.Вставить("П11100", НовоеДеревоДанных());
	НоваяСтрока.ДанныеМногострочныхЧастей.Вставить("П11200", НовоеДеревоДанных());
	НоваяСтрока.ДанныеМногострочныхЧастей.Вставить("П11300", НовоеДеревоДанных());
	НоваяСтрока.ДанныеМногострочныхЧастей.Вставить("П11400", НовоеДеревоДанных());
	НоваяСтрока.ДанныеМногострочныхЧастей.Вставить("П11500", НовоеДеревоДанных());
	НоваяСтрока.ДанныеМногострочныхЧастей.Вставить("П11600", НовоеДеревоДанных());
	
	Возврат НоваяСтрока;

КонецФункции

Функция НоваяСтрокаСтраница12(СтрокаРаздел12)

	НоваяСтрока = СтрокаРаздел12.Строки.Добавить();
	НоваяСтрока.Данные = Новый Структура;
	НоваяСтрока.ДанныеМногострочныхЧастей = Новый Структура;
	
	НоваяСтрока.ДанныеМногострочныхЧастей.Вставить("П12100", НовоеДеревоДанных());
	НоваяСтрока.ДанныеМногострочныхЧастей.Вставить("П12200", НовоеДеревоДанных());
		
	Возврат НоваяСтрока;

КонецФункции

Функция НоваяСтрокаСтраница13(ДеревоРаздела)

	НоваяСтрока = ДеревоРаздела.Строки.Добавить();
	НоваяСтрока.Данные = Новый Структура;
	НоваяСтрока.ДанныеМногострочныхЧастей = Новый Структура;
	
	НоваяСтрока.ДанныеМногострочныхЧастей.Вставить("П13000", НовоеДеревоДанных());

	Возврат НоваяСтрока;

КонецФункции

Функция НоваяСтрокаСтраница21(ДеревоРаздела)

	НоваяСтрока = ДеревоРаздела.Строки.Добавить();
	НоваяСтрока.Данные = Новый Структура;
	НоваяСтрока.ДанныеМногострочныхЧастей = Новый Структура;
	
	НоваяСтрока.Данные.Вставить("ОстаткиНачПериода", 0);
	НоваяСтрока.Данные.Вставить("ОборотыСписание",   0);
	НоваяСтрока.Данные.Вставить("ОборотыЗачисление", 0);
	НоваяСтрока.Данные.Вставить("ОстаткиКонПериода", 0);
	
	НоваяСтрока.ДанныеМногострочныхЧастей.Вставить("П21100", НовоеДеревоДанных());
	НоваяСтрока.ДанныеМногострочныхЧастей.Вставить("П21200", НовоеДеревоДанных());
	НоваяСтрока.ДанныеМногострочныхЧастей.Вставить("П21300", НовоеДеревоДанных());
	НоваяСтрока.ДанныеМногострочныхЧастей.Вставить("П21400", НовоеДеревоДанных());
	НоваяСтрока.ДанныеМногострочныхЧастей.Вставить("П21500", НовоеДеревоДанных());

	Возврат НоваяСтрока;

КонецФункции 

Функция НоваяСтрокаСтраница22(ДеревоРаздела)

	НоваяСтрока = ДеревоРаздела.Строки.Добавить();
	НоваяСтрока.Данные = Новый Структура;
	НоваяСтрока.ДанныеМногострочныхЧастей = Новый Структура;
	
	НоваяСтрока.ДанныеМногострочныхЧастей.Вставить("П22000", НовоеДеревоДанных());

	Возврат НоваяСтрока;

КонецФункции

Функция НоваяСтрокаТаблицыОперации(СтрокаСтраницы, КодРаздела)
	
	СтрокиТаблицы = СтрокиТаблицыРаздела(СтрокаСтраницы, КодРаздела);
	НоваяСтрока   = СтрокиТаблицы.Добавить();
	НоваяСтрока.Данные = Новый Структура;
	НоваяСтрока.ДанныеМногострочныхЧастей = Новый Структура;
	
	НоваяСтрока.Данные.Вставить("П" + КодРаздела + "0001", "");
	НоваяСтрока.Данные.Вставить("П" + КодРаздела + "0002", 0);
	НоваяСтрока.Данные.Вставить("П" + КодРаздела + "0003", 0);
	
	Возврат НоваяСтрока;

КонецФункции

Функция НоваяСтрокаТаблицыНерезидентыБанк(СтрокаСтраницы, КодРаздела)

	СтрокиТаблицы = СтрокиТаблицыРаздела(СтрокаСтраницы, КодРаздела);
	НоваяСтрока   = СтрокиТаблицы.Добавить();
	НоваяСтрока.Данные = Новый Структура;
	НоваяСтрока.ДанныеМногострочныхЧастей = Новый Структура;
	
	НоваяСтрока.Данные.Вставить("П" + КодРаздела + "0001", "");
	НоваяСтрока.Данные.Вставить("П" + КодРаздела + "0002", "");
	НоваяСтрока.Данные.Вставить("П" + КодРаздела + "0003", "");
	НоваяСтрока.Данные.Вставить("П" + КодРаздела + "0004", 0);
	НоваяСтрока.Данные.Вставить("П" + КодРаздела + "0005", 0);
	
	Возврат НоваяСтрока;

КонецФункции

Функция НоваяСтрокаТаблицы13(СтрокаСтраницы)

	СтрокиТаблицы = СтрокиТаблицыРаздела(СтрокаСтраницы, "130");
	НоваяСтрока   = СтрокиТаблицы.Добавить();
	НоваяСтрока.Данные = Новый Структура;
	НоваяСтрока.ДанныеМногострочныхЧастей = Новый Структура;
	
	НоваяСтрока.Данные.Вставить("П1300001", "");
	НоваяСтрока.Данные.Вставить("П1300002", "");
	НоваяСтрока.Данные.Вставить("П1300003", "");
	НоваяСтрока.Данные.Вставить("П1300004", 0);
	НоваяСтрока.Данные.Вставить("П1300005", 0);
	
	Возврат НоваяСтрока;

КонецФункции

Функция НоваяСтрокаТаблицыНерезидентыКасса(СтрокаСтраницы)

	СтрокиТаблицы = СтрокиТаблицыРаздела(СтрокаСтраницы, "220");
	НоваяСтрока   = СтрокиТаблицы.Добавить();
	НоваяСтрока.Данные = Новый Структура;
	НоваяСтрока.ДанныеМногострочныхЧастей = Новый Структура;
	
	НоваяСтрока.Данные.Вставить("П2200001", "");
	НоваяСтрока.Данные.Вставить("П2200002", "");
	НоваяСтрока.Данные.Вставить("П2200003", 0);
	НоваяСтрока.Данные.Вставить("П2200004", 0);
	
	Возврат НоваяСтрока;

КонецФункции

Процедура ЗаполнитьСтрокуТаблицыОперации(ЗаполняемаяСтрока, СтрокаДанные, КодРаздела, ЗнакиПослеЗапятой)

	ЗаполняемаяСтрока.Данные["П" + КодРаздела + "0001"] = СтрокаДанные.КодОперации;
	ЗаполняемаяСтрока.Данные["П" + КодРаздела + "0002"] = Окр(СтрокаДанные.Расход / 1000, ЗнакиПослеЗапятой);
	ЗаполняемаяСтрока.Данные["П" + КодРаздела + "0003"] = Окр(СтрокаДанные.Приход / 1000, ЗнакиПослеЗапятой);
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуНерезидентыБанк(ЗаполняемаяСтрока, СтрокаДанные, КодРаздела, ЗнакиПослеЗапятой)

	ЗаполняемаяСтрока.Данные["П" + КодРаздела + "0001"] = СтрокаДанные.КодСтраны;
	ЗаполняемаяСтрока.Данные["П" + КодРаздела + "0002"] = СтрокаДанные.КодОперации;
	ЗаполняемаяСтрока.Данные["П" + КодРаздела + "0003"] = СтрокаДанные.КодВалюты;
	ЗаполняемаяСтрока.Данные["П" + КодРаздела + "0004"] = Окр(СтрокаДанные.Расход / 1000, ЗнакиПослеЗапятой);
	ЗаполняемаяСтрока.Данные["П" + КодРаздела + "0005"] = Окр(СтрокаДанные.Приход / 1000, ЗнакиПослеЗапятой);

КонецПроцедуры

Процедура ЗаполнитьСтрокуНерезидентыКасса(ЗаполняемаяСтрока, СтрокаДанные, КодРаздела, ЗнакиПослеЗапятой)

	ЗаполняемаяСтрока.Данные["П" + КодРаздела + "0001"] = СтрокаДанные.КодСтраны;
	ЗаполняемаяСтрока.Данные["П" + КодРаздела + "0002"] = СтрокаДанные.КодОперации;
	ЗаполняемаяСтрока.Данные["П" + КодРаздела + "0003"] = Окр(СтрокаДанные.Расход / 1000, ЗнакиПослеЗапятой);
	ЗаполняемаяСтрока.Данные["П" + КодРаздела + "0004"] = Окр(СтрокаДанные.Приход / 1000, ЗнакиПослеЗапятой);

КонецПроцедуры

Функция СтрокиТаблицыРаздела(СтрокаСтраницы, КодРаздела)

	СтрокиТаблицы = СтрокаСтраницы.ДанныеМногострочныхЧастей["П" + КодРаздела + "00"].Строки;
	Возврат СтрокиТаблицы;

КонецФункции

// Дополняем данные автозаполнения пустыми страницами (пустыми таблицами)
// для корректной загрузки этих данных механизмом БРО.
//
Процедура ДополнитьДанныеАвтоЗаполненияПустымиСтроками(ДеревоРаздел1, ДеревоРаздел21, ДеревоРаздел22)
	
	// Раздел 1.
	Если ДеревоРаздел1.Строки.Количество() = 0 Тогда
		СтрокаРаздел1 = НоваяСтрокаРаздел1(ДеревоРаздел1);
	КонецЕсли;
	Для каждого СтрокаРаздел1 Из ДеревоРаздел1.Строки Цикл
		
		// Раздел 1.1.
		СтрокаРаздел11 = СтрокаРаздел1.Строки[0];
		Если СтрокаРаздел11.Строки.Количество() = 0 Тогда
			СтрокаСтраница11 = НоваяСтрокаСтраница11(СтрокаРаздел11);
		КонецЕсли;
		Для каждого СтрокаСтраница11 Из СтрокаРаздел11.Строки Цикл
			Если СтрокиТаблицыРаздела(СтрокаСтраница11, "111").Количество() = 0 Тогда
				НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница11, "111");
			КонецЕсли;
			Если СтрокиТаблицыРаздела(СтрокаСтраница11, "112").Количество() = 0 Тогда
				НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница11, "112");
			КонецЕсли;
			Если СтрокиТаблицыРаздела(СтрокаСтраница11, "113").Количество() = 0 Тогда
				НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница11, "113");
			КонецЕсли;
			Если СтрокиТаблицыРаздела(СтрокаСтраница11, "114").Количество() = 0 Тогда
				НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница11, "114");
			КонецЕсли;
			Если СтрокиТаблицыРаздела(СтрокаСтраница11, "115").Количество() = 0 Тогда
				НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница11, "115");
			КонецЕсли;
			Если СтрокиТаблицыРаздела(СтрокаСтраница11, "116").Количество() = 0 Тогда
				НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница11, "116");
			КонецЕсли;
		КонецЦикла;
		
		// Раздел 1.2.
		СтрокаРаздел12 = СтрокаРаздел1.Строки[1];
		Если СтрокаРаздел12.Строки.Количество() = 0 Тогда
			СтрокаСтраница12 = НоваяСтрокаСтраница12(СтрокаРаздел12);
		КонецЕсли;
		Для каждого СтрокаСтраница12 Из СтрокаРаздел12.Строки Цикл
			Если СтрокиТаблицыРаздела(СтрокаСтраница12, "121").Количество() = 0 Тогда
				НоваяСтрока = НоваяСтрокаТаблицыНерезидентыБанк(СтрокаСтраница12, "121");
			КонецЕсли;
			Если СтрокиТаблицыРаздела(СтрокаСтраница12, "122").Количество() = 0 Тогда
				НоваяСтрока = НоваяСтрокаТаблицыНерезидентыБанк(СтрокаСтраница12, "122");
			КонецЕсли;
		КонецЦикла;
	
		// Раздел 1.3.
		СтрокаРаздел13 = СтрокаРаздел1.Строки[2];
		Если СтрокаРаздел13.Строки.Количество() = 0 Тогда
			СтрокаСтраница13 = НоваяСтрокаСтраница13(СтрокаРаздел13);
		КонецЕсли;
		Для каждого СтрокаСтраница13 Из СтрокаРаздел13.Строки Цикл
			Если СтрокиТаблицыРаздела(СтрокаСтраница13, "130").Количество() = 0 Тогда
				НоваяСтрока = НоваяСтрокаТаблицы13(СтрокаСтраница13);
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	// Раздел 2.1
	Если ДеревоРаздел21.Строки.Количество() = 0 Тогда
		СтрокаСтраница21 = НоваяСтрокаСтраница21(ДеревоРаздел21);
	КонецЕсли;
	Для каждого СтрокаСтраница21 Из ДеревоРаздел21.Строки Цикл
		Если СтрокиТаблицыРаздела(СтрокаСтраница21, "211").Количество() = 0 Тогда
			НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница21, "211");
		КонецЕсли;
		Если СтрокиТаблицыРаздела(СтрокаСтраница21, "212").Количество() = 0 Тогда
			НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница21, "212");
		КонецЕсли;
		Если СтрокиТаблицыРаздела(СтрокаСтраница21, "213").Количество() = 0 Тогда
			НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница21, "213");
		КонецЕсли;
		Если СтрокиТаблицыРаздела(СтрокаСтраница21, "214").Количество() = 0 Тогда
			НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница21, "214");
		КонецЕсли;
		Если СтрокиТаблицыРаздела(СтрокаСтраница21, "215").Количество() = 0 Тогда
			НоваяСтрока = НоваяСтрокаТаблицыОперации(СтрокаСтраница21, "215");
		КонецЕсли;
	КонецЦикла;
		
	// Раздел 2.2
	Если ДеревоРаздел22.Строки.Количество() = 0 Тогда
		СтрокаСтраница22 = НоваяСтрокаСтраница22(ДеревоРаздел22);
	КонецЕсли;
	Для каждого СтрокаСтраница22 Из ДеревоРаздел22.Строки Цикл
		Если СтрокиТаблицыРаздела(СтрокаСтраница22, "220").Количество() = 0 Тогда
			НоваяСтрока = НоваяСтрокаТаблицыНерезидентыКасса(СтрокаСтраница22);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
