////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы (БухгалтерияПредприятия).
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Сведения о библиотеке (или конфигурации).

// См. описание в общем модуле ОбновлениеИнформационнойБазыБСП.
Процедура ПриДобавленииПодсистемы(Описание) Экспорт
	
	Описание.Имя = Метаданные.Имя;
	Описание.Версия = Метаданные.Версия;
	Описание.ИдентификаторИнтернетПоддержки = ИнтернетПоддержкаПользователейБП.ИмяПрограммыДляИдентификацииВСервисахИнтернетПоддержки();
	
	Описание.ТребуемыеПодсистемы.Добавить("СтандартныеПодсистемы");
	//Описание.ТребуемыеПодсистемы.Добавить("БиблиотекаТехнологииСервиса");
	Описание.ТребуемыеПодсистемы.Добавить("РегламентированнаяОтчетность");
	//Описание.ТребуемыеПодсистемы.Добавить("БиблиотекаЭлектронныхДокументов");
	//Описание.ТребуемыеПодсистемы.Добавить("ЗарплатаКадрыБазовая");
	//Описание.ТребуемыеПодсистемы.Добавить("БиблиотекаПодключаемогоОборудования");
	//
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики обновления информационной базы.

// См. описание в ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления() .
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	
//	// Подключаются процедуры-обработчики обновления конфигурации
//	// Обработчики обновления обменов данными
//	РасширенныйФункционал.ПриДобавленииОбработчиковОбновления(Обработчики);
//	УчетОбособленныхПодразделений.ПриДобавленииОбработчиковОбновления(Обработчики);
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ПервыйЗапускОбщиеДанные";
//	Обработчик.ОбщиеДанные = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ПервыйЗапуск";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "0.0.0.2";
//	Обработчик.Процедура = "ОбновлениеСПредыдущейРедакции.ЗаполнениеРеквизитовОрганизацииПриОбновленииС20";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "0.0.0.3";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ОбновитьОрганизацииКонтрагентыЮрФизЛицо";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "0.0.0.4";
//	Обработчик.Процедура = "ОбновлениеСПредыдущейРедакции.ПодготовитьДанныеУчетнойПолитики";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "*";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.УстановитьДатуТекущейВерсии";
//	Обработчик.ОбщиеДанные = Истина;
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.РежимВыполнения = "Оперативно";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.10";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.РазделитьЗадолженностьВДокументах";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.10";
//	Обработчик.Процедура = "ОбновлениеСПредыдущейРедакции.УстановитьКонстантыПриПереходеС20";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.10";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.УстановитьКорректировкуДляДокументовПоЗП";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.10";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.УстановитьКорректировкуДляДокументовПоНалогамСФОТ";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.10";
//	Обработчик.Процедура = "УчетДенежныхСредствБП.ОчиститьБанкиОтНеиспользуемыхЭлементов";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.10";
//	Обработчик.Процедура = "УчетДенежныхСредствБП.УстановитьВДокументахСтатьюДДСИзРасшифровкаПлатежа";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.11";
//	Обработчик.Процедура = "УчетДенежныхСредствБП.ОчиститьВДокументахРасшифровкуПлатежа";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.13";
//	Обработчик.Процедура = "ОбновлениеСПредыдущейРедакции.УстановитьНеобходимостьЗаполненияПоследовательностей";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.13";
//	Обработчик.Процедура = "ОбновлениеСПредыдущейРедакции.СброситьНеактуальностьРегламентныхОпераций";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.13";
//	Обработчик.Процедура = "Обработки.ПомощникПереходаСРедакции20.ВыполнитьСохранениеНумерацииПриОбновлении";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.1.13";
//	Обработчик.Процедура           = "Документы.РеализацияТоваровУслуг.ЗаменитьВидыОперацийНаПростыеПриПереходеС20Отложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Заменяет вид операции ""Товары, услуги, комиссия"" в документе ""Реализация (акт, накладная)""
//			| на простые виды ""Товары"" и ""Услуги"".'");
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор = Новый УникальныйИдентификатор("9a18b6ef-cc3c-4ad3-a893-c94d98efd862");
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.1.13";
//	Обработчик.Процедура           = "Документы.ПоступлениеТоваровУслуг.ЗаменитьВидыОперацийНаПростыеПриПереходеС20Отложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Заменяет вид операции ""Товары, услуги, комиссия"" в документе ""Поступление (акт, накладная)""
//			| на простые виды ""Товары"" и ""Услуги"".'");
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор = Новый УникальныйИдентификатор("f8756aa8-d0a5-4ff2-aa39-2cba37bbaeb6");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.11";
//	Обработчик.Процедура = "ОбновлениеСПредыдущейРедакции.ОчиститьТиповыеОперацииОперацииБухПриПереходеС20";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.13";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаполнитьЗначениеРеквизитаВалютный";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.13";
//	Обработчик.Процедура = "Справочники.ДоговорыКонтрагентов.ЗаполнитьПризнакОплатаВВалюте";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.13";
//	Обработчик.Процедура = "ОбновлениеСПредыдущейРедакции.ПереносКИиДопСвойствПриОбновленииС20";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.13";
//	Обработчик.Процедура = "ОбновлениеСПредыдущейРедакции.ПереносОсновнойОрганизацииПриОбновленииС20";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.13";
//	Обработчик.Процедура = "ОбновлениеСПредыдущейРедакции.ПеренестиПрисоединенныеФайлы";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.13";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаполнитьТабличныеЧастиНоменклатурыДокументаВНО";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.13";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаполнитьТабличныеЧастиРасчетовСКонтрагентамиДокументаВНО";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.13";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаполнитьТабличныеЧастиРасчетовСПодотчетнымиЛицамиДокументаВНО";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.13";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаполнитьКлючиСвязейТабличныхЧастейДокументаВНО";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.13";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаполнитьТабличныеЧастиДанныхПоНДСДокументаВНО";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.13";
//	Обработчик.Процедура = "СрокиОплатыДокументов.УстановитьСрокиОплатыСчетов";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.14";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаменитьТипыСкладовВРегистреСчетовУчетаНоменклатуры";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.14";
//	Обработчик.Процедура = "ОбновлениеСПредыдущейРедакции.КонвертироватьДокументыФизическихЛицС20";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.14";
//	Обработчик.Процедура = "ЗарплатаКадрыОбновлениеСПредыдущейРедакции.ЗарплатаКадрыОбновлениеС20";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.14";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаполнитьТабличныеЧастиРасчетовПоЗаработнойПлатеДокументаВНО";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.15";
//	Обработчик.Процедура = "ОбменДаннымиОбновлениеСПредыдущейРедакции.ВыполнитьПереносПлановОбменаБСП";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.15";
//	Обработчик.Процедура = "ОбменДаннымиОбновлениеСПредыдущейРедакции.ВыполнитьПереносПлановОбменаУниверсальногоОбмена";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.2.7";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.УстановитьСубконтоНаСчетахПереводыВПути";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.13";
//	Обработчик.Процедура = "ОбновлениеСПредыдущейРедакции.ПроизвестиЗаменуСсылокНаНовыйПредопределенныйЭлементСтранМира";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.13";
//	Обработчик.Процедура = "ОбновлениеСПредыдущейРедакции.ПроизвестиЗаменуСсылокНаНовыйПредопределенныйЭлементГруппыПользователей";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.13";
//	Обработчик.Процедура = "ОбновлениеСПредыдущейРедакции.УстановитьНачальныеНастройкиПользователей";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.1.13";
//	Обработчик.Процедура           = "Документы.ИнвентаризацияНЗП.УстановитьПроведен";
//	Обработчик.НачальноеЗаполнение = Истина; // Для того, чтобы выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий         = НСтр("ru = 'Устанавливает признак ""Проведен"" в документах ""Инвентаризация НЗП""'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор = Новый УникальныйИдентификатор("ea220e52-bd42-4644-84cc-9db9b7083225");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.1.13";
//	Обработчик.Процедура           = "Документы.ПлатежноеПоручение.УстановитьПроведен";
//	Обработчик.НачальноеЗаполнение = Истина; // Для того, чтобы выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий         = НСтр("ru = 'Устанавливает признак ""Проведен"" в документах ""Платежное поручение""'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("ed990976-b518-4cc0-93d8-987dc709f613");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.1.13";
//	Обработчик.Процедура           = "Документы.ПлатежноеТребование.УстановитьПроведен";
//	Обработчик.НачальноеЗаполнение = Истина; // Для того, чтобы выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий         = НСтр("ru = 'Устанавливает признак ""Проведен"" в документах ""Платежное требование""'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("aed6a050-77a1-4662-88f5-6a5880067eda");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.1.13";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ВключитьПроверкуКонтрагентов";
//	Обработчик.НачальноеЗаполнение = Истина; // Для того, чтобы выполнять при обновлении с 2БП на 3БП
//	Обработчик.ОбщиеДанные         = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.1.13";
//	Обработчик.Процедура = "ОбновлениеСПредыдущейРедакции.ОбработатьУплатыТорговогоСбораНаУСНДоходыПриПереходеС20";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия    = "3.0.4.1";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаполнитьВидАктиваДляРБП";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия    = "3.0.4.1";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаполнитьКодВидаИмущества";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия    = "3.0.5.1";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ОбработатьДобавлениеСчетовКорректировкиПрошлогоПериода";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	// Установка вида счета-фактуры для счета-фактуры полученного
//	// заполнение новых реквизитов
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия    = "3.0.5.1";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ОбновитьСчетФактуруПолученный";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия    = "3.0.5.1";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаполнитьСпособПризнанияНИОКР";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	// Конвертация сведений об отражении зарплаты в учете
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия    = "3.0.5.2";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.КонвертацияСведенийОбОтраженииЗарплатыВУчете";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	// Обработка добавления нового счета 50.04
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия    = "3.0.6.2";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ОбработкаДобавленияНовогоСчета_50_04";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	//Обновление плана счетов
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия    = "3.0.6.2";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаполнениеКодовБыстрогоВыбора";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.8.1";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаполнитьТЧПокупателиОтчетКомиссионераОПродажах";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.8.1";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.УстановитьДатуНачалаДействияПостановления1137";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.8.13";
//	Обработчик.Процедура = "УчетДенежныхСредствБП.УстановитьСуммуУслугВТЧРасшифровкаПлатежаВДокументахПоступлениеНаРС";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.8.13";
//	Обработчик.Процедура = "УчетДенежныхСредствБП.УстановитьКурсНаДатуПриобретенияРеализацииВалютыВТЧРасшифровкаПлатежаВДокументахПоступлениеНаРС";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.9.1";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.УстановитьИспользоватьРучнуюКорректировкуДвижений";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.9.1";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ОпределитьПараметруУчетаРасчетовСРаботниками";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.10.8";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ВключитьРежимРазделенияИтоговРегистровНакопленийИБухгалтерии";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.10.8";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.УстановитьКорректировкуДляДокументовВНОПоНалогам";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.11.2";
//	Обработчик.Процедура = "ОбновлениеСПредыдущейРедакции.ЗаполнитьИспользуемыеСистемыНалогообложения";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.11.2";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.УстановитьКорректировкуДляРегистрацийОплатыОсновныхСредствИП";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.11.5";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ОбновитьНаименованиеРубля";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.12.1";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаполнениеОсновнойНоменклатурнойГруппыВидовДеятельностиИП";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.12.1";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаполнениеНоменклатурныхГруппРеализацииПродукцииУслуг";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.12.1";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаполнитьВидОперацииВОтчетеКомитентуОПродажах";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.12.2";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаполнениеВидаКодаОперацииСчетФактуры";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия    = "3.0.12.6";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ПереносДвиженийДокументовУчетаЗарплаты";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия    = "3.0.13.1";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.СоздатьНастройкиУчетаЗарплаты";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия    = "3.0.15.1";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.УстановитьКорректировкуДляСчетовФактурПолученных_НДСПредъявленКВычету";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия    = "3.0.15.1";
//	Обработчик.Процедура = "ОбновлениеСПредыдущейРедакции.ОбновитьРИБПриПереходе20На30";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия    = "3.0.16.1";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаполнениеКППКонтрагентаЖурналаУчетаСчетовФактур";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия    = "3.0.16.1";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ОбработкаИзмененияПризнакаСчетаВНО";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия    = "3.0.16.1";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ОбновлениеРегистраРеквизитыУплатыНалоговИПлатежейВБюджет";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия    = "3.0.16.8";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗарегистрироватьИзменинияИдентификаторовОбъектовМетаданных";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия    = "3.0.16.10";
//	Обработчик.Процедура = "РегламентированнаяОтчетностьОбновлениеОбъектовЭДО.ПереносДанныхЭДОПриОбновлении20";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия    = "3.0.16.10";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ОбработкаДокументовУчетаЗарплаты";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура не должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия    = "3.0.17.1";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ОграничитьСрокиДействияПатентовУСН";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.17.4";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.УстановитьИспользоватьСтатьиДвиженияДенежныхСредств";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.17.8";
//	Обработчик.Процедура = "РегистрыСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ.УдалитьЗаписиНеСНачалаГода";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.17.8";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ПереносДвиженийИсчисленныеСтраховыеВзносы";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия 		= "3.0.18.1";
//	Обработчик.Процедура 	= "ОбновлениеИнформационнойБазыБП.УдалениеСубконтоДокументыРасчетовСчет_76_НА";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.19.11";
//	Обработчик.Процедура = "Справочники.ИдентификаторыОбъектовМетаданных.ЗарегистрироватьПолноеИзменениеДляПодчиненныхУзловРИБ";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия 		= "3.0.19.28";
//	Обработчик.Процедура 	= "ОбновлениеИнформационнойБазыБП.ОбновитьТипыПредопределеннойКонтактнойИнформации";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия 		= "3.0.19.35";
//	Обработчик.Процедура 	= "ОбновлениеИнформационнойБазыБП.ВыполнитьКонвертациюСчетовФактур";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.20.1";	
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ОбновитьЗарплатуКВыплатеОрганизаций";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия 		= "3.0.20.1";
//	Обработчик.Процедура 	= "ОбновлениеИнформационнойБазыБП.ОбновитьДокументыКорректировкаДолга";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.20.17";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаполнитьПустойТипКонтактнойИнформации";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.20.17";
//	Обработчик.Процедура = "Справочники.Организации.ОбновитьПредопределенныеВидыКонтактнойИнформацииОрганизаций";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.20.17";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.Процедура = "Справочники.Организации.ЗаполнитьКонстантуИспользоватьНесколькоОрганизаций";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.21.1";
//	Обработчик.Процедура = "УчетДенежныхСредствБП.ОбновитьРКОПоВыплатеДепонентов";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.21.1";
//	Обработчик.Процедура           = "РегистрыСведений.ЗадачиБухгалтера.ЗаполнениеЗадачНачалаРаботыПриОбновленииС20";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП	
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия       = "3.0.21.1";
//	Обработчик.Процедура    = "РегистрыСведений.НалогиОтчеты.ЗаполнитьПоНаличиюРегламентированныхОтчетов";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия 		= "3.0.21.1";
//	Обработчик.Процедура 	= "ОбновлениеИнформационнойБазыБП.ОбработатьЖурналУчетаСчетовФактур";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия 		= "3.0.21.1";
//	Обработчик.Процедура 	= "ОбновлениеИнформационнойБазыБП.ОбработатьКорректировочныеСчетаФактуры";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия       = "3.0.21.1";
//	Обработчик.Процедура    = "Документы.РегламентнаяОперация.ДобавитьРегламентнуюОперацию_ВключениеАвансовВПрочиеДоходыДляИП";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия       = "3.0.21.1";
//	Обработчик.Процедура    = "ОбновлениеИнформационнойБазыБП.ОбработатьДвиженияПоРегистрамНДС";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.22.1";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.УстановитьКонстантуРегистрироватьСчетаФактурыНаСуммовыеРазницы";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.22.1";
//	Обработчик.Процедура           = "РегистрыСведений.НеактуальныеРегламентныеОперации.УдалитьВремяИзДатыИОчиститьГруппу";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия 		= "3.0.22.3";
//	Обработчик.Процедура 	= "ОбновлениеИнформационнойБазыБП.ОбновитьДвиженияРегистраРублевыеСуммыДокументовВВалюте";
//	Обработчик.НачальноеЗаполнение = Истина; //Для начального заполнения регистра "Рублевые суммы документов в валюте"
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия       = "3.0.23.4";
//	Обработчик.Процедура    = "ОбновлениеИнформационнойБазыБП.УстановитьФорматСохраненияРегистровУчета";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия       = "3.0.23.7";
//	Обработчик.Процедура    = "Документы.СчетФактураПолученный.ОбработатьСчетаФактурыИзПредыдущейВерсии";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия 		       = "3.0.24.1";
//	Обработчик.Процедура 	       = "Документы.РегламентнаяОперация.ЗаполнитьОписаниеОшибок";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия    			= "3.0.24.1";
//	Обработчик.Процедура 			= "РегламентированнаяОтчетностьОбновлениеОбъектовЭДО.ЗаполнениеДанныхЭДОПриОбновлении20";
//	Обработчик.НачальноеЗаполнение 	= Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия       		= "3.0.24.1";
//	Обработчик.Процедура   			= "Документы.СчетФактураВыданный.ОбработатьНомераИСуммыСчетаФактуры";
//	Обработчик.НачальноеЗаполнение 	= Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия       		= "3.0.24.1";
//	Обработчик.Процедура    		= "Документы.СчетФактураПолученный.ОбработатьНомераИСуммыСчетаФактуры";
//	Обработчик.НачальноеЗаполнение 	= Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия       		= "3.0.24.1";
//	Обработчик.Процедура    		= "ОбновлениеСПредыдущейРедакции.ОбработатьСсылкиНаВедомости";
//	Обработчик.НачальноеЗаполнение 	= Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия 		       = "3.0.24.1";
//	Обработчик.Процедура 	       = "Справочники.ОсновныеСредства.ПроставитьТипОСПриОбновлении";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.25.4";
//	Обработчик.Процедура           = "Справочники.ЗадачиБухгалтера.ЗаполнитьТребованиямиНормативныхДокументов";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.ОбщиеДанные         = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.26.1";
//	Обработчик.Процедура           = "Документы.КорректировкаРеализации.ЗаполнитьРеквизитыИсправленияКорректировкиРеализации";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.26.1";
//	Обработчик.Процедура           = "Документы.КорректировкаПоступления.ЗаполнитьРеквизитыИсправленияКорректировкиПоступления";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.26.3";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ОбновитьРеквизитВидОбменаСКонтролирующимиОрганамиСправочникаОрганизации";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.27.1";
//	Обработчик.Процедура           = "Документы.ПередачаОС.ЗаполнитьДобавленныеРеквизиты";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.28.1";
//	Обработчик.Процедура           = "УчетНДСПереопределяемый.ОбработатьУчетнуюПолитикуРаздельныйУчетНДСДо2014Года";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.28.1";
//	Обработчик.Процедура           = "ОбновлениеСПредыдущейРедакции.УдалитьСубконтоОбъектыСтроительстваСоСчетаНДСприСтроительствеОсновныхСредств";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.28.1";
//	Обработчик.Процедура           = "Справочники.Организации.ОчиститьКодНалоговогоОрганаПолучателя";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.28.1";
//	Обработчик.Процедура           = "РегистрыСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ЗаполнитьПорядокОпределенияНалоговойБазы";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.28.5";
//	Обработчик.Процедура           = "УчетДенежныхСредствБП.ИсправитьОчередностьПлатежаВРеквизитахДляУплатыВБюджет";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.28.6";
//	Обработчик.Процедура           = "ОбновлениеСПредыдущейРедакции.ВосстановитьЗначенияДополнительныхСведений";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.28.8";
//	Обработчик.Процедура           = "Справочники.Организации.ОчиститьНаименованиеПлательщикаПриПеречисленииВБюджет";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.29.1";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ЗарегистрироватьИзмененияВидовОтправляемыхДокументов";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.29.1";
//	Обработчик.Процедура           = "Документы.РегламентнаяОперация.ДобавитьРегламентнуюОперацию_НачислениеСтраховыхВзносовИП";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	//Обновление справочника контрагенты для целей проверки корректности ввода ИНН и КПП справочника Контрагенты
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.29.1";
//	Обработчик.Процедура           = "Справочники.Контрагенты.ОбновлениеСправочникаКонтрагентыПриВключенииКонтроляКорректностиИННиКПП";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.29.6";
//	Обработчик.Процедура           = "РегламентированнаяОтчетностьОбновлениеОбъектовЭДО.ПолностьюЗаполнитьСправочникВидыОтправляемыхДокументов";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.31.1";
//	Обработчик.Процедура           = "РегистрыСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ЗаполнитьКадастровыйНомер";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.31.8";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ЗарегистрироватьИзмененияУчетныхЗаписейЭлектроннойПочты";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//#Область ОбработчикиОбновленияУпрощениеНастройкиКУДиР
//	
//	ВерсияКонфигурацииДляОбновленияНастройкиКУДиР = "3.0.30.1";
//	
//	// Упрощение настройки КУДиР - монопольные обработчики
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.ВыдачаДенежныхДокументов.ОбработатьРучнуюНастройкуКУДиР";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.ПоступлениеДенежныхДокументов.ОбработатьРучнуюНастройкуКУДиР";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//		
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.ОтчетКомитентуОПродажах.ОбработатьРучнуюНастройкуУСНДляАктуальныхДокументов";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.ПоступлениеНаРасчетныйСчет.ЗаполнитьРеквизитыНастройкиУСНДляАктуальныхДокументов";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.ПриходныйКассовыйОрдер.ЗаполнитьРеквизитыНастройкиУСНДляАктуальныхДокументов";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.РасходныйКассовыйОрдер.ЗаполнитьРеквизитыНастройкиУСНДляАктуальныхДокументов";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.СписаниеСРасчетногоСчета.ЗаполнитьРеквизитыНастройкиУСНДляАктуальныхДокументов";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	// Упрощение настройки КУДиР - отложенные обработчики
//	// Отчет комитенту о продажах
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.ОтчетКомитентуОПродажах.ОбработатьРучнуюНастройкуУСНОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Обрабатывает отчеты комитентам о продажах, отражение которых в КУДиР настроено пользователями'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("bca2d135-a4bc-4147-99e6-d3e9d3e55e83");
//	
//	// Поступление на расчетный счет
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.ПоступлениеНаРасчетныйСчет.ЗаполнитьПорядокОтраженияАвансаВРасшифровкеПлатежаОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Заполняет значение нового реквизита ""Отражение аванса в НУ""
//			|в табличных частях документов ""Поступление на расчетный счет"" прошлых периодов.'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("310e4d8e-3e81-4ae8-a13c-0c2bc7ad1b78");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.ПоступлениеНаРасчетныйСчет.ЗаполнитьДоходыУСНПрочиеРасчетыВРасшифровкеПлатежаОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Заполняет значение нового реквизита ""Доходы УСН""
//			|в табличных частях документов ""Поступление на расчетный счет"" прошлых периодов.'");
//	Обработчик.РежимВыполнения    = "Отложенно";
//	Обработчик.Идентификатор      = Новый УникальныйИдентификатор("c7a02f50-1cc0-4c39-a61e-7a2ae4699415");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.ПоступлениеНаРасчетныйСчет.ОбработатьРучнуюНастройкуУСНПрочиеРасчетыОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Заполняет реквизиты отражения в УСН при прочих расчетах с контрагентами
//			|у документов ""Поступление на расчетный счет"" прошлых периодов.'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("345864e4-08f5-4a57-a7ba-9c8a01249509");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.ПоступлениеНаРасчетныйСчет.ОбработатьРучнуюНастройкуУСНПрочиеПоступленияОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Заполняет реквизиты отражения в УСН для прочих операций
//			|у документов ""Поступление на расчетный счет"" прошлых периодов.'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("d08a0bf8-dc05-4db8-a93e-f865a2f57264");
//	
//	// ПКО
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.ПриходныйКассовыйОрдер.ЗаполнитьПорядокОтраженияАвансаВРасшифровкеПлатежаОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Заполняет значение нового реквизита ""Отражение аванса в НУ""
//			|в табличных частях документов ""Поступление наличных"" прошлых периодов.'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("578d9c20-df3c-4eb2-bfa2-37b46df485ef");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.ПриходныйКассовыйОрдер.ЗаполнитьДоходыУСНПрочиеРасчетыВРасшифровкеПлатежаОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Заполняет значение нового реквизита ""Доходы УСН""
//			|в табличных частях документов ""Поступление наличных"" прошлых периодов.'");
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор = Новый УникальныйИдентификатор("77d8562c-21db-481a-b1d9-97d176ffe65a");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.ПриходныйКассовыйОрдер.ОбработатьРучнуюНастройкуУСНПрочиеРасчетыОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Заполняет реквизиты отражения в УСН при прочих расчетах с контрагентами
//			|у документов ""Поступление наличных"" прошлых периодов.'");
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор = Новый УникальныйИдентификатор("d6eb2144-9abc-486d-866c-5d3539109292");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.ПриходныйКассовыйОрдер.ОбработатьРучнуюНастройкуУСНПрочиеПоступленияОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Заполняет реквизиты отражения в УСН для прочих операций
//			|у документов ""Поступление наличных"" прошлых периодов.'");
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор = Новый УникальныйИдентификатор("cfd76c48-6177-4f8c-958a-85f70d4c78b5");
//	
//	// РКО
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.РасходныйКассовыйОрдер.ОбработатьРучнуюНастройкуУСНСписанияСредствПриУСНДоходыОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Обрабатывает выдачу наличных с ручной настройкой отражения в КУДиР
//			|по организациям, применяющим УСН с объектом ""Доходы""'");
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор = Новый УникальныйИдентификатор("86f215bf-f1c5-4e2a-b9d7-1c68b2f7065e");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.РасходныйКассовыйОрдер.ЗаполнитьРасходыУСНПрочиеРасчетыОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Заполняет значение нового реквизита ""Расходы УСН""
//			|в табличных частях документов ""Выдача наличных"" прошлых периодов.'");
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор = Новый УникальныйИдентификатор("6650ed4a-0cb4-4dd3-84b7-2808ca544b76");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.РасходныйКассовыйОрдер.ОбработатьРучнуюНастройкуУСНПрочиеСписанияОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Обрабатывает выдачу наличных с ручной настройкой отражения в КУДиР
//			|по организациям, применяющим УСН с объектом ""Доходы минус расходы""'");
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор = Новый УникальныйИдентификатор("060473bc-54f8-4587-a996-0821d5c11c85");
//	
//	// Списание с расчетного счета
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.СписаниеСРасчетногоСчета.ОбработатьРучнуюНастройкуУСНСписанияСредствПриУСНДоходыОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Обрабатывает списания с расчетного счета с ручной настройкой отражения в КУДиР
//			|по организациям, применяющим УСН с объектом ""Доходы""'");
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор = Новый УникальныйИдентификатор("e051f77a-d99c-4a54-b1c6-84e246f71f9f");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.СписаниеСРасчетногоСчета.ЗаполнитьРасходыУСНПрочиеРасчетыОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Заполняет значение нового реквизита ""Расходы УСН""
//			|в табличных частях документов ""Списание с расчетного счета"" прошлых периодов.'");
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор = Новый УникальныйИдентификатор("e750f1e0-4fbb-4dd7-80ed-c654a09b2ca9");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияНастройкиКУДиР;
//	Обработчик.Процедура           = "Документы.СписаниеСРасчетногоСчета.ОбработатьРучнуюНастройкуУСНПрочиеСписанияОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Обрабатывает списания с расчетного счета с ручной настройкой отражения в КУДиР
//			|по организациям, применяющим УСН с объектом ""Доходы минус расходы""'");
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор = Новый УникальныйИдентификатор("bc94ca64-cf6e-46de-9aca-5d4388ec185b");
//	
//#КонецОбласти
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия       		= "3.0.31.1";
//	Обработчик.Процедура    		= "Справочники.Склады.ПерезаполнитьКонстантуИспользоватьНесколькоСкладов";
//	Обработчик.НачальноеЗаполнение 	= Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.31.1";
//	Обработчик.Процедура           = "Документы.ВводНачальныхОстатков.ЗаполнитьРаботниковПоСпискуСотрудников";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.31.1";
//	Обработчик.Процедура           = "Справочники.ТипыЦенНоменклатуры.ЗаполнитьКонстантуИспользоватьТипыЦенНоменклатуры";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.31.1";
//	Обработчик.Процедура           = "Справочники.ДоговорыКонтрагентов.ЗаполнитьРеквизитСпособЗаполненияСтавкиНДС";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.31.1";
//	Обработчик.Процедура           = "Справочники.СтатьиЗатрат.НазначитьПредопределенныеЭлементы";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.31.1";
//	Обработчик.Процедура           = "Справочники.ПрочиеДоходыИРасходы.НазначитьПредопределенныеЭлементы";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.31.2";
//	Обработчик.Процедура            = "Справочники.Организации.ЗаполнитьИспользуемыеВидыОрганизаций";
//	Обработчик.НачальноеЗаполнение  = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.31.2";
//	Обработчик.Процедура           = "Справочники.Организации.ПерезаполнитьКонстантуИспользоватьНесколькоОрганизаций";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия       		= "3.0.31.4";
//	Обработчик.Процедура = "Документы.РегламентнаяОперация.ДобавитьРегламентнуюОперациюРасчетНалогаУСН";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Если ПолучитьФункциональнуюОпцию("РаботаВЛокальномРежиме") Тогда
//		Обработчик = Обработчики.Добавить();
//		Обработчик.Версия       		= "3.0.31.5";
//		Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.УстановитьИспользованиеДополнительныхОтчетовИОбработок";
//		Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//		Обработчик.ОбщиеДанные         = Истина;
//	КонецЕсли;
//	
//#Область ОбработчикиОбновленияПоследовательности
//
//	ВерсияКонфигурацииДляОбновленияПоследовательностей = "3.0.31.5";
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияПоследовательностей;
//	Обработчик.Процедура           = "РаботаСПоследовательностями.ЗаменитьСтарыеПоследовательностиНаДокументыОрганизаций";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияПоследовательностей;
//	Обработчик.Процедура           = "РаботаСПоследовательностями.ОчиститьПоследовательностьВзаиморасчеты20Отложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Удаляет записи из последовательности ""Взаиморасчеты"" редакции 2.0,
//			|которая более не используется.'");
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор = Новый УникальныйИдентификатор("398fbf8b-d491-49ea-bad5-df5f6aa81dfe");
//	
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияПоследовательностей;
//	Обработчик.Процедура           = "РаботаСПоследовательностями.ОчиститьОбщуюПоследовательность20Отложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Удаляет записи из последовательности ""Общая последовательность"" редакции 2.0,
//			|которая более не используется.'");
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор = Новый УникальныйИдентификатор("40bce403-27bf-4a84-9cdd-167e27b3b29c");
//
//#КонецОбласти	
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.31.5";
//	Обработчик.Процедура           = "РегистрыСведений.НастройкиУчетаЗарплаты.ЗаполнитьПорядокПримененияВычетовПоНДФЛ";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.31.11";
//	Обработчик.Процедура           = "Справочники.Организации.ЗаполнитьДатуРегистрацииИП";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.32.1";
//	Обработчик.Процедура            = "ОбновлениеИнформационнойБазыБП.УстановитьВедетсяУчетИмпортныхТоваров";
//	Обработчик.НачальноеЗаполнение  = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.33.3";
//	Обработчик.Процедура           = "МониторРуководителя.ЗаполнитьДанныеМонитораРуководителя";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.33.6";
//	Обработчик.Процедура           = "Документы.ИнвентаризацияОС.УстановитьПроведен";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий         = НСтр("ru = 'Устанавливает признак ""Проведен"" в документах ""Инвентаризация ОС""'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор = Новый УникальныйИдентификатор("16776462-641f-4a92-8976-33ecc2872bba");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.33.21";
//	Обработчик.Процедура           = "Документы.СписаниеСРасчетногоСчета.ЗаполнитьНалоговыйПериодПриУплатеСТраховыхВзносовИП";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.35.4";
//	Обработчик.Процедура           = "Справочники.Контрагенты.ЗаполнитьСтрануРегистрацииВКонтрагентах";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.35.9";
//	Обработчик.Процедура           = "Документы.ЗаписьКУДиР.ЗарегистрироватьДанныеПервичныхДокументов";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.35.11";
//	Обработчик.Процедура            = "Документы.ГТДИмпорт.ЗаполнитьОтражениеВУСНАктуальныхДокументов";
//	Обработчик.НачальноеЗаполнение  = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик = Обработчики.Добавить();
//	
//	Обработчик.Версия               = "3.0.35.11";
//	Обработчик.Процедура            = "Документы.ГТДИмпорт.ЗаполнитьОтражениеВУСНДокументовПрошлыхЛет";
//	Обработчик.НачальноеЗаполнение  = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Заполняет добавленную колонку ""Расходы (НУ)"" табличной части ""Товары"" документа ""ГТД по импорту""'");
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор = Новый УникальныйИдентификатор("9f43d2e2-1e11-4d73-a869-6c28d3f5ba60");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.35.14";
//	Обработчик.Процедура           = "ПланыСчетов.Хозрасчетный.ОбработатьДобавлениеСчетовУчетаНДСВТаможенномСоюзе";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.36.3";
//	Обработчик.Процедура           = "Обработки.ФункциональностьПрограммы.ЗаполнитьКонстантуАлкогольнаяПродукция";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.36.8";
//	Обработчик.Процедура           = "Документы.ПоступлениеТоваровУслуг.ЗаполнитьСчетаРасчетовСКомитентами";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.36.13";
//	Обработчик.Процедура            = "Справочники.Контрагенты.ЗаполнитьПризнакПринадлежностьКонтрагентаГосударственнымОрганам";
//	Обработчик.НачальноеЗаполнение  = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Заполняет признак принадлежности контрагентов к государственным органам'");
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор = Новый УникальныйИдентификатор("2091a794-3bf6-4061-8e08-6474544d148d");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.37.5";
//	Обработчик.Процедура           = "Справочники.ШаблоныДоговоров.ЗаполнениеТиповыхШаблоновДоговоровОтложено";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор = Новый УникальныйИдентификатор("808d68ff-a316-40e9-94b4-d0f4ebf4ea7c");
//	Обработчик.Комментарий = НСтр("ru = 'Заполняет типовые шаблоны договоров.'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.37.10";
//	Обработчик.Процедура           = "ПланыСчетов.Хозрасчетный.ПереименоватьСчетНалогаУСН";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.37.23";
//	Обработчик.Процедура           = "Документы.КорректировкаПоступления.УстановитьРеквизитКорректироватьНДС";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.37.23";
//	Обработчик.Процедура           = "Документы.КорректировкаРеализации.УстановитьРеквизитКорректироватьНДС";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.37.24";
//	Обработчик.Процедура           = "УчетЗарплаты.НастроитьПодсистемуЗарплатаИКадры";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия			   = "3.0.37.27";
//	Обработчик.Процедура 		   = "ОбновлениеИнформационнойБазыБП.УстановитьКонстантыПоКомиссионнойДеятельности";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.37.27";
//	Обработчик.Процедура           = "Документы.ОтражениеЗарплатыВУчете.ЗаполнитьСуммыНалоговогоУчета";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.37.38";
//	Обработчик.Процедура           = "Документы.СчетФактураВыданный.УстановитьВидОперацииНаАвансКомитентуНаЗакупку";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.38.4";
//	Обработчик.Процедура           = "РегистрыСведений.ИспользоватьНесколькоБанковскихСчетовОрганизации.УстановитьЗначенияФО";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.38.4";
//	Обработчик.Процедура           = "Документы.СписаниеСРасчетногоСчета.ЗаменитьКонтрагентаНаФизическоеЛицоМонопольно";
//	Обработчик.НачальноеЗаполнение  = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.38.5";
//	Обработчик.Процедура           = "Документы.ПлатежноеПоручение.УстановитьВидОперацииМонопольно";
//	Обработчик.НачальноеЗаполнение  = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.38.8";
//	Обработчик.Процедура           = "Справочники.Номенклатура.ЗаполнитьВидыНоменклатуры";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.38.19";
//	Обработчик.Процедура           = "ПланыОбмена.ПоОрганизации.ЗарегистрироватьКонтрагентыКонтактныеЛица";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("a0109525-7bc5-4bda-9be3-70a0fcbe865b");
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Регистрирует в узлах РИБ ""По организации"" контрагентов и их контактных лиц.'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.38.36";
//	Обработчик.Процедура = "Документы.РегламентнаяОперация.ДобавитьРегламентнуюОперациюРасчетРасходовУменьшающихНалогУСН";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.38.36";
//	Обработчик.Процедура = "Документы.ЗаписьКУДиР.ДобавитьДвиженияПоРасходамУменьшающимНалогУСН";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.38.46";
//	Обработчик.Процедура = "Документы.СчетФактураВыданный.УстановитьКодВидаОперацииСводныйКомиссионный";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.38.46";
//	Обработчик.Процедура = "Документы.СчетФактураПолученный.УстановитьКодВидаОперацииСводныйКомиссионный";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.38.46";
//	Обработчик.Процедура = "Документы.ФормированиеЗаписейКнигиПокупок.УстановитьКодВидаОперации";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.38.46";
//	Обработчик.Процедура           = "Документы.ВводНачальныхОстатков.ЗаполнитьКодВидаОперацииИСуммыВЖурналеУчетаСФОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//    Обработчик.Комментарий = 
//		НСтр("ru = 'Заполняет код вида операции и суммы в регистре ""Журнал учета счетов-фактур""'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("1fb3ebc5-3bd2-46be-ae4a-f9265b8b94b7");
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.38.46";
//	Обработчик.Процедура           = "Документы.ВводНачальныхОстатков.ЗаполнитьКодВидаОперацииВДанныеПоНДСОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//    Обработчик.Комментарий = 
//		НСтр("ru = 'Заполняет код вида операции по НДС в документе ""Ввод начальных остатков""'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("209d3011-a552-46bf-bbce-1efe13a467d0");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.39.3";
//	Обработчик.Процедура           = "РегистрыСведений.СтатусыДокументов.ЗаполнитьСтатусыОплатыСчетов";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.39.7";
//	Обработчик.Процедура           = "Справочники.ДополнительныеУсловия.ЗаполнениеТиповыхДополнительныхУсловий";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.Комментарий = НСтр("ru = 'Создает типовые дополнительные условия.'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.39.7";
//	Обработчик.Процедура           = "Справочники.ДополнительныеУсловия.ЗаполнениеТиповыхДополнительныхУсловийВОрганизации";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.Комментарий = НСтр("ru = 'Заполняет дополнительные условия организаций.'");
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.39.7";
//	Обработчик.Процедура           = "Справочники.ДополнительныеУсловия.ЗаполнениеТиповыхДополнительныхУсловийВСчетахНаОплатуПокупателю";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("e73efd96-2460-4ddb-9190-43840800e13a");
//	Обработчик.Комментарий = НСтр("ru = 'Заполняет дополнительные условия счетов на оплату.'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.39.8";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.УстановитьКонстантыУчетаНДСспецРежимы";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.39.9";
//	Обработчик.Процедура           = "Документы.СчетНаОплатуПокупателю.ОбработатьТаблицуУслуги"; 
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Объединяет данные закладок ""Товары"" и ""Услуги""'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("da9a6e4d-17c5-445b-95e9-f4216655cc9a");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.39.9";
//	Обработчик.Процедура           = "Документы.СчетНаОплатуПоставщика.ОбработатьТаблицуУслуги";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//    Обработчик.Комментарий = 
//		НСтр("ru = 'Объединяет данные закладок ""Товары"" и ""Услуги""'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("5634712a-dc28-4910-8ed1-2056e671153d");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.39.10";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ЗаполнитьИсториюРегистрацийВНалоговомОргане";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.39.13";
//	Обработчик.Процедура           = "Документы.ПоступлениеНаРасчетныйСчет.ЗаменитьКонтрагентаНаФизическоеЛицо";
//	Обработчик.НачальноеЗаполнение  = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.39.19";
//	Обработчик.Процедура           = "Документы.КорректировкаПоступления.УстановитьРеквизитСуммаВРозницеДоИзменения";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.39.18";
//	Обработчик.Процедура           = "Справочники.Резервы.СоздатьЭлементыПоУмолчанию";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.39.18";
//	Обработчик.Процедура           = "РегистрыСведений.НастройкиУчетаЗарплаты.ПерезаполнитьЗначенияПоУмолчанию";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.39.21";
//	Обработчик.Процедура           = "РегистрыСведений.ЖурналУчетаСчетовФактур.ОчиститьКППКонтрагента";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.39.22";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаполнитьРеквизитыСчетовУчетаРезервов";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.39.28";
//	Обработчик.Процедура            = "Справочники.Организации.ЗаполнитьИспользуемыеВидыОрганизаций";
//	Обработчик.НачальноеЗаполнение  = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.39.29";
//	Обработчик.Процедура            = "Справочники.ВидыНалоговИПлатежейВБюджет.ЗаполнитьПоставляемыеДанные";
//	Обработчик.НачальноеЗаполнение  = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.39.30";
//	Обработчик.Процедура            = "Документы.ПлатежноеПоручение.ЗаполнитьРеквизитыНалогВидНалоговогоОбязательства";
//	Обработчик.НачальноеЗаполнение  = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.39.31";
//	Обработчик.Процедура            = "Документы.СписаниеСРасчетногоСчета.ЗаполнитьРеквизитНалог";
//	Обработчик.НачальноеЗаполнение  = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.39.31";
//	Обработчик.Процедура            = "Документы.РасходныйКассовыйОрдер.ЗаполнитьРеквизитНалог";
//	Обработчик.НачальноеЗаполнение  = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.39.32";
//	Обработчик.Процедура = "Справочники.Контрагенты.ЗаполнитьНалоговыйНомерИностранногоКонтрагента";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.39.49";
//	Обработчик.Процедура           = "ПланыСчетов.Хозрасчетный.ОбновитьПараметрыСчета96_09";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.39.53";
//	Обработчик.Процедура = "Справочники.Контрагенты.ЗаполнитьПустуюСтрануРегистрации";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.39.63";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.УстановитьПредельноеКоличествоЗаписейВРазделеДекларацииПоНДС";
//	Обработчик.НачальноеЗаполнение = Истина; // Необходимо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.40.4";
//	Обработчик.Процедура           = "ПланыСчетов.Хозрасчетный.ОбработатьДобавлениеСчетовУчетаЛизинг";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.40.5";
//	Обработчик.Процедура            = "ОбновлениеИнформационнойБазыБП.УстановитьКонстантуИспользоватьТабличныеФормыБанковскихДокументов";
//	Обработчик.НачальноеЗаполнение  = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "3.0.41.10";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаполнитьТабличныеЧастиДляСписков";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.41.25";
//	Обработчик.Процедура           = "Документы.ПоступлениеНаРасчетныйСчет.ОбработатьКредитыИЗаймы";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Определяет вид операции расчетов по кредитам и займам в Поступление на расчетный счет'");
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("fec1a466-fe60-445a-82c0-ca05a64a0e89");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.41.25";
//	Обработчик.Процедура           = "Документы.ПриходныйКассовыйОрдер.ОбработатьКредитыИЗаймы";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Определяет вид операции расчетов по кредитам и займам в Поступление наличных'");
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("a1be83c7-089e-4eab-92c0-ca8b0bee5bbc");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.41.25";
//	Обработчик.Процедура           = "Документы.РасходныйКассовыйОрдер.ОбработатьКредитыИЗаймы";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Определяет вид операции расчетов по кредитам и займам в Выдача наличных'");
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("e9bd5260-25a3-4808-a0a2-4e3047d17c57");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.41.25";
//	Обработчик.Процедура           = "Документы.СписаниеСРасчетногоСчета.ОбработатьКредитыИЗаймы";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Определяет вид операции расчетов по кредитам и займам в Списание с расчетного счета'");
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("4159d0fb-44d6-4d00-876b-6edae1218351");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.41.28";
//	Обработчик.Процедура           = "Документы.ГТДИмпорт.ЗаполнитьРеквизитСпособЗачетаАвансов";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.41.53";
//	Обработчик.Процедура           = "Документы.ОтчетОРозничныхПродажах.ОбработатьУдалениеРеквизитовТабличнойЧастиОплата";
//	Обработчик.НачальноеЗаполнение = Истина; // Необходимо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.42.4";
//	Обработчик.Процедура           = "Справочники.ОснованияПраваПодписи.СоздатьОснованияПраваПодписи";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.42.4";
//	Обработчик.Процедура           = "Справочники.ОснованияПраваПодписи.ОбновитьОснованияПраваПодписиВДокументах";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.42.8";
//	Обработчик.Процедура           = "Документы.СчетФактураВыданный.ПереопределитьПризнакСводныйКомиссионный";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.42.9";
//	Обработчик.Процедура            = "ОбновлениеИнформационнойБазыБП.ЗаполнениеКонстантТипаПоставки";
//	Обработчик.НачальноеЗаполнение  = Истина;
//	Обработчик.ОбщиеДанные          = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.42.11";
//	Обработчик.Процедура            = "ОбновлениеИнформационнойБазыБП.СбросИспользованияРегламентногоЗаданияЗагрузкаВалют";
//	Обработчик.НачальноеЗаполнение  = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.42.19";
//	Обработчик.Процедура           = "Справочники.ПроверкиКонтролирующимиОрганами.ЗаполнитьРеквизитыСервисаПроверокПриОбновлении";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.42.28";
//	Обработчик.Процедура           = "РегистрыСведений.СведенияОбАлкогольнойПродукции.ПереносКодовПродукцииИзСправочника";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.Комментарий		   = НСтр("ru = 'Переносит коды видов алкогольной продукции из справочника в регистр сведений'");
//	Обработчик.РежимВыполнения 	   = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("fd4ae902-1923-475f-bf13-c217e42ee849");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.42.30";
//	Обработчик.Процедура            = "ЭлектронноеВзаимодействиеБП.УстановитьЗначенияКонстантЭДОПриОбновлении";
//	Обработчик.НачальноеЗаполнение  = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.42.34";
//	Обработчик.Процедура           = "УчетСтраховыхВзносовИП.УстановитьЗначениеКонстантыУчитыватьДеньРегистрацииПриРасчетеСтраховыхВзносовИП";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.42.43";
//	Обработчик.Процедура            = "ОбновлениеИнформационнойБазыБП.ЗаменитьСсылкиНаНаборыДополнительныхРеквизитовИСведений";
//	Обработчик.НачальноеЗаполнение  = Истина;
//	
//#Область СбросГраницПоследовательностей20и30
//	
//	ВерсияКонфигурацииДляОбновленияПоследовательностей = "3.0.42.44";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияПоследовательностей;
//	Обработчик.Процедура           = "РаботаСПоследовательностями.СброситьГраницыПоследовательностьВзаиморасчеты20Отложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Сбрасывает границы последовательности ""Взаиморасчеты"" редакции 2.0,
//			|которая более не используется.'");
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор = Новый УникальныйИдентификатор("9d60e4e0-91b1-4cdc-b71e-46b6e0624d19");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = ВерсияКонфигурацииДляОбновленияПоследовательностей;
//	Обработчик.Процедура           = "РаботаСПоследовательностями.СброситьГраницыПоследовательностьОбщаяПоследовательность20Отложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий = 
//		НСтр("ru = 'Сбрасывает границы последовательности ""Общая последовательность"" редакции 2.0,
//			|которая более не используется.'");
//	Обработчик.РежимВыполнения = "Отложенно";
//	Обработчик.Идентификатор = Новый УникальныйИдентификатор("0919cf87-ce6a-4f49-a44d-a01e2866ab54");
//	
//#КонецОбласти
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.42.51";
//	Обработчик.Процедура           = "Документы.ОтчетКомиссионераОПродажах.ЗаполнитьПодразделениеЗатрат";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.42.71";
//	Обработчик.Процедура           = "Справочники.Патенты.ЗаполнитьДобавленныеРеквизиты";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.42.72";
//	Обработчик.Процедура           = "Документы.КорректировкаРеализации.УстановитьРеквизитИсходныйДокумент";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.43.7";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ЗаполнитьКонстантуНачалоРаботы";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.43.11";
//	Обработчик.Процедура            = "Справочники.Контрагенты.ЗаполнитьОсновныеДоговораКонтрагентов";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.Комментарий		   = НСтр("ru = 'Переносит основной договор контрагента из справочника в регистр сведений'");
//	Обработчик.РежимВыполнения 	   = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("f19f8a5f-e5df-4e42-9a4f-d6ee59605721");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.43.21";
//	Обработчик.Процедура           = "ПланыСчетов.Хозрасчетный.ЗаменитьУдаленныйСчет01_К";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.43.24";
//	Обработчик.Процедура           = "КалендарьБухгалтера.ИзменитьРасписаниеСогласноРежимуРаботы";
//	Обработчик.НачальноеЗаполнение = ОбщегоНазначения.ИнформационнаяБазаФайловая();
//	Обработчик.Комментарий         = НСтр("ru = 'Изменяет расписание регламентного задания ""Обновление задач бухгалтера""'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.43.26";
//	Обработчик.Процедура           = "ПланыСчетов.Хозрасчетный.ЗаменитьСчетПФР_ОПС_ИП";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.43.26";
//	Обработчик.Процедура           = "Документы.ПлатежноеПоручение.ЗаполнитьВидНалоговогоОбязательстваСтраховыхВзносов";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.43.27";
//	Обработчик.Процедура           = "Документы.РасходныйКассовыйОрдер.ЗаполнитьРеквизитВидНалоговогоОбязательства";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.43.27";
//	Обработчик.Процедура           = "Документы.СписаниеСРасчетногоСчета.ЗаполнитьРеквизитВидНалоговогоОбязательства";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.43.62";
//	Обработчик.Процедура           = "Справочники.Банки.УстановитьСтрануВБанках";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.43.81";
//	Обработчик.Процедура           = "РегистрыСведений.ЖурналУчетаСчетовФактур.ЗаполнитьИзмерениеСчетФактураВыданныйПокупателю";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.43.131";
//	Обработчик.Процедура           = "Документы.ОтчетКомиссионераОПродажах.ЗаполнитьСубкомиссионераИСчетФактуруСубкомиссионераВРегистреРеализованныеТоварыКомитентов";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.43.141";
//	Обработчик.Процедура           = "Справочники.Организации.ЗаполнитьКонтактнуюИнформациюИФИОПредпринимателя";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.43.141";
//	Обработчик.Процедура            = "ОбновлениеИнформационнойБазыБП.КонтактнаяИнформацияОбновлениеИБ";
//	Обработчик.НачальноеЗаполнение  = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.43.160";
//	Обработчик.Процедура           = "Документы.РегламентнаяОперация.ДобавитьРегламентнуюОперациюРасчетРасходовУменьшающихЕНВД";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.43.160";
//	Обработчик.Процедура           = "Документы.РегламентнаяОперация.ДобавитьРегламентнуюОперациюРасчетЕНВД";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.43.160";
//	Обработчик.Процедура           = "Справочники.СтатьиДвиженияДенежныхСредств.ОбработатьСправочникСоздатьПредопределенныеЭлементы";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.43.160";
//	Обработчик.Процедура           = "Справочники.СтатьиДвиженияДенежныхСредств.ОбработатьСтатьиДДСВНастройкахКлиентБанка";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.43.206";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ОбновитьКалендарныеГрафики";
//	Обработчик.РежимВыполнения     = "Монопольно";
//	Обработчик.ОбщиеДанные         = Истина;
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.43.233";
//	Обработчик.Процедура           = "Справочники.Организации.ПеренестиФайлыОрганизацииВПрисоединенныеФайлы";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.43.234";
//	Обработчик.Процедура           = "Документы.ПринятиеКУчетуНМА.ЗаполнитьПорядокВключенияСтоимостиВСоставРасходовНУ";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.44.12";
//	Обработчик.Процедура           = "РегистрыСведений.СостоянияБанковскихДокументов.ЗаполнитьСостоянияБанковскихДокументов";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.44.18";
//	Обработчик.Процедура            = "РегистрыНакопления.КнигаУчетаДоходовИРасходов.ЗаполнитьДоговорКонтрагентаОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.Комментарий		   = НСтр("ru = 'Заполняет контрагента и договор в КУДиР при УСН (доходы)'");
//	Обработчик.РежимВыполнения 	   = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("1ed0f51c-d0d6-48e8-a5be-021f8a736b6c");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.44.18";
//	Обработчик.Процедура            = "РегистрыНакопления.КнигаУчетаДоходовПатент.ЗаполнитьДоговорКонтрагентаОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.Комментарий		   = НСтр("ru = 'Заполняет контрагента и договор в Книге учета доходов (патент)'");
//	Обработчик.РежимВыполнения 	   = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("d7cd8d80-4d7b-4020-bd0a-42706fd6f621");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.44.60";
//	Обработчик.Процедура           = "РегистрыСведений.ЖурналУчетаСчетовФактур.ЗаполнитьРесурсДатаСчетаФактурыПоГТД";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.44.81";
//	Обработчик.Процедура           = "РегистрыСведений.СтатусыДокументов.ЗаполнитьДополнительныеСтатусыСчетовНаОплату";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.44.82";
//	Обработчик.Процедура           = "Документы.ВводНачальныхОстатков.ЗаполнитьПервоначальнуюСтоимостьНУПоСпецодежде";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.44.85";
//	Обработчик.Процедура           = "Справочники.ШаблоныДоговоров.ОбновлениеТиповыхШаблоновДоговоров_3_0_44_Отложено";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.РежимВыполнения 	   = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("872effff-c593-4020-9729-ad430b27dbf7");
//	Обработчик.Комментарий 		   = НСтр("ru = 'Обновление типовых шаблонов договоров.'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.44.85";
//	Обработчик.Процедура           = "Справочники.ДоговорыКонтрагентов.ЗаполнитьПолРуководителяКонтрагента";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.РежимВыполнения 	   = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("6957c53e-7c08-4ea3-9ecc-a753cc84fb44");
//	Обработчик.Комментарий 		   = НСтр("ru = 'Заполняет в договорах пол руководителя контрагента.'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.44.92";
//	Обработчик.Процедура           = "Справочники.ВидыОплатОрганизаций.ДобавитьСтрокиТабличнойЧастиКомиссияБанка";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.44.92";
//	Обработчик.Процедура           = "Справочники.Организации.УстановитьПризнакЕстьОбособленныеПодразделения";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.44.122";
//	Обработчик.Процедура           = "РегистрыСведений.УчетнаяПолитика.УстановитьСчетУчетаЗатратПоУмолчанию";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.44.161";
//	Обработчик.Процедура            = "ОбновлениеИнформационнойБазыБП.ОчиститьТиповыеОперации20Отложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.Комментарий		   = НСтр("ru = 'Очищает неиспользуемые типовые операции из ред. 2.0'");
//	Обработчик.РежимВыполнения 	   = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("8c79337e-35d1-4c3e-83d5-359efd68f4d8");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.44.192";
//	Обработчик.Процедура           = "ПланыСчетов.Хозрасчетный.ОбновитьПараметрыСчетов08_4";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.45.7";
//	Обработчик.Процедура           = "ОбщегоНазначенияБП.УстановитьОпциюУстановкаМобильногоПриложения";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.45.16";
//	Обработчик.Процедура           = "РегистрыСведений.НастройкиУчетаНалогаНаПрибыль.ЗаполнитьСтавкиНалогаНаПрибыльС2017По2020Годы";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.Комментарий		   = НСтр("ru = 'Корректирует ставки налога в настройках налога на прибыль на 2017-2020 годы'");
//	Обработчик.РежимВыполнения 	   = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("2cdba885-981d-4298-9ad2-f04e7f076db7");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.46.13";
//	Обработчик.Процедура            = "Справочники.РасходыБудущихПериодов.ОбновитьПараметрыСтатьиРасходыНаПлатон";
//	Обработчик.НачальноеЗаполнение  = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.47.13";
//	Обработчик.Процедура           = "ТарификацияБП.УстановитьРазрешенУчетРегулярнойДеятельности";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.48.3";
//	Обработчик.Процедура           = "РегистрыСведений.СтатусыДокументов.ЗаполнитьДополнительныеСтатусыСчетовОтПоставщиков";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("49b35144-0079-4ea8-8fe0-145b21e8f82d");
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет статусы поступления для списка счетов на оплату поставщика.'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.48.12";
//	Обработчик.Процедура           = "РегистрыСведений.РеквизитыУплатыНалоговИПлатежейВБюджет.ОчиститьРеквизитыЗаписейПоВсемНалогамИВзносам";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.49.26";
//	Обработчик.Процедура           = "РегистрыСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ЗаполнитьКодВидаИмущества";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.50.3";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ЗарегистрироватьИзмененияКадровыхСведений";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.51.3";
//	Обработчик.Процедура           = "Документы.СписаниеСРасчетногоСчета.ЗаполнитьТаблицуНалоговыйАгентНДСОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("3b2ba7cb-b16b-4abd-9402-425ef10435f5");
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет таблицу ""Налоговый агент НДС"" в документе ""Списание с расчетного счета"".'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.51.4";
//	Обработчик.Процедура           = "Справочники.КлассификаторТНВЭД.ЗаполнитьЕдиницуИзмеренияОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП т.к. там есть этот справочник.
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор = Новый УникальныйИдентификатор("6e7e8df2-6f2b-4c92-8f9d-f72cc04588da");
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет значение реквизита ""Единица измерения"" в справочнике ""Классификатор ТН ВЭД"".'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.51.5";
//	Обработчик.Процедура           = "Справочники.ТипыДокументовПодтверждающихЛьготуНДС.УстановитьПолноеНаименование";
//	Обработчик.ОбщиеДанные         = Ложь;
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.51.6";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ПроверитьПоддержкуСовместительства";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.51.6";
//	Обработчик.Процедура           = "РегистрыСведений.НастройкиУчетаЗарплаты.УстановитьПоддержкуСовместительства";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.51.6";
//	Обработчик.Процедура           = "РегистрыСведений.МестаВыплатыЗарплатыСотрудников.УстановитьМестаВыплатыЗарплатыСотрудников";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.51.11";
//	Обработчик.Процедура            = "КалендарьБухгалтера.ОтключитьОбновлениеЗадачБухгалтераВСервисе";
//	Обработчик.НачальноеЗаполнение  = Истина;
//	Обработчик.ОбщиеДанные          = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.51.10";
//	Обработчик.Процедура           = "Обработки.ПанельАдминистрированияБП.УстановитьЗначениеЦеныПродажиПоУмолчанию";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.52.4";
//	Обработчик.Процедура            = "ОбновлениеИнформационнойБазыБП.УстановитьКонстантуОтображатьДополнительныеКолонкиВСписках";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.52.5";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.УстановитьРежимТакси";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.52.17";
//	Обработчик.Процедура           = "ЭлектронныйДокументооборотСКонтролирующимиОрганами.ЗапуститьПереносТранспортныхСообщенийВПрисоединенныеФайлы";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.52.21";
//	Обработчик.Процедура           = "РегистрыСведений.СоответствиеСкладовТорговымТочкам.ЗаполнитьСоответствиеМеждуСкладамиИТорговымиТочками";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.52.24";
//	Обработчик.Процедура           = "Документы.СписаниеСРасчетногоСчета.ОбработатьОплатуНДСНалоговогоАгентаЗаКомитента";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.52.24";
//	Обработчик.Процедура           = "Документы.РасходныйКассовыйОрдер.ЗаполнитьТаблицуНалоговыйАгентНДСОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("4e7a4a4c-bdce-4150-af25-8e145584f0b4");
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет таблицу ""Налоговый агент НДС"" в документе ""Выдача наличных"".'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.52.28";
//	Обработчик.Процедура           = "ПерсонализированныеПредложенияСервисов.ЗаполнитьСреднесписочнаяЧисленностьПредыдущая";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.53.2";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.УстановитьКонстантуИспользоватьВалютныйУчетОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("f73eb774-a1b1-4720-ab8b-14df6cb98bde");
//	Обработчик.Комментарий         = НСтр("ru = 'Удаляет лишние данные, если в базе не используется валютный учет.'");
//	
//	Если Метаданные.Документы.Найти("АвизоОСВходящее") <> Неопределено Тогда
//		Обработчик = Обработчики.Добавить();
//		Обработчик.Версия              = "3.0.53.3";
//		Обработчик.Процедура           = "Документы.АвизоОСВходящее.ОбновитьЗаписиРегистровСведений";
//		Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	КонецЕсли;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.53.7";
//	Обработчик.Процедура = "Документы.ЗаписьКУДиР.ДобавитьДвиженияПоУплаченномуТорговомуСбору";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.53.8";
//	Обработчик.Процедура           = "ПланыСчетов.Хозрасчетный.ДобавитьСубконтоПродукция";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.53.13";
//	Обработчик.Процедура           = "РегистрыСведений.СтатусыДокументов.ЗаполнитьСтатусыСчетовФактурПоДокументамПоступления";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("f825cf68-753c-4a27-abb3-52d681370c30");
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет статусы счетов-фактур для списка ""Поступление"".'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.53.13";
//	Обработчик.Процедура           = "РегистрыСведений.СтатусыДокументов.ЗаполнитьСтатусыСчетовФактурПоДокументамРеализация";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("a0721db8-bafc-4fed-9219-8477d7e7a91e");
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет статусы счетов-фактур для списка ""Реализация"".'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.53.20";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.УстановитьКонстантуИспользоватьСервисМониторингБанков";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.ОбщиеДанные         = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.54.12";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ОчиститьКэшСобытийСервисаМониторингБанков";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.55.2";
//	Обработчик.Процедура           = "Документы.РеализацияТоваровУслуг.ЗаполнитьКодТНВЭДОтложено";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("9016a469-6cbc-4efa-b981-918c91ff74e9");
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет значение реквизита ""Код ТН ВЭД"" в документе ""Реализация (акты, накладные)"".'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.55.2";
//	Обработчик.Процедура           = "Документы.ВозвратТоваровПоставщику.ЗаполнитьКодТНВЭДОтложено";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("5dcb7057-7e61-4469-a870-43bfcfb8ff22");
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет значение реквизита ""Код ТН ВЭД"" в документе ""Возврат товаров поставщику"".'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.55.2";
//	Обработчик.Процедура           = "Документы.КорректировкаРеализации.ЗаполнитьКодТНВЭДОтложено";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("8b28a10e-543a-4aa9-9e21-1dc373553b54");
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет значение реквизита ""Код ТН ВЭД"" в документе ""Корректировка реализации"".'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.55.2";
//	Обработчик.Процедура           = "Документы.ОтчетКомиссионераОПродажах.ЗаполнитьКодТНВЭДОтложено";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("4feaff82-90f5-4f7e-beaf-643141e426dc");
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет значение реквизита ""Код ТН ВЭД"" в документе ""Отчет комиссионера (агента) о продажах"".'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.55.16";
//	Обработчик.Процедура           = "УчетЗарплаты.ЗаполнитьОкругление";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.60.3";
//	Обработчик.Процедура           = "РегистрыСведений.СтатусыДокументов.ЗаполнитьСтатусыСчетовФактурПоДокументамПоступленияДопРасходов";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("dba50ba4-e2fd-481f-b105-c9c428259944");
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет статусы для списка ""Поступление доп. расходов"".'");
//	
//	#Область Дивиденды
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.60.15";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ЗаполнитьРеквизитыСчетовУчетаСУчредителями";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.60.15";
//	Обработчик.Процедура           = "ПланыСчетов.Хозрасчетный.ОбновитьПараметрыСчетовРасчетовСУчредителями";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	#КонецОбласти
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.60.37";
//	Обработчик.Процедура           = "УчетЗарплаты.ОбработатьКадровыеДанныеСотрудников";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.60.37";
//	Обработчик.Процедура           = "УчетЗарплаты.ВосстановитьРегистрациюВНалоговомОргане";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.60.41";
//	Обработчик.Процедура           = "УчетОбособленныхПодразделений.УстановитьВерсиюУведомленияОКонтролируемыхСделках";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.60.57";
//	Обработчик.Процедура           = "УставныйКапитал.ЗаменитьСчетУчетаРасчетовСУчредителями";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.60.57";
//	Обработчик.Процедура           = "УставныйКапитал.ПеренестиОстаткиРасчетовСУчредителями";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.61.3";
//	Обработчик.Процедура           = "Справочники.КлассификаторЕдиницИзмерения.УдалитьПробелыИзКода";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("9ad23334-9361-4219-b2c5-f4015376d0d2");
//	Обработчик.Комментарий         = НСтр("ru = 'Удаляет пробелы из кода справочника ""Классификатор единиц измерения"".'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.61.11";
//	Обработчик.Процедура           = "РегистрыСведений.РасчетСебестоимостиПродукции.ЗаполнитьДаннымиПрежнегоРегистра";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("3585d7be-bacb-4691-8a1e-8e990782cba2");
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет регистр ""Расчет себестоимости продукции"" по данным прежнего (одноименного) регистра.
//                                           |Выполнение регламентной операции расчета себестоимости,
//										   |а также формирование справки-расчета себестоимости готовой продукции может быть ограничено.'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.61.11";
//	Обработчик.Процедура           = "РегистрыСведений.УчетнаяПолитика.ВключитьИспользованиеПлановойСебестоимости";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.61.16";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ПередатьЦентруМониторингаИспользованиеТолькоПоПлановымЦенам";
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("4c8781ef-224c-4c85-904c-4474104397f8");
//	Обработчик.Комментарий         = НСтр("ru = 'Передает Центру мониторинга с согласия пользователя анонимизированные данные о фактическом использовании опции учетной политики ТолькоПоПлановымЦенам'");
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.61.27";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ЗаписатьОперациюБизнесСтатистикиИспользоватьТабличныеФормыБанковскихДокументов";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.61.45";
//	Обработчик.Процедура           = "УставныйКапитал.ПроверитьАналитикуСчетовУчетаКапитала";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.62.3";
//	Обработчик.Процедура           = "ИнтеграцияСЯндексКассойБП.ЗаполнитьСсылочныеИдентификаторыДокументовСчетНаОплатуПокупателю";
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("25ace7cc-9866-41f5-8c8b-d14214ee8144");
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет ссылочные идентификаторы в документах ""Счет на оплату покупателю"".'");
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.62.4";
//	Обработчик.Процедура           = "ИнтеграцияЕГАИСБП.ЗаполнитьНовыеРеквизитыТТНИсходящаяЕГАИС";
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("8c8ef7ad-4a22-4976-bb2c-e041cdc7a11b");
//	Обработчик.НачальноеЗаполнение = Ложь;
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет реквизит ""Есть расхождения"" документа ""ТТН ЕГАИС""'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.62.4";
//	Обработчик.Процедура           = "ИнтеграцияЕГАИСБП.ЗаполнитьНоменклатуруЕГАИС";
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("8c8ef7ad-4a22-4976-bb2c-e041cdc7a11c");
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.62.4";
//	Обработчик.Процедура           = "РегистрыСведений.НастройкаУчетаОстатковЕГАИС.ЗаполнитьНастройкиУчета";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.62.4";
//	Обработчик.Процедура           = "ИнтеграцияЕГАИСБП.ПеренестиДанныеОрганизацияСкладЕГАИС";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.62.5";
//	Обработчик.Процедура           = "ИнтеграцияЕГАИСБП.УстановитьКонстантыЕГАИС";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.62.16";
//	Обработчик.Процедура           = "РегистрыСведений.УдалитьИсключенныеИзПерепроведенияМесяцы.ПереместитьГраницуПослеИсключенных";
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("cdb0247b-0abd-4a22-b622-b3b4c452351f");
//	Обработчик.Комментарий         = НСтр("ru = 'Переносит границу последовательности на момент после последнего из месяцев, чье перепроведение пропущено, и очищает регистр сведений ""Исключенные из перепроведения месяцы"".'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.63.4";
//	Обработчик.Процедура           = "УчетЗарплаты.ЗаполнитьСпособРасчетаАванса";
//	Обработчик.НачальноеЗаполнение = Ложь;
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.63.7";
//	Обработчик.Процедура           = "РегистрыСведений.ЗадачиБухгалтера.ЗаполнитьХешЗадач";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.63.9";
//	Обработчик.Процедура           = "РегламентированнаяОтчетностьБП.УстановитьОпции1СОтчетности";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.63.10";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ЗаполнитьВидыЦикловОбменаЦиклОбменаСФСГС";
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("d57c1adc-cbc3-4ffa-89ef-a59fff11d06a");
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет в справочнике ""Циклы обмена"" реквизит ""Вид"" для обмена с ФСГС.'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.63.13";
//	Обработчик.Процедура           = "ЭлектронныйДокументооборотСКонтролирующимиОрганами.ЗаменитьВОрганизацияхИПодразделенияхКодОрганаФСГС";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.64.1";
//	Обработчик.Процедура           = "Обработки.ФункциональностьПрограммы.УстановитьКонстантуРасширенныйФункционал";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.64.16";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ЗаполнитьДатуПоследнейЗагрузкиЭкземпляраПодключаемогоОборудованияЭвотор";
//	Обработчик.НачальноеЗаполнение = ЛОЖЬ; // Процедура НЕ должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.64.17";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ЗаполнитьПараметрыЗагрузкиЭкземпляраПодключаемогоОборудованияЭвотор";
//	Обработчик.НачальноеЗаполнение = ЛОЖЬ; // Процедура НЕ должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.65.3";
//	Обработчик.Процедура           = "Справочники.ВидыДеятельностиЕНВД.ЗаполнитьКонтактнуюИнформациюЗначениямиJSON";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.65.7";
//	Обработчик.Процедура           = "РегистрыСведений.РасчетАмортизации.ЗаполнитьПериод";
//	Обработчик.НачальноеЗаполнение = Ложь; // Не надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет период в записях регистра сведений Расчет амортизации.'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("78d27433-5b7f-4137-b9c7-4411054e5601");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.65.11";
//	Обработчик.Процедура           = "РегистрыСведений.ПервоначальныеСведенияОСНалоговыйУчет.ЗаполнитьСпособОтраженияРасходов";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.65.29";
//	Обработчик.Процедура           = "ПланыСчетов.Хозрасчетный.ОбновитьПараметрыСчетов08_1";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//		
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.65.31";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.УстановитьКонстантуОтправкаЧеков";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.65.34";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.УстановитьКонстантуИспользоватьДокументыПоступленияИП";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.66.2";
//	Обработчик.Процедура           = "ОбщегоНазначенияБП.УстановитьОпциюПоказыватьИнформационнуюПанель";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.66.3";
//	Обработчик.Процедура           = "ОбщегоНазначенияБП.УстановитьОпциюУстановкаМобильногоПриложения";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.66.4";
//	Обработчик.Процедура           = "Документы.РасходыНаОнлайнКассыУменьшающиеНалоги.ЗаполнитьУменьшаемыйНалог";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.66.9";
//	Обработчик.Процедура           = "Справочники.ОсновныеСредства.ЗаполнитьПризнакНедвижимоеИмущество";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.66.42";
//	Обработчик.Процедура           = "РегистрыСведений.ПервоначальныеСведенияНМАНалоговыйУчет.ЗаполнитьСпособОтраженияРасходов";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.66.45";
//	Обработчик.Процедура           = "УчетЗарплаты.ЗаполнитьСпособВыплаты";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.67.2";
//	Обработчик.Процедура           = "УчетЗарплаты.ВключитьРасчетЗарплатыДляНебольшихОрганизаций";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.67.2";
//	Обработчик.Процедура           = "УчетЗарплаты.УстановитьФункционалВедетсяУчетЗарплатыКадров";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.67.3";
//	Обработчик.Процедура           = "ОбщегоНазначенияБП.УстановитьОпциюОбращениеВТехническуюПоддержку";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.67.3";
//	Обработчик.Процедура           = "ОбщегоНазначенияБП.УстановитьОпциюДополнительнаяИнформация";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.67.12";
//	Обработчик.Процедура           = "МенеджерОборудованияВызовСервераПереопределяемый.ОбновитьПоставляемыеДрайвера";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.67.15";
//	Обработчик.Процедура           = "ИнтернетПоддержкаПользователейБП.УстановитьВидимостьНовостейРазделов";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.67.16";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.УстановитьПоказыватьСчетаВДокументах";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.67.18";
//	Обработчик.Процедура           = "ОбщегоНазначенияБП.УстановитьДоступностьОплатыСервиса";
//	Обработчик.Комментарий         = НСтр("ru = 'Настройка интерфейса оплаты сервиса.'");
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.67.19";
//	Обработчик.Процедура           = "РегистрыСведений.НастройкиСистемыНалогообложения.ОбновитьИспользуемыеСистемыНалогообложения";
//	Обработчик.НачальноеЗаполнение = Ложь;
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.67.19";
//	Обработчик.Процедура           = "Документы.СчетФактураПолученный.ОбработкаСчетФактурПолученныхБезНДС";
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("8ca40825-8101-42ae-a340-1c04775da244");
//	Обработчик.Комментарий         = НСтр("ru = 'Обработка движений документов ""Счет-фактура полученный"" по регистру накопления ""НДС Предъявленный"".'");
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.67.19";
//	Обработчик.Процедура           = "Справочники.ДоговорыКонтрагентов.ЗаполнитьСпособЗаполненияСтавкиНДС";
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("95929cdc-29f4-4e81-b663-8d000b020edb");
//	Обработчик.Комментарий         = НСтр("ru = 'Заполнение реквизита: СпособЗаполненияСтавкиНДС в договоре контрагента'");
//	Обработчик.НачальноеЗаполнение = Ложь;
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.67.19";
//	Обработчик.Процедура           = "Справочники.Номенклатура.ЗаполнитьВидыСтавокНДС";
//	Обработчик.НачальноеЗаполнение = Истина;
//		
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.67.65";
//	Обработчик.Процедура           = "РегистрыСведений.НалогиОтчеты.ОчиститьНеиспользуемыеНастройки";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.68.5"; 
//	Обработчик.Процедура           = "Документы.АвансовыйОтчет.ЗаполнитьВидОперацииПоУмолчанию";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет вид операции в авансовых отчетах.'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("4696ac65-cf43-4488-9e96-a2a4a85e5923");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.68.7";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.УстановитьОрганизациюФискальныеДанные";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.68.24";
//	Обработчик.Процедура           = "РегистрыСведений.БанковскиеСчетаИнтеграцииСБанком.ЗаполнитьПриОбновлении";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.68.41";
//	Обработчик.Процедура           = "МобильнаяБухгалтерия.ЗаполнитьГоловнойКонтрагентВСервисе";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	Обработчик.Комментарий         = НСтр("ru = 'Заполнение реквизита: ""Головной контрагент"" в справочнике Контрагенты, если он не был ранее заполнен в результате обмена с Мобильной бухгалтерией'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("de30911c-4df8-41c2-81c3-859409d0dfff");
//		
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.68.48";
//	Обработчик.Процедура           = "ПланыОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.ЗаполнитьУстанавливатьПечатьПрефиксаИБДокументов";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.68.48";
//	Обработчик.Процедура           = "ПланыОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.ОтключитьПечатьПрефиксовИБДляОбменаСУНФ";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.69.2";
//	Обработчик.Процедура           = "Справочники.КлассификаторПродукцииПоВидамДеятельности.ЗаполнитьПредопределенныеДанные";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор 	   = Новый УникальныйИдентификатор("463046df-f589-4374-80e1-8984edd31519");
//	Обработчик.Комментарий 		   = НСтр("ru = 'Заполняет предопределенные элементы справочника ""Классификатор продукции по видам деятельности (ОКПД)"".'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.69.5";
//	Обработчик.Процедура           = "Справочники.НоменклатураПоставщиков.ПеренестиНоменклатуруПоставщиковВРегистрБЭД";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор 	   = Новый УникальныйИдентификатор("8982942a-af59-48f4-b9f6-63f914bd27c2");
//	Обработчик.Комментарий 		   = НСтр("ru = 'Переносит данные справочника ""Номенклатура поставщиков"" регистр БЭД.'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.69.21";
//	Обработчик.Процедура           = "Документы.РасходныйКассовыйОрдер.ИсправитьПериодНалоговыхПлатежейУСН";
//	Обработчик.НачальноеЗаполнение  = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.69.21";
//	Обработчик.Процедура           = "Документы.СписаниеСРасчетногоСчета.ИсправитьПериодНалоговыхПлатежейУСН";
//	Обработчик.НачальноеЗаполнение  = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.69.21";
//	Обработчик.Процедура           = "РегистрыСведений.ПубликуемыеНавигационныеСсылки.Очистить";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.69.21";
//	Обработчик.Процедура           = "РегистрыСведений.РезультатыПроверкиНалоговОтчетовПрошлыхПериодов.ОбновитьПериодСобытия";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.70.2";
//	Обработчик.Процедура           = "РегистрыСведений.НастройкиСистемыНалогообложения.ЗаполнитьДатуИзменения";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.70.2";
//	Обработчик.Процедура           = "НастройкиУчета.УстановитьКонстантуИспользуетсяКассоваяКнига";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.70.9";
//	Обработчик.Процедура           = "Документы.НачислениеДивидендов.ЗаполнитьПланируемуюДатуВыплаты";
//	Обработчик.НачальноеЗаполнение = Ложь;
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.70.22";
//	Обработчик.Процедура           = "ПланыСчетов.Хозрасчетный.НастроитьСчетаОбеспеченияОбязательств";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.70.22";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ЗаполнитьКонстантуУчетОбеспеченийОбязательствИПлатежей";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.70.22";
//	Обработчик.Процедура            = "Обработки.ФункциональностьПрограммы.УстановитьКонстантуВедетсяУчетУслугИностранныхИнтернетКомпаний";
//	Обработчик.НачальноеЗаполнение  = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.71.3";
//	Обработчик.Процедура            = "ОбновлениеИнформационнойБазыБП.ПеренестиНастройкиКолонтитулов";
//	Обработчик.НачальноеЗаполнение  = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.71.23";
//	Обработчик.Процедура           = "ОбщегоНазначенияБП.УстановитьКонстантуИнтерфейсТаксиБазовый";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.71.23";
//	Обработчик.Процедура           = "Справочники.НастройкиИнтеграцииСБанками.ПереходНаНовыйИнтерфейсИнтеграцияСБанком";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.71.27";
//	Обработчик.Процедура           = "УчетЗарплаты.УстановитьФункционалВедетсяУчетЗарплатыКадров";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.71.81";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ВключитьПростойИнтерфейсБизнесСтарт";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.72.2";
//	Обработчик.Процедура           = "РегистрыСведений.УчетнаяПолитика.ВключитьИспользованиеБалансовогоМетодаУчетаОтложенногоНалога";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.72.26";
//	Обработчик.Процедура           = "Справочники.Контрагенты.ОбновитьКонтактнуюИнформациюДляСписков";
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("78ed1486-fefc-4630-867b-860bd1613f7a");
//	Обработчик.Комментарий         = НСтр("ru = 'Перезаполняет служебный реквизит ""ВидДляСписка"" в табличной части ""Контактная информация"" справочника ""Контрагенты""'");
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.72.29";
//	Обработчик.Процедура           = "Обработки.РасчетСтраховыхВзносовИП.ОбновитьСвязанныеПлатежиИЗадачи";
//		
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.72.39";
//	Обработчик.Процедура           = "Документы.АвансовыйОтчет.ЗаполнитьАналитикуУчетаКомандировочныхРасходов";
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет аналитику затрат (счет затрат, субконто) у документа ""Авансовый отчет"" (для командировок). Работа с некоторыми авансовыми отчетами временно невозможна.'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("264b721b-0ade-4889-90cb-464854040297");
//	Обработчик.ПроцедураПроверки   = "Документы.АвансовыйОтчет.НеТребуетсяЗаполнятьСчетаУчета";
//	Обработчик.БлокируемыеОбъекты  = "Документ.АвансовыйОтчет";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.72.45";
//	Обработчик.Процедура            = "ОбновлениеИнформационнойБазыБП.ЗаполнитьРеквизитыКлючевыхОпераций";
//	Обработчик.НачальноеЗаполнение  = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.ОбщиеДанные          = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.72.55";
//	Обработчик.Процедура           = "Справочники.ПрочиеДоходыИРасходы.УстановитьВидСтатьиДоходовИзлишкиПриИнвентаризацииОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.Комментарий         = НСтр("ru = 'Устанавливает новый вид статьи прочих доходов - ""Излишки при инвентаризации""'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("49324776-4e54-483e-9d38-2c4727b83ede");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.72.59";
//	Обработчик.Процедура           = "РегистрыСведений.ПараметрыТорговыхТочек.ОбновитьСтавкиТорговогоСбора";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия               = "3.0.73.9";
//	Обработчик.Процедура            = "ОбновлениеИнформационнойБазыБП.УстановитьВедетсяУчетИмпортаТоваров";
//	Обработчик.НачальноеЗаполнение  = Ложь;
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.73.14";
//	Обработчик.Процедура           = "Справочники.ВидыРегистровУчета.ЗаполнитьВидыРегистровУчета";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	Обработчик.ОбщиеДанные         = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.73.22";
//	Обработчик.Процедура           = "РегистрыСведений.СостоянияИнтеграцииСПлатформойСамозанятые.ЗаменитьСсылкиНаНеактуальныеСостояния";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.73.24";
//	Обработчик.Процедура           = "Справочники.НастройкиИнтеграцииСБанками.ОбновитьПраваПользователяИнтеграции";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.73.28";
//	Обработчик.Процедура           = "Справочники.ПрочиеДоходыИРасходы.ВключитьНастройкуПорядкаЭлементов";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.73.28";
//	Обработчик.Процедура           = "Справочники.СтатьиЗатрат.УстановитьТорговыйСбор";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.73.28";
//	Обработчик.Процедура           = "Справочники.СтатьиЗатрат.ВключитьНастройкуПорядкаЭлементов";
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.73.47";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ЗаменитьСсылкиНаДублирующиесяНаборыДополнительныхРеквизитовИСведений";
//	Обработчик.НачальноеЗаполнение  = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.74.3";
//	Обработчик.Процедура           = "МобильнаяБухгалтерия.ОчиститьДвиженияУдаленныхДокументов";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	Обработчик.Комментарий         = НСтр("ru = 'Очищает движения документов, которые были не корректно удалены при загрузке из Мобильной бухгалтерии.'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("154af76a-ed24-4009-90aa-2b103fbd8208");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.74.12";
//	Обработчик.Процедура           = "Документы.РозничнаяПродажа.ЗаполнитьСчетКасса";
//	Обработчик.НачальноеЗаполнение  = Ложь;
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет реквизит ""Счет касса"" для документов ""Розничная продажа"".'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("71cbef05-2a29-4382-a92f-a281662541a2");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.74.13";
//	Обработчик.Процедура           = "Обработки.ПечатьЧека.ПереключитьРежимПодготовкиДанныхПечатиЧека";
//	Обработчик.НачальноеЗаполнение  = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.74.15";
//	Обработчик.Процедура           = "РегистрыСведений.НастройкиУчетаНДС.ВключитьКонтрольДолиВычета";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.74.18";
//	Обработчик.Процедура           = "Справочники.ДоговорыКонтрагентов.ВключитьУчетПоДоговорамПриНаличииПользовательскихДоговоров";
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.74.18";
//	Обработчик.Процедура           = "Справочники.ШаблоныДоговоров.ВключитьУчетПоДоговорамПриНаличииПользовательскихШаблоновДоговоров";
//	
//	Обработчик.Версия              = "3.0.74.33";
//	Обработчик.Процедура           = "ПланыСчетов.Хозрасчетный.ВключитьУчетПоПодразделениямНаСчете44";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.74.35";
//	Обработчик.Процедура           = "ПланыСчетов.Хозрасчетный.ОбновитьПараметрыСчетовСлужебныйАвтотранспорт";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.74.48";
//	Обработчик.Процедура           = "Справочники.НастройкиИнтеграцииСБанками.ЗаполнитьПрефиксы";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.74.68";
//	Обработчик.Процедура           = "Документы.ПлатежноеПоручение.ВосстановитьСостояниеОплачено";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.75.39";
//	Обработчик.Процедура = "Документы.РегламентнаяОперация.ДобавитьРегламентнуюОперацию_РасчетНДФЛДляИП";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.75.39";
//	Обработчик.Процедура           = "Документы.РасходныйКассовыйОрдер.ИсправитьПериодНалоговыхПлатежейНДФЛ";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.75.39";
//	Обработчик.Процедура           = "Документы.СписаниеСРасчетногоСчета.ИсправитьПериодНалоговыхПлатежейНДФЛ";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.75.41";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ДозаполнениеКодовБыстрогоВыбора";
//	Обработчик.НачальноеЗаполнение = Ложь; // При начальном заполнении вызывается ОбновлениеИнформационнойБазыБП.ЗаполнениеКодовБыстрогоВыбора
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.75.43";
//	Обработчик.Процедура           = "УчетЗарплаты.ВосстановитьСтатьиРасходовЗарплата";
//	Обработчик.НачальноеЗаполнение = Истина; // Надо выполнять при обновлении с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.75.54";
//	Обработчик.Процедура           = "РасширенныйФункционал.ЗаполнитьГраницыКонтролируемости";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.75.54";
//	Обработчик.Процедура           = "УчетОбособленныхПодразделений.УстановитьВерсиюУведомленияОКонтролируемыхСделках2019";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.76.5";
//	Обработчик.Процедура           = "Отчеты.ВаловаяПрибыль.ВключитьПоказательКоличество";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.76.5";
//	Обработчик.Процедура           = "Отчеты.Продажи.ВключитьПоказательКоличество";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.76.7";
//	Обработчик.Процедура           = "Документы.ОтчетКомиссионераОПродажах.ОбновитьДокументыПоКомиссии";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("fb2d2245-b829-4709-8822-441cc5e10ee3");
//	Обработчик.Комментарий         = НСтр("ru = 'Переносит реквизит Сделка из таблицы Возвраты в таблицу
//		| ТоварыВозвращенные в документе Отчет комиссионера'");
//		
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.76.26";
//	Обработчик.Процедура           = "Справочники.КлассификаторВидовПредпринимательскойДеятельностиЕНВД.Обновить";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.ОбщиеДанные         = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.76.26";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.СократитьАдресСервисаРегиональныеСтавкиНалогов";
//	Обработчик.ОбщиеДанные         = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.76.27";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("58d9446a-51a9-45ef-b5c3-ad48aacd07f8");
//	Обработчик.Процедура           = "Документы.ПутевойЛист.ЗаполнитьРеквизитыПодписавшегоДокументПоУмолчанию";
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.ПроцедураПроверки   = "Документы.ПутевойЛист.РеквизитыПодписавшегоЛицаОбработаны";
//	Обработчик.БлокируемыеОбъекты  = "Документ.ПутевойЛист";
//	Обработчик.Комментарий = НСтр("ru = 'Заполняет значение новых реквизитов ДокументПодписал и ДолжностьПодписавшегоЛица у документов ""Путевой лист"" прошлых периодов.'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.76.34";
//	Обработчик.Процедура           = "Отчеты.СравнениеПродаж.ПеренестиПользовательскиеНастройкиВНовыйВариантОтчета";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.76.39";
//	Обработчик.Процедура           = "Справочники.НомераГТД.ОпределитьРегистрационныйНомерИСтрануВвозаОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("f10dfed8-f00e-4e47-abeb-8e47a37b7852");
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет значение реквизита ""Регистрационный номер"" в справочнике ""Номера ГТД"".'");
//	
//	// При изменениях в ИнтерфейсыВзаимодействияБРОКлиентСервер.ОтчетыОтправкаОграничена следует
//	// переносить обработчик на новую версию, а не копировать.
//	// При переносе обработчика следует переносить и этот комментарий.
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.76.47";
//	Обработчик.Процедура           = "Справочники.ПравилаПредставленияОтчетовУплатыНалогов.ЗаполнитьОтправкаОтчетаОграничена";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	Обработчик.ОбщиеДанные         = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.76.64";
//	Обработчик.Процедура           = "Справочники.ХранилищеШаблонов.ЗаполнитьПредопределенныеЭлементы";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.77.5";
//	Обработчик.Процедура           = "УчетЗарплаты.ЗаполнитьРолиСотрудников";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.77.5";
//	Обработчик.Процедура           = "УчетЗарплаты.НастроитьКадровыйУчетВОсновномИнтерфейсе";
//	Обработчик.НачальноеЗаполнение = Истина; // В противном случае процедура не запустится при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.77.5";
//	Обработчик.Процедура           = "УчетЗарплаты.ИсправитьФормироватьРезервОтпусковНУВНастройкахРезервовОтпусков";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.77.17";
//	Обработчик.Процедура           = "ПомеченныеНаУдалениеСервер.УстановитьОтображениеПомеченныхНаУдаление";
//	Обработчик.Комментарий         = НСтр("ru = 'Настройка отображения помеченных на удаление.'");
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.77.22";
//	Обработчик.Процедура           = "УчетЗарплаты.НастроитьОрганизационнуюСтруктуруПредприятий";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.77.35";
//	Обработчик.Процедура           = "УчетЗарплаты.СоздатьГрафикиРаботыОрганизаций";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.77.59";
//	Обработчик.Процедура           = "Обработки.ПроверкаЗаписейРегистраБухгалтерии.ИсправитьОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("7048a63b-e26d-4f13-a998-0d29a54c152e");
//	Обработчик.Комментарий         = НСтр("ru = 'Исправляет некорректные записи регистра бухгалтерии.'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.77.69";
//	Обработчик.Процедура           = "РегистрыСведений.НастройкиПродленияСроковНалоговОтчетов.ЗаполнитьНастройкиПродленияСроковДляМСП";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.77.70";
//	Обработчик.Процедура           = "ЗарплатаКадрыОбновлениеСПредыдущейРедакции.ЗаполнитьГоловныхСотрудниковВКадровойИстории";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.77.85";
//	Обработчик.Процедура           = "УчетЗарплаты.СоздатьГрафикиРаботыОрганизаций";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.78.7";
//	Обработчик.Процедура           = "РегистрыНакопления.НДСПредъявленныйРеализация0.ЗаполнитьПоставщикаПриОбновлении";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.78.7";
//	Обработчик.Процедура           = "РегистрыНакопления.НДСПредъявленныйРеализация0.ЗаполнитьПоставщикаПриОбновленииОтложенно";
//	Обработчик.НачальноеЗаполнение  = Ложь;
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет измерение ""Поставщик"" в регистре накопления ""НДС Предъявленный реализация 0%"".'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("e41c089b-ee44-488f-a2b3-351dcfb607a5");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.78.17";
//	Обработчик.Процедура           = "Справочники.ПроверкиКонтролирующимиОрганами.УстановитьВремяОбновленияПроверок";
//	Обработчик.ОбщиеДанные         = Истина;
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.78.22";
//	Обработчик.Процедура           = "Справочники.СостояниеВБраке.Заполнить";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.ОбщиеДанные         = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.78.24";
//	Обработчик.Процедура           = "ПланыСчетов.Хозрасчетный.ОбновитьПараметрыСчетовУчетаРасчетовПоОтгрузке";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.78.24";
//	Обработчик.Процедура           = "Документы.РеализацияТоваровУслуг.УстановитьСпособЗачетаАвансаДляОтгрузкиБезПереходаПраваСобственности";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.78.26";
//	Обработчик.Процедура           = "Справочники.ТранспортныеСредства.УстановитьОформляютсяПутевыеЛисты";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.78.48";
//	Обработчик.Процедура           = "Справочники.Организации.ПеренестиФайлыПодписантовВПрисоединенныеФайлы";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.78.48";
//	Обработчик.Процедура           = "Справочники.ФизическиеЛица.ПеренестиФайлыВПрисоединенныеФайлы";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.79.1";
//	Обработчик.Процедура           = "УчетЗарплаты.ПересмотретьСрокиУплатыНДФЛ";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.80.3";
//	Обработчик.Процедура           = "УчетЗарплаты.УточнитьКодДоходаНДФЛКомпенсацияОтпуска";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.80.17";
//	Обработчик.Процедура           = "ЭлектронноеВзаимодействиеБП.УстановитьНастройкиПолученияКорректировокИВозвратов";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.80.27";
//	Обработчик.Процедура           = "ПерсонализированныеПредложенияСервисов.ОчиститьБаннерыВРотацииПриОбновленииИнформационнойБазы";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.81.3";
//	Обработчик.Процедура           = "УчетЗарплаты.ЗаполнитьНаименованияКадровыхДокументов";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.81.3";
//	Обработчик.Процедура           = "УчетЗарплаты.ЗаполнитьНомераИНаименованияКадровыхДокументов";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.81.4";
//	Обработчик.Процедура           = "Документы.ВозвратТоваровОтПокупателя.УстановитьВидОперацииПриВозвратеОтКомиссионера";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.81.4";
//	Обработчик.Процедура           = "Документы.ВозвратТоваровОтПокупателя.УстановитьСделкуПриВозвратеПослеПереходаПраваСобственности";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.81.13";
//	Обработчик.Процедура           = "Документы.ОперацияСБилетом.ЗаполнитьРеквизитыВзаиморасчетов";
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет реквизиты взаиморасчетов (контрагент, договор, способ зачета авансов) у документа ""Поступление билетов"" (ранее - Операция с билетом). Работа с некоторыми поступлениями билетов временно невозможна.'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("eab04767-ef91-420c-9f35-afe182b7cdf0");
//	Обработчик.ПроцедураПроверки   = "Документы.ОперацияСБилетом.НеТребуетсяЗаполнятьРеквизитыВзаиморасчетов";
//	Обработчик.БлокируемыеОбъекты  = "Документ.ОперацияСБилетом";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.81.13";
//	Обработчик.Процедура           = "Документы.АвансовыйОтчет.ЗаполнитьСтавкуНДСВТаблицеБилетов";
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет ставку НДС в таблице ""Билеты"" документа ""Авансовый отчет"". Работа с некоторыми авансовыми отчетами временно невозможна.'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("e2f6845f-eb61-4879-bcd2-bf0d9a60ac93");
//	Обработчик.ПроцедураПроверки   = "Документы.АвансовыйОтчет.НеТребуетсяЗаполнятьСтавкуНДСВТаблицеБилетов";
//	Обработчик.БлокируемыеОбъекты  = "Документ.АвансовыйОтчет";
//		
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.82.4";
//	Обработчик.Процедура           = "Документы.ОплатаПлатежнойКартой.ПеренестиУслугиНПДВТабличнуюЧасть";
//	Обработчик.НачальноеЗаполнение  = Ложь;
//	Обработчик.Комментарий         = НСтр("ru = 'Переносит хранение реквизита ""Услуга НПД"" в табличную часть ""Расшифровка платежа"".'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("0485ae7b-e368-487b-8373-48fb1ede4e90");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.82.4";
//	Обработчик.Процедура           = "Документы.ПоступлениеНаРасчетныйСчет.ПеренестиУслугиНПДВТабличнуюЧасть";
//	Обработчик.НачальноеЗаполнение  = Ложь;
//	Обработчик.Комментарий         = НСтр("ru = 'Переносит хранение реквизита ""Услуга НПД"" в табличную часть ""Расшифровка платежа"".'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("4f0db6fb-734b-499a-a05b-16321c65e741");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.82.4";
//	Обработчик.Процедура           = "Документы.ПриходныйКассовыйОрдер.ПеренестиУслугиНПДВТабличнуюЧасть";
//	Обработчик.НачальноеЗаполнение  = Ложь;
//	Обработчик.Комментарий         = НСтр("ru = 'Переносит хранение реквизита ""Услуга НПД"" в табличную часть ""Расшифровка платежа"".'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("d2bd4f19-cda1-4ef3-a91f-0f5ae296bf1a");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.82.4";
//	Обработчик.Процедура           = "РегистрыСведений.ЧекиНПД.ЗаполнитьПричиныОтменыЧека";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет причину отмены в чеках НПД. Работа с некоторыми чеками временно ограничена.'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("d99dccd2-d007-4acb-9ec6-a16c96c99b87");
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.82.9";
//	Обработчик.Процедура           = "РегистрыСведений.ЖурналСтатусовФинОтчетностиВБанки.ЗаполнитьОтчетыВБанкиОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("ccea9312-be7a-4e74-b688-ca603b0283e9");
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет регистр ""1С:ФинОтчетность"".'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.82.9";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("67d1a4b5-6653-4936-8d15-976698cd6dab");
//	Обработчик.Процедура           = "Документы.ИнвентаризацияРасчетовСКонтрагентами.ЗаполнитьПереченьСчетовПоУмолчанию";
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.ПроцедураПроверки   = "Документы.ИнвентаризацияРасчетовСКонтрагентами.РеквизитПереченьСчетовОбработан";
//	Обработчик.БлокируемыеОбъекты  = "Документ.ИнвентаризацияРасчетовСКонтрагентами";
//	Обработчик.Комментарий = НСтр("ru = 'Заполняет значение новых реквизитов у документов ""Акт инвентаризации расчетов"".'");
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.82.9";
//	Обработчик.Процедура           = "УниверсальныйОбменСБанками.СброситьВерсиюБанков";
//	Обработчик.НачальноеЗаполнение = Ложь;
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.82.16";
//	Обработчик.Процедура           = "УчетЗарплаты.ОбновитьСоставКонтактнойИнформацииФизическогоЛица";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.82.17";
//	Обработчик.Процедура           = "Справочники.ПрочиеДоходыИРасходы.ОбновитьРеквизиты_ДоходыПоАвансамПрошлогоНалоговогоПериодаИП";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.83.2";
//	Обработчик.Процедура           = "РегистрыСведений.НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.ЗаполнитьРегистр";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.83.3";
//	Обработчик.Процедура           = "РегистрыСведений.СтатусыДокументов.ЗаполнитьНомераСчетовФактурПоДокументамРеализация";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет новый реквизит ""Номер счета-фактуры"" регистра сведений ""Статусы документов"".'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("f53a6f77-902b-46c2-8c3d-20d9b3871745");
//
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.83.14";
//	Обработчик.Процедура           = "УниверсальныйОбменСБанкамиФормы.ЗаявкиНаКредитСброситьВерсиюУслугБанка";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.83.15";
//	Обработчик.Процедура           = "РегистрыНакопления.НДСПредъявленныйРеализация0.ЗаполнитьПоставщикаПриОбновлении";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.83.15";
//	Обработчик.Процедура           = "РегистрыНакопления.НДСПредъявленныйРеализация0.ЗаполнитьПризнакНеПрименяетсяПоставщикДляРегистраНДСПредъявленныйРеализация0";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.83.18";
//	Обработчик.Процедура           = "ОбщегоНазначенияБП.УстановитьФункциональныеОпцииИспользуемыеИнтерфейсыВМоделиСервиса";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.83.20";
//	Обработчик.Процедура           = "УчетКассовыхЧековПодотчетныхЛиц.УстановитьОпциюУстановкаМобильногоПриложенияОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("1d395555-1b77-4530-aa71-b3a6d9b0e858");
//	Обработчик.Комментарий         = НСтр("ru = 'Проверка возможности использовать приложение 1С:БизнесСтарт. Сканер чеков'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.83.35";
//	Обработчик.Процедура           = "Справочники.ДоговорыКонтрагентов.ЗаполнитьСпособВыставленияДокументовОтложенно";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет новый реквизит ""Способ выставления документов"" справочника ""Договоры контрагентов"".'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("0075d9b4-c652-4990-a240-62eccdc6f358");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.84.3";
//	Обработчик.Процедура           = "УчетЗарплаты.НастроитьПорядокЗаполненияЭТК";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.84.8";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("2b773adb-5ff4-4b07-bfe4-f40e578c4663");
//	Обработчик.Процедура           = "Документы.ПутевойЛист.ЗаполнитьРеквизитыНДСПоУмолчанию";
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.ПроцедураПроверки   = "Документы.ПутевойЛист.РеквизитыНДСОбработаны";
//	Обработчик.БлокируемыеОбъекты  = "Документ.ПутевойЛист";
//	Обработчик.Комментарий = НСтр("ru = 'Заполняет значение новых реквизитов СтавкаНДС и СуммаВключаетНДС у документов ""Путевой лист"" прошлых периодов.'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.84.14";
//	Обработчик.Процедура           = "Перечисления.ВариантыУчетаСтоимостиВыпуска.УстановитьТранзитныйАлгоритмУчетаОтклоненийОтПлановойСебестоимости";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.Комментарий         = НСтр("ru = 'Сохраняет применение транзитного алгоритма учета отклонений от плановой себестоимости'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.85.18";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ПередатьЦентруМониторингаИспользованиеИнтеграцииСЛКФТС";
//	Обработчик.Комментарий         = НСтр("ru = 'Передает Центру мониторинга с согласия пользователя анонимизированные данные о фактическом использовании интеграции в личным кабинетом ФТС'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("1001d186-2953-4d1d-98c3-a28b23a45669");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.85.18";
//	Обработчик.Процедура           = "ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВосстановитьТипыСубконтоСФПолученные";
//	Обработчик.Комментарий         = НСтр("ru = 'Устанавливает недостающие типы для субконто ""Счета-фактуры полученные"" и передает Центру мониторинга с согласия пользователя данные об обнаруженных проблемах'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("2513ebd5-4d16-45fc-82a0-fdb503c26069");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.86.4";
//	Обработчик.Процедура           = "ФинОтчетностьВБанки.СброситьВерсиюУслугБанка";
//	
//	// Обработчик выполняется оперативно, т.к. должен отработать строго до следующего - 
//	// РегистрыСведений.ПорядокУплатыНалоговПоРегионам.ЗаполнитьДаннымиПрежнегоРегистра
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.87.9";
//	Обработчик.Процедура           = "Справочники.РегистрацииВНалоговомОргане.ЗаполнитьКодыРегионов";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.Комментарий 		   = НСтр("ru = 'Заполняет значения реквизита ""Регион"" справочника ""Регистрации в налоговых органах"".'");
//
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.87.9";
//	Обработчик.Процедура           = "РегистрыСведений.ПорядокУплатыНалоговПоРегионам.ЗаполнитьДаннымиПрежнегоРегистра";
//	Обработчик.НачальноеЗаполнение = Истина;
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.ПроцедураПроверки   = "РегистрыСведений.ПорядокУплатыНалоговПоРегионам.ВыполненоНачальноеЗаполнение";
//	Обработчик.БлокируемыеОбъекты  = "РегистрСведений.ПорядокУплатыНалоговПоРегионам";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("bfd04a8e-2e5e-49b0-8a9e-bd6a90dec553");
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет регистр ""Порядок уплаты налогов по регионам"" по данным регистра ""Порядок уплаты налогов на местах"".
//                                           |Настройка уплаты авансовых платежей,
//                                           |а также выполнение регламентной операции расчета транспортного налога могут быть ограничены.'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.87.11";
//	Обработчик.Процедура           = "УчетЗарплаты.ЗаполнитьВидДеятельностиДляНалоговогоУчетаЗатрат";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	// При изменении поставляемых данных следует переносить обработчик на новую версию, а не копировать,
//	// за исключением ситуаций, когда обработчик важно выполнить заведомо до обработчика обновления зависимых данных
//	// (о таких исключениях должно быть написано в комментарии к обработчику).
//	// При переносе обработчика следует переносить и этот комментарий.
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.87.24";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ДозаполнениеКодовБыстрогоВыбора";
//	Обработчик.НачальноеЗаполнение = Ложь; // При начальном заполнении вызывается ОбновлениеИнформационнойБазыБП.ЗаполнениеКодовБыстрогоВыбора
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.87.24";
//	Обработчик.Процедура = "ОбновлениеИнформационнойБазыБП.ЗаполнитьРеквизитыСчетовУчетаНДФЛ";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	// При изменении поставляемых данных следует переносить обработчик на новую версию, а не копировать,
//	// за исключением ситуаций, когда обработчик важно выполнить заведомо до обработчика обновления зависимых данных
//	// (о таких исключениях должно быть написано в комментарии к обработчику).
//	// При переносе обработчика следует переносить и этот комментарий.
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.87.24";
//	Обработчик.Процедура           = "Справочники.ВидыНалоговИПлатежейВБюджет.ЗаполнитьПоставляемыеДанные";
//	Обработчик.НачальноеЗаполнение = Ложь; // Для начального заполнения вызывается в 3.0.39.29
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.87.24";
//	Обработчик.Процедура           = "Справочники.ВидыНалоговИПлатежейВБюджет.ЗаполнитьНаименованиеНДФЛ_ИП_СПревышения";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.87.24";
//	Обработчик.Процедура           = "ПланыСчетов.Хозрасчетный.ОбновитьПараметрыСчетовНДФЛ_ИП";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.88.10";
//	Обработчик.Процедура           = "РегистрыСведений.УчетнаяПолитика.УстановитьСпособОтраженияАвансовыВыданных";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет способ отражения авансов выданных поставщику в учетной политике'");
//	
//	// Сбрасывает версию Классификатора банков (Справочника БИК), чтобы у пользователя появилось
//	// интерактивное предложение обновить устаревший классификатор.
//	//
//	// При изменении поставляемых данных следует переносить обработчик на новую версию, а не копировать,
//	// за исключением ситуаций, когда обработчик важно выполнить заведомо до обработчика разделенных данных
//	// (о таких исключениях должно быть написано в комментарии к обработчику).
//	// При переносе обработчика следует переносить и этот комментарий.
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.88.21";
//	Обработчик.Процедура           = "РаботаСБанкамиБП.СброситьВерсиюКлассификатораБанков";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.ОбщиеДанные         = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.89.4";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("2c74a77d-be0f-4d5b-a462-b91126a6d185");
//	Обработчик.Процедура           = "РегистрыСведений.ИПРасчетНДФЛ.ПеренестиСтавкуНалогаВИзмерения";
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Комментарий = НСтр("ru = 'Заполняет значение измерения ""Ставка НДС"" у регистра сведений ""Расчет НДФЛ (ИП)""'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.89.13"; 
//	Обработчик.Процедура           = "Документы.ОтчетПроизводстваЗаСмену.ЗаполнитьВидОперацииПоУмолчанию";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет вид операции в документе ""Отчет производства за смену"".'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("d94fb7e8-5b2e-4fd1-b431-e35e9e5dc662");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.89.13";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.УстановитьКонстантуИспользоватьВыпускПродукции";
//	Обработчик.РежимВыполнения     = "Монопольно";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.89.15";
//	Обработчик.Процедура           = "Справочники.НастройкиУчетаЗатрат.СоздатьЭлементы";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.89.16";
//	Обработчик.Процедура           = "РегистрыСведений.УчетнаяПолитика.СоздатьЗаписи2021";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	// При изменении поставляемых данных следует переносить обработчик на новую версию, а не копировать,
//	// за исключением ситуаций, когда обработчик важно выполнить заведомо до обработчика обновления зависимых данных
//	// (о таких исключениях должно быть написано в комментарии к обработчику).
//	// При переносе обработчика следует переносить и этот комментарий.
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.89.16";
//	Обработчик.Процедура           = "РегистрыСведений.КорреспонденцииСчетов.ЗаполнитьКорреспонденцииСчетов";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.ОбщиеДанные         = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.89.23";
//	Обработчик.Процедура           = "РегистрыСведений.НастройкиУчетаНалогаНаПрибыль.ЗаполнитьСтавкиНалогаНаПрибыльС2021По2024Годы";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.Комментарий		   = НСтр("ru = 'Корректирует ставки налога в настройках налога на прибыль на 2021-2024 годы'");
//	Обработчик.РежимВыполнения 	   = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("5a7a010d-3d1e-4e89-91b3-bff1017b071f");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.90.3";
//	Обработчик.Процедура           = "ПланыОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.ИзменитьИдентификаторИНастройкиОбменаСКассой";
//	Обработчик.НачальноеЗаполнение = Ложь;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.90.4";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("cd7aa347-5317-4b4b-aaf4-30e4c2b0e556");
//	Обработчик.Процедура           = "РаботаСБанкамиБП.ОбновитьБанковскиеСчетаГосударственныхОрганов";
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.Комментарий = НСтр("ru = 'Заполняет счета казначейства для государственных органов'");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.90.12";
//	Обработчик.Процедура           = "Документы.ТребованиеНакладная.ЗаполнитьВидОперацииПоУмолчанию";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	Обработчик.Комментарий         = НСтр("ru = 'Заполняет вид операции в документе ""Расход материалов (требование-накладная)"".'");
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("d8f68f91-4f7f-4afd-9289-86d18548b462");
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.90.28";
//	Обработчик.Процедура           = "РегистрыСведений.НалогиОтчеты.ОчиститьНеиспользуемыеНастройки";
//	Обработчик.НачальноеЗаполнение = Ложь; // Для начального заполнения вызывается в 3.0.67.65
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.90.33";
//	Обработчик.Идентификатор       = Новый УникальныйИдентификатор("ad03fc9c-f38c-42aa-b70a-ceb21352bfb4");
//	Обработчик.Процедура           = "Документы.РозничнаяПродажа.ЗаполнитьСистемуНалогообложения";
//	Обработчик.РежимВыполнения     = "Отложенно";
//	Обработчик.НачальноеЗаполнение = Ложь; 
//	Обработчик.Комментарий = НСтр("ru = 'Заполняет реквизит ""Система налогообложения"" документа ""Розничная продажа""'");
//	
//	// При изменении поставляемых данных следует переносить обработчик на новую версию, а не копировать,
//	// за исключением ситуаций, когда обработчик важно выполнить заведомо до обработчика разделенных данных
//	// (о таких исключениях должно быть написано в комментарии к обработчику).
//	// При переносе обработчика следует переносить и этот комментарий.
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.90.38";
//	Обработчик.Процедура           = "Справочники.ЗадачиБухгалтера.ЗаполнитьТребованиямиНормативныхДокументов";
//	Обработчик.НачальноеЗаполнение = Ложь;// Для начального заполнения вызывается в 3.0.25.4
//	Обработчик.ОбщиеДанные         = Истина;
//	
//	// При изменении поставляемых данных следует переносить обработчик на новую версию, а не копировать,
//	// за исключением ситуаций, когда обработчик важно выполнить заведомо до обработчика разделенных данных
//	// (о таких исключениях должно быть написано в комментарии к обработчику).
//	// При переносе обработчика следует переносить и этот комментарий.
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.90.49";
//	Обработчик.Процедура           = "Справочники.СтатистическиеПоказатели.ЗаполнитьПоставляемымиПравилами";
//	Обработчик.ОбщиеДанные         = Истина;
//	Обработчик.НачальноеЗаполнение = Истина;
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.90.53";
//	Обработчик.Процедура           = "УчетЗарплаты.ВключитьАвтообменПоСЭДОФСС";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.90.54";
//	Обработчик.Процедура           = "РегистрыСведений.ПараметрыТорговыхТочек.ОбновитьСтавкиТорговыеАвтоматы";
//	Обработчик.НачальноеЗаполнение = Ложь; // В 2.0 торгового сбора не было, поэтому при переходе ставки обновлять не нужно
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.90.54";
//	Обработчик.Процедура           = "Справочники.РегистрацииВНалоговомОргане.УстановитьОтборНовостейТорговыйСбор";
//	Обработчик.НачальноеЗаполнение = Истина; // Процедура должна запускаться при переходе с 2БП на 3БП
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.91.1";
//	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыБП.ЗаполнитьРеквизитыСчетовМалоценки";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.91.1";
//	Обработчик.Процедура           = "Справочники.СтатьиЗатрат.УстановитьСтатьюЗатратДляМалоценки";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.91.1";
//	Обработчик.Процедура           = "Справочники.Видыноменклатуры.ОбновитьВидыНоменклатурыМалоценка";
//	
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия              = "3.0.91.28";
//	Обработчик.Процедура           = "РегистрыСведений.ЛицензииПоставщиковАлкогольнойПродукции.ЗаполнитьВидыДеятельности";
//	Обработчик.НачальноеЗаполнение = Истина;
//	
КонецПроцедуры

// См. описание в общем модуле ОбновлениеИнформационнойБазыБСП.
Процедура ПередОбновлениемИнформационнойБазы() Экспорт
	
	ОбновлениеСПредыдущейРедакции.УстановитьВестиУчетПоПодразделениям();
	
	ОбновлениеСПредыдущейРедакции.ОчиститьВерисиюПодсистемыБСППриПереходеС2БП();
	
	ОбновлениеСПредыдущейРедакции.ОбработатьПотерянныеОбъекты();
	
	ОбновлениеСПредыдущейРедакции.ОчиститьНовыеПодсистемы();
	
КонецПроцедуры

// См. описание в общем модуле ОбновлениеИнформационнойБазыБСП.
Процедура ПослеОбновленияИнформационнойБазы(Знач ПредыдущаяВерсия, Знач ТекущаяВерсия,
		Знач ВыполненныеОбработчики, ВыводитьОписаниеОбновлений, МонопольныйРежим) Экспорт
	
КонецПроцедуры

// См. описание в общем модуле ОбновлениеИнформационнойБазыБСП.
Процедура ПриПодготовкеМакетаОписанияОбновлений(Знач Макет) Экспорт
	
	СхемаМакетаОписанияОбновлений = СхемаМакетаОписанияОбновлений(Макет);
	ЗаполнитьЗначенияФункциональности(СхемаМакетаОписанияОбновлений);
	СформироватьМакетПоФункциональнымОпциям(Макет, СхемаМакетаОписанияОбновлений);
	ДополнитьСсылкиМакетаФильтромПоФункциональнымОпциям(Макет);
	
КонецПроцедуры

// Добавляет в список процедуры-обработчики перехода с другой программы (с другим именем конфигурации).
// Например, для перехода между разными, но родственными конфигурациями: базовая -> проф -> корп.
// Вызывается перед началом обновления данных ИБ.
//
//  Обработчики - ТаблицаЗначений - с колонками:
//    * ПредыдущееИмяКонфигурации - Строка - имя конфигурации, с которой выполняется переход;
//    * Процедура                 - Строка - полное имя процедуры-обработчика перехода с программы ПредыдущееИмяКонфигурации. 
//                                  Например, "ОбновлениеИнформационнойБазыУПП.ЗаполнитьУчетнуюПолитику"
//                                  Обязательно должна быть экспортной.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.ПредыдущееИмяКонфигурации  = "УправлениеТорговлей";
//  Обработчик.Процедура                  = "ОбновлениеИнформационнойБазыУПП.ЗаполнитьУчетнуюПолитику";
//
Процедура ПриДобавленииОбработчиковПереходаСДругойПрограммы(Обработчики) Экспорт
	
	Если Не СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации() Тогда
		
		Обработчик = Обработчики.Добавить();
		Обработчик.ПредыдущееИмяКонфигурации  = "БухгалтерияПредприятияБазовая";
		Обработчик.Процедура                  = "Обработки.ФункциональностьПрограммы.УстановитьПолнуюФункциональность";
		
		Обработчик = Обработчики.Добавить();
		Обработчик.ПредыдущееИмяКонфигурации  = "БухгалтерияПредприятияБазовая";
		Обработчик.Процедура                  = "ОбновлениеИнформационнойБазыБП.УстановитьКонстантыВестиУчетПоОрганизациям";
		
		Обработчик = Обработчики.Добавить();
		Обработчик.ПредыдущееИмяКонфигурации  = "БухгалтерияПредприятияБазовая1";
		Обработчик.Процедура                  = "Обработки.ФункциональностьПрограммы.УстановитьПолнуюФункциональность";
		
		Обработчик = Обработчики.Добавить();
		Обработчик.ПредыдущееИмяКонфигурации  = "БухгалтерияПредприятияБазовая1";
		Обработчик.Процедура                  = "ОбновлениеИнформационнойБазыБП.УстановитьКонстантыВестиУчетПоОрганизациям";
		
	КонецЕсли;
	
	//не предполагаем обновление с Базовой на КОРП, нет таких cfu
	Обработчик = Обработчики.Добавить();
	Обработчик.ПредыдущееИмяКонфигурации  = "БухгалтерияПредприятия";
	Обработчик.Процедура                  = "УчетОбособленныхПодразделений.ПодготовитьИнформационнуюБазу";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.ПредыдущееИмяКонфигурации  = "БухгалтерияПредприятия";
	Обработчик.Процедура                  = "РасширенныйФункционал.ЗаполнитьГраницыКонтролируемости";
	
КонецПроцедуры

// Позволяет переопределить режим обновления данных информационной базы.
// Для использования в редких (нештатных) случаях перехода, не предусмотренных в
// стандартной процедуре определения режима обновления.
//
// Параметры:
//   РежимОбновленияДанных - Строка - в обработчике можно присвоить одно из значений:
//              "НачальноеЗаполнение"     - если это первый запуск пустой базы (области данных);
//              "ОбновлениеВерсии"        - если выполняется первый запуск после обновление конфигурации базы данных;
//              "ПереходСДругойПрограммы" - если выполняется первый запуск после обновление конфигурации базы данных, 
//                                          в которой изменилось имя основной конфигурации.
//
//   СтандартнаяОбработка  - Булево - если присвоить Ложь, то стандартная процедура
//                                    определения режима обновления не выполняется, 
//                                    а используется значение РежимОбновленияДанных.
//
Процедура ПриОпределенииРежимаОбновленияДанных(РежимОбновленияДанных, СтандартнаяОбработка) Экспорт
	
	Если ОбновлениеСПредыдущейРедакции.ЭтоПереходСРедакции20() Тогда 
		
		РежимОбновленияДанных = "ОбновлениеВерсии";
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

// Вызывается после выполнения всех процедур-обработчиков перехода с другой программы (с другим именем конфигурации),
// и до начала выполнения обновления данных ИБ.
//
// Параметры:
//  ПредыдущееИмяКонфигурации    - Строка - имя конфигурации до перехода.
//  ПредыдущаяВерсияКонфигурации - Строка - имя предыдущей конфигурации (до перехода).
//  Параметры                    - Структура - 
//    * ВыполнитьОбновлениеСВерсии   - Булево - по умолчанию Истина. Если установить Ложь, 
//        то будут выполнена только обязательные обработчики обновления (с версией "*").
//    * ВерсияКонфигурации           - Строка - номер версии после перехода. 
//        По умолчанию, равен значению версии конфигурации в свойствах метаданных.
//        Для того чтобы выполнить, например, все обработчики обновления с версии ПредыдущаяВерсияКонфигурации, 
//        следует установить значение параметра в ПредыдущаяВерсияКонфигурации.
//        Для того чтобы выполнить вообще все обработчики обновления, установить значение "0.0.0.1".
//    * ОчиститьСведенияОПредыдущейКонфигурации - Булево - по умолчанию Истина. 
//        Для случаев когда предыдущая конфигурация совпадает по имени с подсистемой текущей конфигурации, следует указать Ложь.
//
Процедура ПриЗавершенииПереходаСДругойПрограммы(Знач ПредыдущееИмяКонфигурации, 
	Знач ПредыдущаяВерсияКонфигурации, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Заполнение пустой ИБ

// Процедура-обработчик обновления и первоначального заполнения
// данных ИБ, которая выполняется однократно при переходе на версию 1.0.0.0.
//
//	
//	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда // В подчиненных узлах РИБ не выполняется
//		Возврат;
//	КонецЕсли;
//	
//	//Установить аналитику на новых счетах
//	
//	ИсточникНастроек = ПланыСчетов.Хозрасчетный.ТоварыНаСкладах; 
//	
//	Счета = Новый Массив();
//	Счета.Добавить(ПланыСчетов.Хозрасчетный.МалоценноеОборудованиеИЗапасы);
//	Счета.Добавить(ПланыСчетов.Хозрасчетный.ПриобретениеМалоценногоОборудованияИЗапасов);
//	Счета.Добавить(ПланыСчетов.Хозрасчетный.ВыбытиеМалоценногоОборудованияИЗапасов);
//	
//	Для каждого Счет Из Счета Цикл
//		
//		Попытка
//			Объект = Счет.ПолучитьОбъект();
//			Объект.НастроитьПоКоду();
//			
//			Если Счет = ПланыСчетов.Хозрасчетный.МалоценноеОборудованиеИЗапасы Тогда
//				Объект.ЗапретитьИспользоватьВПроводках = Истина;
//			КонецЕсли;
//			
//			ВидыСубконтоИстоник = ИсточникНастроек.ВидыСубконто.Выгрузить();
//			Объект.ВидыСубконто.Загрузить(ВидыСубконтоИстоник);
//			
//			ПланыСчетов.Хозрасчетный.ЗаписатьОбъект(Объект);
//			
//		Исключение
//			
//			ШаблонСообщения = НСтр("ru = 'Не удалось установить субконто на счете %1
//				|%2'");
//			ТекстСообщения = СтрШаблон(ШаблонСообщения, Счет.Наименование, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
//			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
//				УровеньЖурналаРегистрации.Ошибка,
//				,
//				,
//				ТекстСообщения);
//			
//		КонецПопытки;
//		
//	КонецЦикла;	
//	
//КонецПроцедуры

#КонецОбласти
