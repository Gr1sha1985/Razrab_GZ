////////////////////////////////////////////////////////////////////////////////
// Учет страховых взносов по налогам.
// Серверные функции для получения размера страховых взносов, больничных и др. платежей,
// уменьшающих налог по отдельным налоговым режимам (УСН, ЕНВД и др.).
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Функция получает все расходы, уменьшающие налог УСН и ЕНВД.
//
// Параметры:
//  ТаблицаРеквизитов - ТаблицаЗначений -  таблица с параметрами проведения, 
//   см. функцию ПодготовитьПараметрыРасчетаРасходовУменьшающихНалоги() модуля менеджера документа РегламентнаяОперация.
// 
// Возвращаемое значение:
//  ТаблицаЗначений -  Таблица с расходами, см. функцию ПустаяТаблицаРасходов()
//
Функция РасчетРасходовУменьшающихОтдельныеНалоги(ТаблицаРеквизитов) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизитов) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Реквизиты = ТаблицаРеквизитов[0];
	Если Не Реквизиты.ПрименяетсяУСНДоходы
	   И Не Реквизиты.ПлательщикЕНВД И Не Реквизиты.ПрименяетсяПСН Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыРасходовУменьшающихНалог(ТаблицаРеквизитов);
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Параметры.Реквизиты[0]);
	
	// 1. Таблицы первичных операций по расходам, уменьшающих налог,
	// и границы периодов для анализа начислений
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	УстановитьПараметрыЗапросаРасходыУменьшающиеНалог(Запрос, Реквизиты);
	
	НомераТаблиц = Новый Структура;
	ТаблицыДанных = Новый Структура;
	
	// Процедура ТекстЗапросаНалоговыеРегистрации должна исполняться первой в списке запросов.
	Запрос.Текст = ТекстЗапросаНалоговыеРегистрации(НомераТаблиц, Реквизиты)
		+ ТекстЗапросаОперацииПоВзносамСФОТ(НомераТаблиц, ТаблицыДанных, Реквизиты)
		+ ТекстЗапросаОперацииВыплатыЗарплаты(НомераТаблиц, ТаблицыДанных, Реквизиты);
	
	Если Не ПустаяСтрока(Запрос.Текст) Тогда
		Результат = Запрос.ВыполнитьПакет();
		Для Каждого НомерТаблицы Из НомераТаблиц Цикл
			ТаблицыДанных.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЦикла;
	КонецЕсли;
	
	// 2. Таблицы расходов для отражения в учете
	// Если применяется ЕНВД или ПСН - расходы будут скорректированы на процент начислений, относящихся к ЕНВД (ПСН)
	
	НомераТаблиц = Новый Структура;
	
	ДополнитьПараметрыЗапросаПоРасходамПериодамиНачислений(Запрос, ТаблицыДанных, Реквизиты);
	
	Запрос.Текст = ТекстЗапросаРасходыПоВзносам(НомераТаблиц, ТаблицыДанных, Реквизиты)
		+ ТекстЗапросаРасходыПоБольничным(НомераТаблиц, ТаблицыДанных, Реквизиты)
		+ ТекстЗапросаВыручкаПоРегистрациям(НомераТаблиц, ТаблицыДанных, Реквизиты);
		
	Если Не ПустаяСтрока(Запрос.Текст) Тогда
		Результат = Запрос.ВыполнитьПакет();
		Для Каждого НомерТаблицы Из НомераТаблиц Цикл
			ТаблицыДанных.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЦикла;
	КонецЕсли;
	
	ТаблицаРасходов = ПустаяТаблицаРасходов();
	
	// взносы с ФОТ
	ДобавитьРасходыПоВзносамСФОТ(ТаблицыДанных.РасходыПоВзносам, Реквизиты, ТаблицаРасходов);
	// расходы по больничным
	ДобавитьРасходыПоВыплатеБольничных(ТаблицыДанных.РасходыПоБольничным, Реквизиты, ТаблицаРасходов);
	
	РаспределитьПоРегистрациям(ТаблицыДанных.ВыручкаПоРегистрациям, Реквизиты, ТаблицаРасходов);
	
	// расходы по взносам ИП
	ДобавитьРасходыПоВзносамИП(Реквизиты, ТаблицаРасходов);
	
	Возврат ТаблицаРасходов;
КонецФункции

Процедура СформироватьДвиженияРасходыУменьшающиеОтдельныеНалоги(ТаблицаРасходов, ТаблицаРеквизитов, Движения, Отказ) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизитов) Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = ТаблицаРеквизитов[0];
	Если Не Реквизиты.ПрименяетсяУСНДоходы
		И Не Реквизиты.ПлательщикЕНВД И Не Реквизиты.ПрименяетсяПСН Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыДвиженийРасходовПоНалогам(ТаблицаРасходов, ТаблицаРеквизитов);
	Реквизиты = Параметры.Реквизиты[0];
	
	ТаблицаДвижений = Параметры.ТаблицаРасходов;
	
	ТаблицаДвижений.Сортировать("ДокументРасходаДата, ДокументРасхода, ПериодНачисления", Новый СравнениеЗначений);
	
	Для каждого СтрокаЗаписи Из ТаблицаДвижений Цикл
		
		Если СтрокаЗаписи.СуммаРасхода > 0 Или СтрокаЗаписи.СуммаРасходаСпецРежим > 0 Тогда
			
			Движения.РасходыУменьшающиеНалогПоОтдельнымРежимам.Записывать = Истина;
			
			Запись = Движения.РасходыУменьшающиеНалогПоОтдельнымРежимам.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, СтрокаЗаписи);
			ЗаполнитьЗначенияСвойств(Запись, Реквизиты);
			
			Если Реквизиты.ПлательщикЕНВД
				И СтрокаЗаписи.ПериодНачисления < УчетЕНВДКлиентСервер.ДатаОтменыЕНВД() Тогда
				
				Запись.СуммаРасходаЕНВД = СтрокаЗаписи.СуммаРасходаСпецРежим;
				Запись.ДоляЕНВД = СтрокаЗаписи.ДоляСпецРежим;
				Запись.НачисленоЕНВД = СтрокаЗаписи.НачисленоСпецРежим;
				Запись.СуммаРасходаЕНВДРаспределяемая = СтрокаЗаписи.СуммаРасходаСпецрежимРаспределяемая;
				
			ИначеЕсли Реквизиты.ПрименяетсяПСН
				И Реквизиты.Период >= УчетПСНКлиентСервер.ДатаНачалаУменьшенияПСННаСтраховыеВзносы() Тогда
				
				Запись.СуммаРасходаПСН = СтрокаЗаписи.СуммаРасходаСпецРежим;
				Запись.ДоляПСН = СтрокаЗаписи.ДоляСпецРежим;
				Запись.НачисленоПСН = СтрокаЗаписи.НачисленоСпецРежим;
				Запись.СуммаРасходаПСНРаспределяемая = СтрокаЗаписи.СуммаРасходаСпецрежимРаспределяемая;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Функция возвращает таблицу, сгруппированную по видам расходов и их счетам учета.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - состоит из следующих столбцов:
//   *ВидРасходов - Строка - группировка вида расходов.
//   *Заголовок - Строка - наименование группировки вида расходов.
//   *СчетаУчета - Массив - счета, относящиеся к данной группировке вида расходов.
//
Функция СчетаРасходовУменьшающихНалог() Экспорт 

	ТаблицаСчетов = Новый ТаблицаЗначений;
	ТаблицаСчетов.Колонки.Добавить("ВидРасходов", ОбщегоНазначения.ОписаниеТипаСтрока(100));
	ТаблицаСчетов.Колонки.Добавить("Заголовок", ОбщегоНазначения.ОписаниеТипаСтрока(100));
	ТаблицаСчетов.Колонки.Добавить("СчетУчета", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаСчетов.Индексы.Добавить("СчетУчета");
	
	УсловияОтбораСубсчетов = БухгалтерскийУчет.НовыеУсловияОтбораСубсчетов();
	УсловияОтбораСубсчетов.Забалансовый = Ложь;
	
	// Страховые взносы в ПФР, ФФОМС, ФСС, ФСС_НС для организаций
	МассивСчетов = Новый Массив;
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПФР_ОПС);   // 69.02.7
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ФОМС);      // 69.03
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ФСС);       // 69.01
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ); // 69.11
	СчетаСтраховыхВзносов = БухгалтерскийУчет.СформироватьМассивСубсчетовПоОтбору(МассивСчетов, УсловияОтбораСубсчетов);
	
	Для каждого СчетУчета Из СчетаСтраховыхВзносов Цикл
		СтрокаВидаРасходов = ТаблицаСчетов.Добавить();
		СтрокаВидаРасходов.ВидРасходов = "СтраховыеВзносы";
		СтрокаВидаРасходов.Заголовок = Нстр("ru = 'Страховые взносы'");
		СтрокаВидаРасходов.СчетУчета = СчетУчета;
	КонецЦикла;
	
	// Фиксированные взносы ИП
	МассивСчетов = Новый Массив;
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ФОМС_СтраховойГод); // 69.06.3 - взносы в ФФОМС
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПФР_ОПС_ИП);        // 69.06.5 - взносы в ПФР
	
	СчетаСтраховыхВзносовИП = БухгалтерскийУчет.СформироватьМассивСубсчетовПоОтбору(МассивСчетов, УсловияОтбораСубсчетов);

	Для каждого СчетУчета Из СчетаСтраховыхВзносовИП Цикл
		СтрокаВидаРасходов = ТаблицаСчетов.Добавить();
		СтрокаВидаРасходов.ВидРасходов = "ФиксированныеВзносыИП";
		СтрокаВидаРасходов.Заголовок = Нстр("ru = 'Страховые взносы в фиксированном размере'");
		СтрокаВидаРасходов.СчетУчета = СчетУчета;
	КонецЦикла;
	
	// Больничные
	СтрокаВидаРасходов = ТаблицаСчетов.Добавить();
	СтрокаВидаРасходов.ВидРасходов = "Больничные";
	СтрокаВидаРасходов.Заголовок = Нстр("ru = 'Больничные'");
	СтрокаВидаРасходов.СчетУчета = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда; // 70
	
	Возврат ТаблицаСчетов;
	
КонецФункции

Функция СчетаСтраховыхВзносовУменьшающихНалог() Экспорт
	
	ТаблицаСчетов = СчетаРасходовУменьшающихНалог();
	СчетаУчетаУплачено = ТаблицаСчетов.ВыгрузитьКолонку("СчетУчета");
	ИсключаемыеСчета = Новый Массив;
	ИсключаемыеСчета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда); //70
	
	Возврат ОбщегоНазначенияКлиентСервер.РазностьМассивов(СчетаУчетаУплачено, ИсключаемыеСчета);
	
КонецФункции

// Функция получает коэффициент - долю доходов ЕНВД в общем объеме доходов индивидуального предпринимателя за квартал.
//
// Параметры:
//  Организация  - СправочникСсылка.Организации - организация, доходы которой анализируются
//                 
//  Период       - Дата - дата квартала, за который рассчитывается коэффициент.
//                        Показатели доходов определяются с начала квартала по конец квартала переданной даты.
//                        Предполагается, что период, за который получаются доходы, лежит в пределах налогового периода,
//                        параметры систем налогообложения в течение которого неизменны.
//
// Возвращаемое значение:
//   Число – коэффициент-доля доходов ЕНВД в общем объеме доходов.
//
Функция КоэффициентДоходовЕНВДДляРаспределенияФиксированныхВзносов(Организация, Период) Экспорт
	
	Перем ДатаИзменения;
	
	Если ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Организация) Тогда
		Возврат 0;
	КонецЕсли;
	
	// Проверим изменение учетной политики в рамках квартала
	ПлательщикЕНВД = УчетнаяПолитика.ПлательщикЕНВД(Организация, КонецКвартала(Период), ДатаИзменения);
	Если Не ПлательщикЕНВД И ДатаИзменения <= НачалоКвартала(Период) Тогда
		Возврат 0; // Не применяется ЕНВД с прошлых периодов
	КонецЕсли;
	
	Если Не ПлательщикЕНВД И Не УчетнаяПолитика.ПлательщикЕНВД(Организация, НачалоДня(ДатаИзменения) - 1) Тогда
		Возврат 0; // В текущем квартале учетная политика изменилась, но статус плательщика ЕНВД не изменился
	КонецЕсли;
	
	ДоляДоходовЕНВД = 0;
	
	ПрименяетсяУСН = УчетнаяПолитика.ПрименяетсяУСН(Организация, КонецКвартала(Период), ДатаИзменения)
		Или УчетнаяПолитика.ПрименяетсяУСН(Организация, НачалоДня(ДатаИзменения) - 1); // Учитываем изменение статус в течение квартала
	
	Если ПрименяетсяУСН Тогда
		
		Параметры = Новый Структура("Дата, Организация", КонецКвартала(Период), Организация);
		ДоляДоходовЕНВД = НалоговыйУчетУСН.ПолучитьКоэффРаспределенияЕНВД(Параметры, "Квартал", "НУ");
		
	Иначе
		
		ДоляДоходовЕНВД = УчетДоходовИРасходовПредпринимателя.ДоляДоходовЕНВД(Организация,
			НачалоКвартала(Период),
			КонецКвартала(Период));
		
	КонецЕсли;
	
	Возврат ДоляДоходовЕНВД;
	
КонецФункции

// Возвращает счета учета страховых взносов, уплачиваемых за наемных работников
// и уменьшающих налоги УСН, ПСН или ЕНВД.
//
// Возвращаемое значение:
//   Массив из ПланСчетовСсылка.Хозрасчетный.
//
Функция СчетаСтраховыхВзносовЗаСотрудниковУменьшающихНалог() Экспорт
	
	ТаблицаСчетов = СчетаРасходовУменьшающихНалог();
	ВсеСчетаРасходов = ТаблицаСчетов.ВыгрузитьКолонку("СчетУчета");
	
	ИсключаемыеСчета = Новый Массив;
	ИсключаемыеСчета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда); // Счет 70 - больничные.
	ИсключаемыеСчета.Добавить(ПланыСчетов.Хозрасчетный.ПФР_ОПС_ИП); // Счет 69.06.5 - взносы ИП в ПФР за себя.
	ИсключаемыеСчета.Добавить(ПланыСчетов.Хозрасчетный.ФОМС_СтраховойГод); // Счет 69.06.3 - взносы ИП в ФОМС за себя.
	
	Возврат ОбщегоНазначенияКлиентСервер.РазностьМассивов(ВсеСчетаРасходов, ИсключаемыеСчета);
	
КонецФункции

// Возвращает счета учета фиксированных страховых взносов ИП за себя,
// уменьшающих налоги УСН, ПСН или ЕНВД.
//
// Возвращаемое значение:
//   Массив из ПланСчетовСсылка.Хозрасчетный
//
Функция СчетаСтраховыхВзносовИПЗаСебяУменьшающихНалог() Экспорт
	
	СчетаВзносовЗаСебя = Новый Массив;
	СчетаВзносовЗаСебя.Добавить(ПланыСчетов.Хозрасчетный.ФОМС_СтраховойГод); // 69.06.3 - взносы в ФФОМС
	СчетаВзносовЗаСебя.Добавить(ПланыСчетов.Хозрасчетный.ПФР_ОПС_ИП);        // 69.06.5 - взносы в ПФР
	
	Возврат СчетаВзносовЗаСебя;
	
КонецФункции

// Функция получает коэффициент - долю доходов ЕНВД в общем объеме доходов индивидуального предпринимателя
// за последний год применения ЕНВД.
//
// Параметры:
//  Организация  - СправочникСсылка.Организации - организация, доходы которой анализируются.
//
// Возвращаемое значение:
//   Число – коэффициент-доля доходов ЕНВД в общем объеме доходов.
//
Функция КоэффициентДоходовЕНВДДляРаспределенияФиксированныхВзносовЗаПоследнийГодЕНВД(Организация) Экспорт
	
	Перем ДатаИзменения;
	
	Если ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Организация) Тогда
		Возврат 0;
	КонецЕсли;
	
	ПроверяемыйПериод = УчетЕНВДКлиентСервер.ПоследнийДеньДействияЕНВД();
	
	// Проверим изменение учетной политики в рамках года.
	ПлательщикЕНВД = УчетнаяПолитика.ПлательщикЕНВД(Организация, ПроверяемыйПериод, ДатаИзменения);
	Если Не ПлательщикЕНВД И ДатаИзменения <= НачалоГода(ПроверяемыйПериод) Тогда
		Возврат 0; // Не применяется ЕНВД с прошлых лет.
	КонецЕсли;
	
	Если Не ПлательщикЕНВД И Не УчетнаяПолитика.ПлательщикЕНВД(Организация, НачалоДня(ДатаИзменения) - 1) Тогда
		Возврат 0; // В последний год действия ЕНВД учетная политика изменилась, но статус плательщика ЕНВД не изменился.
	КонецЕсли;
	
	ДоляДоходовЕНВД = 0;
	
	ПрименяетсяУСН = УчетнаяПолитика.ПрименяетсяУСН(Организация, ПроверяемыйПериод, ДатаИзменения)
		Или УчетнаяПолитика.ПрименяетсяУСН(Организация, НачалоДня(ДатаИзменения) - 1); // Учитываем изменение статус в течение года.
	
	Если ПрименяетсяУСН Тогда
		
		Параметры = Новый Структура("Дата, Организация", КонецГода(ПроверяемыйПериод), Организация);
		ДоляДоходовЕНВД = НалоговыйУчетУСН.ПолучитьКоэффРаспределенияЕНВД(Параметры, "Год", "НУ");
		
	Иначе
		
		ДоляДоходовЕНВД = УчетДоходовИРасходовПредпринимателя.ДоляДоходовЕНВД(Организация,
			НачалоГода(ПроверяемыйПериод),
			КонецГода(ПроверяемыйПериод));
		
	КонецЕсли;
	
	Возврат ДоляДоходовЕНВД;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПодготовитьПараметрыРасходовУменьшающихНалог(ТаблицаРеквизитов) 

	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
		+ "Период,"                            // <Дата> - период движений - дата документа
		+ "Регистратор,"                       // <ДокументСсылка.РегламентнаяОперация> - документ-регистратор движений
		+ "Организация,"                       // <СправочникСсылка.Организации> - организация
		+ "ЭтоИндивидуальныйПредприниматель,"  // <Булево> - признак, что организация является индивидуальным предпринимателем
		+ "ПрименяетсяУСНДоходы,"              // <Булево> - признак применения УСН с объектом налогообложения "Доходы"
		+ "ПрименяетсяУСНДоходыМинусРасходы,"  // <Булево> - признак применения УСН с объектом налогообложения "Доходы минус расходы"
		+ "ПлательщикЕНВД,"                    // <Булево> - признак применения ЕНВД по отдельным видам деятельности
		+ "УменьшениеЕНВДПослеОтмены,"         // <Булево> - признак выполнения операции после отмены ЕНВД, но в периоде уменьшения ЕНВД за последний налоговый период
		+ "ПрименяетсяПСН,"                    // <Булево> - признак применения патентной системы налогообложения
		+ "ИПИспользуетТрудНаемныхРаботников," // <Булево> - признак использования труда наемных работников
		+ "ВедетсяУчетБольничных,"             // <Булево> - признак ведения учета зарплаты и расчета больничных в программе
		+ "ВедетсяУчетПоРаботникам,"           // <Булево> - признак ведения учета расчетов с персоналом по каждому работнику
		+ "ДатаНачалаАнализаПериодаНачислений,"// <Дата> - начальный период с которого необходимо анализировать выплаты
		+ "ДатаПереходаНаУСН,"                 // <Дата> - дата перехода на УСН с общей системы налогообложения
		+ "ЭтоНачалоГода,"                     // <Булево> - признак: текущий расчет первый в году
		+ "УчетПоПодразделениям,"              // <Булево> - признак ведения учета в КОРП в разрезе подразделений
		+ "РегистрацияОрганизации,"            // <СправочникСсылка.РегистрацииВНалоговомУчете> - налоговая регистрация организации.
		+ "РегистрацияЕНВДОрганизации,"        // <СправочникСсылка.РегистрацииВНалоговомУчете> - налоговая регистрация ЕНВД организации.
		+ "НачалоПериодаАнализаРасходов,"      // <Дата> - начальная граница периода, за который необходимо анализировать расходы
		+ "КонецПериодаАнализаРасходов";       // <Дата> - конечная граница периода, за который необходимо анализировать расходы
		
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизитов, СписокОбязательныхКолонок));
		
	Возврат Параметры;

КонецФункции

Функция ПодготовитьПараметрыДвиженийРасходовПоНалогам(ТаблицаРасходов, ТаблицаРеквизитов)

	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
		+ "Период,"               // <Дата> - период движений - дата документа
		+ "Регистратор,"          // <ДокументСсылка> - документ-регистратор движений
		+ "Организация,"          // <СправочникСсылка.Организации> - организация
		+ "ПлательщикЕНВД,"       // <Булево> - признак применения ЕНВД по отдельным видам деятельности
		+ "ПрименяетсяПСН,"       // <Булево> - признак применения патентной системы налогообложения
		+ "ПрименяетсяУСНДоходы," // <Булево> - признак применения УСН с объектом налогообложения "Доходы"
		+ "ПрименяетсяУСНДоходыминусРасходы"; // <Булево> - признак применения УСН с объектом налогообложения "Доходы минус Расходы"
		
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизитов, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.ТаблицаДвижений
	СписокОбязательныхКолонок = ""
		
		+ "СчетУчета,"                     // <ПланСчетов.Ссылка> - счет, к которому относится вид расхода
		+ "СуммаРасхода,"                  // <Число, 15, 2> - сумма расхода на основной системе
		+ "СуммаРасходаСпецРежим,"         // <Число, 15, 2> - сумма расхода на специальном режиме по доле начисления
		+ "ДокументРасхода,"               // <ДокументСсылка> - документ-основание оплаты или зачета переплаты
		+ "ДокументРасходаДата,"           // <Дата> - реквизиты (дата и номер) документа-основания для операции
		+ "ПериодНачисления,"              // <Число, 15, 2> - период, за который оплачивается вид расхода
		+ "СуммаОплаты,"                   // <Число, 15, 2> - сумма оплаты / зачета переплаты по виду расхода
		+ "Задолженность,"                 // <Число, 15, 2> - сумма общей задолженности по фонду на дату дкоумента-основания
		+ "НачисленоВсего,"                // <Число, 15, 2> - сумма текущей задолженности, начисленной по страховому взносу
		+ "НачисленоСпецРежим,"            // <Число, 15, 2> - сумма текущей задолженности, начисленной по страховому взносу для расчета доли специального режима
		+ "ДоляСпецРежим,"                 // <Число, 15, 2> - рассчитанная доля по специальному режиму
		+ "Сотрудник,"                     // <Число, 15, 2> - сотрудник, по которому заведен больничный
		+ "РегистрацияВНалоговомОргане,"   // <Число, 15, 2> - Налоговая подразделения, к которой относится вид расхода
		+ "СуммаРасходаСпецРежимРаспределяемая," // <Число, 15, 2> - сумма расхода, которая должна быть распределена
		+ "ДоляВыручкиРегистрации";        // <Число, 15, 2> - доля выручки по налоговой регистрации, относительно которой был распреден расход
		
	Параметры.Вставить("ТаблицаРасходов", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРасходов, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Функция ПустаяТаблицаРасходов()

	ТаблицаРасходов = Новый ТаблицаЗначений;

	ТаблицаРасходов.Колонки.Добавить("Период", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаРасходов.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаРасходов.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТаблицаРасходов.Колонки.Добавить("ДокументРасхода", Документы.ТипВсеСсылки());
	ТаблицаРасходов.Колонки.Добавить("ДокументРасходаДата", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаРасходов.Колонки.Добавить("ПериодНачисления", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ТаблицаРасходов.Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	ТаблицаРасходов.Колонки.Добавить("СчетУчета", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаРасходов.Колонки.Добавить("СуммаОплаты", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаРасходов.Колонки.Добавить("Задолженность", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаРасходов.Колонки.Добавить("НачисленоВсего", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаРасходов.Колонки.Добавить("НачисленоСпецРежим", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаРасходов.Колонки.Добавить("ДоляСпецРежим", ОбщегоНазначения.ОписаниеТипаЧисло(7, 4));
	ТаблицаРасходов.Колонки.Добавить("СуммаРасхода", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаРасходов.Колонки.Добавить("СуммаРасходаСпецРежим", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаРасходов.Колонки.Добавить("СуммаРасходаСпецРежимРаспределяемая", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаРасходов.Колонки.Добавить("ДоляВыручкиРегистрации", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаРасходов.Колонки.Добавить("ПервичныйДокументНомер", ОбщегоНазначения.ОписаниеТипаСтрока(20));
	ТаблицаРасходов.Колонки.Добавить("ПервичныйДокументДата", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	
	Возврат ТаблицаРасходов;
	
КонецФункции

Процедура ДобавитьРасходыПоВзносамСФОТ(РасходыПоВзносам, Реквизиты, ТаблицаРасходов)
	
	Если РасходыПоВзносам = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого СтрокаВзноса Из РасходыПоВзносам Цикл
		
		СуммаРасхода = 0;
		СуммаРасходаСпецРежим = 0;
		ДоляНачисленияСпецРежим = 0;
		
		Уплата = СтрокаВзноса.Уплата;
		НачальнаяЗадолженность = СтрокаВзноса.НачальнаяЗадолженность;
		Начисление = СтрокаВзноса.Начисление;
		НачальнаяПереплата = СтрокаВзноса.НачальнаяПереплата;
		
		// Распределим расходы по различным налоговым инспекциям, т.к. по регистрациям мы получаем только суммы начислений,
		// а суммы выплат мы получаем без регистраций.
		Если Реквизиты.ПлательщикЕНВД И Реквизиты.УчетПоПодразделениям Тогда
			ДоляРегистрациии = ?(СтрокаВзноса.НачисленоВсегоПоОрганизации = 0, 0, СтрокаВзноса.НачисленоВсего/СтрокаВзноса.НачисленоВсегоПоОрганизации);
			Уплата                 = Уплата * ДоляРегистрациии;
			НачальнаяЗадолженность = НачальнаяЗадолженность * ДоляРегистрациии;
			Начисление             = Начисление * ДоляРегистрациии;
			НачальнаяПереплата     = НачальнаяПереплата * ДоляРегистрациии;
		КонецЕсли;
		
		// Сравниваем начислено-уплачено.
		Начислено = Начисление + НачальнаяЗадолженность;
		Уплачено  = Уплата     + НачальнаяПереплата;
		
		СуммаРасхода = Мин(Начислено, Уплачено);
		
		// Учтем распределение между основной системой и специальным режимом налогообложения
		Если СтрокаВзноса.НачисленоСпецРежим > 0 Тогда
			ДоляНачисленияСпецРежим = ?(СтрокаВзноса.НачисленоВсего = 0, 0, СтрокаВзноса.НачисленоСпецРежим/СтрокаВзноса.НачисленоВсего);
			СуммаРасходаСпецРежим = Окр(СуммаРасхода * ДоляНачисленияСпецРежим, 2, РежимОкругления.Окр15как20);
			СуммаРасхода = СуммаРасхода - СуммаРасходаСпецРежим;
		ИначеЕсли Реквизиты.ПрименяетсяПСН И Не Реквизиты.ПрименяетсяУСНДоходы И Не Реквизиты.ПрименяетсяУСНДоходыМинусРасходы Тогда
			ДоляНачисленияСпецРежим = 1;
			СуммаРасходаСпецРежим = СуммаРасхода;
			СуммаРасхода = 0;
		КонецЕсли;
		
		// Если в периоде начисления взносов применялась ОСНО с учетом расходов методом начисления - уменьшать налог на такое начисление нельзя,
		// поскольку расходы уже учтены в налоговом учете при начислении.
		Если Реквизиты.ПрименяетсяУСНДоходы
			И Не Реквизиты.ЭтоИндивидуальныйПредприниматель
			И СтрокаВзноса.ПериодНачисления < Реквизиты.ДатаПереходаНаУСН  Тогда
			СуммаРасхода = 0;
		КонецЕсли;
		
		Если СуммаРасхода > 0 Или СуммаРасходаСпецРежим > 0 Тогда
			
			СтрокаРасхода = ТаблицаРасходов.Добавить();
			СтрокаРасхода.Период                = Реквизиты.Период;
			СтрокаРасхода.Организация           = Реквизиты.Организация;
			СтрокаРасхода.ДокументРасхода       = СтрокаВзноса.ДокументРасхода;
			СтрокаРасхода.ДокументРасходаДата   = СтрокаВзноса.ПериодРегистрации;
			СтрокаРасхода.ПериодНачисления      = СтрокаВзноса.ПериодНачисления;
			СтрокаРасхода.СчетУчета             = СтрокаВзноса.СчетВзноса;
			СтрокаРасхода.СуммаОплаты           = Уплата + НачальнаяПереплата;
			СтрокаРасхода.Задолженность         = НачальнаяЗадолженность+Начисление;
			СтрокаРасхода.НачисленоВсего        = СтрокаВзноса.НачисленоВсего;
			СтрокаРасхода.НачисленоСпецРежим    = СтрокаВзноса.НачисленоСпецРежим;
			СтрокаРасхода.СуммаРасхода          = СуммаРасхода;
			СтрокаРасхода.СуммаРасходаСпецРежим = СуммаРасходаСпецРежим;
			СтрокаРасхода.ДоляСпецРежим         = ДоляНачисленияСпецРежим;
			
			СтрокаРасхода.РегистрацияВНалоговомОргане = СтрокаВзноса.РегистрацияВНалоговомОргане;
			
			СтрокаРасхода.ПервичныйДокументНомер = СтрокаВзноса.ДокументНомер;
			СтрокаРасхода.ПервичныйДокументДата = СтрокаВзноса.ДокументДата;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьРасходыПоВыплатеБольничных(РасходыПоБольничным, Реквизиты, ТаблицаРасходов)
	
	Если РасходыПоБольничным = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СчетЗП = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
	
	Для каждого СтрокаБольничного Из РасходыПоБольничным Цикл
		
		СуммаВыплаты = СтрокаБольничного.СуммаВыплаты;
		
		// Распределим расходы по различным налоговым инспекциям, т.к. по регистрациям мы получаем только суммы начислений,
		// а суммы выплат мы получаем без регистраций.
		Если Реквизиты.ПлательщикЕНВД И Реквизиты.УчетПоПодразделениям Тогда
			ДоляРегистрациии = ?(СтрокаБольничного.ВсегоКВыплатеПоОрганизации = 0,
				0, СтрокаБольничного.ВсегоКВыплате/СтрокаБольничного.ВсегоКВыплатеПоОрганизации);
			СуммаВыплаты = СуммаВыплаты * ДоляРегистрациии;
		КонецЕсли;
		
		КоэффВыплаченности = ?(СтрокаБольничного.ВсегоКВыплате = 0, 0, СуммаВыплаты/СтрокаБольничного.ВсегоКВыплате);
		// отсекаем случаи, когда сумма выплаты в документе больше, чем всего к выплате за месяц
		КоэффВыплаченности = Мин(КоэффВыплаченности, 1);
		
		// Для больничных распределение (Основная система/ЕНВД) уже учтено:
		// в таблице готовые суммы начисленных больничных за счет работодателя, разделенные на ЕНВД и основную систему.
		СуммаРасхода = Окр(СтрокаБольничного.БольничныйЗаСчетРаботодателя*КоэффВыплаченности, 2, РежимОкругления.Окр15как20);
		СуммаРасходаСпецРежим = Окр(СтрокаБольничного.БольничныйЗаСчетРаботодателяСпецРежим*КоэффВыплаченности, 2, РежимОкругления.Окр15как20);
		
		// Если в периоде начисления больничного применялась ОСНО с учетом расходов методом начисления - уменьшать налог на такой больничный нельзя,
		// поскольку расходы уже учтены в налоговом учете при начислении.
		Если Реквизиты.ПрименяетсяУСНДоходы
			И Не Реквизиты.ЭтоИндивидуальныйПредприниматель
			И СтрокаБольничного.ПериодНачисления < Реквизиты.ДатаПереходаНаУСН Тогда
			СуммаРасхода = 0;
		КонецЕсли;
		
		Если СуммаРасхода > 0 Или СуммаРасходаСпецРежим > 0 Тогда
			
			СтрокаРасхода = ТаблицаРасходов.Добавить();
			
			СтрокаРасхода.Период                = Реквизиты.Период;
			СтрокаРасхода.Организация           = Реквизиты.Организация;
			СтрокаРасхода.Сотрудник             = СтрокаБольничного.Сотрудник;
			СтрокаРасхода.ДокументРасхода       = СтрокаБольничного.ДокументРасхода;
			СтрокаРасхода.ДокументРасходаДата   = СтрокаБольничного.ПериодРегистрации;
			СтрокаРасхода.ПериодНачисления      = СтрокаБольничного.ПериодНачисления;
			СтрокаРасхода.СчетУчета             = СчетЗП;
			СтрокаРасхода.СуммаОплаты           = СуммаВыплаты;
			СтрокаРасхода.Задолженность         = СтрокаБольничного.ВсегоКВыплате;
			СтрокаРасхода.НачисленоВсего        = СтрокаБольничного.БольничныйЗаСчетРаботодателя;
			СтрокаРасхода.НачисленоСпецРежим    = СтрокаБольничного.БольничныйЗаСчетРаботодателяСпецРежим;
			СтрокаРасхода.СуммаРасхода          = СуммаРасхода;
			СтрокаРасхода.СуммаРасходаСпецРежим = СуммаРасходаСпецРежим;
			
			СтрокаРасхода.РегистрацияВНалоговомОргане = СтрокаБольничного.РегистрацияВНалоговомОргане;
			
			СтрокаРасхода.ПервичныйДокументНомер = СтрокаБольничного.ДокументНомер;
			СтрокаРасхода.ПервичныйДокументДата = СтрокаБольничного.ДокументДата;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьРасходыПоВзносамИП(Реквизиты, ТаблицаРасходов)
	
	Если Не Реквизиты.ЭтоИндивидуальныйПредприниматель Тогда
		Возврат;
	КонецЕсли;
	
	ПрименяетсяОсобыйПорядокНалогообложения =
		УчетнаяПолитика.ПрименяетсяОсобыйПорядокНалогообложения(Реквизиты.Организация, Реквизиты.Период);
	
	ПрименяетсяТолькоЕНВД = Реквизиты.ПлательщикЕНВД И ПрименяетсяОсобыйПорядокНалогообложения;
	ПрименяетсяТолькоПатент = Реквизиты.ПрименяетсяПСН И ПрименяетсяОсобыйПорядокНалогообложения;
	
	ЕНВДУменьшаетсяНаВзносыИПРаботодателей =
		УчетЕНВД.НалогУменьшаетсяНаФиксированныеВзносыИПРаботодателей(Реквизиты.Период);
	
	УменьшатьУСН = Реквизиты.ПрименяетсяУСНДоходы;
	
	УменьшатьПСН = Реквизиты.ПрименяетсяПСН;
	
	Если ЕНВДУменьшаетсяНаВзносыИПРаботодателей Тогда
		// С 2017 года взносы ИП всегда уменьшают ЕНВД.
		УменьшатьЕНВД = Реквизиты.ПлательщикЕНВД;
	Иначе
		// До 2017 года взносы ИП уменьшают ЕНВД только при отсутствии работников.
		УменьшатьЕНВД = ПрименяетсяТолькоЕНВД И НЕ Реквизиты.ИПИспользуетТрудНаемныхРаботников;
	КонецЕсли;
	
	Если Не УменьшатьУСН И Не УменьшатьЕНВД И Не УменьшатьПСН Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаРасходовНаУплатуСтраховыхВзносов = УчетСтраховыхВзносовИП.ПодготовитьТаблицуРасходовУменьшающихНалог(
		Реквизиты.Организация, Реквизиты.НачалоПериодаАнализаРасходов, Реквизиты.КонецПериодаАнализаРасходов);
	Если ТаблицаРасходовНаУплатуСтраховыхВзносов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КоэффициентСпецРежим = 0;
	
	Если УменьшатьПСН Тогда
		Если ПрименяетсяТолькоПатент Тогда
			КоэффициентСпецРежим = 1;
		Иначе
			Периодичность = ЗакрытиеМесяца.ПериодичностьРегламентнойОперации(
				Перечисления.ВидыРегламентныхОпераций.РасчетРасходовУменьшающихОтдельныеНалоги);
			КоэффициентСпецРежим = УчетПСН.ДоляДоходовПатентнойСистемыНалогообложения(
				Реквизиты.Организация, Реквизиты.Период, Периодичность);
		КонецЕсли;
	ИначеЕсли Реквизиты.ПлательщикЕНВД И Не Реквизиты.УменьшениеЕНВДПослеОтмены Тогда
		Если ЕНВДУменьшаетсяНаВзносыИПРаботодателей Тогда
			// С 2017 года при совмещении ЕНВД и других налоговых режимов взносы ИП
			// распределяются между ЕНВД и основной деятельностью пропорционально доходам.
			Если ПрименяетсяТолькоЕНВД Тогда
				КоэффициентСпецРежим = 1;
			Иначе // Совмещение режимов
				КоэффициентСпецРежим = КоэффициентДоходовЕНВДДляРаспределенияФиксированныхВзносов(Реквизиты.Организация, Реквизиты.Период);
			КонецЕсли;
		Иначе
			// До 2017 года ЕНВД уменьшался на взносы предпринимателя, ведущего только деятельность ЕНВД, без совмещения;
			// иначе взносы полностью относились к уменьшению УСН-доходы или к расходам по основной деятельности.
			КоэффициентСпецРежим = ?(ПрименяетсяТолькоЕНВД, 1, 0);
		КонецЕсли;
	КонецЕсли;
	
	КоэффициентЕНВДПередОтменой = 0; // Применяется к расходам, уменьшающим ЕНВД после его отмены.
	
	Если Реквизиты.УменьшениеЕНВДПослеОтмены Тогда
		Если УчетнаяПолитика.ПрименяетсяОсобыйПорядокНалогообложения(Реквизиты.Организация, УчетЕНВДКлиентСервер.ПоследнийДеньДействияЕНВД()) Тогда
			КоэффициентЕНВДПередОтменой = 1;
		Иначе
			КоэффициентЕНВДПередОтменой
				= КоэффициентДоходовЕНВДДляРаспределенияФиксированныхВзносовЗаПоследнийГодЕНВД(Реквизиты.Организация);
		КонецЕсли;
		
	КонецЕсли;
	
	Для Каждого Расход Из ТаблицаРасходовНаУплатуСтраховыхВзносов Цикл
		
		Если Реквизиты.УменьшениеЕНВДПослеОтмены
			И Год(Расход.СтраховойПериод) = Год(УчетЕНВДКлиентСервер.ПоследнийДеньДействияЕНВД()) Тогда
			// Взносы, уплаченные за последний год действия ЕНВД в следующем году,
			// распределяются пропорционально доходам за последний год действия ЕНВД.
			ПрименяемыйКоэффициентРаспределения = КоэффициентЕНВДПередОтменой;
		Иначе
			ПрименяемыйКоэффициентРаспределения = КоэффициентСпецРежим;
		КонецЕсли;
		
		СуммаРасходаСпецРежим = Окр(Расход.Сумма * ПрименяемыйКоэффициентРаспределения, 2, РежимОкругления.Окр15как20);
		СуммаРасхода = ?(УменьшатьУСН, Расход.Сумма - СуммаРасходаСпецРежим, 0);
		
		// Для вычитания из ЕНВД фиксированных взносов, уплачиваемых за прошлые годы,
		// требуется применение ЕНВД в периоде начисления.
		Если Реквизиты.ПлательщикЕНВД И СуммаРасходаСпецРежим > 0
			И Год(Расход.СтраховойПериод) < Год(Реквизиты.Период)
			И Не УчетнаяПолитика.ПлательщикЕНВД(Реквизиты.Организация, КонецГода(Расход.СтраховойПериод)) Тогда
			СуммаРасходаСпецРежим = 0;
		КонецЕсли;
		
		Если СуммаРасхода = 0 И СуммаРасходаСпецРежим = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаРасходов.Добавить();
		НоваяСтрока.Период      = Реквизиты.Период;
		НоваяСтрока.Организация = Реквизиты.Организация;
		
		НоваяСтрока.СчетУчета        = Расход.СчетУчета;
		НоваяСтрока.ПериодНачисления = Расход.СтраховойПериод;
		
		НоваяСтрока.ДокументРасхода     = Расход.ДокументОплаты;
		НоваяСтрока.ДокументРасходаДата = Расход.ДатаДокументаОплаты;
		
		НоваяСтрока.ПервичныйДокументНомер = Расход.НомерВходящегоДокумента;
		НоваяСтрока.ПервичныйДокументДата  = Расход.ДатаВходящегоДокумента;
		
		НоваяСтрока.СуммаОплаты = Расход.Сумма;
		
		НоваяСтрока.СуммаРасхода = СуммаРасхода;
		НоваяСтрока.СуммаРасходаСпецРежим = СуммаРасходаСпецРежим;
		НоваяСтрока.ДоляСпецРежим = ПрименяемыйКоэффициентРаспределения;
		
		Если СуммаРасходаСпецРежим > 0 И Реквизиты.ПлательщикЕНВД Тогда
			
			Если ЗначениеЗаполнено(Реквизиты.РегистрацияЕНВДОрганизации) Тогда
				НоваяСтрока.РегистрацияВНалоговомОргане = Реквизиты.РегистрацияЕНВДОрганизации;
			Иначе
				НоваяСтрока.РегистрацияВНалоговомОргане = Реквизиты.РегистрацияОрганизации;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВыявитьУчетныеОшибкиРасходовУменьшающихНалоги(Ошибки, Период, Организация) Экспорт

	Если Не УчетнаяПолитика.ПрименяетсяУСНДоходы(Организация, Период)
	   И Не УчетнаяПолитика.ПлательщикЕНВД(Организация, Период) Тогда
		Возврат;
	КонецЕсли;

	НачалоПериода = НачалоКвартала(Период);
	КонецПериода  = КонецКвартала(Период);
	
	ПроверитьПериодУплатыВзносовЗаРаботников(Ошибки, НачалоПериода, КонецПериода, Организация);
	
	ПроверитьНалогПриУплатеФиксированныхВзносов(Ошибки, НачалоПериода, КонецПериода, Организация);
	
	ПроверитьСтраховойГодФиксированныхВзносов(Ошибки, НачалоПериода, КонецПериода, Организация);
	
КонецПроцедуры

Процедура ПроверитьПериодУплатыВзносовЗаРаботников(Ошибки, НачалоПериода, КонецПериода, Организация)

	Если Не ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Организация)
		И Не УчетЗарплаты.ИПИспользуетТрудНаемныхРаботников(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("НачалоПериода", Новый Граница(НачалоПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПериода",  Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ВидыПлатежей",  Перечисления.ВидыПлатежейВГосБюджет.ВидыНалоговыхПлатежей());
	
	МассивСчетов = Новый Массив;
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизации); // 50.01
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетныеСчета);   // 51
	УсловияОтбораСубсчетов = БухгалтерскийУчет.НовыеУсловияОтбораСубсчетов();
	УсловияОтбораСубсчетов.Забалансовый = Ложь;
	Запрос.УстановитьПараметр("СчетаУчетаДС",
		БухгалтерскийУчет.СформироватьМассивСубсчетовПоОтбору(МассивСчетов, УсловияОтбораСубсчетов));
	
	Запрос.УстановитьПараметр("СчетаВзносов",  УчетУСН.СчетаУчетаВзносовСФОТ());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.Регистратор КАК ДокументОплаты,
	|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетУчета
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор,
	|			СчетДт В (&СчетаВзносов),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет),
	|			СчетКт В (&СчетаУчетаДС),
	|			,
	|			Организация = &Организация
	|				И СубконтоДт1 В (&ВидыПлатежей)) КАК ХозрасчетныйОборотыДтКт
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.Регистратор) = ТИП(Документ.СписаниеСРасчетногоСчета)
	|					И ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.СписаниеСРасчетногоСчета).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога)
	|				ТОГДА НАЧАЛОПЕРИОДА(ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.СписаниеСРасчетногоСчета).НалоговыйПериод, ДЕНЬ) = ДАТАВРЕМЯ(1, 1, 1)
	|			КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.Регистратор) = ТИП(Документ.РасходныйКассовыйОрдер)
	|					И ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.РасходныйКассовыйОрдер).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРКО.УплатаНалога)
	|				ТОГДА НАЧАЛОПЕРИОДА(ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.РасходныйКассовыйОрдер).НалоговыйПериод, ДЕНЬ) = ДАТАВРЕМЯ(1, 1, 1)
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Ошибка = ВыводСообщенийОбОшибках.ДобавитьПростоеОписаниеОшибки(Ошибки);
	Ошибка.Описание     = НСтр("ru = 'Не указан период, за который уплачивается страховой взнос.'");
	Ошибка.Рекомендация = НСтр("ru = 'Укажите период уплаты взноса.'");
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстОшибки = НСтр("ru = 'В документе [Документ] не указан период уплаты взноса'");
		
		ПараметрыСтроки = Новый Структура;
		ПараметрыСтроки.Вставить("Документ", Строка(Выборка.ДокументОплаты));
		
		МестоОшибки = Ошибка.ЛокализацияДетально.Добавить();
		МестоОшибки.Локализация = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(ТекстОшибки, ПараметрыСтроки);
		МестоОшибки.Ссылка      = Выборка.ДокументОплаты;
		
	КонецЦикла;
	
КОнецПроцедуры

Процедура ПроверитьНалогПриУплатеФиксированныхВзносов(Ошибки, НачалоПериода, КонецПериода, Организация)
	
	Если ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("НачалоПериода", Новый Граница(НачалоПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПериода",  Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ВидыПлатежей",  Перечисления.ВидыПлатежейВГосБюджет.ВидыНалоговыхПлатежей());
	
	МассивСчетов = Новый Массив;
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизации); // 50.01
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетныеСчета);   // 51
	УсловияОтбораСубсчетов = БухгалтерскийУчет.НовыеУсловияОтбораСубсчетов();
	УсловияОтбораСубсчетов.Забалансовый = Ложь;
	Запрос.УстановитьПараметр("СчетаУчетаДС",
		БухгалтерскийУчет.СформироватьМассивСубсчетовПоОтбору(МассивСчетов, УсловияОтбораСубсчетов));
		
	СчетаВзносовИП = Новый Массив;
	СчетаВзносовИП.Добавить(ПланыСчетов.Хозрасчетный.ПФР_ОПС_ИП);
	СчетаВзносовИП.Добавить(ПланыСчетов.Хозрасчетный.ФОМС_СтраховойГод);
	СчетаВзносовИП.Добавить(ПланыСчетов.Хозрасчетный.ФСС_СтраховойГод);

	Запрос.УстановитьПараметр("СчетаВзносов", СчетаВзносовИП);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыНалоговИПлатежейВБюджет.СчетУчета,
	|	МАКСИМУМ(ВидыНалоговИПлатежейВБюджет.Наименование) КАК Наименование
	|ПОМЕСТИТЬ НалогиПоВзносам
	|ИЗ
	|	Справочник.ВидыНалоговИПлатежейВБюджет КАК ВидыНалоговИПлатежейВБюджет
	|ГДЕ
	|	ВидыНалоговИПлатежейВБюджет.СчетУчета В(&СчетаВзносов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВидыНалоговИПлатежейВБюджет.СчетУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.Регистратор КАК ДокументОплаты,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.Регистратор) = ТИП(Документ.СписаниеСРасчетногоСчета)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.СписаниеСРасчетногоСчета).Налог.Наименование
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.Регистратор) = ТИП(Документ.РасходныйКассовыйОрдер)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.РасходныйКассовыйОрдер).Налог.Наименование
	|	КОНЕЦ КАК НалогДокументаИмя,
	|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетПроводки,
	|	НалогиПоВзносам.Наименование КАК НалогПроводкиИмя
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор,
	|			СчетДт В (&СчетаВзносов),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет),
	|			СчетКт В (&СчетаУчетаДС),
	|			,
	|			Организация = &Организация
	|				И СубконтоДт1 В (&ВидыПлатежей)) КАК ХозрасчетныйОборотыДтКт
	|		ЛЕВОЕ СОЕДИНЕНИЕ НалогиПоВзносам КАК НалогиПоВзносам
	|		ПО ХозрасчетныйОборотыДтКт.СчетДт = НалогиПоВзносам.СчетУчета
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.Регистратор) = ТИП(Документ.СписаниеСРасчетногоСчета)
	|					И ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.СписаниеСРасчетногоСчета).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога)
	|				ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.СписаниеСРасчетногоСчета).Налог.СчетУчета <> ХозрасчетныйОборотыДтКт.СчетДт
	|			КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.Регистратор) = ТИП(Документ.РасходныйКассовыйОрдер)
	|					И ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.РасходныйКассовыйОрдер).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРКО.УплатаНалога)
	|				ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.РасходныйКассовыйОрдер).Налог.СчетУчета <> ХозрасчетныйОборотыДтКт.СчетДт
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НекорректныеДокументыФСС = Новый Массив;
	НекорректныеДокументыПФР_ФОМС = Новый Массив;
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.СчетПроводки = ПланыСчетов.Хозрасчетный.ФСС_СтраховойГод 
			И Не ЗначениеЗаполнено(Выборка.НалогПроводкиИмя)
			И Не УчетнаяПолитика.УплачиватьДобровольныеВзносыВФСС(Организация, НачалоПериода) Тогда
			
			НекорректныеДокументыФСС.Добавить(Выборка.ДокументОплаты);
			
		Иначе
			
			ПараметрыДокумента = Новый Структура("ДокументОплаты, НалогДокументаИмя, НалогПроводкиИмя", 
				Выборка.ДокументОплаты, Выборка.НалогДокументаИмя, Выборка.НалогПроводкиИмя);
			НекорректныеДокументыПФР_ФОМС.Добавить(ПараметрыДокумента);
			
		КонецЕсли;
	КонецЦикла;
	
	Если НекорректныеДокументыФСС.Количество() > 0 Тогда
		Ошибка = ВыводСообщенийОбОшибках.ДобавитьПростоеОписаниеОшибки(Ошибки);
		Ошибка.Описание     = НСтр("ru = 'В настройках налогов и отчетов не отмечена уплата добровольных взносов в ФСС.'");
		Ошибка.Рекомендация = НСтр("ru = 'В настройках налогов и отчетов в разделе ""Страховые взносы (ИП)"" укажите, что предприниматель уплачивает добровольные взносы в ФСС. Затем выберите соответствующий налог в документе.'");
		
		Для каждого ДокументУплаты Из НекорректныеДокументыФСС Цикл
			
			ТекстОшибки = СтрШаблон(НСтр("ru = 'В документе %1 указан счет уплаты фиксированных взносов в ФСС (69.06.4), для таких платежей настройки налогов и отчетов не указаны.'"),
				Строка(ДокументУплаты));
				
			МестоОшибки = Ошибка.ЛокализацияДетально.Добавить();
			МестоОшибки.Локализация = ТекстОшибки;
			МестоОшибки.Ссылка      = ДокументУплаты;
			
		КонецЦикла;
	КонецЕсли;
	
	Если НекорректныеДокументыПФР_ФОМС.Количество() > 0 Тогда
		Ошибка = ВыводСообщенийОбОшибках.ДобавитьПростоеОписаниеОшибки(Ошибки);
		Ошибка.Описание     = НСтр("ru = 'Указан некорректный налог в документе уплаты фиксированных взносов.'");
		Ошибка.Рекомендация = НСтр("ru = 'Исправьте налог в документе.'");
		
		Для каждого ОписаниеДокумента Из НекорректныеДокументыПФР_ФОМС Цикл
			
			ТекстОшибки = СтрШаблон(НСтр("ru = 'В документе %1 указан налог - %2, а должен быть налог - %3.'"),
				Строка(ОписаниеДокумента.ДокументОплаты),
				ОписаниеДокумента.НалогДокументаИмя,
				ОписаниеДокумента.НалогПроводкиИмя);
				
			МестоОшибки = Ошибка.ЛокализацияДетально.Добавить();
			МестоОшибки.Локализация = ТекстОшибки;
			МестоОшибки.Ссылка      = ОписаниеДокумента.ДокументОплаты;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПРоцедуры

Процедура ПроверитьСтраховойГодФиксированныхВзносов(Ошибки, НачалоПериода, КонецПериода, Организация)
	
	Если ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("НачалоПериода", Новый Граница(НачалоПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПериода",  Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ВидыПлатежей",  Перечисления.ВидыПлатежейВГосБюджет.ВидыНалоговыхПлатежей());
	
	МассивСчетов = Новый Массив;
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизации); // 50.01
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетныеСчета);   // 51
	УсловияОтбораСубсчетов = БухгалтерскийУчет.НовыеУсловияОтбораСубсчетов();
	УсловияОтбораСубсчетов.Забалансовый = Ложь;
	Запрос.УстановитьПараметр("СчетаУчетаДС",
		БухгалтерскийУчет.СформироватьМассивСубсчетовПоОтбору(МассивСчетов, УсловияОтбораСубсчетов));

	СчетаВзносовИП = Новый Массив;
	СчетаВзносовИП.Добавить(ПланыСчетов.Хозрасчетный.ПФР_ОПС_ИП);
	СчетаВзносовИП.Добавить(ПланыСчетов.Хозрасчетный.ФОМС_СтраховойГод);
	СчетаВзносовИП.Добавить(ПланыСчетов.Хозрасчетный.ФСС_СтраховойГод);

	Запрос.УстановитьПараметр("СчетаВзносов", СчетаВзносовИП);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.Регистратор КАК ДокументОплаты,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.Регистратор) = ТИП(Документ.СписаниеСРасчетногоСчета)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.СписаниеСРасчетногоСчета).НалоговыйПериод
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.Регистратор) = ТИП(Документ.РасходныйКассовыйОрдер)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.РасходныйКассовыйОрдер).НалоговыйПериод
	|	КОНЕЦ КАК НалоговыйПериод,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.Регистратор) = ТИП(Документ.СписаниеСРасчетногоСчета)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.СписаниеСРасчетногоСчета).Дата
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.Регистратор) = ТИП(Документ.РасходныйКассовыйОрдер)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.РасходныйКассовыйОрдер).Дата
	|	КОНЕЦ КАК ДатаДокумента
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор,
	|			СчетДт В (&СчетаВзносов),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет),
	|			СчетКт В (&СчетаУчетаДС),
	|			,
	|			Организация = &Организация
	|				И СубконтоДт1 В (&ВидыПлатежей)) КАК ХозрасчетныйОборотыДтКт
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.Регистратор) = ТИП(Документ.СписаниеСРасчетногоСчета)
	|					И ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.СписаниеСРасчетногоСчета).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога)
	|				ТОГДА НАЧАЛОПЕРИОДА(ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.СписаниеСРасчетногоСчета).НалоговыйПериод, ГОД) > НАЧАЛОПЕРИОДА(ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.СписаниеСРасчетногоСчета).Дата, ГОД)
	|			КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.Регистратор) = ТИП(Документ.РасходныйКассовыйОрдер)
	|					И ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.РасходныйКассовыйОрдер).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРКО.УплатаНалога)
	|				ТОГДА НАЧАЛОПЕРИОДА(ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.РасходныйКассовыйОрдер).НалоговыйПериод, ГОД) > НАЧАЛОПЕРИОДА(ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.РасходныйКассовыйОрдер).Дата, ГОД)
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Ошибка = ВыводСообщенийОбОшибках.ДобавитьПростоеОписаниеОшибки(Ошибки);
	Ошибка.Описание     = НСтр("ru = 'Фиксированные страховые взносы не могут быть уплачены за будущие годы.'");
	Ошибка.Рекомендация = НСтр("ru = 'Как правило, фиксированные взносы уплачиваются за текущий год, либо за предыдущий год. 
		|Укажите страховой год, соответствующий фактической дате платежа'");
		
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстОшибки = СтрШаблон(НСтр("ru = 'В документе %1 указан будущий страховой год (%2)'"),
			Строка(Выборка.ДокументОплаты),
			Формат(Выборка.НалоговыйПериод, "ДФ=yyy"));

			
		МестоОшибки = Ошибка.ЛокализацияДетально.Добавить();
		МестоОшибки.Локализация = ТекстОшибки;
		МестоОшибки.Ссылка      = Выборка.ДокументОплаты;
		
	КонецЦикла;
	
КонецПРоцедуры

Процедура УстановитьПараметрыЗапросаРасходыУменьшающиеНалог(Запрос, Реквизиты)
	
	НачалоПериода = Реквизиты.НачалоПериодаАнализаРасходов;
	КонецПериода = Реквизиты.КонецПериодаАнализаРасходов;
	
	НачалоГода = НачалоГода(Реквизиты.Период);
	
	// сроки уплаты взносов с учетом переноса выходных и праздничных дней
	ТаблицаСрокиУплаты = СрокиУплатыВзносовПоМесяцам(НачалоПериода, КонецПериода);
	
	Запрос.УстановитьПараметр("Организация",               Реквизиты.Организация);
	Запрос.УстановитьПараметр("НачалоПериодаГраница",      Новый Граница(НачалоПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПериодаГраница",       Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("НачалоПериодаДата",         НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериодаДата",          КонецПериода);
	Запрос.УстановитьПараметр("НачалоГодаДата",            НачалоГода);
	Запрос.УстановитьПараметр("КонецПрошлогоКварталаДата", НачалоКвартала(НачалоПериода) - 1);
	
	Если НачалоПериода < УчетЕНВДКлиентСервер.ДатаОтменыЕНВД() Тогда
		Запрос.УстановитьПараметр("НачалоПериодаВыручкаЕНВД", НачалоПериода);
		Запрос.УстановитьПараметр("КонецПериодаВыручкаЕНВД",  КонецПериода);
	Иначе
		// При расчете расходов, уменьшающих ЕНВД за последний квартал действия после его отмены,
		// выручку ЕНВД по подразделениям необходимо получать за последний квартал применения ЕНВД.
		ПоследнийДеньЕНВД = УчетЕНВДКлиентСервер.ПоследнийДеньДействияЕНВД();
		Запрос.УстановитьПараметр("НачалоПериодаВыручкаЕНВД", НачалоКвартала(ПоследнийДеньЕНВД));
		Запрос.УстановитьПараметр("КонецПериодаВыручкаЕНВД",  КонецКвартала(ПоследнийДеньЕНВД));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаСрокиУплаты",    ТаблицаСрокиУплаты);
	Запрос.УстановитьПараметр("ВидыПлатежейНалоговые", Перечисления.ВидыПлатежейВГосБюджет.ВидыНалоговыхПлатежей());
	
	Запрос.УстановитьПараметр("СчетаВзносовСФОТ", УчетУСН.СчетаУчетаВзносовСФОТ());
	
	УсловияОтбораСубсчетов = БухгалтерскийУчет.НовыеУсловияОтбораСубсчетов();
	УсловияОтбораСубсчетов.Забалансовый = Ложь;
	
	МассивСчетов = Новый Массив;
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда); // 70
	Запрос.УстановитьПараметр("СчетаУчетаЗарплаты",
		БухгалтерскийУчет.СформироватьМассивСубсчетовПоОтбору(МассивСчетов, УсловияОтбораСубсчетов));
	
	МассивСчетов = Новый Массив;
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизации); // 50.01
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетныеСчета);   // 51
	Запрос.УстановитьПараметр("СчетаУчетаДС",
		БухгалтерскийУчет.СформироватьМассивСубсчетовПоОтбору(МассивСчетов, УсловияОтбораСубсчетов));
	
	МассивСчетов = Новый Массив;
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПФР_ОПС_ИП);        // 69.06.5 - взносы в ПФР
	Запрос.УстановитьПараметр("СчетаВзносовИП_ПФР",
		БухгалтерскийУчет.СформироватьМассивСубсчетовПоОтбору(МассивСчетов, УсловияОтбораСубсчетов));
	
	МассивСчетов = Новый Массив;
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ФОМС_СтраховойГод); // 69.06.3 - взносы в ФФОМС
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПФР_ОПС_ИП);        // 69.06.5 - взносы в ПФР
	Запрос.УстановитьПараметр("СчетаВзносовИП",
		БухгалтерскийУчет.СформироватьМассивСубсчетовПоОтбору(МассивСчетов, УсловияОтбораСубсчетов));
		
	Запрос.УстановитьПараметр("СчетВыручки", ПланыСчетов.Хозрасчетный.ВыручкаЕНВД);
	
	Запрос.УстановитьПараметр("ВидСубконтоВидыПлатежей",
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет);
	Запрос.УстановитьПараметр("ВидСубконтоРаботники",
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций);
	Запрос.УстановитьПараметр("ВидСубконтоСтатьиЗатрат",
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	Запрос.УстановитьПараметр("ВидСубконтоПрочиеДоходыРасходы",
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
		
	МассивВидовДеятельностиУчетаЗатрат = Новый Массив;
	МассивВидовДеятельностиУчетаЗатрат.Добавить(Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения);
	
	Если Реквизиты.ПлательщикЕНВД Тогда
		МассивВидовДеятельностиУчетаЗатрат.Добавить(Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВидыДеятельностиУчетаЗатрат", МассивВидовДеятельностиУчетаЗатрат);
	
	Запрос.УстановитьПараметр("ВидОперацииБольничные", Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюРаботодатель);
	
	Запрос.УстановитьПараметр("РегистрацияЕНВДОрганизации", Реквизиты.РегистрацияЕНВДОрганизации);
	
КонецПроцедуры

Процедура ДополнитьПараметрыЗапросаПоРасходамПериодамиНачислений(Запрос, ТаблицыДанных, Реквизиты)
	
	КонецПериода  = КонецКвартала(Реквизиты.Период);
	
	ПериодыНачисленияВзносов  = ТаблицыДанных.ГраницыПериодовНачисленияВзносов;
	ПериодыНачисленияЗарплаты = ТаблицыДанных.ГраницыПериодовНачисленияЗарплаты;
	
	Реквизиты.Вставить("ЕстьВзносы",   Ложь);
	Реквизиты.Вставить("ЕстьЗарплата", Ложь);
	
	ДатаНачалаАнализаНачислений = Реквизиты.ДатаНачалаАнализаПериодаНачислений;
	
	Если ЗначениеЗаполнено(ПериодыНачисленияВзносов) Тогда
		СтрокаПериоды = ПериодыНачисленияВзносов[0];
		
		Если ЗначениеЗаполнено(СтрокаПериоды.НачалоПериода)
			И ЗначениеЗаполнено(СтрокаПериоды.КонецПериода)
			И СтрокаПериоды.НачалоПериода < КонецПериода // Не выполняем запрос, если во всех выплатах по ошибке указаны только "будущие" периоды начисления.
			И ДатаНачалаАнализаНачислений < СтрокаПериоды.КонецПериода Тогда
			
			Реквизиты.Вставить("ЕстьВзносы", Истина);
			
			// Начисления периодов, относящихся к ОСНО при уплате налога на прибыль,
			// не включаются в уменьшающие налог УСН расходы и не анализируются.
			НачалоПериодаАнализа = Макс(СтрокаПериоды.НачалоПериода, ДатаНачалаАнализаНачислений);
			Запрос.УстановитьПараметр("НачалоПериодаНачисленийВзносов",
				Новый Граница(НачалоПериодаАнализа, ВидГраницы.Включая));
				
			// Начисления "будущих" периодов, если пользователь неверно указал налоговый период при уплате, не анализируются.
			КонецПериодаАнализа = Мин(СтрокаПериоды.КонецПериода, КонецПериода);
			Запрос.УстановитьПараметр("КонецПериодаНачисленийВзносов",
				Новый Граница(КонецПериодаАнализа, ВидГраницы.Включая));
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПериодыНачисленияЗарплаты) Тогда
		СтрокаПериоды = ПериодыНачисленияЗарплаты[0];
		
		Если ЗначениеЗаполнено(СтрокаПериоды.НачалоПериода)
			И ЗначениеЗаполнено(СтрокаПериоды.КонецПериода)
			И СтрокаПериоды.НачалоПериода < КонецПериода // Не выполняем запрос, если во всех выплатах по ошибке указаны только "будущие" периоды начисления.
			И ДатаНачалаАнализаНачислений < СтрокаПериоды.КонецПериода Тогда
			
			Реквизиты.Вставить("ЕстьЗарплата", Истина);
			
			// Начисления периодов, относящихся к ОСНО при уплате налога на прибыль,
			// не включаются в уменьшающие налог УСН расходы и не анализируются.
			НачалоПериодаАнализа = Макс(СтрокаПериоды.НачалоПериода, ДатаНачалаАнализаНачислений);
			
			ГраницаНачалаАнализа = Новый Граница(НачалоПериодаАнализа, ВидГраницы.Включая);
			Запрос.УстановитьПараметр("НачалоПериодаНачисленийЗарплаты", ГраницаНачалаАнализа);
			Запрос.УстановитьПараметр("НачалоПериодаНачисленийЗарплатыДата", ГраницаНачалаАнализа.Значение);
			
			// Начисления "будущих" периодов, если пользователь неверно указал период начисления при выплате зарплаты, не анализируются.
			КонецПериодаАнализа = Мин(СтрокаПериоды.КонецПериода, КонецПериода);
			ГраницаОкончанияАнализа = Новый Граница(КонецПериодаАнализа, ВидГраницы.Включая);
			Запрос.УстановитьПараметр("КонецПериодаНачисленийЗарплаты", ГраницаОкончанияАнализа);
			Запрос.УстановитьПараметр("КонецПериодаНачисленийЗарплатыДата", ГраницаОкончанияАнализа.Значение);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаОперацииПоВзносамСФОТ(НомераТаблиц, ТаблицыДанных, Реквизиты)

	Если Реквизиты.ЭтоИндивидуальныйПредприниматель И Не Реквизиты.ИПИспользуетТрудНаемныхРаботников Тогда
		ТаблицыДанных.Вставить("ГраницыПериодовНачисленияВзносов", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ВременнаяТаблицаСрокиУплаты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаОперацииПоВзносам", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ГраницыПериодовНачисленияВзносов", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СрокиУплаты.МесяцУплаты, МЕСЯЦ) КАК МесяцУплаты,
	|	КОНЕЦПЕРИОДА(СрокиУплаты.СрокУплаты, ДЕНЬ) КАК СрокУплаты
	|ПОМЕСТИТЬ ВТ_СрокиУплаты
	|ИЗ
	|	&ТаблицаСрокиУплаты КАК СрокиУплаты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МесяцУплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Период КАК ПериодРегистрации,
	|	ХозрасчетныйОстаткиИОбороты.Регистратор КАК ДокументРасхода,
	|	ХозрасчетныйОстаткиИОбороты.Счет КАК СчетВзноса,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОстаткиИОбороты.Регистратор) = ТИП(Документ.СписаниеСРасчетногоСчета)
	|				И ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Регистратор КАК Документ.СписаниеСРасчетногоСчета).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога)
	|			ТОГДА НАЧАЛОПЕРИОДА(ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Регистратор КАК Документ.СписаниеСРасчетногоСчета).НалоговыйПериод, МЕСЯЦ)
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОстаткиИОбороты.Регистратор) = ТИП(Документ.РасходныйКассовыйОрдер)
	|				И ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Регистратор КАК Документ.РасходныйКассовыйОрдер).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРКО.УплатаНалога)
	|			ТОГДА НАЧАЛОПЕРИОДА(ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Регистратор КАК Документ.РасходныйКассовыйОрдер).НалоговыйПериод, МЕСЯЦ)
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОстаткиИОбороты.Регистратор) = ТИП(Документ.НачислениеЗарплаты)
	|			ТОГДА НАЧАЛОПЕРИОДА(ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Регистратор КАК Документ.НачислениеЗарплаты).МесяцНачисления, МЕСЯЦ)
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОстаткиИОбороты.Регистратор) = ТИП(Документ.ОтражениеЗарплатыВУчете)
	|			ТОГДА НАЧАЛОПЕРИОДА(ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Регистратор КАК Документ.ОтражениеЗарплатыВУчете).ПериодРегистрации, МЕСЯЦ)
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОстаткиИОбороты.Регистратор) = ТИП(Документ.ОтражениеЗарплатыВБухучете)
	|			ТОГДА НАЧАЛОПЕРИОДА(ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Регистратор КАК Документ.ОтражениеЗарплатыВБухучете).ПериодРегистрации, МЕСЯЦ)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
	|					ТОГДА НАЧАЛОПЕРИОДА(ХозрасчетныйОстаткиИОбороты.Период, МЕСЯЦ)
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ХозрасчетныйОстаткиИОбороты.Период <= ВТ_СрокиУплаты.СрокУплаты
	|							ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ХозрасчетныйОстаткиИОбороты.Период, МЕСЯЦ, -1), МЕСЯЦ)
	|						ИНАЧЕ НАЧАЛОПЕРИОДА(ХозрасчетныйОстаткиИОбороты.Период, МЕСЯЦ)
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК ПериодНачисления,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК НачальнаяПереплата,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт КАК НачальнаяЗадолженность,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК Уплата,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК Начисление,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, НЕОПРЕДЕЛЕНО) КАК ДокументНомер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, НЕОПРЕДЕЛЕНО) КАК ДокументДата
	|ПОМЕСТИТЬ ВТ_ОперацииПоВзносам
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
	|			&НачалоПериодаГраница,
	|			&КонецПериодаГраница,
	|			Регистратор,
	|			ДвиженияИГраницыПериода,
	|			Счет В (&СчетаВзносовСФОТ),
	|			&ВидСубконтоВидыПлатежей,
	|			Организация = &Организация
	|				И Субконто1 В (&ВидыПлатежейНалоговые)) КАК ХозрасчетныйОстаткиИОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СрокиУплаты КАК ВТ_СрокиУплаты
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОстаткиИОбороты.Период, МЕСЯЦ) = ВТ_СрокиУплаты.МесяцУплаты)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ХозрасчетныйОстаткиИОбороты.Организация = ДанныеПервичныхДокументов.Организация
	|			И ХозрасчетныйОстаткиИОбороты.Регистратор = ДанныеПервичныхДокументов.Документ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетВзноса,
	|	ПериодНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(МИНИМУМ(ВТ_ОперацииПоВзносам.ПериодНачисления), МЕСЯЦ) КАК НачалоПериода,
	|	КОНЕЦПЕРИОДА(МАКСИМУМ(ВТ_ОперацииПоВзносам.ПериодНачисления), МЕСЯЦ) КАК КонецПериода
	|ИЗ
	|	ВТ_ОперацииПоВзносам КАК ВТ_ОперацииПоВзносам"
	;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаОперацииВыплатыЗарплаты(НомераТаблиц, ТаблицыДанных, Реквизиты)
	
	// ИП без сотрудников - нет зарплаты, нет больничных.
	Если (Реквизиты.ЭтоИндивидуальныйПредприниматель И Не Реквизиты.ИПИспользуетТрудНаемныхРаботников) Тогда
		ТаблицыДанных.Вставить("ГраницыПериодовНачисленияЗарплаты", Неопределено);
		Возврат "";
	КонецЕсли;
	
	// Если не ведется учет больничных в программе, суммы больничных за счет работодателя
	// можно выделить только при загрузке из внешней программы в формате ЗУП 3.1.
	// При этом достоверно определить "выплаченность" зарплаты можно
	// только при детальном учете расчетов с работниками на счете 70.
	Если Не Реквизиты.ВедетсяУчетБольничных И Не Реквизиты.ВедетсяУчетПоРаботникам Тогда
		ТаблицыДанных.Вставить("ГраницыПериодовНачисленияЗарплаты", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ВременнаяТаблицаОплатаВедомостей", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаДанныеВыплатПоВедомостям", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаВыплатыЗарплаты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ГраницыПериодовНачисленияЗарплаты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОплатаВедомостейНаВыплатуЗарплаты.Регистратор КАК Регистратор,
	|	ОплатаВедомостейНаВыплатуЗарплаты.Ведомость,
	|	&ПолеФизлицоОплатаВедомости КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТ_ОплатаВедомостейНаВыплатуЗарплаты
	|ИЗ
	|	РегистрСведений.ОплатаВедомостейНаВыплатуЗарплаты КАК ОплатаВедомостейНаВыплатуЗарплаты
	|ГДЕ
	|	ОплатаВедомостейНаВыплатуЗарплаты.Активность
	|	И ОплатаВедомостейНаВыплатуЗарплаты.Организация = &Организация
	|	И ОплатаВедомостейНаВыплатуЗарплаты.Регистратор.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериодаДата
	|
	|СГРУППИРОВАТЬ ПО
	|	ОплатаВедомостейНаВыплатуЗарплаты.Регистратор,
	|	ОплатаВедомостейНаВыплатуЗарплаты.Ведомость,
	|	&ПолеФизлицоОплатаВедомости
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.Организация КАК Организация,
	|	ХозрасчетныйОборотыДтКт.Период КАК ПериодРегистрации,
	|	ХозрасчетныйОборотыДтКт.Регистратор КАК ДокументРасхода,
	|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаВыплаты,
	|	ЕСТЬNULL(ВТ_ОплатаВедомостейНаВыплатуЗарплаты.Ведомость, НЕОПРЕДЕЛЕНО) КАК Ведомость,
	|	ВЫБОР
	|		КОГДА ВТ_ОплатаВедомостейНаВыплатуЗарплаты.Ведомость ЕСТЬ NULL 
	|			ТОГДА НАЧАЛОПЕРИОДА(ХозрасчетныйОборотыДтКт.Период, МЕСЯЦ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ВТ_ОплатаВедомостейНаВыплатуЗарплаты.Ведомость.ПериодРегистрации, МЕСЯЦ)
	|	КОНЕЦ КАК ПериодНачисления,
	|	&ПолеРаботник КАК Сотрудник,
	|	ЕСТЬNULL(ВТ_ОплатаВедомостейНаВыплатуЗарплаты.Ведомость.Номер, НЕОПРЕДЕЛЕНО) КАК ДокументНомер,
	|	ЕСТЬNULL(ВТ_ОплатаВедомостейНаВыплатуЗарплаты.Ведомость.Дата, НЕОПРЕДЕЛЕНО) КАК ДокументДата
	|ПОМЕСТИТЬ ВТ_ДанныеВыплатПоВедомостям
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериодаГраница, &КонецПериодаГраница, Регистратор, СчетДт В (&СчетаУчетаЗарплаты), &ВидСубконтоРаботники, СчетКт В (&СчетаУчетаДС), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОплатаВедомостейНаВыплатуЗарплаты КАК ВТ_ОплатаВедомостейНаВыплатуЗарплаты
	|		ПО ХозрасчетныйОборотыДтКт.Регистратор = ВТ_ОплатаВедомостейНаВыплатуЗарплаты.Регистратор
	|			И (&УсловиеСвязиПоРаботникам)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРасхода,
	|	Организация"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	ПолеФизлицоВедомости = ?(Реквизиты.ВедетсяУчетПоРаботникам,
		"ОплатаВедомостейНаВыплатуЗарплаты.ФизическоеЛицо",
		"НЕОПРЕДЕЛЕНО");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолеФизлицоОплатаВедомости", ПолеФизлицоВедомости);
	
	ПолеРаботник = ?(Реквизиты.ВедетсяУчетПоРаботникам, "ХозрасчетныйОборотыДтКт.СубконтоДт1", "НЕОПРЕДЕЛЕНО");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолеРаботник", ПолеРаботник);
	
	ВидСубконтоРаботники = ?(Реквизиты.ВедетсяУчетПоРаботникам, "&ВидСубконтоРаботники", "");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВидСубконтоРаботники", ВидСубконтоРаботники);
	
	СвязьПоРаботникам = ?(Реквизиты.ВедетсяУчетПоРаботникам,
		"ХозрасчетныйОборотыДтКт.СубконтоДт1 = ВТ_ОплатаВедомостейНаВыплатуЗарплаты.ФизическоеЛицо",
		"ИСТИНА");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеСвязиПоРаботникам", СвязьПоРаботникам);
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ДанныеВыплатПоВедомостям.ПериодРегистрации,
	|	ДанныеВыплатПоВедомостям.ДокументРасхода,
	|	ДанныеВыплатПоВедомостям.Ведомость,
	|	ДанныеВыплатПоВедомостям.СуммаВыплаты,
	|	ДанныеВыплатПоВедомостям.ПериодНачисления,
	|	ДанныеВыплатПоВедомостям.Сотрудник,
	|	ВЫБОР
	|		КОГДА ДанныеВыплатПоВедомостям.Ведомость = НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеПервичныхДокументов.Номер
	|		ИНАЧЕ ДанныеВыплатПоВедомостям.ДокументНомер
	|	КОНЕЦ КАК ДокументНомер,
	|	ВЫБОР
	|		КОГДА ДанныеВыплатПоВедомостям.Ведомость = НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеПервичныхДокументов.Дата
	|		ИНАЧЕ ДанныеВыплатПоВедомостям.ДокументДата
	|	КОНЕЦ КАК ДокументДата
	|ПОМЕСТИТЬ ВТ_ДанныеВыплатЗарплаты
	|ИЗ
	|	ВТ_ДанныеВыплатПоВедомостям КАК ДанныеВыплатПоВедомостям
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ДанныеВыплатПоВедомостям.ДокументРасхода = ДанныеПервичныхДокументов.Документ
	|			И ДанныеВыплатПоВедомостям.Организация = ДанныеПервичныхДокументов.Организация
	|			И (ДанныеВыплатПоВедомостям.Ведомость = НЕОПРЕДЕЛЕНО)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(МИНИМУМ(ДанныеВыплатПоВедомостям.ПериодНачисления), МЕСЯЦ) КАК НачалоПериода,
	|	КОНЕЦПЕРИОДА(МАКСИМУМ(ДанныеВыплатПоВедомостям.ПериодНачисления), МЕСЯЦ) КАК КонецПериода
	|ИЗ
	|	ВТ_ДанныеВыплатПоВедомостям КАК ДанныеВыплатПоВедомостям"
	;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаРасходыПоВзносам(НомераТаблиц, ТаблицыДанных, Реквизиты)

	Если (Реквизиты.ЭтоИндивидуальныйПредприниматель И Не Реквизиты.ИПИспользуетТрудНаемныхРаботников)
		Или Не Реквизиты.ЕстьВзносы Тогда
		
		ТаблицыДанных.Вставить("РасходыПоВзносам",      Неопределено);
		Возврат "";
		
	КонецЕсли;
		
	НомераТаблиц.Вставить("ВременнаяТаблицаНачисленияВзносовДоляСпецРежим", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаНачисленияИтоги", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаНачисленияПоРегистрациям", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РасходыПоВзносам", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.СчетВзноса КАК СчетВзноса,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	СУММА(ВложенныйЗапрос.НачисленоСпецРежим) КАК НачисленоСпецРежим,
	|	ВложенныйЗапрос.Подразделение КАК Подразделение,
	|	СУММА(ВложенныйЗапрос.НачисленоВсего) КАК НачисленоВсего
	|ПОМЕСТИТЬ ВТ_НачисленияВзносовДоляСпецРежим
	|ИЗ
	|	(ВЫБРАТЬ
	|		ХозрасчетныйОборотыДтКт.СчетКт КАК СчетВзноса,
	|		НАЧАЛОПЕРИОДА(ХозрасчетныйОборотыДтКт.Период, МЕСЯЦ) КАК ПериодНачисления,
	|		ХозрасчетныйОборотыДтКт.СуммаОборот КАК НачисленоВсего,
	|		0 КАК НачисленоСпецРежим,
	|		ХозрасчетныйОборотыДтКт.ПодразделениеДт КАК Подразделение
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|				&НачалоПериодаНачисленийВзносов,
	|				&КонецПериодаНачисленийВзносов,
	|				Месяц,
	|				,
	|				&ВидСубконтоСтатьиЗатрат,
	|				СчетКт В (&СчетаВзносовСФОТ),
	|				&ВидСубконтоВидыПлатежей,
	|				Организация = &Организация
	|					И СубконтоКт1 В (&ВидыПлатежейНалоговые)) КАК ХозрасчетныйОборотыДтКт
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ХозрасчетныйОборотыДтКт.СчетКт,
	|		НАЧАЛОПЕРИОДА(ХозрасчетныйОборотыДтКт.Период, МЕСЯЦ),
	|		ХозрасчетныйОборотыДтКт.СуммаОборот,
	|		0,
	|		ХозрасчетныйОборотыДтКт.ПодразделениеДт
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|				&НачалоПериодаНачисленийВзносов,
	|				&КонецПериодаНачисленийВзносов,
	|				Месяц,
	|				,
	|				&ВидСубконтоПрочиеДоходыРасходы,
	|				СчетКт В (&СчетаВзносовСФОТ),
	|				&ВидСубконтоВидыПлатежей,
	|				Организация = &Организация
	|					И СубконтоКт1 В (&ВидыПлатежейНалоговые)) КАК ХозрасчетныйОборотыДтКт
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ХозрасчетныйОборотыДтКт.СчетКт,
	|		НАЧАЛОПЕРИОДА(ХозрасчетныйОборотыДтКт.Период, МЕСЯЦ),
	|		0,
	|		ХозрасчетныйОборотыДтКт.СуммаОборот,
	|		ХозрасчетныйОборотыДтКт.ПодразделениеДт
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|				&НачалоПериодаНачисленийВзносов,
	|				&КонецПериодаНачисленийВзносов,
	|				Месяц,
	|				,
	|				&ВидСубконтоСтатьиЗатрат,
	|				СчетКт В (&СчетаВзносовСФОТ),
	|				&ВидСубконтоВидыПлатежей,
	|				Организация = &Организация
	|					И СубконтоКт1 В (&ВидыПлатежейНалоговые)
	|					И СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
	|					И ВЫРАЗИТЬ(СубконтоДт1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)) КАК ХозрасчетныйОборотыДтКт
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ХозрасчетныйОборотыДтКт.СчетКт,
	|		НАЧАЛОПЕРИОДА(ХозрасчетныйОборотыДтКт.Период, МЕСЯЦ),
	|		0,
	|		ХозрасчетныйОборотыДтКт.СуммаОборот,
	|		ХозрасчетныйОборотыДтКт.ПодразделениеДт
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|				&НачалоПериодаНачисленийВзносов,
	|				&КонецПериодаНачисленийВзносов,
	|				Месяц,
	|				,
	|				&ВидСубконтоПрочиеДоходыРасходы,
	|				СчетКт В (&СчетаВзносовСФОТ),
	|				&ВидСубконтоВидыПлатежей,
	|				Организация = &Организация
	|					И СубконтоКт1 В (&ВидыПлатежейНалоговые)
	|					И СубконтоДт1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|					И ВЫРАЗИТЬ(СубконтоДт1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)) КАК ХозрасчетныйОборотыДтКт) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.СчетВзноса,
	|	ВложенныйЗапрос.ПериодНачисления,
	|	ВложенныйЗапрос.Подразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НачисленияВзносовДоляСпецрежим.СчетВзноса КАК СчетВзноса,
	|	ВТ_НачисленияВзносовДоляСпецрежим.ПериодНачисления КАК ПериодНачисления,
	|	СУММА(ВТ_НачисленияВзносовДоляСпецрежим.НачисленоВсего) КАК НачисленоВсегоПоОрганизации
	|ПОМЕСТИТЬ ВТ_НачисленияИтоги
	|ИЗ
	|	ВТ_НачисленияВзносовДоляСпецрежим КАК ВТ_НачисленияВзносовДоляСпецрежим
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_НачисленияВзносовДоляСпецрежим.СчетВзноса,
	|	ВТ_НачисленияВзносовДоляСпецрежим.ПериодНачисления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетВзноса,
	|	ПериодНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НачисленияВзносовДоляСпецрежим.СчетВзноса КАК СчетВзноса,
	|	ВТ_НачисленияВзносовДоляСпецрежим.ПериодНачисления КАК ПериодНачисления,
	|	СУММА(ВТ_НачисленияВзносовДоляСпецрежим.НачисленоСпецРежим) КАК НачисленоСпецРежим,
	|	ВТ_РегистрацииПодразделений.РегистрацияВНалоговомОргане,
	|	СУММА(ВТ_НачисленияВзносовДоляСпецрежим.НачисленоВсего) КАК НачисленоВсего
	|ПОМЕСТИТЬ ВТ_НачисленияПоРегистрациям
	|ИЗ
	|	ВТ_НачисленияВзносовДоляСпецрежим КАК ВТ_НачисленияВзносовДоляСпецрежим
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РегистрацииПодразделений КАК ВТ_РегистрацииПодразделений
	|		ПО ВТ_НачисленияВзносовДоляСпецрежим.Подразделение = ВТ_РегистрацииПодразделений.Подразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_НачисленияВзносовДоляСпецрежим.СчетВзноса,
	|	ВТ_НачисленияВзносовДоляСпецрежим.ПериодНачисления,
	|	ВТ_РегистрацииПодразделений.РегистрацияВНалоговомОргане
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетВзноса,
	|	ПериодНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОперацииПоВзносам.ПериодРегистрации КАК ПериодРегистрации,
	|	ВТ_ОперацииПоВзносам.СчетВзноса,
	|	ВТ_ОперацииПоВзносам.ДокументРасхода КАК ДокументРасхода,
	|	ВТ_ОперацииПоВзносам.ПериодНачисления,
	|	ВТ_ОперацииПоВзносам.НачальнаяПереплата КАК НачальнаяПереплата,
	|	ВТ_ОперацииПоВзносам.НачальнаяЗадолженность КАК НачальнаяЗадолженность,
	|	ВТ_ОперацииПоВзносам.Уплата КАК Уплата,
	|	ВТ_ОперацииПоВзносам.Начисление КАК Начисление,
	|	ВТ_ОперацииПоВзносам.ДокументНомер,
	|	ВТ_ОперацииПоВзносам.ДокументДата,
	|	ЕСТЬNULL(ВТ_НачисленияПоРегистрациям.НачисленоВсего, 0) КАК НачисленоВсего,
	|	ЕСТЬNULL(ВТ_НачисленияПоРегистрациям.НачисленоСпецРежим, 0) КАК НачисленоСпецРежим,
	|	ЕСТЬNULL(ВТ_НачисленияПоРегистрациям.РегистрацияВНалоговомОргане, ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)) КАК РегистрацияВНалоговомОргане,
	|	ЕСТЬNULL(ВТ_НачисленияИтоги.НачисленоВсегоПоОрганизации, 0) КАК НачисленоВсегоПоОрганизации
	|ИЗ
	|	ВТ_ОперацииПоВзносам КАК ВТ_ОперацииПоВзносам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НачисленияПоРегистрациям КАК ВТ_НачисленияПоРегистрациям
	|		ПО ВТ_ОперацииПоВзносам.СчетВзноса = ВТ_НачисленияПоРегистрациям.СчетВзноса
	|			И ВТ_ОперацииПоВзносам.ПериодНачисления = ВТ_НачисленияПоРегистрациям.ПериодНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НачисленияИтоги КАК ВТ_НачисленияИтоги
	|		ПО ВТ_ОперацииПоВзносам.СчетВзноса = ВТ_НачисленияИтоги.СчетВзноса
	|			И ВТ_ОперацииПоВзносам.ПериодНачисления = ВТ_НачисленияИтоги.ПериодНачисления
	|ГДЕ
	|	ВТ_ОперацииПоВзносам.ДокументРасхода <> НЕОПРЕДЕЛЕНО
	|	И НЕ ВТ_ОперацииПоВзносам.ДокументРасхода ССЫЛКА Документ.ПоступлениеНаРасчетныйСчет
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации,
	|	ДокументРасхода"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРасходыПоБольничным(НомераТаблиц, ТаблицыДанных, Реквизиты)
	
	Если Не Реквизиты.ЕстьЗарплата Тогда
		ТаблицыДанных.Вставить("РасходыПоБольничным", Неопределено);
		Возврат "";
	КонецЕсли;
	
	Если Реквизиты.ВедетсяУчетБольничных Тогда
		
		НомераТаблиц.Вставить("ВременнаяТаблицаНачисленияЗарплаты", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВременнаяТаблицаВыплатыИтоги", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВременнаяТаблицаВыплатыПоПодразделениям", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВременнаяТаблицаВыплатыПоРегистрациям", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("РасходыПоБольничным", НомераТаблиц.Количество());
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
		|	ВложенныйЗапрос.Сотрудник КАК Сотрудник,
		|	СУММА(ВложенныйЗапрос.БольничныйЗаСчетРаботодателя) КАК БольничныйЗаСчетРаботодателя,
		|	СУММА(ВложенныйЗапрос.БольничныйЗаСчетРаботодателяСпецРежим) КАК БольничныйЗаСчетРаботодателяСпецРежим,
		|	ВложенныйЗапрос.Подразделение КАК Подразделение
		|ПОМЕСТИТЬ ВТ_НачисленияЗарплаты
		|ИЗ
		|	(ВЫБРАТЬ
		|		НАЧАЛОПЕРИОДА(ХозрасчетныйОборотыДтКт.Период, МЕСЯЦ) КАК ПериодНачисления,
		|		&ОборотыДтКтПолеРаботник КАК Сотрудник,
		|		ВЫБОР
		|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
		|				ТОГДА ХозрасчетныйОборотыДтКт.СуммаОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК БольничныйЗаСчетРаботодателя,
		|		ВЫБОР
		|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
		|				ТОГДА ХозрасчетныйОборотыДтКт.СуммаОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК БольничныйЗаСчетРаботодателяСпецРежим,
		|		ХозрасчетныйОборотыДтКт.ПодразделениеДт КАК Подразделение
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|				&НачалоПериодаНачисленийЗарплаты,
		|				&КонецПериодаНачисленийЗарплаты,
		|				Регистратор,
		|				,
		|				&ВидСубконтоСтатьиЗатрат,
		|				СчетКт В (&СчетаУчетаЗарплаты),
		|				&ВидСубконтоРаботники,
		|				Организация = &Организация
		|					И СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ВЫРАЗИТЬ(СубконтоДт1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат В (&ВидыДеятельностиУчетаЗатрат)) КАК ХозрасчетныйОборотыДтКт
		|	ГДЕ
		|		ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.БольничныйЛист
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НАЧАЛОПЕРИОДА(ХозрасчетныйОборотыДтКт.Период, МЕСЯЦ),
		|		&ОборотыДтКтПолеРаботник,
		|		ВЫБОР
		|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
		|				ТОГДА ХозрасчетныйОборотыДтКт.СуммаОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
		|				ТОГДА ХозрасчетныйОборотыДтКт.СуммаОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ХозрасчетныйОборотыДтКт.ПодразделениеДт
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|				&НачалоПериодаНачисленийЗарплаты,
		|				&КонецПериодаНачисленийЗарплаты,
		|				Регистратор,
		|				,
		|				&ВидСубконтоПрочиеДоходыРасходы,
		|				СчетКт В (&СчетаУчетаЗарплаты),
		|				&ВидСубконтоРаботники,
		|				Организация = &Организация
		|					И СубконтоДт1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
		|					И ВЫРАЗИТЬ(СубконтоДт1 КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат В (&ВидыДеятельностиУчетаЗатрат)) КАК ХозрасчетныйОборотыДтКт
		|	ГДЕ
		|		ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.БольничныйЛист) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.ПериодНачисления,
		|	ВложенныйЗапрос.Сотрудник,
		|	ВложенныйЗапрос.Подразделение
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	-ХозрасчетныйОбороты.СуммаОборот КАК ВсегоКВыплате,
		|	НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ) КАК ПериодНачисления,
		|	&ОборотыПолеРаботник КАК Сотрудник
		|ПОМЕСТИТЬ ВТ_ВыплатыИтоги
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериодаНачисленийЗарплаты, &КонецПериодаНачисленийЗарплаты, Месяц, Счет В (&СчетаУчетаЗарплаты), &ВидСубконтоРаботники, Организация = &Организация, НЕ КорСчет В (&СчетаУчетаДС), ) КАК ХозрасчетныйОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПериодНачисления,
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВыплатыИтоги.ВсегоКВыплате КАК ВсегоКВыплате,
		|	ВТ_НачисленияЗарплаты.ПериодНачисления,
		|	ВТ_НачисленияЗарплаты.Сотрудник,
		|	ВТ_НачисленияЗарплаты.БольничныйЗаСчетРаботодателя,
		|	ВТ_НачисленияЗарплаты.БольничныйЗаСчетРаботодателяСпецРежим,
		|	ВТ_НачисленияЗарплаты.Подразделение КАК Подразделение
		|ПОМЕСТИТЬ ВТ_ВыплатыПоПодразделениям
		|ИЗ
		|	ВТ_ВыплатыИтоги КАК ВТ_ВыплатыИтоги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НачисленияЗарплаты КАК ВТ_НачисленияЗарплаты
		|		ПО (ВТ_НачисленияЗарплаты.Сотрудник = ВТ_ВыплатыИтоги.Сотрудник)
		|			И (ВТ_НачисленияЗарплаты.ПериодНачисления = ВТ_ВыплатыИтоги.ПериодНачисления)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_РегистрацииПодразделений.РегистрацияВНалоговомОргане,
		|	СУММА(ВТ_ВыплатыПоПодразделениям.ВсегоКВыплате) КАК ВсегоКВыплате,
		|	ВТ_ВыплатыПоПодразделениям.ПериодНачисления КАК ПериодНачисления,
		|	ВТ_ВыплатыПоПодразделениям.Сотрудник КАК Сотрудник,
		|	СУММА(ВТ_ВыплатыПоПодразделениям.БольничныйЗаСчетРаботодателя) КАК БольничныйЗаСчетРаботодателя,
		|	СУММА(ВТ_ВыплатыПоПодразделениям.БольничныйЗаСчетРаботодателяСпецРежим) КАК БольничныйЗаСчетРаботодателяСпецРежим
		|ПОМЕСТИТЬ Вт_ВыплатыПоРегистрациям
		|ИЗ
		|	ВТ_ВыплатыПоПодразделениям КАК ВТ_ВыплатыПоПодразделениям
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РегистрацииПодразделений КАК ВТ_РегистрацииПодразделений
		|		ПО ВТ_ВыплатыПоПодразделениям.Подразделение = ВТ_РегистрацииПодразделений.Подразделение
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_РегистрацииПодразделений.РегистрацияВНалоговомОргане,
		|	ВТ_ВыплатыПоПодразделениям.ПериодНачисления,
		|	ВТ_ВыплатыПоПодразделениям.Сотрудник
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПериодНачисления,
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеВыплатЗарплаты.ПериодРегистрации,
		|	ВТ_ДанныеВыплатЗарплаты.ДокументРасхода,
		|	ВТ_ДанныеВыплатЗарплаты.Ведомость,
		|	ВТ_ДанныеВыплатЗарплаты.СуммаВыплаты КАК СуммаВыплаты,
		|	ВТ_ДанныеВыплатЗарплаты.ПериодНачисления,
		|	ВТ_ДанныеВыплатЗарплаты.Сотрудник,
		|	ВТ_ДанныеВыплатЗарплаты.ДокументНомер,
		|	ВТ_ДанныеВыплатЗарплаты.ДокументДата,
		|	Вт_ВыплатыПоРегистрациям.РегистрацияВНалоговомОргане,
		|	ВТ_ВыплатыИтоги.ВсегоКВыплате КАК ВсегоКВыплатеПоОрганизации,
		|	Вт_ВыплатыПоРегистрациям.БольничныйЗаСчетРаботодателяСпецРежим,
		|	Вт_ВыплатыПоРегистрациям.БольничныйЗаСчетРаботодателя,
		|	Вт_ВыплатыПоРегистрациям.ВсегоКВыплате
		|ИЗ
		|	ВТ_ДанныеВыплатЗарплаты КАК ВТ_ДанныеВыплатЗарплаты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВыплатыИтоги КАК ВТ_ВыплатыИтоги
		|		ПО ВТ_ДанныеВыплатЗарплаты.ПериодНачисления = ВТ_ВыплатыИтоги.ПериодНачисления
		|			И ВТ_ДанныеВыплатЗарплаты.Сотрудник = ВТ_ВыплатыИтоги.Сотрудник
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Вт_ВыплатыПоРегистрациям КАК Вт_ВыплатыПоРегистрациям
		|		ПО ВТ_ДанныеВыплатЗарплаты.ПериодНачисления = Вт_ВыплатыПоРегистрациям.ПериодНачисления
		|			И ВТ_ДанныеВыплатЗарплаты.Сотрудник = Вт_ВыплатыПоРегистрациям.Сотрудник";
		
		ОборотыДтКтПолеРаботник = ?(Реквизиты.ВедетсяУчетПоРаботникам, "ХозрасчетныйОборотыДтКт.СубконтоКт1", "НЕОПРЕДЕЛЕНО");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОборотыДтКтПолеРаботник", ОборотыДтКтПолеРаботник);
		
		ОборотыПолеРаботник = ?(Реквизиты.ВедетсяУчетПоРаботникам, "ХозрасчетныйОбороты.Субконто1", "НЕОПРЕДЕЛЕНО");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОборотыПолеРаботник", ОборотыПолеРаботник);
		
		ВидСубконтоРаботники = ?(Реквизиты.ВедетсяУчетПоРаботникам, "&ВидСубконтоРаботники", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВидСубконтоРаботники", ВидСубконтоРаботники);
		
	Иначе
		
		// Если учет зарплаты ведется во внешней программе и ведется учет расчетов по работникам на счете 70 -
		// суммы больничных пособий за счет работодателя выделяем из отражения з/п в бух. учете.
		
		НомераТаблиц.Вставить("ВременнаяТаблицаНачисленияЗарплаты", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВременнаяТаблицаВыплатыИтоги", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВременнаяТаблицаВыплатыПоПодразделениям", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВременнаяТаблицаВыплатыПоРегистрациям", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("РасходыПоБольничным", НомераТаблиц.Количество());
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	БольничныеФизЛиц.ПериодНачисления КАК ПериодНачисления,
		|	БольничныеФизЛиц.Сотрудник КАК Сотрудник,
		|	СУММА(БольничныеФизЛиц.БольничныйЗаСчетРаботодателяСпецРежим) КАК БольничныйЗаСчетРаботодателяСпецРежим,
		|	СУММА(БольничныеФизЛиц.ВсегоКВыплате) КАК ВсегоКВыплате,
		|	СУММА(БольничныеФизЛиц.БольничныйЗаСчетРаботодателя) КАК БольничныйЗаСчетРаботодателя,
		|	БольничныеФизЛиц.Подразделение КАК Подразделение
		|ПОМЕСТИТЬ ВТ_НачисленияЗарплаты
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОтражениеЗарплатыВБухучете.ПериодРегистрации КАК ПериодНачисления,
		|		ТЧНачисленнаяЗарплатаИВзносы.ФизическоеЛицо КАК Сотрудник,
		|		ВЫБОР
		|			КОГДА ТЧНачисленнаяЗарплатаИВзносы.ОблагаетсяЕНВД
		|				ТОГДА ТЧНачисленнаяЗарплатаИВзносы.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК БольничныйЗаСчетРаботодателяСпецРежим,
		|		ВЫБОР
		|			КОГДА НЕ ТЧНачисленнаяЗарплатаИВзносы.ОблагаетсяЕНВД
		|				ТОГДА ТЧНачисленнаяЗарплатаИВзносы.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК БольничныйЗаСчетРаботодателя,
		|		0 КАК ВсегоКВыплате,
		|		ТЧНачисленнаяЗарплатаИВзносы.Подразделение КАК Подразделение
		|	ИЗ
		|		Документ.ОтражениеЗарплатыВБухучете.НачисленнаяЗарплатаИВзносы КАК ТЧНачисленнаяЗарплатаИВзносы
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтражениеЗарплатыВБухучете КАК ОтражениеЗарплатыВБухучете
		|			ПО ТЧНачисленнаяЗарплатаИВзносы.Ссылка = ОтражениеЗарплатыВБухучете.Ссылка
		|	ГДЕ
		|		ОтражениеЗарплатыВБухучете.ПериодРегистрации МЕЖДУ &НачалоПериодаНачисленийЗарплатыДата И &КонецПериодаНачисленийЗарплатыДата
		|		И ТЧНачисленнаяЗарплатаИВзносы.ВидОперации = &ВидОперацииБольничные
		|		И ОтражениеЗарплатыВБухучете.Организация = &Организация
		|		И ОтражениеЗарплатыВБухучете.Проведен) КАК БольничныеФизЛиц
		|
		|СГРУППИРОВАТЬ ПО
		|	БольничныеФизЛиц.ПериодНачисления,
		|	БольничныеФизЛиц.Сотрудник,
		|	БольничныеФизЛиц.Подразделение
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПериодНачисления,
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	-ХозрасчетныйОбороты.СуммаОборот КАК ВсегоКВыплате,
		|	НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ) КАК ПериодНачисления,
		|	ХозрасчетныйОбороты.Субконто1 КАК Сотрудник
		|ПОМЕСТИТЬ ВТ_ВыплатыИтоги
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериодаНачисленийЗарплаты, &КонецПериодаНачисленийЗарплаты, Месяц, Счет В (&СчетаУчетаЗарплаты), &ВидСубконтоРаботники, Организация = &Организация, НЕ КорСчет В (&СчетаУчетаДС), ) КАК ХозрасчетныйОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПериодНачисления,
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВыплатыИтоги.ВсегоКВыплате КАК ВсегоКВыплате,
		|	ВТ_НачисленияЗарплаты.ПериодНачисления КАК ПериодНачисления,
		|	ВТ_НачисленияЗарплаты.Сотрудник КАК Сотрудник,
		|	ВТ_НачисленияЗарплаты.БольничныйЗаСчетРаботодателя КАК БольничныйЗаСчетРаботодателя,
		|	ВТ_НачисленияЗарплаты.БольничныйЗаСчетРаботодателяСпецРежим КАК БольничныйЗаСчетРаботодателяСпецРежим,
		|	ВТ_НачисленияЗарплаты.Подразделение КАК Подразделение
		|ПОМЕСТИТЬ ВТ_ВыплатыПоПодразделениям
		|ИЗ
		|	ВТ_ВыплатыИтоги КАК ВТ_ВыплатыИтоги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НачисленияЗарплаты КАК ВТ_НачисленияЗарплаты
		|		ПО (ВТ_НачисленияЗарплаты.Сотрудник = ВТ_ВыплатыИтоги.Сотрудник)
		|			И (ВТ_НачисленияЗарплаты.ПериодНачисления = ВТ_ВыплатыИтоги.ПериодНачисления)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_РегистрацииПодразделений.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	СУММА(ВТ_ВыплатыПоПодразделениям.ВсегоКВыплате) КАК ВсегоКВыплате,
		|	ВТ_ВыплатыПоПодразделениям.ПериодНачисления КАК ПериодНачисления,
		|	ВТ_ВыплатыПоПодразделениям.Сотрудник КАК Сотрудник,
		|	СУММА(ВТ_ВыплатыПоПодразделениям.БольничныйЗаСчетРаботодателя) КАК БольничныйЗаСчетРаботодателя,
		|	СУММА(ВТ_ВыплатыПоПодразделениям.БольничныйЗаСчетРаботодателяСпецРежим) КАК БольничныйЗаСчетРаботодателяСпецРежим
		|ПОМЕСТИТЬ Вт_ВыплатыПоРегистрациям
		|ИЗ
		|	ВТ_ВыплатыПоПодразделениям КАК ВТ_ВыплатыПоПодразделениям
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РегистрацииПодразделений КАК ВТ_РегистрацииПодразделений
		|		ПО ВТ_ВыплатыПоПодразделениям.Подразделение = ВТ_РегистрацииПодразделений.Подразделение
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_РегистрацииПодразделений.РегистрацияВНалоговомОргане,
		|	ВТ_ВыплатыПоПодразделениям.ПериодНачисления,
		|	ВТ_ВыплатыПоПодразделениям.Сотрудник
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПериодНачисления,
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеВыплатЗарплаты.ПериодРегистрации КАК ПериодРегистрации,
		|	ВТ_ДанныеВыплатЗарплаты.ДокументРасхода КАК ДокументРасхода,
		|	ВТ_ДанныеВыплатЗарплаты.Ведомость КАК Ведомость,
		|	ВТ_ДанныеВыплатЗарплаты.СуммаВыплаты КАК СуммаВыплаты,
		|	ВТ_ДанныеВыплатЗарплаты.ПериодНачисления КАК ПериодНачисления,
		|	ВТ_ДанныеВыплатЗарплаты.Сотрудник КАК Сотрудник,
		|	ВТ_ДанныеВыплатЗарплаты.ДокументНомер КАК ДокументНомер,
		|	ВТ_ДанныеВыплатЗарплаты.ДокументДата КАК ДокументДата,
		|	Вт_ВыплатыПоРегистрациям.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	ВТ_ВыплатыИтоги.ВсегоКВыплате КАК ВсегоКВыплатеПоОрганизации,
		|	Вт_ВыплатыПоРегистрациям.БольничныйЗаСчетРаботодателяСпецРежим КАК БольничныйЗаСчетРаботодателяСпецРежим,
		|	Вт_ВыплатыПоРегистрациям.БольничныйЗаСчетРаботодателя КАК БольничныйЗаСчетРаботодателя,
		|	Вт_ВыплатыПоРегистрациям.ВсегоКВыплате КАК ВсегоКВыплате
		|ИЗ
		|	ВТ_ДанныеВыплатЗарплаты КАК ВТ_ДанныеВыплатЗарплаты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВыплатыИтоги КАК ВТ_ВыплатыИтоги
		|		ПО ВТ_ДанныеВыплатЗарплаты.ПериодНачисления = ВТ_ВыплатыИтоги.ПериодНачисления
		|			И ВТ_ДанныеВыплатЗарплаты.Сотрудник = ВТ_ВыплатыИтоги.Сотрудник
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Вт_ВыплатыПоРегистрациям КАК Вт_ВыплатыПоРегистрациям
		|		ПО ВТ_ДанныеВыплатЗарплаты.ПериодНачисления = Вт_ВыплатыПоРегистрациям.ПериодНачисления
		|			И ВТ_ДанныеВыплатЗарплаты.Сотрудник = Вт_ВыплатыПоРегистрациям.Сотрудник"; 
		
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаНалоговыеРегистрации(НомераТаблиц, Реквизиты)
	
	Если Реквизиты.УчетПоПодразделениям И Реквизиты.ПлательщикЕНВД Тогда
		
		НомераТаблиц.Вставить("ВременнаяТаблицаРегистрацииПодразделений", НомераТаблиц.Количество());
		
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МАКСИМУМ(ВидыДеятельностиЕНВД.РегистрацияВНалоговомОргане) КАК РегистрацияВНалоговомОргане,
		|	ВидыДеятельностиЕНВД.Подразделение КАК Подразделение
		|ПОМЕСТИТЬ ВТ_РегистрацииПодразделений
		|ИЗ
		|	Справочник.ВидыДеятельностиЕНВД КАК ВидыДеятельностиЕНВД
		|ГДЕ
		|	ВидыДеятельностиЕНВД.Владелец = &Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	ВидыДеятельностиЕНВД.Подразделение";
		
	Иначе
		
		НомераТаблиц.Вставить("ВременнаяТаблицаРегистрацииПодразделений", НомераТаблиц.Количество());
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК РегистрацияВНалоговомОргане
		|ПОМЕСТИТЬ ВТ_РегистрацииПодразделений";
		
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаВыручкаПоРегистрациям(НомераТаблиц, ТаблицыДанных, Реквизиты)
	
	Если Не (Реквизиты.ПлательщикЕНВД И Реквизиты.УчетПоПодразделениям) Тогда
		ТаблицыДанных.Вставить("ВыручкаПоРегистрациям", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ВыручкаПоРегистрациям", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК Выручка,
	|	ВЫБОР
	|		КОГДА ВТ_РегистрацииПодразделений.Подразделение ЕСТЬ NULL 
	|				ИЛИ ХозрасчетныйОборотыДтКт.ПодразделениеКт = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА &РегистрацияЕНВДОрганизации
	|		ИНАЧЕ ВТ_РегистрацииПодразделений.РегистрацияВНалоговомОргане
	|	КОНЕЦ КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериодаВыручкаЕНВД, &КонецПериодаВыручкаЕНВД, , , , СчетКт = &СчетВыручки, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РегистрацииПодразделений КАК ВТ_РегистрацииПодразделений
	|		ПО ХозрасчетныйОборотыДтКт.ПодразделениеКт = ВТ_РегистрацииПодразделений.Подразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ВТ_РегистрацииПодразделений.Подразделение ЕСТЬ NULL 
	|				ИЛИ ХозрасчетныйОборотыДтКт.ПодразделениеКт = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА &РегистрацияЕНВДОрганизации
	|		ИНАЧЕ ВТ_РегистрацииПодразделений.РегистрацияВНалоговомОргане
	|	КОНЕЦ";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция СрокиУплатыВзносовПоМесяцам(НачалоПериода, КонецПериода)

	ТаблицаСроков = Новый ТаблицаЗначений;
	ТаблицаСроков.Колонки.Добавить("МесяцУплаты", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ТаблицаСроков.Колонки.Добавить("ИсходныйСрок", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаСроков.Колонки.Добавить("СрокУплаты", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	
	ТекПериод = НачалоМесяца(НачалоПериода);
	
	Пока ТекПериод <= КонецПериода Цикл
		
		НоваяСтрока = ТаблицаСроков.Добавить();
		НоваяСтрока.МесяцУплаты = ТекПериод;
		НоваяСтрока.ИсходныйСрок = Дата(Год(ТекПериод), Месяц(ТекПериод), 15);
		
		ТекПериод = ДобавитьМесяц(ТекПериод, 1);
	
	КонецЦикла;
	
	ПроизводственныйКалендарь = КалендарныеГрафики.ОсновнойПроизводственныйКалендарь();
	СрокиУплаты = Новый Соответствие;
	
	Если ЗначениеЗаполнено(ПроизводственныйКалендарь) Тогда
		ИсходныеСроки = ТаблицаСроков.ВыгрузитьКолонку("ИсходныйСрок");
		СрокиУплаты   = КалендарныеГрафики.ДатыБлижайшихРабочихДней(ПроизводственныйКалендарь, ИсходныеСроки, Ложь, Ложь, Истина);
	КонецЕсли;
	
	Для каждого СтрокаПериода Из ТаблицаСроков Цикл
		
		СтрокаПериода.СрокУплаты = СрокиУплаты[СтрокаПериода.ИсходныйСрок];
		
		Если НЕ ЗначениеЗаполнено(СтрокаПериода.СрокУплаты) Тогда
			// Если не удалось получить дату рабочего дня из календаря, и срок уплаты приходится на выходной день -
			// сдвигаем срок уплаты на ближайший понедельник
			СмещениеДней = 0;
			Если ДеньНедели(СтрокаПериода.ИсходныйСрок) = 6 Тогда
				СмещениеДней = 2;
			ИначеЕсли ДеньНедели(СтрокаПериода.ИсходныйСрок) = 7 Тогда
				СмещениеДней = 1;
			КонецЕсли;
			СтрокаПериода.СрокУплаты = СтрокаПериода.ИсходныйСрок + СмещениеДней * 24*60*60;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаСроков;
	
КонецФункции

Процедура РаспределитьПоРегистрациям (ВыручкаПоРегистрациям, Реквизиты, ТаблицаРасходов)
	
	Если Не Реквизиты.ПлательщикЕНВД Тогда
		Возврат
	КонецЕсли;
	
	Если Реквизиты.УчетПоПодразделениям Тогда
	
		Если ТаблицаРасходов.Количество() = 0 Или ВыручкаПоРегистрациям.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		// Получаем коэффициенты для распределения уменьшающих расходов.
		КоэффициентыВыручки = Новый Массив;
		ОбщаяВыручка = ВыручкаПоРегистрациям.Итог("Выручка");
		Для каждого СтрокаРегистрация Из ВыручкаПоРегистрациям Цикл
			КоэффициентыВыручки.Добавить(СтрокаРегистрация.Выручка / ОбщаяВыручка);
		КонецЦикла;
		
		// Заполняем таблицу расходов и распределяем расходы регистраций, по которым не было выручки.
		
		РасходыДоРаспределения = ТаблицаРасходов.Скопировать();
		ТаблицаРасходов.Очистить();

		Для каждого Расход Из РасходыДоРаспределения Цикл
			Если ВыручкаПоРегистрациям.Найти(Расход.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") <> Неопределено Тогда
				
				СтрокаРасходов = ТаблицаРасходов.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРасходов, Расход);
				
			Иначе
				
				СуммыРасходаЕНВД    = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Расход.СуммаРасходаСпецРежим, КоэффициентыВыручки, 2);
				СуммыРасхода        = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Расход.СуммаРасхода, КоэффициентыВыручки, 2);
				СуммыОплаты         = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Расход.СуммаОплаты, КоэффициентыВыручки, 2);
				СуммыЗадолженность  = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Расход.Задолженность, КоэффициентыВыручки, 2);
				СуммыНачисленоВсего = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Расход.НачисленоВсего, КоэффициентыВыручки, 2);
				СуммыНачисленоЕНВД  = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Расход.НачисленоСпецРежим, КоэффициентыВыручки, 2);
				
				Для Счетчик = 0 По КоэффициентыВыручки.Количество() - 1 Цикл
					
					СтрокаРасходов = ТаблицаРасходов.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРасходов, Расход);
					СтрокаРасходов.РегистрацияВНалоговомОргане = ВыручкаПоРегистрациям[Счетчик].РегистрацияВНалоговомОргане;
					СтрокаРасходов.ДоляВыручкиРегистрации = КоэффициентыВыручки[Счетчик];
					СтрокаРасходов.СуммаРасходаСпецРежимРаспределяемая = Расход.СуммаРасходаСпецРежим;
					
					СтрокаРасходов.СуммаРасходаСпецРежим = ?(СуммыРасходаЕНВД = Неопределено, 0, СуммыРасходаЕНВД[Счетчик]);
					СтрокаРасходов.СуммаРасхода          = ?(СуммыРасхода = Неопределено, 0, СуммыРасхода[Счетчик]);
					СтрокаРасходов.СуммаОплаты           = ?(СуммыОплаты = Неопределено, 0, СуммыОплаты[Счетчик]);
					СтрокаРасходов.Задолженность         = ?(СуммыЗадолженность = Неопределено, 0, СуммыЗадолженность[Счетчик]);
					СтрокаРасходов.НачисленоВсего        = ?(СуммыНачисленоВсего = Неопределено, 0, СуммыНачисленоВсего[Счетчик]);
					СтрокаРасходов.НачисленоСпецРежим    = ?(СуммыНачисленоЕНВД = Неопределено, 0, СуммыНачисленоЕНВД[Счетчик]);

				КонецЦикла;
				
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		
		Для каждого СтрокаРасхода Из ТаблицаРасходов Цикл
			Если СтрокаРасхода.СуммаРасходаСпецРежим >0 И Не ЗначениеЗаполнено(СтрокаРасхода.РегистрацияВНалоговомОргане) Тогда
				Если ЗначениеЗаполнено(Реквизиты.РегистрацияЕНВДОрганизации) Тогда
					СтрокаРасхода.РегистрацияВНалоговомОргане = Реквизиты.РегистрацияЕНВДОрганизации;
				Иначе
					СтрокаРасхода.РегистрацияВНалоговомОргане = Реквизиты.РегистрацияОрганизации;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
