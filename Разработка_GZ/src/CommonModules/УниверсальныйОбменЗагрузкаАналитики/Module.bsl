
#Область ОписаниеАналитики

Функция НовыйОписаниеАналитикиОбъекта() Экспорт
	
	ОписаниеАналитикиОбъекта = Новый ТаблицаЗначений;
	ОписаниеАналитикиОбъекта.Колонки.Добавить("Идентификатор", ОбщегоНазначения.ОписаниеТипаСтрока(36));
	ОписаниеАналитикиОбъекта.Колонки.Добавить("Таблица", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	ОписаниеАналитикиОбъекта.Колонки.Добавить("ИмяСчета", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	ОписаниеАналитикиОбъекта.Колонки.Добавить("ПрефиксСубконто", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	ОписаниеАналитикиОбъекта.Колонки.Добавить("ИмяПодразделения", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	Возврат ОписаниеАналитикиОбъекта;
	
КонецФункции

Процедура ДобавитьАналитикуВОписание(ОписаниеАналитики, Таблица, ИмяСчета, ПрефиксСубконто, ИмяПодразделения) Экспорт
	
	СтрокаАналитики = ОписаниеАналитики.Добавить();
	СтрокаАналитики.Идентификатор = Строка(Новый УникальныйИдентификатор);
	СтрокаАналитики.Таблица = Таблица;
	СтрокаАналитики.ИмяСчета = ИмяСчета;
	СтрокаАналитики.ПрефиксСубконто = ПрефиксСубконто;
	СтрокаАналитики.ИмяПодразделения = ИмяПодразделения;
	
КонецПроцедуры

Функция ИмяХранилищаВидаСубконто(ПрефиксСубконто) Экспорт
	
	Возврат ПрефиксСубконто + "_ВидСубконто";
	
КонецФункции

Функция ИмяХранилищаПодразделения(ИмяПоляПодразделения) Экспорт
	
	Возврат ИмяПоляПодразделения + "_Ссылка";
	
КонецФункции

#КонецОбласти

#Область ЗначенияАналитикиОбъекта

Процедура ЗаполнитьНезаполненнуюАналитику(Объект, ОписаниеАналитики) Экспорт
	
	// Для того, что бы заполнить незаполненную аналитику, при этом сохранить те данные,
	// которые переданы в сообщении обмена, выполняем следующее:
	//  - Сохраняем заполненные значения аналитики (при этом используем и данные объекта,
	//    и данные, полученные из сообщения обмена, которые храняться в доп.свойствах).
	//  - Очищаем всю аналитику для того, чтобы заполнение счетов учета штатным механизмом сработало
	//    корректно. Сейчас, например, если заполнен счет, но не заполнена аналитика, то заполнение не сработает,
	//    (или наоборот, заполнена аналитика, но не заполнен счет учета), то заполнение не сработает корректно.
	//    Поэтому очищаем аналитику, чтобы заполнение было выполнено корректно.
	//   - Вызываем заполнение счетов учета
	//   - Дозаполняем объект, объединяя значения, которые получены из сообщения обмена и заполненные автоматически данные.
	//     При этом приоритет имеется у данных, полученных из сообщения обмена.
	//     Например, если из сообщения обмена приехала статья затрат "Аренда", но счет не заполнен,
	//     а при автоматическом заполнении указан счет 26 и статья затрат "Прочие расходы", то в
	//     аналитике документа будут указаны счет 26 и статья затрат "Аренда".
	
	КэшАналитики = ЗначенияАналитикиОбъекта(Объект, ОписаниеАналитики);
	
	ОчиститьАналитикуОбъекта(Объект, ОписаниеАналитики);
	
	ЗаполнитьСчетаУчета(Объект);
	
	ЗаполнитьЗначенияАналитикиОбъекта(Объект, ОписаниеАналитики, КэшАналитики);
	
КонецПроцедуры

Процедура ЗаполнитьСчетаУчета(Объект) Экспорт
	
	// Заполняем только незаполненные счета учета
	Отбор = Новый Структура;
	Отбор.Вставить("НеЗаполненныеРеквизиты", Истина);
	
	СчетаУчетаВДокументах.Заполнить(Объект, Отбор);
	
КонецПроцедуры

Функция ЗначенияАналитикиОбъекта(Объект, ОписаниеАналитики)
	
	ЗначенияАналитики = НовыйЗначенияАналитикиОбъекта();
	
	Для Каждого Описание Из ОписаниеАналитики Цикл
		
		ДобавитьЗначенияАналитикиПоОписанию(Объект, Описание, ЗначенияАналитики);
		
	КонецЦикла;
	
	Возврат ЗначенияАналитики;
	
КонецФункции

Функция НовыйЗначенияАналитикиОбъекта()
	
	ЗначенияАналитикиОбъекта = Новый ТаблицаЗначений;
	ЗначенияАналитикиОбъекта.Колонки.Добавить("ИдентификаторОписания", ОбщегоНазначения.ОписаниеТипаСтрока(36));
	ЗначенияАналитикиОбъекта.Колонки.Добавить("Таблица", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	ЗначенияАналитикиОбъекта.Колонки.Добавить("НомерСтроки", ОбщегоНазначения.ОписаниеТипаЧисло(10));
	ЗначенияАналитикиОбъекта.Колонки.Добавить("Счет", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ЗначенияАналитикиОбъекта.Колонки.Добавить("ВидыСубконто", Новый ОписаниеТипов("Соответствие"));
	ЗначенияАналитикиОбъекта.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	ЗначенияАналитикиОбъекта.Индексы.Добавить("ИдентификаторОписания,Таблица,НомерСтроки");
	Возврат ЗначенияАналитикиОбъекта;
	
КонецФункции

Процедура ДобавитьЗначенияАналитикиПоОписанию(Объект, Описание, ЗначенияАналитики)
	
	Если Описание.Таблица = "" Тогда
		ДобавитьЗначенияАналитики(Объект, Объект, Описание, ЗначенияАналитики, 0);
	Иначе
		Для НомерСтроки = 0 По Объект[Описание.Таблица].Количество() - 1 Цикл
			Строка = Объект[Описание.Таблица][НомерСтроки];
			ДобавитьЗначенияАналитики(Объект, Строка, Описание, ЗначенияАналитики, НомерСтроки);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьЗначенияАналитики(Объект, Строка, Описание, ЗначенияАналитики, НомерСтроки)
	
	Значения = ЗначенияАналитики.Добавить();
	Значения.ИдентификаторОписания = Описание.Идентификатор;
	Значения.Таблица = Описание.Таблица;
	Значения.НомерСтроки = НомерСтроки;
	Если ЗначениеЗаполнено(Описание.ИмяСчета) Тогда
		Значения.Счет = Строка[Описание.ИмяСчета];
	КонецЕсли;
	Если ЗначениеЗаполнено(Описание.ИмяПодразделения) Тогда
		Значения.Подразделение = ЗначениеПодразделения(Объект, Строка, Описание, НомерСтроки);
	КонецЕсли;
	Если ЗначениеЗаполнено(Описание.ПрефиксСубконто) Тогда
		Значения.ВидыСубконто = ЗначенияВидовСубконто(Объект, Строка, Описание, НомерСтроки);
	КонецЕсли;
	
КонецПроцедуры

Функция ЗначенияВидовСубконто(Объект, Строка, Описание, НомерСтроки)
	
	ЗначенияВидовСубконто = Новый Соответствие;
	
	// Значения субконто могут храниться в 2 местах:
	//  - в доп.свойствах с именем, которое определяется функцией ИмяХранилищаВидаСубконто(). Эти значения
	//    добавляются при загрузке объекта.
	//  - в данных объекта, если объект загружается повторно - это значения из ДанныеИБ.
	// Значения в данных объекта менее приоритетные, т.к. это уже существующие значения. Если в сообщении
	// обмена передана новая аналитика, то она имеет больший приоритет. Поэтому аналитика загружается
	// сначала из Строки, а потом ищется в доп.свойствах.
	
	ЗаполнитьЗначенияВидовСубконтоИзОбъекта(ЗначенияВидовСубконто, Строка, Описание);
	
	ЗаполнитьЗначенияВидовСубконтоИзДополнительныхДанных(ЗначенияВидовСубконто, Объект, Описание, НомерСтроки);
	
	Возврат ЗначенияВидовСубконто;
	
КонецФункции

Процедура ЗаполнитьЗначенияВидовСубконтоИзОбъекта(ЗначенияВидовСубконто, Строка, Описание)
	
	Если Не ЗначениеЗаполнено(Описание.ИмяСчета) Тогда
		Возврат;
	КонецЕсли;
	
	Счет = Строка[Описание.ИмяСчета];
	Если Не ЗначениеЗаполнено(Счет) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Счет);
	Для ИндексСубконто = 1 По ДанныеСчета.КоличествоСубконто Цикл
		
		ВидСубконто = Неопределено;
		ДанныеСчета.Свойство("ВидСубконто" + ИндексСубконто, ВидСубконто);
		Если Не ЗначениеЗаполнено(ВидСубконто) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначениеСубконто = Строка[Описание.ПрефиксСубконто + ИндексСубконто];
		Если Не ЗначениеЗаполнено(ЗначениеСубконто) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначенияВидовСубконто.Вставить(ВидСубконто, ЗначениеСубконто);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьЗначенияВидовСубконтоИзДополнительныхДанных(ЗначенияВидовСубконто, Объект, Описание, НомерСтроки)
	
	// В дополнительные данные при загрузке добавляется соответствие видов субконто и значений,
	// которые загружены из сообщения обмена. Соответствие хранится в поле ИмяХранилищаВидаСубконто().
	
	ХранилищеЗначенийСубконто = Неопределено;
	ИмяХранилищаВидаСубконто = ИмяХранилищаВидаСубконто(Описание.ПрефиксСубконто);
	Если Описание.Таблица = "" Тогда
		Объект.ДополнительныеСвойства.Свойство(ИмяХранилищаВидаСубконто, ХранилищеЗначенийСубконто);
	ИначеЕсли Объект.ДополнительныеСвойства.Свойство(Описание.Таблица) Тогда
		МассивСтрок = Объект.ДополнительныеСвойства[Описание.Таблица];
		Если НомерСтроки < МассивСтрок.Количество() Тогда
			МассивСтрок[НомерСтроки].Свойство(ИмяХранилищаВидаСубконто, ХранилищеЗначенийСубконто);
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ХранилищеЗначенийСубконто) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого КлючЗначение Из ХранилищеЗначенийСубконто Цикл
		ЗначенияВидовСубконто.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);
	КонецЦикла;
	
КонецПроцедуры

Функция ЗначениеПодразделения(Объект, Строка, Описание, НомерСтроки)
	
	ПодразделениеИзДополнительныхДанных = ЗначениеПодразделенияИзДополнительныхДанных(Объект, Строка, Описание, НомерСтроки);
	
	Если ЗначениеЗаполнено(ПодразделениеИзДополнительныхДанных) Тогда
		Возврат ПодразделениеИзДополнительныхДанных;
	Иначе
		Возврат Строка[Описание.ИмяПодразделения];
	КонецЕсли;
	
КонецФункции

Функция ЗначениеПодразделенияИзДополнительныхДанных(Объект, Строка, Описание, НомерСтроки)
	
	ЗначениеПодразделения = Неопределено;
	ИмяХранилищаПодразделения = ИмяХранилищаПодразделения(Описание.ИмяПодразделения);
	Если Описание.Таблица = "" Тогда
		Объект.ДополнительныеСвойства.Свойство(ИмяХранилищаПодразделения, ЗначениеПодразделения);
	ИначеЕсли Объект.ДополнительныеСвойства.Свойство(Описание.Таблица) Тогда
		МассивСтрок = Объект.ДополнительныеСвойства[Описание.Таблица];
		Если НомерСтроки < МассивСтрок.Количество() Тогда
			МассивСтрок[НомерСтроки].Свойство(ИмяХранилищаПодразделения, ЗначениеПодразделения);
		КонецЕсли;
	КонецЕсли;
	
	Возврат ЗначениеПодразделения;
	
КонецФункции

#КонецОбласти

#Область ОчисткаАналитикиОбъекта

Процедура ОчиститьАналитикуОбъекта(Объект, ОписаниеАналитики)
	
	Для Каждого Описание Из ОписаниеАналитики Цикл
		
		ОчиститьЗначенияАналитикиПоОписанию(Объект, Описание);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОчиститьЗначенияАналитикиПоОписанию(Объект, Описание)
	
	Если Описание.Таблица = "" Тогда
		ОчиститьЗначенияАналитики(Объект, Описание);
	Иначе
		Для НомерСтроки = 0 По Объект[Описание.Таблица].Количество() - 1 Цикл
			Строка = Объект[Описание.Таблица][НомерСтроки];
			ОчиститьЗначенияАналитики(Строка, Описание);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОчиститьЗначенияАналитики(Строка, Описание)
	
	Если ЗначениеЗаполнено(Описание.ИмяСчета) Тогда
		Строка[Описание.ИмяСчета] = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	КонецЕсли;
	Если ЗначениеЗаполнено(Описание.ИмяПодразделения) Тогда
		Строка[Описание.ИмяПодразделения] = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	КонецЕсли;
	Если ЗначениеЗаполнено(Описание.ПрефиксСубконто) Тогда
		Для НомерСубконто = 1 По БухгалтерскийУчет.МаксимальноеКоличествоСубконто() Цикл
			Строка[Описание.ПрефиксСубконто + НомерСубконто] = Неопределено;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеАналитикиОбъекта

Процедура ЗаполнитьЗначенияАналитикиОбъекта(Объект, ОписаниеАналитики, ЗначенияАналитики) Экспорт
	
	Для Каждого Описание Из ОписаниеАналитики Цикл
		
		ЗаполнитьЗначенияАналитикиПоОписанию(Объект, Описание, ЗначенияАналитики);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьЗначенияАналитикиПоОписанию(Объект, Описание, ЗначенияАналитики)
	
	Если Описание.Таблица = "" Тогда
		ЗаполнитьЗначенияАналитики(Объект, Описание, ЗначенияАналитики, 0);
	Иначе
		Для НомерСтроки = 0 По Объект[Описание.Таблица].Количество() - 1 Цикл
			Строка = Объект[Описание.Таблица][НомерСтроки];
			ЗаполнитьЗначенияАналитики(Строка, Описание, ЗначенияАналитики, НомерСтроки);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьЗначенияАналитики(Строка, Описание, ЗначенияАналитики, НомерСтроки)
	
	ЗаполняемоеЗначение = ЗначениеАналитики(Описание, ЗначенияАналитики, НомерСтроки);
	Если ЗаполняемоеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Сохраним текущие значения видов субконто строки.
	// Если в ЗаполняемоеЗначение не будет значений каких-то видов, то используем старые, что бы ничего не потерять.
	СтарыеЗначенияВидовСубконто = Новый Соответствие;
	ЗаполнитьЗначенияВидовСубконтоИзОбъекта(СтарыеЗначенияВидовСубконто, Строка, Описание);
	
	Если ЗначениеЗаполнено(ЗаполняемоеЗначение.Счет) Тогда
		Строка[Описание.ИмяСчета] = ЗаполняемоеЗначение.Счет;
	КонецЕсли;
	
	Счет = Строка[Описание.ИмяСчета];
	Если Не ЗначениеЗаполнено(Счет) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Счет);
	Если ДанныеСчета.УчетПоПодразделениям
		И ЗначениеЗаполнено(ЗаполняемоеЗначение.Подразделение) Тогда
		Строка[Описание.ИмяПодразделения] = ЗаполняемоеЗначение.Подразделение;
	КонецЕсли;
	
	Для ИндексСубконто = 1 По ДанныеСчета.КоличествоСубконто Цикл
		
		ВидСубконто = Неопределено;
		ДанныеСчета.Свойство("ВидСубконто" + ИндексСубконто, ВидСубконто);
		Если Не ЗначениеЗаполнено(ВидСубконто) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначениеСубконто = ЗаполняемоеЗначение.ВидыСубконто.Получить(ВидСубконто);
		Если Не ЗначениеЗаполнено(ЗначениеСубконто) Тогда
			ЗначениеСубконто = СтарыеЗначенияВидовСубконто.Получить(ВидСубконто);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЗначениеСубконто) Тогда
			Продолжить;
		КонецЕсли;
		Строка[Описание.ПрефиксСубконто + ИндексСубконто] = ЗначениеСубконто;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ЗначениеАналитики(Описание, ЗначенияАналитики, НомерСтроки)
	
	ОтборСтрок = Новый Структура;
	ОтборСтрок.Вставить("ИдентификаторОписания", Описание.Идентификатор);
	ОтборСтрок.Вставить("Таблица", Описание.Таблица);
	ОтборСтрок.Вставить("НомерСтроки", НомерСтроки);
	СтрокиЗначения = ЗначенияАналитики.НайтиСтроки(ОтборСтрок);
	Если СтрокиЗначения.Количество() > 0 Тогда
		Возврат СтрокиЗначения[0];
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти
