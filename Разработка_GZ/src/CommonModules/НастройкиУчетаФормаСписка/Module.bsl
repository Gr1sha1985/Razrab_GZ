
////////////////////////////////////////////////////////////////////////////////
// Формы списков настроек учета
// Общие серверные методы для всех форм списков регистров настроек учета.
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура - реализация метода ПриСозданииНаСервере формы списка регистра сведений
//
// Параметры:
//  Форма                - Управляемая форма (форма списка регистра)
//  Отказ                - Булево - признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	Параметры	= Форма.Параметры;
	Элементы	= Форма.Элементы;
	Список		= Форма.Список;
	
	Если Параметры.Отбор.Свойство("Организация") Тогда
		Форма.ОтборОрганизация = Параметры.Отбор.Организация;
		ЭлементОтбораОрганизация = ОтборыСписковКлиентСервер.ЭлементОтбораСпискаПоИмени(Список, "Организация");
		Если ЭлементОтбораОрганизация <> Неопределено Тогда
			ЭлементОтбораОрганизация.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		КонецЕсли;
		Элементы.ОтборОрганизация.Видимость = Истина;
	Иначе
		ОбщегоНазначенияБПВызовСервера.УстановитьОтборПоОсновнойОрганизации(Форма);
		Элементы.ОтборОрганизация.Видимость = Ложь;
	КонецЕсли;
	
	УстановитьУсловноеОформление(Форма);
	
КонецПроцедуры

// Процедура - реализация метода ПередЗагрузкойПользовательскихНастроекНаСервере
// динамического списка формы списка регистра сведений
//
// Параметры:
//  Форма     - Управляемая форма (форма списка регистра)
//  Элемент   - ТаблицаФормы - таблица, для которой выполняется сохранение настроек. 
//  Настройки - ПользовательскиеНастройкиКомпоновкиДанных - загружаемые настройки.
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Форма, Элемент, Настройки) Экспорт
	
	ОбщегоНазначенияБП.ВосстановитьОтборСписка(Форма.Список, Настройки, "Организация");

	ПолеОрганизацияНаименование = Новый ПолеКомпоновкиДанных("Организация.Наименование");
	ПолеОрганизация = Новый ПолеКомпоновкиДанных("Организация");
	
	Для каждого ЭлементНастроек Из Настройки.Элементы Цикл
		
		Если ТипЗнч(ЭлементНастроек) = Тип("ПорядокКомпоновкиДанных") 
		И ЭлементНастроек.ИдентификаторПользовательскойНастройки = Форма.Список.КомпоновщикНастроек.Настройки.Порядок.ИдентификаторПользовательскойНастройки Тогда
			
			Для каждого ЭлементПорядка Из ЭлементНастроек.Элементы Цикл
				
				Если ЭлементПорядка.Поле = ПолеОрганизацияНаименование Тогда
					ЭлементПорядка.Поле = ПолеОрганизация;
				КонецЕсли;
				
				Прервать;
				
			КонецЦикла;
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьУсловноеОформление(Форма)

	Форма.УсловноеОформление.Элементы.Очистить();

	ЭлементУО = Форма.УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "Организация");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ОтборОрганизация", ВидСравненияКомпоновкиДанных.Заполнено);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

КонецПроцедуры

#КонецОбласти

