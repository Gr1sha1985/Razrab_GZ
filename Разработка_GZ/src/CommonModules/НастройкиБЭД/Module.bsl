
#Область СлужебныйПрограммныйИнтерфейс

// Обработчик подписки на событие ПриЗаписиКонстанты.
//
Процедура ПриЗаписиКонстанты(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МетаданныеКонстанты = Источник.ЭтотОбъект.Метаданные(); //ОбъектМетаданных - 
	ИмяКонстанты		= МетаданныеКонстанты.Имя;
	ЗначениеКонстанты 	= Источник.Значение;
	
	СинхронизироватьЗначенияПодчиненныхКонстант(ИмяКонстанты, ЗначениеКонстанты, Отказ);
	
КонецПроцедуры

Функция НовыйТаблицаЗависимостейКонстант() Экспорт
	
	ТаблицаЗависимостейКонстант = Новый ТаблицаЗначений;
	
	ТаблицаЗависимостейКонстант.Колонки.Добавить("ИмяРодительскойКонстанты", Новый ОписаниеТипов("Строка"));
	ТаблицаЗависимостейКонстант.Колонки.Добавить("ИмяПодчиненнойКонстанты",  Новый ОписаниеТипов("Строка"));
	ТаблицаЗависимостейКонстант.Колонки.Добавить("ЗначениеРодительскойКонстанты");
	ТаблицаЗависимостейКонстант.Колонки.Добавить("ЗначениеПодчиненнойКонстанты");
	
	ТаблицаЗависимостейКонстант.Индексы.Добавить("ИмяРодительскойКонстанты");
	ТаблицаЗависимостейКонстант.Индексы.Добавить("ИмяПодчиненнойКонстанты");
	
	Возврат ТаблицаЗависимостейКонстант;
	
КонецФункции

Процедура ДобавитьСтрокуТаблицыЗависимостиКонстант(ТаблицаКонстант, ИмяРодительскойКонстанты, ЗначениеРодительскойКонстанты, ИмяПодчиненнойКонстанты, ЗначениеПодчиненнойКонстанты) Экспорт 
	
	НоваяСтрока = ТаблицаКонстант.Добавить();
	НоваяСтрока.ИмяРодительскойКонстанты 	  = ИмяРодительскойКонстанты;
	НоваяСтрока.ЗначениеРодительскойКонстанты = ЗначениеРодительскойКонстанты;
	НоваяСтрока.ИмяПодчиненнойКонстанты 	  = ИмяПодчиненнойКонстанты;
	НоваяСтрока.ЗначениеПодчиненнойКонстанты  = ЗначениеПодчиненнойКонстанты;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СинхронизироватьЗначенияПодчиненныхКонстант(ИмяКонстанты, ЗначениеКонстанты, Отказ)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ТипКонстанты	= ТипЗнч(ЗначениеКонстанты);
	ПримитивныеТипы = Новый ОписаниеТипов("Число,Строка,Дата,Булево,Неопределено");
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Синхронизировать "простые" зависимые константы
	Если ПримитивныеТипы.СодержитТип(ТипКонстанты)
	 ИЛИ ОбщегоНазначения.ЗначениеСсылочногоТипа(ЗначениеКонстанты) Тогда
		
		ПодчиненныеКонстанты = НастройкиБЭДПовтИсп.ПолучитьДопустимыеЗначенияПодчиненныхКонстант(ИмяКонстанты, ЗначениеКонстанты);
		
		Если ЗначениеЗаполнено(ПодчиненныеКонстанты) Тогда
			
			Для Каждого КлючИЗначение Из ПодчиненныеКонстанты Цикл
				УстановитьЗначениеКонстанты(Константы[КлючИЗначение.Ключ], КлючИЗначение.Значение);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьЗначениеКонстанты(МенеджерКонстанты, ЗначениеКонстанты)
	
	Если МенеджерКонстанты.Получить() <> ЗначениеКонстанты Тогда
		МенеджерКонстанты.Установить(ЗначениеКонстанты);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
