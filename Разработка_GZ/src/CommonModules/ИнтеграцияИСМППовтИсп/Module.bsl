#Область ПрограммныйИнтерфейс

// Проверяет доступность объекта метаданных. Проверки выполняются по:
// - доступности вида продукции;
// - функциональным опциям;
// 
// Параметры:
// 	ПолноеИмяМетаданных - Строка - полное имя проверяемого объекта метаданных.
// Возвращаемое значение:
// 	Булево - Признак доступности объекта.
Функция ОбъектМетаданныхДоступен(ПолноеИмяМетаданных) Экспорт
	
	ОбъектМетаданных         = Метаданные.НайтиПоПолномуИмени(ПолноеИмяМетаданных);
	ВозвращаемоеЗначение     = Ложь;
	НедоступныеВидыПродукции = Новый Массив();
	
	Если ОбъектМетаданных = Метаданные.Документы.ПеремаркировкаТоваровИСМП Тогда
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.Табак);
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.АльтернативныйТабак);
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС);
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.МолочнаяПродукцияБезВЕТИС);
	ИначеЕсли ОбъектМетаданных = Метаданные.Документы.ОтгрузкаТоваровИСМП Тогда
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.Табак);
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.АльтернативныйТабак);
	ИначеЕсли ОбъектМетаданных = Метаданные.Документы.ПриемкаТоваровИСМП Тогда
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.Табак);
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.АльтернативныйТабак);
	ИначеЕсли ОбъектМетаданных = Метаданные.Документы.ВозвратВОборотИСМП Тогда
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.Табак);
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.АльтернативныйТабак);
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС);
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.МолочнаяПродукцияБезВЕТИС);
	КонецЕсли;
	
	Если НедоступныеВидыПродукции.Количество() Тогда
		
		ВидыПродукции = Новый Массив();
		
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВидыПродукции, ИнтеграцияИСКлиентСервер.ВидыПродукцииИСМП(Истина));
		
		ПроверяемыеВидыПродукции = ОбщегоНазначенияКлиентСервер.РазностьМассивов(ВидыПродукции, НедоступныеВидыПродукции);
		
		Для Каждого ВидПродукции Из ПроверяемыеВидыПродукции Цикл
			
			Если ИнтеграцияИСМПКлиентСерверПовтИсп.ВестиУчетМаркируемойПродукции(ВидПродукции) Тогда
				ВозвращаемоеЗначение = Истина;
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
	
	Иначе
		ВозвращаемоеЗначение = Истина;
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ТаблицаПолейДанныйДляРасшифровкиОшибок() Экспорт
	
	ТаблицаДанных = ИнтеграцияИС.ПустаяТаблицаПредставленийПолей();
	
	ПространствоИмен = Метаданные.ПакетыXDTO.ТипыМОТП.ПространствоИмен;
	
	НоваяСтрока = ТаблицаДанных.Добавить();
	НоваяСтрока.ПространствоИмен = ПространствоИмен;
	НоваяСтрока.ЛокальноеИмя     = "Индекс";
	НоваяСтрока.Представление    = НСтр("ru = 'Индекс'");
	НоваяСтрока.Обязательное     = Истина;
	
	НоваяСтрока = ТаблицаДанных.Добавить();
	НоваяСтрока.ПространствоИмен = ПространствоИмен;
	НоваяСтрока.ЛокальноеИмя     = "КодСтр";
	НоваяСтрока.Представление    = НСтр("ru = 'Код страны'");
	НоваяСтрока.Обязательное     = Истина;
	
	НоваяСтрока = ТаблицаДанных.Добавить();
	НоваяСтрока.ПространствоИмен = ПространствоИмен;
	НоваяСтрока.ЛокальноеИмя     = "АдрТекст";
	НоваяСтрока.Представление    = НСтр("ru = 'Адрес'");
	НоваяСтрока.Обязательное     = Истина;
	
	НоваяСтрока = ТаблицаДанных.Добавить();
	НоваяСтрока.ПространствоИмен = ПространствоИмен;
	НоваяСтрока.ЛокальноеИмя     = "ПричинаВыбытия";
	НоваяСтрока.Представление    = НСтр("ru = 'Причина выбытия'");
	НоваяСтрока.Обязательное     = Истина;
	
	НоваяСтрока = ТаблицаДанных.Добавить();
	НоваяСтрока.ПространствоИмен = ПространствоИмен;
	НоваяСтрока.ЛокальноеИмя     = "Дата";
	НоваяСтрока.Представление    = НСтр("ru = 'Дата'");
	НоваяСтрока.Обязательное     = Истина;
	
	НоваяСтрока = ТаблицаДанных.Добавить();
	НоваяСтрока.ПространствоИмен = ПространствоИмен;
	НоваяСтрока.ЛокальноеИмя     = "Время";
	НоваяСтрока.Представление    = НСтр("ru = 'Время'");
	НоваяСтрока.Обязательное     = Истина;
	
	НоваяСтрока = ТаблицаДанных.Добавить();
	НоваяСтрока.ПространствоИмен = ПространствоИмен;
	НоваяСтрока.ЛокальноеИмя     = "Наименование";
	НоваяСтрока.Представление    = НСтр("ru = 'Наименование первичного документа'");
	НоваяСтрока.Обязательное     = Истина;
	
	НоваяСтрока = ТаблицаДанных.Добавить();
	НоваяСтрока.ПространствоИмен = ПространствоИмен;
	НоваяСтрока.ЛокальноеИмя     = "Номер";
	НоваяСтрока.Представление    = НСтр("ru = 'Номер'");
	НоваяСтрока.Обязательное     = Истина;
	
	НоваяСтрока = ТаблицаДанных.Добавить();
	НоваяСтрока.ПространствоИмен = ПространствоИмен;
	НоваяСтрока.ЛокальноеИмя     = "КодРегион";
	НоваяСтрока.Представление    = НСтр("ru = 'Код региона'");
	НоваяСтрока.Обязательное     = Истина;
	
	НоваяСтрока = ТаблицаДанных.Добавить();
	НоваяСтрока.ПространствоИмен = ПространствоИмен;
	НоваяСтрока.ЛокальноеИмя     = "ИННФЛТип";
	НоваяСтрока.Представление    = НСтр("ru = 'ИНН физического лица'");
	НоваяСтрока.Обязательное     = Истина;
	
	НоваяСтрока = ТаблицаДанных.Добавить();
	НоваяСтрока.ПространствоИмен = ПространствоИмен;
	НоваяСтрока.ЛокальноеИмя     = "ИННЮЛТип";
	НоваяСтрока.Представление    = НСтр("ru = 'ИНН юридического лица'");
	НоваяСтрока.Обязательное     = Истина;
	
	Возврат ТаблицаДанных;
	
КонецФункции

Функция ТекстЗапросаПоискаДокументаПоИдентификаторуЗаявки() Экспорт
	
	ТекстыЗапроса = Новый Массив();
	ШаблонЗапроса = "
	|ВЫБРАТЬ
	|	ДокументИСМП.Ссылка                КАК Ссылка,
	|	Представление(ДокументИСМП.Ссылка) КАК Представление,
	|	ДокументИСМП.Проведен              КАК Проведен,
	|	ДокументИСМП.ИдентификаторЗаявки   КАК ИдентификаторЗаявки
	|ИЗ
	|	Документ.МаркировкаТоваровИСМП КАК ДокументИСМП
	|ГДЕ
	|	ДокументИСМП.ИдентификаторЗаявки В (&ИдентификаторыДокументов)";
	
	Для Каждого ЭлементПодсистемы Из Метаданные.Подсистемы.ГосИС.Подсистемы.ИСМП.Состав Цикл
		
		Если ОбщегоНазначения.ЭтоДокумент(ЭлементПодсистемы) Тогда
			ТекстыЗапроса.Добавить(
				СтрЗаменить(
					ШаблонЗапроса,
					"Документ.МаркировкаТоваровИСМП",
					СтрШаблон("Документ.%1", ЭлементПодсистемы.Имя)));
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстЗапроса =  СтрСоединить(
		ТекстыЗапроса,
		"
		|ОБЪЕДИНИТЬ ВСЕ
		|");
	
	ТекстЗапроса = СтрШаблон(
		"%1
		|УПОРЯДОЧИТЬ ПО
		|	Проведен",
		ТекстЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти