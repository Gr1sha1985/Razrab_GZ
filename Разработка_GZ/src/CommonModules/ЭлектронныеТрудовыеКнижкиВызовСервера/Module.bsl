#Область СлужебныйПрограммныйИнтерфейс

Процедура НаименованиеДокументаПриИзмененииНаСервере(Организация, ВидДокумента, НаименованиеДокумента) Экспорт
	
	ЭлектронныеТрудовыеКнижки.НаименованиеДокументаПриИзмененииНаСервере(Организация, ВидДокумента, НаименованиеДокумента);
	
КонецПроцедуры

Функция НаименованиеДокумента(Организация, ВидМероприятия = Неопределено) Экспорт
	
	Если ВидМероприятия = Перечисления.ВидыМероприятийТрудовойДеятельности.Прием Тогда
		Возврат ЭлектронныеТрудовыеКнижки.НаименованиеДокументаПоВидуДокументаСобытия(Организация, "ПриемНаРаботу");
	ИначеЕсли ВидМероприятия = Перечисления.ВидыМероприятийТрудовойДеятельности.Перевод Тогда
		Возврат ЭлектронныеТрудовыеКнижки.НаименованиеДокументаПоВидуДокументаСобытия(Организация, "КадровыйПеревод");
	ИначеЕсли ВидМероприятия = Перечисления.ВидыМероприятийТрудовойДеятельности.Увольнение Тогда
		Возврат ЭлектронныеТрудовыеКнижки.НаименованиеДокументаПоВидуДокументаСобытия(Организация, "Увольнение");
	КонецЕсли;
	
	Возврат ЭлектронныеТрудовыеКнижки.НаименованиеДокументаОснования();
	
КонецФункции

Функция НеЗаполнятьПодразделенияВМероприятияхТрудовойДеятельности(Организация) Экспорт
	
	Возврат ЭлектронныеТрудовыеКнижкиПовтИсп.НеЗаполнятьПодразделенияВМероприятияхТрудовойДеятельности(Организация);
	
КонецФункции

Функция НомерНаПечать(Знач Номер, Знач НомерПриказа = Неопределено) Экспорт
	
	Возврат ЗарплатаКадрыОтчеты.НомерНаПечать(Номер, НомерПриказа);
	
КонецФункции

Функция ИспользоватьДляМероприятийПриемПереводУвольнениеДваДокументаОснования() Экспорт
	
	Возврат ЭлектронныеТрудовыеКнижкиПовтИсп.НастройкиЭлектронныхТрудовыхКнижек().ИспользоватьДляМероприятийПриемПереводУвольнениеДваДокументаОснования;
	
КонецФункции

Функция ДанныеФайлаСТДР(СсылкаНаДокумент) Экспорт
	
	Возврат Документы.СведенияОТрудовойДеятельностиРаботникаСТД_Р.ДанныеФайлаСТДР(СсылкаНаДокумент);
	
КонецФункции

Процедура ОбновитьФайлСТДР(СсылкаНаДокумент, АдресВХранилище, ИмяФайла, ПрисоединенныйФайл) Экспорт
	
	Если ЗначениеЗаполнено(ПрисоединенныйФайл) Тогда
		
		ИнформацияОФайле = Новый Структура;
		ИнформацияОФайле.Вставить("ДатаМодификацииУниверсальная", ТекущаяУниверсальнаяДата());
		ИнформацияОФайле.Вставить("АдресФайлаВоВременномХранилище", АдресВХранилище);
		ИнформацияОФайле.Вставить("АдресВременногоХранилищаТекста", "");
		ИнформацияОФайле.Вставить("Расширение", "XML");
		ИнформацияОФайле.Вставить("ИмяБезРасширения", ИмяФайла);
		
		РаботаСФайлами.ОбновитьФайл(ПрисоединенныйФайл, ИнформацияОФайле);
		
	Иначе
		
		ПараметрыФайла = РаботаСФайлами.ПараметрыДобавленияФайла();
		
		ПараметрыФайла.ВладелецФайлов = СсылкаНаДокумент;
		ПараметрыФайла.ИмяБезРасширения = ИмяФайла;
		ПараметрыФайла.РасширениеБезТочки = "XML";
		ПараметрыФайла.ВремяИзмененияУниверсальное = ТекущаяУниверсальнаяДата();
		
		ПрисоединенныйФайл = РаботаСФайлами.ДобавитьФайл(ПараметрыФайла, АдресВХранилище, "");
		
	КонецЕсли;
	
КонецПроцедуры

Функция АдресДанныхФайлаСТДР(ДанныеФайла, УникальныйИдентификатор) Экспорт
	
	ПолноеИмяФайла = ПолучитьИмяВременногоФайла("XML");
	
	Поток = Новый ФайловыйПоток(ПолноеИмяФайла, РежимОткрытияФайла.СоздатьНовый);
	ЗаписьТекста = Новый ЗаписьТекста(Поток, "UTF-8", , , Ложь);
	ЗаписьТекста.Записать(ДанныеФайла);
	ЗаписьТекста.Закрыть();
	Поток.Закрыть();
	
	АдресВХранилище = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПолноеИмяФайла), УникальныйИдентификатор);
	УдалитьФайлы(ПолноеИмяФайла);
	
	Возврат АдресВХранилище;
	
КонецФункции

Функция ИмяОбъектаМетаданных(СсылкаНаОбъект) Экспорт
	
	Возврат СсылкаНаОбъект.Метаданные().Имя;
	
КонецФункции

#КонецОбласти
