#Область ПрограммныйИнтерфейс

Процедура ПоказатьДобавлениеФайлов(УникальныйИдентификатор, ОповещениеЗавершения = Неопределено, ФайлыДокумента = Неопределено) Экспорт
	
	ПараметрыОткрытия = Новый Структура;
	
	Если ФайлыДокумента <> Неопределено Тогда
		ПараметрыОткрытия.Вставить("ФайлыДокумента", ФайлыДокумента);
	КонецЕсли;
	
	ОткрытьФорму("Обработка.РаспознаваниеДокументов.Форма.ОтправитьФайлы", ПараметрыОткрытия, , , , , ОповещениеЗавершения);
	
КонецПроцедуры

Процедура ПоказатьАвторизацию(ОповещениеОЗавершении = Неопределено, ВладелецФормы = Неопределено) Экспорт
	
	Контекст = Новый Структура;
	Контекст.Вставить("ТипАвторизации", "ПоЛогинуПаролю");
	Контекст.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	Обработчик = Новый ОписаниеОповещения("ПослеАвторизации", РаспознаваниеДокументовСлужебныйКлиент, Контекст);
	ОткрытьФорму("Обработка.РаспознаваниеДокументов.Форма.АвторизациюПоЛогинуПаролю",
		,
		ВладелецФормы,
		,
		,
		,
		Обработчик);
	
КонецПроцедуры

Процедура ПоказатьАвторизациюИТС(ОповещениеОЗавершении = Неопределено, ВладелецФормы = Неопределено) Экспорт
	
	Контекст = Новый Структура;
	Контекст.Вставить("ТипАвторизации", "ПоТикетуИТС");
	Контекст.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	Если РаспознаваниеДокументовСлужебныйВызовСервера.ЗаполненыДанныеАутентификацииПользователяИнтернетПоддержки() Тогда
		РаспознаваниеДокументовСлужебныйКлиент.ПослеАвторизации("ДанныеЗаполнены", Контекст);
	Иначе
		Обработчик = Новый ОписаниеОповещения("ПослеАвторизации", РаспознаваниеДокументовСлужебныйКлиент, Контекст);
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(Обработчик, ВладелецФормы);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти