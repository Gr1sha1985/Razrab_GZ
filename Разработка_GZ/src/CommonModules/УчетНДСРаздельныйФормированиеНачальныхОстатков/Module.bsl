
#Область ПрограммныйИнтерфейс

// Формирование остатков по раздельном учету
Процедура СформироватьОстатки(Параметры, АдресХранилища) Экспорт
	
	ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации(),
		УровеньЖурналаРегистрации.Информация,,, НСтр("ru = 'Подготовка параметров для формирования остатков'"));

	
	СтруктураПараметров = ПодготовитьПараметрыДляВводаОстатков(Параметры.Организация, Параметры.Период);
	ДлительныеОперации.СообщитьПрогресс(, Символы.ПС + НСтр("ru='Выполняется формирование документов (1%)...'"));
	
	ТаблицаИспользованныхПартий =  ЗаполнитьПоСчетам0708(СтруктураПараметров);
	
	ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации(),
		УровеньЖурналаРегистрации.Информация,,, НСтр("ru = 'Сформированы остатки по счетам 07; 08'"));  
	
	ДлительныеОперации.СообщитьПрогресс(, Символы.ПС +НСтр("ru='Выполняется формирование документов (15%)...'"));
	
	ЗаполнитьПоТоварнымСчетам(СтруктураПараметров, ТаблицаИспользованныхПартий);
	
	ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации(),
		УровеньЖурналаРегистрации.Информация,,, НСтр("ru = 'Сформированы остатки по счетам 10; 41; 45'"));   
	
	ДлительныеОперации.СообщитьПрогресс(, Символы.ПС +НСтр("ru='Выполняется формирование документов (85%)...'"));
	
	Обработки.ПомощникРасчетаНДС.СформироватьДвиженияПоСчету19(СтруктураПараметров);
	
	ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации(),
		УровеньЖурналаРегистрации.Информация,,, НСтр("ru = 'Заполнено пустое субконто по счету 19'"));

	
	ДлительныеОперации.СообщитьПрогресс(, Символы.ПС +НСтр("ru='Выполняется формирование документов (95%)...'"));
	
	Для каждого ДокументОперации Из СтруктураПараметров.ДокументыОперации Цикл
	
		РегистрыСведений.ВыполнениеРегламентныхОперацийНДС.ЗафиксироватьФактВыполненияРегламентнойОперации(Параметры.Период,
			Параметры.Организация,
			ДокументОперации,
			Перечисления.РегламентныеОперации.ФормированиеНачальныхОстатковДляВеденияРаздельногоУчетаНДС,
			Истина);
	
	КонецЦикла;

		
	РезультатВыполнения = Новый Структура();
	РезультатВыполнения.Вставить("ОстаткиВведены", Истина);
	
	ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);

	
КонецПроцедуры

Процедура ОтменитьФормированиеНачальныхОстатковДляВеденияРаздельногоУчетаНДС(Организация, Период, СообщенияОбОшибках = Неопределено) Экспорт
	
	Обработки.ПомощникРасчетаНДС.ПометитьНаУдалениеСозданныеПоОперацииДокументы(
		Организация, 
		Период, 
		Перечисления.РегламентныеОперации.ФормированиеНачальныхОстатковДляВеденияРаздельногоУчетаНДС, 
		СообщенияОбОшибках);
	
	
КонецПроцедуры

// Получает дату включения раздельного учета НДС 
// Входящие параметры - Организация, для которой необходимо получить дату включения раздельного учета
// Возвращаемые параметры - структура с полями ВедетсяРаздельныйУчетНаСчете19 и Дата
// 		- ВедетсяРаздельныйУчетНаСчете19 поле типа Булево,
// 		возвращает Истина, если найдены настройки по включению раздельного учета НДС
// 		- Дата поле типа Дата, если есть настройки по раздельному учету,
// 		возвращает дату включения раздельного учета
Функция ДатаОстатков(Организация) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	НастройкиУчетаНДС.Период КАК Период
				|ИЗ
				|	РегистрСведений.НастройкиУчетаНДС КАК НастройкиУчетаНДС
				|ГДЕ
				|	НастройкиУчетаНДС.Организация = &Организация
				|	И НастройкиУчетаНДС.РаздельныйУчетНДСНаСчете19 = ИСТИНА
				|
				|УПОРЯДОЧИТЬ ПО
				|	Период
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ ПЕРВЫЕ 1
				|	ВыполнениеРегламентныхОперацийНДС.ПериодРегистрации КАК Период
				|ИЗ
				|	РегистрСведений.ВыполнениеРегламентныхОперацийНДС КАК ВыполнениеРегламентныхОперацийНДС
				|ГДЕ
				|	ВыполнениеРегламентныхОперацийНДС.Организация = &Организация
				|	И ВыполнениеРегламентныхОперацийНДС.РегламентнаяОперация = &РегламентнаяОперация";
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("РегламентнаяОперация", Перечисления.РегламентныеОперации.ФормированиеНачальныхОстатковДляВеденияРаздельногоУчетаНДС);
	
	Результат = Запрос.ВыполнитьПакет();
	РегОперации = Результат[1].Выбрать();
	ИзменениеНастроек = Результат[0].Выбрать();
	СтруктураРезультат = Новый Структура;
	Если РегОперации.Следующий() Тогда
		СтруктураРезультат.Вставить("Дата", РегОперации.Период);
		СтруктураРезультат.Вставить("ВедетсяРаздельныйУчетНаСчете19", Истина);
		
	Иначе
		Если ИзменениеНастроек.Следующий() Тогда 
			СтруктураРезультат.Вставить("Дата",  ИзменениеНастроек.Период);
			СтруктураРезультат.Вставить("ВедетсяРаздельныйУчетНаСчете19",  Истина);
		Иначе
			СтруктураРезультат.Вставить("Дата", ТекущаяДата());
			СтруктураРезультат.Вставить("ВедетсяРаздельныйУчетНаСчете19", Ложь);
		КонецЕсли;
	КонецЕсли;
	
	Возврат СтруктураРезультат;

	
КонецФункции

// Если сформированы остатки по раздельному учету НДС, необходимо контролировать их актуальность
// Если проводится закрытие месяца до даты ввода остатков, перенос границы последовательности
// Тогда необходимо у операций по формированию остатков сбросить признак актуальности операций
// Если последним документом в границе последовательности является сам документ Ввода остатков
// Тогда актуальность выплненных операций не будет сбрасываться
// Входящие параметры Организация и НачалоПроведения
// НачалоПроведения параметр типа Структура, в котором два поля Дата и Ссылка
// Поле Ссылка может быть не заполнено, например, если проводится перепроведение документов за период
// В остальных случаях поле Ссылка содержит документ границы последовательности
// Поле Дата - дата с которой совершается:
// Перенос граница последовательности/ перепроведение документов / закрытие месяца
Процедура СброситьАктуальностьОстатков(Организация, НачалоПроведения) Экспорт
	
	ВедетсяРУ = ДатаОстатков(Организация);
	
	Если ВедетсяРУ.ВедетсяРаздельныйУчетНаСчете19 Тогда
		Если ВедетсяРУ.Дата > НачалоПроведения.Дата Тогда 
			Если НачалоПроведения.Ссылка <> Неопределено Тогда
				ЭтоВводОстатковПоРУ = РегистрыСведений.ВыполнениеРегламентныхОперацийНДС.ЭтоРегламентнаяОперацияНДС(НачалоПроведения.Ссылка);
				Если НЕ ЭтоВводОстатковПоРУ Тогда
					РегистрыСведений.ВыполнениеРегламентныхОперацийНДС.СброситьФактВыполненияРегламентнойОперации(Организация, ВедетсяРУ.Дата,
						Перечисления.РегламентныеОперации.ФормированиеНачальныхОстатковДляВеденияРаздельногоУчетаНДС);
				КонецЕсли;
			Иначе
				РегистрыСведений.ВыполнениеРегламентныхОперацийНДС.СброситьФактВыполненияРегламентнойОперации(Организация, ВедетсяРУ.Дата,
					Перечисления.РегламентныеОперации.ФормированиеНачальныхОстатковДляВеденияРаздельногоУчетаНДС);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ИмяСобытияЖурналаРегистрации()

	Возврат НСтр("ru = 'Формирование остатков по раздельному учету НДС'", ОбщегоНазначения.КодОсновногоЯзыка());

КонецФункции

// Все запросы на получение данных
Функция ТекстЗапросаПоСчетамКапвложений()
	
		// 0. Свойства счета, будет различное формирование остатков и распределение по партиям
		// в зависимости от того, есть количественный учет на счете или нет
		// 1. Остатки по счетам по всей аналитике
		// 2. По номенклатуре из остатков получены документы Требование накладная и Передача оборудования в монтаж
		// нужно чтобы получить табличные части документов и по ним провести распределения 
		// (по сути аналогично комплектации товаров)
		// 3. Для поиска движений объединяем номенклатуру с остатков и из табличных частей из таблицы 2
		// 4. Движений по счетам 07; 08
		// 5. Корректировки движений по счетам 07; 08
		// 6. Итоговая таблица Движений по счетам 07; 08 за вычетом партии на остатках и корректировок
		// 7. Сгруппированная таблица 6, по этой таблице будет осуществляться распределение по партиям 
		// 8. - 10 Движения по счету 10 для номенклатуры из ТЧ таблицы 2
		// 11. Остатки по счетам 07;08 связанные со свойствами счета (количественный учет)
		ТекстЗапроса = 	
				"ВЫБРАТЬ
				|	Хозрасчетный.Ссылка КАК Счет,
				|	Хозрасчетный.Количественный КАК КоличественныйУчет
				|ПОМЕСТИТЬ СвойстваСчета
				|ИЗ
				|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
				|ГДЕ
				|	Хозрасчетный.Ссылка В (&СчетаКапВложений, &СчетаНПС)
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	Счет
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ХозрасчетныйОстатки.Счет КАК Счет,
				|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
				|	&ПолеСклад КАК Склад,
				|	&ПолеПартия КАК Партия,
				|	ХозрасчетныйОстатки.Организация КАК Организация,
				|	ЕСТЬNULL(ХозрасчетныйОстатки.Подразделение, НЕОПРЕДЕЛЕНО) КАК Подразделение,
				|	ХозрасчетныйОстатки.КоличествоОстаток КАК Количество,
				|	0 КАК Сумма
				|ПОМЕСТИТЬ ОстаткиССуммойИлиКоличеством
				|ИЗ
				|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ГраницаОстатков, Счет В (&СчетаНПС), &ВидыСубконтоНПС, Организация = &Организация) КАК ХозрасчетныйОстатки
				|ГДЕ
				|	ХозрасчетныйОстатки.КоличествоОстаток > 0
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ХозрасчетныйОстатки.Счет,
				|	ХозрасчетныйОстатки.Субконто1,
				|	НЕОПРЕДЕЛЕНО,
				|	НЕОПРЕДЕЛЕНО,
				|	ХозрасчетныйОстатки.Организация,
				|	ЕСТЬNULL(ХозрасчетныйОстатки.Подразделение, НЕОПРЕДЕЛЕНО),
				|	0,
				|	ХозрасчетныйОстатки.СуммаОстаток
				|ИЗ
				|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ГраницаОстатков, Счет В (&СчетаКапВложений), , Организация = &Организация) КАК ХозрасчетныйОстатки
				|ГДЕ
				|	ХозрасчетныйОстатки.СуммаОстаток > 0
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	Номенклатура,
				|	Счет
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПередачаОборудованияВМонтажОборудование.Номенклатура КАК Номенклатура,
				|	ПередачаОборудованияВМонтажОборудование.Количество КАК Количество,
				|	ПередачаОборудованияВМонтажОборудование.СчетУчета КАК СчетКомплектующие,
				|	ПередачаОборудованияВМонтаж.ОбъектСтроительства КАК ОбъектУчета,
				|	ПередачаОборудованияВМонтаж.Ссылка КАК ДокументИсточник,
				|	ПередачаОборудованияВМонтаж.СчетУчетаОбъектаСтроительства КАК СчетУчетаОбъекта
				|ПОМЕСТИТЬ ПередачаОборудования
				|ИЗ
				|	Документ.ПередачаОборудованияВМонтаж КАК ПередачаОборудованияВМонтаж
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаОборудованияВМонтаж.Оборудование КАК ПередачаОборудованияВМонтажОборудование
				|		ПО ПередачаОборудованияВМонтаж.Ссылка = ПередачаОборудованияВМонтажОборудование.Ссылка
				|ГДЕ
				|	ПередачаОборудованияВМонтаж.ОбъектСтроительства В
				|			(ВЫБРАТЬ
				|				ОстаткиССуммойИлиКоличеством.Номенклатура КАК Номенклатура
				|			ИЗ
				|				ОстаткиССуммойИлиКоличеством КАК ОстаткиССуммойИлиКоличеством)
				|	И ПередачаОборудованияВМонтаж.Проведен
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ТребованиеНакладнаяМатериалы.Номенклатура,
				|	ТребованиеНакладнаяМатериалы.Количество,
				|	ТребованиеНакладнаяМатериалы.Счет,
				|	ТребованиеНакладная.Субконто1,
				|	ТребованиеНакладная.Ссылка,
				|	ТребованиеНакладная.СчетЗатрат
				|ИЗ
				|	Документ.ТребованиеНакладная КАК ТребованиеНакладная
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТребованиеНакладная.Материалы КАК ТребованиеНакладнаяМатериалы
				|		ПО ТребованиеНакладная.Ссылка = ТребованиеНакладнаяМатериалы.Ссылка
				|ГДЕ
				|	ТребованиеНакладная.Субконто1 В
				|			(ВЫБРАТЬ
				|				ОстаткиССуммойИлиКоличеством.Номенклатура КАК Номенклатура
				|			ИЗ
				|				ОстаткиССуммойИлиКоличеством КАК ОстаткиССуммойИлиКоличеством)
				|	И ТребованиеНакладная.Проведен
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	ОбъектУчета
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ПередачаОборудования.Номенклатура КАК Номенклатура
				|ПОМЕСТИТЬ ОбъектыИНоменклатура
				|ИЗ
				|	ПередачаОборудования КАК ПередачаОборудования
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ОстаткиССуммойИКоличеством.Номенклатура
				|ИЗ
				|	ОстаткиССуммойИлиКоличеством КАК ОстаткиССуммойИКоличеством
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	Номенклатура
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ХозрасчетныйОборотыДтКт.Регистратор КАК Регистратор,
				|	ХозрасчетныйОборотыДтКт.Период КАК Период,
				|	ХозрасчетныйОборотыДтКт.КоличествоОборотДт КАК Количество,
				|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
				|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
				|	ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК ОбъектУчета,
				|	ЕСТЬNULL(ХозрасчетныйОборотыДтКт.ПодразделениеДт, НЕОПРЕДЕЛЕНО) КАК ПодразделениеДт,
				|	0 КАК Сумма,
				|	&ОборотыПартия КАК Партия,
				|	&ОборотыСклад КАК Склад
				|ПОМЕСТИТЬ ДвиженияСКоличеством
				|ИЗ
				|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
				|			,
				|			&ГраницаОстатков,
				|			Регистратор,
				|			СчетДт В (&СчетаНПС),
				|			&ВидыСубконтоНПС,
				|			,
				|			,
				|			Организация = &Организация
				|				И СубконтоДт1 В
				|					(ВЫБРАТЬ
				|						ОбъектыИНоменклатура.Номенклатура КАК Номенклатура
				|					ИЗ
				|						ОбъектыИНоменклатура КАК ОбъектыИНоменклатура)) КАК ХозрасчетныйОборотыДтКт
				|ГДЕ
				|	ХозрасчетныйОборотыДтКт.СчетДт <> ХозрасчетныйОборотыДтКт.СчетКт
				|	И ХозрасчетныйОборотыДтКт.КоличествоОборотДт > 0
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	ОбъектУчета
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.КорректировкаПоступления).ИсправляемыйДокументПоступления КАК Поступление,
				|	ХозрасчетныйОборотыДтКт.Период КАК Период,
				|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
				|	ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК ОбъектУчета,
				|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК Сумма,
				|	-ХозрасчетныйОборотыДтКт.КоличествоОборотДт КАК Количество
				|ПОМЕСТИТЬ СторноПоКорректировкам
				|ИЗ
				|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
				|			,
				|			&ГраницаОстатков,
				|			Регистратор,
				|			СчетДт В (&СчетаНПС),
				|			,
				|			,
				|			,
				|			Организация = &Организация
				|				И СубконтоДт1 В
				|					(ВЫБРАТЬ
				|						ОбъектыИНоменклатура.Номенклатура КАК Номенклатура
				|					ИЗ
				|						ОбъектыИНоменклатура КАК ОбъектыИНоменклатура)) КАК ХозрасчетныйОборотыДтКт
				|ГДЕ
				|	ХозрасчетныйОборотыДтКт.КоличествоОборотДт < 0
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	ОбъектУчета
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ДвиженияСКоличеством.Регистратор КАК Регистратор,
				|	ДвиженияСКоличеством.Период КАК Период,
				|	ДвиженияСКоличеством.СчетДт КАК Счет,
				|	ДвиженияСКоличеством.ОбъектУчета КАК ОбъектУчета,
				|	ДвиженияСКоличеством.Количество - ЕСТЬNULL(СторноПоКорректировкам.Количество, 0) - ЕСТЬNULL(ОстаткиССуммойИлиКоличеством.Количество, 0) КАК Количество,
				|	0 КАК Сумма,
				|	ДвиженияСКоличеством.Партия КАК Партия,
				|	ДвиженияСКоличеством.Склад КАК Склад,
				|	ДвиженияСКоличеством.ПодразделениеДт КАК Подразделение
				|ПОМЕСТИТЬ ТаблицаДвижений
				|ИЗ
				|	ДвиженияСКоличеством КАК ДвиженияСКоличеством
				|		ЛЕВОЕ СОЕДИНЕНИЕ СторноПоКорректировкам КАК СторноПоКорректировкам
				|		ПО ДвиженияСКоличеством.ОбъектУчета = СторноПоКорректировкам.ОбъектУчета
				|			И ДвиженияСКоличеством.Регистратор = СторноПоКорректировкам.Поступление
				|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиССуммойИлиКоличеством КАК ОстаткиССуммойИлиКоличеством
				|		ПО ДвиженияСКоличеством.ОбъектУчета = ОстаткиССуммойИлиКоличеством.Номенклатура
				|			И ДвиженияСКоличеством.Регистратор = ОстаткиССуммойИлиКоличеством.Партия
				|			И ДвиженияСКоличеством.Склад = ОстаткиССуммойИлиКоличеством.Склад
				|			И ДвиженияСКоличеством.ПодразделениеДт = ОстаткиССуммойИлиКоличеством.Подразделение
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ХозрасчетныйОборотыДтКт.Регистратор,
				|	ХозрасчетныйОборотыДтКт.Период,
				|	ХозрасчетныйОборотыДтКт.СчетДт,
				|	ХозрасчетныйОборотыДтКт.СубконтоДт1,
				|	0,
				|	ХозрасчетныйОборотыДтКт.СуммаОборот,
				|	НЕОПРЕДЕЛЕНО,
				|	НЕОПРЕДЕЛЕНО,
				|	ЕСТЬNULL(ХозрасчетныйОборотыДтКт.ПодразделениеДт, НЕОПРЕДЕЛЕНО)
				|ИЗ
				|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
				|			,
				|			&ГраницаОстатков,
				|			Регистратор,
				|			СчетДт В (&СчетаКапВложений),
				|			,
				|			,
				|			,
				|			Организация = &Организация
				|				И СубконтоДт1 В
				|					(ВЫБРАТЬ
				|						ОбъектыИНоменклатура.Номенклатура КАК Номенклатура
				|					ИЗ
				|						ОбъектыИНоменклатура КАК ОбъектыИНоменклатура)) КАК ХозрасчетныйОборотыДтКт
				|ГДЕ
				|	ХозрасчетныйОборотыДтКт.СуммаОборот > 0
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТаблицаДвижений.Регистратор КАК Регистратор,
				|	ТаблицаДвижений.Период КАК Период,
				|	ТаблицаДвижений.Счет КАК Счет,
				|	ТаблицаДвижений.ОбъектУчета КАК Номенклатура,
				|	СУММА(ТаблицаДвижений.Количество) КАК Количество,
				|	СУММА(ТаблицаДвижений.Сумма) КАК Сумма,
				|	ТаблицаДвижений.Партия КАК Партия,
				|	ТаблицаДвижений.Склад КАК Склад,
				|	ТаблицаДвижений.Подразделение КАК Подразделение
				|ИЗ
				|	ТаблицаДвижений КАК ТаблицаДвижений
				|
				|СГРУППИРОВАТЬ ПО
				|	ТаблицаДвижений.ОбъектУчета,
				|	ТаблицаДвижений.Период,
				|	ТаблицаДвижений.Регистратор,
				|	ТаблицаДвижений.Счет,
				|	ТаблицаДвижений.Партия,
				|	ТаблицаДвижений.Склад,
				|	ТаблицаДвижений.Подразделение
				|
				|УПОРЯДОЧИТЬ ПО
				|	Номенклатура,
				|	Счет,
				|	Период УБЫВ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ХозрасчетныйОборотыДтКт.Период КАК Период,
				|	ХозрасчетныйОборотыДтКт.Регистратор КАК Регистратор,
				|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
				|	ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Номенклатура,
				|	ХозрасчетныйОборотыДтКт.КоличествоОборотДт КАК Количество
				|ПОМЕСТИТЬ ДвиженияПоНоменклатуре
				|ИЗ
				|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
				|			,
				|			&ГраницаОстатков,
				|			Регистратор,
				|			СчетДт В ИЕРАРХИИ (&Счет10),
				|			,
				|			,
				|			,
				|			Организация = &Организация
				|				И СубконтоДт1 В
				|					(ВЫБРАТЬ
				|						ОбъектыИНоменклатура.Номенклатура КАК Номенклатура
				|					ИЗ
				|						ОбъектыИНоменклатура КАК ОбъектыИНоменклатура)) КАК ХозрасчетныйОборотыДтКт
				|ГДЕ
				|	НЕ(ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
				|				И ХозрасчетныйОборотыДтКт.СчетДт = ХозрасчетныйОборотыДтКт.СчетКт)
				|	И ХозрасчетныйОборотыДтКт.КоличествоОборотДт > 0
				|	И НЕ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ХозрасчетныйОстатки.Счет КАК Счет,
				|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
				|	&ПолеПартия КАК Партия,
				|	ХозрасчетныйОстатки.КоличествоОстаток КАК Количество
				|ПОМЕСТИТЬ ОстаткиПоНоменклатуреДляИсключенияПартииСАналитики
				|ИЗ
				|	РегистрБухгалтерии.Хозрасчетный.Остатки(
				|			&ГраницаОстатков,
				|			Счет В ИЕРАРХИИ (&Счет10),
				|			&ВидыСубконтоНПС,
				|			Организация = &Организация
				|				И Субконто1 В
				|					(ВЫБРАТЬ
				|						ОбъектыИНоменклатура.Номенклатура КАК Номенклатура
				|					ИЗ
				|						ОбъектыИНоменклатура КАК ОбъектыИНоменклатура)) КАК ХозрасчетныйОстатки
				|ГДЕ
				|	ХозрасчетныйОстатки.СуммаОстаток > 0
				|	И ХозрасчетныйОстатки.КоличествоОстаток > 0
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ДвиженияПоНоменклатуре.Период КАК Период,
				|	ДвиженияПоНоменклатуре.Регистратор КАК Регистратор,
				|	ДвиженияПоНоменклатуре.СчетДт КАК Счет,
				|	ДвиженияПоНоменклатуре.Номенклатура КАК Номенклатура,
				|	ДвиженияПоНоменклатуре.Количество - ЕСТЬNULL(ОстаткиПоНоменклатуреДляИсключенияПартииСАналитики.Количество, 0) КАК Количество
				|ИЗ
				|	ДвиженияПоНоменклатуре КАК ДвиженияПоНоменклатуре
				|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоНоменклатуреДляИсключенияПартииСАналитики КАК ОстаткиПоНоменклатуреДляИсключенияПартииСАналитики
				|		ПО ДвиженияПоНоменклатуре.Номенклатура = ОстаткиПоНоменклатуреДляИсключенияПартииСАналитики.Номенклатура
				|			И ДвиженияПоНоменклатуре.Регистратор = ОстаткиПоНоменклатуреДляИсключенияПартииСАналитики.Партия
				|
				|УПОРЯДОЧИТЬ ПО
				|	Номенклатура,
				|	Счет,
				|	Период УБЫВ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ОстаткиССуммойИКоличеством.Счет КАК Счет,
				|	ОстаткиССуммойИКоличеством.Номенклатура КАК Номенклатура,
				|	ОстаткиССуммойИКоличеством.Склад КАК Склад,
				|	ОстаткиССуммойИКоличеством.Партия КАК Партия,
				|	ОстаткиССуммойИКоличеством.Организация КАК Организация,
				|	ОстаткиССуммойИКоличеством.Подразделение КАК Подразделение,
				|	ОстаткиССуммойИКоличеством.Количество КАК Количество,
				|	ОстаткиССуммойИКоличеством.Сумма КАК Сумма,
				|	СвойстваСчета.КоличественныйУчет КАК КоличественныйУчет
				|ИЗ
				|	ОстаткиССуммойИлиКоличеством КАК ОстаткиССуммойИКоличеством
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СвойстваСчета КАК СвойстваСчета
				|		ПО ОстаткиССуммойИКоличеством.Счет = СвойстваСчета.Счет";

		Возврат ТекстЗапроса;
		
КонецФункции

Функция ОстаткиПоСчетамУчетаТоваров(СтруктураПараметров, ТаблицаИспользованныхПартий)
	
	// Определяем параметры  
	ВедетсяПартионныйУчет = СтруктураПараметров.ВестиПартионныйУчет;
	ВедетсяСкладскойУчет  = СтруктураПараметров.ВестиСкладскойУчет; 
	
	ПланСчетов = ПланыСчетов.Хозрасчетный;
	
	// Сформируем массив счетов с возможной аналитикой номенклатура, склад, партия
	// Это счета на которые изначально ожидаются поступления    	
	ПредопределенныеСчетаУчетаЗапасов = Новый Массив;
	ПредопределенныеСчетаУчетаЗапасов.Добавить(ПланСчетов.Материалы);                        				  // 10
	ПредопределенныеСчетаУчетаЗапасов.Добавить(ПланСчетов.Товары);                          				  // 41
	СчетаЗапасов = БухгалтерскийУчет.СформироватьМассивСубсчетов(ПредопределенныеСчетаУчетаЗапасов);
	
	ПредопределенныеИсключаемыеСчетаЗапасов = Новый Массив;
	ПредопределенныеИсключаемыеСчетаЗапасов.Добавить(ПланСчетов.ТопливоВБаке);                                // 10.03.2
	ПредопределенныеИсключаемыеСчетаЗапасов.Добавить(ПланСчетов.МатериалыПереданныеВПереработку);       	  // 10.07 
	ПредопределенныеИсключаемыеСчетаЗапасов.Добавить(ПланСчетов.СпецоснасткаИСпецодеждаВЭксплуатации);        // 10.11
	ПредопределенныеИсключаемыеСчетаЗапасов.Добавить(ПланСчетов.ТоварыВРозничнойТорговлеВПродажныхЦенахАТТ);  // 41.11
	ПредопределенныеИсключаемыеСчетаЗапасов.Добавить(ПланСчетов.ТоварыВРозничнойТорговлеВПродажныхЦенахНТТ);  // 41.12
	ПредопределенныеИсключаемыеСчетаЗапасов.Добавить(ПланСчетов.КорректировкаТоваровПрошлогоПериода);         // 41.К
	
	СчетаЗапасов = ОбщегоНазначенияКлиентСервер.РазностьМассивов(СчетаЗапасов,
							БухгалтерскийУчет.СформироватьМассивСубсчетов(ПредопределенныеИсключаемыеСчетаЗапасов));
		
	// Счет 41.11, на нем вне зависимости от ведения учета по складам есть субконто склад, 
	// Поэтому этот счет отличается от остальных в группе 41 счета
	Счет4111=ПланСчетов.ТоварыВРозничнойТорговлеВПродажныхЦенахАТТ;		 								      // 41.11
	
	// Массив счетов, которые используются для передачи, на них не бывает субконто "Склад", вместо него "Контрагент"
	ПредопределенныеСчетаУчетаПередачи = Новый Массив;
	ПредопределенныеСчетаУчетаПередачи.Добавить(ПланСчетов.МатериалыПереданныеВПереработку);				  // 10.07
	ПредопределенныеСчетаУчетаПередачи.Добавить(ПланСчетов.ТоварыОтгруженные);               				  // 45
	СчетаПередачи = БухгалтерскийУчет.СформироватьМассивСубсчетов(ПредопределенныеСчетаУчетаПередачи);

	ПредопределенныеИсключаемыеСчетаПередачи = Новый Массив;
	ПредопределенныеИсключаемыеСчетаПередачи.Добавить(ПланСчетов.ПереданныеОбъектыНедвижимости);       		  // 45.04
	
	СчетаПередачи = ОбщегоНазначенияКлиентСервер.РазностьМассивов(СчетаПередачи,
		БухгалтерскийУчет.СформироватьМассивСубсчетов(ПредопределенныеИсключаемыеСчетаПередачи));  	
		
	
		
	// Сформируем варианты по субконто
	ВидыСубконтоНСП = Новый Массив;
	ВидыСубконтоНСП.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Если ВедетсяСкладскойУчет Тогда 	
		ВидыСубконтоНСП.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
	Если ВедетсяПартионныйУчет Тогда 
		ВидыСубконтоНСП.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии);
	КонецЕсли;
	
	ВидыСубконтоНКП = Новый Массив;
	ВидыСубконтоНКП.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	ВидыСубконтоНКП.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	Если ВедетсяПартионныйУчет Тогда
		ВидыСубконтоНКП.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии);
	КонецЕсли;
	
	ВидыСубконтоНСП4111 = Новый Массив;
	ВидыСубконтоНСП4111.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	ВидыСубконтоНСП4111.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	Если ВедетсяПартионныйУчет Тогда 
		ВидыСубконтоНСП4111.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии);
	КонецЕсли;

	Запрос = Новый Запрос();
	
	Запрос.УстановитьПараметр("СчетаЗапасов", 					СчетаЗапасов);
	Запрос.УстановитьПараметр("Счет4111",						Счет4111);
	Запрос.УстановитьПараметр("СчетаПередачи", 					СчетаПередачи);
	Запрос.УстановитьПараметр("ГраницаОстатков", 				СтруктураПараметров.КонецКвартала);
	Запрос.УстановитьПараметр("Организация", 					СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("ВидыСубконтоНСП", 				ВидыСубконтоНСП);
	Запрос.УстановитьПараметр("ВидыСубконтоНКП", 				ВидыСубконтоНКП);
	Запрос.УстановитьПараметр("ВидыСубконтоНСП4111",			ВидыСубконтоНСП4111);
	Запрос.УстановитьПараметр("ТаблицаИспользованныхПартий", 	ТаблицаИспользованныхПартий);
	Запрос.УстановитьПараметр("ВидыСубконтоН",					ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	// 0. ТаблицаИспользованныхПартий - Таблица с партиями, по которым уже были распределены остатки
	// при формировании остатков по счетам 07; 08, передается  как параметр
	// 1. Остатки по счетам 10; 41; 45
	// 2. Комплектации, по номенклатуре, которая есть на остатках
	// 3. Номенклатура с остатков, объединненая с номенклатурой, которая выступает как комплектующие
	// Необходимо для поиска движений.
	// 4. Движения по счетам
	// 5. Корректировки по движениям
	// 6. Итоговая таблица: Движения по счетам - Корректировки - Партии на аналитике 
	ТекстЗапроса =
			"ВЫБРАТЬ
			|	ТаблицаИспользованныхПартий.Номенклатура КАК Номенклатура,
			|	ТаблицаИспользованныхПартий.Счет КАК Счет,
			|	ТаблицаИспользованныхПартий.Партия КАК Партия,
			|	ТаблицаИспользованныхПартий.Количество КАК Количество
			|ПОМЕСТИТЬ ТаблицаИспользованныхПартий
			|ИЗ
			|	&ТаблицаИспользованныхПартий КАК ТаблицаИспользованныхПартий
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ХозрасчетныйОстатки.Счет КАК Счет,
			|	ЕСТЬNULL(ХозрасчетныйОстатки.Субконто1, НЕОПРЕДЕЛЕНО) КАК Номенклатура,
			|	&ПолеСклад КАК Склад,
			|	&ПолеПартия КАК Партия,
			|	ХозрасчетныйОстатки.Организация КАК Организация,
			|	ЕСТЬNULL(ХозрасчетныйОстатки.Подразделение, НЕОПРЕДЕЛЕНО) КАК Подразделение,
			|	ХозрасчетныйОстатки.КоличествоОстаток КАК Количество
			|ПОМЕСТИТЬ ОстаткиНоменклатуры
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ГраницаОстатков, Счет В (&СчетаЗапасов), &ВидыСубконтоНСП, Организация = &Организация) КАК ХозрасчетныйОстатки
			|ГДЕ
			|	ХозрасчетныйОстатки.КоличествоОстаток > 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ХозрасчетныйОстатки.Счет,
			|	ЕСТЬNULL(ХозрасчетныйОстатки.Субконто1, НЕОПРЕДЕЛЕНО),
			|	ЕСТЬNULL(ХозрасчетныйОстатки.Субконто2, НЕОПРЕДЕЛЕНО),
			|	&ПартияКакСубконто3,
			|	ХозрасчетныйОстатки.Организация,
			|	ЕСТЬNULL(ХозрасчетныйОстатки.Подразделение, НЕОПРЕДЕЛЕНО),
			|	ХозрасчетныйОстатки.КоличествоОстаток
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ГраницаОстатков, Счет В (&СчетаПередачи), &ВидыСубконтоНКП, Организация = &Организация) КАК ХозрасчетныйОстатки
			|ГДЕ
			|	ХозрасчетныйОстатки.КоличествоОстаток > 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ХозрасчетныйОстатки.Счет,
			|	ЕСТЬNULL(ХозрасчетныйОстатки.Субконто1, НЕОПРЕДЕЛЕНО),
			|	ЕСТЬNULL(ХозрасчетныйОстатки.Субконто2, НЕОПРЕДЕЛЕНО),
			|	&ПартияКакСубконто3,
			|	ХозрасчетныйОстатки.Организация,
			|	ЕСТЬNULL(ХозрасчетныйОстатки.Подразделение, НЕОПРЕДЕЛЕНО),
			|	ХозрасчетныйОстатки.КоличествоОстаток
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ГраницаОстатков, Счет = &Счет4111, &ВидыСубконтоНСП4111, Организация = &Организация) КАК ХозрасчетныйОстатки
			|ГДЕ
			|	ХозрасчетныйОстатки.КоличествоОстаток > 0
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура,
			|	Счет
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	КомплектацияНоменклатуры.Ссылка КАК Комплектация,
			|	КомплектацияНоменклатуры.Количество КАК Количество,
			|	КомплектацияНоменклатурыКомплектующие.СчетУчета КАК СчетУчета,
			|	КомплектацияНоменклатурыКомплектующие.Количество КАК КоличествоКомплектующие,
			|	КомплектацияНоменклатурыКомплектующие.Номенклатура КАК Комплектующие,
			|	КомплектацияНоменклатуры.Номенклатура КАК Номенклатура
			|ПОМЕСТИТЬ Комплектации
			|ИЗ
			|	Документ.КомплектацияНоменклатуры КАК КомплектацияНоменклатуры
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КомплектацияНоменклатуры.Комплектующие КАК КомплектацияНоменклатурыКомплектующие
			|		ПО КомплектацияНоменклатуры.Ссылка = КомплектацияНоменклатурыКомплектующие.Ссылка
			|ГДЕ
			|	КомплектацияНоменклатуры.Номенклатура В
			|			(ВЫБРАТЬ
			|				ОстаткиНоменклатуры.Номенклатура КАК Номенклатура
			|			ИЗ
			|				ОстаткиНоменклатуры КАК ОстаткиНоменклатуры)
			|	И КомплектацияНоменклатуры.Проведен = ИСТИНА
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Комплектующие
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Комплектации.Комплектующие КАК Номенклатура
			|ПОМЕСТИТЬ НоменклатураДляПоискаДвижений
			|ИЗ
			|	Комплектации КАК Комплектации
			|
			|СГРУППИРОВАТЬ ПО
			|	Комплектации.Комплектующие
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ОстаткиНоменклатуры.Номенклатура
			|ИЗ
			|	ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.Период КАК Период,
			|	ХозрасчетныйОборотыДтКт.Регистратор КАК Регистратор,
			|	ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Номенклатура,
			|	ХозрасчетныйОборотыДтКт.СчетДт КАК Счет,
			|	ХозрасчетныйОборотыДтКт.СчетКт КАК КорСчет,
			|	ХозрасчетныйОборотыДтКт.КоличествоОборотДт КАК Количество
			|ПОМЕСТИТЬ ДокументыПоступлений
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
			|			,
			|			&ГраницаОстатков,
			|			Регистратор,
			|			СчетДт В (&СчетаЗапасов, &СчетаПередачи)
			|				ИЛИ СчетДт = &Счет4111,
			|			&ВидыСубконтоН,
			|			,
			|			,
			|			Организация = &Организация
			|				И СубконтоДт1 В
			|					(ВЫБРАТЬ
			|						НоменклатураДляПоискаДвижений.Номенклатура КАК Номенклатура
			|					ИЗ
			|						НоменклатураДляПоискаДвижений КАК НоменклатураДляПоискаДвижений)) КАК ХозрасчетныйОборотыДтКт
			|ГДЕ
			|	НЕ(ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
			|				И ХозрасчетныйОборотыДтКт.СчетДт = ХозрасчетныйОборотыДтКт.СчетКт)
			|	И ХозрасчетныйОборотыДтКт.КоличествоОборотДт > 0
			|	И НЕ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.Период,
			|	ХозрасчетныйОборотыДтКт.Регистратор,
			|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
			|	ХозрасчетныйОборотыДтКт.СчетКт,
			|	ХозрасчетныйОборотыДтКт.СчетДт,
			|	-ХозрасчетныйОборотыДтКт.КоличествоОборотКт
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
			|			,
			|			&ГраницаОстатков,
			|			Регистратор,
			|			,
			|			,
			|			СчетКт В (&СчетаЗапасов)
			|				ИЛИ СчетКт = &Счет4111,
			|			&ВидыСубконтоН,
			|			Организация = &Организация
			|				И СубконтоКт1 В
			|					(ВЫБРАТЬ
			|						НоменклатураДляПоискаДвижений.Номенклатура КАК Номенклатура
			|					ИЗ
			|						НоменклатураДляПоискаДвижений КАК НоменклатураДляПоискаДвижений)) КАК ХозрасчетныйОборотыДтКт
			|ГДЕ
			|	ХозрасчетныйОборотыДтКт.КоличествоОборотКт < 0
			|	И (ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ОперацияБух
			|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура,
			|	Счет
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.СчетДт КАК Счет,
			|	ХозрасчетныйОборотыДтКт.КоличествоОборотДт КАК Количество,
			|	ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Номенклатура,
			|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.КорректировкаПоступления).ИсправляемыйДокументПоступления КАК Поступление
			|ПОМЕСТИТЬ КорректировкаДляДокументовПоступления
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
			|			,
			|			&ГраницаОстатков,
			|			Регистратор,
			|			СчетДт В (&СчетаЗапасов)
			|				ИЛИ СчетДт = &Счет4111,
			|			,
			|			,
			|			,
			|			Организация = &Организация
			|				И СубконтоДт1 В
			|					(ВЫБРАТЬ
			|						НоменклатураДляПоискаДвижений.Номенклатура КАК Номенклатура
			|					ИЗ
			|						НоменклатураДляПоискаДвижений КАК НоменклатураДляПоискаДвижений)) КАК ХозрасчетныйОборотыДтКт
			|ГДЕ
			|	ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.КорректировкаПоступления
			|	И ХозрасчетныйОборотыДтКт.КоличествоОборотДт < 0
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура,
			|	Счет
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДокументыПоступлений.Период КАК Период,
			|	ДокументыПоступлений.Регистратор КАК Партия,
			|	ДокументыПоступлений.Номенклатура КАК Номенклатура,
			|	ДокументыПоступлений.Счет КАК Счет,
			|	ДокументыПоступлений.КорСчет КАК КорСчет,
			|	ЕСТЬNULL(ДокументыПоступлений.Количество, 0) - ЕСТЬNULL(ОстаткиНоменклатуры.Количество, 0) + ЕСТЬNULL(КорректировкаДляДокументовПоступления.Количество, 0) - ЕСТЬNULL(ТаблицаИспользованныхПартий.Количество, 0) КАК Количество
			|ИЗ
			|	ДокументыПоступлений КАК ДокументыПоступлений
			|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
			|		ПО ДокументыПоступлений.Номенклатура = ОстаткиНоменклатуры.Номенклатура
			|			И ДокументыПоступлений.Счет = ОстаткиНоменклатуры.Счет
			|			И ДокументыПоступлений.Регистратор = ОстаткиНоменклатуры.Партия
			|		ЛЕВОЕ СОЕДИНЕНИЕ КорректировкаДляДокументовПоступления КАК КорректировкаДляДокументовПоступления
			|		ПО ДокументыПоступлений.Регистратор = КорректировкаДляДокументовПоступления.Поступление
			|			И ДокументыПоступлений.Номенклатура = КорректировкаДляДокументовПоступления.Номенклатура
			|			И ДокументыПоступлений.Счет = КорректировкаДляДокументовПоступления.Счет
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаИспользованныхПартий КАК ТаблицаИспользованныхПартий
			|		ПО ДокументыПоступлений.Номенклатура = ТаблицаИспользованныхПартий.Номенклатура
			|			И ДокументыПоступлений.Счет = ТаблицаИспользованныхПартий.Счет
			|			И ДокументыПоступлений.Регистратор = ТаблицаИспользованныхПартий.Партия
			|
			|УПОРЯДОЧИТЬ ПО
			|	Номенклатура,
			|	Счет,
			|	Период УБЫВ";
	
	
	ПолеСклад  = ?(ВедетсяСкладскойУчет,   "ЕСТЬNULL(ХозрасчетныйОстатки.Субконто2, НЕОПРЕДЕЛЕНО)", "НЕОПРЕДЕЛЕНО");
	Если Не ВедетсяСкладскойУчет Тогда 
		ПолеПартия = ?(ВедетсяПартионныйУчет, "ЕСТЬNULL(ХозрасчетныйОстатки.Субконто2, НЕОПРЕДЕЛЕНО)", "НЕОПРЕДЕЛЕНО");
	Иначе
		ПолеПартия = ?(ВедетсяПартионныйУчет, "ЕСТЬNULL(ХозрасчетныйОстатки.Субконто3, НЕОПРЕДЕЛЕНО)", "НЕОПРЕДЕЛЕНО");
		
	КонецЕсли;
	ПартияКакСубконто3 = ?(ВедетсяПартионныйУчет, "ЕСТЬNULL(ХозрасчетныйОстатки.Субконто3, НЕОПРЕДЕЛЕНО)", "НЕОПРЕДЕЛЕНО");

	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолеСклад", ПолеСклад);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолеПартия", ПолеПартия);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПартияКакСубконто3", ПартияКакСубконто3);

	Запрос.Текст = ТекстЗапроса;

	
	Таблицы = Запрос.ВыполнитьПакетСПромежуточнымиДанными(); 	
	
	Возврат Таблицы;

	
КонецФункции

// В этом запросе нам необходимо получить следующие данные:
// 1. По документам, которые были определены как партии необходимо получить данные по НДС:
// 		- Сумма НДС
// 		- Cумма без НДС
// 		- Счет учета НДС
// 		- Ставка НДС
// 		- Способ учета НДС
// 		- Вид ценности 
// 		- Счет Фактура
// 2 Документы доп расходов: Заявление о ввозе товаров, ГТД по Импорту, Поступление доп расходов.
// Структура получаемых данных аналогично п.1
// 3. Авансовые отчеты как документы доп расходов
// Доп расходы в авансовых счетах заполняются в ТЧ Прочее, в качестве счета затрат может быть указан
// счет учета 
// Входящие параметры - структура содержащая следующие поля:
// 		- Организация
// 		- Период - дата, на которую формируются остатки
// 		- СчетНДСПоУмолчанию - 19.03, подставляется в случае, если не найден счет в самом документе
// 		- ДокументыПартий - таблица значений, содержащая две колонки Партия и Номенклатура
// 		По этим документам будут определяться данные по НДС из п.1
// 		- ОснованияДляДопРасходов - таблица значений, содержащая две колонки Партия и Номенклатура
// 		По этим документам будут определяться данные по НДС из п.2
// 		- АвансовыеОтчетыКакРасходы - таблица значений, содержащая три колонки Партия, Номенклатура, Счет
// 		По этим документам будут определяться данные по НДС из п.3
// 		Возвращаемые параметры - результат запроса
Функция ДанныеНДСПоДокументам(СтруктураПараметровДляПолученияНДС)
	
	// 0. ДокументыПартий - Таблица из параметров
	// 1. АвансовыеОтчетыКакРасходы - Таблица из параметров
	// 2. ОснованияДляДопРасходов - Таблица из параметров.
	// 3. - 6. Поиск сумм НДС по документам Доп расходов
	// 7. - 9. Поиск сумм НДС по документам ГТД по Импорту
	// 10. Суммы НДС по документам Заявление о ввозе товаров
	// 11. Таблица содержащая суммарно данные по НДС по всем документам доп расходов
	// (Поступление доп расходов, ГТД по Импорту, Заявление о ввозе товаров)
	// 12.- 15. Подготовка данных для определения сумм НДС по самим документам Партий 
	// 16. - В этой таблице собираются данные по НДС из табличных частей разных документов 
	// 17. Сгруппированная таблица 16
	// 18. Данные по НДС по Авансовым отчетам,
	// когда эти документы выступают как источники доп расходов. 
	Запрос = Новый Запрос();
	Запрос.Текст =
				"ВЫБРАТЬ
				|	ДокументыПартий.Номенклатура КАК Номенклатура,
				|	ДокументыПартий.Партия КАК Партия
				|ПОМЕСТИТЬ ДокументыПартий
				|ИЗ
				|	&ДокументыПартий КАК ДокументыПартий
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	Партия,
				|	Номенклатура
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	АвансовыйОтчетКакРасходы.Номенклатура КАК ОбъектУчета,
				|	АвансовыйОтчетКакРасходы.Партия КАК ДокАвансовыйОтчет,
				|	АвансовыйОтчетКакРасходы.Счет КАК СчетУчета
				|ПОМЕСТИТЬ АвансовыеОтчетыКакРасходы
				|ИЗ
				|	&АвансовыйОтчетКакРасходы КАК АвансовыйОтчетКакРасходы
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ОснованияДляДопРасходов.Номенклатура КАК Номенклатура,
				|	ОснованияДляДопРасходов.Партия КАК Партия
				|ПОМЕСТИТЬ ОснованияДляДопРасходов
				|ИЗ
				|	&ОснованияДляДопРасходов КАК ОснованияДляДопРасходов
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	Партия,
				|	Номенклатура
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПоступлениеДопРасходовТовары.Ссылка КАК ДопРасходы,
				|	ПоступлениеДопРасходовТовары.Номенклатура КАК Номенклатура,
				|	СУММА(ПоступлениеДопРасходовТовары.Количество) КАК Количество,
				|	СУММА(ПоступлениеДопРасходовТовары.СуммаТовара) КАК СуммаТовара,
				|	СУММА(ПоступлениеДопРасходовТовары.СуммаНДС) КАК СуммаНДС,
				|	СУММА(ПоступлениеДопРасходовТовары.Сумма) КАК Сумма,
				|	ПоступлениеДопРасходовТовары.СчетУчетаНДС КАК СчетУчетаНДС,
				|	ПоступлениеДопРасходовТовары.ДокументПартии КАК Поступление,
				|	ПоступлениеДопРасходовТовары.СчетУчета КАК СчетУчета,
				|	ПоступлениеДопРасходовТовары.НомерСтроки КАК НомерСтроки
				|ПОМЕСТИТЬ ДокументыДопРасходов
				|ИЗ
				|	ОснованияДляДопРасходов КАК ОснованияДляДопРасходов
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
				|		ПО ОснованияДляДопРасходов.Номенклатура = ПоступлениеДопРасходовТовары.Номенклатура
				|			И ОснованияДляДопРасходов.Партия = ПоступлениеДопРасходовТовары.ДокументПартии
				|
				|СГРУППИРОВАТЬ ПО
				|	ПоступлениеДопРасходовТовары.СчетУчетаНДС,
				|	ПоступлениеДопРасходовТовары.ДокументПартии,
				|	ПоступлениеДопРасходовТовары.Ссылка,
				|	ПоступлениеДопРасходовТовары.Номенклатура,
				|	ПоступлениеДопРасходовТовары.СчетУчета,
				|	ПоступлениеДопРасходовТовары.НомерСтроки
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ПоступлениеДопРасходов.СтавкаНДС КАК СтавкаНДС,
				|	ПоступлениеДопРасходов.СпособРаспределения КАК СпособРаспределения,
				|	ПоступлениеДопРасходов.Сумма КАК ДопРасходыСумма,
				|	ПоступлениеДопРасходов.СуммаНДС КАК ДопРасходыСуммаНДС,
				|	ПоступлениеДопРасходов.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
				|	ВЫБОР
				|		КОГДА ПоступлениеДопРасходов.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
				|			ТОГДА 0
				|		ИНАЧЕ ВЫБОР
				|				КОГДА ПоступлениеДопРасходов.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
				|					ТОГДА 10
				|				ИНАЧЕ ВЫБОР
				|						КОГДА ПоступлениеДопРасходов.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
				|							ТОГДА 18
				|						ИНАЧЕ ВЫБОР
				|								КОГДА ПоступлениеДопРасходов.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
				|									ТОГДА 20
				|								ИНАЧЕ 0
				|							КОНЕЦ
				|					КОНЕЦ
				|			КОНЕЦ
				|	КОНЕЦ КАК РасчетнаяСтавкаНДС,
				|	ПоступлениеДопРасходов.СуммаВключаетНДС КАК СуммаВключаетНДС,
				|	ВЫБОР
				|		КОГДА ПоступлениеДопРасходов.КурсВзаиморасчетов = 0
				|			ТОГДА 1
				|		ИНАЧЕ ПоступлениеДопРасходов.КурсВзаиморасчетов
				|	КОНЕЦ КАК Курс,
				|	ВЫБОР
				|		КОГДА ПоступлениеДопРасходов.КратностьВзаиморасчетов = 0
				|			ТОГДА 1
				|		ИНАЧЕ ПоступлениеДопРасходов.КратностьВзаиморасчетов
				|	КОНЕЦ КАК Кратность,
				|	ДокументыДопРасходов.ДопРасходы КАК ДопРасходы,
				|	ВЫБОР
				|		КОГДА НЕ &СокращеннаяАналитика
				|			ТОГДА ПоступлениеДопРасходов.Контрагент
				|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
				|	КОНЕЦ КАК Контрагент
				|ПОМЕСТИТЬ ПоказателиДляРасчетаНДС
				|ИЗ
				|	ДокументыДопРасходов КАК ДокументыДопРасходов
				|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
				|		ПО ДокументыДопРасходов.ДопРасходы = ПоступлениеДопРасходов.Ссылка
				|ГДЕ
				|	ПоступлениеДопРасходов.Проведен = ИСТИНА
				|	И ПоступлениеДопРасходов.Дата <= &Период
				|	И ПоступлениеДопРасходов.Организация = &Организация
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПоказателиДляРасчетаНДС.ДопРасходы КАК ДопРасходы,
				|	СУММА(ПоступлениеДопРасходовТовары.СуммаТовара) КАК СуммаТовара,
				|	СУММА(ПоступлениеДопРасходовТовары.Количество) КАК Количество
				|ПОМЕСТИТЬ ИтогиПоРасходам
				|ИЗ
				|	ПоказателиДляРасчетаНДС КАК ПоказателиДляРасчетаНДС
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
				|		ПО ПоказателиДляРасчетаНДС.ДопРасходы = ПоступлениеДопРасходовТовары.Ссылка
				|
				|СГРУППИРОВАТЬ ПО
				|	ПоказателиДляРасчетаНДС.ДопРасходы
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ДокументыДопРасходов.ДопРасходы КАК ДопРасходы,
				|	ДокументыДопРасходов.Номенклатура КАК Номенклатура,
				|	СУММА(ДокументыДопРасходов.Количество) КАК Количество,
				|	СУММА(ДокументыДопРасходов.СуммаТовара) КАК СуммаТовара,
				|	СУММА(ДокументыДопРасходов.СуммаНДС) КАК СуммаНДС,
				|	СУММА(ДокументыДопРасходов.Сумма) КАК Сумма,
				|	ДокументыДопРасходов.СчетУчетаНДС КАК СчетУчетаНДС,
				|	ДокументыДопРасходов.Поступление КАК Поступление,
				|	СУММА(ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НДС, ВЫБОР
				|				КОГДА ПоказателиДляРасчетаНДС.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
				|					ТОГДА 0
				|				ИНАЧЕ ВЫБОР
				|						КОГДА ПоказателиДляРасчетаНДС.СпособРаспределения = ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияДопРасходов.ПоКоличеству)
				|							ТОГДА ВЫБОР
				|									КОГДА ПоказателиДляРасчетаНДС.СуммаВключаетНДС
				|										ТОГДА (ПоказателиДляРасчетаНДС.ДопРасходыСумма - ПоказателиДляРасчетаНДС.ДопРасходыСуммаНДС) / ИтогиПоРасходам.Количество * ДокументыДопРасходов.Количество
				|									ИНАЧЕ ПоказателиДляРасчетаНДС.ДопРасходыСумма / ИтогиПоРасходам.Количество * ДокументыДопРасходов.Количество
				|								КОНЕЦ
				|						ИНАЧЕ ВЫБОР
				|								КОГДА ПоказателиДляРасчетаНДС.СуммаВключаетНДС
				|									ТОГДА (ПоказателиДляРасчетаНДС.ДопРасходыСумма - ПоказателиДляРасчетаНДС.ДопРасходыСуммаНДС) * ДокументыДопРасходов.СуммаТовара / ИтогиПоРасходам.СуммаТовара
				|								ИНАЧЕ ПоказателиДляРасчетаНДС.ДопРасходыСумма * ДокументыДопРасходов.СуммаТовара / ИтогиПоРасходам.СуммаТовара
				|							КОНЕЦ
				|					КОНЕЦ / 100 * ПоказателиДляРасчетаНДС.РасчетнаяСтавкаНДС
				|			КОНЕЦ + ДокументыДопРасходов.СуммаНДС)) КАК ИтоговаяСуммаНДС,
				|	СУММА(ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, ВЫБОР
				|				КОГДА ПоказателиДляРасчетаНДС.СпособРаспределения = ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияДопРасходов.ПоКоличеству)
				|					ТОГДА ВЫБОР
				|							КОГДА ПоказателиДляРасчетаНДС.СуммаВключаетНДС
				|								ТОГДА (ПоказателиДляРасчетаНДС.ДопРасходыСумма - ПоказателиДляРасчетаНДС.ДопРасходыСуммаНДС) / ИтогиПоРасходам.Количество * ДокументыДопРасходов.Количество
				|							ИНАЧЕ ПоказателиДляРасчетаНДС.ДопРасходыСумма / ИтогиПоРасходам.Количество * ДокументыДопРасходов.Количество
				|						КОНЕЦ
				|				ИНАЧЕ ВЫБОР
				|						КОГДА ПоказателиДляРасчетаНДС.СуммаВключаетНДС
				|							ТОГДА (ПоказателиДляРасчетаНДС.ДопРасходыСумма - ПоказателиДляРасчетаНДС.ДопРасходыСуммаНДС) * ДокументыДопРасходов.СуммаТовара / ИтогиПоРасходам.СуммаТовара
				|						ИНАЧЕ ПоказателиДляРасчетаНДС.ДопРасходыСумма * ДокументыДопРасходов.СуммаТовара / ИтогиПоРасходам.СуммаТовара
				|					КОНЕЦ
				|			КОНЕЦ + ВЫБОР
				|				КОГДА ПоказателиДляРасчетаНДС.СуммаВключаетНДС
				|					ТОГДА ДокументыДопРасходов.Сумма - ДокументыДопРасходов.СуммаНДС
				|				ИНАЧЕ ДокументыДопРасходов.Сумма
				|			КОНЕЦ)) КАК ИтоговаяСуммаБезНДС,
				|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) КАК ВидыЦенностей,
				|	ПоказателиДляРасчетаНДС.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
				|	ПоказателиДляРасчетаНДС.СтавкаНДС КАК СтавкаНДС,
				|	ДокументыДопРасходов.СчетУчета КАК СчетУчета,
				|	ПоказателиДляРасчетаНДС.Контрагент КАК Контрагент
				|ПОМЕСТИТЬ ПодготовленныеДопРасходы
				|ИЗ
				|	ПоказателиДляРасчетаНДС КАК ПоказателиДляРасчетаНДС
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыДопРасходов КАК ДокументыДопРасходов
				|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
				|			ПО ДокументыДопРасходов.ДопРасходы = РублевыеСуммыДокументовВВалюте.Регистратор
				|				И ДокументыДопРасходов.НомерСтроки = РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
				|		ПО ПоказателиДляРасчетаНДС.ДопРасходы = ДокументыДопРасходов.ДопРасходы
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИтогиПоРасходам КАК ИтогиПоРасходам
				|		ПО ПоказателиДляРасчетаНДС.ДопРасходы = ИтогиПоРасходам.ДопРасходы
				|ГДЕ
				|	(РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары)
				|			ИЛИ РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента ЕСТЬ NULL)
				|
				|СГРУППИРОВАТЬ ПО
				|	ПоказателиДляРасчетаНДС.СтавкаНДС,
				|	ПоказателиДляРасчетаНДС.НДСВключенВСтоимость,
				|	ДокументыДопРасходов.СчетУчета,
				|	ДокументыДопРасходов.Поступление,
				|	ДокументыДопРасходов.СчетУчетаНДС,
				|	ДокументыДопРасходов.Номенклатура,
				|	ДокументыДопРасходов.ДопРасходы,
				|	ПоказателиДляРасчетаНДС.Контрагент
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ГТДИмпортТовары.Номенклатура КАК Номенклатура,
				|	СУММА(ГТДИмпортТовары.Количество) КАК Количество,
				|	СУММА(ГТДИмпортТовары.СуммаНДС) КАК СуммаНДС,
				|	ГТДИмпортТовары.СчетУчетаНДС КАК СчетУчетаНДС,
				|	СУММА(ГТДИмпортТовары.ФактурнаяСтоимость) КАК СуммаБезНДС,
				|	ГТДИмпортТовары.ДокументПартии КАК ДокументПартии,
				|	ГТДИмпортТовары.Ссылка КАК ГТД,
				|	ГТДИмпортТовары.НомерРаздела КАК НомерРаздела,
				|	СУММА(ГТДИмпортТовары.СуммаПошлины) КАК СуммаПошлины,
				|	ГТДИмпортТовары.СчетУчета КАК СчетУчета
				|ПОМЕСТИТЬ ДокументыГТД
				|ИЗ
				|	ОснованияДляДопРасходов КАК ОснованияДляДопРасходов
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
				|		ПО ОснованияДляДопРасходов.Партия = ГТДИмпортТовары.ДокументПартии
				|			И ОснованияДляДопРасходов.Номенклатура = ГТДИмпортТовары.Номенклатура
				|
				|СГРУППИРОВАТЬ ПО
				|	ГТДИмпортТовары.ДокументПартии,
				|	ГТДИмпортТовары.СчетУчетаНДС,
				|	ГТДИмпортТовары.Ссылка,
				|	ГТДИмпортТовары.Номенклатура,
				|	ГТДИмпортТовары.НомерРаздела,
				|	ГТДИмпортТовары.СчетУчета
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ДокументыГТД.ГТД КАК ГТД,
				|	ГТДИмпорт.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
				|	ВЫБОР
				|		КОГДА ГТДИмпорт.КурсВзаиморасчетов = 0
				|			ТОГДА 1
				|		ИНАЧЕ ГТДИмпорт.КурсВзаиморасчетов
				|	КОНЕЦ КАК КурсВзаиморасчетов,
				|	ВЫБОР
				|		КОГДА ГТДИмпорт.КратностьВзаиморасчетов = 0
				|			ТОГДА 1
				|		ИНАЧЕ ГТДИмпорт.КратностьВзаиморасчетов
				|	КОНЕЦ КАК КратностьВзаиморасчетов,
				|	ВЫБОР
				|		КОГДА ГТДИмпорт.КурсДокумента = 0
				|			ТОГДА 1
				|		ИНАЧЕ ГТДИмпорт.КурсДокумента
				|	КОНЕЦ КАК КурсДокумента,
				|	ВЫБОР
				|		КОГДА ГТДИмпорт.КратностьДокумента = 0
				|			ТОГДА 1
				|		ИНАЧЕ ГТДИмпорт.КратностьДокумента
				|	КОНЕЦ КАК КратностьДокумента,
				|	ДокументыГТД.НомерРаздела КАК НомерРаздела,
				|	ГТДИмпортРазделы.ПошлинаВВалюте КАК ПошлинаВВалюте,
				|	ГТДИмпортРазделы.НДСВВалюте КАК НДСВВалюте,
				|	ГТДИмпортРазделы.СтавкаНДС КАК СтавкаНДС,
				|	ВЫБОР
				|		КОГДА НЕ &СокращеннаяАналитика
				|			ТОГДА ГТДИмпорт.Контрагент
				|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
				|	КОНЕЦ КАК Контрагент
				|ПОМЕСТИТЬ ГТДСтавкиНДС
				|ИЗ
				|	ДокументыГТД КАК ДокументыГТД
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт КАК ГТДИмпорт
				|		ПО ДокументыГТД.ГТД = ГТДИмпорт.Ссылка
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
				|		ПО ДокументыГТД.ГТД = ГТДИмпортРазделы.Ссылка
				|			И ДокументыГТД.НомерРаздела = ГТДИмпортРазделы.НомерСтроки
				|ГДЕ
				|	ГТДИмпорт.Проведен = ИСТИНА
				|	И ГТДИмпорт.Дата <= &Период
				|	И ГТДИмпорт.Организация = &Организация
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ДокументыГТД.Номенклатура КАК Номенклатура,
				|	ДокументыГТД.Количество КАК Количество,
				|	ВЫБОР
				|		КОГДА ГТДСтавкиНДС.НДСВВалюте
				|			ТОГДА ДокументыГТД.СуммаНДС * ГТДСтавкиНДС.КурсВзаиморасчетов / ГТДСтавкиНДС.КратностьВзаиморасчетов
				|		ИНАЧЕ ДокументыГТД.СуммаНДС
				|	КОНЕЦ КАК СуммаНДС,
				|	ДокументыГТД.СчетУчетаНДС КАК СчетУчетаНДС,
				|	ДокументыГТД.ДокументПартии КАК ДокументПартии,
				|	ДокументыГТД.ГТД КАК ГТД,
				|	ДокументыГТД.НомерРаздела КАК НомерРаздела,
				|	ДокументыГТД.СуммаПошлины КАК СуммаПошлины,
				|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныеПлатежи) КАК ВидыЦенностей,
				|	ВЫБОР
				|		КОГДА ГТДСтавкиНДС.ПошлинаВВалюте
				|			ТОГДА ДокументыГТД.СуммаПошлины * ГТДСтавкиНДС.КурсВзаиморасчетов / ГТДСтавкиНДС.КратностьВзаиморасчетов
				|		ИНАЧЕ ДокументыГТД.СуммаПошлины
				|	КОНЕЦ + ДокументыГТД.СуммаБезНДС * ГТДСтавкиНДС.КурсДокумента / ГТДСтавкиНДС.КратностьДокумента КАК СуммаБезНДС,
				|	ГТДСтавкиНДС.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
				|	ГТДСтавкиНДС.СтавкаНДС КАК СтавкаНДС,
				|	ДокументыГТД.СчетУчета КАК СчетУчета,
				|	ГТДСтавкиНДС.Контрагент КАК Контрагент
				|ПОМЕСТИТЬ ПодгтовленныеГТД
				|ИЗ
				|	ДокументыГТД КАК ДокументыГТД
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ГТДСтавкиНДС КАК ГТДСтавкиНДС
				|		ПО ДокументыГТД.ГТД = ГТДСтавкиНДС.ГТД
				|			И ДокументыГТД.НомерРаздела = ГТДСтавкиНДС.НомерРаздела
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ЗаявлениеОВвозеТоваровТовары.Ссылка КАК СчетФактура,
				|	ЗаявлениеОВвозеТоваровТовары.Номенклатура КАК Номенклатура,
				|	СУММА(ЗаявлениеОВвозеТоваровТовары.Количество) КАК Количество,
				|	СУММА(0) КАК СуммаБезНДС,
				|	СУММА(ЗаявлениеОВвозеТоваровТовары.СуммаНДС) КАК СуммаНДС,
				|	ЗаявлениеОВвозеТоваровТовары.СтавкаНДС КАК СтавкаНДС,
				|	ЗаявлениеОВвозеТоваровТовары.СчетУчетаНДС КАК СчетУчетаНДС,
				|	ЗаявлениеОВвозеТоваровТовары.ДокументПартии КАК ДокументПоступления,
				|	ЗаявлениеОВвозеТоваровТовары.СчетУчета КАК СчетУчета,
				|	ВЫБОР
				|		КОГДА НЕ &СокращеннаяАналитика
				|			ТОГДА ЗаявлениеОВвозеТоваров.Контрагент
				|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
				|	КОНЕЦ КАК Контрагент
				|ПОМЕСТИТЬ ПодготовленныеЗаявленияОВвозеТоваров
				|ИЗ
				|	ОснованияДляДопРасходов КАК ОснованияДляДопРасходов
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеОВвозеТоваров.Товары КАК ЗаявлениеОВвозеТоваровТовары
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеОВвозеТоваров КАК ЗаявлениеОВвозеТоваров
				|			ПО ЗаявлениеОВвозеТоваровТовары.Ссылка = ЗаявлениеОВвозеТоваров.Ссылка
				|		ПО ОснованияДляДопРасходов.Партия = ЗаявлениеОВвозеТоваровТовары.ДокументПартии
				|			И ОснованияДляДопРасходов.Номенклатура = ЗаявлениеОВвозеТоваровТовары.Номенклатура
				|ГДЕ
				|	ЗаявлениеОВвозеТоваров.Дата <= &Период
				|	И ЗаявлениеОВвозеТоваров.Проведен = ИСТИНА
				|	И ЗаявлениеОВвозеТоваров.Организация = &Организация
				|
				|СГРУППИРОВАТЬ ПО
				|	ЗаявлениеОВвозеТоваровТовары.Номенклатура,
				|	ЗаявлениеОВвозеТоваровТовары.ДокументПартии,
				|	ЗаявлениеОВвозеТоваровТовары.Ссылка,
				|	ЗаявлениеОВвозеТоваровТовары.СчетУчетаНДС,
				|	ЗаявлениеОВвозеТоваровТовары.СтавкаНДС,
				|	ЗаявлениеОВвозеТоваровТовары.СчетУчета,
				|	ВЫБОР
				|		КОГДА НЕ &СокращеннаяАналитика
				|			ТОГДА ЗаявлениеОВвозеТоваров.Контрагент
				|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
				|	КОНЕЦ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПодгтовленныеГТД.Номенклатура КАК Номенклатура,
				|	ПодгтовленныеГТД.Количество КАК Количество,
				|	ПодгтовленныеГТД.СуммаНДС КАК СуммаНДС,
				|	ПодгтовленныеГТД.СчетУчетаНДС КАК СчетУчетаНДС,
				|	ПодгтовленныеГТД.ДокументПартии КАК ДокументПоступления,
				|	ПодгтовленныеГТД.ГТД КАК СчетФактура,
				|	ПодгтовленныеГТД.ВидыЦенностей КАК ВидЦенности,
				|	ПодгтовленныеГТД.СуммаБезНДС КАК СуммаБезНДС,
				|	ВЫБОР
				|		КОГДА ПодгтовленныеГТД.НДСВключенВСтоимость
				|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.УчитываетсяВCтоимости)
				|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.ПринимаетсяКВычету)
				|	КОНЕЦ КАК СпособУчетаНДС,
				|	ПодгтовленныеГТД.СтавкаНДС КАК СтавкаНДС,
				|	ПодгтовленныеГТД.СчетУчета КАК СчетУчета,
				|	ПодгтовленныеГТД.Контрагент КАК Контрагент
				|ИЗ
				|	ПодгтовленныеГТД КАК ПодгтовленныеГТД
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ПодготовленныеДопРасходы.Номенклатура,
				|	ПодготовленныеДопРасходы.Количество,
				|	ПодготовленныеДопРасходы.ИтоговаяСуммаНДС,
				|	ПодготовленныеДопРасходы.СчетУчетаНДС,
				|	ПодготовленныеДопРасходы.Поступление,
				|	ПодготовленныеДопРасходы.ДопРасходы,
				|	ПодготовленныеДопРасходы.ВидыЦенностей,
				|	ПодготовленныеДопРасходы.ИтоговаяСуммаБезНДС,
				|	ВЫБОР
				|		КОГДА ПодготовленныеДопРасходы.НДСВключенВСтоимость
				|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.УчитываетсяВCтоимости)
				|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.ПринимаетсяКВычету)
				|	КОНЕЦ,
				|	ПодготовленныеДопРасходы.СтавкаНДС,
				|	ПодготовленныеДопРасходы.СчетУчета,
				|	ПодготовленныеДопРасходы.Контрагент
				|ИЗ
				|	ПодготовленныеДопРасходы КАК ПодготовленныеДопРасходы
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ПодготовленныеЗаявленияОВвозеТоваров.Номенклатура,
				|	ПодготовленныеЗаявленияОВвозеТоваров.Количество,
				|	ПодготовленныеЗаявленияОВвозеТоваров.СуммаНДС,
				|	ПодготовленныеЗаявленияОВвозеТоваров.СчетУчетаНДС,
				|	ПодготовленныеЗаявленияОВвозеТоваров.ДокументПоступления,
				|	ПодготовленныеЗаявленияОВвозеТоваров.СчетФактура,
				|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныйСоюз),
				|	ПодготовленныеЗаявленияОВвозеТоваров.СуммаБезНДС,
				|	ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.ПринимаетсяКВычету),
				|	ПодготовленныеЗаявленияОВвозеТоваров.СтавкаНДС,
				|	ПодготовленныеЗаявленияОВвозеТоваров.СчетУчета,
				|	ПодготовленныеЗаявленияОВвозеТоваров.Контрагент
				|ИЗ
				|	ПодготовленныеЗаявленияОВвозеТоваров КАК ПодготовленныеЗаявленияОВвозеТоваров
				|
				|УПОРЯДОЧИТЬ ПО
				|	Номенклатура,
				|	ДокументПоступления
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	КорректировкаПоступления.Ссылка КАК Партия,
				|	КорректировкаПоступления.СуммаВключаетНДС КАК СуммаВключаетНДС,
				|	КорректировкаПоступления.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
				|	КорректировкаПоступления.ВалютаДокумента КАК ВалютаДокумента,
				|	КорректировкаПоступления.Дата КАК Дата,
				|	КорректировкаПоступления.ИсправляемыйДокументПоступления КАК ИсправляемыйДокументПоступления,
				|	КорректировкаПоступления.Контрагент КАК Контрагент
				|ПОМЕСТИТЬ КорректировочныеДокументы
				|ИЗ
				|	ДокументыПартий КАК ДокументыПартий
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления КАК КорректировкаПоступления
				|		ПО ДокументыПартий.Партия = КорректировкаПоступления.Ссылка
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПоступлениеТоваровУслуг.Ссылка КАК Партия,
				|	ВЫБОР
				|		КОГДА ПоступлениеТоваровУслуг.НДСВключенВСтоимость
				|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.УчитываетсяВCтоимости)
				|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.ПринимаетсяКВычету)
				|	КОНЕЦ КАК СпособыУчетаНДС,
				|	ПоступлениеТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
				|	ДокументыПартий.Номенклатура КАК Номенклатура,
				|	ВЫБОР
				|		КОГДА НЕ &СокращеннаяАналитика
				|			ТОГДА ПоступлениеТоваровУслуг.Контрагент
				|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
				|	КОНЕЦ КАК Контрагент
				|ПОМЕСТИТЬ ДокументыПТУ
				|ИЗ
				|	ДокументыПартий КАК ДокументыПартий
				|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
				|		ПО ДокументыПартий.Партия = ПоступлениеТоваровУслуг.Ссылка
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	РублевыеСуммыДокументовВВалюте.НДС КАК НДС,
				|	РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДС,
				|	РублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
				|	РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента
				|ПОМЕСТИТЬ РублевыеСуммыПоКорректировкамПослеИзменения
				|ИЗ
				|	КорректировочныеДокументы КАК КорректировочныеДокументы
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
				|		ПО КорректировочныеДокументы.Партия = РублевыеСуммыДокументовВВалюте.Регистратор
				|ГДЕ
				|	(РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары)
				|			ИЛИ РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента ЕСТЬ NULL)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	РублевыеСуммыДокументовВВалюте.НДС + РублевыеСуммыПоКорректировкамПослеИзменения.НДС КАК СуммаНДС,
				|	РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
				|	РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС + РублевыеСуммыПоКорректировкамПослеИзменения.НалоговаяБазаНДС КАК СуммаБезНДС,
				|	РублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор
				|ПОМЕСТИТЬ РублевыеСуммыДляКорректировокПоступления
				|ИЗ
				|	КорректировочныеДокументы КАК КорректировочныеДокументы
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РублевыеСуммыПоКорректировкамПослеИзменения КАК РублевыеСуммыПоКорректировкамПослеИзменения
				|			ПО РублевыеСуммыДокументовВВалюте.Регистратор = РублевыеСуммыПоКорректировкамПослеИзменения.Регистратор
				|				И РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента = РублевыеСуммыПоКорректировкамПослеИзменения.НомерСтрокиДокумента
				|		ПО КорректировочныеДокументы.Партия = РублевыеСуммыДокументовВВалюте.Регистратор
				|ГДЕ
				|	(РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ТоварыДоИзменения)
				|			ИЛИ РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента ЕСТЬ NULL)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ДокументыПТУ.Партия КАК СчетФактура,
				|	ДокументыПТУ.СпособыУчетаНДС КАК СпособыУчетаНДС,
				|	ДокументыПТУ.Номенклатура КАК Номенклатура,
				|	ПоступлениеТоваровУслугОборудование.Количество КАК Количество,
				|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, ВЫБОР
				|			КОГДА ДокументыПТУ.СуммаВключаетНДС
				|				ТОГДА ПоступлениеТоваровУслугОборудование.Сумма - ПоступлениеТоваровУслугОборудование.СуммаНДС
				|			ИНАЧЕ ПоступлениеТоваровУслугОборудование.Сумма
				|		КОНЕЦ) КАК СуммаБезНДС,
				|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НДС, ПоступлениеТоваровУслугОборудование.СуммаНДС) КАК СуммаНДС,
				|	ПоступлениеТоваровУслугОборудование.СтавкаНДС КАК СтавкаНДС,
				|	ПоступлениеТоваровУслугОборудование.СчетУчетаНДС КАК СчетУчетаНДС,
				|	ДокументыПТУ.Партия КАК ДокументПоступления,
				|	НЕОПРЕДЕЛЕНО КАК ВидЦенности,
				|	ПоступлениеТоваровУслугОборудование.СчетУчета КАК СчетУчета,
				|	ДокументыПТУ.Контрагент КАК Контрагент
				|ПОМЕСТИТЬ СуммыПоНДС
				|ИЗ
				|	ДокументыПТУ КАК ДокументыПТУ
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Оборудование КАК ПоступлениеТоваровУслугОборудование
				|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
				|			ПО ПоступлениеТоваровУслугОборудование.Ссылка = РублевыеСуммыДокументовВВалюте.Регистратор
				|				И ПоступлениеТоваровУслугОборудование.НомерСтроки = РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
				|		ПО ДокументыПТУ.Партия = ПоступлениеТоваровУслугОборудование.Ссылка
				|			И ДокументыПТУ.Номенклатура = ПоступлениеТоваровУслугОборудование.Номенклатура
				|ГДЕ
				|	(РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Оборудование)
				|			ИЛИ РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента ЕСТЬ NULL)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ДокументыПТУ.Партия,
				|	ДокументыПТУ.СпособыУчетаНДС,
				|	ДокументыПТУ.Номенклатура,
				|	0,
				|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, ВЫБОР
				|			КОГДА ДокументыПТУ.СуммаВключаетНДС
				|				ТОГДА ПоступлениеТоваровУслугОбъектыСтроительства.Сумма - ПоступлениеТоваровУслугОбъектыСтроительства.СуммаНДС
				|			ИНАЧЕ ПоступлениеТоваровУслугОбъектыСтроительства.Сумма
				|		КОНЕЦ),
				|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НДС, ПоступлениеТоваровУслугОбъектыСтроительства.СуммаНДС),
				|	ПоступлениеТоваровУслугОбъектыСтроительства.СтавкаНДС,
				|	ПоступлениеТоваровУслугОбъектыСтроительства.СчетУчетаНДС,
				|	ДокументыПТУ.Партия,
				|	НЕОПРЕДЕЛЕНО,
				|	ПоступлениеТоваровУслугОбъектыСтроительства.СчетУчета,
				|	ДокументыПТУ.Контрагент
				|ИЗ
				|	ДокументыПТУ КАК ДокументыПТУ
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.ОбъектыСтроительства КАК ПоступлениеТоваровУслугОбъектыСтроительства
				|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
				|			ПО ПоступлениеТоваровУслугОбъектыСтроительства.Ссылка = РублевыеСуммыДокументовВВалюте.Регистратор
				|				И ПоступлениеТоваровУслугОбъектыСтроительства.НомерСтроки = РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
				|		ПО ДокументыПТУ.Партия = ПоступлениеТоваровУслугОбъектыСтроительства.Ссылка
				|			И ДокументыПТУ.Номенклатура = ПоступлениеТоваровУслугОбъектыСтроительства.ОбъектСтроительства
				|ГДЕ
				|	(РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ОбъектыСтроительства)
				|			ИЛИ РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента ЕСТЬ NULL)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ДокументыПТУ.Партия,
				|	ДокументыПТУ.СпособыУчетаНДС,
				|	ДокументыПТУ.Номенклатура,
				|	ПоступлениеТоваровУслугТовары.Количество,
				|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, ВЫБОР
				|			КОГДА ДокументыПТУ.СуммаВключаетНДС
				|				ТОГДА ПоступлениеТоваровУслугТовары.Сумма - ПоступлениеТоваровУслугТовары.СуммаНДС
				|			ИНАЧЕ ПоступлениеТоваровУслугТовары.Сумма
				|		КОНЕЦ),
				|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НДС, ПоступлениеТоваровУслугТовары.СуммаНДС),
				|	ПоступлениеТоваровУслугТовары.СтавкаНДС,
				|	ПоступлениеТоваровУслугТовары.СчетУчетаНДС,
				|	ДокументыПТУ.Партия,
				|	НЕОПРЕДЕЛЕНО,
				|	ПоступлениеТоваровУслугТовары.СчетУчета,
				|	ДокументыПТУ.Контрагент
				|ИЗ
				|	ДокументыПТУ КАК ДокументыПТУ
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
				|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
				|			ПО ПоступлениеТоваровУслугТовары.Ссылка = РублевыеСуммыДокументовВВалюте.Регистратор
				|				И ПоступлениеТоваровУслугТовары.НомерСтроки = РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
				|		ПО ДокументыПТУ.Партия = ПоступлениеТоваровУслугТовары.Ссылка
				|			И ДокументыПТУ.Номенклатура = ПоступлениеТоваровУслугТовары.Номенклатура
				|ГДЕ
				|	(РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары)
				|			ИЛИ РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента ЕСТЬ NULL)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ДокументыПТУ.Партия,
				|	ДокументыПТУ.СпособыУчетаНДС,
				|	ДокументыПТУ.Номенклатура,
				|	0,
				|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, ВЫБОР
				|			КОГДА ДокументыПТУ.СуммаВключаетНДС
				|				ТОГДА ПоступлениеТоваровУслугОсновныеСредства.Сумма - ПоступлениеТоваровУслугОсновныеСредства.СуммаНДС
				|			ИНАЧЕ ПоступлениеТоваровУслугОсновныеСредства.Сумма
				|		КОНЕЦ),
				|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НДС, ПоступлениеТоваровУслугОсновныеСредства.СуммаНДС),
				|	ПоступлениеТоваровУслугОсновныеСредства.СтавкаНДС,
				|	ПоступлениеТоваровУслугОсновныеСредства.СчетУчетаНДС,
				|	ДокументыПТУ.Партия,
				|	НЕОПРЕДЕЛЕНО,
				|	ПоступлениеТоваровУслугОсновныеСредства.СчетУчета,
				|	ДокументыПТУ.Контрагент
				|ИЗ
				|	ДокументыПТУ КАК ДокументыПТУ
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.ОсновныеСредства КАК ПоступлениеТоваровУслугОсновныеСредства
				|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
				|			ПО ПоступлениеТоваровУслугОсновныеСредства.Ссылка = РублевыеСуммыДокументовВВалюте.Регистратор
				|				И ПоступлениеТоваровУслугОсновныеСредства.НомерСтроки = РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
				|		ПО ДокументыПТУ.Партия = ПоступлениеТоваровУслугОсновныеСредства.Ссылка
				|			И ДокументыПТУ.Номенклатура = ПоступлениеТоваровУслугОсновныеСредства.ОсновноеСредство
				|ГДЕ
				|	(РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ОсновныеСредства)
				|			ИЛИ РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента ЕСТЬ NULL)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ДокументыПартий.Партия,
				|	ВЫБОР
				|		КОГДА АвансовыйОтчетТовары.ПредъявленСФ
				|			ТОГДА ВЫБОР
				|					КОГДА АвансовыйОтчет.НДСВключенВСтоимость
				|						ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.УчитываетсяВCтоимости)
				|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.ПринимаетсяКВычету)
				|				КОНЕЦ
				|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.Распределен)
				|	КОНЕЦ,
				|	ДокументыПартий.Номенклатура,
				|	АвансовыйОтчетТовары.Количество,
				|	ВЫБОР
				|		КОГДА АвансовыйОтчетТовары.ПредъявленСФ
				|			ТОГДА ВЫБОР
				|					КОГДА АвансовыйОтчет.СуммаВключаетНДС
				|						ТОГДА (АвансовыйОтчетТовары.Сумма - АвансовыйОтчетТовары.СуммаНДС) * ВЫБОР
				|								КОГДА АвансовыйОтчет.КурсДокумента = 0
				|									ТОГДА 1
				|								ИНАЧЕ АвансовыйОтчет.КурсДокумента
				|							КОНЕЦ / ВЫБОР
				|								КОГДА АвансовыйОтчет.КратностьДокумента = 0
				|									ТОГДА 1
				|								ИНАЧЕ АвансовыйОтчет.КратностьДокумента
				|							КОНЕЦ
				|					ИНАЧЕ АвансовыйОтчетТовары.Сумма * ВЫБОР
				|							КОГДА АвансовыйОтчет.КурсДокумента = 0
				|								ТОГДА 1
				|							ИНАЧЕ АвансовыйОтчет.КурсДокумента
				|						КОНЕЦ / ВЫБОР
				|							КОГДА АвансовыйОтчет.КратностьДокумента = 0
				|								ТОГДА 1
				|							ИНАЧЕ АвансовыйОтчет.КратностьДокумента
				|						КОНЕЦ
				|				КОНЕЦ
				|		ИНАЧЕ 0
				|	КОНЕЦ,
				|	ВЫБОР
				|		КОГДА АвансовыйОтчетТовары.ПредъявленСФ
				|			ТОГДА АвансовыйОтчетТовары.СуммаНДС * ВЫБОР
				|					КОГДА АвансовыйОтчет.КурсДокумента = 0
				|						ТОГДА 1
				|					ИНАЧЕ АвансовыйОтчет.КурсДокумента
				|				КОНЕЦ / ВЫБОР
				|					КОГДА АвансовыйОтчет.КратностьДокумента = 0
				|						ТОГДА 1
				|					ИНАЧЕ АвансовыйОтчет.КратностьДокумента
				|				КОНЕЦ
				|		ИНАЧЕ 0
				|	КОНЕЦ,
				|	АвансовыйОтчетТовары.СтавкаНДС,
				|	АвансовыйОтчетТовары.СчетУчетаНДС,
				|	ВЫБОР
				|		КОГДА АвансовыйОтчетТовары.ПредъявленСФ
				|			ТОГДА АвансовыйОтчетТовары.СчетФактура
				|		ИНАЧЕ ДокументыПартий.Партия
				|	КОНЕЦ,
				|	НЕОПРЕДЕЛЕНО,
				|	АвансовыйОтчетТовары.СчетУчета,
				|	ВЫБОР
				|		КОГДА НЕ &СокращеннаяАналитика
				|			ТОГДА АвансовыйОтчетТовары.Поставщик
				|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
				|	КОНЕЦ
				|ИЗ
				|	ДокументыПартий КАК ДокументыПартий
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.Товары КАК АвансовыйОтчетТовары
				|		ПО ДокументыПартий.Партия = АвансовыйОтчетТовары.Ссылка
				|			И ДокументыПартий.Номенклатура = АвансовыйОтчетТовары.Номенклатура
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет КАК АвансовыйОтчет
				|		ПО ДокументыПартий.Партия = АвансовыйОтчет.Ссылка
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ДокументыПартий.Партия,
				|	ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.ПринимаетсяКВычету),
				|	ДокументыПартий.Номенклатура,
				|	ВозвратТоваровОтПокупателяТовары.Количество,
				|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, ВЫБОР
				|			КОГДА ВозвратТоваровОтПокупателя.СуммаВключаетНДС
				|				ТОГДА ВозвратТоваровОтПокупателяТовары.Сумма - ВозвратТоваровОтПокупателяТовары.СуммаНДС
				|			ИНАЧЕ ВозвратТоваровОтПокупателяТовары.Сумма
				|		КОНЕЦ),
				|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НДС, ВозвратТоваровОтПокупателяТовары.СуммаНДС),
				|	ВозвратТоваровОтПокупателяТовары.СтавкаНДС,
				|	&СчетНДС,
				|	ДокументыПартий.Партия,
				|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат),
				|	ВозвратТоваровОтПокупателяТовары.СчетУчета,
				|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
				|ИЗ
				|	ДокументыПартий КАК ДокументыПартий
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
				|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
				|			ПО ВозвратТоваровОтПокупателяТовары.Ссылка = РублевыеСуммыДокументовВВалюте.Регистратор
				|				И ВозвратТоваровОтПокупателяТовары.НомерСтроки = РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
				|		ПО ДокументыПартий.Партия = ВозвратТоваровОтПокупателяТовары.Ссылка
				|			И ДокументыПартий.Номенклатура = ВозвратТоваровОтПокупателяТовары.Номенклатура
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
				|		ПО ДокументыПартий.Партия = ВозвратТоваровОтПокупателя.Ссылка
				|ГДЕ
				|	(РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары)
				|			ИЛИ РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента ЕСТЬ NULL)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ДокументыПартий.Партия,
				|	ВЫБОР
				|		КОГДА КорректировочныеДокументы.НДСВключенВСтоимость
				|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.УчитываетсяВCтоимости)
				|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.ПринимаетсяКВычету)
				|	КОНЕЦ,
				|	ДокументыПартий.Номенклатура,
				|	КорректировкаПоступленияТовары.Количество - КорректировкаПоступленияТовары.КоличествоДоИзменения,
				|	ЕСТЬNULL(РублевыеСуммыДляКорректировокПоступления.СуммаБезНДС, ВЫБОР
				|			КОГДА КорректировочныеДокументы.СуммаВключаетНДС
				|				ТОГДА КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаДоИзменения - (КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаДоИзменения)
				|			ИНАЧЕ КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаДоИзменения
				|		КОНЕЦ),
				|	ЕСТЬNULL(РублевыеСуммыДляКорректировокПоступления.СуммаНДС, КорректировкаПоступленияТовары.СуммаНДС - КорректировкаПоступленияТовары.СуммаНДСДоИзменения),
				|	КорректировкаПоступленияТовары.СтавкаНДС,
				|	КорректировкаПоступленияТовары.СчетУчетаНДС,
				|	КорректировочныеДокументы.ИсправляемыйДокументПоступления,
				|	НЕОПРЕДЕЛЕНО,
				|	КорректировкаПоступленияТовары.СчетУчета,
				|	ВЫБОР
				|		КОГДА НЕ &СокращеннаяАналитика
				|			ТОГДА КорректировкаПоступленияТовары.Контрагент
				|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
				|	КОНЕЦ
				|ИЗ
				|	ДокументыПартий КАК ДокументыПартий
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления.Товары КАК КорректировкаПоступленияТовары
				|			ЛЕВОЕ СОЕДИНЕНИЕ РублевыеСуммыДляКорректировокПоступления КАК РублевыеСуммыДляКорректировокПоступления
				|			ПО КорректировкаПоступленияТовары.Ссылка = РублевыеСуммыДляКорректировокПоступления.Регистратор
				|				И КорректировкаПоступленияТовары.НомерСтроки = РублевыеСуммыДляКорректировокПоступления.НомерСтрокиДокумента
				|		ПО ДокументыПартий.Партия = КорректировкаПоступленияТовары.Ссылка
				|			И ДокументыПартий.Номенклатура = КорректировкаПоступленияТовары.Номенклатура
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КорректировочныеДокументы КАК КорректировочныеДокументы
				|		ПО ДокументыПартий.Партия = КорректировочныеДокументы.Партия
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ДокументыПартий.Партия,
				|	ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.ПринимаетсяКВычету),
				|	ДокументыПартий.Номенклатура,
				|	ПоступлениеВЛизингПредметыЛизинга.Количество,
				|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, ВЫБОР
				|			КОГДА ПоступлениеВЛизинг.СуммаВключаетНДС
				|				ТОГДА ПоступлениеВЛизингПредметыЛизинга.Сумма - ПоступлениеВЛизингПредметыЛизинга.СуммаНДС
				|			ИНАЧЕ ПоступлениеВЛизингПредметыЛизинга.Сумма
				|		КОНЕЦ),
				|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НДС, ПоступлениеВЛизингПредметыЛизинга.СуммаНДС),
				|	ПоступлениеВЛизингПредметыЛизинга.СтавкаНДС,
				|	ПоступлениеВЛизингПредметыЛизинга.СчетУчетаНДС,
				|	ДокументыПартий.Партия,
				|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
				|	НЕОПРЕДЕЛЕНО,
				|	ВЫБОР
				|		КОГДА НЕ &СокращеннаяАналитика
				|			ТОГДА ПоступлениеВЛизинг.Контрагент
				|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
				|	КОНЕЦ
				|ИЗ
				|	ДокументыПартий КАК ДокументыПартий
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеВЛизинг.ПредметыЛизинга КАК ПоступлениеВЛизингПредметыЛизинга
				|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
				|			ПО ПоступлениеВЛизингПредметыЛизинга.Ссылка = РублевыеСуммыДокументовВВалюте.Регистратор
				|				И ПоступлениеВЛизингПредметыЛизинга.НомерСтроки = РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
				|		ПО ДокументыПартий.Партия = ПоступлениеВЛизингПредметыЛизинга.Ссылка
				|			И ДокументыПартий.Номенклатура = ПоступлениеВЛизингПредметыЛизинга.Номенклатура
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеВЛизинг КАК ПоступлениеВЛизинг
				|		ПО ДокументыПартий.Партия = ПоступлениеВЛизинг.Ссылка
				|ГДЕ
				|	(РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ПредметыЛизинга)
				|			ИЛИ РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента ЕСТЬ NULL)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ДокументыПартий.Партия,
				|	ВЫБОР
				|		КОГДА ПоступлениеНМА.НДСВключенВСтоимость
				|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.УчитываетсяВCтоимости)
				|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.ПринимаетсяКВычету)
				|	КОНЕЦ,
				|	ДокументыПартий.Номенклатура,
				|	0,
				|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, ВЫБОР
				|			КОГДА ПоступлениеНМА.СуммаВключаетНДС
				|				ТОГДА ПоступлениеНМАНематериальныеАктивы.Сумма - ПоступлениеНМАНематериальныеАктивы.СуммаНДС
				|			ИНАЧЕ ПоступлениеНМАНематериальныеАктивы.Сумма
				|		КОНЕЦ),
				|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НДС, ПоступлениеНМАНематериальныеАктивы.СуммаНДС),
				|	ПоступлениеНМАНематериальныеАктивы.СтавкаНДС,
				|	ПоступлениеНМАНематериальныеАктивы.СчетУчетаНДС,
				|	ДокументыПартий.Партия,
				|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА),
				|	НЕОПРЕДЕЛЕНО,
				|	ВЫБОР
				|		КОГДА НЕ &СокращеннаяАналитика
				|			ТОГДА ПоступлениеНМА.Контрагент
				|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
				|	КОНЕЦ
				|ИЗ
				|	ДокументыПартий КАК ДокументыПартий
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеНМА.НематериальныеАктивы КАК ПоступлениеНМАНематериальныеАктивы
				|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
				|			ПО ПоступлениеНМАНематериальныеАктивы.Ссылка = РублевыеСуммыДокументовВВалюте.Регистратор
				|				И ПоступлениеНМАНематериальныеАктивы.НомерСтроки = РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
				|		ПО ДокументыПартий.Партия = ПоступлениеНМАНематериальныеАктивы.Ссылка
				|			И ДокументыПартий.Номенклатура = ПоступлениеНМАНематериальныеАктивы.НематериальныйАктив
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеНМА КАК ПоступлениеНМА
				|		ПО ДокументыПартий.Партия = ПоступлениеНМА.Ссылка
				|ГДЕ
				|	(РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.НематериальныеАктивы)
				|			ИЛИ РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента ЕСТЬ NULL)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ДокументыПТУ.Партия,
				|	ДокументыПТУ.СпособыУчетаНДС,
				|	ДокументыПТУ.Номенклатура,
				|	0,
				|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, ВЫБОР
				|			КОГДА ДокументыПТУ.СуммаВключаетНДС
				|				ТОГДА ПоступлениеТоваровУслугУслуги.Сумма - ПоступлениеТоваровУслугУслуги.СуммаНДС
				|			ИНАЧЕ ПоступлениеТоваровУслугУслуги.Сумма
				|		КОНЕЦ),
				|	ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НДС, ПоступлениеТоваровУслугУслуги.СуммаНДС),
				|	ПоступлениеТоваровУслугУслуги.СтавкаНДС,
				|	ПоступлениеТоваровУслугУслуги.СчетУчетаНДС,
				|	ДокументыПТУ.Партия,
				|	НЕОПРЕДЕЛЕНО,
				|	ПоступлениеТоваровУслугУслуги.СчетЗатрат,
				|	ДокументыПТУ.Контрагент
				|ИЗ
				|	ДокументыПТУ КАК ДокументыПТУ
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
				|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
				|			ПО ПоступлениеТоваровУслугУслуги.Ссылка = РублевыеСуммыДокументовВВалюте.Регистратор
				|				И ПоступлениеТоваровУслугУслуги.НомерСтроки = РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
				|		ПО ДокументыПТУ.Партия = ПоступлениеТоваровУслугУслуги.Ссылка
				|			И ДокументыПТУ.Номенклатура = ПоступлениеТоваровУслугУслуги.Субконто1
				|ГДЕ
				|	(РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги)
				|			ИЛИ РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента ЕСТЬ NULL)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	СуммыПоНДС.СпособыУчетаНДС КАК СпособУчетаНДС,
				|	СуммыПоНДС.Номенклатура КАК Номенклатура,
				|	СУММА(СуммыПоНДС.Количество) КАК Количество,
				|	СУММА(СуммыПоНДС.СуммаБезНДС) КАК СуммаБезНДС,
				|	СУММА(СуммыПоНДС.СуммаНДС) КАК СуммаНДС,
				|	СуммыПоНДС.СтавкаНДС КАК СтавкаНДС,
				|	СуммыПоНДС.СчетУчетаНДС КАК СчетУчетаНДС,
				|	СуммыПоНДС.ДокументПоступления КАК ДокументПоступления,
				|	СуммыПоНДС.ВидЦенности КАК ВидЦенности,
				|	СуммыПоНДС.СчетФактура КАК СчетФактура,
				|	СуммыПоНДС.СчетУчета КАК СчетУчета,
				|	СуммыПоНДС.Контрагент КАК Контрагент
				|ИЗ
				|	СуммыПоНДС КАК СуммыПоНДС
				|
				|СГРУППИРОВАТЬ ПО
				|	СуммыПоНДС.Номенклатура,
				|	СуммыПоНДС.СпособыУчетаНДС,
				|	СуммыПоНДС.СтавкаНДС,
				|	СуммыПоНДС.СчетУчетаНДС,
				|	СуммыПоНДС.ДокументПоступления,
				|	СуммыПоНДС.ВидЦенности,
				|	СуммыПоНДС.СчетФактура,
				|	СуммыПоНДС.СчетУчета,
				|	СуммыПоНДС.Контрагент
				|
				|УПОРЯДОЧИТЬ ПО
				|	Номенклатура,
				|	ДокументПоступления
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	АвансовыеОтчетыКакРасходы.ДокАвансовыйОтчет КАК ДокАвансовыйОтчет,
				|	АвансовыеОтчетыКакРасходы.ОбъектУчета КАК Номенклатура,
				|	АвансовыеОтчетыКакРасходы.СчетУчета КАК СчетУчета,
				|	АвансовыйОтчетПрочее.СтавкаНДС КАК СтавкаНДС,
				|	АвансовыйОтчетПрочее.СчетУчетаНДС КАК СчетУчетаНДС,
				|	СУММА(ВЫБОР
				|			КОГДА АвансовыйОтчетПрочее.ПредъявленСФ
				|				ТОГДА ВЫБОР
				|						КОГДА АвансовыйОтчет.СуммаВключаетНДС
				|							ТОГДА (АвансовыйОтчетПрочее.Сумма - АвансовыйОтчетПрочее.СуммаНДС) * ВЫБОР
				|									КОГДА АвансовыйОтчет.КурсДокумента = 0
				|										ТОГДА 1
				|									ИНАЧЕ АвансовыйОтчет.КурсДокумента
				|								КОНЕЦ / ВЫБОР
				|									КОГДА АвансовыйОтчет.КратностьДокумента = 0
				|										ТОГДА 1
				|									ИНАЧЕ АвансовыйОтчет.КратностьДокумента
				|								КОНЕЦ
				|						ИНАЧЕ АвансовыйОтчетПрочее.Сумма * ВЫБОР
				|								КОГДА АвансовыйОтчет.КурсДокумента = 0
				|									ТОГДА 1
				|								ИНАЧЕ АвансовыйОтчет.КурсДокумента
				|							КОНЕЦ / ВЫБОР
				|								КОГДА АвансовыйОтчет.КратностьДокумента = 0
				|									ТОГДА 1
				|								ИНАЧЕ АвансовыйОтчет.КратностьДокумента
				|							КОНЕЦ
				|					КОНЕЦ
				|			ИНАЧЕ 0
				|		КОНЕЦ) КАК СуммаБезНДС,
				|	СУММА(ВЫБОР
				|			КОГДА АвансовыйОтчетПрочее.ПредъявленСФ
				|				ТОГДА АвансовыйОтчетПрочее.СуммаНДС * ВЫБОР
				|						КОГДА АвансовыйОтчет.КурсДокумента = 0
				|							ТОГДА 1
				|						ИНАЧЕ АвансовыйОтчет.КурсДокумента
				|					КОНЕЦ / ВЫБОР
				|						КОГДА АвансовыйОтчет.КратностьДокумента = 0
				|							ТОГДА 1
				|						ИНАЧЕ АвансовыйОтчет.КратностьДокумента
				|					КОНЕЦ
				|			ИНАЧЕ 0
				|		КОНЕЦ) КАК СуммаНДС,
				|	АвансовыйОтчетПрочее.Субконто2 КАК Субконто2,
				|	АвансовыйОтчетПрочее.Субконто3 КАК Субконто3,
				|	ВЫБОР
				|		КОГДА АвансовыйОтчетПрочее.ПредъявленСФ
				|			ТОГДА АвансовыйОтчетПрочее.СчетФактура
				|		ИНАЧЕ АвансовыеОтчетыКакРасходы.ДокАвансовыйОтчет
				|	КОНЕЦ КАК СчетФактура,
				|	НЕОПРЕДЕЛЕНО КАК ВидЦенности,
				|	ВЫБОР
				|		КОГДА НЕ &СокращеннаяАналитика
				|			ТОГДА АвансовыйОтчетПрочее.Поставщик
				|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
				|	КОНЕЦ КАК Контрагент
				|ИЗ
				|	АвансовыеОтчетыКакРасходы КАК АвансовыеОтчетыКакРасходы
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет КАК АвансовыйОтчет
				|		ПО АвансовыеОтчетыКакРасходы.ДокАвансовыйОтчет = АвансовыйОтчет.Ссылка
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.Прочее КАК АвансовыйОтчетПрочее
				|		ПО АвансовыеОтчетыКакРасходы.ДокАвансовыйОтчет = АвансовыйОтчетПрочее.Ссылка
				|			И АвансовыеОтчетыКакРасходы.ОбъектУчета = АвансовыйОтчетПрочее.Субконто1
				|			И АвансовыеОтчетыКакРасходы.СчетУчета = АвансовыйОтчетПрочее.СчетЗатрат
				|
				|СГРУППИРОВАТЬ ПО
				|	АвансовыеОтчетыКакРасходы.ОбъектУчета,
				|	АвансовыеОтчетыКакРасходы.ДокАвансовыйОтчет,
				|	АвансовыйОтчетПрочее.СтавкаНДС,
				|	АвансовыеОтчетыКакРасходы.СчетУчета,
				|	АвансовыйОтчетПрочее.СчетУчетаНДС,
				|	АвансовыйОтчетПрочее.Субконто3,
				|	АвансовыйОтчетПрочее.Субконто2,
				|	ВЫБОР
				|		КОГДА АвансовыйОтчетПрочее.ПредъявленСФ
				|			ТОГДА АвансовыйОтчетПрочее.СчетФактура
				|		ИНАЧЕ АвансовыеОтчетыКакРасходы.ДокАвансовыйОтчет
				|	КОНЕЦ,
				|	ВЫБОР
				|		КОГДА НЕ &СокращеннаяАналитика
				|			ТОГДА АвансовыйОтчетПрочее.Поставщик
				|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
				|	КОНЕЦ
				|
				|УПОРЯДОЧИТЬ ПО
				|	Номенклатура,
				|	ДокАвансовыйОтчет";
	

	ОписаниеПараметровЗапроса = Запрос.НайтиПараметры();
	Для каждого Параметр Из ОписаниеПараметровЗапроса Цикл
		Запрос.УстановитьПараметр(Параметр.Имя, СтруктураПараметровДляПолученияНДС[Параметр.Имя]);
	КонецЦикла;

	Результат = Запрос.ВыполнитьПакет();
	
	Возврат Результат;
	
КонецФункции

Функция ОстаткиПоСчетамКапВложений(СтруктураПараметров)
	
	ВедетсяСкладскойУчет  		 = СтруктураПараметров.ВестиСкладскойУчет;
	ВедетсяПартионныйУчет 		 = СтруктураПараметров.ВестиПартионныйУчет; 
	ВедетсяСуммовойУчетПоСкладам = СтруктураПараметров.ВедетсяСуммовойУчетПоСкладам;
	
	ВидыСубконтоНПС = Новый Массив;
	ВидыСубконтоНПС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Если ВедетсяПартионныйУчет Тогда 
		ВидыСубконтоНПС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии);
	КонецЕсли;
	Если ВедетсяСкладскойУчет Тогда 	
		ВидыСубконтоНПС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
		
	ВидыСубконтоНП = Новый Массив;
	ВидыСубконтоНП.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Если ВедетсяПартионныйУчет Тогда 
		ВидыСубконтоНП.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии);
	КонецЕсли;
	Если ВедетсяСуммовойУчетПоСкладам Тогда
		ВидыСубконтоНП.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
	
	
	ПланСчетов = ПланыСчетов.Хозрасчетный;
	
	// Массив счетов, по которым ведется только суммовой учет	
	ПредопределенныйСчетУчетаКапвложений = Новый Массив;
	ПредопределенныйСчетУчетаКапвложений.Добавить(ПланСчетов.ВложенияВоВнеоборотныеАктивы);                    // 08
	СчетаВложений = БухгалтерскийУчет.СформироватьМассивСубсчетов(ПредопределенныйСчетУчетаКапвложений);
	
	ПредопределенныеИсключаемыеСчетаВложений = Новый Массив;
	ПредопределенныеИсключаемыеСчетаВложений.Добавить(ПланСчетов.ПриобретениеКомпонентовОсновныхСредств);     // 08.04.1 
	ПредопределенныеИсключаемыеСчетаВложений.Добавить(ПланСчетов.ПереводМолоднякаЖивотныхВОсновноеСтадо);     // 08.06
	ПредопределенныеИсключаемыеСчетаВложений.Добавить(ПланСчетов.ПриобретениеВзрослыхЖивотных);   			  // 08.07
	ПредопределенныеИсключаемыеСчетаВложений.Добавить(ПланСчетов.НематериальныеПоисковыеАктивы);    		  // 08.11
	ПредопределенныеИсключаемыеСчетаВложений.Добавить(ПланСчетов.МатериальныеПоисковыеАктивы);    			  // 08.12	

		
	СчетаВложений = ОбщегоНазначенияКлиентСервер.РазностьМассивов(СчетаВложений,
		БухгалтерскийУчет.СформироватьМассивСубсчетов(ПредопределенныеИсключаемыеСчетаВложений));
		
	// Массив счетов, по которым ведется количественный учет	
	СчетаНПС = Новый Массив();
	СчетаНПС.Добавить(ПланСчетов.ОборудованиеКУстановке);                   // 07
	СчетаНПС.Добавить(ПланСчетов.ПриобретениеКомпонентовОсновныхСредств);  	// 08.04.1


	Запрос = Новый Запрос(); 
	
	Запрос.УстановитьПараметр("ГраницаОстатков", 	СтруктураПараметров.КонецКвартала);
	Запрос.УстановитьПараметр("Организация", 		СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("СчетаНПС",			СчетаНПС);
	Запрос.УстановитьПараметр("СчетаКапВложений", 	СчетаВложений);
	Запрос.УстановитьПараметр("ВидыСубконтоНПС", 	ВидыСубконтоНПС);
	Запрос.УстановитьПараметр("Счет10", 			ПланСчетов.Материалы); // 10 
	Запрос.УстановитьПараметр("ВидыСубконтоНП", 	ВидыСубконтоНП);
	
	ТекстЗапроса = ТекстЗапросаПоСчетамКапвложений();
	
	Если Не ВедетсяПартионныйУчет Тогда
		ПолеСклад							= ?(ВедетсяСкладскойУчет,   "ЕСТЬNULL(ХозрасчетныйОстатки.Субконто2, НЕОПРЕДЕЛЕНО)", "НЕОПРЕДЕЛЕНО"); 
		ВедетсяСуммовойУчетПоСкладамТекст	= ?(ВедетсяСуммовойУчетПоСкладам,
												"ЕСТЬNULL(ХозрасчетныйОстатки.Субконто2, НЕОПРЕДЕЛЕНО)", "НЕОПРЕДЕЛЕНО");
		ОборотыСклад						= ?(ВедетсяСкладскойУчет, "ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СубконтоДт2, НЕОПРЕДЕЛЕНО)", "НЕОПРЕДЕЛЕНО");
		ОборотыВедетсяСуммовойУчетПоСкладам = ?(ВедетсяСуммовойУчетПоСкладам,
												"ЕСТЬNULL(ХозрасчетныйОборотыДтКт.Субконто2, НЕОПРЕДЕЛЕНО)", "НЕОПРЕДЕЛЕНО");
		
	Иначе
		ПолеСклад							= ?(ВедетсяСкладскойУчет,   "ЕСТЬNULL(ХозрасчетныйОстатки.Субконто3, НЕОПРЕДЕЛЕНО)", "НЕОПРЕДЕЛЕНО");
		ВедетсяСуммовойУчетПоСкладамТекст	= ?(ВедетсяСуммовойУчетПоСкладам,
												"ЕСТЬNULL(ХозрасчетныйОстатки.Субконто3, НЕОПРЕДЕЛЕНО)", "НЕОПРЕДЕЛЕНО");
		ОборотыСклад						= ?(ВедетсяСкладскойУчет,   "ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СубконтоДт3, НЕОПРЕДЕЛЕНО)", "НЕОПРЕДЕЛЕНО");
		ОборотыВедетсяСуммовойУчетПоСкладам = ?(ВедетсяСуммовойУчетПоСкладам,
												"ЕСТЬNULL(ХозрасчетныйОборотыДтКт.Субконто3, НЕОПРЕДЕЛЕНО)", "НЕОПРЕДЕЛЕНО");
		
		
	КонецЕсли;
	
	ПолеПартия							= ?(ВедетсяПартионныйУчет, "ЕСТЬNULL(ХозрасчетныйОстатки.Субконто2, НЕОПРЕДЕЛЕНО)", "НЕОПРЕДЕЛЕНО");  	
	ОборотыПартия						= ?(ВедетсяПартионныйУчет,   "ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СубконтоДт2, НЕОПРЕДЕЛЕНО)", "НЕОПРЕДЕЛЕНО");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолеСклад",								ПолеСклад);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолеПартия",					  			ПолеПартия);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВедетсяСуммовойУчетПоСкладам",			ВедетсяСуммовойУчетПоСкладамТекст);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОборотыСклад", 				  			ОборотыСклад); 
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОборотыПартия", 				  			ОборотыПартия);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОборотыВедетсяСуммовойУчетПоСкладам", 	ОборотыВедетсяСуммовойУчетПоСкладам);


	Запрос.Текст = ТекстЗапроса; 
	
	Результат = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	Возврат Результат;
	
КонецФункции

// Получение параметров, описаний типов  
Функция ПодготовитьПараметрыДляВводаОстатков(Организация,Период)
	
	ДатаВводаОстатков = Новый Граница(Период - 1, ВидГраницы.Включая);
	СлужебныйДокументПартии = Документы.Партия.СоздатьДокумент();
	СлужебныйДокументПартии.Организация = Организация;
	СлужебныйДокументПартии.Дата		= Период-1;
	КомментарийПартии = НСтр("ru = '#Создан автоматически при включении раздельного учета НДС'"); 
	СлужебныйДокументПартии.Комментарий	= КомментарийПартии; 	
	СлужебныйДокументПартии.Записать();
	
	ТекстКомментарияВводОстатков = 	НСтр("ru = '#Создан автоматически при включении раздельного учета НДС, %1 %2'");
	ТекстКомментария = 	НСтр("ru = '#Создан автоматически при включении раздельного учета НДС, заполнение субконто ""Способы учета НДС"" на 19 счете'");

	
	ПараметрыУчета = ОбщегоНазначенияБП.ОпределитьПараметрыУчета();
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("КонецКвартала", 					ДатаВводаОстатков);
	СтруктураПараметров.Вставить("Период", 							Период-1);
	СтруктураПараметров.Вставить("Организация", 					Организация);
	СтруктураПараметров.Вставить("СлужебнаяПартия", 				СлужебныйДокументПартии.Ссылка);
	СтруктураПараметров.Вставить("СчетНДСПоУмолчанию",				ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ);
	СтруктураПараметров.Вставить("Комментарий", 					ТекстКомментария);
	СтруктураПараметров.Вставить("Содержание",						ТекстКомментария);
	СтруктураПараметров.Вставить("КомментарийВводОстатков",			ТекстКомментарияВводОстатков);
	СтруктураПараметров.Вставить("ВестиПартионныйУчет", 			ПараметрыУчета.ВестиПартионныйУчет);
	СтруктураПараметров.Вставить("ВестиСкладскойУчет",  			ПараметрыУчета.СкладскойУчет > 0);
	СтруктураПараметров.Вставить("ВедетсяСуммовойУчетПоСкладам",	ПараметрыУчета.СкладскойУчет = 2); 
	СтруктураПараметров.Вставить("Счета19КВычету",          		БухгалтерскийУчет.МассивСубСчетов19НДСКВычету());
	СтруктураПараметров.Вставить("СубконтоСчета19",        			БухгалтерскийУчет.МассивСубконтоСчета19());
	СтруктураПараметров.Вставить("СубконтоСчета1907",       		БухгалтерскийУчет.МассивСубконтоСчета1907());
	СтруктураПараметров.Вставить("Счет1907",               			ПланыСчетов.Хозрасчетный.НДСПоТоварамРеализованнымПоСтавке0);
	СтруктураПараметров.Вставить("ДокументыОперации",      			Новый Массив);
	СтруктураПараметров.Вставить("ДатаВключенияРУ", 				Период);
	СтруктураПараметров.Вставить("СокращеннаяАналитика",			
		УчетНДСРаздельный.СокращеннаяАналитика(Период));

	Возврат СтруктураПараметров;
	
КонецФункции

Функция ТипыПартийДляДополнительногоПоиска()
	
	МассивТипов = Новый Массив();
	МассивТипов.Добавить(Тип("ДокументСсылка.АвансовыйОтчет"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ПоступлениеТоваровУслуг"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ОприходованиеТоваров"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ОперацияБух"));
	МассивТипов.Добавить(Тип("ДокументСсылка.КорректировкаПоступления"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ВозвратТоваровОтПокупателя"));
	Если Метаданные.Документы.Найти("АвизоМПЗВходящее") <> Неопределено Тогда 
		ИмяДокумента = ("АвизоМПЗВходящее");  		
		МассивТипов.Добавить(Тип("ДокументСсылка." + ИмяДокумента));
	КонецЕсли;
	МассивТипов.Добавить(Тип("ДокументСсылка.ВводНачальныхОстатков"));
	
	ОписаниеТиповПартия = Новый ОписаниеТипов(МассивТипов);
	
	Возврат ОписаниеТиповПартия;
	
КонецФункции

Функция ТипыДляПоискаСуммыНДС()
	
	МассивТипов = Новый Массив();
	МассивТипов.Добавить(Тип("ДокументСсылка.АвансовыйОтчет"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ВозвратТоваровОтПокупателя"));
	МассивТипов.Добавить(Тип("ДокументСсылка.КорректировкаПоступления"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ПоступлениеТоваровУслуг"));
	
	ОписаниеТиповДляСуммНДС = Новый ОписаниеТипов(МассивТипов);
	
	Возврат ОписаниеТиповДляСуммНДС;
	
КонецФункции

Функция ТипыТолькоКоличество()
	
	МассивТипов = Новый Массив();
	МассивТипов.Добавить(Тип("ДокументСсылка.ОперацияБух"));
	МассивТипов.Добавить(Тип("ДокументСсылка.КорректировкаРеализации"));
	Если Метаданные.Документы.Найти("АвизоМПЗВходящее") <> Неопределено Тогда 
		ИмяДокумента = ("АвизоМПЗВходящее");  		
		МассивТипов.Добавить(Тип("ДокументСсылка." + ИмяДокумента)); 
	КонецЕсли;
	МассивТипов.Добавить(Тип("ДокументСсылка.ВводНачальныхОстатков"));
	МассивТипов.Добавить(Тип("ДокументСсылка.Партия"));
	
	ОписаниеТиповТолькоКоличество = Новый ОписаниеТипов(МассивТипов);
	
	Возврат ОписаниеТиповТолькоКоличество;
	
КонецФункции

Функция ТипыДляИнициацииДопПоиска()
	
	МассивТипов = Новый Массив();
	МассивТипов.Добавить(Тип("ДокументСсылка.ПеремещениеТоваров"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ПередачаТоваров"));
	МассивТипов.Добавить(Тип("ДокументСсылка.РеализацияТоваровУслуг")); 
	
	ОписаниеТиповИнициацииПоиска = Новый ОписаниеТипов(МассивТипов);
	
	Возврат ОписаниеТиповИнициацииПоиска;
	
КонецФункции

Функция ТипыДляПартийПоВложениям()
	
	МассивТипов = Новый Массив();
	МассивТипов.Добавить(Тип("ДокументСсылка.АвансовыйОтчет"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ГТДИмпорт"));
	МассивТипов.Добавить(Тип("ДокументСсылка.КорректировкаПоступления"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ПоступлениеВЛизинг"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ПоступлениеДопРасходов")); 	
	МассивТипов.Добавить(Тип("ДокументСсылка.ПоступлениеНМА"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ПоступлениеТоваровУслуг"));
	
	ОписаниеТиповДляПартийПоВложениям = Новый ОписаниеТипов(МассивТипов);
	
	Возврат ОписаниеТиповДляПартийПоВложениям;
	
КонецФункции

Функция ТипыДляДопПоискаПоВложениям()
	
	МассивТипов = Новый Массив();
	МассивТипов.Добавить(Тип("ДокументСсылка.ПередачаОборудованияВМонтаж"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ТребованиеНакладная"));
	
	ОписаниеТиповДляДопПоискаПоВложениям = Новый ОписаниеТипов(МассивТипов);
	
	Возврат ОписаниеТиповДляДопПоискаПоВложениям;
	
КонецФункции

Функция ТипыПоиска10СчетаДля0708()
	
	МассивТипов = Новый Массив();
	МассивТипов.Добавить(Тип("ДокументСсылка.АвансовыйОтчет"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ПоступлениеТоваровУслуг"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ОприходованиеТоваров"));
	МассивТипов.Добавить(Тип("ДокументСсылка.КорректировкаПоступления"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ВозвратТоваровОтПокупателя"));
	
	ОписаниеТиповПоиска10СчетаДля0708 = Новый ОписаниеТипов(МассивТипов);
	
	Возврат ОписаниеТиповПоиска10СчетаДля0708;
	
КонецФункции

Функция ПолучитьСтруктуруОписанийТипов()
	
	СтруктураОписанийТипов = Новый Структура;
	СтруктураОписанийТипов.Вставить("ОписаниеТиповДляПоискаСуммНДС", 			ТипыДляПоискаСуммыНДС());
	СтруктураОписанийТипов.Вставить("ОписаниеТиповДляИнициацииДопПоиска", 		ТипыДляИнициацииДопПоиска());
	СтруктураОписанийТипов.Вставить("ОписаниеТиповТолькоКоличество", 			ТипыТолькоКоличество());
	СтруктураОписанийТипов.Вставить("ОписаниеТиповПартия",						ТипыПартийДляДополнительногоПоиска());
	СтруктураОписанийТипов.Вставить("ОписаниеТиповДляПартийПоВложениям", 		ТипыДляПартийПоВложениям());
	СтруктураОписанийТипов.Вставить("ОписаниеТиповДляДопПоискаПоВложениям",		ТипыДляДопПоискаПоВложениям());
	СтруктураОписанийТипов.Вставить("ОписаниеТиповПоиска10СчетаДля0708",		ТипыПоиска10СчетаДля0708());
	
	Возврат СтруктураОписанийТипов;

КонецФункции

Функция СтруктураПараметровДляЗаполненияВНО()
	
	СтуктураПараметровДляВНО = Новый Структура;
	
	СтуктураПараметровДляВНО.Вставить("ТаблицаОстатков");
	СтуктураПараметровДляВНО.Вставить("ТаблицаКомплектующих");
	СтуктураПараметровДляВНО.Вставить("АВКакДопРасходы");
	СтуктураПараметровДляВНО.Вставить("СуммыДопРасходов");
	СтуктураПараметровДляВНО.Вставить("СуммыПоПоступлениям");
	
	Возврат СтуктураПараметровДляВНО;
	
КонецФункции

Функция ПараметрыДляДопРаспределенияПоПартиям()
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("СтруктураОписанийТипов");
	СтруктураПараметров.Вставить("ЭтоКомплектация", Ложь);
	СтруктураПараметров.Вставить("ИД", Неопределено);
	
	Возврат СтруктураПараметров;
	
КонецФункции

Функция ПараметрыДляЗаполненияСтрокиПоПартии()
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Ключ");
	СтруктураПараметров.Вставить("СчетУчета");
	СтруктураПараметров.Вставить("СчетНДСПоУмолчанию");
	СтруктураПараметров.Вставить("ЭтоКомплектация");
	СтруктураПараметров.Вставить("СуммовойУчет", Ложь);
	
	Возврат СтруктураПараметров;
	
КонецФункции

Функция ПараметрыДляРаспределенияПартийПоКомплектующим()
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ТаблицаОстатковПоПартиям");
	СтруктураПараметров.Вставить("ТаблицаСборкаОборудования");
	СтруктураПараметров.Вставить("ТаблицаДвижений10");
	СтруктураПараметров.Вставить("ТаблицаДвижений0807");
	
	Возврат СтруктураПараметров;
	
КонецФункции

// Процедуры по заполнению шапки и строк документа 
Процедура ЗаполнитьШапкуДокумента(ВводОстатковОбъект, СтруктураПараметров, Строка, РазделУчета)
	
	ВводОстатковОбъект.Дата          					= СтруктураПараметров.Период;
	ВводОстатковОбъект.Организация   					= СтруктураПараметров.Организация;
	ВводОстатковОбъект.Ответственный 					= Пользователи.ТекущийПользователь();
	ВводостатковОбъект.ПодразделениеОрганизации			= ?(Строка.Подразделение <> Неопределено, Строка.Подразделение, 
															Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	ВводОстатковОбъект.РазделУчета						= РазделУчета;
	ВводОстатковОбъект.ОтражатьВБухгалтерскомУчете		= Ложь;
	ВводОстатковОбъект.ОтражатьВНалоговомУчете			= Ложь;
	ВводОстатковОбъект.ОтражатьПоСпециальнымРегистрам	= Истина;
	ВводОстатковОбъект.Комментарий  					= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
																		СтруктураПараметров.КомментарийВводОстатков,
																		Строка.Счет, Строка.Подразделение);
	

КонецПроцедуры

Процедура ЗаполнитьСтрокуПоДопРасходам(ПараметрыОтбора, КонтрольноеКоличество, ВводОстатковОбъект, СуммыДопРасходов,
										Ключ, СчетУчета, СуммаБезНДСПоСтроке)
	
	СтрокиСДопРасходами = СуммыДопРасходов.НайтиСтроки(ПараметрыОтбора);
	Для каждого СтрокаДопРасходов Из СтрокиСДопРасходами Цикл
		Если СтрокаДопРасходов.СуммаБезНДС = 0 И СтрокаДопРасходов.СуммаНДС = 0  Тогда
			Продолжить;
		КонецЕсли;
		СтрокаСФ = ВводОстатковОбъект.ДанныеПоСФ.Добавить();
		СтрокаСФ.Ключ = Ключ;
		ЗаполнитьЗначенияСвойств(СтрокаСФ,СтрокаДопРасходов);
		Если КонтрольноеКоличество = 0 Тогда 
			СтрокаСФ.СуммаБезНДС = СтрокаДопРасходов.СуммаБезНДС;
			СтрокаСФ.НДС = СтрокаДопРасходов.СуммаНДС;
		Иначе
			СтрокаСФ.СуммаБезНДС = Окр(СтрокаДопРасходов.СуммаБезНДС/СтрокаДопРасходов.Количество*КонтрольноеКоличество,2);
			СтрокаСФ.НДС = Окр(СтрокаДопРасходов.СуммаНДС/СтрокаДопРасходов.Количество*КонтрольноеКоличество,2);
		КонецЕсли;
		СтрокаСф.Количество = 0;
		Если СтрокаСФ.ВидЦенности = Перечисления.ВидыЦенностей.ТаможенныеПлатежи Тогда
			ВидЦенности = УчетНДС.ОпределитьВидЦенности(СтрокаДопРасходов.СчетУчета);
			Если ВидЦенности = Перечисления.ВидыЦенностей.ОС Тогда
				СтрокаСФ.ВидЦенности = Перечисления.ВидыЦенностей.ТаможенныеПлатежиОС;
			КонецЕсли;
		КонецЕсли;
		Если СтрокаДопРасходов.ВидЦенности = Неопределено Тогда
			СтрокаСФ.ВидЦенности = УчетНДС.ОпределитьВидЦенности(СчетУчета);
		КонецЕсли;
		Если Не Значениезаполнено(СтрокаСФ.СпособУчетаНДС) Тогда
			СтрокаСФ.СпособУчетаНДС = Перечисления.СпособыУчетаНДС.ПринимаетсяКВычету;
		КонецЕсли;
		СуммаБезНДСПоСтроке = СуммаБезНДСПоСтроке+СтрокаСФ.СуммаБезНДС;
		Если Не ЗначениеЗаполнено(СтрокаСФ.СтавкаНДС) Тогда
			СтрокаСФ.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуТолькоПоКоличеству(ВводОстатковОбъект, СтрокаОстатков, СчетНДСПоУмолчанию,
											СлужебнаяПартия = Неопределено, КоличествоОстаток = 0)

	СтрокаСФ = ВводОстатковОбъект.ДанныеПоСФ.Добавить(); 
	СтрокаСФ.Ключ			= СтрокаОстатков.Ключ;
	СтрокаСФ.ВидЦенности 	= УчетНДС.ОпределитьВидЦенности(СтрокаОстатков.СчетУчета);
	СтрокаСФ.СчетУчетаНДС 	= СчетНДСПоУмолчанию;
	СтрокаСФ.СтавкаНДС 		= Перечисления.СтавкиНДС.БезНДС;
	СтрокаСФ.Количество 	= ?(КоличествоОстаток = 0, СтрокаОСтатков.Количество, КоличествоОстаток);
	СтрокаСФ.СпособУчетаНДС	= Перечисления.СпособыУчетаНДС.Распределен;
	СтрокаСФ.СчетФактура	= ?(СлужебнаяПартия = Неопределено, СтрокаОстатков.Партия, СлужебнаяПартия);
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуПоПартии(ПараметрыОтбора, ВводОстатковОбъект, СуммыПоПоступлениям,
									ПараметрыДляЗаполненияСтрокиПоПартии, КонтрольноеКоличество, СуммаБезНДСПоСтроке)
	
	СтрокиССуммамиНДС = СуммыПоПоступлениям.НайтиСтроки(ПараметрыОтбора);
	СчетНДСПоУмолчанию = ПараметрыДляЗаполненияСтрокиПоПартии.СчетНДСПоУмолчанию;
	Для каждого СтрокаСНДС Из СтрокиССуммамиНДС Цикл
		Если СтрокаСНДС.Количество = 0  И Не ПараметрыДляЗаполненияСтрокиПоПартии.СуммовойУчет Тогда
			Продолжить;
		КонецЕсли;
		СтрокаСФ = ВводОстатковОбъект.ДанныеПоСФ.Добавить();
		СтрокаСФ.Ключ = ПараметрыДляЗаполненияСтрокиПоПартии.Ключ; 
		ЗаполнитьЗначенияСвойств(СтрокаСФ,СтрокаСНДС);
		Если КонтрольноеКоличество >= СтрокаСНДС.Количество Тогда    						
			КонтрольноеКоличество = КонтрольноеКоличество-СтрокаСНДС.Количество;
			СтрокаСФ.НДС			= СтрокаСНДС.СуммаНДС;
			СтрокаСНДС.Количество 	= 0;
			СтрокаСНДС.СуммаБезНДС = 0;
			СтрокаСНДС.СуммаНДС	= 0;
		Иначе						
			СтрокаСФ.СуммаБезНДС = Окр(СтрокаСНДС.СуммаБезНДС/СтрокаСНДС.Количество*КонтрольноеКоличество,2);
			СтрокаСФ.НДС = Окр(СтрокаСНДС.СуммаНДС/СтрокаСНДС.Количество*КонтрольноеКоличество,2);
			СтрокаСНДС.СуммаБезНДС = СтрокаСНДС.СуммаБезНДС-СтрокаСф.СуммаБезНДС;
			СтрокаСНДС.СуммаНДС = СтрокаСНДС.СуммаНДС-СтрокаСФ.НДС;
			СтрокаСНДС.Количество = СтрокаСНДС.Количество-КонтрольноеКоличество;
			СтрокаСф.Количество = КонтрольноеКоличество;				
			КонтрольноеКоличество = 0;
		КонецЕсли; 
		Если ПараметрыДляЗаполненияСтрокиПоПартии.ЭтоКомплектация Тогда
			СтрокаСф.Количество = 0;
		КонецЕсли;
		Если ТипЗнч(СтрокаСНДС.СчетФактура) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
			СтрокаСф.СчетФактура = СтрокаСНДС.ДокументПоступления;
		КонецЕсли;
		Если СтрокаСНДС.ВидЦенности = Неопределено Тогда
			МетаданныеДокумента = СтрокаСФ.СчетФактура.Метаданные();
			Если ОбщегоНазначения.ЕстьРеквизитОбъекта("ДоговорКонтрагента", МетаданныеДокумента) Тогда 			 
				Договор = СтрокаСФ.СчетФактура.ДоговорКонтрагента;
				СтрокаСФ.ВидЦенности = УчетНДС.ОпределитьВидЦенностиПоОперации(СтрокаСНДС.Номенклатура, СтрокаСНДС.СчетУчета, ,
																				Договор.УчетАгентскогоНДС , Договор.ВидАгентскогоДоговора);
			Иначе
				СтрокаСФ.ВидЦенности = УчетНДС.ОпределитьВидЦенности(СтрокаСНДС.СчетУчета);
			КонецЕсли;
		КонецЕсли;
		Если СтрокаСФ.СуммаБезНДС = 0 Тогда 
			СтрокаСФ.СпособУчетаНДС = Перечисления.СпособыУчетаНДС.Распределен;
		ИначеЕсли Не ЗначениеЗаполнено(СтрокаСф.СпособУчетаНДС) Тогда
			СтрокаСФ.СпособУчетаНДС = Перечисления.СпособыУчетаНДС.ПринимаетсяКВычету;
		КонецЕсли;
		СтрокаСФ.Ключ = ПараметрыДляЗаполненияСтрокиПоПартии.Ключ; 
		СуммаБезНДСПоСтроке = СуммаБезНДСПоСтроке+СтрокаСФ.СуммаБезНДС;
		Если Не ЗначениеЗаполнено(СтрокаСФ.СчетУчетаНДС) Тогда
			СтрокаСФ.СчетУчетаНДС = СчетНДСПоУмолчанию;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаСФ.СтавкаНДС) Тогда
			СтрокаСФ.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		КонецЕсли;
		Если КонтрольноеКоличество = 0 Тогда
			Прервать;
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуСАналитикой(СтрокаОстатков, СтрокаСАналитикой, СлужебнаяПартия, РазделУчета)

	СтрокаОстатков.Ключ = Новый УникальныйИдентификатор;
	ЗаполнитьЗначенияСвойств(СтрокаОстатков,СтрокаСАналитикой);
	СтрокаОстатков.СчетУчета = СтрокаСАналитикой.Счет;
	Счет1007 = ПланыСчетов.Хозрасчетный.МатериалыПереданныеВПереработку; 
	
	Если РазделУчета=Перечисления.РазделыУчетаДляВводаОстатков.ТоварыОтгруженные Тогда
		СтрокаОстатков.Покупатель = СтрокаСАналитикой.Склад;
	ИначеЕсли СтрокаОстатков.СчетУчета = Счет1007 Тогда
		СтрокаОстатков.Контрагент = СтрокаСАналитикой.Склад;
	Иначе
		СтрокаОстатков.Склад = СтрокаСАналитикой.Склад;
	КонецЕсли;
	МетаданныеНоменклатураНаСкладе = Метаданные.Документы.ВводНачальныхОстатков.ТабличныеЧасти.НоменклатураНаСкладе;
	Если МетаданныеНоменклатураНаСкладе.Реквизиты.Партия.Тип.СодержитТип(ТипЗнч(СтрокаСАналитикой.Партия)) Тогда
		СтрокаОстатков.Партия = СтрокаСАналитикой.Партия;
	Иначе
		СтрокаОстатков.Партия = СлужебнаяПартия;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтрокаОстатков.Партия) Тогда
		СтрокаОстатков.Партия = СлужебнаяПартия;
	КонецЕсли;
	
КонецПроцедуры

// Необходимо заполнить и провести документ Ввод остатков
	// Шаг 1 Заполняем шапку документа 
	// Шаг 2 Заполняем верхную табличную часть, в зависимости от счетов могут быть следующие варианты
	// 		Номенклатура на складе - для счетов 10, 41, 07, 08 (исключая 41.11)
	// 		МПЗ отгруженные - для счетов 45
	// 		Товары в розничной торговле АТТ - 41.11?
	// Шаг 3 Заполняем табличную часть Данные по СФ:
	// 		 - Если по строке остатков предполагается только количественный учет, тогда заполняем в тч одну строку только по количеству
	// 		 - В остальных случаях ищем данные по НДС по документу Партии
	// 	 	 - Если как документ партии выступают Требование-накладная, Комплектация, Передача оборудования в монтаж, тогда заполняем 
	// 			партии для каждого комплектующего
	// 	 	 - Ищем к документу партии доп расходы	
Процедура ЗаполнитьДокументыВводаОстатков(ПараметрыДляВводаОстатков, СтруктураПараметров, ЭтоТовары)
	
	ТаблицаОстатков			= ПараметрыДляВводаОстатков.ТаблицаОстатков;
	ТаблицаКомплектующих	= ПараметрыДляВводаОстатков.ТаблицаКомплектующих;
	АВКакДопРасходы			= ПараметрыДляВводаОстатков.АВКакДопРасходы;
	СуммыДопРасходов		= ПараметрыДляВводаОстатков.СуммыДопРасходов;
	СуммыПоПоступлениям		= ПараметрыДляВводаОстатков.СуммыПоПоступлениям;
	
	ПараметрыДляЗаполненияСтрокиПоПартии = ПараметрыДляЗаполненияСтрокиПоПартии();
	ПараметрыДляЗаполненияСтрокиПоПартии.СчетНДСПоУмолчанию = СтруктураПараметров.СчетНДСПоУмолчанию;
	СчетаСОстатками = ТаблицаОстатков.Скопировать(,"Счет,Подразделение");
	СчетаСОстатками.Свернуть("Счет,Подразделение");
	
	МаксКоличествоСтрок = 9000;
	
	СубконтоСклад	= ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	СубконтоПартия	= ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии;
	
	Счет1007 = Планысчетов.Хозрасчетный.МатериалыПереданныеВПереработку;
	Счет4111 = ПланыСчетов.Хозрасчетный.ТоварыВРозничнойТорговлеВПродажныхЦенахАТТ;
	
	Для каждого СтрСчет Из СчетаСОстатками Цикл
		РазделУчета = ПолучитьРазделУчета(СтрСчет.Счет);
		ВводОстатковОбъект = Документы.ВводНачальныхОстатков.СоздатьДокумент();
		ЗаполнитьШапкуДокумента(ВводОстатковОбъект, СтруктураПараметров, СтрСчет, РазделУчета);
		
		СтруктураОтбораАналитик = Новый Структура;
		СтруктураОтбораАналитик.Вставить("Счет", СтрСчет.Счет);
		СтруктураОтбораАналитик.Вставить("Подразделение", СтрСчет.Подразделение);
		СтрокиСАналитикой = ТаблицаОстатков.НайтиСтроки(СтруктураОтбораАналитик);
		Для каждого СтрокаСАналитикой Из СтрокиСАналитикой Цикл
			Если ВводОстатковОбъект.ДанныеПоСФ.Количество() + ВводОстатковОбъект.НоменклатураНаСкладе.Количество()
				+ ВводОстатковОбъект.ТоварыВРозничнойТорговлеАТТ.Количество() + ВводОстатковОбъект.МПЗОтгруженные.Количество()
				+ ВводОстатковОбъект.МатериалыПереданныеВПереработку.Количество() > МаксКоличествоСтрок Тогда
				Попытка
					ВВодостатковОбъект.Записать(РежимЗаписиДокумента.Проведение);
					РегистрыСведений.ВыполнениеРегламентныхОперацийНДС.ЗафиксироватьФактВыполненияРегламентнойОперации(СтруктураПараметров.ДатаВключенияРУ,
						СтруктураПараметров.Организация,
						ВводостатковОбъект.Ссылка,
						Перечисления.РегламентныеОперации.ФормированиеНачальныхОстатковДляВеденияРаздельногоУчетаНДС,
						Истина,
						СтрСчет.Счет);
					
				Исключение
						ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации(),
							УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки());

				КонецПопытки; 
				ВводОстатковОбъект = Документы.ВводНачальныхОстатков.СоздатьДокумент();
				ЗаполнитьШапкуДокумента(ВводОстатковОбъект, СтруктураПараметров, СтрСчет, РазделУчета);
			КонецЕсли;
			
			Если РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.ТоварыОтгруженные Тогда
				СтрокаОстатков = ВводОстатковОбъект.МПЗОтгруженные.Добавить();
			ИначеЕсли СтрСчет.Счет = Счет4111 Тогда
				СтрокаОстатков = ВводОстатковОбъект.ТоварыВРозничнойТорговлеАТТ.Добавить();
			ИначеЕсли СтрСчет.Счет = Счет1007 Тогда
				СтрокаОстатков = ВводОстатковОбъект.МатериалыПереданныеВПереработку.Добавить();
			Иначе
				СтрокаОстатков = ВводОстатковОбъект.НоменклатураНаСкладе.Добавить();
			КонецЕсли;
			
			// Заполнили строку в верхнюю табличную часть
			ЗаполнитьСтрокуСАналитикой(СтрокаОстатков, СтрокаСАналитикой, СтруктураПараметров.СлужебнаяПартия, РазделУчета);
			СуммаБезНДСПоСтроке = 0;
			
			// Теперь будет заполнение табличной части ДанныеПоСФ
			// Сначала заполнение по комплектации
			ЭтоКомплектация = Ложь;
			Если ЭтоТовары Тогда
				ЭтоКомплектация = СтрокаСАналитикой.ЭтоКомплектация;
			Иначе 				
				ЭтоКомплектация = СтрокаСАналитикой.НуженДопПоиск;
			КонецЕсли;
			
			Если ЭтоКомплектация Тогда
				Если СтрокаОстатков.Количество <> 0 Тогда
					СтрокаОстатков.Сумма = 0;
					ЗаполнитьСтрокуТолькоПоКоличеству(ВводОстатковОбъект, СтрокаОстатков, СтруктураПараметров.СчетНДСПоУмолчанию);
				КонецЕсли; 
				ОтборПоКом = Новый Структура;
				ОтборПоКом.Вставить("ИД", СтрокаСАналитикой.ИД);
				ИнфоПоКомплектующим = ТаблицаКомплектующих.НайтиСтроки(ОтборПоКом);
				Для каждого Комплектующая Из ИнфоПоКомплектующим Цикл
					Если Комплектующая.ИскатьСуммуНДС Тогда
						СтруктураОтбораПоПартии = Новый Структура;
						СтруктураОтбораПоПартии.Вставить("Номенклатура",		Комплектующая.Номенклатура);
						СтруктураОтбораПоПартии.Вставить("СчетФактура", 		Комплектующая.Партия);
						КонтрольноеКоличество = Комплектующая.Количество;
						
						ПараметрыДляЗаполненияСтрокиПоПартии.Ключ					= СтрокаОстатков.Ключ;
						ПараметрыДляЗаполненияСтрокиПоПартии.СчетУчета				= СтрокаОстатков.СчетУчета;
						ПараметрыДляЗаполненияСтрокиПоПартии.ЭтоКомплектация		= Истина;
						ПараметрыДляЗаполненияСтрокиПоПартии.СуммовойУчет			= Ложь;
						
						ЗаполнитьСтрокуПоПартии(СтруктураОтбораПоПартии, ВводОстатковОбъект, СуммыПоПоступлениям, ПараметрыДляЗаполненияСтрокиПоПартии,
							КонтрольноеКоличество, СуммаБезНДСПоСтроке);
						
						// Добавить суммы из документов ГТД, Доп расходы, Заявление о ввозе товаров
						СтруктураОтбораДопРасходов = Новый Структура;
						СтруктураОтбораДопРасходов.Вставить("Номенклатура",		   Комплектующая.Номенклатура);
						СтруктураОтбораДопРасходов.Вставить("ДокументПоступления", Комплектующая.Партия); 
						КонтрольноеКоличество = Комплектующая.Количество;  
						ЗаполнитьСтрокуПоДопРасходам(СтруктураОтбораДопРасходов, КонтрольноеКоличество, ВводОстатковОбъект, 
						СуммыДопРасходов, СтрокаОстатков.Ключ, СтрокаОстатков.СчетУчета, СуммаБезНДСПоСтроке);
					КонецЕсли;
				КонецЦикла;
			Иначе
				Если НЕ СтрокаСАналитикой.ИскатьСуммуНДС И НЕ  СтрокаСАналитикой.ИскатьДопРасходы И ЭтоТовары Тогда
					СтрокаОстатков.Сумма = 0; 					
					ЗаполнитьСтрокуТолькоПоКоличеству(ВводОстатковОбъект, СтрокаОстатков, СтруктураПараметров.СчетНДСПоУмолчанию);
				ИначеЕсли НЕ СтрокаСАналитикой.ИскатьСуммуНДС И СтрокаСАналитикой.ИскатьДопРасходы И ЭтоТовары Тогда
					ЗаполнитьСтрокуТолькоПоКоличеству(ВводОстатковОбъект, СтрокаОстатков, СтруктураПараметров.СчетНДСПОУмолчанию);
					СтруктураОтбораДопРасходов = Новый Структура;
					СтруктураОтбораДопРасходов.Вставить("Номенклатура",		СтрокаОстатков.Номенклатура);
					СтруктураОтбораДопРасходов.Вставить("ДокументПоступления", СтрокаОстатков.Партия);
					КонтрольноеКоличество = СтрокаОстатков.Количество; 
					ЗаполнитьСтрокуПоДопРасходам(СтруктураОтбораДопРасходов, КонтрольноеКоличество, ВводОстатковОбъект, 
					СуммыДопРасходов, СтрокаОстатков.Ключ, СтрокаОстатков.СчетУчета, СуммаБезНДСПоСтроке);
				Иначе  					
					// Заполним исходные суммы из документов поступлений:
					// Авансовый отчет, возврат и ПТУ
					СтруктураОтбораПоПартии = Новый Структура;
					СтруктураОтбораПоПартии.Вставить("Номенклатура",		СтрокаОстатков.Номенклатура);
					СтруктураОтбораПоПартии.Вставить("СчетФактура", 		СтрокаОстатков.Партия);
					КонтрольноеКоличество = СтрокаОстатков.Количество;
					
					ПараметрыДляЗаполненияСтрокиПоПартии.Ключ					= СтрокаОстатков.Ключ;
					ПараметрыДляЗаполненияСтрокиПоПартии.СчетУчета				= СтрокаОстатков.СчетУчета;
					ПараметрыДляЗаполненияСтрокиПоПартии.ЭтоКомплектация		= Ложь;

					Если ЭтоТовары Тогда
						ПараметрыДляЗаполненияСтрокиПоПартии.СуммовойУчет		= Ложь;
						ЗаполнитьСтрокуПоПартии(СтруктураОтбораПоПартии, ВводОстатковОбъект, СуммыПоПоступлениям, ПараметрыДляЗаполненияСтрокиПоПартии,
												КонтрольноеКоличество, СуммаБезНДСПоСтроке);
					Иначе
						ПараметрыДляЗаполненияСтрокиПоПартии.СуммовойУчет		= Не СтрокаСАналитикой.КоличественныйУчет;
						ЗаполнитьСтрокуПоПартии(СтруктураОтбораПоПартии, ВводОстатковОбъект, СуммыПоПоступлениям, ПараметрыДляЗаполненияСтрокиПоПартии,
												КонтрольноеКоличество, СуммаБезНДСПоСтроке);
					КонецЕсли;
					
					Если КонтрольноеКоличество > 0 Тогда
						ЗаполнитьСтрокуТолькоПоКоличеству(ВводОстатковОбъект, СтрокаОстатков, СтруктураПараметров.СчетНДСПОУмолчанию,
															СтруктураПараметров.СлужебнаяПартия, КонтрольноеКоличество);  
					КонецЕсли;
					// Суммы из документов ГТД, Доп расходы, Заявление о ввозе товаров
					СтруктураОтбораДопРасходов = Новый Структура;
					СтруктураОтбораДопРасходов.Вставить("Номенклатура",		СтрокаОстатков.Номенклатура);
					СтруктураОтбораДопРасходов.Вставить("ДокументПоступления", СтрокаОстатков.Партия);
					КонтрольноеКоличество = СтрокаОстатков.Количество; 
					ЗаполнитьСтрокуПоДопРасходам(СтруктураОтбораДопРасходов, КонтрольноеКоличество, ВводОстатковОбъект, 
									СуммыДопРасходов, СтрокаОстатков.Ключ, СтрокаОстатков.СчетУчета, СуммаБезНДСПоСтроке);
					Если НЕ ЭтоТовары Тогда
						СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СтрокаОстатков.СчетУчета);
						СтруктураОтбораПоПартии = Новый Структура;
						СтруктураОтбораПоПартии.Вставить("Номенклатура",		СтрокаОстатков.Номенклатура);
						СтруктураОтбораПоПартии.Вставить("ДокАвансовыйОтчет", 	СтрокаОстатков.Партия); 
						СтруктураОтбораПоПартии.Вставить("СчетУчета", СтрокаОстатков.СчетУчета);
						Если  СвойстваСчета["ВидСубконто2"] = СубконтоСклад Тогда
							СтруктураОтбораПоПартии.Вставить("Субконто2", СтрокаОстатков.Склад);
						ИначеЕсли СвойстваСчета["ВидСубконто3"] = СубконтоСклад Тогда
							СтруктураОтбораПоПартии.Вставить("Субконто3", СтрокаОстатков.Склад);
						КонецЕсли; 				
						КонтрольноеКоличество = 0;
						ЗаполнитьСтрокуПоДопРасходам(СтруктураОтбораПоПартии, КонтрольноеКоличество, ВводОстатковОбъект, 
											АВКакДопРасходы, СтрокаОстатков.Ключ, СтрокаОстатков.СчетУчета, СуммаБезНДСПоСтроке);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			СтрокаОстатков.Сумма = СуммаБезНДСПоСтроке; 	
			Если СтрокаОстатков.Сумма = 0 И НЕ ЗначениеЗаполнено(СтрокаОстатков.Количество) Тогда
				СтрокиПоСФ = ВводОстатковОбъект.ДанныеПоСФ.НайтиСтроки(Новый Структура("Ключ", СтрокаОстатков.Ключ));
				Для каждого СтрокаПоСФ Из СтрокиПоСФ Цикл
					ВводОстатковОбъект.ДанныеПоСФ.Удалить(СтрокаПоСФ);
				КонецЦикла;
				ВводОстатковОбъект.НоменклатураНаСкладе.Удалить(СтрокаОстатков);
			КонецЕсли;
		КонецЦикла;  
		
		Попытка
			Если ВводОстатковОбъект.НоменклатураНаСкладе.Количество() > 0 
				ИЛИ ВводОстатковОбъект.МПЗОтгруженные.Количество() > 0 
				ИЛИ ВводОстатковОбъект.ТоварыВРозничнойТорговлеАТТ.Количество() > 0
				ИЛИ ВводОстатковОбъект.МатериалыПереданныеВПереработку.Количество() > 0 Тогда
				ВводостатковОбъект.Записать(РежимЗаписиДокумента.Проведение);
				РегистрыСведений.ВыполнениеРегламентныхОперацийНДС.ЗафиксироватьФактВыполненияРегламентнойОперации(СтруктураПараметров.ДатаВключенияРУ,
					СтруктураПараметров.Организация,
					ВводостатковОбъект.Ссылка,
					Перечисления.РегламентныеОперации.ФормированиеНачальныхОстатковДляВеденияРаздельногоУчетаНДС,
					Истина,
					СтрСчет.Счет);
			КонецЕсли;
		Исключение
			ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;

	
КонецПроцедуры

// Вспомогательные процедуры по распределению 
Процедура РаспределитьПоПартиямДополнительно(ПараметрыОтбора, ТаблицаСДокументамиДвижений, ТаблицаСПартиями, 
											КоличествоКРаспределению, Стр, ПараметрыДляДопРаспределенияПоПартиям)
											
		СтруктураОписанийТипов = ПараметрыДляДопРаспределенияПоПартиям.СтруктураОписанийТипов;
		ОписаниеТиповПартия = СтруктураОписанийТипов.ОписаниеТиповПартия;
		ОписаниеТиповДляПоискаСуммНДС = СтруктураОписанийТипов.ОписаниеТиповДляПоискаСуммНДС;
		ПоискПартии = ТаблицаСДокументамиДвижений.НайтиСтроки(ПараметрыОтбора);
		Для каждого СтрокаПоискаПартии Из ПоискПартии Цикл
			Если НЕ КоличествоКРаспределению = 0 Тогда 
				Если СтрокаПоискаПартии.Количество = 0 Тогда
					Продолжить;
				Иначе
					Если ОписаниеТиповПартия.СодержитТип(ТипЗнч(СтрокаПоискаПартии.Партия)) Тогда 
						НоваяСтрокаПартии = ТаблицаСПартиями.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаПартии,Стр);
						НоваяСтрокаПартии.Партия = СтрокаПоискаПартии.Партия;
						НоваяСтрокаПартии.НетПартииНаОстатках = Истина;
						Если ПараметрыДляДопРаспределенияПоПартиям.ЭтоКомплектация Тогда
							НоваяСтрокаПартии.ИД = ПараметрыДляДопРаспределенияПоПартиям.ИД;
							НоваяСтрокаПартии.Номенклатура = Стр.Комплектующие;
						КонецЕсли;
						Если КоличествоКРаспределению < СтрокаПоискаПартии.Количество Тогда
							НоваяСтрокаПартии.Количество = КоличествоКРаспределению; 								
							СтрокаПоискаПартии.Количество = СтрокаПоискаПартии.Количество-КоличествоКРаспределению;
							КоличествоКРаспределению = 0;
						Иначе
							НоваяСтрокаПартии.Количество = СтрокаПоискаПартии.Количество;						
							
							КоличествоКРаспределению = КоличествоКРаспределению-СтрокаПоискаПартии.Количество;
							СтрокаПоискаПартии.Количество = 0;
							
						КонецЕсли;
						Если НЕ ПараметрыДляДопРаспределенияПоПартиям.ЭтоКомплектация Тогда
							НоваяСтрокаПартии.НуженДопПоиск = Ложь; 
						КонецЕсли;
						Если ОписаниеТиповДляПоискаСуммНДС.СодержитТип(ТипЗнч(НоваяСтрокаПартии.Партия)) Тогда
							НоваяСтрокаПартии.ИскатьСуммуНДС	 = Истина;
							НоваяСтрокаПартии.ИскатьДопРасходы 	 = Истина;
						ИначеЕсли  ТипЗнч(НоваяСтрокаПартии.Партия) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
							НоваяСтрокаПартии.ИскатьСуммуНДС	 = Ложь;
							НоваяСтрокаПартии.ИскатьДопРасходы 	 = Истина; 
						Иначе
							НоваяСтрокаПартии.ИскатьСуммуНДС 	= Ложь;
							НоваяСтрокаПартии.ИскатьДопРасходы  = Ложь; 
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			Иначе 
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если КоличествоКРаспределению > 0 Тогда
			НоваяСтрокаПартии = ТаблицаСПартиями.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаПартии,Стр);
			НоваяСтрокаПартии.Количество = КоличествоКРаспределению;
			Если НЕ ПараметрыДляДопРаспределенияПоПартиям.ЭтоКомплектация Тогда
				НоваяСтрокаПартии.НуженДопПоиск = Ложь; 
			Иначе
				НоваяСтрокаПартии.ИД 	= ПараметрыДляДопРаспределенияПоПартиям.ИД;
			КонецЕсли;
			НоваяСтрокаПартии.ИскатьСуммуНДС = Ложь;
			НоваяСтрокаПартии.Партия = Неопределено;
			НоваяСтрокаПартии.НетПартииНаОстатках = Истина;
		КонецЕсли;
	
	
КонецПроцедуры

Процедура ОпределитьДопПараметрыПоСтроке(НоваяСтрока, СтруктураОписанийТипов, ЭтоТовары, Счет, КорСчет = Неопределено)
	
	Если СтруктураОписанийТипов.ОписаниеТиповДляПоискаСуммНДС.СодержитТип(ТипЗнч(НоваяСтрока.Партия)) Тогда
		ЗаполнитьДопПараметрыСтрокиПартии(НоваяСтрока, ЭтоТовары, Ложь, Истина, Истина, Ложь); 	
	ИначеЕсли СтруктураОписанийТипов.ОписаниеТиповТолькоКоличество.СодержитТип(ТипЗнч(НоваяСтрока.Партия)) Тогда
		ЗаполнитьДопПараметрыСтрокиПартии(НоваяСтрока, ЭтоТовары , Ложь, Ложь, Ложь, Ложь);	
	ИначеЕсли ТипЗнч(НоваяСтрока.Партия) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		ЗаполнитьДопПараметрыСтрокиПартии(НоваяСтрока, ЭтоТовары , Ложь, Ложь, Истина, Ложь);
	ИначеЕсли ТипЗнч(НоваяСтрока.Партия) = Тип("ДокументСсылка.КомплектацияНоменклатуры") Тогда
		Если НоваяСтрока.Партия.ВидОперации = Перечисления.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация Тогда
			НоваяСтрока.СчетПоступления	 = Счет;  					
			ЗаполнитьДопПараметрыСтрокиПартии(НоваяСтрока, ЭтоТовары , Истина, Ложь, Ложь, Ложь);
		Иначе
			ЗаполнитьДопПараметрыСтрокиПартии(НоваяСтрока, ЭтоТовары , Ложь, Ложь,  Ложь, Истина);
		КонецЕсли;
		НоваяСтрока.ИД = Новый УникальныйИдентификатор;  							
	ИначеЕсли СтруктураОписанийТипов.ОписаниеТиповДляИнициацииДопПоиска.СодержитТип(ТипЗнч(НоваяСтрока.Партия))  Тогда
		ЗаполнитьДопПараметрыСтрокиПартии(НоваяСтрока,ЭтоТовары , Истина,  Ложь, Ложь,  Ложь);
		НоваяСтрока.СчетПоступления	 = КорСчет;
	ИначеЕсли  ТипЗнч(НоваяСтрока.Партия) = Тип("ДокументСсылка.ПоступлениеИзПереработки") Тогда
		ЗаполнитьДопПараметрыСтрокиПартии(НоваяСтрока, ЭтоТовары , Истина, Ложь, Ложь, Ложь);
		НоваяСтрока.СчетПоступления	 = Счет;
	ИначеЕсли СтруктураОписанийТипов.ОписаниеТиповДляПартийПоВложениям.СодержитТип(ТипЗнч(НоваяСтрока.Партия)) Тогда
		ЗаполнитьДопПараметрыСтрокиПартии(НоваяСтрока,ЭтоТовары, Ложь, Истина, Истина); 
	ИначеЕсли СтруктураОписанийТипов.ОписаниеТиповДляДопПоискаПоВложениям.СодержитТип(ТипЗнч(НоваяСтрока.Партия)) Тогда
		ЗаполнитьДопПараметрыСтрокиПартии(НоваяСтрока, ЭтоТовары , Истина, Ложь, Ложь);
		НоваяСтрока.ИД = Новый УникальныйИдентификатор;  
	Иначе
		ЗаполнитьДопПараметрыСтрокиПартии(НоваяСтрока, ЭтоТовары , Ложь, Ложь, Ложь, Ложь);
	КонецЕсли;

	
КонецПроцедуры

Процедура ЗаполнитьДопПараметрыСтрокиПартии(Строка, ЭтоТовары, НуженДопПоиск, ИскатьСуммуНДС, 
											ИскатьДопРасходы, ЭтоКомплектация = Ложь)
	Строка.НуженДопПоиск 		= НуженДопПоиск;
	Строка.ИскатьСуммуНДС		= ИскатьСуммуНДС;
	Строка.ИскатьДопРасходы 	= ИскатьДопРасходы;
	Если ЭтоТовары Тогда
		Строка.ЭтоКомплектация		= ЭтоКомплектация;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьРазделУчета(Счет)
	ПланСчетов = ПланыСчетов.Хозрасчетный;
	РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.Материалы;
	
	Если БухгалтерскийУчетПовтИсп.СчетВИерархии(Счет, ПланСчетов.Материалы) Тогда
		РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.Материалы;
	ИначеЕсли БухгалтерскийУчетПовтИсп.СчетВИерархии(Счет,ПланСчетов.Товары) Тогда
		РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.Товары;
	ИначеЕсли БухгалтерскийУчетПовтИсп.СчетВИерархии(Счет, ПланСчетов.ТоварыОтгруженные) Тогда
		РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.ТоварыОтгруженные;
	ИначеЕсли БухгалтерскийУчетПовтИсп.СчетВИерархии(Счет, ПланСчетов.ВложенияВоВнеоборотныеАктивы) 
		ИЛИ Счет = ПланСчетов.ОборудованиеКУстановке Тогда
		РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.КапитальныеВложения;
	КонецЕсли;

	Возврат РазделУчета;
	
КонецФункции

Процедура РаспределитьОстаткиТоваровПоПартиям(ТаблицаСПолнойАналитикой,
												ТаблицаСЗаполненнымиПартиями,
												ТаблицаСДокументамиДвижений,
												СтруктураОписанийТипов)
												
	Для каждого СтрокаСАналитикой Из  ТаблицаСПолнойАналитикой Цикл
		Если СтрокаСАналитикой.Партия <> Неопределено Тогда
			// Это позитивный вариант, партия есть, нужно определить, какого типа документ Партии
			// Чтобы решить, нужно по нему искать НДС, или будет только количественный учет
			СтрокаСАналитикой.НайденаПартия = Истина;
			СтрокаСАналитикой.ОсталосьКРаспределению = 0;
			НоваяСтрокаСПартией=ТаблицаСЗаполненнымиПартиями.Добавить(); 
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСПартией,СтрокаСАналитикой); 
			ОпределитьДопПараметрыПоСтроке(НоваяСтрокаСПартией, СтруктураОписанийТипов, Истина, СтрокаСАналитикой.Счет);
		Иначе
			// Если изначально документа партии не было, то необходимо
			// Во-первых найти его
			// Во-вторых, определить, конечный это документ партии, или требуются еще действия
			// Нужно ли к этому документу партии искать сумму НДС, или будет только количественный учет
			
			ПараметрыОтбораПартии = Новый Структура;
			ПараметрыОтбораПартии.Вставить("Номенклатура", СтрокаСАналитикой.Номенклатура);
			ПараметрыОтбораПартии.Вставить("Счет", 	   СтрокаСАналитикой.Счет);  
			ПоискПартии = ТаблицаСДокументамиДвижений.НайтиСтроки(ПараметрыОтбораПартии);
			КоличествоКРаспределению = СтрокаСАналитикой.Количество;
			Для каждого СтрокаПартии Из ПоискПартии Цикл
				Если СтрокаПартии.Количество = 0 Тогда 
					Продолжить;
				Иначе
					Если НЕ КоличествоКРаспределению = 0 Тогда
						Если КоличествоКРаспределению <= СтрокаПартии.Количество Тогда
							НоваяСтрокаСПартией = ТаблицаСЗаполненнымиПартиями.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрокаСПартией,СтрокаСАналитикой);
							НоваяСтрокаСПартией.Партия 			  = СтрокаПартии.Партия;
							НоваяСтрокаСПартией.Количество = КоличествоКРаспределению;
							СтрокаПартии.Количество = СтрокаПартии.Количество-КоличествоКРаспределению;
							КоличествоКРаспределению = 0;
							НоваяСтрокаСПартией.НетПартииНаОстатках = Истина;
						Иначе 
							НоваяСтрокаСПартией = ТаблицаСЗаполненнымиПартиями.Добавить(); 
							ЗаполнитьЗначенияСвойств(НоваяСтрокаСПартией,СтрокаСАналитикой); 
							НоваяСтрокаСПартией.Партия			  = СтрокаПартии.Партия;
							НоваяСтрокаСПартией.Количество = СтрокаПартии.Количество;
							КоличествоКРаспределению = КоличествоКРаспределению-СтрокаПартии.Количество;
							СтрокаПартии.Количество = 0;
							НоваяСтрокаСПартией.НетПартииНаОстатках = Истина;
						КонецЕсли;
						ОпределитьДопПараметрыПоСтроке(НоваяСтрокаСПартией, СтруктураОписанийТипов, 
							Истина, СтрокаПартии.Счет, СтрокаПартии.КорСчет);

					Иначе
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Если КоличествоКРаспределению = 0 Тогда
				СтрокаСАналитикой.НайденаПартия			 = Истина; 
				СтрокаСАналитикой.ОсталосьКРаспределению = 0;
			Иначе
				СтрокаСАналитикой.НайденаПартия 		 = Ложь; 
				СтрокаСАналитикой.ОсталосьКРаспределению = КоличествоКРаспределению;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 

	
КонецПроцедуры

Процедура РаспределитьОстаткиВложенийПоПартиям(ТаблицаОстатков,
												ТаблицаДвижений,
												ТаблицаОстатковПоПартиям,
												СтруктураОписанийТипов,
												СтруктураПараметров)

	ВестиПартионныйУчет 		 = СтруктураПараметров.ВестиПартионныйУчет;
	ВедетсяСуммовойУчетПоСкладам = СтруктураПараметров.ВедетсяСуммовойУчетПоСкладам; 
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("КоличественныйУчет", Истина);
	
	// Сначала выполним распределение для счетов, на которых есть количественный учет (07, 08.04.1)
	// Потому что в данном случае распределение по партиям будет по количеству
	ОстаткиСКоличественнымУчетом = ТаблицаОстатков.НайтиСтроки(ПараметрыОтбора);
	
	Для каждого СтрокаПоиска Из ОстаткиСКоличественнымУчетом Цикл 		
		// Полноценно ведется партионный учет и найден документ партии на остатках 
		Если СтрокаПоиска.Партия <> Неопределено Тогда
			СтрокаПартии = ТаблицаОстатковПоПартиям.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаПартии,СтрокаПоиска);
			ОпределитьДопПараметрыПоСтроке(СтрокаПартии, СтруктураОписанийТипов, Ложь, СтрокаПоиска.Счет);
			СтрокаПартии.Сумма = 0; 
		Иначе
			// Партия в аналитике не заполнена, надо искать распределение.					
			СтруктураПоискаПартии = Новый Структура;
			СтруктураПоискаПартии.Вставить("Счет",	  		СтрокаПоиска.Счет);
			СтруктураПоискаПартии.Вставить("Номенклатура",	СтрокаПоиска.Номенклатура);
			Если ВестиПартионныйУчет Тогда
				СтруктураПоискаПартии.Вставить("Партия", СтрокаПоиска.Партия);
			КонецЕсли;
			Если ВедетсяСуммовойУчетПоСкладам Тогда 
				СтруктураПоискаПартии.Вставить("Склад", СтрокаПоиска.Склад);
			КонецЕсли;
			СтруктураПоискаПартии.Вставить("Подразделение", СтрокаПоиска.Подразделение);
			СтрокиДвижений = ТаблицаДвижений.НайтиСтроки(СтруктураПоискаПартии);
			КоличествоКРаспределению = СтрокаПоиска.Количество;
			Для каждого СтрокаДвижений Из СтрокиДвижений Цикл
				Если СтрокаДвижений.Количество <= 0 И СтрокаДвижений.Сумма <= 0 Тогда
					Продолжить;
				КонецЕсли;
				
				Если СтрокаДвижений.Количество > 0  И КоличествоКРаспределению > 0 Тогда
					СтрокаПартии = ТаблицаОстатковПоПартиям.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаПартии,СтрокаПоиска);
					СтрокаПартии.Партия = СтрокаДвижений.Регистратор;
					СтрокаПартии.НетПартииНаОстатках = Истина;
					Если КоличествоКРаспределению <= СтрокаДвижений.Количество Тогда
						СтрокаПартии.Количество = КоличествоКРаспределению;
						СтрокаДвижений.Количество = СтрокаДвижений.Количество - КоличествоКРаспределению;
						КоличествоКРаспределению = 0;
					Иначе
						СтрокаПартии.Количество = СтрокаДвижений.Количество;
						КоличествоКРаспределению = КоличествоКРаспределению - СтрокаДвижений.Количество;
						СтрокаДвиженийКоличество = 0;							
					КонецЕсли;
					СтрокаПартии.Сумма = 0;
				КонецЕсли;
				ОпределитьДопПараметрыПоСтроке(СтрокаПартии, СтруктураОписанийТипов, Ложь, СтрокаПоиска.Счет);
				Если КоличествоКРаспределению = 0 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если КоличествоКРаспределению > 0 Тогда
				СтрокаПартии = ТаблицаОстатковПоПартиям.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаПартии,СтрокаПоиска);
				СтрокаПартии.Партия 		  = СтруктураПараметров.СлужебнаяПартия;
				СтрокаПартии.Сумма			  = 0;
				СтрокаПартии.НетПартииНаОстатках = Истина;
				ЗаполнитьДопПараметрыСтрокиПартии(СтрокаПартии, Ложь, Ложь, Ложь, Ложь); 
				КоличествоКРаспределению	  = 0;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	// Необходимо выполнить распределение партий по суммам, для счетов 08.01; 08.02; 08.03; 08.04.2; 08.05; 08.08
	ПараметрыОтбора.КоличественныйУчет = Ложь;
	
	ОстаткиССуммовымУчетом = ТаблицаОстатков.НайтиСтроки(ПараметрыОтбора);
	Для каждого СтрокаПоиска Из ОстаткиССуммовымУчетом Цикл
		СтруктураПоискаДвижений = Новый Структура();
		СтруктураПоискаДвижений.Вставить("Счет", 			СтрокаПоиска.Счет);
		СтруктураПоискаДвижений.Вставить("Номенклатура", 	СтрокаПоиска.Номенклатура);
		СтруктураПоискаДвижений.Вставить("Подразделение", 	СтрокаПоиска.Подразделение);
		СтрокиДвижений = ТаблицаДвижений.НайтиСтроки(СтруктураПоискадвижений);
		КонтрольнаяСумма = СтрокаПоиска.Сумма;
		Для каждого СтрокаДвижений Из СтрокиДвижений Цикл
			Если Окр(СтрокаДвижений.Сумма,0) = 0 Тогда 
				Продолжить;
			КонецЕсли;
			Если СтруктураОписанийТипов.ОписаниеТиповДляПартийПоВложениям.СодержитТип(ТипЗнч(СтрокаДвижений.Регистратор))
				Или СтруктураОписанийТипов.ОписаниеТиповДляДопПоискаПоВложениям.СодержитТип(ТипЗнч(СтрокаДвижений.Регистратор)) Тогда
				СтрокаПартии = ТаблицаОстатковПоПартиям.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаПартии,СтрокаПоиска);
				СтрокаПартии.Партия = СтрокаДвижений.Регистратор;
				Если Окр(КонтрольнаяСумма, 0) <= Окр(СтрокаДвижений.Сумма,0) Тогда
					СтрокаПартии.Сумма = КонтрольнаяСумма;
					СтрокаДвижений.Сумма = СтрокаДвижений.Сумма - КонтрольнаяСумма;
					КонтрольнаяСумма = 0;
				Иначе
					СтрокаПартии.Сумма = СтрокаДвижений.Сумма;
					КонтрольнаяСумма = КонтрольнаяСумма - СтрокаДвижений.Сумма;
					СтрокаДвижений.Сумма = 0;
				КонецЕсли;
				ОпределитьДопПараметрыПоСтроке(СтрокаПартии, СтруктураОписанийТипов, Ложь, СтрокаПоиска.Счет); 
			Иначе
				КонтрольнаяСумма = КонтрольнаяСумма - СтрокаДвижений.Сумма;
			КонецЕсли;
			Если Окр(КонтрольнаяСумма,0) = 0 Тогда 
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура РаспределитьПоПартиямПоКомплектующим(ПараметрыРаспределения, ТаблицаКомплектующих,
												ТаблицаИспользованныхПартий, СтруктураОписанийТипов)
												
	ПланСчетов = ПланыСчетов.Хозрасчетный;
	
	СтруктураДляДопПоиска = Новый Структура;
	СтруктураДляДопПоиска.Вставить("НуженДопПоиск", Истина);
	СтрокиДопРаспределения = ПараметрыРаспределения.ТаблицаОстатковПоПартиям.НайтиСтроки(СтруктураДляДопПоиска);
	
	Для каждого Строка Из СтрокиДопРаспределения Цикл
		СтруктураПоискаКомплектующих = Новый Структура;
		СтруктураПоискаКомплектующих.Вставить("ДокументИсточник", Строка.Партия);
		ДатаПередачи = Строка.Партия.Дата;
		Комплектующие = ПараметрыРаспределения.ТаблицаСборкаОборудования.НайтиСтроки(СтруктураПоискаКомплектующих);
		Для каждого СтрКомплектующая Из Комплектующие Цикл   			
			Если БухгалтерскийУчетПовтИсп.СчетВИерархии(СтрКомплектующая.СчетКомплектующие, ПланСчетов.Материалы) Тогда
				СтруктураОтбораДвижений = Новый Структура;
				СтруктураОтбораДвижений.Вставить("Счет", СтрКомплектующая.СчетКомплектующие);
				СтруктураОтбораДвижений.Вставить("Номенклатура", СтрКомплектующая.Номенклатура);
				ПоискПартийДляКомплектующих = ПараметрыРаспределения.ТаблицаДвижений10.НайтиСтроки(СтруктураОтбораДвижений);
				КоличествоКРаспределению = СтрКомплектующая.Количество;
				Для каждого СтрокаДвижений Из ПоискПартийДляКомплектующих Цикл
					Если СтрокаДвижений.Количество <= 0 Тогда
						Продолжить;
					КонецЕсли;
					Если СтрокаДвижений.Период > ДатаПередачи Тогда
						Продолжить;
					КонецЕсли;
					СтрокаИсключений = ТаблицаИспользованныхПартий.Добавить();
					СтрокаИсключений.Номенклатура = СтрКомплектующая.Номенклатура;
					СтрокаИсключений.Счет		  = СтрКомплектующая.СчетКомплектующие;
					СтрокаИсключений.Партия		  = СтрокаДвижений.Регистратор;
					Если КоличествоКРаспределению <=  СтрокаДвижений.Количество Тогда
						СтрокаИсключений.Количество  = КоличествоКРаспределению;
						СтрокаДвижений.Количество	 = СтрокаДвижений.Количество - КоличествоКРаспределению;
						КоличествоКРаспределению	 = 0;
					Иначе
						СтрокаИсключений.Количество = СтрокаДвижений.Количество;
						КоличествоКРаспределению	= КоличествоКРаспределению - СтрокаДвижений.Количество;
						СтрокаДвижений.Количество	= 0;
					КонецЕсли;					
					Если СтруктураОписанийТипов.ОписаниеТиповПоиска10СчетаДля0708.СодержитТип(ТипЗнч(СтрокаДвижений.Регистратор)) Тогда
						
						СтрокаПартии = ТаблицаКомплектующих.Добавить(); 
						ЗаполнитьЗначенияСвойств(СтрокаПартии, СтрКомплектующая);
						СтрокаПартии.Это10Счет		  = Истина;
						СтрокаПартии.Партия			  = СтрокаДвижений.Регистратор;
						СтрокаПартии.ИскатьСуммуНДС	  = Истина;
						СтрокаПартии.ИскатьДопРасходы = Истина;
						СтрокаПартии.Количество		  = СтрокаИсключений.Количество;
						СтрокаПартии.ИД				  = Строка.ИД;
					КонецЕсли;
					Если КоличествоКРаспределению = 0 Тогда
						Прервать;
					КонецЕсли;					
				КонецЦикла;
			Иначе
				СтруктураОтбораДвижений = Новый Структура;
				СтруктураОтбораДвижений.Вставить("Счет", СтрКомплектующая.СчетКомплектующие);
				СтруктураОтбораДвижений.Вставить("Номенклатура", СтрКомплектующая.Номенклатура);
				ПоискПартийДляКомплектующих = ПараметрыРаспределения.ТаблицаДвижений0807.НайтиСтроки(СтруктураОтбораДвижений);
				КоличествоКРаспределению = СтрКомплектующая.Количество;
				Для каждого СтрокаДвижений Из ПоискПартийДляКомплектующих Цикл
					Если СтрокаДвижений.Количество <= 0 И СтрокаДвижений.Сумма <= 0 Тогда
						Продолжить;
					КонецЕсли;
					Если СтрокаДвижений.Период > ДатаПередачи Тогда
						Продолжить;
					КонецЕсли;
					
					Если СтрокаДвижений.Количество > 0  И КоличествоКРаспределению > 0 Тогда
						СтрокаПартии = ТаблицаКомплектующих.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаПартии, СтрКомплектующая);
						СтрокаПартии.Партия = СтрокаДвижений.Регистратор;
						
						Если КоличествоКРаспределению <= СтрокаДвижений.Количество Тогда
							СтрокаПартии.Количество = КоличествоКРаспределению;
							СтрокаДвижений.Количество = СтрокаДвижений.Количество - КоличествоКРаспределению;
							КоличествоКРаспределению = 0;
						Иначе
							СтрокаПартии.Количество = СтрокаДвижений.Количество;
							КоличествоКРаспределению = КоличествоКРаспределению - СтрокаДвижений.Количество;
							СтрокаДвиженийКоличество = 0;							
						КонецЕсли;
					КонецЕсли;
					Если СтруктураОписанийТипов.ОписаниеТиповДляПартийПоВложениям.СодержитТип(ТипЗнч(СтрокаПартии.Партия)) Тогда
						СтрокаПартии.ИскатьСуммуНДС = Истина;
						СтрокаПартии.ИскатьДопРасходы = Истина;
					Иначе
						СтрокаПартии.ИскатьСуммуНДС = Ложь;
						СтрокаПартии.ИскатьДопРасходы = Ложь;
					КонецЕсли;
					СтрокаПартии.ИД				  = Строка.ИД;
					Если КоличествоКРаспределению = 0 Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	
КонецПроцедуры

// Процедуры заполнения остатков по группам счетов
// Для раздельного учета остатки разделены на 2 группы. 
Процедура ЗаполнитьПоТоварнымСчетам(СтруктураПараметров, ТаблицаИспользованныхПартий) 
	
	ПланСчетов = ПланыСчетов.Хозрасчетный;
	
	Таблицы = ОстаткиПоСчетамУчетаТоваров(СтруктураПараметров, ТаблицаИспользованныхПартий);
	
	ТаблицаСПолнойАналитикой 	= Таблицы[1].Выгрузить();
	ТаблицаКомплектаций			= Таблицы[2].Выгрузить();
	ТаблицаСдокументамиДвижений = Таблицы[6].Выгрузить();
	
	ТаблицаСЗаполненнымиПартиями = ТаблицаСПолнойАналитикой.СкопироватьКолонки();
	ТаблицаСЗаполненнымиПартиями.Колонки.Удалить("Партия");
	ТаблицаСЗаполненнымиПартиями.Колонки.Добавить("Партия", Новый ОписаниеТипов(Документы.ТипВсеСсылки().Типы()));
	ТаблицаСЗаполненнымиПартиями.Колонки.Добавить("ИскатьСуммуНДС", Новый ОписаниеТипов("Булево"));
	ТаблицаСЗаполненнымиПартиями.Колонки.Добавить("НуженДопПоиск", Новый ОписаниеТипов("Булево"));
	ТаблицаСЗаполненнымиПартиями.Колонки.Добавить("СчетПоступления",
		Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаСЗаполненнымиПартиями.Колонки.Добавить("ИскатьДопРасходы", Новый ОписаниеТипов("Булево"));
	ТаблицаСЗаполненнымиПартиями.Колонки.Добавить("ЭтоКомплектация", Новый ОписаниеТипов("Булево"));
	ТаблицаСЗаполненнымиПартиями.Колонки.Добавить("ИД", Новый ОписаниеТипов("УникальныйИдентификатор"));
	ТаблицаСЗаполненнымиПартиями.Колонки.Добавить("НетПартииНаОстатках", Новый ОписаниеТипов("Булево"));
	
	ТаблицаСПолнойАналитикой.Колонки.Добавить("НайденаПартия");
	ТаблицаСПолнойАналитикой.Колонки.Добавить("ОсталосьКРаспределению");
	
	СтруктураОписанийТипов = ПолучитьСтруктуруОписанийТипов();
	ПараметрыДляДопРаспределенияПоПартиям = ПараметрыДляДопРаспределенияПоПартиям();
	ПараметрыДляДопРаспределенияПоПартиям.СтруктураОписанийТипов = СтруктураОписанийТипов;
	// Попрбуем выполнить распределение по партиям, сначала осуществляем первичный проход 
	РаспределитьОстаткиТоваровПоПартиям(ТаблицаСПолнойАналитикой,
											ТаблицаСЗаполненнымиПартиями,
											ТаблицаСДокументамиДвижений,
											СтруктураОписанийТипов);
	
	ДлительныеОперации.СообщитьПрогресс(, Символы.ПС +НСтр("ru='Выполняется формирование документов (40%)...'"));
		
	// Для некоторых документов надо осуществить доп поиск, например:
	// Когда идет перемещение со счета на счет или поступление на 45 счет через РТУ
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("НуженДопПоиск", Истина);
	СтрокиТребующиеДопПоиска = ТаблицаСЗаполненнымиПартиями.НайтиСтроки(ПараметрыОтбора);
	Для каждого Стр Из СтрокиТребующиеДопПоиска Цикл
		ПараметрыОтбораПартии = Новый Структура;
		ПараметрыОтбораПартии.Вставить("Номенклатура", Стр.Номенклатура);
		ПараметрыОтбораПартии.Вставить("Счет", 	   Стр.СчетПоступления); 
		КоличествоКРаспределению = Стр.Количество;  
		РаспределитьПоПартиямДополнительно(ПараметрыОтбораПартии, ТаблицаСДокументамиДвижений, ТаблицаСЗаполненнымиПартиями, 
											КоличествоКРаспределению, Стр, 
											ПараметрыДляДопРаспределенияПоПартиям);
		ТаблицаСЗаполненнымиПартиями.Удалить(Стр);
	КонецЦикла;
	
	// Если вдруг, что-то пошло не по плану и остались не распределенные остатки,
	// То оставшиеся остатки добавим в ТаблицуСЗаполненнымиПартиями, по таким остаткам будет заполнено только количество
	ОтборНеРаспределенныхСтрок = Новый Структура;
	ОтборНеРаспределенныхСтрок.Вставить("НайденаПартия", Ложь);
	НеРаспределенныеСтроки = ТаблицаСПолнойАналитикой.НайтиСтроки(ОтборНеРаспределенныхСтрок);
	Для Каждого Стр Из НеРаспределенныеСтроки Цикл
		НоваяСтрокаСПартией = ТаблицаСЗаполненнымиПартиями.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаСПартией,Стр);
		ЗаполнитьДопПараметрыСтрокиПартии(НоваяСтрокаСПартией, Истина, Ложь, Ложь, Ложь, Ложь);  
		НоваяСтрокаСпартией.Количество			 = Стр.ОсталосьКРаспределению;
		НоваяСтрокаСПартией.Партия				 = Неопределено;
		НоваяСтрокаСПартией.НетПартииНаОстатках = Истина;
		Стр.НайденаПартия = Истина;
	КонецЦикла;

	ДлительныеОперации.СообщитьПрогресс(, Символы.ПС +НСтр("ru='Выполняется формирование документов (50%)...'"));
	
	// Если в качестве партии выступали комплектации, то для комплектующих надо идентифицировать документ партии
	ОтборКомплектаций = Новый Структура;
	ОтборКомплектаций.Вставить("ЭтоКомплектация", Истина);
	СтрокиКомплектации = ТаблицаСЗаполненнымиПартиями.НайтиСтроки(ОтборКомплектаций); 
	
	ПартииДляКомплектующих = ТаблицаКомплектаций.СкопироватьКолонки();
	ПартииДляКомплектующих.Колонки.Удалить("КоличествоКомплектующие");
	ПартииДляКомплектующих.Колонки.Удалить("Комплектующие");
	ПартииДляКомплектующих.Колонки.Добавить("ИД");
	ПартииДляКомплектующих.Колонки.Добавить("Партия", СтруктураОписанийТипов.ОписаниеТиповПартия); 
	ПартииДляКомплектующих.Колонки.Добавить("ИскатьСуммуНДС");
	ПартииДляКомплектующих.Колонки.Добавить("ИскатьДопРасходы");
	ПартииДляКомплектующих.Колонки.Добавить("НетПартииНаОстатках");
	
	
	Для каждого Строка Из СтрокиКомплектации Цикл
		ОтборПоКомплектации = Новый Структура;
		ОтборПоКомплектации.Вставить("Комплектация", Строка.Партия);
		СтрокиСКомплектующими = ТаблицаКомплектаций.НайтиСтроки(ОтборПоКомплектации);
		Для каждого СтрКомплектующая Из СтрокиСКомплектующими Цикл
			Если Строка.Количество < СтрКомплектующая.Количество Тогда 
				КоличествоКомплектующихКРаспределению = Окр(СтрКомплектующая.КоличествоКомплектующие / СтрКомплектующая.Количество * Строка.Количество,2);
			Иначе
				КоличествоКомплектующихКРаспределению = СтрКомплектующая.КоличествоКомплектующие;
			КонецЕсли;
			ПараметрыОтбораПартии = Новый Структура;
			ПараметрыОтбораПартии.Вставить("Номенклатура", СтрКомплектующая.Комплектующие);
			ПараметрыОтбораПартии.Вставить("Счет", СтрКомплектующая.СчетУчета);
			
			ПараметрыДляДопРаспределенияПоПартиям.ЭтоКомплектация	= Истина;
			ПараметрыДляДопРаспределенияПоПартиям.ИД				= Строка.ИД;
			
			РаспределитьПоПартиямДополнительно(ПараметрыОтбораПартии, ТаблицаСДокументамиДвижений, ПартииДляКомплектующих, 
												КоличествоКомплектующихКРаспределению, СтрКомплектующая, 
												ПараметрыДляДопРаспределенияПоПартиям);
		КонецЦикла; 	
	КонецЦикла;	
		
	ДлительныеОперации.СообщитьПрогресс(, Символы.ПС +НСтр("ru='Выполняется формирование документов (60%)...'"));
	
	// На данный момент все партии найдены, необходимо к подобранным партиям найти данные по НДС
	// И найти доп расходы (ГТД на Импорт, Заявление о ввозе товаров и Поступление доп расходов
	// Подготовим таблицы с партиями и номенклатурой, по которым будет осуществлени поиск данных по НДС
	
	ПараметрыПоискаОсновныхСуммНДС = Новый Структура;
	ПараметрыПоискаОсновныхСуммНДС.Вставить("ИскатьСуммуНДС", Истина);
	ТЧПоискаНДС = ТаблицаСЗаполненнымиПартиями.Скопировать(ПараметрыПоискаОсновныхСуммНДС,"Номенклатура,Партия");
	
	ТЧПоискаНДСК = ПартииДляКомплектующих.Скопировать(ПараметрыПоискаОсновныхСуммНДС,"Номенклатура,Партия");
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТЧПоискаНДСК,ТЧПоискаНДС);
	
	ПараметрыПоискаДопСуммНДС = Новый Структура;
	ПараметрыПоискаДопСуммНДС.Вставить("ИскатьДопРасходы", Истина);
	ТЧПоискаДопРасходов = ТаблицаСЗаполненнымиПартиями.Скопировать(ПараметрыПоискаДопСуммНДС, "Номенклатура,Партия");
	
	ТЧПоискаДопРасходовК = ПартииДляКомплектующих.Скопировать(ПараметрыПоискаДопСуммНДС, "Номенклатура,Партия");
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТЧПоискаДопРасходовК,ТЧПоискаДопРасходов);
	
	ТЧПоискаНДС.Свернуть("Номенклатура, Партия");
	ТЧПоискаДопРасходов.Свернуть("Номенклатура, Партия");
	
	ТЧАвансовыйОтчетКакРасходы = Новый ТаблицаЗначений;
	ТЧАвансовыйОтчетКакРасходы.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТЧАвансовыйОтчетКакРасходы.Колонки.Добавить("Партия", Новый ОписаниеТипов("ДокументСсылка.АвансовыйОтчет"));
	ТЧАвансовыйОтчетКакРасходы.Колонки.Добавить("Счет", Новый ОписаниеТипов ("ПланСчетовСсылка.Хозрасчетный"));
	
	
	СтруктураПараметровДляПолученияНДС = Новый Структура;
	СтруктураПараметровДляПолученияНДС.Вставить("Организация",				СтруктураПараметров.Организация);
	СтруктураПараметровДляПолученияНДС.Вставить("Период",					СтруктураПараметров.Период);
	СтруктураПараметровДляПолученияНДС.Вставить("СчетНДС",					СтруктураПараметров.СчетНДСПоУмолчанию);
	СтруктураПараметровДляПолученияНДС.Вставить("ДокументыПартий", 			ТЧПоискаНДС);
	СтруктураПараметровДляПолученияНДС.Вставить("ОснованияДляДопРасходов",  ТЧПоискаДопРасходов);
	СтруктураПараметровДляПолученияНДС.Вставить("АвансовыйОтчетКакРасходы", ТЧАвансовыйОтчетКакРасходы);  
	СтруктураПараметровДляПолученияНДС.Вставить("СокращеннаяАналитика",     СтруктураПараметров.СокращеннаяАналитика);
	
	СуммыПоНДС = ДанныеНДСПоДокументам(СтруктураПараметровДляПолученияНДС);
	ПараметрыДляВводаОстатков = СтруктураПараметровДляЗаполненияВНО();

	ПараметрыДляВводаОстатков.СуммыПоПоступлениям	= СуммыПоНДС[17].Выгрузить();
	ПараметрыДляВводаОстатков.СуммыДопРасходов		= СуммыПоНДС[11].Выгрузить(); 
	ПараметрыДляВводаОстатков.АВКакДопРасходы		= СуммыПоНДС[18].Выгрузить();
	ПараметрыДляВводаОстатков.ТаблицаОстатков	    = ТаблицаСЗаполненнымиПартиями;
	ПараметрыДляВводаОстатков.ТаблицаКомплектующих	= ПартииДляКомплектующих;
	
	ДлительныеОперации.СообщитьПрогресс(, Символы.ПС +НСтр("ru='Выполняется формирование документов (70%)...'"));
	
	ЗаполнитьДокументыВводаОстатков(ПараметрыДляВводаОстатков, СтруктураПараметров, Истина);

КонецПроцедуры

Функция ЗаполнитьПоСчетам0708(СтруктураПараметров)
	
	СтруктураОписанийТипов = ПолучитьСтруктуруОписанийТипов();
	ПланСчетов = ПланыСчетов.Хозрасчетный;
	
	ТаблицыОстатковДвижений = ОстаткиПоСчетамКапВложений(СтруктураПараметров);
	
	ТаблицаОстатков 					= ТаблицыОстатковДвижений[11].Выгрузить();
	ТаблицаСборкаОборудования	 		= ТаблицыОстатковДвижений[2].Выгрузить();
	ТаблицаДвижений0807					= ТаблицыОстатковДвижений[7].Выгрузить();
	ТаблицаДвижений10					= ТаблицыОстатковДвижений[10].Выгрузить();
	
	ТаблицаОстатковПоПартиям = ТаблицаОстатков.СкопироватьКолонки(); 
	ТаблицаОстатковПоПартиям.Колонки.Удалить("Партия");
	ТаблицаОстатковПоПартиям.Колонки.Добавить("Партия", Новый ОписаниеТипов(Документы.ТипВсеСсылки().Типы())); 
	ТаблицаОстатковПоПартиям.Колонки.Добавить("НуженДопПоиск", Новый ОписаниеТипов("Булево"));
	ТаблицаОстатковПоПартиям.Колонки.Добавить("ИскатьСуммуНДС", Новый ОписаниеТипов("Булево"));
	ТаблицаОстатковПоПартиям.Колонки.Добавить("ИскатьДопРасходы", Новый ОписаниеТипов("Булево")); 
	ТаблицаОстатковПоПартиям.Колонки.Добавить("ИД", Новый ОписаниеТипов("УникальныйИдентификатор"));
	ТаблицаОстатковПоПартиям.Колонки.Добавить("НетПартииНаОстатках", Новый ОписаниеТипов("Булево"));
	
	ТаблицаИспользованныхПартий = Новый ТаблицаЗначений;
	ТаблицаИспользованныхПартий.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаИспользованныхПартий.Колонки.Добавить("Счет", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаИспользованныхПартий.Колонки.Добавить("Партия", Новый ОписаниеТипов(Документы.ТипВсеСсылки().Типы()));
	ТаблицаИспользованныхПартий.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	
	// Использованные партии надо будет потом исключить, когда будем осуществляться заполнение остатков по счетам 10,41,45
	// Здесь материалы с 10 счета могут быть в требовании накладной и передаче оборудования в монтаж, как составные объекта строительства
	
	РаспределитьОстаткиВложенийПоПартиям(ТаблицаОстатков, ТаблицаДвижений0807, ТаблицаОстатковПоПартиям, СтруктураОписанийТипов, СтруктураПараметров);
	
	ТаблицаКомплектующих = ТаблицаСборкаОборудования.СкопироватьКолонки(); 	
	ТаблицаКомплектующих.Колонки.Добавить("ИД"); 	
	ТаблицаКомплектующих.Колонки.Добавить("Партия"); 
	ТаблицаКомплектующих.Колонки.Добавить("ИскатьСуммуНДС");
	ТаблицаКомплектующих.Колонки.Добавить("ИскатьДопРасходы");
	ТаблицаКомплектующих.Колонки.Добавить("Это10Счет");
	
	ПараметрыДляРаспределенияПоПартиямПоКомплектующим = ПараметрыДляРаспределенияПартийПоКомплектующим();
	ПараметрыДляРаспределенияПоПартиямПоКомплектующим.ТаблицаОстатковПоПартиям		= ТаблицаОстатковПоПартиям;
	ПараметрыДляРаспределенияПоПартиямПоКомплектующим.ТаблицаСборкаОборудования 	= ТаблицаСборкаОборудования;
	ПараметрыДляРаспределенияПоПартиямПоКомплектующим.ТаблицаДвижений10				= ТаблицаДвижений10;
	ПараметрыДляРаспределенияПоПартиямПоКомплектующим.ТаблицаДвижений0807			= ТаблицаДвижений0807;
	
	РаспределитьПоПартиямПоКомплектующим(ПараметрыДляРаспределенияПоПартиямПоКомплектующим, ТаблицаКомплектующих,
										ТаблицаИспользованныхПартий, СтруктураОписанийТипов);
	
	ПараметрыПоискаОсновныхСуммНДС = Новый Структура;
	ПараметрыПоискаОсновныхСуммНДС.Вставить("ИскатьСуммуНДС", Истина);
	ТЧПоискаНДС = ТаблицаОстатковПоПартиям.Скопировать(ПараметрыПоискаОсновныхСуммНДС,"Номенклатура,Партия");
	
	ТЧПоискаНДСК = ТаблицаКомплектующих.Скопировать(ПараметрыПоискаОсновныхСуммНДС,"Номенклатура,Партия");
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТЧПоискаНДСК,ТЧПоискаНДС);
	
	ПараметрыПоискаДопСуммНДС = Новый Структура;
	ПараметрыПоискаДопСуммНДС.Вставить("ИскатьДопРасходы", Истина);
	ТЧПоискаДопРасходов = ТаблицаОстатковПоПартиям.Скопировать(ПараметрыПоискаДопСуммНДС, "Номенклатура,Партия");
	
	ТЧПоискаДопРасходовК = ТаблицаКомплектующих.Скопировать(ПараметрыПоискаДопСуммНДС, "Номенклатура,Партия");
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТЧПоискаДопРасходовК,ТЧПоискаДопРасходов);
	
	ТЧАвансовыйОтчетКакРасходы = ТаблицаОстатковПоПартиям.Скопировать(ПараметрыПоискаОсновныхСуммНДС, "Номенклатура,Партия,Счет");
	
	ТЧПоискаНДС.Свернуть("Номенклатура, Партия");
	ТЧПоискаДопРасходов.Свернуть("Номенклатура, Партия");
	ТЧАвансовыйОтчетКакРасходы.Свернуть("Номенклатура, Партия, Счет");
	
	
	СтруктураПараметровДляПолученияНДС = Новый Структура;
	СтруктураПараметровДляПолученияНДС.Вставить("Организация",				СтруктураПараметров.Организация);
	СтруктураПараметровДляПолученияНДС.Вставить("Период",					СтруктураПараметров.Период);
	СтруктураПараметровДляПолученияНДС.Вставить("СчетНДС",					СтруктураПараметров.СчетНДСПоУмолчанию);
	СтруктураПараметровДляПолученияНДС.Вставить("ДокументыПартий", 			ТЧПоискаНДС);
	СтруктураПараметровДляПолученияНДС.Вставить("ОснованияДляДопРасходов",  ТЧПоискаДопРасходов);
	СтруктураПараметровДляПолученияНДС.Вставить("АвансовыйОтчетКакРасходы", ТЧАвансовыйОтчетКакРасходы);
	СтруктураПараметровДляПолученияНДС.Вставить("СокращеннаяАналитика",    СтруктураПараметров.СокращеннаяАналитика);
		
	ПараметрыДляВводаОстатков = СтруктураПараметровДляЗаполненияВНО();

	СуммыПоНДС = ДанныеНДСПоДокументам(СтруктураПараметровДляПолученияНДС);
	ПараметрыДляВводаОстатков.СуммыПоПоступлениям	= СуммыПоНДС[17].Выгрузить();
	ПараметрыДляВводаОстатков.СуммыДопРасходов		= СуммыПоНДС[11].Выгрузить(); 
	ПараметрыДляВводаОстатков.АВКакДопРасходы		= СуммыПоНДС[18].Выгрузить();
	ПараметрыДляВводаОстатков.ТаблицаОстатков	    = ТаблицаОстатковПоПартиям;
	ПараметрыДляВводаОстатков.ТаблицаКомплектующих	= ТаблицаКомплектующих;
	
	ЗаполнитьДокументыВводаОстатков(ПараметрыДляВводаОстатков, СтруктураПараметров, Ложь);
		
	
	Возврат ТаблицаИспользованныхПартий;
	
КонецФункции

#КонецОбласти
