#Область СлужебныйПрограммныйИнтерфейс

Процедура ПолучитьИнформациюОВходящихТранзакцияхОтБанков(ВыполнитьРасшифровку = Ложь) Экспорт
	
	ПараметрыРаботыКлиента = СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиентаПриЗапуске();
	Если НЕ ПараметрыРаботыКлиента.ДоступноИспользованиеРазделенныхДанных Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ УниверсальныйОбменСБанкамиВызовСервера.
			ЕстьПравоНаИзменениеДанныхИСвойствТранзакций() Тогда
		Возврат;
	КонецЕсли;
	
	ВходящиеТранзакции = УниверсальныйОбменСБанкамиВызовСервера.
		ТранзакцииТребующиеРасшифровки(
			ПредопределенноеЗначение("Перечисление.СервисыОбменаСБанками.ФинансоваяОтчетность"));
	Если ВходящиеТранзакции.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ФинОтчетностьВБанкиВызовСервера.
		ХранилищеОбщихНастроекЗагрузить(
			КлючПараметровОбработчикаОжиданияВходящихСообщений(), "");
		
	ДатаПоследнейТранзакции = ФинОтчетностьВБанкиВызовСервера.
		ДатаПоследнейТранзакции(ВходящиеТранзакции);
	Если ДатаПоследнейТранзакции <= Параметры.ДатаПоследнегоПолученногоСообщения
		И НЕ ВыполнитьРасшифровку
		И НЕ Параметры.ПоказыватьФормуСоСтарымиСообщениями Тогда
		
		Возврат;
		
	Иначе
		
		// Пришли новые сообщения.
		ВыполнитьРасшифровку = Истина;
		
	КонецЕсли;
	Параметры.ДатаПоследнегоПолученногоСообщения = ДатаПоследнейТранзакции;
	
	ЦикловОжиданияДоПоказаФормы = Параметры.ЦикловОжиданияДоПоказаФормы;
	ЦикловОжиданияДоПоказаФормы = ЦикловОжиданияДоПоказаФормы - 1;
	Если ЦикловОжиданияДоПоказаФормы <= 0 ИЛИ ВыполнитьРасшифровку Тогда
		// Устанавливаем счетчик циклов в начальное значение.
		ЦикловОжиданияДоПоказаФормы = Параметры.ЦикловОжиданияДоПоказаФормыНачальноеЗначение;
		ВыполнитьРасшифровку = Истина;
	КонецЕсли;
	Параметры.ЦикловОжиданияДоПоказаФормы = ЦикловОжиданияДоПоказаФормы;
	
	ФинОтчетностьВБанкиВызовСервера.
		ХранилищеОбщихНастроекСохранить(
			КлючПараметровОбработчикаОжиданияВходящихСообщений(), "",
			Параметры);
	
	Если ВыполнитьРасшифровку Тогда
		// Выводим диалог.
		ВыполнитьРасшифровкуПриНеобходимости(ВходящиеТранзакции);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодключениеОбработчикаОжиданияАвтообмена(ПоказыватьФормуСоСтарымиСообщениями = Истина, ИнициироватьСчетчикЦиклов = Истина) Экспорт
	
	ПараметрыОбработчика = ФинОтчетностьВБанкиВызовСервера.
		ХранилищеОбщихНастроекЗагрузить(КлючПараметровОбработчикаОжиданияВходящихСообщений(), "");
	
	Если ПоказыватьФормуСоСтарымиСообщениями Тогда
		
		ПараметрыРаботыКлиентаПриЗапуске 	= СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиентаПриЗапуске();
	
		// Проверки доступности ключей
		
		Если ИнициироватьСчетчикЦиклов Тогда
			ПараметрыОбработчика.ЦикловОжиданияДоПоказаФормы = ПараметрыОбработчика.ЦикловОжиданияДоПоказаФормыНачальноеЗначение;
		КонецЕсли;
		
		// Если проверки пройдены, определяем интервал выполнения.
		Интервал = ПараметрыОбработчика.Интервал;
		ПодключитьОбработчикОжидания(
			"ПолучитьИнформациюОВходящихСообщенияхФинансовойОтчетностиДляБанков",
			Интервал);
		
	Иначе
	
		ПараметрыОбработчика.ПоказыватьФормуСоСтарымиСообщениями = Ложь;
	
	КонецЕсли;
	
	ФинОтчетностьВБанкиВызовСервера.
		ХранилищеОбщихНастроекСохранить(
			КлючПараметровОбработчикаОжиданияВходящихСообщений(), "",
			ПараметрыОбработчика);
	
КонецПроцедуры

Процедура НачатьДлительнуюОперациюПоРасшифровкеТранзакций(Результат, ВходящийКонтекст) Экспорт
	
	Если Результат = Ложь Тогда
		// Сюда попадем, если форму расшифровки закрыли по "Больше не показывать".
		ПодключениеОбработчикаОжиданияАвтообмена(Ложь);
		Возврат;
	ИначеЕсли Результат = Неопределено Тогда
		// Сюда попадем, если форму расшифровки закрыли по крестику.
		ПодключениеОбработчикаОжиданияАвтообмена(Истина);
		Возврат;
	КонецЕсли;
	
	// Включаем режим показа старых сообщений если пользователь начал расшифровку.
	Параметры = ФинОтчетностьВБанкиВызовСервера.
		ХранилищеОбщихНастроекЗагрузить(КлючПараметровОбработчикаОжиданияВходящихСообщений(), "");
	Параметры.ПоказыватьФормуСоСтарымиСообщениями = Истина;
	ФинОтчетностьВБанкиВызовСервера.
	ХранилищеОбщихНастроекСохранить(
		КлючПараметровОбработчикаОжиданияВходящихСообщений(), "",
		Параметры);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
	ПараметрыОжидания.Интервал = 60 * 60;
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Расшифровка полученных сообщений'");
	
	ПараметрыРасшифровки =
		УниверсальныйОбменСБанкамиКлиент.ПараметрыРасшифроватьНерасшифрованныеТранзакции();
	ПараметрыРасшифровки.Сервис =
		ПредопределенноеЗначение("Перечисление.СервисыОбменаСБанками.ФинансоваяОтчетность");
	УниверсальныйОбменСБанкамиКлиент.
		РасшифроватьНерасшифрованныеТранзакции(Неопределено, ПараметрыРасшифровки);

КонецПроцедуры

#Область СохранитьПротокол

Процедура СохранитьПротоколПослеСохранения(ПолученныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ПолученныеФайлы = Неопределено Тогда
		ПоказатьОповещениеПользователя(НСтр("ru = 'Сохранение в файл'"),,
			НСтр("ru = 'При сохранении данных возникла ошибка.'"), БиблиотекаКартинок.Ошибка32);
		Возврат;
	КонецЕсли;
	
	ДанныеФайла = Неопределено;
	Для каждого ПолученныййФайл Из ПолученныеФайлы Цикл
		ДанныеФайла = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ПолученныййФайл.ПолноеИмя);
		Прервать;
	КонецЦикла;
	
	Если ДанныеФайла = Неопределено Тогда
		Путь = "";
	Иначе
		Путь = ДанныеФайла.Путь;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПутьКФайлам", Путь);
	
	Оповещение = Новый ОписаниеОповещения(
		"СохранитьПротоколПослеПоказаОповещенияЗавершение",
		ЭтотОбъект,
		ДополнительныеПараметры);
	ПоказатьОповещениеПользователя(НСтр("ru = 'Сохранение в файл'"), Оповещение,
		НСтр("ru = 'Протокол успешно сохранен.'"), БиблиотекаКартинок.Успешно32);
	
КонецПроцедуры

Процедура СохранитьПротоколПослеПоказаОповещенияЗавершение(ДополнительныеПараметры) Экспорт
	
	ФайловаяСистемаКлиент.ОткрытьПроводник(ДополнительныеПараметры.ПутьКФайлам);
	
КонецПроцедуры

#КонецОбласти

#Область ОткрытьПротокол

Процедура ОткрытьПротоколПослеВопросаОРасшифровке(Результат, ДополнительныеПараметры) Экспорт
	
	РезультатПолученияПротокола = ДополнительныеПараметры.РезультатПолученияПротокола;
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ОткрытьПротоколПослеРасшифровки",
		ЭтотОбъект,
		ДополнительныеПараметры);
	УниверсальныйОбменСБанкамиКлиент.РасшифроватьДанныеТранзакции(Оповещение,
		РезультатПолученияПротокола.Транзакция,,
		ДополнительныеПараметры.Форма);
	
КонецПроцедуры

Процедура ОткрытьПротоколПослеРасшифровки(РезультатРасшифровки, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатРасшифровки.Выполнено Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьПротоколЗавершение(ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОткрытьПротоколЗавершение(ДополнительныеПараметры) Экспорт
	
	РезультатПолученияПротокола = ДополнительныеПараметры.РезультатПолученияПротокола;
	ПоказыватьГиперссылкуЭтаповОтправки = ДополнительныеПараметры.ПоказыватьГиперссылкуЭтаповОтправки;
	
	Если РезультатПолученияПротокола.ДанныеНеРасшифрованы Тогда
		РезультатПолученияПротокола = УниверсальныйОбменСБанкамиВызовСервера.
			ПротоколОбработкиОтчетностиБанком(
				РезультатПолученияПротокола.Транзакция,
				ФинОтчетностьВБанкиВызовСервера.ТипыДокументовПротокола());
		Если НЕ РезультатПолученияПротокола.Выполнено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура(
		"РезультатПолученияПротокола, ПоказыватьГиперссылкуЭтаповОтправки",
		РезультатПолученияПротокола,
		ПоказыватьГиперссылкуЭтаповОтправки);
	
	Если РезультатПолученияПротокола.ТипТранзакции =
			ПредопределенноеЗначение("Перечисление.ТипыТранзакцийОбменаСБанкамиФинОтчетность.ОтчетностьСдана") Тогда
		ИмяФормы = "ОбщаяФорма.ПоложительныйПротоколОбработкиОтчетностиБанком";
	ИначеЕсли РезультатПолученияПротокола.ТипТранзакции = 
			ПредопределенноеЗначение("Перечисление.ТипыТранзакцийОбменаСБанкамиФинОтчетность.ОтчетностьНеПринята") Тогда
		ИмяФормы = "ОбщаяФорма.ОтрицательныйПротоколОбработкиОтчетностиБанком";
	ИначеЕсли РезультатПолученияПротокола.ТипТранзакции = 
			ПредопределенноеЗначение("Перечисление.ТипыТранзакцийОбменаСБанками.Ошибка") Тогда
		ИмяФормы = "ОбщаяФорма.ПротоколОшибкиОбменаСБанками";
	ИначеЕсли РезультатПолученияПротокола.ТипТранзакции = 
			ПредопределенноеЗначение("Перечисление.ТипыТранзакцийОбменаСБанками.ИзвещениеОПолучении") Тогда
		ИмяФормы = "ОбщаяФорма.ИзвещениеОПолученииТранзакцииБанком";
	Иначе
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму(
		ИмяФормы,
		ПараметрыФормы,
		ДополнительныеПараметры.Форма,
		ДополнительныеПараметры.УникальныйИдентификатор,
		,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
		);
	
	КонецПроцедуры
	
#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КлючПараметровОбработчикаОжиданияВходящихСообщений()
	
	Возврат "ПараметрыОбработчикаОжиданияВходящихСообщений";
	
КонецФункции

Функция ФормаРасшифровкиСообщенийОткрыта()
	
	Окна = ПолучитьОкна();
	
	Если Окна = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Формы = Новый Массив;
	Формы.Добавить("ОбщаяФорма.ПоказНерасшифрованныхСообщенийОбменаСБанками");
	Формы.Добавить("ОбщаяФорма.ДлительнаяОперацияОбменаСБанками");
	
	// Для формы, открытой в режиме "РежимОткрытияОкнаФормы.БлокироватьОкноВладельца",
	// не выполняется поиск по уникальному идентификатору, поэтому приходится искать самим.
	Для Каждого ОткрытоеОкно Из Окна Цикл
		Если ТипЗнч(ОткрытоеОкно) = Тип("ОкноКлиентскогоПриложения") 
			И ОткрытоеОкно.Содержимое.Количество() = 1
			И (Формы.Найти(ОткрытоеОкно.Содержимое[0].ИмяФормы) <> Неопределено) Тогда
			
			Возврат ОткрытоеОкно.Содержимое[0].Открыта();
			
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Процедура ВыполнитьРасшифровкуПриНеобходимости(ТребующиеРасшифровки)
	
	Если НЕ ФормаРасшифровкиСообщенийОткрыта() Тогда
		
		ПараметрыОткрытияФормы = Новый Структура("Транзакции", ТребующиеРасшифровки);
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"НачатьДлительнуюОперациюПоРасшифровкеТранзакций", 
			ЭтотОбъект);
		
		ОткрытьФорму(
			"ОбщаяФорма.ПоказНерасшифрованныхСообщенийОбменаСБанками", 
			ПараметрыОткрытияФормы,
			,
			,
			,
			,
			ОписаниеОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
