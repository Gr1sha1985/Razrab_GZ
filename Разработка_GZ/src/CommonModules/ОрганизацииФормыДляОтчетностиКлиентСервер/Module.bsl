#Область ГосударственныеКоды

// Проверяет соответствие кодов ИНН и (если необходимо) КПП правилам их составления.
//
// Параметры:
//  ИНН			 - Строка - проверяемый ИНН
//  КПП			 - Строка - проверяемый КПП
//  ЭтоЮрЛицо	 - Булево - Истина, если проверяемый ИНН и КПП должны принадлежать юр. лицу,
//                          Ложь, если физическому
// 
// Возвращаемое значение:
//  Строка - описание ошибки, отображаемое пользователю.
//           Пустая строка, если ошибка не выявлена. Незаполненные ИНН или КПП не считаются ошибкой.
//
Функция ПроверитьИНН(Знач ИНН, Знач КПП = "", Знач ЭтоЮрЛицо) Экспорт
	
	Если ПустаяСтрока(ИНН) Тогда
		Возврат "";
	КонецЕсли;
	
	РезультатПроверки = ИдентификационныеНомераНалогоплательщиков.ПроверитьСоответствиеТребованиямИНН(ИНН, ЭтоЮрЛицо);
	
	Если Не ПустаяСтрока(РезультатПроверки.ОписаниеОшибки) Тогда
		Возврат РезультатПроверки.ОписаниеОшибки;
	КонецЕсли;
	
	// Проверим КПП
	Если Не ЭтоЮрЛицо Или ПустаяСтрока(КПП) Тогда
		Возврат "";
	КонецЕсли;
	
	РезультатПроверки = ИдентификационныеНомераНалогоплательщиков.ПроверитьСоответствиеТребованиямКПП(КПП, ЭтоЮрЛицо, Ложь, Ложь);
	
	Возврат РезультатПроверки.ОписаниеОшибки;
		
КонецФункции

// Проверяет соответствие кода ОКТМО правилам их составления.
//
// Параметры:
//  КодПоОКТМО	 - Строка - проверяемый код
// 
// Возвращаемое значение:
//  Строка - описание ошибки, отображаемое пользователю.
//           Пустая строка, если ошибка не выявлена. Незаполненный код не считается ошибкой.
//
Функция ПроверитьКодПоОКТМО(КодПоОКТМО) Экспорт
	
	Если ПустаяСтрока(КодПоОКТМО) Тогда
		Возврат "";
	КонецЕсли;
	
	Комментарий = "";
	Если ПлатежиВБюджетКлиентСервер.ЭтоКодОКТМО(КодПоОКТМО, Комментарий) Тогда
		Возврат "";
	Иначе
		Возврат Комментарий;
	КонецЕсли;
	
КонецФункции

// Определяет код подчиненности ФСС в соответствии с приказом Минтруда от 29 апреля 2016 г. N 202н:
// "19. Кроме регистрационного номера страхователю присваивается код подчиненности,
//      который формируется как цифровой код, состоящий из пяти цифр, характеризующих слева направо следующее:
// 1) код территориального органа Фонда, в котором страхователь состоит на регистрационном учете в текущем периоде, - 4 знака;
// 2) символ причины регистрации - пятый знак, имеющий следующие значения:
// 2 - регистрация в качестве страхователя обособленного подразделения юридического лица;
// 3 - регистрация в качестве страхователя физического лица."
//
// Параметры:
//  КодОрганаФСС				 - Строка - 4-символьный код ФСС
//  ЮридическоеФизическоеЛицо	 - ПеречислениеСсылка.ЮридическоеФизическоеЛицо - признак юридического или физического лица
//  ОбособленноеПодразделение	 - Булево - признак обособленного подразделения
// 
// Возвращаемое значение:
//  Строка - 5-значный код подчиненности
//
Функция КодПодчиненностиФСС(КодОрганаФСС, ЮридическоеФизическоеЛицо, ОбособленноеПодразделение = Ложь) Экспорт
	
	Если ЮридическоеФизическоеЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо") Тогда
		СимволПричиныРегистрации = "3";
	ИначеЕсли ОбособленноеПодразделение Тогда
		СимволПричиныРегистрации = "2";
	Иначе
		СимволПричиныРегистрации = "1";
	КонецЕсли;
	
	Возврат КодОрганаФСС + СимволПричиныРегистрации;
	
КонецФункции

// Обработчик изменения поля ввода с кодом ОКВЭД2:
// заполняет наименование по коду.
// 
Процедура ИзменениеКодаОКВЭД2(Форма, Объект = Неопределено) Экспорт
	
	Если Объект = Неопределено Тогда
		Объект = Форма.Объект;
	КонецЕсли;
	
	// Исправление возможной опечатки в разделителе
	Объект.КодОКВЭД2 = СтрЗаменить(СокрЛП(Объект.КодОКВЭД2), ",", ".");
	
	Объект.НаименованиеОКВЭД2 = ОрганизацииФормыКлиентСервер.ПрочитатьОКВЭД2(Объект.КодОКВЭД2, Форма.ПодсказкаОКВЭД2);
	
	УстановитьВидимостьПодсказкиОКВЭД2(Форма);
	
КонецПроцедуры

// Управление видимостью подсказки ОКВЭД2.
//
Процедура УстановитьВидимостьПодсказкиОКВЭД2(Форма) Экспорт
	
	Форма.Элементы.ПодсказкаОКВЭД2.Видимость =
		Форма.Элементы.КодОКВЭД2.Видимость
		И ЗначениеЗаполнено(Форма.ПодсказкаОКВЭД2);
	
КонецПроцедуры

#КонецОбласти

#Область ЮридическийАдрес

// Извлекает из контейнера контактной информации, размещаемого на форме, формализованное строковое представление адреса организации
// (xml или в формате "девять запятых").
//
// Параметры:
//  КонтактнаяИнформацияОписаниеДополнительныхРеквизитов - ДанныеФормыКоллекция - контейнер контактной информации из соответствующей подсистемы
// 
// Возвращаемое значение:
//  Строка - формализованное представление адреса организации
//
Функция АдресОрганизацииЗначениеJSON(КонтактнаяИнформацияОписаниеДополнительныхРеквизитов) Экспорт
	
	Отбор = Новый Структура("ИмяРеквизита");
	Отбор.ИмяРеквизита = "КонтактнаяИнформацияПолеЮрАдресОрганизации";
	ДанныеИсточника = КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(Отбор);
	Если ДанныеИсточника.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ДанныеИсточника[0].Значение;
	
КонецФункции

#КонецОбласти

#Область ЗаполнениеДаннымиЕГР

// Создает новый объект, хранящий данные для запроса сведений об организации из открытых данных (единого госреестра)
// 
// Возвращаемое значение:
//  Структура - состав см. в коде функции
//
Функция НовыйЗапросДанныхЕГР() Экспорт
	
	Запрос = Новый Структура;
	Запрос.Вставить("ИНН",                       "");
	Запрос.Вставить("ЮридическоеФизическоеЛицо", ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ПустаяСсылка"));
	Запрос.Вставить("Ссылка",                    ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка"));
	Запрос.Вставить("ОбъектЗаполнен",            Ложь);
	Запрос.Вставить("ОтборОПФ",                  Неопределено);
	
	Возврат Запрос;
	
КонецФункции

// Создает новый объект, хранящий результат получения сведений об организации из открытых данных (единого госреестра).
// Эти данные - компактные, могут передаваться с клиента на сервер.
// Основная часть сведений об организации, полученная из открытых данных, не включается в этот объект,
// а помещается во временное хранилище.
// 
// Параметры:
//  Запрос	 - см. НовыйЗапросДанныхЕГР() - запрошенные сведения из открытых данных
// 
// Возвращаемое значение:
//  Структура - состав см. в коде функции
//
Функция НовыйОтветДанныхЕГР(Запрос) Экспорт
	
	Ответ = Новый Структура;
	
	Ответ.Вставить("Запрос", Запрос); // См. НовыйЗапросДанныхЕГР()
	
	Ответ.Вставить("Ошибка", Новый Структура);
	Ответ.Ошибка.Вставить("Код",      "");
	Ответ.Ошибка.Вставить("Описание", "");
	
	Ответ.Вставить("АдресДанных",   ""); // Данные по этому адресу - РаботаСКонтрагентами.НовыеРеквизитыЮридическогоЛица
	                                     // или РаботаСКонтрагентами.НовыеРеквизитыПредпринимателя
	
	Ответ.Вставить("КраткиеДанные", Новый Структура);
	Ответ.КраткиеДанные.Вставить("НаименованиеОрганизации",    "");
	Ответ.КраткиеДанные.Вставить("ЮридическоеФизическоеЛицо",  ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ПустаяСсылка"));
	
	Возврат Ответ;
	
КонецФункции

#КонецОбласти

#Область УправлениеФормой

Процедура УстановитьЗаголовокФормы(Форма, ВыводитьПодсказку = Истина) Экспорт
	
	Если ВыводитьПодсказку Тогда
		Форма.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 (%2)'"),
			Форма.Объект.Наименование, НСтр("ru='Реквизиты для отчетности'"));
	Иначе
		Форма.Заголовок = Форма.Объект.Наименование;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
