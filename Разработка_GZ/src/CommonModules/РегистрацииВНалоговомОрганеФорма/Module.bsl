
Процедура ОбновитьРегистрациюВНалоговомОргане(Форма, КПП, КодНалоговогоОргана, РегистрацияВНалоговомОргане) Экспорт
	
	Форма.Модифицированность = Истина;
	
	Форма.ЗначениеВРеквизитФормы(РегистрацияВНалоговомОргане.ПолучитьОбъект(), "РегистрацияВНалоговомОргане");
	Форма.Объект.РегистрацияВНалоговомОргане = РегистрацияВНалоговомОргане.Ссылка;
	
	//Установим КПП и код налогового органа из обновленной регистрации
	Если КПП <> Форма.РегистрацияВНалоговомОргане.КПП Тогда
		КПП = Форма.РегистрацияВНалоговомОргане.КПП;
	КонецЕсли;
	
	Если КодНалоговогоОргана <> Форма.РегистрацияВНалоговомОргане.Код Тогда
		КодНалоговогоОргана = Форма.РегистрацияВНалоговомОргане.Код;
	КонецЕсли;
	
	Форма.КодРегионаРегистрации = Форма.РегистрацияВНалоговомОргане.КодРегиона;
	
	Форма.ОтчетностьПодписываетПредставитель = ?(ЗначениеЗаполнено(Форма.РегистрацияВНалоговомОргане.Представитель), 1, 0);
	
	УстановитьАктуальноеЗначениеИстории(Форма, "ИсторияРегистрацийВНалоговомОргане", Новый Структура("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане.Ссылка));
	
КонецПроцедуры

Процедура ЗаписатьРегистрациюВНалоговомОргане(Форма, ТекущийОбъект, ВладелецРегистрации) Экспорт
	
	Если ЗначениеЗаполнено(Форма.РегистрацияВНалоговомОргане.Ссылка)
		И ОбщегоНазначения.СсылкаСуществует(Форма.РегистрацияВНалоговомОргане.Ссылка)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Форма.РегистрацияВНалоговомОргане.Ссылка, "ВерсияДанных")
			<> Форма.РегистрацияВНалоговомОргане.ВерсияДанных Тогда
		ОбъектРегистрации = Форма.РегистрацияВНалоговомОргане.Ссылка.ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(ОбъектРегистрации, Форма.РегистрацияВНалоговомОргане);
	Иначе
		ОбъектРегистрации = Форма.РеквизитФормыВЗначение("РегистрацияВНалоговомОргане");
	КонецЕсли;
	
	// В ПередЗаписьюНаСервере в свойство РегистрацияВНалоговомОргане устанавливается 
	// значение ссылки на новую регистрацию. 
	// Если это значение установлено и регистрация еще не сохранялась, то нужно установить ссылку нового
	Если НЕ ЗначениеЗаполнено(ОбъектРегистрации.Ссылка)
		И ЗначениеЗаполнено(ТекущийОбъект.РегистрацияВНалоговомОргане) Тогда
		ОбъектРегистрации.УстановитьСсылкуНового(ТекущийОбъект.РегистрацияВНалоговомОргане);
	КонецЕсли;
	ОбъектРегистрации.Владелец = ВладелецРегистрации;
	ОбъектРегистрации.Записать();
	
	Форма.ЗначениеВРеквизитФормы(ОбъектРегистрации, "РегистрацияВНалоговомОргане");

	// В регистрациях НаименованиеСлужебное заполняется из НаименованиеОбособленногоПодразделения
	// Если НаименованиеОбособленногоПодразделения не заполнено, тогда НаименованиеСлужебное заполняется по алгоритму 
	//	(см. Справочники.РегистрацииВНалоговомОргане.НаименованиеСлужебное())
	// Поэтому если
	//	- регистрация записывается одновременно с записью организации или обособленного подразделения
	// 	- и у подразделения меняется регистрация или меняется признак ОбособленноеПодразделение,
	// 	- и в прежней регистрации НаименованиеОбособленногоПодразделения не заполнено,
	// 	- и в прежней регистрации НаименованиеСлужебное равно наименованию (НаименованиеПолное или Наименование) текущего подразделения,
	// то в прежней регистрации нужно обновить НаименованиеСлужебное
	Если (ТипЗнч(ТекущийОбъект) = Тип("СправочникОбъект.Организации")
		Или ТипЗнч(ТекущийОбъект) = Тип("СправочникОбъект.ПодразделенияОрганизаций"))
		И ТекущийОбъект.ДополнительныеСвойства.Свойство("РегистрацияВНалоговомОрганеДоЗаписи") Тогда
		
		ПрежняяРегистрация = ТекущийОбъект.ДополнительныеСвойства.РегистрацияВНалоговомОрганеДоЗаписи;
		
		Если ЗначениеЗаполнено(ПрежняяРегистрация) Тогда
			
			ПрежнееНаименование = Неопределено;
			ПрежнееНаименованиеПолное = Неопределено;
			ПрежнийПризнакОбособленноеПодразделение = Неопределено;
			
			ТекущийОбъект.ДополнительныеСвойства.Свойство("НаименованиеДоЗаписи", ПрежнееНаименование);
			ТекущийОбъект.ДополнительныеСвойства.Свойство("НаименованиеПолноеДоЗаписи", ПрежнееНаименованиеПолное);
			ТекущийОбъект.ДополнительныеСвойства.Свойство("ОбособленноеПодразделениеДоЗаписи", ПрежнийПризнакОбособленноеПодразделение);		
			
			Если (ПрежняяРегистрация <> ОбъектРегистрации.Ссылка 
				ИЛИ ПрежнийПризнакОбособленноеПодразделение = Неопределено 
				ИЛИ ПрежнийПризнакОбособленноеПодразделение <> ТекущийОбъект.ОбособленноеПодразделение) 
				И ПустаяСтрока(ПрежняяРегистрация.НаименованиеОбособленногоПодразделения)
				И (ПрежняяРегистрация.НаименованиеСлужебное = ПрежнееНаименование
				ИЛИ ПрежняяРегистрация.НаименованиеСлужебное = ПрежнееНаименованиеПолное) Тогда
				ОбъектПрежнейРегистрации = ПрежняяРегистрация.ПолучитьОбъект();
				ОбъектПрежнейРегистрации.Записать(); //НаименованиеСлужебное будет сформировано автоматически перед записью объекта
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТекущийОбъект.РегистрацияВНалоговомОргане <> ОбъектРегистрации.Ссылка Тогда
		ТекущийОбъект.РегистрацияВНалоговомОргане = ОбъектРегистрации.Ссылка;
	КонецЕсли;
	
	УстановитьАктуальноеЗначениеИстории(Форма, "ИсторияРегистрацийВНалоговомОргане", Новый Структура("РегистрацияВНалоговомОргане", ТекущийОбъект.РегистрацияВНалоговомОргане));
	
КонецПроцедуры

Процедура УстановитьНовуюРегистрацию(Форма, ВладелецРегистрации, КПП, КодНалоговогоОргана) Экспорт
	
	СвойстваПредставителя = Новый Структура("Доверенность, ДокументПредставителя, Представитель, УполномоченноеЛицоПредставителя");
	ЗаполнитьЗначенияСвойств(СвойстваПредставителя, Форма.РегистрацияВНалоговомОргане);
	
	КодыОКТМО = Новый Структура("КодПоОКТМО, КодПоОКАТО");
	ЗаполнитьЗначенияСвойств(КодыОКТМО, Форма.РегистрацияВНалоговомОргане);
	
	РеквизитыНалоговогоОргана = Новый Структура("Код, Наименование, НаименованиеИФНС");
	ЗаполнитьЗначенияСвойств(РеквизитыНалоговогоОргана, Форма.РегистрацияВНалоговомОргане);
	
	Форма.ЗначениеВРеквизитФормы(Справочники.РегистрацииВНалоговомОргане.СоздатьЭлемент(), "РегистрацияВНалоговомОргане");
	Форма.РегистрацияВНалоговомОргане.Владелец = ВладелецРегистрации;
	Форма.РегистрацияВНалоговомОргане.КПП      = КПП;
	Форма.РегистрацияВНалоговомОргане.Код      = КодНалоговогоОргана;
	Форма.КодРегионаРегистрации                  = ДанныеГосударственныхОрганов.КодРегионаПоКодуНалоговогоОргана(КодНалоговогоОргана);
	Форма.РегистрацияВНалоговомОргане.КодРегиона = Форма.КодРегионаРегистрации;
	Если РеквизитыНалоговогоОргана.Код = Форма.РегистрацияВНалоговомОргане.Код Тогда
		ЗаполнитьЗначенияСвойств(Форма.РегистрацияВНалоговомОргане, РеквизитыНалоговогоОргана);
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(Форма.РегистрацияВНалоговомОргане, СвойстваПредставителя);
	ЗаполнитьЗначенияСвойств(Форма.РегистрацияВНалоговомОргане, КодыОКТМО);
	Форма.Объект.РегистрацияВНалоговомОргане = Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка();
	
	Форма.ОтчетностьПодписываетПредставитель = ?(ЗначениеЗаполнено(Форма.РегистрацияВНалоговомОргане.Представитель), 1, 0);
	
КонецПроцедуры

Процедура ЗаписатьНаборЗаписейИсторииРегистрацийВНалоговомОргане(Форма, Владелец, ЗаписьНового = Ложь) Экспорт
	
	История = Форма.ИсторияРегистрацийВНалоговомОрганеНаборЗаписей.Выгрузить();
	История.ЗаполнитьЗначения(Владелец, "СтруктурнаяЕдиница");
	
	Набор = РегистрыСведений.ИсторияРегистрацийВНалоговомОргане.СоздатьНаборЗаписей();
	Набор.Отбор.СтруктурнаяЕдиница.Установить(Владелец);
	Набор.Прочитать();
	ИсторияДоИзменения = Набор.Выгрузить();
	
	// Получим только измененные записи и запишем их поштучно для того, что бы верно сработала дата запрета редактирования
	ИзмененнаяИстория = ИсторияДоИзменения.СкопироватьКолонки();
	ИзмененнаяИстория.Колонки.Добавить("ТипИзменения", Новый ОписаниеТипов("Строка"));
	
	Для Каждого ЗаписьИстории Из История Цикл
		ЗаписьИсторииДоИзменения =  ИсторияДоИзменения.Найти(ЗаписьИстории.Период, "Период");
		Если ЗаписьИсторииДоИзменения = Неопределено Тогда
			ИзмененнаяЗапись = ИзмененнаяИстория.Добавить();
			ИзмененнаяЗапись.ТипИзменения = "Добавление";
			ЗаполнитьЗначенияСвойств(ИзмененнаяЗапись, ЗаписьИстории);
		Иначе
			Для Каждого Колонка Из ИсторияДоИзменения.Колонки Цикл
				Если ЗаписьИстории[Колонка.Имя] <> ЗаписьИсторииДоИзменения[Колонка.Имя] Тогда
					ИзмененнаяЗапись = ИзмененнаяИстория.Добавить();
					ИзмененнаяЗапись.ТипИзменения = "Изменение";
					ЗаполнитьЗначенияСвойств(ИзмененнаяЗапись, ЗаписьИстории);
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	// Найдем удаленные записи
	Для Каждого ЗаписьИсторииДоИзменения Из ИсторияДоИзменения Цикл
		ЗаписьИстории = История.Найти(ЗаписьИсторииДоИзменения.Период, "Период");
		Если ЗаписьИстории = Неопределено Тогда
			ИзмененнаяЗапись = ИзмененнаяИстория.Добавить();
			ИзмененнаяЗапись.ТипИзменения = "Удаление";
			ЗаполнитьЗначенияСвойств(ИзмененнаяЗапись, ЗаписьИсторииДоИзменения);
		КонецЕсли;
	КонецЦикла;
	
	ИзмененнаяИстория.Сортировать("Период");
	
	Для Каждого ИзмененнаяЗапись ИЗ ИзмененнаяИстория Цикл
		
		НаборЗаписей = РегистрыСведений.ИсторияРегистрацийВНалоговомОргане.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(ИзмененнаяЗапись.Период);
		НаборЗаписей.Отбор.СтруктурнаяЕдиница.Установить(ИзмененнаяЗапись.СтруктурнаяЕдиница);
		Если ЗаписьНового Тогда
			НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
		КонецЕсли;
		
		Если ИзмененнаяЗапись.ТипИзменения = "Удаление" Тогда
			НаборЗаписей.Записать();
		Иначе
			Запись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, ИзмененнаяЗапись);
			НаборЗаписей.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПрочитатьНаборЗаписейИсторииРегистрацийВНалоговомОргане(Форма, Владелец) Экспорт
	
	Набор = РегистрыСведений.ИсторияРегистрацийВНалоговомОргане.СоздатьНаборЗаписей();
	Набор.Отбор.СтруктурнаяЕдиница.Установить(Владелец);
	Набор.Прочитать();
	Форма.ЗначениеВРеквизитФормы(Набор, "ИсторияРегистрацийВНалоговомОрганеНаборЗаписей");
	Форма.ИсторияРегистрацийВНалоговомОрганеНаборЗаписей.Сортировать("Период");
	
КонецПроцедуры

Функция АктуальнаяЗаписьИстории(Форма) Экспорт
	
	ИсторияНаборЗаписей = Форма.ИсторияРегистрацийВНалоговомОрганеНаборЗаписей;
	
	КоличествоЗаписей = ИсторияНаборЗаписей.Количество();
	ДатаОтсчетаПериодическихСведений = РегистрыСведений.ИсторияРегистрацийВНалоговомОргане.ДатаОтсчетаПериодическихСведений();
	
	Если КоличествоЗаписей > 0 Тогда
		АктуальнаяЗаписьИстории = ИсторияНаборЗаписей[КоличествоЗаписей - 1];
	Иначе
		АктуальнаяЗаписьИстории = ИсторияНаборЗаписей.Добавить();
		АктуальнаяЗаписьИстории.Период = ДатаОтсчетаПериодическихСведений;
	КонецЕсли;
	
	Возврат АктуальнаяЗаписьИстории;
	
КонецФункции

Процедура УстановитьАктуальноеЗначениеИстории(Форма, ИмяРегистраСведений, АктуальныеЗначения)
	
	ИсторияНаборЗаписей = Форма[ИмяРегистраСведений+"НаборЗаписей"];
	
	ИсторияНаборЗаписей.Сортировать("Период");
	
	КоличествоЗаписей = ИсторияНаборЗаписей.Количество();
	ДатаОтсчетаПериодическихСведений = РегистрыСведений[ИмяРегистраСведений].ДатаОтсчетаПериодическихСведений();
	
	Если КоличествоЗаписей > 0 Тогда
		// Самая первая запись действует с начала истории
		ИсторияНаборЗаписей[0].Период = ДатаОтсчетаПериодическихСведений;
		
		АктуальнаяЗаписьИстории = ИсторияНаборЗаписей[КоличествоЗаписей - 1];
	Иначе
		АктуальнаяЗаписьИстории = ИсторияНаборЗаписей.Добавить();
		АктуальнаяЗаписьИстории.Период = ДатаОтсчетаПериодическихСведений;
	КонецЕсли;
	Для Каждого Значение Из АктуальныеЗначения Цикл
		АктуальнаяЗаписьИстории[Значение.Ключ] = Значение.Значение;
	КонецЦикла;
	
КонецПроцедуры

