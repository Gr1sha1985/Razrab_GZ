
///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ВЫБОРА ЗНАЧЕНИЙ ПЕРЕОПРЕДЕЛЯЕМЫХ ТИПОВ

//Открывает форму для выбора значения договора с установленными отборами
//
Процедура ОткрытьФормуВыбораДоговора(ПараметрыФормы, Элемент, ФормаВыбора = "ФормаВыбора") Экспорт
	
	ОткрытьФорму("Справочник.ДоговорыКонтрагентов." + ФормаВыбора, ПараметрыФормы, Элемент);
	
КонецПроцедуры

//Открывает форму для выбора значения банковского счета с установленными отборами
//
Процедура ОткрытьФормуВыбораБанковскогоСчетОрганизации(ПараметрыФормы, Элемент) Экспорт
	
	ОткрытьФорму("Справочник.БанковскиеСчета.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

//Открывает форму для выбора значения подразделениям с установленными отборами
//
Процедура ОткрытьФормуВыбораПодразделения(ПараметрыФормы, Элемент) Экспорт
	
	ОткрытьФорму("Справочник.ПодразделенияОрганизаций.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

Процедура ОткрытьСчетФактуру(Форма, СчетФактура, ВидСчетаФактуры) Экспорт

	УчетНДСКлиент.ОткрытьСчетФактуру(Форма, СчетФактура, ВидСчетаФактуры);

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// АКТУАЛИЗАЦИЯ ДАННЫХ

// Формирует список имен реквизитов формы отчета, содержащих идентификаторы фоновых заданий,
// которые нужно отменить при закрытии отчета.
//
Функция ЗаданияОтменяемыеПриЗакрытииОтчета() Экспорт
	
	ОтменяемыеЗадания = Новый Массив;
	ОтменяемыеЗадания.Добавить("ИдентификаторЗадания");
	ОтменяемыеЗадания.Добавить("ИдентификаторЗаданияАктуализации");
	
	Возврат ОтменяемыеЗадания;
	
КонецФункции

// Выполняет действия после вывода результата в табличный документ на форме отчета.
//
// Параметры:
//  Форма        - ФормаКлиентскогоПриложения - место вывода результата отчета.
//
Процедура ПослеФормированияОтчета(Форма) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "КонтрольноеСоотношениеИтоговВыполняется") Тогда
		
		Если Форма.КонтрольноеСоотношениеИтоговВыполняется Тогда
			
			БухгалтерскиеОтчетыКлиент.УстановитьВидимостьПанелиПересчетаИтогов(Форма);
			
		Иначе
			
			БухгалтерскиеОтчетыКлиент.УстановитьВидимостьПанелиПересчетаИтогов(Форма, "ТребуетсяПересчет");

			Форма.ОтключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеАктуализации");
			Форма.ОтключитьОбработчикОжидания("Подключаемый_ПроверитьЗавершениеАктуализации");
			
			Организация = ?(Форма.Элементы.Найти("ПолеОрганизация") <> Неопределено, Форма.Отчет.Организация, Неопределено);
			ВыполняемоеЗадание = ЗакрытиеМесяцаВызовСервера.НайтиФоновоеЗаданиеАктуализацииПоОрганизации(
				Организация, Форма.УникальныйИдентификатор);
			Если ВыполняемоеЗадание <> Неопределено
			   И Форма.ИдентификаторЗаданияАктуализации = ВыполняемоеЗадание.УникальныйИдентификатор Тогда // Задание дано этим отчетом
				ЗакрытиеМесяцаВызовСервера.ОтменитьВыполнениеЗадания(Форма.ИдентификаторЗаданияАктуализации);
			КонецЕсли;		
			Форма.ИдентификаторЗаданияАктуализации = Неопределено;
			
			ЗакрытиеМесяцаКлиент.СкрытьПанельАктуализацииАвтоматически(Форма);
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЗакрытиеМесяцаКлиент.ПодключитьПроверкуАктуальности(Форма);
	
КонецПроцедуры

// Устарела. Необходимо использовать ПослеФормированияОтчета() .
//
Процедура ПодключитьПроверкуАктуальности(Форма) Экспорт

	ЗакрытиеМесяцаКлиент.ПодключитьПроверкуАктуальности(Форма);
	
КонецПроцедуры

Процедура ПроверитьАктуальность(Форма, Организация, Период = Неопределено) Экспорт

	ЗакрытиеМесяцаКлиент.ПроверитьАктуальность(Форма, Организация, Период);
	
КонецПроцедуры

Процедура Актуализировать(Форма, Организация, Период = Неопределено) Экспорт
	
	// Перед выполнением актуализации проверим количество документов требующих перепроведения.
	КоличествоДокументовДляПерепроведения = ЗакрытиеМесяцаВызовСервера.КоличествоДокументовДляПерепроведения(
		Организация, Период);
	
	Если КоличествоДокументовДляПерепроведения < ПредельноеКоличествоДокументовДляАктуализации() Тогда 
		
		ЗакрытиеМесяцаКлиент.Актуализировать(Форма, Организация, Период);
		
	Иначе
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Для актуализации данных необходимо перепровести более %1 документов.'"),
			КоличествоДокументовДляПерепроведения);
		
		ПараметрыОповещения = Новый Структура("Форма, Организация, Период", Форма, Организация, Период);
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ВопросАктуализироватьЗавершение", ЭтотОбъект, ПараметрыОповещения);
		
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить("ВыполнитьВсе", НСтр("ru = 'Перепровести все'"));
		СписокКнопок.Добавить("Отмена", НСтр("ru = 'Отмена'"));
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстСообщения, СписокКнопок, , "Отмена");
	КонецЕсли
	
КонецПроцедуры

Процедура ПроверитьВыполнениеАктуализацииОтчета(Форма, Организация, Период = Неопределено) Экспорт
	
	ЗакрытиеМесяцаКлиент.ПроверитьВыполнениеАктуализацииОтчета(Форма, Организация, Период);

КонецПроцедуры

Процедура ОтменитьАктуализацию(Форма, Организация, Период = Неопределено) Экспорт
	
	ЗакрытиеМесяцаКлиент.ОтменитьАктуализацию(Форма, Организация, Период);
	
КонецПроцедуры

Процедура ПроверитьЗавершениеАктуализации(Форма, Организация, Период = Неопределено) Экспорт
	
	ЗакрытиеМесяцаКлиент.ПроверитьЗавершениеАктуализации(Форма, Организация, Период);
	
КонецПроцедуры

Процедура ОбработкаОповещенияАктуализации(Форма, Организация, Период = Неопределено, ИмяСобытия, Параметр, Источник) Экспорт
	
	ЗакрытиеМесяцаКлиент.ОбработкаОповещенияАктуализации(Форма, Организация, Период, ИмяСобытия, Параметр, Источник);

КонецПроцедуры

Процедура СкрытьПанельАктуализацииАвтоматически(Форма) Экспорт
	
	ЗакрытиеМесяцаКлиент.СкрытьПанельАктуализацииАвтоматически(Форма);
	
КонецПроцедуры

Процедура СкрытьПанельАктуализации(Форма) Экспорт
	
	ЗакрытиеМесяцаКлиент.СкрытьПанельАктуализации(Форма);
	
КонецПроцедуры

Процедура ВопросАктуализироватьЗавершение(ВыбранныйВариант, ДополнительныеПараметры) Экспорт

	Если ВыбранныйВариант = "ВыполнитьВсе" Тогда
		
		ЗакрытиеМесяцаКлиент.Актуализировать(ДополнительныеПараметры.Форма, ДополнительныеПараметры.Организация, ДополнительныеПараметры.Период);
		
	КонецЕсли;

КонецПроцедуры

Функция ПредельноеКоличествоДокументовДляАктуализации()
	
	// Считаем, что без дополнительного вопроса можем перепровести 100 документов.
	Возврат 100;
	
КонецФункции