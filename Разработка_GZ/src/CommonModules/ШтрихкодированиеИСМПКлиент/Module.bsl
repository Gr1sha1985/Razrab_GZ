
#Область СлужебныйПрограммныйИнтерфейс

// Выполняет анализ результат обработки штрихкода, на основании которого выполняет необходимые действия.
// 
// Параметры:
//  ПараметрыЗавершенияВводаШтрихкода - Структура - (См. ШтрихкодированиеКлиент.ПараметрыЗавершенияОбработкиШтрихкода).
Функция ЗавершитьОбработкуВводаШтрихкода(ПараметрыЗавершенияВводаШтрихкода, ВыполнятьОбработчикОповещения = Истина) Экспорт
	
	Форма                       = ПараметрыЗавершенияВводаШтрихкода.Форма;
	ПараметрыСканирования       = ПараметрыЗавершенияВводаШтрихкода.ПараметрыСканирования;
	РезультатОбработкиШтрихкода = ПараметрыЗавершенияВводаШтрихкода.РезультатОбработкиШтрихкода;
	
	АвторизацияИСМП = РезультатОбработкиШтрихкода.Свойство("ТребуетсяАвторизацияИСМП") И РезультатОбработкиШтрихкода.ТребуетсяАвторизацияИСМП;
	Если АвторизацияИСМП Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("АвторизацияПользователяЗавершение",
			ЭтотОбъект, ПараметрыЗавершенияВводаШтрихкода);
		
		ПараметрыЗапросаКлючаСессии = ИнтерфейсИСМПКлиентСервер.ПараметрыЗапросаКлючаСессии(ПараметрыСканирования.Организация);
		ИнтерфейсАвторизацииИСМПКлиент.ЗапроситьКлючСессии(ПараметрыЗапросаКлючаСессии, ОписаниеОповещения);
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если ПараметрыСканирования.ВыводитьСообщенияОбОшибках
		И (РезультатОбработкиШтрихкода.ЕстьОшибкиВДеревеУпаковок
		Или РезультатОбработкиШтрихкода.ЕстьОшибки
		Или ЗначениеЗаполнено(РезультатОбработкиШтрихкода.ТекстОшибки)) Тогда
		
		ВидПродукции = Неопределено;
		Если ТипЗнч(РезультатОбработкиШтрихкода.ДанныеШтрихкода) = Тип("Структура") Тогда
			
			ДанныеШтрихкода = РезультатОбработкиШтрихкода.ДанныеШтрихкода;
			
			Если ЗначениеЗаполнено(ДанныеШтрихкода.ПредставлениеНоменклатуры) Тогда
				ПредставлениеНоменклатуры = Строка(ДанныеШтрихкода.ПредставлениеНоменклатуры);
			ИначеЕсли ЗначениеЗаполнено(ДанныеШтрихкода.Номенклатура) Тогда
				ПредставлениеНоменклатуры = Строка(ДанныеШтрихкода.Номенклатура);
			Иначе
				ПредставлениеНоменклатуры = НСтр("ru = '<Неизвестная маркируемая продукция>'");
			КонецЕсли;
			
			ВидПродукции = ДанныеШтрихкода.ВидПродукции;
			
		КонецЕсли;
		
		ПараметрыОткрытияФормы = ШтрихкодированиеИСКлиент.ПараметрыОткрытияФормыНевозможностиДобавленияОтсканированного(ВидПродукции);
		ПараметрыОткрытияФормы.Штрихкод                  = РезультатОбработкиШтрихкода.Штрихкод;
		ПараметрыОткрытияФормы.ТекстОшибки               = РезультатОбработкиШтрихкода.ТекстОшибки;
		ПараметрыОткрытияФормы.Организация               = ПараметрыСканирования.Организация;
		ПараметрыОткрытияФормы.ТипШтрихкода              = РезультатОбработкиШтрихкода.ТипШтрихкода;
		ПараметрыОткрытияФормы.ПредставлениеНоменклатуры = ПредставлениеНоменклатуры;
		ПараметрыОткрытияФормы.АдресДереваУпаковок       = РезультатОбработкиШтрихкода.АдресДереваУпаковок;
		ПараметрыОткрытияФормы.ПараметрыОшибки           = РезультатОбработкиШтрихкода.ПараметрыОшибки;
		ПараметрыОткрытияФормы.ИмяФормыИсточник          = Форма.ИмяФормы;
		ОткрытьФормуНевозможностиДобавленияОтсканированного(Форма, ПараметрыОткрытияФормы);
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если РезультатОбработкиШтрихкода.ТребуетсяУточнениеДанных Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"УточненияДанныхЗавершение", ЭтотОбъект, ПараметрыЗавершенияВводаШтрихкода);
		ШтрихкодированиеИСКлиент.УточнитьДанныеУПользователя(
			Форма, РезультатОбработкиШтрихкода.ПараметрыУточненияДанных, ОписаниеОповещения);
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если ВыполнятьОбработчикОповещения И Не (ПараметрыЗавершенияВводаШтрихкода.ОповещениеПриЗавершении = Неопределено) Тогда
		
		ВыполнитьОбработкуОповещения(ПараметрыЗавершенияВводаШтрихкода.ОповещениеПриЗавершении, РезультатОбработкиШтрихкода);
		
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

//Открывает форму, которая информирует пользователя об ошибке добавления введенного штрихкода.
//
Процедура ОткрытьФормуНевозможностиДобавленияОтсканированного(Форма, ПараметрыОткрытияФормы, ОповещениеОЗакрытии = Неопределено) Экспорт
	
	Если  ИнтеграцияИСКлиентСервер.ЭтоПродукцияМОТП(ПараметрыОткрытияФормы.ВидПродукции) Тогда
		ОткрытьФорму(
			"Обработка.ПроверкаИПодборТабачнойПродукцииМОТП.Форма.ИнформацияОНевозможностиДобавленияОтсканированного",
			ПараметрыОткрытияФормы, Форма,,,, ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	Иначе
		ОткрытьФорму(
			"Обработка.ПроверкаИПодборПродукцииИСМП.Форма.ИнформацияОНевозможностиДобавленияОтсканированного",
			ПараметрыОткрытияФормы, Форма,,,, ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

// Проверяет результат обработки штрихкода на необходимость интерактивного уточнения данных у пользователя.
// 
// Параметры:
//  РезультатОбработки - Структура - (См. ШтрихкодированиеИСМП.ИнициализироватьРезультатОбработкиШтрихкода).
// Возвращаемое значение:
//  Булево - Истина, если необходимо уточнить данные у пользователя.
Функция ТребуетсяУточнениеДанныхУПользователя(РезультатОбработки) Экспорт
	
	Возврат РезультатОбработки.ТребуетсяАвторизацияИСМП Или РезультатОбработки.ТребуетсяУточнениеДанных;
	
КонецФункции

// Выполняет повторно вызов клиентских функий обработки штрихкодов в случае успешного прохождения авторизации.
// 
// Параметры:
// 	Результат - Соответствие - содержит информация о необходимости авторизации по организации.
// 	ДополнительныеПараметры - (См. ШтрихкодированиеИСКлиент.ПараметрыЗавершенияОбработкиШтрихкода).
Процедура АвторизацияПользователяЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Соответствие") Тогда
		Возврат;
	КонецЕсли;
	
	Организация = ДополнительныеПараметры.ПараметрыСканирования.Организация;
	
	АвторизацияПрошлаУспешно = Результат[Организация] = Истина;
	
	Если АвторизацияПрошлаУспешно Тогда
		
		Если ДополнительныеПараметры.ВызовИзФормыДокумента Тогда
			
			ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОбработкиШтрихкода, ДополнительныеПараметры.ДанныеШтрихкода);
			
		Иначе
			
			Форма                   = ДополнительныеПараметры.Форма;
			ОповещениеПриЗавершении = ДополнительныеПараметры.ОповещениеЗавершениеОбработки;
			ДанныеШтрихкода         = ДополнительныеПараметры.ДанныеШтрихкода;
			ПараметрыСканирования   = ДополнительныеПараметры.ПараметрыСканирования;
			
			ШтрихкодированиеИСКлиент.ОбработатьДанныеШтрихкода(
				ОповещениеПриЗавершении, Форма, ДанныеШтрихкода, ПараметрыСканирования);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Результат[Организация]) = Тип("Строка") Тогда
		
		ПараметрыОткрытияФормы = Новый Структура("ТекстОшибки", Результат[Организация]);
		ОткрытьФорму("ОбщаяФорма.ИнформацияОНевозможностиДобавленияОтсканированного", ПараметрыОткрытияФормы);
		
	КонецЕсли;
	
КонецПроцедуры

//Выполняет действия после выбора серии пользователем.
//
//Параметры:
//   РезультатВыбора        - ОпределяемыйТип.СерияНоменклатуры - выбранная серия.
//  ДополнительныеПараметры - Структура - данные источника вызова
//
Процедура УточненияДанныхЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(РезультатВыбора) Тогда
		
		Если ДополнительныеПараметры.Свойство("ОповещениеПриЗавершении") Тогда
			ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении);
		Иначе
			ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеЗавершениеОбработки);
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	
	Если ДополнительныеПараметры.Свойство("ВызовИзФормыДокумента") Тогда
		Если ДополнительныеПараметры.ВызовИзФормыДокумента Тогда

			Действие = "ОбработатьВыборСерии";
			РезультатОбработкиШтрихкода = Форма.Подключаемый_ВыполнитьДействие(
				Действие,
				РезультатВыбора,
				ДополнительныеПараметры.РезультатОбработкиШтрихкода,
				ДополнительныеПараметры.КэшированныеЗначения);

			ПараметрыЗавершенияВводаШтрихкода = ШтрихкодированиеИСКлиент.ПараметрыЗавершенияОбработкиШтрихкода();
			ПараметрыЗавершенияВводаШтрихкода.РезультатОбработкиШтрихкода = РезультатОбработкиШтрихкода;
			ПараметрыЗавершенияВводаШтрихкода.КэшированныеЗначения        = ДополнительныеПараметры.КэшированныеЗначения;
			ПараметрыЗавершенияВводаШтрихкода.Форма                       = Форма;
			ДополнительныеПараметры.Свойство("ОповещениеЗавершениеОбработки", ПараметрыЗавершенияВводаШтрихкода.ОповещениеЗавершениеОбработки);
			ЗавершитьОбработкуВводаШтрихкода(ПараметрыЗавершенияВводаШтрихкода);

		Иначе

			ДанныеШтрихкода = ШтрихкодированиеИСВызовСервера.ОбработатьДанныеШтрихкодаПослеВыбораСерии(
				ДополнительныеПараметры.РезультатОбработкиШтрихкода, РезультатВыбора);

			ШтрихкодированиеИСКлиентСервер.ОбработатьСохраненныйВыборДанныхПоМаркируемойПродукции(Форма, ДанныеШтрихкода);

			ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, ДанныеШтрихкода);

		КонецЕсли;
		
	Иначе

		РезультатУточнения = Новый Структура;
		РезультатУточнения.Вставить("РезультатВыбора",             РезультатВыбора);
		РезультатУточнения.Вставить("КэшированныеЗначения",        ДополнительныеПараметры.КэшированныеЗначения);
		РезультатУточнения.Вставить("ПараметрыСканирования",       ДополнительныеПараметры.ПараметрыСканирования);
		РезультатУточнения.Вставить("Действие",                    "ОбработатьУточнениеДанных");
		РезультатУточнения.Вставить("РезультатОбработкиШтрихкода", ДополнительныеПараметры.РезультатОбработкиШтрихкода);
		РезультатУточнения.Вставить("ИсходныеДанные",              ДополнительныеПараметры.ДанныеШтрихкода);
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеВыполнитьДействие, РезультатУточнения);

	КонецЕсли;
	
КонецПроцедуры

// Открыывает форму проверки кодов маркировки с параметрами.
// 
// Параметры:
// 	ПараметрыОткрытия   - Структура, Неопределено                  - Параметры открытия формы.
// 	ВладелецФормы       - ФормаКлиентскогоПриложения, Неопределено - Владелец открываемой формы.
// 	ОповещениеОЗакрытии - ОписаниеОповещения, Неопределено         - Описание оповещения при закрытии формы.
Процедура ОткрытьФормуПроверкиКодовМаркировки(ПараметрыОткрытия = Неопределено, ВладелецФормы = Неопределено, ОповещениеОЗакрытии = Неопределено) Экспорт
	
	РежимОткрытия = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	
	Если ВладелецФормы = Неопределено Тогда
		РежимОткрытия = РежимОткрытияОкнаФормы.Независимый;
	КонецЕсли;
	
	ОткрытьФорму(
		"Обработка.ПроверкаКодовМаркировкиИСМП.Форма",
		ПараметрыОткрытия,
		ВладелецФормы,,,,
		ОповещениеОЗакрытии,
		РежимОткрытия);
	
КонецПроцедуры

#Область ПотоковаяПечать

// Описание
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма из которой вызвано событие
//  ДанныеШтрихкода - Структура - данные считанного штрихкода
//  ПараметрыСканирования - См. ШтрихкодированиеИС.ПараметрыСканирования
//
Процедура ОбработатьСобытиеПотоковойПечати(Форма, ДанныеШтрихкода, ПараметрыСканирования) Экспорт
	
	Если Не ПараметрыСканирования.ДоступнаПечатьЭтикеток Тогда
		Возврат;
	ИначеЕсли ПараметрыСканирования.ДанныеВыбораПоМаркируемойПродукции = Неопределено Тогда
		Возврат;
	ИначеЕсли Не ПараметрыСканирования.ДанныеВыбораПоМаркируемойПродукции.Свойство("ШаблонМаркировки")
		Или Не ЗначениеЗаполнено(ПараметрыСканирования.ДанныеВыбораПоМаркируемойПродукции.ШаблонМаркировки) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ШтрихкодированиеИСКлиентСервер.ЭтоEANИлиGTIN(ДанныеШтрихкода.Штрихкод) Тогда
		Возврат;
	КонецЕсли;
	
	GTIN = ШтрихкодированиеИСКлиентСервер.GTINПоШтрихкодуEAN(ДанныеШтрихкода.Штрихкод);
	ДанныеВыбора = ПараметрыСканирования.ДанныеВыбораПоМаркируемойПродукции;
	Если GTIN <> ДанныеВыбора.GTIN Тогда
		ШтрихкодированиеИСКлиентСервер.ОбработатьСохраненныйВыборДанныхПоМаркируемойПродукции(Форма, Неопределено, Ложь);
		ПараметрыСканирования.ДанныеВыбораПоМаркируемойПродукции = Неопределено;
		Возврат;
	КонецЕсли;
	
	СтруктураПечати = ПечатьЭтикетокИСМПКлиентСервер.СтруктураПечатиЭтикетки();
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Организация") Тогда
		СтруктураПечати.Организация    = Форма.Организация;
		СтруктураПечати.ВидПродукции   = Форма.ВидМаркируемойПродукции;
		ДокументПечати                 = Форма.ПроверяемыйДокумент;
	Иначе
		СтруктураПечати.Организация    = Форма.Объект.Организация;
		СтруктураПечати.ВидПродукции   = Форма.Объект.ВидПродукции;
		ДокументПечати                 = Форма.Объект.Ссылка;
	КонецЕсли;
	СтруктураПечати.Номенклатура       = ДанныеВыбора.Номенклатура;
	СтруктураПечати.Характеристика     = ДанныеВыбора.Характеристика;
	СтруктураПечати.Серия              = ДанныеВыбора.Серия;
	СтруктураПечати.ШаблонЭтикетки     = ДанныеВыбора.ШаблонЭтикетки;
	СтруктураПечати.Шаблон             = ДанныеВыбора.ШаблонМаркировки;
	СтруктураПечати.СпособВводаВОборот = ПараметрыСканирования.ДопустимыйСпособВводаВОборот;
		
	Если ПараметрыСканирования.Свойство("ЭтоМаркировкаОстатков") И ПараметрыСканирования.ЭтоМаркировкаОстатков Тогда
		СтруктураПечати.МаркировкаОстатков = Истина;
	КонецЕсли;
	
	ДанныеДляПечати = ПечатьЭтикетокИСМПКлиентСервер.ДанныеДляПечатиЭтикеток(СтруктураПечати, Форма, ДокументПечати);
	СтруктураРезультата = ПечатьЭтикетокИСМПВызовСервера.ПечатьЭтикетокСРезервированиемПоДокументу(ДанныеДляПечати);
	
	Если СтруктураРезультата <> Неопределено
			И СтруктураРезультата.РезультатРезервирования.Количество() Тогда
		СтрокаРезультат = СтруктураРезультата.РезультатРезервирования.Получить(0);
		// Подмена кода кодом из пула
		ДанныеШтрихкода.Штрихкод = СтрокаРезультат.КодМаркировки;
		// Оптимизация параметров сканирования
		ПараметрыСканирования.ДопустимыйСпособВводаВОборот = Неопределено;
		ПараметрыСканирования.ЭтоПечатьКодаМаркировкиИзПула = Истина;
		
		Если ПараметрыСканирования.Свойство("ЗапрашиватьСтатусыИСМП") Тогда
			ПараметрыСканирования.ЗапрашиватьСтатусыИСМП                   = Ложь;
			ПараметрыСканирования.ЗапрашиватьДанныеНеизвестныхУпаковокИСМП = Ложь;
		КонецЕсли;
		// Печать КМ
		ПечатьЭтикетокИСМПКлиент.ВывестиНаПечатьТабличныйДокумент(
			СтруктураРезультата.ТабличныйДокумент, Форма, ДанныеВыбора.СразуНаПринтер);
		Если Не ДанныеВыбора.СразуНаПринтер Тогда
			Форма.Активизировать();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Выполняет обработку навигационной ссылки в тексте ошибки.
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - Форма-источние события.
// 	НавигационнаяСсылкаФорматированнойСтроки - Строка - Данные навигационной ссылки.
// 	СтандартнаяОбработка                     - Булево - Признак стандартной обработки.
Процедура ОбработкаНавигационнойСсылкиТекстаОшибки(Форма, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка) Экспорт
	
	Если Не СтандартнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
		
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьПроверкуКодаМаркировкиИСМП" Тогда
		
		ПараметрыОткрытияПроверкиКМ              = ЛогированиеЗапросовИСМПКлиент.ПараметрыОткрытияПроверкиКодовМаркирови();
		ПараметрыОткрытияПроверкиКМ.Штрихкоды    = Форма.Штрихкод;
		ПараметрыОткрытияПроверкиКМ.Организация  = Форма.Организация;
		ПараметрыОткрытияПроверкиКМ.ВидПродукции = Форма.ВидПродукции;
		
		ЛогированиеЗапросовИСМПКлиент.ОткрытьРабочееМестоПроверкиКодовМаркировки(ПараметрыОткрытияПроверкиКМ, Форма);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьЛогЗапросов" Тогда
		
		ЛогированиеЗапросовИСМПКлиент.ОткрытьПросмотрЛогаЗапросов(Форма.УникальныйИдентификатор);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ВключитьЛогированиеЗапросов" Тогда
		
		ЛогированиеЗапросовИСМПКлиент.ВключитьЛогированиеЗапросов(Форма);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьПанельАдминистрирования" Тогда
		
		ЛогированиеЗапросовИСМПКлиент.ОткрытьПанельАдминистрирования(Форма);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОтключитьКонтрольВладельца" Тогда
		
		ВладелецФормы = Форма.ВладелецФормы;
		
		Если ВладелецФормы <> Неопределено Тогда
			
			Если ШтрихкодированиеИСКлиентСервер.ЭтоКонтекстОбъекта(ВладелецФормы, "Обработка.ПроверкаИПодборПродукцииИСМП")
				Или ШтрихкодированиеИСКлиентСервер.ЭтоКонтекстОбъекта(ВладелецФормы, "Обработка.ПроверкаИПодборТабачнойПродукцииМОТП") Тогда
				
				Оповестить("ОтключениеКонтроляСтатусовВладельца", ВладелецФормы.УникальныйИдентификатор);
				Форма.Закрыть();
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
