
#Область ПроцедурыДляОрганизацииПереопределяемый

// См. ОрганизацииПереопределяемый.ПриОпределенииРегистрационныхДанныхОрганизации
Процедура ПриОпределенииРегистрационныхДанныхОрганизации(Организация, Поля, Дата, РегистрационныеДанные) Экспорт
	
	ЗаполняемыеРеквизитыОрганизации = СтрРазделить(Поля, ",", Ложь);
	Для НомерРеквизита = 0 По ЗаполняемыеРеквизитыОрганизации.Количество() - 1 Цикл
		ЗаполняемыеРеквизитыОрганизации[НомерРеквизита] = СокрЛП(ЗаполняемыеРеквизитыОрганизации[НомерРеквизита]);
	КонецЦикла;
	
	ЗаполнитьПоДаннымПрограммногоИнтерфейса(Организация, ЗаполняемыеРеквизитыОрганизации, Дата, РегистрационныеДанные);
	
	ЗаполнитьПоДаннымОрганизации(Организация, ЗаполняемыеРеквизитыОрганизации, Дата, РегистрационныеДанные);
	
	ЗаполнитьПоДаннымРегистрацииВНалоговомОргане(Организация, ЗаполняемыеРеквизитыОрганизации, Дата, РегистрационныеДанные);
	
	ЗаполнитьПоДаннымРегистрацииВПФР(Организация, ЗаполняемыеРеквизитыОрганизации, Дата, РегистрационныеДанные);
	
	ЗаполнитьПоНалогам(Организация, ЗаполняемыеРеквизитыОрганизации, Дата, РегистрационныеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область СведенияОбОрганизации

Процедура ЗаполнитьПоДаннымПрограммногоИнтерфейса(Организация, ЗаполняемыеРеквизитыОрганизации, Дата, РегистрационныеДанные)
	
	РеквизитыИзПрограммногоИнтерфейса = ЗаполняемыеРеквизитыИзПрограммногоИнтерфейса();
	
	СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Организация, Дата);
	
	Для Каждого ЗаполняемыйРеквизит Из ЗаполняемыеРеквизитыОрганизации Цикл
		РеквизитПрограммногоИнтерфейса = Неопределено;
		РеквизитыИзПрограммногоИнтерфейса.Свойство(ЗаполняемыйРеквизит, РеквизитПрограммногоИнтерфейса);
		Если ЗначениеЗаполнено(РеквизитПрограммногоИнтерфейса) Тогда
			РегистрационныеДанные.Вставить(ЗаполняемыйРеквизит, СведенияОбОрганизации[РеквизитПрограммногоИнтерфейса]);
		КонецЕсли;
	КонецЦикла;
	
	Если ЗаполняемыеРеквизитыОрганизации.Найти("ЭтоФизическоеЛицо") <> Неопределено Тогда
		РегистрационныеДанные.Вставить("ЭтоФизическоеЛицо",
			СведенияОбОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо);
	КонецЕсли;
	
	Если ЗаполняемыеРеквизитыОрганизации.Найти("ЭтоЮридическоеЛицо") <> Неопределено Тогда
		РегистрационныеДанные.Вставить("ЭтоЮридическоеЛицо", 
			СведенияОбОрганизации.ЮридическоеФизическоеЛицо <> Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо);
	КонецЕсли;
	
КонецПроцедуры

Функция ЗаполняемыеРеквизитыИзПрограммногоИнтерфейса()
	
	РеквизитыИзПрограммногоИнтерфейса = Новый Структура;
	РеквизитыИзПрограммногоИнтерфейса.Вставить("ИНН", "ИНН");
	РеквизитыИзПрограммногоИнтерфейса.Вставить("КПП", "КПП");
	РеквизитыИзПрограммногоИнтерфейса.Вставить("НаименованиеПолное", "ПолноеНаименование");
	РеквизитыИзПрограммногоИнтерфейса.Вставить("НаименованиеСокращенное", "СокращенноеНаименование");
	РеквизитыИзПрограммногоИнтерфейса.Вставить("ОГРН", "ОГРН");
	РеквизитыИзПрограммногоИнтерфейса.Вставить("ДатаРегистрации", "ДатаРегистрации");
	РеквизитыИзПрограммногоИнтерфейса.Вставить("СвидетельствоСерияНомер", "СвидетельствоСерияНомер");
	РеквизитыИзПрограммногоИнтерфейса.Вставить("СвидетельствоДатаВыдачи", "СвидетельствоДатаВыдачи");
	
	Возврат РеквизитыИзПрограммногоИнтерфейса;
	
КонецФункции

Процедура ЗаполнитьПоДаннымОрганизации(Организация, ЗаполняемыеРеквизитыОрганизации, Дата, РегистрационныеДанные)
	
	РеквизитыЗапросаКОрганизации = СтруктураЗапросаКРеквизитам(
		ЗаполняемыеРеквизитыОрганизации, ЗаполняемыеРеквизитыПоДаннымОрганизации());
	
	Если ЗначениеЗаполнено(РеквизитыЗапросаКОрганизации) Тогда
		РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, РеквизитыЗапросаКОрганизации);
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(РегистрационныеДанные, РеквизитыОрганизации);
	КонецЕсли;
	
КонецПроцедуры

Функция ЗаполняемыеРеквизитыПоДаннымОрганизации()
	
	РеквизитыПоДаннымОрганизации = Новый Структура;
	
	РеквизитыПоДаннымОрганизации.Вставить("КодОКВЭД", "КодОКВЭД");
	РеквизитыПоДаннымОрганизации.Вставить("НаименованиеОКВЭД", "НаименованиеОКВЭД");
	РеквизитыПоДаннымОрганизации.Вставить("КодОКВЭД2", "КодОКВЭД2");
	РеквизитыПоДаннымОрганизации.Вставить("НаименованиеОКВЭД2", "НаименованиеОКВЭД2");
	РеквизитыПоДаннымОрганизации.Вставить("КодОКФС", "КодОКФС");
	РеквизитыПоДаннымОрганизации.Вставить("РегистрационныйНомерТФОМС", "РегистрационныйНомерТФОМС");
	
	Возврат РеквизитыПоДаннымОрганизации;
	
КонецФункции

Процедура ЗаполнитьПоДаннымРегистрацииВНалоговомОргане(Организация, ЗаполняемыеРеквизитыОрганизации, Дата, РегистрационныеДанные)
	
	РеквизитыЗапросаКРегистрации = СтруктураЗапросаКРеквизитам(
		ЗаполняемыеРеквизитыОрганизации, ЗаполняемыеРеквизитыПоДаннымРегистрацииВНалоговомОргане());
	
	Если ЗначениеЗаполнено(РеквизитыЗапросаКРегистрации) Тогда
		РегистрацияВНалоговомОргане = Справочники.Организации.РегистрацияВНалоговомОрганеНаДату(Организация, Дата);
		Если ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
			РеквизитыРегистрации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РегистрацияВНалоговомОргане, РеквизитыЗапросаКРегистрации);
			ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(РегистрационныеДанные, РеквизитыРегистрации);
		Иначе
			Для Каждого РеквизитЗапросаКРегистрации Из РеквизитыЗапросаКРегистрации Цикл
				РегистрационныеДанные.Вставить(РеквизитЗапросаКРегистрации.Значение, "");
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ЗаполняемыеРеквизитыПоДаннымРегистрацииВНалоговомОргане()
	
	РеквизитыПоДаннымОрганизации = Новый Структура;
	РеквизитыПоДаннымОрганизации.Вставить("КодНалоговогоОргана", "Код");
	РеквизитыПоДаннымОрганизации.Вставить("НаименованиеНалоговогоОргана", "НаименованиеИФНС");
	РеквизитыПоДаннымОрганизации.Вставить("КодПоОКАТО", "КодПоОКАТО");
	РеквизитыПоДаннымОрганизации.Вставить("КодПоОКТМО", "КодПоОКТМО");
	
	Возврат РеквизитыПоДаннымОрганизации;
	
КонецФункции

Процедура ЗаполнитьПоДаннымРегистрацииВПФР(Организация, ЗаполняемыеРеквизитыОрганизации, Дата, РегистрационныеДанные)
	
	Если ЗаполняемыеРеквизитыОрганизации.Найти("РегистрационныйНомерПФР") <> Неопределено Тогда
		
		РегистрационныеДанные.Вставить("РегистрационныйНомерПФР", УчетЗарплаты.РегистрационныйНомерПФР(Организация, Дата));
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоНалогам(Организация, ЗаполняемыеРеквизитыОрганизации, Дата, РегистрационныеДанные)
	
//            *  - Число - местная ставка налога на прибыль.
//            *  - Число - ставка налога на прибыль субъекта РФ.
//            *  - Число - ставка налога на прибыль фед бюдж.
//            *  - Число - ставка налога УСН.
	
	Если ЗаполняемыеРеквизитыОрганизации.Найти("СтавкаНалогаНаПрибыльМестный") <> Неопределено Тогда
		
		// В местный бюджет налог на прибыль уже не платиться.
		РегистрационныеДанные.Вставить("СтавкаНалогаНаПрибыльМестный", 0);
		
	КонецЕсли;
	
	Если ЗаполняемыеРеквизитыОрганизации.Найти("СтавкаНалогаНаПрибыльСубъектРФ") <> Неопределено Тогда
		
		РегистрационныеДанные.Вставить("СтавкаНалогаНаПрибыльСубъектРФ", НалоговыйУчет.НалоговаяСтавкаРегиональныйБюджет(
			Дата, Организация));
		
	КонецЕсли;
	
	Если ЗаполняемыеРеквизитыОрганизации.Найти("СтавкаНалогаНаПрибыльФБ") <> Неопределено Тогда
		
		РегистрационныеДанные.Вставить("СтавкаНалогаНаПрибыльФБ", НалоговыйУчет.НалоговаяСтавкаФедеральныйБюджет(
			Дата, Организация));
		
	КонецЕсли;
	
	Если ЗаполняемыеРеквизитыОрганизации.Найти("СтавкаНалогаУСН") <> Неопределено Тогда
		
		РегистрационныеДанные.Вставить("СтавкаНалогаУСН", УчетнаяПолитика.СтавкаНалогаУСН(Организация, Дата));
		
	КонецЕсли;
	
КонецПроцедуры

Функция СтруктураЗапросаКРеквизитам(ЗаполняемыеРеквизитыОрганизации, ДоступныеРеквизиты)
	
	РеквизитыДляЗапроса = Новый Структура;
	Для Каждого ЗаполняемыйРеквизит Из ЗаполняемыеРеквизитыОрганизации Цикл
		ИмяРеквизитаДляЗапроса = Неопределено;
		ДоступныеРеквизиты.Свойство(ЗаполняемыйРеквизит, ИмяРеквизитаДляЗапроса);
		Если ЗначениеЗаполнено(ИмяРеквизитаДляЗапроса) Тогда
			РеквизитыДляЗапроса.Вставить(ЗаполняемыйРеквизит, ИмяРеквизитаДляЗапроса);
		КонецЕсли;
	КонецЦикла;
	
	Возврат РеквизитыДляЗапроса;
	
КонецФункции

#КонецОбласти
