#Область СлужебныйПрограммныйИнтерфейс

#Область ОбновлениеИнформационнойБазы

// Конструктор 1го параметра для процедур ЗарегистрироватьДобавляемуюРоль и ДобавитьРолиВНепоставляемыеПрофили.
//
// Параметры:
//   ИмяОбработчикаОбновления - Строка - Имя обработчика обновления, в котором добавляются роли.
//
// Возвращаемое значение:
//   Структура - Содержит таблицу для использования в параметрах процедуры ДобавитьРолиВНепоставляемыеПрофили.
//
Функция КонтекстДобавляемыхРолей(ИмяОбработчикаОбновления) Экспорт
	Возврат Новый Структура("ЗаменяемыеРоли, ИмяОбработчикаОбновления", Новый Соответствие, ИмяОбработчикаОбновления);
КонецФункции

// Добавляет запись о добавляемой роли в структуру, используемую в первом параметре процедуры ДобавитьРолиВНепоставляемыеПрофили.
//
// Параметры:
//   КонтекстДобавляемыхРолей - Структура - Контекст добавляемых ролей. Создается при помощи функции КонтекстДобавляемыхРолей.
//   ИмяРолиДляПоискаПрофиля - Строка - Имя роли для поиска профилей групп доступа, в которые требуется добавить
//                                      указанную роль.
//   ИмяРолиДобавляемойВПрофиль - Строка - Имя роли, которую требуется добавить в найденный профиль.
//
Процедура ЗарегистрироватьДобавляемуюРоль(КонтекстДобавляемыхРолей, ИмяРолиДляПоискаПрофиля, ИмяРолиДобавляемойВПрофиль) Экспорт
	// Проверка наличия ролей в метаданных,
	// т.к. расширение пользовательских профилей не является обязательным условием перехода на новую версию
	// (обязательное условие - расширение поставляемых профилей).
	Если Метаданные.Роли.Найти(ИмяРолиДляПоискаПрофиля) = Неопределено Тогда
		СобытиеЖурнала = ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации() + "." + КонтекстДобавляемыхРолей.ИмяОбработчикаОбновления;
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'В обработчике обновления ""%1"" возникла ошибка: Роль ""%2"" не найдена в метаданных.'"),
			КонтекстДобавляемыхРолей.ИмяОбработчикаОбновления,
			ИмяРолиДляПоискаПрофиля);
		ЗаписьЖурналаРегистрации(СобытиеЖурнала, УровеньЖурналаРегистрации.Ошибка, , , ТекстОшибки);
		Возврат;
	КонецЕсли;
	Если Метаданные.Роли.Найти(ИмяРолиДобавляемойВПрофиль) = Неопределено Тогда
		СобытиеЖурнала = ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации() + "." + КонтекстДобавляемыхРолей.ИмяОбработчикаОбновления;
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'В обработчике обновления ""%1"" возникла ошибка: Роль ""%2"" не найдена в метаданных.'"),
			КонтекстДобавляемыхРолей.ИмяОбработчикаОбновления,
			ИмяРолиДобавляемойВПрофиль);
		ЗаписьЖурналаРегистрации(СобытиеЖурнала, УровеньЖурналаРегистрации.Ошибка, , , ТекстОшибки);
		Возврат;
	КонецЕсли;
	// Добавление ролей ДляПоискаПрофиля и ДобавляемойВПрофиль в массив ролей, на которые заменяется роль ДляПоискаПрофиля.
	МассивРолей = КонтекстДобавляемыхРолей.ЗаменяемыеРоли[ИмяРолиДляПоискаПрофиля];
	Если МассивРолей = Неопределено Тогда
		МассивРолей = Новый Массив;
		КонтекстДобавляемыхРолей.ЗаменяемыеРоли[ИмяРолиДляПоискаПрофиля] = МассивРолей;
	КонецЕсли;
	Если МассивРолей.Найти(ИмяРолиДляПоискаПрофиля) = Неопределено Тогда
		МассивРолей.Добавить(ИмяРолиДляПоискаПрофиля);
	КонецЕсли;
	Если МассивРолей.Найти(ИмяРолиДобавляемойВПрофиль) = Неопределено Тогда
		МассивРолей.Добавить(ИмяРолиДобавляемойВПрофиль);
	КонецЕсли;
КонецПроцедуры

// Находит пользовательские профили, в которых используется роль из колонки РольДляПоискаПрофиля
// и добавляет в них роль из колонки РольДобавляемаяВПрофиль. Предназначена для вызова из обработчика обновления.
//
// Параметры:
//   КонтекстДобавляемыхРолей - Структура - Контекст добавляемых ролей.
//       Создается при помощи функции КонтекстДобавляемыхРолей,
//       Наполняется при помощи процедуры ЗарегистрироватьДобавляемуюРоль.
//
Процедура ДобавитьРолиВНепоставляемыеПрофили(КонтекстДобавляемыхРолей) Экспорт
	УправлениеДоступом.ЗаменитьРолиВПрофилях(КонтекстДобавляемыхРолей.ЗаменяемыеРоли);
КонецПроцедуры

#КонецОбласти

#КонецОбласти
