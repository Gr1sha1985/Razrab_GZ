#Область СлужебныеПроцедурыИФункции

#Область АлгоритмыПрошлыхЛет

Процедура РасчетПоказателей_6НДФЛ_2016Кв1(НачалоПериода, ОкончаниеПериода, ДатаПодписи, Организация, РегистрацияВНалоговомОргане, ОписаниеТаблиц, ПодробныеДанные = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	Запрос.УстановитьПараметр("НачалоПредыдущегоГода", ДобавитьМесяц(НачалоПериода, -12));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(НачалоПериода));
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("ДатаПодписи", ДатаПодписи);
	Запрос.УстановитьПараметр("ОкончаниеПериодаОсмотраДоходовВычетов", ?(КонецГода(ОкончаниеПериода) = ОкончаниеПериода, Макс(ДатаПодписи, ОкончаниеПериода), ОкончаниеПериода));
	
	Если ОписаниеТаблиц.Свойство("Раздел1Доходы") Или ОписаниеТаблиц.Свойство("Раздел1Вычеты") Или ОписаниеТаблиц.Свойство("КоличествоПолучателейДохода") Тогда
		
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
		|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК Период,
		|	СведенияОДоходахНДФЛ.КодДохода,
		|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	СведенияОДоходахНДФЛ.Регистратор,
		|	СведенияОДоходахНДФЛ.Начисление,
		|	СведенияОДоходахНДФЛ.КодВычета,
		|	СведенияОДоходахНДФЛ.СуммаВычета,
		|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ
		|ПОМЕСТИТЬ ВТДоходы
		|ИЗ
		|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
		|ГДЕ
		|	СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ОкончаниеПериодаОсмотраДоходовВычетов
		|	И СведенияОДоходахНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
		|	И СведенияОДоходахНДФЛ.Организация = &Организация
		|	И (СведенияОДоходахНДФЛ.СуммаДохода <> 0
		|			ИЛИ СведенияОДоходахНДФЛ.СуммаВычета <> 0)";
		Запрос.Выполнить();
		
		СоздатьВТСтавкаНДФЛПоСтавкеРезидента2016(Запрос.МенеджерВременныхТаблиц, "ВТДоходы", "УчитыватьИзмененияСтатусаДляОтчетности", Месяц(ОкончаниеПериода));
		
		Если ОписаниеТаблиц.Свойство("КоличествоПолучателейДохода") Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СведенияОДоходахНДФЛ.ФизическоеЛицо), 0) КАК П000010006001
			|ИЗ
			|	ВТДоходы КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
			|			И СведенияОДоходахНДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
			|			И СведенияОДоходахНДФЛ.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
			|ГДЕ
			|	СведенияОДоходахНДФЛ.СуммаДохода <> 0
			|	И (НЕ СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ
			|			ИЛИ СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))";
			
			ОписаниеТаблиц.КоличествоПолучателейДохода = Запрос.Выполнить().Выгрузить()
			
		КонецЕсли;
	
		Если ОписаниеТаблиц.Свойство("Раздел1Доходы") Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.Регистратор,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.КодДохода,
			|	СведенияОДоходахНДФЛ.Начисление,
			|	СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом * 100 КАК СтавкаНалога,
			|	СведенияОДоходахНДФЛ.СуммаДохода,
			|	ВЫБОР
			|		КОГДА СведенияОДоходахНДФЛ.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
			|			ТОГДА СведенияОДоходахНДФЛ.СуммаДохода
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СуммаДивидендов
			|ПОМЕСТИТЬ ВТДоходыПоСтавкам
			|ИЗ
			|	ВТДоходы КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
			|			И СведенияОДоходахНДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
			|			И СведенияОДоходахНДФЛ.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
			|ГДЕ
			|	СведенияОДоходахНДФЛ.СуммаДохода <> 0
			|	И (НЕ СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ
			|			ИЛИ СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))";
			Запрос.Выполнить();
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.КодДохода,
			|	СведенияОДоходах.Начисление,
			|	СведенияОДоходах.Регистратор,
			|	СведенияОДоходах.СтавкаНалога КАК П000010001001,
			|	СведенияОДоходах.СтавкаНалога,
			|	СУММА(СведенияОДоходах.СуммаДохода) КАК П000010002001,
			|	СУММА(СведенияОДоходах.СуммаДивидендов) КАК П000010002501
			|ИЗ
			|	ВТДоходыПоСтавкам КАК СведенияОДоходах
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.КодДохода,
			|	СведенияОДоходах.Начисление,
			|	СведенияОДоходах.Регистратор,
			|	СведенияОДоходах.СтавкаНалога";
			
			МассивПолей = Новый Массив;
			Если Не ПодробныеДанные Тогда
				МассивПолей.Добавить("ФизическоеЛицо");
				МассивПолей.Добавить("КодДохода");
				МассивПолей.Добавить("Начисление");
				МассивПолей.Добавить("Регистратор");
			КонецЕсли;
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
			ОписаниеТаблиц.Раздел1Доходы = Запрос.Выполнить().Выгрузить()
			
		КонецЕсли;
		
		Если ОписаниеТаблиц.Свойство("Раздел1Вычеты") Тогда
			
			Запрос.УстановитьПараметр("ГодПериода", Год(ОкончаниеПериода));
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.Регистратор,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.КодВычета,
			|	СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом * 100 КАК СтавкаНалога,
			|	СведенияОДоходахНДФЛ.СуммаВычета
			|ПОМЕСТИТЬ ВТВычетыПоСтавкам
			|ИЗ
			|	ВТДоходы КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
			|			И СведенияОДоходахНДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
			|			И СведенияОДоходахНДФЛ.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
			|ГДЕ
			|	СведенияОДоходахНДФЛ.СуммаВычета <> 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор,
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо,
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
			|	13,
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма
			|ИЗ
			|	РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
			|ГДЕ
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ОкончаниеПериодаОсмотраДоходовВычетов
			|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоПериода И &ОкончаниеПериода
			|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
			|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация = &Организация
			|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма <> 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ИмущественныеВычетыНДФЛ.Регистратор,
			|	ИмущественныеВычетыНДФЛ.ФизическоеЛицо,
			|	ИмущественныеВычетыНДФЛ.КодВычета,
			|	13,
			|	ИмущественныеВычетыНДФЛ.Сумма
			|ИЗ
			|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычетыНДФЛ
			|ГДЕ
			|	ИмущественныеВычетыНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ОкончаниеПериода
			|	И ИмущественныеВычетыНДФЛ.МесяцРегистрации <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|	И ИмущественныеВычетыНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
			|	И ИмущественныеВычетыНДФЛ.Организация = &Организация
			|	И ИмущественныеВычетыНДФЛ.Сумма <> 0
			|	И ИмущественныеВычетыНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
			|	И ИмущественныеВычетыНДФЛ.Год = &ГодПериода";
			Запрос.Выполнить();
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.КодВычета,
			|	СведенияОДоходах.Регистратор,
			|	СведенияОДоходах.СтавкаНалога КАК П000010001001,
			|	СведенияОДоходах.СтавкаНалога,
			|	СУММА(СведенияОДоходах.СуммаВычета) КАК П000010003001
			|ИЗ
			|	ВТВычетыПоСтавкам КАК СведенияОДоходах
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.КодВычета,
			|	СведенияОДоходах.Регистратор,
			|	СведенияОДоходах.СтавкаНалога";
			
			МассивПолей = Новый Массив;
			Если Не ПодробныеДанные Тогда
				МассивПолей.Добавить("ФизическоеЛицо");
				МассивПолей.Добавить("КодВычета");
				МассивПолей.Добавить("Регистратор");
			КонецЕсли;
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
			ОписаниеТаблиц.Раздел1Вычеты = Запрос.Выполнить().Выгрузить()
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОписаниеТаблиц.Свойство("Раздел1Налоги") Или ОписаниеТаблиц.Свойство("Раздел2") Тогда
		
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК Период,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК ДатаПолученияДохода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СрокПеречисления,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период КАК ДатаУдержания,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаВыплаченногоДохода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КрайнийСрокУплаты,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УчитыватьВыплаченныйДоходВ6НДФЛ
		|ПОМЕСТИТЬ ВТНалоги
		|ИЗ
		|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
		|ГДЕ
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ДатаПодписи
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = &Организация
		|	И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма <> 0
		|			ИЛИ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УчитыватьВыплаченныйДоходВ6НДФЛ
		|				И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаВыплаченногоДохода <> 0)";
		Запрос.Выполнить();
		
		Если ОписаниеТаблиц.Свойство("Раздел1Налоги") Тогда
			
			СоздатьВТСтавкаНДФЛПоСтавкеРезидента2016(Запрос.МенеджерВременныхТаблиц, "ВТНалоги", "УчитыватьИзмененияСтатусаДляОтчетности", Месяц(ОкончаниеПериода));
			
			Запрос.УстановитьПараметр("ДатаПервогоОтчетногоПериода", '20160101');
			Запрос.Текст =
			"ВЫБРАТЬ
			|	НДФЛ.ФизическоеЛицо,
			|	СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом * 100 КАК СтавкаНалога,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|			ТОГДА НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Начислено,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И НДФЛ.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
			|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|			ТОГДА НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК НачисленоПоДивидендам,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|			ТОГДА НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК ЗачтеноАвансов,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|				И (НДФЛ.ДатаУдержания МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И НДФЛ.ДатаПолученияДохода >= &ДатаПервогоОтчетногоПериода
			|			ТОГДА НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Удержано,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|			ТОГДА НДФЛ.Сумма
			|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|			ТОГДА -НДФЛ.Сумма
			|		КОГДА (НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
			|				ИЛИ НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей))
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|			ТОГДА -НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Сальдо,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
			|				И (НДФЛ.ДатаУдержания МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|			ТОГДА -НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Возвращено
			|ПОМЕСТИТЬ ВТНалогиПоСтавкам
			|ИЗ
			|	ВТНалоги КАК НДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
			|		ПО НДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
			|			И НДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
			|			И НДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
			|			И НДФЛ.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
			|	Налоги.СтавкаНалога КАК СтавкаНалога,
			|	СУММА(Налоги.Сальдо) КАК НеУдержано
			|ПОМЕСТИТЬ ВТНеУдержано
			|ИЗ
			|	ВТНалогиПоСтавкам КАК Налоги
			|
			|СГРУППИРОВАТЬ ПО
			|	Налоги.ФизическоеЛицо,
			|	Налоги.СтавкаНалога
			|
			|ИМЕЮЩИЕ
			|	СУММА(Налоги.Сальдо) > 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Налоги.ФизическоеЛицо,
			|	Налоги.СтавкаНалога,
			|	СУММА(Налоги.Начислено) КАК Начислено,
			|	СУММА(Налоги.НачисленоПоДивидендам) КАК НачисленоПоДивидендам,
			|	СУММА(Налоги.ЗачтеноАвансов) КАК ЗачтеноАвансов,
			|	СУММА(Налоги.Удержано) КАК Удержано,
			|	ЕСТЬNULL(МАКСИМУМ(ПоФизлицам.НеУдержано), 0) КАК НеУдержано,
			|	СУММА(Налоги.Возвращено) КАК Возвращено
			|ПОМЕСТИТЬ ВТДанныеПоФизЛицам
			|ИЗ
			|	ВТНалогиПоСтавкам КАК Налоги
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНеУдержано КАК ПоФизлицам
			|		ПО Налоги.ФизическоеЛицо = ПоФизлицам.ФизическоеЛицо
			|			И Налоги.СтавкаНалога = ПоФизлицам.СтавкаНалога
			|ГДЕ
			|	(Налоги.Начислено <> 0
			|			ИЛИ Налоги.ЗачтеноАвансов <> 0
			|			ИЛИ Налоги.Удержано <> 0
			|			ИЛИ Налоги.Возвращено <> 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	Налоги.ФизическоеЛицо,
			|	Налоги.СтавкаНалога
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТСтавкаНДФЛПоСтавкеРезидента";
			Запрос.Выполнить();
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Налоги.ФизическоеЛицо,
			|	Налоги.СтавкаНалога КАК П000010001001,
			|	Налоги.СтавкаНалога,
			|	СУММА(Налоги.Начислено) КАК П000010004001,
			|	СУММА(Налоги.НачисленоПоДивидендам) КАК П000010004501,
			|	СУММА(Налоги.ЗачтеноАвансов) КАК П000010005001,
			|	СУММА(Налоги.Удержано) КАК П000010007001,
			|	СУММА(Налоги.НеУдержано) КАК П000010008001,
			|	СУММА(Налоги.Возвращено) КАК П000010009001
			|ИЗ
			|	ВТДанныеПоФизЛицам КАК Налоги
			|ГДЕ
			|	(Налоги.Начислено <> 0
			|			ИЛИ Налоги.ЗачтеноАвансов <> 0
			|			ИЛИ Налоги.Удержано <> 0
			|			ИЛИ Налоги.Возвращено <> 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	Налоги.ФизическоеЛицо,
			|	Налоги.СтавкаНалога";
			МассивПолей = Новый Массив;
			Если Не ПодробныеДанные Тогда
				МассивПолей.Добавить("ФизическоеЛицо");
			КонецЕсли;
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, "Налоги");
			ОписаниеТаблиц.Раздел1Налоги = Запрос.Выполнить().Выгрузить();
			
		КонецЕсли;
		
		Если ОписаниеТаблиц.Свойство("Раздел2") Тогда
			
			Запрос.УстановитьПараметр("НачалоОтчетногоКвартала", НачалоКвартала(ОкончаниеПериода));
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	МАКСИМУМ(ДатыУчета.ДатаПолученияДохода) КАК ПоздняяДатаПолученияДохода,
			|	МИНИМУМ(ДатыУчета.ДатаПолученияДохода) КАК РанняяДатаПолученияДохода
			|ИЗ
			|	ВТНалоги КАК ДатыУчета
			|ГДЕ
			|	ДатыУчета.ДатаУдержания <= &ОкончаниеПериода";
			Выборка = Запрос.Выполнить().Выбрать();
			РанняяДатаПолученияДохода = НачалоПериода;
			ПоздняяДатаПолученияДохода = ДобавитьМесяц(ОкончаниеПериода, 1);
			Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.РанняяДатаПолученияДохода) Тогда
				РанняяДатаПолученияДохода = Мин(РанняяДатаПолученияДохода, Выборка.РанняяДатаПолученияДохода);
				ПоздняяДатаПолученияДохода = Макс(ПоздняяДатаПолученияДохода, Выборка.ПоздняяДатаПолученияДохода);
			КонецЕсли;
			Запрос.УстановитьПараметр("РанняяДатаПолученияДохода", РанняяДатаПолученияДохода);
			Запрос.УстановитьПараметр("ПоздняяДатаПолученияДохода", ПоздняяДатаПолученияДохода);
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.КодДохода,
			|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК Период,
			|	СведенияОДоходахНДФЛ.Период КАК ПериодРегистрации,
			|	СведенияОДоходахНДФЛ.Регистратор,
			|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода,
			|	СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ,
			|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ
			|ПОМЕСТИТЬ ВТСтрокиДоходов
			|ИЗ
			|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|ГДЕ
			|	СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.ДатаПолученияДохода МЕЖДУ &РанняяДатаПолученияДохода И &ПоздняяДатаПолученияДохода
			|	И СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
			|	И СведенияОДоходахНДФЛ.Организация = &Организация
			|	И СведенияОДоходахНДФЛ.СуммаДохода - СведенияОДоходахНДФЛ.СуммаВычета <> 0";
			Запрос.Выполнить();

			СоздатьВТСтавкаНДФЛПоСтавкеРезидента2016(Запрос.МенеджерВременныхТаблиц, "ВТСтрокиДоходов", "УчитыватьИзмененияСтатусаДляОтчетности", Месяц(ОкончаниеПериода));
		
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	СведенияОДоходахНДФЛ.ПериодРегистрации КАК Период,
			|	СведенияОДоходахНДФЛ.Регистратор,
			|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода,
			|	СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|ПОМЕСТИТЬ ВТСведенияОДоходахНДФЛ
			|ИЗ
			|	ВТСтрокиДоходов КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
			|			И СведенияОДоходахНДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
			|			И СведенияОДоходахНДФЛ.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
			|ГДЕ
			|	(НЕ СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ
			|			ИЛИ СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СведенияОДоходахНДФЛ.Регистратор
			|ПОМЕСТИТЬ ВТРегистраторыНачислений
			|ИЗ
			|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ * ИЗ ВТНачисленоПоРегистраторам
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВзаиморасчетыССотрудниками.Регистратор,
			|	-СУММА(ВзаиморасчетыССотрудниками.Сумма) КАК Сумма
			|ПОМЕСТИТЬ ВТНДФЛПоРегистраторам
			|ИЗ
			|	ВТНалоги КАК ВзаиморасчетыССотрудниками
			|ГДЕ
			|	ВзаиморасчетыССотрудниками.Регистратор В
			|			(ВЫБРАТЬ
			|				РегистраторыНачислений.Регистратор
			|			ИЗ
			|				ВТРегистраторыНачислений КАК РегистраторыНачислений)
			|	И ВзаиморасчетыССотрудниками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|
			|СГРУППИРОВАТЬ ПО
			|	ВзаиморасчетыССотрудниками.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДокументОснование,
			|	НАЧАЛОПЕРИОДА(НалогиПоДатам.ДатаУдержания, ДЕНЬ) КАК ДатаУдержания,
			|	НалогиПоДатам.КрайнийСрокУплаты КАК СрокПеречисления,
			|	НалогиПоДатам.Регистратор,
			|	НалогиПоДатам.Сумма КАК Сумма,
			|	НалогиПоДатам.СуммаВыплаченногоДохода КАК СуммаВыплаченногоДохода
			|ПОМЕСТИТЬ ВТИсходныеДанныеПоДокументамОснованиям
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|ГДЕ
			|	НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|	И &УсловиеОтбораПоДатам
			|	И НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
			|	МАКСИМУМ(СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода) КАК ЭтоМежрасчетныйДокумент,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|ПОМЕСТИТЬ ВТОснованияНачислений
			|ИЗ
			|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсходныеДанныеПоДокументамОснованиям КАК ОснованияСУдержаннымНалогом
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|			И (СведенияОДоходахНДФЛ.Регистратор = ОснованияСУдержаннымНалогом.ДокументОснование
			|				ИЛИ СведенияОДоходахНДФЛ.Регистратор = ОснованияСУдержаннымНалогом.Регистратор)
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленоПоРегистраторам КАК НачисленоПоРегистраторам
			|		ПО СведенияОДоходахНДФЛ.Регистратор = НачисленоПоРегистраторам.Регистратор
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНДФЛПоРегистраторам КАК НДФЛПоРегистраторам
			|		ПО СведенияОДоходахНДФЛ.Регистратор = НДФЛПоРегистраторам.Регистратор
			|ГДЕ
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.Период <= &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.СуммаДохода > 0
			|	И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|	И ЕСТЬNULL(НачисленоПоРегистраторам.СуммаВзаиморасчетов, 0) <= ЕСТЬNULL(НДФЛПоРегистраторам.Сумма, 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Регистратор,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
			|	Основания.ФизическоеЛицо,
			|	Основания.Регистратор
			|ПОМЕСТИТЬ ВТДоходыПоОснованиям
			|ИЗ
			|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|		Основания.ФизическоеЛицо КАК ФизическоеЛицо,
			|		Основания.Регистратор КАК Регистратор
			|	ИЗ
			|		ВТОснованияНачислений КАК Основания) КАК Основания
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО Основания.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И Основания.Регистратор = СведенияОДоходахНДФЛ.Регистратор
			|			И (СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода)
			|
			|СГРУППИРОВАТЬ ПО
			|	Основания.ФизическоеЛицо,
			|	Основания.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОснованияНачислений.ФизическоеЛицо,
			|	ОснованияНачислений.Регистратор
			|ПОМЕСТИТЬ ВТОснованияСНеудержаннымНалогом
			|ИЗ
			|	ВТОснованияНачислений КАК ОснованияНачислений
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалоги КАК НалогиПоДатам
			|		ПО ОснованияНачислений.ФизическоеЛицо = НалогиПоДатам.ФизическоеЛицо
			|			И (ОснованияНачислений.Регистратор = НалогиПоДатам.ДокументОснование
			|				ИЛИ ОснованияНачислений.Регистратор = НалогиПоДатам.Регистратор)
			|			И ОснованияНачислений.ДатаПолученияДохода = НалогиПоДатам.ДатаПолученияДохода
			|ГДЕ
			|	ОснованияНачислений.ЭтоМежрасчетныйДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	ОснованияНачислений.ФизическоеЛицо,
			|	ОснованияНачислений.Регистратор
			|
			|ИМЕЮЩИЕ
			|	СУММА(ВЫБОР
			|			КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|				ТОГДА НалогиПоДатам.Сумма
			|			ИНАЧЕ 0
			|		КОНЕЦ) = 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо,
			|	ОснованияСНеудержаннымНалогом.Регистратор
			|ПОМЕСТИТЬ ВТДоходыПоОснованиямСНеудержаннымНалогом
			|ИЗ
			|	ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И ОснованияСНеудержаннымНалогом.Регистратор = СведенияОДоходахНДФЛ.Регистратор
			|			И (СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода)
			|			И (СведенияОДоходахНДФЛ.СуммаДохода > 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	ОснованияСНеудержаннымНалогом.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	МаксимальныеСуммы.ФизическоеЛицо,
			|	МаксимальныеСуммы.Регистратор,
			|	МИНИМУМ(ДоходыПоОснованиямСНеудержаннымНалогом.ДатаПолученияДохода) КАК ДатаПолученияДохода
			|ПОМЕСТИТЬ ВТДатыОснованийСНеудержаннымНалогом
			|ИЗ
			|	(ВЫБРАТЬ
			|		МАКСИМУМ(ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода) КАК СуммаДохода,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо КАК ФизическоеЛицо,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор КАК Регистратор
			|	ИЗ
			|		ВТДоходыПоОснованиямСНеудержаннымНалогом КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор) КАК МаксимальныеСуммы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоОснованиямСНеудержаннымНалогом КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|		ПО МаксимальныеСуммы.СуммаДохода = ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода
			|			И МаксимальныеСуммы.ФизическоеЛицо = ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо
			|			И МаксимальныеСуммы.Регистратор = ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор
			|
			|СГРУППИРОВАТЬ ПО
			|	МаксимальныеСуммы.ФизическоеЛицо,
			|	МаксимальныеСуммы.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	ДатыОснованийСНеудержаннымНалогом.ДатаПолученияДохода,
			|	СведенияОДоходахНДФЛ.Регистратор
			|ПОМЕСТИТЬ ВТНатуральныеДоходы
			|ИЗ
			|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсходныеДанныеПоДокументамОснованиям КАК ОснованияСУдержаннымНалогом
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Регистратор = ОснованияСУдержаннымНалогом.ДокументОснование
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоОснованиям КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|			ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо
			|				И ОснованияСНеудержаннымНалогом.Регистратор = ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыОснованийСНеудержаннымНалогом КАК ДатыОснованийСНеудержаннымНалогом
			|			ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = ДатыОснованийСНеудержаннымНалогом.ФизическоеЛицо
			|				И ОснованияСНеудержаннымНалогом.Регистратор = ДатыОснованийСНеудержаннымНалогом.Регистратор
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСНеудержаннымНалогом.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Регистратор = ОснованияСНеудержаннымНалогом.Регистратор
			|ГДЕ
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.Период <= &ОкончаниеПериода
			|	И ОснованияСНеудержаннымНалогом.ФизическоеЛицо ЕСТЬ НЕ NULL 
			|	И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|	И ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода > 0
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	ДатыОснованийСНеудержаннымНалогом.ДатаПолученияДохода,
			|	СведенияОДоходахНДФЛ.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТДатыОснованийСНеудержаннымНалогом
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТДоходыПоОснованиямСНеудержаннымНалогом
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТОснованияСНеудержаннымНалогом
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТДоходыПоОснованиям
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТРегистраторыНачислений
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТНачисленоПоРегистраторам
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТНДФЛПоРегистраторам
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТОснованияНачислений
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	НалогиПоДатам.ДокументОснование
			|ПОМЕСТИТЬ ВТМежрасчетныеДокументыОснования
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|ГДЕ
			|	НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|	И НалогиПоДатам.РасчетМежрасчетногоПериода
			|	И НалогиПоДатам.ДокументОснование <> НЕОПРЕДЕЛЕНО
			|	И НЕ НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДокументОснование,
			|	НАЧАЛОПЕРИОДА(НалогиПоДатам.ДатаУдержания, ДЕНЬ) КАК ДатаУдержания,
			|	НалогиПоДатам.КрайнийСрокУплаты КАК СрокПеречисления,
			|	СУММА(НалогиПоДатам.Сумма) КАК Сумма,
			|	МежрасчетныеДокументыОснования.ДокументОснование ЕСТЬ НЕ NULL  КАК ЭтоМежрасчетныйДокумент
			|ПОМЕСТИТЬ ВТИсходныеДанныеПоСтарымДокументамОснованиям
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМежрасчетныеДокументыОснования КАК МежрасчетныеДокументыОснования
			|		ПО НалогиПоДатам.ДокументОснование = МежрасчетныеДокументыОснования.ДокументОснование
			|ГДЕ
			|	НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|	И &УсловиеОтбораПоДатам
			|	И НЕ НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|
			|СГРУППИРОВАТЬ ПО
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДокументОснование,
			|	НАЧАЛОПЕРИОДА(НалогиПоДатам.ДатаУдержания, ДЕНЬ),
			|	НалогиПоДатам.КрайнийСрокУплаты,
			|	МежрасчетныеДокументыОснования.ДокументОснование
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДокументОснование,
			|	ВЫБОР
			|		КОГДА СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|							И &УсловиеОтбораПоДатам
			|						ТОГДА НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) = 0
			|			ТОГДА 0
			|		КОГДА СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА НалогиПоДатам.Сумма
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|						ТОГДА -НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) = 0
			|			ТОГДА 1
			|		ИНАЧЕ СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|							И &УсловиеОтбораПоДатам
			|						ТОГДА НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) / СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА НалогиПоДатам.Сумма
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|						ТОГДА -НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ)
			|	КОНЕЦ КАК Доля
			|ПОМЕСТИТЬ ВТДолиПолученногоДоходаПоДокументамОснованиям
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|ГДЕ
			|	НалогиПоДатам.ДатаУдержания <= &ОкончаниеПериода
			|	И НЕ НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|
			|СГРУППИРОВАТЬ ПО
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДокументОснование
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДанныеУчета.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ДанныеУчета.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ДанныеУчета.ДокументОснование КАК Регистратор,
			|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(СведенияОДоходахНДФЛ.СуммаДохода) * ВЫБОР
			|				КОГДА ДанныеУчета.Доля > 1
			|					ТОГДА 1
			|				ИНАЧЕ ДанныеУчета.Доля
			|			КОНЕЦ КАК ЧИСЛО(15, 2)), 0) КАК СуммаДохода
			|ИЗ
			|	ВТДолиПолученногоДоходаПоДокументамОснованиям КАК ДанныеУчета
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО ДанныеУчета.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И ДанныеУчета.ДатаПолученияДохода = СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|			И ДанныеУчета.ДокументОснование = СведенияОДоходахНДФЛ.Регистратор
			|
			|СГРУППИРОВАТЬ ПО
			|	ДанныеУчета.ФизическоеЛицо,
			|	ДанныеУчета.ДатаПолученияДохода,
			|	ДанныеУчета.Доля,
			|	ДанныеУчета.ДокументОснование
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	ДатаПолученияДохода,
			|	Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИсходныеДанные.ДокументОснование КАК Регистратор,
			|	ИсходныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ИсходныеДанные.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ИсходныеДанные.ДатаУдержания,
			|	ИсходныеДанные.СрокПеречисления,
			|	ИсходныеДанные.Сумма,
			|	0 КАК СуммаФактическиПолученногоДохода
			|ИЗ
			|	ВТИсходныеДанныеПоСтарымДокументамОснованиям КАК ИсходныеДанные
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	ДатаПолученияДохода,
			|	Регистратор";
			Если ОкончаниеПериода < '20160701' Тогда
				Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоДатам", "НалогиПоДатам.ДатаУдержания МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода");
			Иначе
				Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоДатам", "НалогиПоДатам.КрайнийСрокУплаты МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода И НалогиПоДатам.ДатаУдержания >= ДАТАВРЕМЯ(2016, 7, 1, 0, 0, 0)");
			КонецЕсли;
			
			УчетНДФЛБазовый.РасчетПоказателей_6НДФЛ_2017Кв1(Запрос.Текст);
			
			Результаты = Запрос.ВыполнитьПакет();
			ВсегоРезультатов = Результаты.Количество();
			НеОбработанныеДанные = Результаты[ВсегоРезультатов - 1].Выгрузить();
			ОбработанныеДанные = НеОбработанныеДанные.СкопироватьКолонки();
			СуммыДоходов = Результаты[ВсегоРезультатов - 2].Выгрузить();
			СтруктураПоиска = Новый Структура("ФизическоеЛицо,ДатаПолученияДохода,Регистратор");
			Для каждого СтрокаДохода Из СуммыДоходов Цикл
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДохода);
				ВременнаяТаблица = НеОбработанныеДанные.Скопировать(НеОбработанныеДанные.НайтиСтроки(СтруктураПоиска));
				Если ВременнаяТаблица.Количество() = 0 Тогда
					Продолжить;
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрокаДохода.СуммаДохода) Тогда
					Если ВременнаяТаблица.Количество() = 1 Тогда
						ВременнаяТаблица[0].СуммаФактическиПолученногоДохода = СтрокаДохода.СуммаДохода
					Иначе
						КоэффициентыРаспределения = ВременнаяТаблица.ВыгрузитьКолонку("Сумма");
						РаспределениеРесурса = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаДохода.СуммаДохода, КоэффициентыРаспределения);
						Если РаспределениеРесурса <> Неопределено Тогда
							ВременнаяТаблица.ЗагрузитьКолонку(РаспределениеРесурса, "СуммаФактическиПолученногоДохода");
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВременнаяТаблица, ОбработанныеДанные)
			КонецЦикла;
			Запрос.УстановитьПараметр("ОбработанныеДанные", ОбработанныеДанные); НеОбработанныеДанные = Неопределено; СуммыДоходов = Неопределено; ОбработанныеДанные = Неопределено; ВременнаяТаблица = Неопределено;
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Данные.Регистратор,
			|	Данные.ФизическоеЛицо,
			|	Данные.ДатаПолученияДохода,
			|	Данные.ДатаУдержания,
			|	Данные.СрокПеречисления,
			|	Данные.СуммаФактическиПолученногоДохода,
			|	Данные.Сумма
			|ПОМЕСТИТЬ ВТОбработанныеДанныеПоДокументамОснованиям
			|ИЗ
			|	&ОбработанныеДанные КАК Данные
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	ВЫБОР
			|		КОГДА СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|							И &УсловиеОтбораПоДатам
			|						ТОГДА НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) = 0
			|			ТОГДА 0
			|		КОГДА СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА НалогиПоДатам.Сумма
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|						ТОГДА -НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) = 0
			|			ТОГДА 1
			|		ИНАЧЕ СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|							И &УсловиеОтбораПоДатам
			|						ТОГДА НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) / СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА НалогиПоДатам.Сумма
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|						ТОГДА -НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ)
			|	КОНЕЦ КАК Доля
			|ПОМЕСТИТЬ ВТДолиПолученногоДохода
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМежрасчетныеДокументыОснования КАК МежрасчетныеДокументыОснования
			|		ПО НалогиПоДатам.ДокументОснование = МежрасчетныеДокументыОснования.ДокументОснование
			|ГДЕ
			|	НалогиПоДатам.ДатаУдержания <= &ОкончаниеПериода
			|	И МежрасчетныеДокументыОснования.ДокументОснование ЕСТЬ NULL 
			|	И НЕ НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|
			|СГРУППИРОВАТЬ ПО
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИсходныеДанные.ФизическоеЛицо,
			|	ИсходныеДанные.ДатаПолученияДохода,
			|	МАКСИМУМ(ИсходныеДанные.ДатаУдержания) КАК ДатаУдержания
			|ПОМЕСТИТЬ ВТДатыУчета
			|ИЗ
			|	ВТИсходныеДанныеПоСтарымДокументамОснованиям КАК ИсходныеДанные
			|ГДЕ
			|	НЕ ИсходныеДанные.ЭтоМежрасчетныйДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	ИсходныеДанные.ФизическоеЛицо,
			|	ИсходныеДанные.ДатаПолученияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДатыУчета.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Регистратор
			|ПОМЕСТИТЬ ВТОснованияСУдержаннымНалогом
			|ИЗ
			|	ВТДатыУчета КАК ДатыУчета
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО ДатыУчета.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И ДатыУчета.ДатаПолученияДохода = СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|			И (ВЫБОР
			|				КОГДА ДатыУчета.ДатаУдержания > ДатыУчета.ДатаПолученияДохода
			|					ТОГДА ДатыУчета.ДатаУдержания
			|				ИНАЧЕ ДатыУчета.ДатаПолученияДохода
			|			КОНЕЦ >= НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.Период, ДЕНЬ))
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДолиПолученногоДохода КАК ДолиПолученногоДохода
			|		ПО ДатыУчета.ДатаПолученияДохода = ДолиПолученногоДохода.ДатаПолученияДохода
			|			И ДатыУчета.ФизическоеЛицо = ДолиПолученногоДохода.ФизическоеЛицо
			|ГДЕ
			|	НЕ СведенияОДоходахНДФЛ.Регистратор В
			|				(ВЫБРАТЬ
			|					ДанныеПоДокументамОснованиям.Регистратор
			|				ИЗ
			|					ВТОбработанныеДанныеПоДокументамОснованиям КАК ДанныеПоДокументамОснованиям
			|				ГДЕ
			|					ДанныеПоДокументамОснованиям.СуммаФактическиПолученногоДохода <> 0)
			|	И ЕСТЬNULL(ДолиПолученногоДохода.Доля, 0) <> 0
			|	И НЕ СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ОбработанныеДанныеПоДокументамОснованиям.ФизическоеЛицо,
			|	ОбработанныеДанныеПоДокументамОснованиям.Регистратор
			|ИЗ
			|	ВТОбработанныеДанныеПоДокументамОснованиям КАК ОбработанныеДанныеПоДокументамОснованиям
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	МАКСИМУМ(СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода) КАК ЭтоМежрасчетныйДокумент
			|ПОМЕСТИТЬ ВТОснованияНачислений
			|ИЗ
			|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСУдержаннымНалогом КАК ОснованияСУдержаннымНалогом
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Регистратор = ОснованияСУдержаннымНалогом.Регистратор
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыССотрудниками КАК ВзаиморасчетыССотрудниками
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ВзаиморасчетыССотрудниками.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Регистратор = ВзаиморасчетыССотрудниками.Регистратор
			|ГДЕ
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.Период <= &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.СуммаДохода > 0
			|	И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|	И НЕ СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|	И ВзаиморасчетыССотрудниками.ФизическоеЛицо ЕСТЬ НЕ NULL 
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Регистратор,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
			|	Основания.ФизическоеЛицо,
			|	Основания.Регистратор
			|ПОМЕСТИТЬ ВТДоходыПоОснованиям
			|ИЗ
			|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|		Основания.ФизическоеЛицо КАК ФизическоеЛицо,
			|		Основания.Регистратор КАК Регистратор
			|	ИЗ
			|		ВТОснованияНачислений КАК Основания) КАК Основания
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО Основания.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И Основания.Регистратор = СведенияОДоходахНДФЛ.Регистратор
			|			И (СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода)
			|
			|СГРУППИРОВАТЬ ПО
			|	Основания.ФизическоеЛицо,
			|	Основания.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОснованияНачислений.ФизическоеЛицо,
			|	ОснованияНачислений.Регистратор
			|ПОМЕСТИТЬ ВТОснованияСНеудержаннымНалогом
			|ИЗ
			|	ВТОснованияНачислений КАК ОснованияНачислений
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалоги КАК НалогиПоДатам
			|		ПО ОснованияНачислений.ФизическоеЛицо = НалогиПоДатам.ФизическоеЛицо
			|			И ОснованияНачислений.Регистратор = НалогиПоДатам.ДокументОснование
			|			И ОснованияНачислений.ДатаПолученияДохода = НалогиПоДатам.ДатаПолученияДохода
			|ГДЕ
			|	ОснованияНачислений.ЭтоМежрасчетныйДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	ОснованияНачислений.ФизическоеЛицо,
			|	ОснованияНачислений.Регистратор
			|
			|ИМЕЮЩИЕ
			|	СУММА(ВЫБОР
			|			КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|				ТОГДА НалогиПоДатам.Сумма
			|			ИНАЧЕ 0
			|		КОНЕЦ) = 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо,
			|	ОснованияСНеудержаннымНалогом.Регистратор
			|ПОМЕСТИТЬ ВТДоходыПоОснованиямСНеудержаннымНалогом
			|ИЗ
			|	ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И ОснованияСНеудержаннымНалогом.Регистратор = СведенияОДоходахНДФЛ.Регистратор
			|			И (СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода)
			|			И (СведенияОДоходахНДФЛ.СуммаДохода > 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	ОснованияСНеудержаннымНалогом.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	МаксимальныеСуммы.ФизическоеЛицо,
			|	МаксимальныеСуммы.Регистратор,
			|	МИНИМУМ(ДоходыПоОснованиямСНеудержаннымНалогом.ДатаПолученияДохода) КАК ДатаПолученияДохода
			|ПОМЕСТИТЬ ВТДатыОснованийСНеудержаннымНалогом
			|ИЗ
			|	(ВЫБРАТЬ
			|		МАКСИМУМ(ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода) КАК СуммаДохода,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо КАК ФизическоеЛицо,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор КАК Регистратор
			|	ИЗ
			|		ВТДоходыПоОснованиямСНеудержаннымНалогом КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор) КАК МаксимальныеСуммы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоОснованиямСНеудержаннымНалогом КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|		ПО МаксимальныеСуммы.СуммаДохода = ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода
			|			И МаксимальныеСуммы.ФизическоеЛицо = ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо
			|			И МаксимальныеСуммы.Регистратор = ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор
			|
			|СГРУППИРОВАТЬ ПО
			|	МаксимальныеСуммы.ФизическоеЛицо,
			|	МаксимальныеСуммы.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОснованияНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ОснованияНачислений.ДатаПолученияДохода КАК ДатаПолученияДохода
			|ПОМЕСТИТЬ ВТОставшиесяДатыПолученияДохода
			|ИЗ
			|	ВТОснованияНачислений КАК ОснованияНачислений
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|		ПО ОснованияНачислений.Регистратор = ОснованияСНеудержаннымНалогом.Регистратор
			|			И ОснованияНачислений.ФизическоеЛицо = ОснованияСНеудержаннымНалогом.ФизическоеЛицо
			|ГДЕ
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДатыПолученияДохода.ФизическоеЛицо,
			|	ДатыПолученияДохода.ДатаПолученияДохода
			|ПОМЕСТИТЬ ВТДатыПолученияДоходаБезНалогов
			|ИЗ
			|	ВТОставшиесяДатыПолученияДохода КАК ДатыПолученияДохода
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалоги КАК НалогиПоДатам
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСУдержаннымНалогом КАК ОснованияСУдержаннымНалогом
			|			ПО НалогиПоДатам.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|				И НалогиПоДатам.ДокументОснование = ОснованияСУдержаннымНалогом.Регистратор
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|			ПО НалогиПоДатам.ДокументОснование = ОснованияСНеудержаннымНалогом.Регистратор
			|				И НалогиПоДатам.ФизическоеЛицо = ОснованияСНеудержаннымНалогом.ФизическоеЛицо
			|		ПО ДатыПолученияДохода.ФизическоеЛицо = НалогиПоДатам.ФизическоеЛицо
			|			И ДатыПолученияДохода.ДатаПолученияДохода = НалогиПоДатам.ДатаПолученияДохода
			|	И НЕ НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|ГДЕ
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|	И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|
			|СГРУППИРОВАТЬ ПО
			|	ДатыПолученияДохода.ФизическоеЛицо,
			|	ДатыПолученияДохода.ДатаПолученияДохода
			|
			|ИМЕЮЩИЕ
			|	СУММА(ВЫБОР
			|			КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|				ТОГДА НалогиПоДатам.Сумма
			|			ИНАЧЕ 0
			|		КОНЕЦ) = 0 И
			|	СУММА(ВЫБОР
			|			КОГДА НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				ТОГДА НалогиПоДатам.Сумма
			|			КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|				ТОГДА -НалогиПоДатам.Сумма
			|			ИНАЧЕ 0
			|		КОНЕЦ) = 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
			|	Доходы.ФизическоеЛицо,
			|	Доходы.ДатаПолученияДохода,
			|	Доходы.Регистратор
			|ПОМЕСТИТЬ ВТДоходыБезНалогов
			|ИЗ
			|	(ВЫБРАТЬ
			|		СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
			|		СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|		СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|		СведенияОДоходахНДФЛ.Регистратор КАК Регистратор
			|	ИЗ
			|		ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоОснованиям КАК ДоходыПоОснованиям
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ДоходыПоОснованиям.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.Регистратор = ДоходыПоОснованиям.Регистратор
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыПолученияДоходаБезНалогов КАК ДатыПолученияДоходаБезНалогов
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ДатыПолученияДоходаБезНалогов.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.ДатаПолученияДохода = ДатыПолученияДоходаБезНалогов.ДатаПолученияДохода
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСУдержаннымНалогом КАК ОснованияСУдержаннымНалогом
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.Регистратор = ОснованияСУдержаннымНалогом.Регистратор
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСНеудержаннымНалогом.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.Регистратор = ОснованияСНеудержаннымНалогом.Регистратор
			|	ГДЕ
			|		СведенияОДоходахНДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода
			|		И СведенияОДоходахНДФЛ.Период <= &ОкончаниеПериода
			|		И НЕ СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|		И ДатыПолученияДоходаБезНалогов.ФизическоеЛицо ЕСТЬ НЕ NULL 
			|		И ОснованияСНеудержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|		И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|		И ДоходыПоОснованиям.СуммаДохода > 0
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		СведенияОДоходахНДФЛ.СуммаДохода,
			|		СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|		ДатыОснованийСНеудержаннымНалогом.ДатаПолученияДохода,
			|		СведенияОДоходахНДФЛ.Регистратор
			|	ИЗ
			|		ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСУдержаннымНалогом КАК ОснованияСУдержаннымНалогом
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.Регистратор = ОснованияСУдержаннымНалогом.Регистратор
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|				ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоОснованиям КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|				ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо
			|					И ОснованияСНеудержаннымНалогом.Регистратор = ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор
			|				ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыОснованийСНеудержаннымНалогом КАК ДатыОснованийСНеудержаннымНалогом
			|				ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = ДатыОснованийСНеудержаннымНалогом.ФизическоеЛицо
			|					И ОснованияСНеудержаннымНалогом.Регистратор = ДатыОснованийСНеудержаннымНалогом.Регистратор
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСНеудержаннымНалогом.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.Регистратор = ОснованияСНеудержаннымНалогом.Регистратор
			|	ГДЕ
			|		СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода
			|		И СведенияОДоходахНДФЛ.Период <= &ОкончаниеПериода
			|		И НЕ СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|		И ОснованияСНеудержаннымНалогом.ФизическоеЛицо ЕСТЬ НЕ NULL 
			|		И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|		И ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода > 0) КАК Доходы
			|
			|СГРУППИРОВАТЬ ПО
			|	Доходы.ФизическоеЛицо,
			|	Доходы.ДатаПолученияДохода,
			|	Доходы.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДатыУчета.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ДатыУчета.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(СведенияОДоходахНДФЛ.СуммаДохода) * ВЫБОР
			|				КОГДА ДолиПолученногоДохода.Доля > 1
			|					ТОГДА 1
			|				ИНАЧЕ ДолиПолученногоДохода.Доля
			|			КОНЕЦ КАК ЧИСЛО(15, 2)), 0) КАК СуммаДохода
			|ИЗ
			|	ВТДатыУчета КАК ДатыУчета
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО ДатыУчета.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И ДатыУчета.ДатаПолученияДохода = СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|			И (ВЫБОР
			|				КОГДА ДатыУчета.ДатаУдержания > ДатыУчета.ДатаПолученияДохода
			|					ТОГДА ДатыУчета.ДатаУдержания
			|				ИНАЧЕ ДатыУчета.ДатаПолученияДохода
			|			КОНЕЦ >= НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.Период, ДЕНЬ))
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДолиПолученногоДохода КАК ДолиПолученногоДохода
			|		ПО ДатыУчета.ДатаПолученияДохода = ДолиПолученногоДохода.ДатаПолученияДохода
			|			И ДатыУчета.ФизическоеЛицо = ДолиПолученногоДохода.ФизическоеЛицо
			|ГДЕ
			|	НЕ СведенияОДоходахНДФЛ.Регистратор В
			|				(ВЫБРАТЬ
			|					ДанныеПоДокументамОснованиям.Регистратор
			|				ИЗ
			|					ВТОбработанныеДанныеПоДокументамОснованиям КАК ДанныеПоДокументамОснованиям
			|				ГДЕ
			|					ДанныеПоДокументамОснованиям.СуммаФактическиПолученногоДохода <> 0)
			|	И НЕ СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|
			|СГРУППИРОВАТЬ ПО
			|	ДатыУчета.ФизическоеЛицо,
			|	ДатыУчета.ДатаПолученияДохода,
			|	ДолиПолученногоДохода.Доля
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	ДатаПолученияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИсходныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ИсходныеДанные.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ИсходныеДанные.ДатаУдержания,
			|	ИсходныеДанные.СрокПеречисления,
			|	СУММА(ИсходныеДанные.Сумма) КАК Сумма,
			|	0 КАК СуммаФактическиПолученногоДохода
			|ИЗ
			|	ВТИсходныеДанныеПоСтарымДокументамОснованиям КАК ИсходныеДанные
			|ГДЕ
			|	НЕ ИсходныеДанные.ЭтоМежрасчетныйДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	ИсходныеДанные.ФизическоеЛицо,
			|	ИсходныеДанные.ДатаПолученияДохода,
			|	ИсходныеДанные.ДатаУдержания,
			|	ИсходныеДанные.СрокПеречисления
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	ДатаПолученияДохода";
			Если ОкончаниеПериода < '20160701' Тогда
				Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоДатам", "НалогиПоДатам.ДатаУдержания МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода");
			Иначе
				Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоДатам", "НалогиПоДатам.КрайнийСрокУплаты МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода И НалогиПоДатам.ДатаУдержания >= ДАТАВРЕМЯ(2016, 7, 1, 0, 0, 0)");
			КонецЕсли;
			
			Результаты = Запрос.ВыполнитьПакет();
			ВсегоРезультатов = Результаты.Количество();
			НеОбработанныеДанные = Результаты[ВсегоРезультатов - 1].Выгрузить();
			СуммыДоходов = Результаты[ВсегоРезультатов - 2].Выгрузить();
			ОбработанныеДанные = НеОбработанныеДанные.СкопироватьКолонки();
			СтруктураПоиска = Новый Структура("ФизическоеЛицо,ДатаПолученияДохода");
			Для каждого СтрокаДохода Из СуммыДоходов Цикл
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДохода);
				ВременнаяТаблица = НеОбработанныеДанные.Скопировать(НеОбработанныеДанные.НайтиСтроки(СтруктураПоиска));
				Если ВременнаяТаблица.Количество() = 0 Тогда
					Продолжить;
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрокаДохода.СуммаДохода) Тогда
					Если ВременнаяТаблица.Количество() = 1 Тогда
						ВременнаяТаблица[0].СуммаФактическиПолученногоДохода = СтрокаДохода.СуммаДохода
					Иначе
						КоэффициентыРаспределения = ВременнаяТаблица.ВыгрузитьКолонку("Сумма");
						РаспределениеРесурса = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаДохода.СуммаДохода, КоэффициентыРаспределения);
						Если РаспределениеРесурса <> Неопределено Тогда
							ВременнаяТаблица.ЗагрузитьКолонку(РаспределениеРесурса, "СуммаФактическиПолученногоДохода");
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВременнаяТаблица, ОбработанныеДанные)
			КонецЦикла;
			
			Запрос.УстановитьПараметр("ОбработанныеДанные", ОбработанныеДанные); 
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Данные.ФизическоеЛицо,
			|	Данные.ДатаПолученияДохода,
			|	Данные.ДатаУдержания,
			|	Данные.СрокПеречисления,
			|	Данные.СуммаФактическиПолученногоДохода
			|ПОМЕСТИТЬ ВТОбработанныеДанные
			|ИЗ
			|	&ОбработанныеДанные КАК Данные";
			Запрос.Выполнить();
			
			НеОбработанныеДанные = Неопределено; СуммыДоходов = Неопределено; ОбработанныеДанные = Неопределено; ВременнаяТаблица = Неопределено;

			ТекстЗапроса =
			"ВЫБРАТЬ
			|	НалогиПоДатам.Регистратор,
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода КАК ДатаФактическогоПолученияДохода,
			|	НалогиПоДатам.ДатаПолученияДохода КАК П000020010001,
			|	НалогиПоДатам.ДатаУдержания КАК ДатаУдержанияНалога,
			|	НалогиПоДатам.ДатаУдержания КАК П000020011001,
			|	НалогиПоДатам.СрокПеречисления КАК СрокПеречисленияНалога,
			|	НалогиПоДатам.СрокПеречисления КАК П000020012001,
			|	СУММА(НалогиПоДатам.СуммаФактическиПолученногоДохода) < 0 КАК ОтрицательныйДоход,
			|	СУММА(НалогиПоДатам.СуммаФактическиПолученногоДохода) КАК П000020013001,
			|	СУММА(НалогиПоДатам.Сумма) КАК П000020014001
			|ИЗ
			|	(ВЫБРАТЬ
			|		Данные.ДокументОснование КАК Регистратор,
			|		Данные.ФизическоеЛицо КАК ФизическоеЛицо,
			|		Данные.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|		Данные.ДатаУдержания КАК ДатаУдержания,
			|		Данные.СрокПеречисления КАК СрокПеречисления,
			|		Данные.СуммаВыплаченногоДохода КАК СуммаФактическиПолученногоДохода,
			|		Данные.Сумма КАК Сумма
			|	ИЗ
			|		ВТИсходныеДанныеПоДокументамОснованиям КАК Данные
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Данные.Регистратор,
			|		Данные.ФизическоеЛицо,
			|		Данные.ДатаПолученияДохода,
			|		ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
			|		ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
			|		Данные.СуммаДохода,
			|		0
			|	ИЗ
			|		ВТНатуральныеДоходы КАК Данные
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		НЕОПРЕДЕЛЕНО,
			|		Данные.ФизическоеЛицо,
			|		Данные.ДатаПолученияДохода,
			|		Данные.ДатаУдержания,
			|		Данные.СрокПеречисления,
			|		Данные.СуммаФактическиПолученногоДохода,
			|		0
			|	ИЗ
			|		ВТОбработанныеДанные КАК Данные
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Данные.Регистратор,
			|		Данные.ФизическоеЛицо,
			|		Данные.ДатаПолученияДохода,
			|		ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
			|		ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
			|		Данные.СуммаДохода,
			|		0
			|	ИЗ
			|		ВТДоходыБезНалогов КАК Данные
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Данные.Регистратор,
			|		Данные.ФизическоеЛицо,
			|		Данные.ДатаПолученияДохода,
			|		Данные.ДатаУдержания,
			|		Данные.СрокПеречисления,
			|		Данные.СуммаФактическиПолученногоДохода,
			|		Данные.Сумма
			|	ИЗ
			|		ВТОбработанныеДанныеПоДокументамОснованиям КАК Данные) КАК НалогиПоДатам
			|
			|СГРУППИРОВАТЬ ПО
			|	НалогиПоДатам.Регистратор,
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДатаУдержания,
			|	НалогиПоДатам.СрокПеречисления,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДатаУдержания,
			|	НалогиПоДатам.СрокПеречисления
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДатаУдержанияНалога,
			|	СрокПеречисленияНалога,
			|	ДатаФактическогоПолученияДохода";
			
			МассивПолей = Новый Массив;
			МассивПолей.Добавить("ФизическоеЛицо");
			МассивПолей.Добавить("Регистратор");
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, "НалогиПоДатам");
			СводныйРезультат = Запрос.Выполнить().Выгрузить();
			
			Если СводныйРезультат.Найти(Истина,"ОтрицательныйДоход") <> Неопределено Тогда
				
				Запрос.Текст = ТекстЗапроса;
				ВременнаяТаблица = Запрос.Выполнить().Выгрузить();
				
				ОстатокПересчета = 0;
				ОстаткиПересчетаПоФизлицам = Новый Соответствие;
				ОстатокНалогов = 0;
				ОстаткиНалоговПоФизлицам = Новый Соответствие;
				Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
					Если СтрокаТЗ.П000020013001 = 0 Тогда
					ИначеЕсли СтрокаТЗ.П000020013001 > 0 Тогда
						Если ОстатокПересчета > 0 Тогда
							ОстатокФизлица = ОстаткиПересчетаПоФизлицам[СтрокаТЗ.ФизическоеЛицо];
							Если ЗначениеЗаполнено(ОстатокФизлица) Тогда
								КЗачету = Мин(СтрокаТЗ.П000020013001, ОстатокФизлица);
								СтрокаТЗ.П000020013001 = СтрокаТЗ.П000020013001 - КЗачету;
								ОстатокПересчета = ОстатокПересчета - КЗачету;
								ОстаткиПересчетаПоФизлицам.Вставить(СтрокаТЗ.ФизическоеЛицо, ОстатокФизлица - КЗачету);
							КонецЕсли;
						КонецЕсли;
						Если ОстатокНалогов > 0 Тогда
							ОстатокФизлица = ОстаткиНалоговПоФизлицам[СтрокаТЗ.ФизическоеЛицо];
							Если ЗначениеЗаполнено(ОстатокФизлица) Тогда
								КЗачету = Мин(СтрокаТЗ.П000020014001, ОстатокФизлица);
								СтрокаТЗ.П000020014001 = СтрокаТЗ.П000020014001 - КЗачету;
								ОстатокНалогов = ОстатокНалогов - КЗачету;
								ОстаткиНалоговПоФизлицам.Вставить(СтрокаТЗ.ФизическоеЛицо, ОстатокФизлица - КЗачету);
							КонецЕсли;
						КонецЕсли;
					Иначе
						ОстатокПересчета = ОстатокПересчета - СтрокаТЗ.П000020013001;
						ОстаткиПересчетаПоФизлицам.Вставить(СтрокаТЗ.ФизическоеЛицо, ?(ЗначениеЗаполнено(ОстаткиПересчетаПоФизлицам[СтрокаТЗ.ФизическоеЛицо]),ОстаткиПересчетаПоФизлицам[СтрокаТЗ.ФизическоеЛицо],0) - СтрокаТЗ.П000020013001);
						Если СтрокаТЗ.П000020014001 < 0 Тогда
							ОстатокНалогов = ОстатокНалогов - СтрокаТЗ.П000020014001;
							ОстаткиНалоговПоФизлицам.Вставить(СтрокаТЗ.ФизическоеЛицо, ?(ЗначениеЗаполнено(ОстаткиНалоговПоФизлицам[СтрокаТЗ.ФизическоеЛицо]),ОстаткиНалоговПоФизлицам[СтрокаТЗ.ФизическоеЛицо],0) - СтрокаТЗ.П000020014001);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				Если ОстатокПересчета > 0 Тогда
					ВсегоСтрок = ВременнаяТаблица.Количество();
					Для Счетчик = 1 По ВсегоСтрок Цикл
						СтрокаТЗ = ВременнаяТаблица[ВсегоСтрок - Счетчик];
						Если СтрокаТЗ.П000020013001 < 0 Тогда
							Если ОстатокПересчета = 0 Тогда
							ИначеЕсли СтрокаТЗ.П000020013001 < -ОстатокПересчета Тогда
								ОстатокПересчета = 0;
							Иначе
								ОстатокПересчета = ОстатокПересчета + СтрокаТЗ.П000020013001;
							КонецЕсли;
							СтрокаТЗ.П000020013001 = 0;
						КонецЕсли;
						Если ОстатокНалогов > 0 Тогда
							Если СтрокаТЗ.П000020014001 < 0 Тогда
								Если ОстатокНалогов = 0 Тогда
								ИначеЕсли СтрокаТЗ.П000020014001 < -ОстатокНалогов Тогда
									ОстатокНалогов = 0;
								Иначе
									ОстатокНалогов = ОстатокНалогов + СтрокаТЗ.П000020014001;
								КонецЕсли;
								СтрокаТЗ.П000020014001 = 0;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				Иначе
					Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
						Если СтрокаТЗ.П000020013001 < 0 Тогда
							СтрокаТЗ.П000020013001 = 0;
							Если ОстатокНалогов = 0 И СтрокаТЗ.П000020014001 < 0 Тогда
								СтрокаТЗ.П000020014001 = 0;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				ОписаниеТаблиц.Раздел2 = ВременнаяТаблица.СкопироватьКолонки();
				ВременнаяТаблица.Свернуть("ДатаФактическогоПолученияДохода,П000020010001,ДатаУдержанияНалога,П000020011001,СрокПеречисленияНалога,П000020012001" + ?(ПодробныеДанные, ",ФизическоеЛицо", ""),"П000020014001,П000020013001");
				Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
					Если СтрокаТЗ.П000020013001 <> 0 Или СтрокаТЗ.П000020014001 <> 0 Тогда
						ЗаполнитьЗначенияСвойств(ОписаниеТаблиц.Раздел2.Добавить(), СтрокаТЗ);
					КонецЕсли;
				КонецЦикла;
				
			ИначеЕсли ПодробныеДанные Тогда
				Запрос.Текст = ТекстЗапроса;
				ОписаниеТаблиц.Раздел2 = Запрос.Выполнить().Выгрузить();
			Иначе
				ОписаниеТаблиц.Раздел2 = СводныйРезультат.СкопироватьКолонки();
				Для каждого СтрокаТЗ Из СводныйРезультат Цикл
					Если СтрокаТЗ.П000020013001 <> 0 Или СтрокаТЗ.П000020014001 <> 0 Тогда
						ЗаполнитьЗначенияСвойств(ОписаниеТаблиц.Раздел2.Добавить(), СтрокаТЗ);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Дополняет данные о ставке налогообложения, используемой для резидентов РФ, 
// сведениями о реальной ставке обложения с учетом налогового статуса физического лица.
// В менеджер временных таблиц помещается таблица ВТСтавкаНДФЛПоСтавкеРезидента 
// (или с иным именем - см. ИмяТаблицыРезультата) с уникальными записями с полями:
//		ФизическоеЛицо.
//		Период, переданная на вход дата
//    	КатегорияДохода, тип ПеречислениеСсылка.КатегорииДоходовНДФЛ
//		СтавкаНалогообложенияРезидента, тип ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента
//		Статус, тип СправочникСсылка.СтатусыНалогоплательщиковПоНДФЛ
//		СтавкаНДФЛ, тип ПеречислениеСсылка.НДФЛСтавки
//		СтавкаЧислом, тип Число, например, 0.13.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц, содержащий таблицу с полями:
//		ФизическоеЛицо
//		Период, дата на которую будет определен статус налогоплательщика
//    	КатегорияДохода, тип ПеречислениеСсылка.КатегорииДоходовНДФЛ: должно быть непустым
//		СтавкаНалогообложенияРезидента, тип ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента.
//	ИмяТаблицы - строка - имя обрабатываемой временной таблицы.
//	УчитыватьСтатусНаКонецГода - строка - необязательный, описание того, как следует учитывать изменение 
//		статуса на конец налогового периода, возможные значения:
//			"НеУчитыватьИзмененияСтатуса" (значение по умолчанию)
//			"УчитыватьИзмененияСтатусаДляРасчета"
//			"УчитыватьИзмененияСтатусаДляОтчетности"
//	ОкончаниеОтчетногоПериода - Дата - необязательный, значение будет учитываться в определение периода на которую будет определен статус налогоплательщика если необходимо учитывать изменение статуса
//	ИмяТаблицыРезультата - строка - имя создаваемой временной таблицы.
//
Процедура СоздатьВТСтавкаНДФЛПоСтавкеРезидента(МенеджерВременныхТаблиц, ИмяТаблицы, УчитыватьСтатусНаКонецГода = "НеУчитыватьИзмененияСтатуса", ОкончаниеОтчетногоПериода = '00010101', ИмяТаблицыРезультата = "ВТСтавкаНДФЛПоСтавкеРезидента") Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаИзмененияНалогообложенияДивидендов", УчетНДФЛ.ДатаИзмененияНалогообложенияДивидендов());
	Запрос.УстановитьПараметр("ДатаИзмененияПорядкаИсчисленияДляИностранцев", УчетНДФЛ.ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев());
	Запрос.УстановитьПараметр("УчитыватьИзмененияСтатусаДляРасчета", УчитыватьСтатусНаКонецГода = "УчитыватьИзмененияСтатусаДляРасчета");
	Запрос.УстановитьПараметр("НеУчитыватьИзмененияСтатуса", УчитыватьСтатусНаКонецГода <> "УчитыватьИзмененияСтатусаДляРасчета" И УчитыватьСтатусНаКонецГода <> "УчитыватьИзмененияСтатусаДляОтчетности");
	Запрос.УстановитьПараметр("ГодОтчетногоПериода", НачалоГода(ОкончаниеОтчетногоПериода));
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаСоСтавками.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаСоСтавками.Статус КАК Статус,
	|	ТаблицаСоСтавками.Период КАК Период,
	|	ТаблицаСоСтавками.КатегорияДохода КАК КатегорияДохода,
	|	ТаблицаСоСтавками.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ТаблицаСоСтавками.СтавкаНДФЛ КАК СтавкаНДФЛ,
	|	ТаблицаСоСтавками.СтавкаЧислом КАК СтавкаЧислом
	|ПОМЕСТИТЬ ВТСтавкаНДФЛПоСтавкеРезидента
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаСоСтатусами.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ТаблицаСоСтатусами.Статус КАК Статус,
	|		ТаблицаСоСтатусами.Период КАК Период,
	|		ТаблицаСоСтатусами.КатегорияДохода КАК КатегорияДохода,
	|		ТаблицаСоСтатусами.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|		ВЫБОР
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке05)
	|					И ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка05)
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке10)
	|					И ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка10)
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке12)
	|					И ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка12)
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
	|					И ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПоСтавке03)
	|					И ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка03)
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке05)
	|					И ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка05)
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПоСтавке06)
	|					И ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка06)
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке07)
	|					И ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка07)
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке10)
	|					И ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка10)
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке15)
	|					И ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|			КОГДА ТаблицаСоСтатусами.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|						КОГДА ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|						КОГДА ТаблицаСоСтатусами.Период >= ДАТАВРЕМЯ(2018, 1, 1)
	|							ТОГДА ВЫБОР
	|									КОГДА ТаблицаСоСтатусами.КатегорияДохода В (ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходВНатуральнойФормеОтТрудовойДеятельности), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходыПредыдущихРедакций))
	|										ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|									ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|								КОНЕЦ
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|					КОНЕЦ
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода В (ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке05), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке10), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке12))
	|				ТОГДА ВЫБОР
	|						КОГДА ТаблицаСоСтатусами.Период >= &ДатаИзмененияНалогообложенияДивидендов
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	|					КОНЕЦ
	|			КОГДА ТаблицаСоСтатусами.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходыПредыдущихРедакций)
	|					И ТаблицаСоСтатусами.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|						КОГДА ТаблицаСоСтатусами.Период >= &ДатаИзмененияНалогообложенияДивидендов
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	|					КОНЕЦ
	|			КОГДА ЕСТЬNULL(ТаблицаСоСтатусами.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ВЫБОР
	|						КОГДА ТаблицаСоСтатусами.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	|						КОГДА ТаблицаСоСтатусами.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
	|						ИНАЧЕ """"
	|					КОНЕЦ
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|		КОНЕЦ КАК СтавкаНДФЛ,
	|		0 КАК СтавкаЧислом
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|			ТаблицаНДФЛ.Период КАК Период,
	|			ТаблицаНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|			ТаблицаНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|			ЕСТЬNULL(ВЫБОР
	|					КОГДА &НеУчитыватьИзмененияСтатуса
	|						ТОГДА ФизическиеЛицаСтатусыНДФЛ.Статус
	|					КОГДА ФизическиеЛицаСтатусыНДФЛ.Год < &ГодОтчетногоПериода
	|						ТОГДА ВЫБОР
	|								КОГДА ФизическиеЛицаСтатусыНДФЛ.Статус = ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецГода
	|									ТОГДА ФизическиеЛицаСтатусыНДФЛ.Статус
	|								КОГДА ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецГода = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|									ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|								КОГДА &УчитыватьИзмененияСтатусаДляРасчета
	|									ТОГДА ФизическиеЛицаСтатусыНДФЛ.Статус
	|								КОГДА ТаблицаНДФЛ.Период < &ДатаИзмененияПорядкаИсчисленияДляИностранцев
	|									ТОГДА ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецГода
	|								КОГДА ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецГода = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|									ТОГДА ВЫБОР
	|											КОГДА ФизическиеЛицаСтатусыНДФЛ.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|												ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|											ИНАЧЕ ФизическиеЛицаСтатусыНДФЛ.Статус
	|										КОНЕЦ
	|								КОГДА ФизическиеЛицаСтатусыНДФЛ.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|									ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|								ИНАЧЕ ФизическиеЛицаСтатусыНДФЛ.Статус
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ФизическиеЛицаСтатусыНДФЛ.Статус = ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецКвартала1
	|								ТОГДА ФизическиеЛицаСтатусыНДФЛ.Статус
	|							КОГДА ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецКвартала1 = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|								ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|							КОГДА &УчитыватьИзмененияСтатусаДляРасчета
	|								ТОГДА ФизическиеЛицаСтатусыНДФЛ.Статус
	|							КОГДА ТаблицаНДФЛ.Период < &ДатаИзмененияПорядкаИсчисленияДляИностранцев
	|								ТОГДА ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецКвартала1
	|							КОГДА ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецГода = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|								ТОГДА ВЫБОР
	|										КОГДА ФизическиеЛицаСтатусыНДФЛ.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|											ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|										ИНАЧЕ ФизическиеЛицаСтатусыНДФЛ.Статус
	|									КОНЕЦ
	|							КОГДА ФизическиеЛицаСтатусыНДФЛ.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|								ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|							ИНАЧЕ ФизическиеЛицаСтатусыНДФЛ.Статус
	|						КОНЕЦ
	|				КОНЕЦ, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) КАК Статус
	|		ИЗ
	|			#ТаблицаНДФЛ КАК ТаблицаНДФЛ
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный КАК ФизическиеЛицаСтатусыНДФЛ
	|				ПО ТаблицаНДФЛ.ФизическоеЛицо = ФизическиеЛицаСтатусыНДФЛ.ФизическоеЛицо
	|					И (ВЫБОР
	|						КОГДА ТаблицаНДФЛ.Период < &ДатаИзмененияПорядкаИсчисленияДляИностранцев
	|							ТОГДА КОНЕЦПЕРИОДА(ТаблицаНДФЛ.Период, МЕСЯЦ)
	|						ИНАЧЕ ТаблицаНДФЛ.Период
	|					КОНЕЦ МЕЖДУ ФизическиеЛицаСтатусыНДФЛ.ДатаНачала И ФизическиеЛицаСтатусыНДФЛ.ДатаОкончания)) КАК ТаблицаСоСтатусами) КАК ТаблицаСоСтавками";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаНДФЛ", ИмяТаблицы);
	Если МенеджерВременныхТаблиц.Таблицы[ИмяТаблицы].Колонки.Найти("КатегорияДохода") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаНДФЛ.КатегорияДохода", "ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)");
	КонецЕсли;
	ВписатьТекстПолученияЗначенияСтавкиНДФЛЧислом(ТекстЗапроса, "ТаблицаСоСтавками.СтавкаЧислом", "ТаблицаСоСтавками", "СтавкаНДФЛ");
	
	НомерКвартала = ?(ОкончаниеОтчетногоПериода = '00010101', 4, Цел((Месяц(ОкончаниеОтчетногоПериода) + 2)/3));
	ТекстЗамены = "";
	Если НомерКвартала = 4 Тогда
		ТекстЗамены = "ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецГода";
	Иначе
		ТекстЗамены = "ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецКвартала" + НомерКвартала;
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ФизическиеЛицаСтатусыНДФЛ.СтатусНаКонецКвартала1", ТекстЗамены);
	
	Если ИмяТаблицыРезультата <> "ВТСтавкаНДФЛПоСтавкеРезидента" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТСтавкаНДФЛПоСтавкеРезидента", ИмяТаблицыРезультата);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СоздатьВТСтавкаНДФЛПоСтавкеРезидента2016(МенеджерВременныхТаблиц, ИмяТаблицы, УчитыватьСтатусНаКонецГода = "НеУчитыватьИзмененияСтатуса", МесяцКонцаГода = 12) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаИзмененияНалогообложенияДивидендов", УчетНДФЛ.ДатаИзмененияНалогообложенияДивидендов());
	Запрос.УстановитьПараметр("ДатаЗакона285ФЗ", УчетНДФЛ.ДатаЗакона285ФЗ());
	Запрос.УстановитьПараметр("ДатаИзмененияПорядкаИсчисленияДляИностранцев", УчетНДФЛ.ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев());
	Запрос.УстановитьПараметр("УчитыватьИзмененияСтатусаДляРасчета", УчитыватьСтатусНаКонецГода = "УчитыватьИзмененияСтатусаДляРасчета");
	Запрос.УстановитьПараметр("НеУчитыватьИзмененияСтатуса", УчитыватьСтатусНаКонецГода <> "УчитыватьИзмененияСтатусаДляРасчета" И УчитыватьСтатусНаКонецГода <> "УчитыватьИзмененияСтатусаДляОтчетности");
	
	СоздатьВТСтавкиНалогаЧислом(Запрос.МенеджерВременныхТаблиц);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ФизическиеЛицаПериоды.ФизическоеЛицо,
	|	ФизическиеЛицаПериоды.Период,
	|	ВЫБОР
	|		КОГДА ФизическиеЛицаПериоды.Период < &ДатаЗакона285ФЗ
	|				И СтатусФизическихЛицКакНалогоплательщиковНДФЛ.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Беженцы)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|		ИНАЧЕ ЕСТЬNULL(СтатусФизическихЛицКакНалогоплательщиковНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
	|	КОНЕЦ КАК Статус
	|ПОМЕСТИТЬ ВТФизическиеЛицаСтатусыНДФЛ
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		СписокФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|		МАКСИМУМ(СтатусФизическихЛиц.Период) КАК ПериодСтатуса,
	|		СписокФизическихЛиц.Период КАК Период
	|	ИЗ
	|		#ТаблицаНДФЛ КАК СписокФизическихЛиц
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ КАК СтатусФизическихЛиц
	|			ПО СписокФизическихЛиц.ФизическоеЛицо = СтатусФизическихЛиц.ФизическоеЛицо
	|				И (ВЫБОР
	|					КОГДА СписокФизическихЛиц.Период < &ДатаИзмененияПорядкаИсчисленияДляИностранцев
	|						ТОГДА КОНЕЦПЕРИОДА(СписокФизическихЛиц.Период, МЕСЯЦ)
	|					ИНАЧЕ СписокФизическихЛиц.Период
	|				КОНЕЦ >= СтатусФизическихЛиц.Период)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СписокФизическихЛиц.ФизическоеЛицо,
	|		СписокФизическихЛиц.Период) КАК ФизическиеЛицаПериоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ КАК СтатусФизическихЛицКакНалогоплательщиковНДФЛ
	|		ПО ФизическиеЛицаПериоды.ФизическоеЛицо = СтатусФизическихЛицКакНалогоплательщиковНДФЛ.ФизическоеЛицо
	|			И ФизическиеЛицаПериоды.ПериодСтатуса = СтатусФизическихЛицКакНалогоплательщиковНДФЛ.Период";
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "#ТаблицаНДФЛ", ИмяТаблицы);
	Запрос.Выполнить();
	
	Если УчитыватьСтатусНаКонецГода = "УчитыватьИзмененияСтатусаДляРасчета" Или УчитыватьСтатусНаКонецГода = "УчитыватьИзмененияСтатусаДляОтчетности" Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ФизическиеЛицаПериоды.ФизическоеЛицо,
		|	ФизическиеЛицаПериоды.Период,
		|	ВЫБОР
		|		КОГДА ФизическиеЛицаПериоды.Период < &ДатаЗакона285ФЗ
		|				И СтатусФизическихЛицКакНалогоплательщиковНДФЛ.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Беженцы)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
		|		ИНАЧЕ ЕСТЬNULL(СтатусФизическихЛицКакНалогоплательщиковНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
		|	КОНЕЦ КАК Статус
		|ПОМЕСТИТЬ ВТСтатусыНаКонецГода
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		СписокФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
		|		МАКСИМУМ(СтатусФизическихЛиц.Период) КАК ПериодСтатуса,
		|		СписокФизическихЛиц.Период КАК Период
		|	ИЗ
		|		#ТаблицаНДФЛ КАК СписокФизическихЛиц
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ КАК СтатусФизическихЛиц
		|			ПО СписокФизическихЛиц.ФизическоеЛицо = СтатусФизическихЛиц.ФизическоеЛицо
		|				И (КОНЕЦПЕРИОДА(СписокФизическихЛиц.Период, ГОД) >= СтатусФизическихЛиц.Период)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		СписокФизическихЛиц.ФизическоеЛицо,
		|		СписокФизическихЛиц.Период) КАК ФизическиеЛицаПериоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ КАК СтатусФизическихЛицКакНалогоплательщиковНДФЛ
		|		ПО ФизическиеЛицаПериоды.ФизическоеЛицо = СтатусФизическихЛицКакНалогоплательщиковНДФЛ.ФизическоеЛицо
		|			И ФизическиеЛицаПериоды.ПериодСтатуса = СтатусФизическихЛицКакНалогоплательщиковНДФЛ.Период";
		Если МесяцКонцаГода <> 12 Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "КОНЕЦПЕРИОДА(СписокФизическихЛиц.Период, ГОД)","ДОБАВИТЬКДАТЕ(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(СписокФизическихЛиц.Период, ГОД), МЕСЯЦ, " + МесяцКонцаГода + "), СЕКУНДА, -1)")
		КонецЕсли;
	Иначе 	
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ФизическиеЛицаПериоды.ФизическоеЛицо,
		|	ФизическиеЛицаПериоды.Период,
		|	ФизическиеЛицаПериоды.Статус
		|ПОМЕСТИТЬ ВТСтатусыНаКонецГода
		|ИЗ
		|	ВТФизическиеЛицаСтатусыНДФЛ КАК ФизическиеЛицаПериоды";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "#ТаблицаНДФЛ", ИмяТаблицы);
	Запрос.Выполнить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.Период,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА &НеУчитыватьИзмененияСтатуса
	|				ТОГДА ФизическиеЛицаСтатусыНДФЛ.Статус
	|			КОГДА ФизическиеЛицаСтатусыНДФЛ.Статус = СтатусыНаКонецГода.Статус
	|				ТОГДА ФизическиеЛицаСтатусыНДФЛ.Статус
	|			КОГДА СтатусыНаКонецГода.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|			КОГДА &УчитыватьИзмененияСтатусаДляРасчета
	|				ТОГДА ФизическиеЛицаСтатусыНДФЛ.Статус
	|			КОГДА ТаблицаНДФЛ.Период < &ДатаИзмененияПорядкаИсчисленияДляИностранцев
	|				ТОГДА СтатусыНаКонецГода.Статус
	|			КОГДА СтатусыНаКонецГода.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|				ТОГДА ВЫБОР
	|						КОГДА ФизическиеЛицаСтатусыНДФЛ.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|							ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|						ИНАЧЕ ФизическиеЛицаСтатусыНДФЛ.Статус
	|					КОНЕЦ
	|			КОГДА ФизическиеЛицаСтатусыНДФЛ.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|			ИНАЧЕ ФизическиеЛицаСтатусыНДФЛ.Статус
	|		КОНЕЦ, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) КАК Статус
	|ПОМЕСТИТЬ ВТСтатусыСУчетомИзменений
	|ИЗ
	|	#ТаблицаНДФЛ КАК ТаблицаНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизическиеЛицаСтатусыНДФЛ КАК ФизическиеЛицаСтатусыНДФЛ
	|		ПО ТаблицаНДФЛ.ФизическоеЛицо = ФизическиеЛицаСтатусыНДФЛ.ФизическоеЛицо
	|			И ТаблицаНДФЛ.Период = ФизическиеЛицаСтатусыНДФЛ.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусыНаКонецГода КАК СтатусыНаКонецГода
	|		ПО ТаблицаНДФЛ.ФизическоеЛицо = СтатусыНаКонецГода.ФизическоеЛицо
	|			И ТаблицаНДФЛ.Период = СтатусыНаКонецГода.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ФизическиеЛицаСтатусыНДФЛ.Статус,
	|	ТаблицаНДФЛ.Период,
	|	ТаблицаНДФЛ.КодДохода,
	|	ТаблицаНДФЛ.СтавкаНалогообложенияРезидента,
	|	ВЫБОР
	|		КОГДА ТаблицаНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ФизическиеЛицаСтатусыНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|				КОНЕЦ
	|		КОГДА ТаблицаНДФЛ.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ФизическиеЛицаСтатусыНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|					КОГДА ТаблицаНДФЛ.Период >= &ДатаИзмененияНалогообложенияДивидендов
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	|				КОНЕЦ
	|		КОГДА ЕСТЬNULL(ФизическиеЛицаСтатусыНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	|					КОГДА ТаблицаНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|	КОНЕЦ КАК СтавкаНДФЛ
	|ПОМЕСТИТЬ ВТБезСтавкиНалогаЧислом
	|ИЗ
	|	#ТаблицаНДФЛ КАК ТаблицаНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусыСУчетомИзменений КАК ФизическиеЛицаСтатусыНДФЛ
	|		ПО ТаблицаНДФЛ.ФизическоеЛицо = ФизическиеЛицаСтатусыНДФЛ.ФизическоеЛицо
	|			И ТаблицаНДФЛ.Период = ФизическиеЛицаСтатусыНДФЛ.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.Статус,
	|	ТаблицаНДФЛ.Период,
	|	ТаблицаНДФЛ.КодДохода,
	|	ТаблицаНДФЛ.СтавкаНалогообложенияРезидента,
	|	ТаблицаНДФЛ.СтавкаНДФЛ,
	|	СтавкиНалогаЧислом.Размер КАК СтавкаЧислом
	|ПОМЕСТИТЬ ВТСтавкаНДФЛПоСтавкеРезидента
	|ИЗ
	|	ВТБезСтавкиНалогаЧислом КАК ТаблицаНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНалогаЧислом КАК СтавкиНалогаЧислом
	|		ПО ТаблицаНДФЛ.СтавкаНДФЛ = СтавкиНалогаЧислом.СтавкаНалогообложения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтатусыНаКонецГода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТФизическиеЛицаСтатусыНДФЛ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтавкиНалогаЧислом
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтатусыСУчетомИзменений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБезСтавкиНалогаЧислом";
	
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "#ТаблицаНДФЛ", ИмяТаблицы);
	Запрос.Выполнить();

КонецПроцедуры

// Возвращает структуру, содержащую таблицы значений с
// данными о доходах, налогах, вычетах.
//
// Параметры:
// 	Сотрудники - Массив - содержит физических лиц, по которым необходимо получить данные.
//	НалоговыйПериод - Число - номер года налогового периода.
//	Организация - организация, по которой получать доходы.
//	РегистрацияВНалоговомОргане - (необязательный), ссылка на регистрацию в налоговом органе, 
//									по которой отбирать данные.
//	ДатаАктуальности - Дата - (необязательный), дата ограничивающая период получаемых данных о доходах налогах и вычетах
//			если не задана, ограничением будет выступать текущая дата сеанса.
//	ПодробныеДанные - Булево - определяет подробность возвращаемых данных.
//
// Возвращаемое значение:
//	В варианте ПодробныеДанные = Ложь. Структура со следующими полями:
//		Доходы - таблица значений с колонками:
//			Сотрудник,
//			Ставка,
//			МесяцНалоговогоПериода,
//			КодДохода,
//			КодДоходаКодДляОтчетности,
//			КодВычета,
//			СуммаДохода,
//			СуммаВычета,
//			ВключатьВДекларациюПоНалогуНаПрибыль,
//		Вычеты - таблица значений с колонками:
//			Сотрудник
//			КодВычета,
//			КодВычетаКод,
//			СуммаВычета,
//			ВключатьВДекларациюПоНалогуНаПрибыль,
//		Налоги - таблица значений с колонками:
//			Сотрудник,
//			Ставка,
//			ОбщаяСуммаДохода,
//			ОблагаемаяСуммаДохода,
//			Исчислено,
//			Удержано,
//			Задолженность,
//			ИзлишнеУдержано,
//			Перечислено,
//			ВключатьВДекларациюПоНалогуНаПрибыль
//
//	В варианте ПодробныеДанные = Истина. Структура со следующими полями:
//		Доходы - таблица значений с колонками:
//			ФизическоеЛицо,
//			Сотрудник,
//			Ставка,
//			КодДохода,
//			КодВычета,
//			СуммаДохода,
//			СуммаВычета,
//			ПериодРегистрации,
//			СтавкаНалогообложенияРезидента,
//			Регистратор,
//			РегистрацияВНалоговомОргане,
//			Подразделение,
//			ДатаПолученияДохода,
//		Вычеты - таблица значений с колонками:
//			ФизическоеЛицо
//			КодВычета,
//			СуммаВычета,
//			ПериодРегистрации,
//			Регистратор,
//			РегистрацияВНалоговомОргане,
//			Подразделение,
//			ДатаПолученияДохода,
//		Налоги - таблица значений с колонками:
//			ФизическоеЛицо,
//			Ставка,
//			СтавкаНалогообложенияРезидента,
//			Начислено,
//			Зачтено,
//			Регистратор,
//			ПериодРегистрации,
//			РегистрацияВНалоговомОргане,
//			Подразделение,
//			ДатаПолученияДохода
//
Функция ДанныеОДоходахНалогахВычетах2016(Сотрудники, НалоговыйПериод, Организация, РегистрацияВНалоговомОргане = Неопределено, ДатаАктуальности = '00010101', КППОтправки = Неопределено, ПодробныеДанные = Ложь) Экспорт
	
	Если НалоговыйПериод < Год(УчетНДФЛ.ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев()) Тогда
		Возврат ДанныеОДоходахНалогахВычетахСПомесячнойСтавкой(Сотрудники, НалоговыйПериод, Организация, РегистрацияВНалоговомОргане, ДатаАктуальности, ПодробныеДанные)
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",ЗарплатаКадры.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ГодНП",НалоговыйПериод);
	НачалоНалоговогоПериода = Дата(НалоговыйПериод, 1, 1);
	КонецНалоговогоПериода = КонецГода(НачалоНалоговогоПериода);
	Запрос.УстановитьПараметр("КонецНП",КонецНалоговогоПериода);
	Запрос.УстановитьПараметр("НачалоНП", НачалоНалоговогоПериода);
	Запрос.УстановитьПараметр("НачалоСледующегоНП", КонецНалоговогоПериода + 1); // Начало следующего налогового периода.
	Запрос.УстановитьПараметр("ДатаПодачиСведений", ?(Не ЗначениеЗаполнено(ДатаАктуальности), ТекущаяДатаСеанса(), ДатаАктуальности));
	Запрос.УстановитьПараметр("ДатаДоПодачиСведений", ?(Не ЗначениеЗаполнено(ДатаАктуальности), ТекущаяДатаСеанса(), ДатаАктуальности) - 1);
	Запрос.УстановитьПараметр("ЧитатьСводныеДанные", РегистрацияВНалоговомОргане = Неопределено Или ПодробныеДанные);
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	УчитыватьПереездВДругуюИФНС = ЗначениеЗаполнено(РегистрацияВНалоговомОргане) И ЗначениеЗаполнено(КППОтправки) И Не ПодробныеДанные И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВНалоговомОргане, "КПП") <> КППОтправки;
	Запрос.УстановитьПараметр("УчитыватьПереездВДругуюИФНС", УчитыватьПереездВДругуюИФНС);
	Запрос.УстановитьПараметр("КППОтправки", КППОтправки);
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокСотрудников.Ссылка КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизлица
	|ИЗ
	|	Справочник.ФизическиеЛица КАК СписокСотрудников
	|ГДЕ
	|	СписокСотрудников.Ссылка В(&Сотрудники)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МЕСЯЦ(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода) КАК Месяц,
	|	КОНЕЦПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, ГОД) КАК КонецГода,
	|	СведенияОДоходахНДФЛ.МесяцНалоговогоПериода,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.КодДохода,
	|	СведенияОДоходахНДФЛ.КодДохода.КодПрименяемыйВНалоговойОтчетностиС2010Года КАК КодДоходаКодДляОтчетности,
	|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента КАК КодДоходаСтавкаНалогообложенияРезидента,
	|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ СведенияОДоходахНДФЛ.СуммаВычета
	|	КОНЕЦ КАК СуммаВычета,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.СуммаВычета = 0
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|		ИНАЧЕ СведенияОДоходахНДФЛ.КодВычета
	|	КОНЕЦ КАК КодВычета,
	|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ,
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
	|	СведенияОДоходахНДФЛ.Регистратор,
	|	СведенияОДоходахНДФЛ.Сотрудник,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	СведенияОДоходахНДФЛ.Подразделение,
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизлица КАК Сотрудники
	|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = Сотрудники.ФизическоеЛицо
	|			И (СведенияОДоходахНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|			И (СведенияОДоходахНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|			И (&ЧитатьСводныеДанные
	|					И СведенияОДоходахНДФЛ.Организация = &Организация
	|				ИЛИ СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|			И (СведенияОДоходахНДФЛ.Период <= &ДатаПодачиСведений)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета КАК КодВычета,
	|	СУММА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма) КАК СуммаОборот,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор,
	|	НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Подразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты
	|ИЗ
	|	ВТФизлица КАК Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|		ПО Сотрудники.ФизическоеЛицо = ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо
	|ГДЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период <= &ДатаПодачиСведений
	|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП
	|	И (&ЧитатьСводныеДанные
	|				И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация = &Организация
	|			ИЛИ ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор,
	|	НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период, МЕСЯЦ),
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Подразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.КодВычета КАК КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.СуммаОборот КАК СуммаВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.КодВычета.ГруппаВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.Регистратор,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.ПериодРегистрации,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.Подразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТВычеты
	|ИЗ
	|	ВТПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИмущественныеВычетыНДФЛ.КодВычета,
	|	ИмущественныеВычетыНДФЛ.Сумма,
	|	НАЧАЛОПЕРИОДА(ИмущественныеВычетыНДФЛ.Период, МЕСЯЦ),
	|	СотрудникиОрганизаций.ФизическоеЛицо,
	|	ИмущественныеВычетыНДФЛ.КодВычета.ГруппаВычета,
	|	ЛОЖЬ,
	|	ИмущественныеВычетыНДФЛ.Регистратор,
	|	НАЧАЛОПЕРИОДА(ИмущественныеВычетыНДФЛ.МесяцРегистрации, МЕСЯЦ),
	|	ИмущественныеВычетыНДФЛ.Подразделение,
	|	ИмущественныеВычетыНДФЛ.РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТФизлица КАК СотрудникиОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычетыНДФЛ
	|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ИмущественныеВычетыНДФЛ.ФизическоеЛицо
	|			И (ИмущественныеВычетыНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|			И (ИмущественныеВычетыНДФЛ.МесяцРегистрации <= &ДатаПодачиСведений)
	|			И (ИмущественныеВычетыНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|			И (ИмущественныеВычетыНДФЛ.Год = &ГодНП)
	|			И (&ЧитатьСводныеДанные
	|					И ИмущественныеВычетыНДФЛ.Организация = &Организация
	|				ИЛИ ИмущественныеВычетыНДФЛ.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
	|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане,
	|	НДФЛРасчетыСБюджетом.ВариантУдержания,
	|	НДФЛРасчетыСБюджетом.ВидДвижения,
	|	НДФЛРасчетыСБюджетом.Сумма,
	|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента,
	|	НДФЛРасчетыСБюджетом.КодДохода,
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
	|	НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	НДФЛРасчетыСБюджетом.Регистратор,
	|	НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	НДФЛРасчетыСБюджетом.Подразделение
	|ПОМЕСТИТЬ ВТСтрокиНалогов
	|ИЗ
	|	ВТФизлица КАК СправкиОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК НДФЛРасчетыСБюджетом
	|		ПО СправкиОДоходах.ФизическоеЛицо = НДФЛРасчетыСБюджетом.ФизическоеЛицо
	|			И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|			И (НДФЛРасчетыСБюджетом.Период < &ДатаПодачиСведений)
	|			И (НДФЛРасчетыСБюджетом.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|			И (&ЧитатьСводныеДанные
	|					И НДФЛРасчетыСБюджетом.Организация = &Организация
	|				ИЛИ НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Перечислено.Ставка,
	|	Перечислено.ФизическоеЛицо,
	|	СУММА(Перечислено.СуммаРасход) КАК СуммаРасход,
	|	Перечислено.МесяцНалоговогоПериода,
	|	Перечислено.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Перечислено.ИсчисленоПоДивидендам
	|ПОМЕСТИТЬ ВТПеречисленоНДФЛПоМесяцам
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка КАК Ставка,
	|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход КАК СуммаРасход,
	|		КОНЕЦПЕРИОДА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ИсчисленоПоДивидендам КАК ИсчисленоПоДивидендам
	|	ИЗ
	|		РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Обороты(
	|				&НачалоНП,
	|				&ДатаДоПодачиСведений,
	|				,
	|				ФизическоеЛицо В
	|						(ВЫБРАТЬ
	|							ФизическиеЛица.ФизическоеЛицо
	|						ИЗ
	|							ВТФизлица КАК ФизическиеЛица)
	|					И (МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|					И (&ЧитатьСводныеДанные
	|							И Организация = &Организация
	|						ИЛИ РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)) КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты) КАК Перечислено
	|
	|СГРУППИРОВАТЬ ПО
	|	Перечислено.Ставка,
	|	Перечислено.ФизическоеЛицо,
	|	Перечислено.МесяцНалоговогоПериода,
	|	Перечислено.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	Перечислено.ИсчисленоПоДивидендам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Доходы.ДатаПолученияДохода КАК Период,
	|	Доходы.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	Доходы.КодДохода КАК КодДохода,
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТСтрокиУчета
	|ИЗ
	|	ВТДоходы КАК Доходы
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Вычеты.МесяцНалоговогоПериода,
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13),
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.КодДоходаПоУмолчанию),
	|	Вычеты.ФизическоеЛицо
	|ИЗ
	|	ВТВычеты КАК Вычеты
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиНалогов.МесяцНалоговогоПериода,
	|	СтрокиНалогов.СтавкаНалогообложенияРезидента,
	|	СтрокиНалогов.КодДохода,
	|	СтрокиНалогов.ФизическоеЛицо
	|ИЗ
	|	ВТСтрокиНалогов КАК СтрокиНалогов
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеречисленоНДФЛПоМесяцам.МесяцНалоговогоПериода,
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13),
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.КодДоходаПоУмолчанию),
	|	ПеречисленоНДФЛПоМесяцам.ФизическоеЛицо
	|ИЗ
	|	ВТПеречисленоНДФЛПоМесяцам КАК ПеречисленоНДФЛПоМесяцам
	|ГДЕ
	|	НЕ ПеречисленоНДФЛПоМесяцам.ИсчисленоПоДивидендам
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеречисленоНДФЛПоМесяцам.МесяцНалоговогоПериода,
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09),
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010),
	|	ПеречисленоНДФЛПоМесяцам.ФизическоеЛицо
	|ИЗ
	|	ВТПеречисленоНДФЛПоМесяцам КАК ПеречисленоНДФЛПоМесяцам
	|ГДЕ
	|	ПеречисленоНДФЛПоМесяцам.ИсчисленоПоДивидендам";
	Запрос.Выполнить();
	
	СоздатьВТСтавкаНДФЛПоСтавкеРезидента2016(Запрос.МенеджерВременныхТаблиц, "ВТСтрокиУчета", "НеУчитыватьИзмененияСтатуса");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.Статус,
	|	ТаблицаНДФЛ.Период,
	|	ТаблицаНДФЛ.КодДохода,
	|	ТаблицаНДФЛ.СтавкаНалогообложенияРезидента,
	|	ТаблицаНДФЛ.СтавкаНДФЛ,
	|	ТаблицаНДФЛ.СтавкаЧислом
	|ПОМЕСТИТЬ ВТСтавкаНДФЛБезУчетаИзмененияСтатуса
	|ИЗ
	|	ВТСтавкаНДФЛПоСтавкеРезидента КАК ТаблицаНДФЛ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтавкаНДФЛПоСтавкеРезидента";
	Запрос.Выполнить();
	
	СоздатьВТСтавкаНДФЛПоСтавкеРезидента2016(Запрос.МенеджерВременныхТаблиц, "ВТСтрокиУчета", "УчитыватьИзмененияСтатусаДляОтчетности");
	
	Если ПодробныеДанные Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	Доходы.ПериодРегистрации КАК ПериодРегистрации,
		|	Доходы.Сотрудник КАК Сотрудник,
		|	Доходы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	Доходы.Подразделение КАК Подразделение,
		|	Доходы.ДатаПолученияДохода КАК ДатаПолученияДохода,
		|	Доходы.Регистратор КАК Регистратор,
		|	Доходы.КодДохода КАК КодДохода,
		|	Доходы.КодВычета,
		|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
		|	СУММА(Доходы.СуммаВычета) КАК СуммаВычета
		|ИЗ
		|	ВТДоходы КАК Доходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО Доходы.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И Доходы.КодДоходаСтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И Доходы.ДатаПолученияДохода = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И Доходы.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|ГДЕ
		|	(НЕ Доходы.ИсточникДоходаЗаПределамиРФ
		|			ИЛИ СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.ПериодРегистрации,
		|	Доходы.Сотрудник,
		|	Доходы.ФизическоеЛицо,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	Доходы.КодДохода,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента,
		|	Доходы.РегистрацияВНалоговомОргане,
		|	Доходы.Подразделение,
		|	Доходы.КодВычета,
		|	Доходы.Регистратор,
		|	Доходы.ДатаПолученияДохода
		|
		|ИМЕЮЩИЕ
		|	(СУММА(Доходы.СуммаДохода) <> 0
		|		ИЛИ СУММА(Доходы.СуммаВычета) <> 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	СтавкаНалогообложенияРезидента,
		|	Ставка,
		|	ПериодРегистрации,
		|	Сотрудник,
		|	РегистрацияВНалоговомОргане,
		|	Подразделение,
		|	ДатаПолученияДохода,
		|	КодДохода,
		|	Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вычеты.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Вычеты.ПериодРегистрации КАК ПериодРегистрации,
		|	Вычеты.РегистрацияВНалоговомОргане,
		|	КОНЕЦПЕРИОДА(Вычеты.МесяцНалоговогоПериода, МЕСЯЦ) КАК ДатаПолученияДохода,
		|	Вычеты.Подразделение,
		|	Вычеты.Регистратор КАК Регистратор,
		|	Вычеты.КодВычета КАК КодВычета,
		|	СУММА(Вычеты.СуммаВычета) КАК СуммаВычета
		|ИЗ
		|	ВТВычеты КАК Вычеты
		|ГДЕ
		|	Вычеты.КодВычета ЕСТЬ НЕ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	Вычеты.КодВычета,
		|	Вычеты.РегистрацияВНалоговомОргане,
		|	Вычеты.Подразделение,
		|	Вычеты.ПериодРегистрации,
		|	Вычеты.Регистратор,
		|	Вычеты.ФизическоеЛицо,
		|	КОНЕЦПЕРИОДА(Вычеты.МесяцНалоговогоПериода, МЕСЯЦ)
		|
		|ИМЕЮЩИЕ
		|	СУММА(Вычеты.СуммаВычета) <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	ПериодРегистрации,
		|	Вычеты.РегистрацияВНалоговомОргане,
		|	Вычеты.Подразделение,
		|	ДатаПолученияДохода,
		|	КодВычета,
		|	Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НДФЛРасчетыСБюджетом.ПериодРегистрации КАК ПериодРегистрации,
		|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	НДФЛРасчетыСБюджетом.Регистратор КАК Регистратор,
		|	НДФЛРасчетыСБюджетом.Подразделение КАК Подразделение,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК Начислено,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК Зачтено,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода КАК ДатаПолученияДохода,
		|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента
		|ИЗ
		|	ВТСтрокиНалогов КАК НДФЛРасчетыСБюджетом
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И НДФЛРасчетыСБюджетом.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|
		|СГРУППИРОВАТЬ ПО
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	НДФЛРасчетыСБюджетом.ПериодРегистрации,
		|	НДФЛРасчетыСБюджетом.Регистратор,
		|	НДФЛРасчетыСБюджетом.Подразделение,
		|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
		|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	СтавкаНалогообложенияРезидента,
		|	Ставка,
		|	ПериодРегистрации,
		|	РегистрацияВНалоговомОргане,
		|	Подразделение,
		|	ДатаПолученияДохода,
		|	Регистратор";
		
	Иначе
		
		Если УчитыватьПереездВДругуюИФНС Тогда
			
			СформироватьВТФизическиеЛицаСУчетомПереездаВИнойНО(КППОтправки, Запрос.МенеджерВременныхТаблиц, "ВТДоходы", "КонецГода");
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	Доходы.ФизическоеЛицо
			|ПОМЕСТИТЬ ВТЛишниеФизическиеЛица
			|ИЗ
			|	ВТФизлица КАК Доходы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизическиеЛицаСУчетомПереездаВИнойНО КАК ФизическиеЛицаСУчетомПереездаВИнойНО
			|		ПО Доходы.ФизическоеЛицо = ФизическиеЛицаСУчетомПереездаВИнойНО.ФизическоеЛицо
			|ГДЕ
			|	ФизическиеЛицаСУчетомПереездаВИнойНО.ФизическоеЛицо ЕСТЬ NULL ";
			
		Иначе
			
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 0
			|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо
			|ПОМЕСТИТЬ ВТЛишниеФизическиеЛица";
			
		КонецЕсли;
		Запрос.Выполнить();
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Доходы.Месяц,
		|	Доходы.МесяцНалоговогоПериода,
		|	Доходы.ФизическоеЛицо,
		|	Доходы.КодДохода,
		|	Доходы.КодДоходаКодДляОтчетности,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента,
		|	Доходы.СуммаДохода,
		|	Доходы.СуммаВычета,
		|	Доходы.КодВычета,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	Доходы.Регистратор,
		|	Доходы.ДатаПолученияДохода
		|ПОМЕСТИТЬ ВТДоходыОбъектаОбложения
		|ИЗ
		|	ВТДоходы КАК Доходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО Доходы.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И Доходы.КодДоходаСтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И Доходы.ДатаПолученияДохода = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И Доходы.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|ГДЕ
		|	(НЕ Доходы.ИсточникДоходаЗаПределамиРФ
		|			ИЛИ СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоходыИВычеты.ФизическоеЛицо,
		|	СУММА(ДоходыИВычеты.ОбщаяСуммаДохода) КАК ОбщаяСуммаДохода,
		|	СУММА(ДоходыИВычеты.ОблагаемаяСуммаДохода) КАК ОблагаемаяСуммаДохода,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	ДоходыИВычеты.ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТИтогиДоходов
		|ИЗ
		|	(ВЫБРАТЬ
		|		Доходы.ДатаПолученияДохода КАК Период,
		|		Доходы.СуммаДохода КАК ОбщаяСуммаДохода,
		|		Доходы.СуммаДохода - Доходы.СуммаВычета КАК ОблагаемаяСуммаДохода,
		|		Доходы.КодДоходаСтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|		Доходы.КодДохода КАК КодДохода,
		|		Доходы.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
		|		Доходы.ФизическоеЛицо КАК ФизическоеЛицо
		|	ИЗ
		|		ВТДоходыОбъектаОбложения КАК Доходы
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Вычеты.МесяцНалоговогоПериода,
		|		0,
		|		-Вычеты.СуммаВычета,
		|		ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13),
		|		ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.КодДоходаПоУмолчанию),
		|		Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль,
		|		Вычеты.ФизическоеЛицо
		|	ИЗ
		|		ВТВычеты КАК Вычеты) КАК ДоходыИВычеты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО ДоходыИВычеты.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И ДоходыИВычеты.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И ДоходыИВычеты.Период = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И ДоходыИВычеты.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоходыИВычеты.ФизическоеЛицо,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	ДоходыИВычеты.ВключатьВДекларациюПоНалогуНаПрибыль
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|						И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК НачисленоЗаТекущийГод,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
		|						И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК ЗачтеноАвансовыхПлатежейЗаТекущийГод,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА (НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
		|						ИЛИ НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом))
		|						И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК УдержаноЗаТекущийГод,
		|	0 КАК ВозвращеноЗаТекущийГод,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ПереданоНаВзысканиеВНалоговыйОрган)
		|						И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК ПереданоНаВзысканиеЗаТекущийГод,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка
		|ПОМЕСТИТЬ ВТНалоги
		|ИЗ
		|	ВТСтрокиНалогов КАК НДФЛРасчетыСБюджетом
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И НДФЛРасчетыСБюджетом.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|
		|СГРУППИРОВАТЬ ПО
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	КОНЕЦПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	СУММА(НДФЛРасчетыСБюджетом.Сумма) КАК Налог,
		|	ВЫБОР
		|		КОГДА НДФЛРасчетыСБюджетом.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
		|			ТОГДА НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТУдержаноНДФЛПо13или30ПоМесяцам
		|ИЗ
		|	ВТСтрокиНалогов КАК НДФЛРасчетыСБюджетом
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И НДФЛРасчетыСБюджетом.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛБезУчетаИзмененияСтатуса КАК СтавкаНДФЛБезУчетаИзмененияСтатуса
		|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛБезУчетаИзмененияСтатуса.ФизическоеЛицо
		|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛБезУчетаИзмененияСтатуса.СтавкаНалогообложенияРезидента
		|			И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода = СтавкаНДФЛБезУчетаИзмененияСтатуса.Период
		|			И НДФЛРасчетыСБюджетом.КодДохода = СтавкаНДФЛБезУчетаИзмененияСтатуса.КодДохода
		|ГДЕ
		|	НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
		|	И НДФЛРасчетыСБюджетом.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|	И НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане
		|	И СтавкаНДФЛБезУчетаИзмененияСтатуса.СтавкаНДФЛ В (ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13), ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30))
		|
		|СГРУППИРОВАТЬ ПО
		|	КОНЕЦПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ),
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	ВЫБОР
		|		КОГДА НДФЛРасчетыСБюджетом.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
		|			ТОГДА НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК СтавкаПоСтатусу,
		|	ЕСТЬNULL(УдержаноНДФЛПоСтавке30.Налог, 0) КАК УдержаноНДФЛПоСтавке30,
		|	ЕСТЬNULL(УдержаноНДФЛПоСтавке13.Налог, 0) КАК УдержаноНДФЛПоСтавке13,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТПеречисленоПоСтавке13_30
		|ИЗ
		|	ВТПеречисленоНДФЛПоМесяцам КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдержаноНДФЛПо13или30ПоМесяцам КАК УдержаноНДФЛПоСтавке13
		|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо = УдержаноНДФЛПоСтавке13.ФизическоеЛицо
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода = УдержаноНДФЛПоСтавке13.МесяцНалоговогоПериода
		|			И (УдержаноНДФЛПоСтавке13.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль = УдержаноНДФЛПоСтавке13.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдержаноНДФЛПо13или30ПоМесяцам КАК УдержаноНДФЛПоСтавке30
		|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо = УдержаноНДФЛПоСтавке30.ФизическоеЛицо
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода = УдержаноНДФЛПоСтавке30.МесяцНалоговогоПериода
		|			И (УдержаноНДФЛПоСтавке30.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30))
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль = УдержаноНДФЛПоСтавке30.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И (ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13) = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента)
		|			И (ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.КодДоходаПоУмолчанию) = СтавкаНДФЛПоСтавкеРезидента.КодДохода)
		|ГДЕ
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка В (ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30), ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
		|	И НЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ИсчисленоПоДивидендам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Перечислено.Ставка,
		|	СУММА(Перечислено.Сумма) КАК Сумма,
		|	Перечислено.ФизическоеЛицо,
		|	Перечислено.ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТПеречисленоНДФЛ
		|ИЗ
		|	(ВЫБРАТЬ
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка КАК Ставка,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход КАК Сумма,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоНДФЛПоМесяцам КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты
		|	ГДЕ
		|		НЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка В (ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30), ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
		|		И НЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ИсчисленоПоДивидендам
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоНДФЛПоМесяцам КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|			ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|				И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода = СтавкаНДФЛПоСтавкеРезидента.Период
		|				И (ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09) = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента)
		|				И (ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010) = СтавкаНДФЛПоСтавкеРезидента.КодДохода)
		|	ГДЕ
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ИсчисленоПоДивидендам
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30),
		|		ПеречисленоПоСтавке13_30.ФизическоеЛицо,
		|		ВЫБОР
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
		|				ТОГДА 0
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
		|				ТОГДА ПеречисленоПоСтавке13_30.СуммаРасход
		|			ИНАЧЕ ВЫРАЗИТЬ(ПеречисленоПоСтавке13_30.СуммаРасход * ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 / (ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13) КАК ЧИСЛО(22, 0))
		|		КОНЕЦ,
		|		ПеречисленоПоСтавке13_30.ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоПоСтавке13_30 КАК ПеречисленоПоСтавке13_30
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13),
		|		ПеречисленоПоСтавке13_30.ФизическоеЛицо,
		|		ВЫБОР
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
		|				ТОГДА 0
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 = 0
		|				ТОГДА ПеречисленоПоСтавке13_30.СуммаРасход
		|			ИНАЧЕ ПеречисленоПоСтавке13_30.СуммаРасход - (ВЫРАЗИТЬ(ПеречисленоПоСтавке13_30.СуммаРасход * ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 / (ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13) КАК ЧИСЛО(22, 0)))
		|		КОНЕЦ,
		|		ПеречисленоПоСтавке13_30.ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоПоСтавке13_30 КАК ПеречисленоПоСтавке13_30
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ПеречисленоПоСтавке13_30.СтавкаПоСтатусу,
		|		ПеречисленоПоСтавке13_30.ФизическоеЛицо,
		|		ВЫБОР
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
		|				ТОГДА ПеречисленоПоСтавке13_30.СуммаРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ПеречисленоПоСтавке13_30.ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоПоСтавке13_30 КАК ПеречисленоПоСтавке13_30) КАК Перечислено
		|
		|СГРУППИРОВАТЬ ПО
		|	Перечислено.Ставка,
		|	Перечислено.ФизическоеЛицо,
		|	Перечислено.ВключатьВДекларациюПоНалогуНаПрибыль
		|
		|ИМЕЮЩИЕ
		|	СУММА(Перечислено.Сумма) <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Доходы.Месяц КАК Месяц,
		|	Доходы.МесяцНалоговогоПериода,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	Доходы.КодДохода,
		|	Доходы.КодДоходаКодДляОтчетности,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента,
		|	Доходы.КодВычета,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
		|	СУММА(Доходы.СуммаВычета) КАК СуммаВычета,
		|	Доходы.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТДоходыПоМесяцам
		|ИЗ
		|	ВТДоходыОбъектаОбложения КАК Доходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО Доходы.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И Доходы.КодДоходаСтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И Доходы.ДатаПолученияДохода = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И Доходы.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|ГДЕ
		|	Доходы.Месяц ЕСТЬ НЕ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.Месяц,
		|	Доходы.МесяцНалоговогоПериода,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	Доходы.КодДохода,
		|	Доходы.КодДоходаКодДляОтчетности,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	Доходы.ФизическоеЛицо,
		|	Доходы.КодВычета
		|
		|ИМЕЮЩИЕ
		|	(СУММА(Доходы.СуммаДохода) <> 0
		|		ИЛИ СУММА(Доходы.СуммаВычета) <> 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Доходы.ФизическоеЛицо,
		|	Доходы.КодДохода,
		|	Доходы.Месяц,
		|	Доходы.Ставка
		|ПОМЕСТИТЬ ВТОсобыеМесяцы
		|ИЗ
		|	ВТДоходыПоМесяцам КАК Доходы
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.ФизическоеЛицо,
		|	Доходы.КодДохода,
		|	Доходы.Месяц,
		|	Доходы.Ставка
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
		|			КОГДА Доходы.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ) = 2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МесяцыОсобыхВычетов.ФизическоеЛицо,
		|	МесяцыОсобыхВычетов.КодДохода,
		|	МесяцыОсобыхВычетов.Месяц,
		|	МАКСИМУМ(Доходы.КодВычета) КАК КодВычета,
		|	МесяцыОсобыхВычетов.Ставка
		|ПОМЕСТИТЬ ВТСтрокиСУказаннымВычетом
		|ИЗ
		|	ВТОсобыеМесяцы КАК МесяцыОсобыхВычетов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоМесяцам КАК Доходы
		|		ПО МесяцыОсобыхВычетов.ФизическоеЛицо = Доходы.ФизическоеЛицо
		|			И МесяцыОсобыхВычетов.КодДохода = Доходы.КодДохода
		|			И МесяцыОсобыхВычетов.Месяц = Доходы.Месяц
		|			И МесяцыОсобыхВычетов.Ставка = Доходы.Ставка
		|ГДЕ
		|	Доходы.КодВычета <> ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	МесяцыОсобыхВычетов.ФизическоеЛицо,
		|	МесяцыОсобыхВычетов.КодДохода,
		|	МесяцыОсобыхВычетов.Месяц,
		|	МесяцыОсобыхВычетов.Ставка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МесяцыОсобыхВычетов.ФизическоеЛицо,
		|	МесяцыОсобыхВычетов.КодДохода,
		|	МесяцыОсобыхВычетов.Месяц,
		|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	МесяцыОсобыхВычетов.Ставка
		|ПОМЕСТИТЬ ВТДоходыИзСтрокБезВычетов
		|ИЗ
		|	ВТОсобыеМесяцы КАК МесяцыОсобыхВычетов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоМесяцам КАК Доходы
		|		ПО МесяцыОсобыхВычетов.ФизическоеЛицо = Доходы.ФизическоеЛицо
		|			И МесяцыОсобыхВычетов.КодДохода = Доходы.КодДохода
		|			И МесяцыОсобыхВычетов.Месяц = Доходы.Месяц
		|			И МесяцыОсобыхВычетов.Ставка = Доходы.Ставка
		|ГДЕ
		|	Доходы.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	МесяцыОсобыхВычетов.ФизическоеЛицо,
		|	МесяцыОсобыхВычетов.КодДохода,
		|	МесяцыОсобыхВычетов.Месяц,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	МесяцыОсобыхВычетов.Ставка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Доходы.Месяц КАК МесяцНалоговогоПериода,
		|	Доходы.Ставка КАК Ставка,
		|	Доходы.КодДохода,
		|	Доходы.КодДоходаКодДляОтчетности,
		|	Доходы.КодВычета КАК КодВычета,
		|	Доходы.СуммаДохода + ВЫБОР
		|		КОГДА СтрокиСУказаннымВычетом.ФизическоеЛицо ЕСТЬ NULL 
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ДоходыИзСтрокБезВычетов.СуммаДохода, 0)
		|	КОНЕЦ КАК СуммаДохода,
		|	Доходы.СуммаВычета КАК СуммаВычета,
		|	Доходы.ФизическоеЛицо КАК Сотрудник,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль
		|ИЗ
		|	ВТДоходыПоМесяцам КАК Доходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛишниеФизическиеЛица КАК ЛишниеФизическиеЛица
		|		ПО Доходы.ФизическоеЛицо = ЛишниеФизическиеЛица.ФизическоеЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОсобыеМесяцы КАК СтрокиБезКодаВычета
		|		ПО Доходы.ФизическоеЛицо = СтрокиБезКодаВычета.ФизическоеЛицо
		|			И Доходы.КодДохода = СтрокиБезКодаВычета.КодДохода
		|			И Доходы.Месяц = СтрокиБезКодаВычета.Месяц
		|			И (Доходы.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка))
		|			И Доходы.Ставка = СтрокиБезКодаВычета.Ставка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыИзСтрокБезВычетов КАК ДоходыИзСтрокБезВычетов
		|		ПО Доходы.ФизическоеЛицо = ДоходыИзСтрокБезВычетов.ФизическоеЛицо
		|			И Доходы.Месяц = ДоходыИзСтрокБезВычетов.Месяц
		|			И Доходы.КодДохода = ДоходыИзСтрокБезВычетов.КодДохода
		|			И Доходы.ВключатьВДекларациюПоНалогуНаПрибыль = ДоходыИзСтрокБезВычетов.ВключатьВДекларациюПоНалогуНаПрибыль
		|			И Доходы.Ставка = ДоходыИзСтрокБезВычетов.Ставка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиСУказаннымВычетом КАК СтрокиСУказаннымВычетом
		|		ПО Доходы.ФизическоеЛицо = СтрокиСУказаннымВычетом.ФизическоеЛицо
		|			И Доходы.Месяц = СтрокиСУказаннымВычетом.Месяц
		|			И Доходы.КодДохода = СтрокиСУказаннымВычетом.КодДохода
		|			И Доходы.КодВычета = СтрокиСУказаннымВычетом.КодВычета
		|			И Доходы.Ставка = СтрокиСУказаннымВычетом.Ставка
		|ГДЕ
		|	ЛишниеФизическиеЛица.ФизическоеЛицо ЕСТЬ NULL 
		|	И СтрокиБезКодаВычета.ФизическоеЛицо ЕСТЬ NULL 
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ставка,
		|	МесяцНалоговогоПериода,
		|	Доходы.КодДоходаКодДляОтчетности
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вычеты.КодВычета,
		|	Вычеты.КодВычетаГруппаВычета КАК ГруппаВычета,
		|	СУММА(Вычеты.СуммаВычета) КАК СуммаВычета,
		|	Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2011Года + Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2010Года КАК КодВычетаКод,
		|	Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	Вычеты.ФизическоеЛицо КАК Сотрудник
		|ИЗ
		|	ВТВычеты КАК Вычеты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛишниеФизическиеЛица КАК ЛишниеФизическиеЛица
		|		ПО Вычеты.ФизическоеЛицо = ЛишниеФизическиеЛица.ФизическоеЛицо
		|ГДЕ
		|	ЛишниеФизическиеЛица.ФизическоеЛицо ЕСТЬ NULL 
		|	И Вычеты.КодВычета ЕСТЬ НЕ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	Вычеты.КодВычета,
		|	Вычеты.КодВычетаГруппаВычета,
		|	Вычеты.ФизическоеЛицо,
		|	Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2011Года + Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2010Года
		|
		|ИМЕЮЩИЕ
		|	СУММА(Вычеты.СуммаВычета) <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодВычетаКод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СотрудникиОрганизаций.ФизическоеЛицо КАК Сотрудник,
		|	ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) КАК Ставка,
		|	ИтогиДоходов.ОбщаяСуммаДохода,
		|	ИтогиДоходов.ОблагаемаяСуммаДохода,
		|	Налоги.НачисленоЗаТекущийГод КАК Исчислено,
		|	Налоги.ЗачтеноАвансовыхПлатежейЗаТекущийГод КАК ЗачтеноАвансовыхПлатежей,
		|	Налоги.УдержаноЗаТекущийГод - Налоги.ВозвращеноЗаТекущийГод КАК Удержано,
		|	ЕСТЬNULL(ПеречисленоНДФЛ.Сумма, 0) КАК Перечислено,
		|	ВЫБОР
		|		КОГДА Налоги.НачисленоЗаТекущийГод - Налоги.ЗачтеноАвансовыхПлатежейЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод > 0
		|			ТОГДА Налоги.НачисленоЗаТекущийГод - Налоги.ЗачтеноАвансовыхПлатежейЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Задолженность,
		|	ВЫБОР
		|		КОГДА Налоги.НачисленоЗаТекущийГод - Налоги.ЗачтеноАвансовыхПлатежейЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод < 0
		|			ТОГДА -(Налоги.НачисленоЗаТекущийГод - Налоги.ЗачтеноАвансовыхПлатежейЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИзлишнеУдержано,
		|	НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль
		|ИЗ
		|	ВТФизлица КАК СотрудникиОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛишниеФизическиеЛица КАК ЛишниеФизическиеЛица
		|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ЛишниеФизическиеЛица.ФизическоеЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ Перечисление.НДФЛСтавки КАК Ставки
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ИСТИНА КАК ВключатьВДекларациюПоНалогуНаПрибыль
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ЛОЖЬ) КАК НалогНаПрибыль
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтогиДоходов КАК ИтогиДоходов
		|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ИтогиДоходов.ФизическоеЛицо
		|			И (ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) = ИтогиДоходов.Ставка)
		|			И (НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль = ИтогиДоходов.ВключатьВДекларациюПоНалогуНаПрибыль)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалоги КАК Налоги
		|		ПО СотрудникиОрганизаций.ФизическоеЛицо = Налоги.ФизическоеЛицо
		|			И (ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) = Налоги.Ставка)
		|			И (НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль = Налоги.ВключатьВДекларациюПоНалогуНаПрибыль)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПеречисленоНДФЛ КАК ПеречисленоНДФЛ
		|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ПеречисленоНДФЛ.ФизическоеЛицо
		|			И (ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) = ПеречисленоНДФЛ.Ставка)
		|			И (НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль = ПеречисленоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль)
		|ГДЕ
		|	ЛишниеФизическиеЛица.ФизическоеЛицо ЕСТЬ NULL 
		|	И (ИтогиДоходов.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|				И (ИтогиДоходов.ОбщаяСуммаДохода <> 0
		|					ИЛИ ИтогиДоходов.ОблагаемаяСуммаДохода <> 0)
		|			ИЛИ Налоги.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|				И (Налоги.НачисленоЗаТекущийГод <> 0
		|					ИЛИ Налоги.НачисленоЗаТекущийГод - Налоги.ЗачтеноАвансовыхПлатежейЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод <> 0)
		|			ИЛИ ЕСТЬNULL(ПеречисленоНДФЛ.Сумма, 0) <> 0)";		
		
	КонецЕсли;
	
	Результаты = Запрос.ВыполнитьПакет();
	ВсегоЗапросов = Результаты.Количество();
	
	Возврат Новый Структура("Доходы, Вычеты, Налоги", 
						Результаты[ВсегоЗапросов - 3].Выгрузить(), 
						Результаты[ВсегоЗапросов - 2].Выгрузить(), 
						Результаты[ВсегоЗапросов - 1].Выгрузить());
КонецФункции

// Возвращает структуру, содержащую таблицы значений с
// данными о доходах, налогах, вычетах.
//
// Параметры:
// 	Сотрудники - Массив - содержит физических лиц, по которым необходимо получить данные.
//	НалоговыйПериод - Число - номер года налогового периода.
//	Организация - организация, по которой получать доходы.
//	РегистрацияВНалоговомОргане - (необязательный), ссылка на регистрацию в налоговом органе, 
//									по которой отбирать данные.
//	Дата - Дата - (необязательный), дата ограничивающая период получаемых данных о доходах налогах и вычетах
//			если не задана, ограничением будет выступать текущая дата сеанса.
//
// Возвращаемое значение:
//	Структура со следующими полями:
//		Доходы - таблица значений с колонками:
//			Сотрудник,
//			МесяцНалоговогоПериода,
//			КодДохода,
//			КодДоходаКодДляОтчетности,
//			КодВычета,
//			СуммаДохода,
//			СуммаВычета,
//			ВключатьВДекларациюПоНалогуНаПрибыль,
//		Вычеты - таблица значений с колонками:
//			Сотрудник
//			КодВычета,
//			КодВычетаКод,
//			СуммаВычета,
//			ВключатьВДекларациюПоНалогуНаПрибыль,
//		Налоги - таблица значений с колонками:
//			Сотрудник,
//			Ставка,
//			ОбщаяСуммаДохода,
//			ОблагаемаяСуммаДохода,
//			Исчислено,
//			Удержано,
//			Задолженность,
//			ИзлишнеУдержано,
//			Перечислено,
//			ВключатьВДекларациюПоНалогуНаПрибыль
Функция ДанныеОДоходахНалогахВычетахСПомесячнойСтавкой(Сотрудники, НалоговыйПериод, Организация, РегистрацияВНалоговомОргане, ДатаАктуальности, ПодробныеДанные) 
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДатаЗакона229ФЗ", УчетНДФЛ.ДатаЗакона229ФЗ());
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",ЗарплатаКадры.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ГодНП",НалоговыйПериод);
	НачалоНалоговогоПериода = Дата(НалоговыйПериод, 1, 1);
	КонецНалоговогоПериода = КонецГода(НачалоНалоговогоПериода);
	Запрос.УстановитьПараметр("КонецНП",КонецНалоговогоПериода);
	Запрос.УстановитьПараметр("НачалоНП", НачалоНалоговогоПериода);
	Запрос.УстановитьПараметр("НачалоСледующегоНП", КонецНалоговогоПериода + 1); // Начало следующего налогового периода.
	Запрос.УстановитьПараметр("ДатаПодачиСведений", ?(Не ЗначениеЗаполнено(ДатаАктуальности), ТекущаяДатаСеанса(), ДатаАктуальности));
	Запрос.УстановитьПараметр("ДатаДоПодачиСведений", ?(Не ЗначениеЗаполнено(ДатаАктуальности), ТекущаяДатаСеанса(), ДатаАктуальности) - 1);
	Запрос.УстановитьПараметр("ЧитатьСводныеДанные", РегистрацияВНалоговомОргане = Неопределено);
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	Запрос.УстановитьПараметр("ДатаИзмененияНалогообложенияДивидендов", УчетНДФЛ.ДатаИзмененияНалогообложенияДивидендов());
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(Запрос.МенеджерВременныхТаблиц, НачалоГода(Дата(НалоговыйПериод,1,1)), НачалоМесяца(КонецГода(Дата(НалоговыйПериод,1,1))),,, "ВТПериодыНалогаНаДоходы");
	
	КадровыйУчет.СоздатьНаДатуВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, Сотрудники, "СтатусНалогоплательщика", КонецНалоговогоПериода);
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокСотрудников.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизлица
	|ИЗ
	|	ВТКадровыеДанныеФизическихЛиц КАК СписокСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.ФизическоеЛицо,
	|	Статусы.СтатусНалогоплательщика
	|ПОМЕСТИТЬ ВТРезидентствоФизлицНаКонецГода
	|ИЗ
	|	ВТКадровыеДанныеФизическихЛиц КАК Статусы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Физлица.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Периоды.Период КАК Период
	|ПОМЕСТИТЬ ВТПериодыСрезаСтатусов
	|ИЗ
	|	ВТФизлица КАК Физлица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыНалогаНаДоходы КАК Периоды
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКадровыеДанныеФизическихЛиц";
	
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(
		Запрос.МенеджерВременныхТаблиц,
		"ВТПериодыСрезаСтатусов");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Ложь, "СтатусНалогоплательщика");
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РезидентствоФизлицНаКонецМесяца.ФизическоеЛицо,
	|	РезидентствоФизлицНаКонецМесяца.Период КАК МесяцНалоговогоПериода,
	|	ВЫБОР
	|		КОГДА РезидентствоФизлицНаКонецМесяца.Период < &ДатаЗакона229ФЗ
	|			ТОГДА ЕСТЬNULL(РезидентствоФизлицНаКонецГода.СтатусНалогоплательщика, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
	|		ИНАЧЕ РезидентствоФизлицНаКонецМесяца.СтатусНалогоплательщика
	|	КОНЕЦ КАК ТекущийСтатус,
	|	ЕСТЬNULL(РезидентствоФизлицНаКонецГода.СтатусНалогоплательщика, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) КАК Статус
	|ПОМЕСТИТЬ ВТСтатусы
	|ИЗ
	|	ВТКадровыеДанныеФизическихЛиц КАК РезидентствоФизлицНаКонецМесяца
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРезидентствоФизлицНаКонецГода КАК РезидентствоФизлицНаКонецГода
	|		ПО РезидентствоФизлицНаКонецМесяца.ФизическоеЛицо = РезидентствоФизлицНаКонецГода.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МЕСЯЦ(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода) КАК Месяц,
	|	СведенияОДоходахНДФЛ.МесяцНалоговогоПериода,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.КодДохода,
	|	СведенияОДоходахНДФЛ.КодДохода.КодПрименяемыйВНалоговойОтчетностиС2010Года КАК КодДоходаКодДляОтчетности,
	|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента КАК КодДоходаСтавкаНалогообложенияРезидента,
	|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ СведенияОДоходахНДФЛ.СуммаВычета
	|	КОНЕЦ КАК СуммаВычета,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.СуммаВычета = 0
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|		ИНАЧЕ СведенияОДоходахНДФЛ.КодВычета
	|	КОНЕЦ КАК КодВычета,
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ,
	|	СведенияОДоходахНДФЛ.Регистратор,
	|	СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане,
	|	СведенияОДоходахНДФЛ.Подразделение,
	|	СведенияОДоходахНДФЛ.Сотрудник
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизлица КАК Сотрудники
	|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = Сотрудники.ФизическоеЛицо
	|			И (СведенияОДоходахНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|			И (СведенияОДоходахНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|			И (&ЧитатьСводныеДанные
	|					И СведенияОДоходахНДФЛ.Организация = &Организация
	|				ИЛИ СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|			И (СведенияОДоходахНДФЛ.Период <= &ДатаПодачиСведений)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета КАК КодВычета,
	|	СУММА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма) КАК СуммаОборот,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор,
	|	НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Подразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты
	|ИЗ
	|	ВТФизлица КАК Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|		ПО Сотрудники.ФизическоеЛицо = ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо
	|ГДЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период <= &ДатаПодачиСведений
	|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП
	|	И (&ЧитатьСводныеДанные
	|				И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация = &Организация
	|			ИЛИ ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор,
	|	НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период, МЕСЯЦ),
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Подразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.КодВычета КАК КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.СуммаОборот КАК СуммаВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.КодВычета.ГруппаВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.Регистратор,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.ПериодРегистрации,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.Подразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты.РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТВычеты
	|ИЗ
	|	ВТПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИмущественныеВычетыНДФЛ.КодВычета,
	|	ИмущественныеВычетыНДФЛ.Сумма,
	|	НАЧАЛОПЕРИОДА(ИмущественныеВычетыНДФЛ.Период, МЕСЯЦ),
	|	СотрудникиОрганизаций.ФизическоеЛицо,
	|	ИмущественныеВычетыНДФЛ.КодВычета.ГруппаВычета,
	|	ЛОЖЬ,
	|	ИмущественныеВычетыНДФЛ.Регистратор,
	|	НАЧАЛОПЕРИОДА(ИмущественныеВычетыНДФЛ.МесяцРегистрации, МЕСЯЦ),
	|	ИмущественныеВычетыНДФЛ.Подразделение,
	|	ИмущественныеВычетыНДФЛ.РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТФизлица КАК СотрудникиОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычетыНДФЛ
	|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ИмущественныеВычетыНДФЛ.ФизическоеЛицо
	|			И (ИмущественныеВычетыНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|			И (ИмущественныеВычетыНДФЛ.Период <= &ДатаПодачиСведений)
	|			И (ИмущественныеВычетыНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|			И (ИмущественныеВычетыНДФЛ.Год = &ГодНП)
	|			И (&ЧитатьСводныеДанные
	|					И ИмущественныеВычетыНДФЛ.Организация = &Организация
	|				ИЛИ ИмущественныеВычетыНДФЛ.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
	|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане,
	|	НДФЛРасчетыСБюджетом.ВариантУдержания,
	|	НДФЛРасчетыСБюджетом.ВидДвижения,
	|	КОНЕЦПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, ГОД) КАК Период,
	|	НДФЛРасчетыСБюджетом.Сумма,
	|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента,
	|	НДФЛРасчетыСБюджетом.КодДохода,
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
	|	НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	НДФЛРасчетыСБюджетом.Регистратор,
	|	НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	НДФЛРасчетыСБюджетом.Подразделение
	|ПОМЕСТИТЬ ВТСтрокиНалогов
	|ИЗ
	|	ВТФизлица КАК СправкиОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК НДФЛРасчетыСБюджетом
	|		ПО СправкиОДоходах.ФизическоеЛицо = НДФЛРасчетыСБюджетом.ФизическоеЛицо
	|			И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|			И (НДФЛРасчетыСБюджетом.Период < &ДатаПодачиСведений)
	|			И (НДФЛРасчетыСБюджетом.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|			И (&ЧитатьСводныеДанные
	|					И НДФЛРасчетыСБюджетом.Организация = &Организация
	|				ИЛИ НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОНЕЦПЕРИОДА(Доходы.МесяцНалоговогоПериода, ГОД) КАК Период,
	|	Доходы.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	Доходы.КодДохода КАК КодДохода,
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТСтрокиУчета
	|ИЗ
	|	ВТДоходы КАК Доходы
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОНЕЦПЕРИОДА(Вычеты.МесяцНалоговогоПериода, ГОД),
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13),
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.КодДоходаПоУмолчанию),
	|	Вычеты.ФизическоеЛицо
	|ИЗ
	|	ВТВычеты КАК Вычеты
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиНалогов.Период,
	|	СтрокиНалогов.СтавкаНалогообложенияРезидента,
	|	СтрокиНалогов.КодДохода,
	|	СтрокиНалогов.ФизическоеЛицо
	|ИЗ
	|	ВТСтрокиНалогов КАК СтрокиНалогов";
	Запрос.Выполнить();
	
	СоздатьВТСтавкаНДФЛПоСтавкеРезидента2016(Запрос.МенеджерВременныхТаблиц, "ВТСтрокиУчета");
	
	Если ПодробныеДанные Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Доходы.КодДохода КАК КодДохода,
		|	Доходы.КодВычета,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
		|	СУММА(Доходы.СуммаВычета) КАК СуммаВычета,
		|	Доходы.ПериодРегистрации КАК ПериодРегистрации,
		|	Доходы.Регистратор КАК Регистратор,
		|	Доходы.РегистрацияВНалоговомОргане,
		|	Доходы.Подразделение,
		|	Доходы.Сотрудник КАК Сотрудник,
		|	Доходы.МесяцНалоговогоПериода КАК ДатаПолученияДохода
		|ИЗ
		|	ВТДоходы КАК Доходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО Доходы.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И Доходы.КодДоходаСтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И (КОНЕЦПЕРИОДА(Доходы.МесяцНалоговогоПериода, ГОД) = СтавкаНДФЛПоСтавкеРезидента.Период)
		|			И Доходы.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|ГДЕ
		|	(НЕ Доходы.ИсточникДоходаЗаПределамиРФ
		|			ИЛИ СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.ПериодРегистрации,
		|	Доходы.Сотрудник,
		|	Доходы.ФизическоеЛицо,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	Доходы.КодДохода,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента,
		|	Доходы.РегистрацияВНалоговомОргане,
		|	Доходы.Подразделение,
		|	Доходы.КодВычета,
		|	Доходы.Регистратор,
		|	Доходы.МесяцНалоговогоПериода
		|
		|ИМЕЮЩИЕ
		|	(СУММА(Доходы.СуммаДохода) <> 0
		|		ИЛИ СУММА(Доходы.СуммаВычета) <> 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	СтавкаНалогообложенияРезидента,
		|	Ставка,
		|	ПериодРегистрации,
		|	Регистратор,
		|	Сотрудник,
		|	ДатаПолученияДохода,
		|	КодДохода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вычеты.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Вычеты.ПериодРегистрации КАК ПериодРегистрации,
		|	Вычеты.РегистрацияВНалоговомОргане,
		|	КОНЕЦПЕРИОДА(Вычеты.МесяцНалоговогоПериода, МЕСЯЦ) КАК ДатаПолученияДохода,
		|	Вычеты.Подразделение,
		|	Вычеты.Регистратор КАК Регистратор,
		|	Вычеты.КодВычета КАК КодВычета,
		|	СУММА(Вычеты.СуммаВычета) КАК СуммаВычета
		|ИЗ
		|	ВТВычеты КАК Вычеты
		|ГДЕ
		|	Вычеты.КодВычета ЕСТЬ НЕ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	Вычеты.КодВычета,
		|	Вычеты.РегистрацияВНалоговомОргане,
		|	Вычеты.Подразделение,
		|	Вычеты.ПериодРегистрации,
		|	Вычеты.Регистратор,
		|	Вычеты.ФизическоеЛицо,
		|	КОНЕЦПЕРИОДА(Вычеты.МесяцНалоговогоПериода, МЕСЯЦ)
		|
		|ИМЕЮЩИЕ
		|	СУММА(Вычеты.СуммаВычета) <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	ПериодРегистрации,
		|	Вычеты.РегистрацияВНалоговомОргане,
		|	Вычеты.Подразделение,
		|	ДатаПолученияДохода,
		|	КодВычета,
		|	Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	НДФЛРасчетыСБюджетом.ПериодРегистрации,
		|	НДФЛРасчетыСБюджетом.Регистратор,
		|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане,
		|	НДФЛРасчетыСБюджетом.Подразделение,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК Начислено,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК Зачтено,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода КАК ДатаПолученияДохода,
		|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента
		|ИЗ
		|	ВТСтрокиНалогов КАК НДФЛРасчетыСБюджетом
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И НДФЛРасчетыСБюджетом.Период = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И НДФЛРасчетыСБюджетом.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|
		|СГРУППИРОВАТЬ ПО
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	НДФЛРасчетыСБюджетом.Подразделение,
		|	НДФЛРасчетыСБюджетом.ПериодРегистрации,
		|	НДФЛРасчетыСБюджетом.Регистратор,
		|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
		|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента";
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоходыИВычеты.ФизическоеЛицо,
		|	СУММА(ДоходыИВычеты.ОбщаяСуммаДохода) КАК ОбщаяСуммаДохода,
		|	СУММА(ДоходыИВычеты.ОблагаемаяСуммаДохода) КАК ОблагаемаяСуммаДохода,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	ДоходыИВычеты.ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТИтогиДоходов
		|ИЗ
		|	(ВЫБРАТЬ
		|		КОНЕЦПЕРИОДА(Доходы.МесяцНалоговогоПериода, ГОД) КАК Период,
		|		Доходы.СуммаДохода КАК ОбщаяСуммаДохода,
		|		Доходы.СуммаДохода - Доходы.СуммаВычета КАК ОблагаемаяСуммаДохода,
		|		Доходы.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|		Доходы.КодДохода КАК КодДохода,
		|		Доходы.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
		|		Доходы.ФизическоеЛицо КАК ФизическоеЛицо
		|	ИЗ
		|		ВТДоходы КАК Доходы
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		КОНЕЦПЕРИОДА(Вычеты.МесяцНалоговогоПериода, ГОД),
		|		0,
		|		-Вычеты.СуммаВычета,
		|		ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13),
		|		ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.КодДоходаПоУмолчанию),
		|		Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль,
		|		Вычеты.ФизическоеЛицо
		|	ИЗ
		|		ВТВычеты КАК Вычеты) КАК ДоходыИВычеты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО ДоходыИВычеты.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И ДоходыИВычеты.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И ДоходыИВычеты.Период = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И ДоходыИВычеты.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоходыИВычеты.ФизическоеЛицо,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	ДоходыИВычеты.ВключатьВДекларациюПоНалогуНаПрибыль
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|						И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК НачисленоЗаТекущийГод,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА (НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
		|						ИЛИ НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом))
		|						И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК УдержаноЗаТекущийГод,
		|	0 КАК ВозвращеноЗаТекущийГод,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ПереданоНаВзысканиеВНалоговыйОрган)
		|						И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|					ТОГДА НДФЛРасчетыСБюджетом.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК ПереданоНаВзысканиеЗаТекущийГод,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка
		|ПОМЕСТИТЬ ВТНалоги
		|ИЗ
		|	ВТСтрокиНалогов КАК НДФЛРасчетыСБюджетом
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И НДФЛРасчетыСБюджетом.Период = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И НДФЛРасчетыСБюджетом.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|
		|СГРУППИРОВАТЬ ПО
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	СУММА(НДФЛРасчетыСБюджетом.Сумма) КАК Налог,
		|	ВЫБОР
		|		КОГДА НДФЛРасчетыСБюджетом.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
		|			ТОГДА НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТУдержаноНДФЛПо13или30ПоМесяцам
		|ИЗ
		|	ВТСтрокиНалогов КАК НДФЛРасчетыСБюджетом
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусы КАК Статусы
		|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = Статусы.ФизическоеЛицо
		|			И (НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ) = Статусы.МесяцНалоговогоПериода)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И НДФЛРасчетыСБюджетом.Период = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И НДФЛРасчетыСБюджетом.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|ГДЕ
		|	НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
		|	И НДФЛРасчетыСБюджетом.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|	И НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане
		|	И ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|				ТОГДА ИСТИНА
		|			КОГДА НДФЛРасчетыСБюджетом.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
		|				ТОГДА ВЫБОР
		|						КОГДА Статусы.ТекущийСтатус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
		|								И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода >= &ДатаИзмененияНалогообложенияДивидендов
		|							ТОГДА ИСТИНА
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОГДА Статусы.ТекущийСтатус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
		|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ,
		|	ВЫБОР
		|		КОГДА НДФЛРасчетыСБюджетом.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
		|			ТОГДА НДФЛРасчетыСБюджетом.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТПеречисленоНДФЛПоМесяцам
		|ИЗ
		|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Обороты(
		|			&НачалоНП,
		|			&ДатаДоПодачиСведений,
		|			,
		|			ФизическоеЛицо В
		|					(ВЫБРАТЬ
		|						ФизическиеЛица.ФизическоеЛицо
		|					ИЗ
		|						ВТФизлица КАК ФизическиеЛица)
		|				И (МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|				И (&ЧитатьСводныеДанные
		|						И Организация = &Организация
		|					ИЛИ РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане)) КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Статусы.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
		|	КОНЕЦ КАК СтавкаПоСтатусу,
		|	ЕСТЬNULL(УдержаноНДФЛПоСтавке30.Налог, 0) КАК УдержаноНДФЛПоСтавке30,
		|	ЕСТЬNULL(УдержаноНДФЛПоСтавке13.Налог, 0) КАК УдержаноНДФЛПоСтавке13,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход,
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТПеречисленоПоСтавке13_30
		|ИЗ
		|	ВТПеречисленоНДФЛПоМесяцам КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдержаноНДФЛПо13или30ПоМесяцам КАК УдержаноНДФЛПоСтавке13
		|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо = УдержаноНДФЛПоСтавке13.ФизическоеЛицо
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода = УдержаноНДФЛПоСтавке13.МесяцНалоговогоПериода
		|			И (УдержаноНДФЛПоСтавке13.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль = УдержаноНДФЛПоСтавке13.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдержаноНДФЛПо13или30ПоМесяцам КАК УдержаноНДФЛПоСтавке30
		|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо = УдержаноНДФЛПоСтавке30.ФизическоеЛицо
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода = УдержаноНДФЛПоСтавке30.МесяцНалоговогоПериода
		|			И (УдержаноНДФЛПоСтавке30.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30))
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль = УдержаноНДФЛПоСтавке30.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусы КАК Статусы
		|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо = Статусы.ФизическоеЛицо
		|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.МесяцНалоговогоПериода = Статусы.МесяцНалоговогоПериода
		|ГДЕ
		|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка В (ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30), ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Перечислено.Ставка,
		|	СУММА(Перечислено.Сумма) КАК Сумма,
		|	Перечислено.ФизическоеЛицо,
		|	Перечислено.ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТПеречисленоНДФЛ
		|ИЗ
		|	(ВЫБРАТЬ
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка КАК Ставка,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.СуммаРасход КАК Сумма,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоНДФЛПоМесяцам КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты
		|	ГДЕ
		|		НЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛОбороты.Ставка В (ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30), ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30),
		|		ПеречисленоПоСтавке13_30.ФизическоеЛицо,
		|		ВЫБОР
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
		|				ТОГДА 0
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
		|				ТОГДА ПеречисленоПоСтавке13_30.СуммаРасход
		|			ИНАЧЕ ВЫРАЗИТЬ(ПеречисленоПоСтавке13_30.СуммаРасход * ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 / (ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13) КАК ЧИСЛО(22, 0))
		|		КОНЕЦ,
		|		ПеречисленоПоСтавке13_30.ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоПоСтавке13_30 КАК ПеречисленоПоСтавке13_30
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13),
		|		ПеречисленоПоСтавке13_30.ФизическоеЛицо,
		|		ВЫБОР
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
		|				ТОГДА 0
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 = 0
		|				ТОГДА ПеречисленоПоСтавке13_30.СуммаРасход
		|			ИНАЧЕ ПеречисленоПоСтавке13_30.СуммаРасход - (ВЫРАЗИТЬ(ПеречисленоПоСтавке13_30.СуммаРасход * ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 / (ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13) КАК ЧИСЛО(22, 0)))
		|		КОНЕЦ,
		|		ПеречисленоПоСтавке13_30.ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоПоСтавке13_30 КАК ПеречисленоПоСтавке13_30
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ПеречисленоПоСтавке13_30.СтавкаПоСтатусу,
		|		ПеречисленоПоСтавке13_30.ФизическоеЛицо,
		|		ВЫБОР
		|			КОГДА ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке30 + ПеречисленоПоСтавке13_30.УдержаноНДФЛПоСтавке13 = 0
		|				ТОГДА ПеречисленоПоСтавке13_30.СуммаРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ПеречисленоПоСтавке13_30.ВключатьВДекларациюПоНалогуНаПрибыль
		|	ИЗ
		|		ВТПеречисленоПоСтавке13_30 КАК ПеречисленоПоСтавке13_30) КАК Перечислено
		|
		|СГРУППИРОВАТЬ ПО
		|	Перечислено.Ставка,
		|	Перечислено.ФизическоеЛицо,
		|	Перечислено.ВключатьВДекларациюПоНалогуНаПрибыль
		|
		|ИМЕЮЩИЕ
		|	СУММА(Перечислено.Сумма) <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Доходы.Месяц КАК Месяц,
		|	Доходы.МесяцНалоговогоПериода,
		|	Доходы.КодДохода,
		|	Доходы.КодДоходаКодДляОтчетности,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента,
		|	Доходы.КодВычета,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
		|	СУММА(Доходы.СуммаВычета) КАК СуммаВычета,
		|	Доходы.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТДоходыПоМесяцам
		|ИЗ
		|	ВТДоходы КАК Доходы
		|ГДЕ
		|	Доходы.Месяц ЕСТЬ НЕ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.Месяц,
		|	Доходы.МесяцНалоговогоПериода,
		|	Доходы.КодДохода,
		|	Доходы.КодДоходаКодДляОтчетности,
		|	Доходы.КодДоходаСтавкаНалогообложенияРезидента,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	Доходы.ФизическоеЛицо,
		|	Доходы.КодВычета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Доходы.ФизическоеЛицо,
		|	Доходы.КодДохода,
		|	Доходы.Месяц
		|ПОМЕСТИТЬ ВТОсобыеМесяцы
		|ИЗ
		|	ВТДоходыПоМесяцам КАК Доходы
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.ФизическоеЛицо,
		|	Доходы.КодДохода,
		|	Доходы.Месяц
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
		|			КОГДА Доходы.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ) = 2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МесяцыОсобыхВычетов.ФизическоеЛицо,
		|	МесяцыОсобыхВычетов.КодДохода,
		|	МесяцыОсобыхВычетов.Месяц,
		|	МАКСИМУМ(Доходы.КодВычета) КАК КодВычета
		|ПОМЕСТИТЬ ВТСтрокиСУказаннымВычетом
		|ИЗ
		|	ВТОсобыеМесяцы КАК МесяцыОсобыхВычетов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоМесяцам КАК Доходы
		|		ПО МесяцыОсобыхВычетов.ФизическоеЛицо = Доходы.ФизическоеЛицо
		|			И МесяцыОсобыхВычетов.КодДохода = Доходы.КодДохода
		|			И МесяцыОсобыхВычетов.Месяц = Доходы.Месяц
		|ГДЕ
		|	Доходы.КодВычета <> ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	МесяцыОсобыхВычетов.ФизическоеЛицо,
		|	МесяцыОсобыхВычетов.КодДохода,
		|	МесяцыОсобыхВычетов.Месяц
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МесяцыОсобыхВычетов.ФизическоеЛицо,
		|	МесяцыОсобыхВычетов.КодДохода,
		|	МесяцыОсобыхВычетов.Месяц,
		|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль
		|ПОМЕСТИТЬ ВТДоходыИзСтрокБезВычетов
		|ИЗ
		|	ВТОсобыеМесяцы КАК МесяцыОсобыхВычетов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоМесяцам КАК Доходы
		|		ПО МесяцыОсобыхВычетов.ФизическоеЛицо = Доходы.ФизическоеЛицо
		|			И МесяцыОсобыхВычетов.КодДохода = Доходы.КодДохода
		|			И МесяцыОсобыхВычетов.Месяц = Доходы.Месяц
		|ГДЕ
		|	Доходы.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	МесяцыОсобыхВычетов.ФизическоеЛицо,
		|	МесяцыОсобыхВычетов.КодДохода,
		|	МесяцыОсобыхВычетов.Месяц,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Доходы.Месяц КАК МесяцНалоговогоПериода,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	Доходы.КодДохода,
		|	Доходы.КодДоходаКодДляОтчетности,
		|	Доходы.КодВычета КАК КодВычета,
		|	Доходы.СуммаДохода + ВЫБОР
		|		КОГДА СтрокиСУказаннымВычетом.ФизическоеЛицо ЕСТЬ NULL 
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ДоходыИзСтрокБезВычетов.СуммаДохода, 0)
		|	КОНЕЦ КАК СуммаДохода,
		|	Доходы.СуммаВычета КАК СуммаВычета,
		|	Доходы.ФизическоеЛицо КАК Сотрудник,
		|	Доходы.ВключатьВДекларациюПоНалогуНаПрибыль
		|ИЗ
		|	ВТДоходыПоМесяцам КАК Доходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОсобыеМесяцы КАК СтрокиБезКодаВычета
		|		ПО Доходы.ФизическоеЛицо = СтрокиБезКодаВычета.ФизическоеЛицо
		|			И Доходы.КодДохода = СтрокиБезКодаВычета.КодДохода
		|			И Доходы.Месяц = СтрокиБезКодаВычета.Месяц
		|			И (Доходы.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыИзСтрокБезВычетов КАК ДоходыИзСтрокБезВычетов
		|		ПО Доходы.ФизическоеЛицо = ДоходыИзСтрокБезВычетов.ФизическоеЛицо
		|			И Доходы.Месяц = ДоходыИзСтрокБезВычетов.Месяц
		|			И Доходы.КодДохода = ДоходыИзСтрокБезВычетов.КодДохода
		|			И Доходы.ВключатьВДекларациюПоНалогуНаПрибыль = ДоходыИзСтрокБезВычетов.ВключатьВДекларациюПоНалогуНаПрибыль
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиСУказаннымВычетом КАК СтрокиСУказаннымВычетом
		|		ПО Доходы.ФизическоеЛицо = СтрокиСУказаннымВычетом.ФизическоеЛицо
		|			И Доходы.Месяц = СтрокиСУказаннымВычетом.Месяц
		|			И Доходы.КодДохода = СтрокиСУказаннымВычетом.КодДохода
		|			И Доходы.КодВычета = СтрокиСУказаннымВычетом.КодВычета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО Доходы.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И Доходы.КодДоходаСтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И (КОНЕЦПЕРИОДА(Доходы.МесяцНалоговогоПериода, ГОД) = СтавкаНДФЛПоСтавкеРезидента.Период)
		|			И Доходы.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
		|ГДЕ
		|	СтрокиБезКодаВычета.ФизическоеЛицо ЕСТЬ NULL 
		|
		|УПОРЯДОЧИТЬ ПО
		|	МесяцНалоговогоПериода,
		|	Доходы.КодДоходаКодДляОтчетности
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вычеты.КодВычета,
		|	Вычеты.КодВычетаГруппаВычета КАК ГруппаВычета,
		|	СУММА(Вычеты.СуммаВычета) КАК СуммаВычета,
		|	Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2011Года + Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2010Года КАК КодВычетаКод,
		|	Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	Вычеты.ФизическоеЛицо КАК Сотрудник
		|ИЗ
		|	ВТВычеты КАК Вычеты
		|ГДЕ
		|	Вычеты.КодВычета ЕСТЬ НЕ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	Вычеты.КодВычета,
		|	Вычеты.КодВычетаГруппаВычета,
		|	Вычеты.ФизическоеЛицо,
		|	Вычеты.ВключатьВДекларациюПоНалогуНаПрибыль,
		|	Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2011Года + Вычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2010Года
		|
		|ИМЕЮЩИЕ
		|	СУММА(Вычеты.СуммаВычета) <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодВычетаКод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СотрудникиОрганизаций.ФизическоеЛицо КАК Сотрудник,
		|	ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) КАК Ставка,
		|	ИтогиДоходов.ОбщаяСуммаДохода,
		|	ИтогиДоходов.ОблагаемаяСуммаДохода,
		|	Налоги.НачисленоЗаТекущийГод КАК Исчислено,
		|	Налоги.УдержаноЗаТекущийГод - Налоги.ВозвращеноЗаТекущийГод КАК Удержано,
		|	ЕСТЬNULL(ПеречисленоНДФЛ.Сумма, 0) КАК Перечислено,
		|	ВЫБОР
		|		КОГДА Налоги.НачисленоЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод - Налоги.ПереданоНаВзысканиеЗаТекущийГод > 0
		|			ТОГДА Налоги.НачисленоЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод - Налоги.ПереданоНаВзысканиеЗаТекущийГод
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Задолженность,
		|	ВЫБОР
		|		КОГДА Налоги.НачисленоЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод - Налоги.ПереданоНаВзысканиеЗаТекущийГод < 0
		|			ТОГДА -(Налоги.НачисленоЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод - Налоги.ПереданоНаВзысканиеЗаТекущийГод)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИзлишнеУдержано,
		|	НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль
		|ИЗ
		|	ВТФизлица КАК СотрудникиОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ Перечисление.НДФЛСтавки КАК Ставки
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ИСТИНА КАК ВключатьВДекларациюПоНалогуНаПрибыль
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ЛОЖЬ) КАК НалогНаПрибыль
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтогиДоходов КАК ИтогиДоходов
		|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ИтогиДоходов.ФизическоеЛицо
		|			И (ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) = ИтогиДоходов.Ставка)
		|			И (НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль = ИтогиДоходов.ВключатьВДекларациюПоНалогуНаПрибыль)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалоги КАК Налоги
		|		ПО СотрудникиОрганизаций.ФизическоеЛицо = Налоги.ФизическоеЛицо
		|			И (ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) = Налоги.Ставка)
		|			И (НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль = Налоги.ВключатьВДекларациюПоНалогуНаПрибыль)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПеречисленоНДФЛ КАК ПеречисленоНДФЛ
		|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ПеречисленоНДФЛ.ФизическоеЛицо
		|			И (ЕСТЬNULL(Ставки.Ссылка, ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)) = ПеречисленоНДФЛ.Ставка)
		|			И (НалогНаПрибыль.ВключатьВДекларациюПоНалогуНаПрибыль = ПеречисленоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль)
		|ГДЕ
		|	(ИтогиДоходов.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|				И (ИтогиДоходов.ОбщаяСуммаДохода <> 0
		|					ИЛИ ИтогиДоходов.ОблагаемаяСуммаДохода <> 0)
		|			ИЛИ Налоги.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|				И (Налоги.НачисленоЗаТекущийГод <> 0
		|					ИЛИ Налоги.НачисленоЗаТекущийГод - Налоги.УдержаноЗаТекущийГод + Налоги.ВозвращеноЗаТекущийГод - Налоги.ПереданоНаВзысканиеЗаТекущийГод <> 0)
		|			ИЛИ ЕСТЬNULL(ПеречисленоНДФЛ.Сумма, 0) <> 0)";		
	КонецЕсли;
	
	Результаты = Запрос.ВыполнитьПакет();
	ВсегоЗапросов = Результаты.Количество();
	
	Возврат Новый Структура("Доходы, Вычеты, Налоги", 
						Результаты[ВсегоЗапросов - 3].Выгрузить(), 
						Результаты[ВсегоЗапросов - 2].Выгрузить(), 
						Результаты[ВсегоЗапросов - 1].Выгрузить());
	
КонецФункции

// Предназначена для расчета НДФЛ по записанным в учете данным.
// Параметры:
//      Регистратор - ДокументСсылка - регистратор для которого выполняется расчет НДФЛ.
//		Организация - СправочникСсылка.Организации -
//		МесяцРасчета - дата -
//      МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит вр. таблицу со списком людей, по которым выполняется 
//								расчет НДФЛ
//      	ВТФизическиеЛица 
//				ФизическоеЛицо
//		ПервыйМесяцНалоговогоПериода - дата -
//		ПоследнийМесяцНалоговогоПериода - дата -
//		ИсключатьДоходыРегистратора - булево - 
//		ОкончательныйРасчет - булево - признак того, надо ли при расчете учитывать все зарегистрированные доходы
//		                               (соответствует значению Истина).
//		ДатаУдержанияИсчисленногоНалога - дата - дата предполагаемого удержания налога, который был исчислен по
//		                                         Регистратору.
//
//  Возвращаемое значение - таблица значений с колонками
//			ФизическоеЛицо
//			МесяцНалоговогоПериода.
//			Подразделение
//			КатегорияДохода
//			КодВычетаЛичный
//			ПримененныйВычетЛичный
//			ПримененныйВычетНаДетей
//			ПримененныйВычетНаДетейДвойной
//			ПримененныйВычетНаДетейДвойнойВторой
//			ПримененныйВычетНаТретьегоРебенка
//			ПримененныйВычетНаТретьегоРебенкаДвойной
//			ПримененныйВычетНаТретьегоРебенкаДвойнойВторой
//			ПримененныйВычетНаВторогоРебенка
//			ПримененныйВычетНаВторогоРебенкаДвойной
//			ПримененныйВычетНаВторогоРебенкаДвойнойВторой
//			ПримененныйВычетНаДетейИнвалидов
//			ПримененныйВычетНаДетейИнвалидовДвойной
//			ПримененныйВычетНаДетейИнвалидовДвойнойВторой
//			ПримененныйВычетНаДетейОпекунов
//			ПримененныйВычетНаДетейДвойнойОпекунов
//			ПримененныйВычетНаДетейДвойнойВторойОпекунов
//			ПримененныйВычетНаТретьегоРебенкаОпекунов
//			ПримененныйВычетНаТретьегоРебенкаДвойнойОпекунов
//			ПримененныйВычетНаТретьегоРебенкаДвойнойВторойОпекунов
//			ПримененныйВычетНаВторогоРебенкаОпекунов
//			ПримененныйВычетНаВторогоРебенкаДвойнойОпекунов
//			ПримененныйВычетНаВторогоРебенкаДвойнойВторойОпекунов
//			ПримененныйВычетНаДетейИнвалидовОпекунов
//			ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов
//			ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов
//			НалогПоСтавке13
//			ЗачтеноАвансовыхПлатежейПоСтавке13
//			ПримененныйВычетИмущественныйРасходы
//			ПримененныйВычетИмущественныйПроцентыПоКредитам
//			ПримененныйВычетИмущественныйПроцентыПриПерекредитовании, ....
//
Функция РассчитатьНалогПоОсновнойСтавке(Регистратор, Организация, МесяцРасчета, МенеджерВременныхТаблиц, Знач ПервыйМесяцНалоговогоПериода = Неопределено, Знач ПоследнийМесяцНалоговогоПериода = Неопределено, ИсключатьДоходыРегистратора = Истина, ОкончательныйРасчет = Истина, ДатаУдержанияИсчисленногоНалога = Неопределено) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадры.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоМесяцаРасчета",НачалоМесяца(МесяцРасчета));
	Запрос.УстановитьПараметр("КонецМесяцаРасчета",КонецМесяца(МесяцРасчета));
	Запрос.УстановитьПараметр("НачалоГодаРасчета",НачалоГода(МесяцРасчета));
	Запрос.УстановитьПараметр("ИсключаемыйРегистратор", ?(ИсключатьДоходыРегистратора, Регистратор, Неопределено));
	Запрос.УстановитьПараметр("ОкончательныйРасчет", ОкончательныйРасчет);
	Запрос.УстановитьПараметр("ДатаЗакона285ФЗ", УчетНДФЛ.ДатаЗакона285ФЗ());
	ДатаИзмененияИсчисленияДляИностранцев = УчетНДФЛ.ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев();
	Запрос.УстановитьПараметр("ДатаИзмененияИсчисленияДляИностранцев", ДатаИзмененияИсчисленияДляИностранцев);
	Запрос.УстановитьПараметр("Код3010", УчетНДФЛПовтИсп.Доход3010());
	
	УдаляемыеВТ = Новый Массив;
	
	КодыВычетовРезидентов = Новый Массив;
	КодыВычетовРезидентов.Добавить(Справочники.ВидыВычетовНДФЛ.Код403);
	КодыВычетовРезидентов.Добавить(Справочники.ВидыВычетовНДФЛ.Код404);
	КодыВычетовРезидентов.Добавить(Справочники.ВидыВычетовНДФЛ.Код405);
	Запрос.УстановитьПараметр("КодыВычетовРезидентов", КодыВычетовРезидентов);
	
	ЭтоРасчетПоДоходамТекущегоМесяца = ПервыйМесяцНалоговогоПериода = Неопределено Или ПоследнийМесяцНалоговогоПериода = Неопределено;
	
	ЗарплатаКадры.СоздатьПустуюВТ(МенеджерВременныхТаблиц, "РегистрНакопления.СведенияОДоходахНДФЛ");
	ЗарплатаКадры.СоздатьПустуюВТ(МенеджерВременныхТаблиц, "РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ");
	ЗарплатаКадры.СоздатьПустуюВТ(МенеджерВременныхТаблиц, "РегистрНакопления.ИмущественныеВычетыНДФЛ");
	ЗарплатаКадры.СоздатьПустуюВТ(МенеджерВременныхТаблиц, "РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ");
	
	// Если мы рассчитываем налог только по одному физ.лицу, будем использовать условие ФизическоеЛицо = &ФизическоеЛицо
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 2
	|	ФизическиеЛица.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	ВТФизическиеЛица КАК ФизическиеЛица";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		Запрос.УстановитьПараметр("ФизическоеЛицо", Выборка.ФизическоеЛицо);
		ТекстУсловияФизическоеЛицо = "ФизическоеЛицо = &ФизическоеЛицо";
	Иначе
		ТекстУсловияФизическоеЛицо = 
		"ФизическоеЛицо В
		|	(ВЫБРАТЬ
		|		СписокСотрудников.ФизическоеЛицо
		|	ИЗ
		|		ВТФизическиеЛица КАК СписокСотрудников)";
	КонецЕсли;
	
	Если ЭтоРасчетПоДоходамТекущегоМесяца Тогда
		Запрос.УстановитьПараметр("МаксимальнаяДата", ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата());
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПериодыДохода.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ПериодыДохода.НеПодходит
		|				ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|			ИНАЧЕ НАЧАЛОПЕРИОДА(ПериодыДохода.Период, МЕСЯЦ)
		|		КОНЕЦ) КАК ПериодМакс,
		|	МИНИМУМ(ВЫБОР
		|			КОГДА ПериодыДохода.НеПодходит
		|				ТОГДА &МаксимальнаяДата
		|			КОГДА НАЧАЛОПЕРИОДА(ПериодыДохода.ПериодРегистрации, МЕСЯЦ) = &НачалоМесяцаРасчета
		|				ТОГДА НАЧАЛОПЕРИОДА(ПериодыДохода.Период, ГОД)
		|			ИНАЧЕ &НачалоГодаРасчета
		|		КОНЕЦ) КАК ПериодМин,
		|	МИНИМУМ(ВЫБОР
		|			КОГДА ПериодыДохода.ДоходМежрасчетногоПериода
		|					И ПериодыДохода.ПериодРегистрации >= &НачалоМесяцаРасчета
		|				ТОГДА ПериодыДохода.Период
		|			ИНАЧЕ &МаксимальнаяДата
		|		КОНЕЦ) КАК ПервыйМесяцНалоговогоПериода,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ПериодыДохода.ДоходМежрасчетногоПериода
		|					И ПериодыДохода.ПериодРегистрации >= &НачалоМесяцаРасчета
		|				ТОГДА ПериодыДохода.Период
		|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|		КОНЕЦ) КАК ПоследнийМесяцНалоговогоПериода
		|ПОМЕСТИТЬ ВТПериодыПоФизическимЛицам
		|ИЗ
		|	(ВЫБРАТЬ
		|		Доходы.МесяцНалоговогоПериода КАК Период,
		|		Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
		|		Доходы.Период КАК ПериодРегистрации,
		|		Доходы.ДоходМежрасчетногоПериода КАК ДоходМежрасчетногоПериода,
		|		ВЫБОР
		|			КОГДА Доходы.КодДохода.НеОблагаетсяУНалоговогоАгента
		|					ИЛИ Доходы.Регистратор = &ИсключаемыйРегистратор
		|					ИЛИ Доходы.КодДохода.СтавкаНалогообложенияРезидента <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|					ИЛИ НЕ &ОкончательныйРасчетДоходы
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ КАК НеПодходит
		|	ИЗ
		|		РегистрНакопления.СведенияОДоходахНДФЛ КАК Доходы
		|	ГДЕ
		|		Доходы.Период МЕЖДУ &НачалоГодаРасчета И &КонецМесяцаРасчета
		|		И Доходы.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|		И &УсловиеФизическоеЛицо
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Доходы.МесяцНалоговогоПериода,
		|		Доходы.ФизическоеЛицо,
		|		Доходы.Период,
		|		Доходы.ДоходМежрасчетногоПериода,
		|		ВЫБОР
		|			КОГДА Доходы.КодДохода.НеОблагаетсяУНалоговогоАгента
		|					ИЛИ Доходы.Регистратор = &ИсключаемыйРегистратор
		|					ИЛИ Доходы.КодДохода.СтавкаНалогообложенияРезидента <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|					ИЛИ НЕ &ОкончательныйРасчетДоходы
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ
		|	ИЗ
		|		ВТРегистрНакопления_СведенияОДоходахНДФЛ КАК Доходы
		|	ГДЕ
		|		Доходы.Период МЕЖДУ &НачалоГодаРасчета И &КонецМесяцаРасчета
		|		И Доходы.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|		И Доходы.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|		И &УсловиеФизическоеЛицо) КАК ПериодыДохода
		|
		|СГРУППИРОВАТЬ ПО
		|	ПериодыДохода.ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(МесяцыНалоговогоПериода.ПоследнийМесяцНалоговогоПериода) КАК ПоследнийМесяцНалоговогоПериода,
		|	МИНИМУМ(МесяцыНалоговогоПериода.ПервыйМесяцНалоговогоПериода) КАК ПервыйМесяцНалоговогоПериода
		|ИЗ
		|	ВТПериодыПоФизическимЛицам КАК МесяцыНалоговогоПериода
		|ГДЕ
		|	МесяцыНалоговогоПериода.ПоследнийМесяцНалоговогоПериода <> ДАТАВРЕМЯ(1, 1, 1)";
		Если ОкончательныйРасчет Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПериодыДохода.ДоходМежрасчетногоПериода", "ИСТИНА");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОкончательныйРасчетДоходы", "Истина");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОкончательныйРасчетДоходы","(Доходы.ДоходМежрасчетногоПериода ИЛИ Доходы.Период < &НачалоМесяцаРасчета)");
		КонецЕсли;
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеФизическоеЛицо", ТекстУсловияФизическоеЛицо);
		
		Выборка = Запрос.Выполнить().Выбрать();
		УдаляемыеВТ.Добавить("ВТПериодыПоФизическимЛицам");
		
		Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.ПоследнийМесяцНалоговогоПериода) Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.ПоследнийМесяцНалоговогоПериода);
			ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.ПервыйМесяцНалоговогоПериода);
		Иначе
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(МесяцРасчета);
			ПервыйМесяцНалоговогоПериода = НачалоМесяца(МесяцРасчета);
		КонецЕсли;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("КонецПериодаРасчета", КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("НачалоГодаПериодаРасчета", НачалоГода(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("КонецГодаПериодаРасчета", КонецГода(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("НачалоПредшествующегоГода", ДобавитьМесяц(НачалоГода(ПервыйМесяцНалоговогоПериода), -12));
	
	// Таблица ВТДатыПоМесяцам: список дат налоговых периодов, в которых рассчитывается налог.
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(Запрос.МенеджерВременныхТаблиц, НачалоГода(ПервыйМесяцНалоговогоПериода), НачалоМесяца(ПоследнийМесяцНалоговогоПериода),,,"ВТДатыПоМесяцам");
	УдаляемыеВТ.Добавить("ВТДатыПоМесяцам");
	
	Если ЭтоРасчетПоДоходамТекущегоМесяца Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПериодыДохода.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Месяцы.Период КАК МесяцНалоговогоПериода,
		|	НАЧАЛОПЕРИОДА(Месяцы.Период, ГОД) КАК НачалоГодаНалоговогоПериода,
		|	КОНЕЦПЕРИОДА(Месяцы.Период, ГОД) КАК КонецГодаНалоговогоПериода,
		|	МАКСИМУМ(ЕСТЬNULL(РезидентствоФизлиц.РезидентРФНаКонецМесяца, ИСТИНА)
		|			ИЛИ ЕСТЬNULL(РезидентствоФизлиц.РезидентРФНаКонецГода, ИСТИНА)) КАК Резидент,
		|	МАКСИМУМ(ЕСТЬNULL(РезидентствоФизлиц.ПрименяетсяСтавкаПункта1Статьи224НК, ИСТИНА)) КАК ПрименяетсяСтавкаПункта1Статьи224НК
		|ПОМЕСТИТЬ ВТПериодыФизлиц
		|ИЗ
		|	ВТПериодыПоФизическимЛицам КАК ПериодыДохода
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДатыПоМесяцам КАК Месяцы
		|		ПО (Месяцы.Период МЕЖДУ ПериодыДохода.ПериодМин И ПериодыДохода.ПериодМакс)
		|			И (ПериодыДохода.ПериодМин <> ДАТАВРЕМЯ(1, 1, 1))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный КАК РезидентствоФизлиц
		|		ПО ПериодыДохода.ФизическоеЛицо = РезидентствоФизлиц.ФизическоеЛицо
		|			И (Месяцы.Период МЕЖДУ РезидентствоФизлиц.ДатаНачала И РезидентствоФизлиц.ДатаОкончания)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПериодыДохода.ФизическоеЛицо,
		|	Месяцы.Период,
		|	НАЧАЛОПЕРИОДА(Месяцы.Период, ГОД),
		|	КОНЕЦПЕРИОДА(Месяцы.Период, ГОД)";
		
	Иначе 
		// Расчет за конкретные месяцы налогового периода.
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Работники.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Месяцы.Период КАК МесяцНалоговогоПериода,
		|	НАЧАЛОПЕРИОДА(Месяцы.Период, ГОД) КАК НачалоГодаНалоговогоПериода,
		|	КОНЕЦПЕРИОДА(Месяцы.Период, ГОД) КАК КонецГодаНалоговогоПериода,
		|	МАКСИМУМ(ЕСТЬNULL(РезидентствоФизлиц.РезидентРФНаКонецМесяца, ИСТИНА)
		|			ИЛИ ЕСТЬNULL(РезидентствоФизлиц.РезидентРФНаКонецГода, ИСТИНА)) КАК Резидент,
		|	МАКСИМУМ(ЕСТЬNULL(РезидентствоФизлиц.ПрименяетсяСтавкаПункта1Статьи224НК, ИСТИНА)) КАК ПрименяетсяСтавкаПункта1Статьи224НК
		|ПОМЕСТИТЬ ВТПериодыФизлиц
		|ИЗ
		|	ВТФизическиеЛица КАК Работники
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыПоМесяцам КАК Месяцы
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный КАК РезидентствоФизлиц
		|		ПО Работники.ФизическоеЛицо = РезидентствоФизлиц.ФизическоеЛицо
		|			И (Месяцы.Период МЕЖДУ РезидентствоФизлиц.ДатаНачала И РезидентствоФизлиц.ДатаОкончания)
		|
		|СГРУППИРОВАТЬ ПО
		|	Работники.ФизическоеЛицо,
		|	Месяцы.Период,
		|	НАЧАЛОПЕРИОДА(Месяцы.Период, ГОД),
		|	КОНЕЦПЕРИОДА(Месяцы.Период, ГОД)";
	КонецЕсли;
	Запрос.Выполнить();
	УдаляемыеВТ.Добавить("ВТПериодыФизлиц");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Обороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Обороты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Обороты.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	Обороты.Регистратор КАК Регистратор,
	|	Обороты.Подразделение КАК Подразделение,
	|	Обороты.Период КАК Период,
	|	Обороты.СтавкаНалогообложения КАК СтавкаНалогообложения,
	|	Обороты.ДоходМежрасчетногоПериода КАК ДоходМежрасчетногоПериода,
	|	Обороты.ИсточникДоходаЗаПределамиРФ КАК ИсточникДоходаЗаПределамиРФ,
	|	Обороты.КодВычета.НеПредоставляетсяНерезидентам КАК НеПредоставляетсяНерезидентам,
	|	Обороты.КодВычета КАК КодВычета,
	|	Обороты.КодДохода КАК КодДохода,
	|	&Сторно КАК Сторно,
	|	Обороты.КатегорияДохода КАК КатегорияДохода,
	|	Обороты.СуммаДохода КАК СуммаДохода,
	|	Обороты.СуммаВычета КАК СуммаВычета
	|ПОМЕСТИТЬ ВТСведенияОДоходахНДФЛ
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК Обороты
	|ГДЕ
	|	Обороты.Период МЕЖДУ &НачалоПредшествующегоГода И &КонецМесяцаРасчета
	|	И Обороты.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И Обороты.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	|	И Обороты.Регистратор <> &ИсключаемыйРегистратор
	|	И &УсловиеФизическоеЛицо
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Обороты.ФизическоеЛицо,
	|	Обороты.МесяцНалоговогоПериода,
	|	Обороты.ДатаПолученияДохода,
	|	&Регистратор,
	|	Обороты.Подразделение,
	|	Обороты.Период,
	|	Обороты.СтавкаНалогообложения,
	|	Обороты.ДоходМежрасчетногоПериода,
	|	Обороты.ИсточникДоходаЗаПределамиРФ,
	|	Обороты.КодВычета.НеПредоставляетсяНерезидентам,
	|	Обороты.КодВычета,
	|	Обороты.КодДохода,
	|	&Сторно,
	|	Обороты.КатегорияДохода,
	|	Обороты.СуммаДохода,
	|	Обороты.СуммаВычета
	|ИЗ
	|	ВТРегистрНакопления_СведенияОДоходахНДФЛ КАК Обороты
	|ГДЕ
	|	Обороты.Период МЕЖДУ &НачалоПредшествующегоГода И &КонецМесяцаРасчета
	|	И Обороты.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И Обороты.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	|	И &УсловиеФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК Период,
	|	СведенияОДоходахНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК ДатаПолученияДохода
	|ПОМЕСТИТЬ ВТСтрокиУчета
	|ИЗ
	|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода >= &ДатаИзмененияИсчисленияДляИностранцев";
	Если Метаданные.РегистрыНакопления.СведенияОДоходахНДФЛ.Реквизиты.Найти("Сторно") = Неопределено Тогда
		Запрос.УстановитьПараметр("Сторно", Ложь);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Сторно", "Обороты.Сторно");
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеФизическоеЛицо", ТекстУсловияФизическоеЛицо);
	Запрос.Выполнить();
	УдаляемыеВТ.Добавить("ВТСведенияОДоходахНДФЛ");
	УдаляемыеВТ.Добавить("ВТСтрокиУчета");
	
	СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТСтрокиУчета", "УчитыватьИзмененияСтатусаДляРасчета");
	УдаляемыеВТ.Добавить("ВТСтавкаНДФЛПоСтавкеРезидента");
	
	Запрос.УстановитьПараметр("ПериодСрезаПравНаВычеты",  НачалоМесяца(Макс(МесяцРасчета, ПоследнийМесяцНалоговогоПериода)));
	
	ОсобенностиУчетаВычетов = Перечисления.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетнаяПолитикаПоНДФЛ.ОсобенностиИсчисленияНДФЛ КАК ОсобенностиИсчисленияНДФЛ
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаПоНДФЛ КАК УчетнаяПолитикаПоНДФЛ
	|ГДЕ
	|	УчетнаяПолитикаПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ОсобенностиУчетаВычетов = Выборка.ОсобенностиИсчисленияНДФЛ;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("КонецПериодаИмущественныхВычетов", Макс(КонецМесяца(МесяцРасчета), КонецМесяца(ПоследнийМесяцНалоговогоПериода)));
	
	ПакетЗапросов = Новый Массив;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Вычеты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Вычеты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	НАЧАЛОПЕРИОДА(ВЫБОР
	|			КОГДА Вычеты.МесяцПериодаПредоставленияВычета = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА Вычеты.МесяцНалоговогоПериода
	|			ИНАЧЕ Вычеты.МесяцПериодаПредоставленияВычета
	|		КОНЕЦ, МЕСЯЦ) КАК МесяцПериодаПредоставленияВычета,
	|	Вычеты.КодВычета КАК КодВычета,
	|	Вычеты.Подразделение КАК Подразделение,
	|	СУММА(Вычеты.СуммаОборот) КАК СуммаОборот
	|ПОМЕСТИТЬ ВТПредоставленныеСтандартныеИСоциальныеВычеты
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВычетыБД.ФизическоеЛицо КАК ФизическоеЛицо,
	|		НАЧАЛОПЕРИОДА(ВычетыБД.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|		ВычетыБД.МесяцПериодаПредоставленияВычета КАК МесяцПериодаПредоставленияВычета,
	|		ВычетыБД.КодВычета КАК КодВычета,
	|		ВычетыБД.Подразделение КАК Подразделение,
	|		ВычетыБД.Сумма КАК СуммаОборот
	|	ИЗ
	|		РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ВычетыБД
	|	ГДЕ
	|		ВычетыБД.Период МЕЖДУ &НачалоПредшествующегоГода И &КонецМесяцаРасчета
	|		И ВычетыБД.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|		И &УсловиеФизическоеЛицо
	|		И (ВычетыБД.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	|				ИЛИ ВЫБОР
	|					КОГДА ВычетыБД.МесяцПериодаПредоставленияВычета = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА ВычетыБД.МесяцНалоговогоПериода
	|					ИНАЧЕ ВычетыБД.МесяцПериодаПредоставленияВычета
	|				КОНЕЦ МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|		И ВычетыБД.Регистратор <> &Регистратор
	|		И &ОкончательныйРасчетВычеты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВычетыВТ.ФизическоеЛицо,
	|		НАЧАЛОПЕРИОДА(ВычетыВТ.МесяцНалоговогоПериода, МЕСЯЦ),
	|		ВычетыВТ.МесяцПериодаПредоставленияВычета,
	|		ВычетыВТ.КодВычета,
	|		ВычетыВТ.Подразделение,
	|		ВычетыВТ.Сумма
	|	ИЗ
	|		ВТРегистрНакопления_ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ВычетыВТ
	|	ГДЕ
	|		ВычетыВТ.Период МЕЖДУ &НачалоПредшествующегоГода И &КонецМесяцаРасчета
	|		И ВычетыВТ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|		И &УсловиеФизическоеЛицо
	|		И ВычетыВТ.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	|		И ВычетыВТ.Регистратор <> &Регистратор
	|		И &ОкончательныйРасчетВычеты) КАК Вычеты
	|
	|СГРУППИРОВАТЬ ПО
	|	Вычеты.ФизическоеЛицо,
	|	Вычеты.МесяцНалоговогоПериода,
	|	Вычеты.КодВычета,
	|	Вычеты.Подразделение,
	|	НАЧАЛОПЕРИОДА(ВЫБОР
	|			КОГДА Вычеты.МесяцПериодаПредоставленияВычета = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА Вычеты.МесяцНалоговогоПериода
	|			ИНАЧЕ Вычеты.МесяцПериодаПредоставленияВычета
	|		КОНЕЦ, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(ВЫБОР
	|			КОГДА Периоды.Резидент
	|				ТОГДА ЕСТЬNULL(ПредоставленныеВычетыФизЛиц.СуммаОборот, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаОборот
	|ПОМЕСТИТЬ ВТСоциальныеВычетыПомесячно
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредоставленныеСтандартныеИСоциальныеВычеты КАК ПредоставленныеВычетыФизЛиц
	|		ПО Периоды.ФизическоеЛицо = ПредоставленныеВычетыФизЛиц.ФизическоеЛицо
	|			И (ПредоставленныеВычетыФизЛиц.КодВычета.ГруппаВычета = ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Социальные))
	|			И Периоды.МесяцНалоговогоПериода = ПредоставленныеВычетыФизЛиц.МесяцНалоговогоПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Обороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(Обороты.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	Обороты.СтавкаНалогообложения КАК СтавкаНалогообложения,
	|	Обороты.ИсточникДоходаЗаПределамиРФ КАК ИсточникДоходаЗаПределамиРФ,
	|	Обороты.КодВычета КАК КодВычета,
	|	Обороты.НеПредоставляетсяНерезидентам КАК НеПредоставляетсяНерезидентам,
	|	Обороты.СуммаДохода КАК СуммаДоходаОборот,
	|	Обороты.СуммаВычета КАК СуммаВычетаОборот,
	|	Обороты.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	Обороты.КатегорияДохода КАК КатегорияДохода,
	|	Обороты.КодДохода КАК КодДохода,
	|	Обороты.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	Обороты.Подразделение КАК Подразделение,
	|	Обороты.Период КАК Период,
	|	Обороты.Регистратор КАК ДокументОснование,
	|	Обороты.ДоходМежрасчетногоПериода КАК ДоходМежрасчетногоПериода,
	|	Обороты.Сторно КАК Сторно
	|ПОМЕСТИТЬ ВТДанныеУчета
	|ИЗ
	|	ВТСведенияОДоходахНДФЛ КАК Обороты
	|ГДЕ
	|	Обороты.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|	И НЕ Обороты.КодДохода.НеОблагаетсяУНалоговогоАгента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ),
	|	СведенияОДоходахНДФЛ.СтавкаНалогообложения,
	|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ,
	|	СведенияОДоходахНДФЛ.КодВычета,
	|	СведенияОДоходахНДФЛ.НеПредоставляетсяНерезидентам,
	|	-СведенияОДоходахНДФЛ.СуммаДохода,
	|	-СведенияОДоходахНДФЛ.СуммаВычета,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
	|	СведенияОДоходахНДФЛ.КатегорияДохода,
	|	СведенияОДоходахНДФЛ.КодДохода,
	|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента,
	|	СведенияОДоходахНДФЛ.Подразделение,
	|	СведенияОДоходахНДФЛ.Период,
	|	СведенияОДоходахНДФЛ.Регистратор,
	|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода,
	|	СведенияОДоходахНДФЛ.Сторно
	|ИЗ
	|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	НЕ &ОкончательныйРасчет
	|	И НЕ СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода
	|	И СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|	И НЕ СведенияОДоходахНДФЛ.КодДохода.НеОблагаетсяУНалоговогоАгента
	|	И СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета";
	
	ПакетЗапросов.Добавить(ТекстЗапроса);
	УдаляемыеВТ.Добавить("ВТПредоставленныеСтандартныеИСоциальныеВычеты");
	УдаляемыеВТ.Добавить("ВТСоциальныеВычетыПомесячно");
	УдаляемыеВТ.Добавить("ВТДанныеУчета");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеУчета.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеУчета.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ДанныеУчета.СтавкаНалогообложения КАК СтавкаНалогообложения,
	|	ДанныеУчета.ИсточникДоходаЗаПределамиРФ КАК ИсточникДоходаЗаПределамиРФ,
	|	ДанныеУчета.КодВычета КАК КодВычета,
	|	ДанныеУчета.НеПредоставляетсяНерезидентам КАК НеПредоставляетсяНерезидентам,
	|	СУММА(ДанныеУчета.СуммаДоходаОборот) КАК СуммаДоходаОборот,
	|	СУММА(ДанныеУчета.СуммаВычетаОборот) КАК СуммаВычетаОборот
	|ПОМЕСТИТЬ ВТДоходыФизлиц
	|ИЗ
	|	ВТДанныеУчета КАК ДанныеУчета
	|ГДЕ
	|	ДанныеУчета.МесяцНалоговогоПериода < &ДатаИзмененияИсчисленияДляИностранцев
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеУчета.ФизическоеЛицо,
	|	ДанныеУчета.МесяцНалоговогоПериода,
	|	ДанныеУчета.СтавкаНалогообложения,
	|	ДанныеУчета.ИсточникДоходаЗаПределамиРФ,
	|	ДанныеУчета.НеПредоставляетсяНерезидентам,
	|	ДанныеУчета.КодВычета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Периоды.Резидент КАК Резидент,
	|	ВЫБОР
	|		КОГДА Периоды.Резидент
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|		КОГДА Обороты.СтавкаНалогообложения = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|		ИНАЧЕ Обороты.СтавкаНалогообложения
	|	КОНЕЦ КАК СтавкаНалогообложенияНеРезидента,
	|	ЕСТЬNULL(Обороты.СуммаДоходаОборот, 0) - ВЫБОР
	|		КОГДА Периоды.Резидент
	|			ТОГДА ЕСТЬNULL(Обороты.СуммаВычетаОборот, 0)
	|		КОГДА Обороты.НеПредоставляетсяНерезидентам
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(Обороты.СуммаВычетаОборот, 0)
	|	КОНЕЦ КАК ДоходыБезВычетов
	|ПОМЕСТИТЬ ВТДоходыСУчетомВычетовКДоходам
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыФизлиц КАК Обороты
	|		ПО Периоды.ФизическоеЛицо = Обороты.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = Обороты.МесяцНалоговогоПериода
	|			И (Периоды.Резидент
	|				ИЛИ НЕ Обороты.ИсточникДоходаЗаПределамиРФ)
	|ГДЕ
	|	Периоды.МесяцНалоговогоПериода < &ДатаИзмененияИсчисленияДляИностранцев";
	
	Если ПервыйМесяцНалоговогоПериода < Запрос.Параметры.ДатаИзмененияИсчисленияДляИностранцев Тогда
		ПакетЗапросов.Добавить(ТекстЗапроса);
		УдаляемыеВТ.Добавить("ВТДоходыФизлиц");
		УдаляемыеВТ.Добавить("ВТДоходыСУчетомВычетовКДоходам");
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Обороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Обороты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Обороты.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	Обороты.КодДохода КАК КодДохода,
	|	Обороты.Сторно,
	|	Обороты.КатегорияДохода КАК КатегорияДохода,
	|	ВЫБОР
	|		КОГДА Обороты.КодДохода = &Код3010
	|				И Обороты.ДатаПолученияДохода >= ДАТАВРЕМЯ(2018, 1, 1)
	|			ТОГДА ЛОЖЬ
	|		КОГДА Обороты.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|				И СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|			ТОГДА ИСТИНА
	|		КОГДА Обороты.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|				И СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.ГражданинСтраныЕАЭС)
	|			ТОГДА ВЫБОР
	|					КОГДА Обороты.ДатаПолученияДохода < ДАТАВРЕМЯ(2018, 1, 1)
	|						ТОГДА ИСТИНА
	|					КОГДА Обороты.КатегорияДохода В (ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходВНатуральнойФормеОтТрудовойДеятельности), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходыПредыдущихРедакций))
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИсчислятьНалогНарастающимИтогом,
	|	СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом КАК СтавкаЧислом,
	|	Обороты.Подразделение КАК Подразделение,
	|	СУММА(ВЫБОР
	|			КОГДА Обороты.ИсточникДоходаЗаПределамиРФ
	|				ТОГДА ВЫБОР
	|						КОГДА СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|							ТОГДА Обороты.СуммаДоходаОборот - Обороты.СуммаВычетаОборот
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			ИНАЧЕ Обороты.СуммаДоходаОборот - ВЫБОР
	|					КОГДА СтавкаНДФЛПоСтавкеРезидента.Статус В (ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент), ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.ГражданинСтраныЕАЭС))
	|						ТОГДА Обороты.СуммаВычетаОборот
	|					КОГДА Обороты.НеПредоставляетсяНерезидентам
	|						ТОГДА 0
	|					ИНАЧЕ Обороты.СуммаВычетаОборот
	|				КОНЕЦ
	|		КОНЕЦ) КАК ДоходыБезВычетов,
	|	СУММА(Обороты.СуммаДоходаОборот) КАК ВсеДоходы,
	|	СтавкаНДФЛПоСтавкеРезидента.Статус КАК Статус,
	|	Обороты.Период КАК Период,
	|	Обороты.ДоходМежрасчетногоПериода КАК ДоходМежрасчетногоПериода,
	|	Обороты.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ВТДоходыСоСтавками
	|ИЗ
	|	ВТДанныеУчета КАК Обороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
	|		ПО Обороты.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
	|			И Обороты.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
	|			И Обороты.ДатаПолученияДохода = СтавкаНДФЛПоСтавкеРезидента.Период
	|			И Обороты.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
	|ГДЕ
	|	Обороты.ДатаПолученияДохода >= &ДатаИзмененияИсчисленияДляИностранцев
	|
	|СГРУППИРОВАТЬ ПО
	|	Обороты.ФизическоеЛицо,
	|	Обороты.МесяцНалоговогоПериода,
	|	Обороты.ДатаПолученияДохода,
	|	Обороты.КодДохода,
	|	Обороты.Сторно,
	|	Обороты.Подразделение,
	|	СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом,
	|	СтавкаНДФЛПоСтавкеРезидента.Статус,
	|	ВЫБОР
	|		КОГДА Обороты.КодДохода = &Код3010
	|				И Обороты.ДатаПолученияДохода >= ДАТАВРЕМЯ(2018, 1, 1)
	|			ТОГДА ЛОЖЬ
	|		КОГДА Обороты.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|				И СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|			ТОГДА ИСТИНА
	|		КОГДА Обороты.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|				И СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.ГражданинСтраныЕАЭС)
	|			ТОГДА ВЫБОР
	|					КОГДА Обороты.ДатаПолученияДохода < ДАТАВРЕМЯ(2018, 1, 1)
	|						ТОГДА ИСТИНА
	|					КОГДА Обороты.КатегорияДохода В (ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходВНатуральнойФормеОтТрудовойДеятельности), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходыПредыдущихРедакций))
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	Обороты.Период,
	|	Обороты.ДоходМежрасчетногоПериода,
	|	Обороты.КатегорияДохода,
	|	Обороты.ДокументОснование";
	
	ПакетЗапросов.Добавить(ТекстЗапроса);
	УдаляемыеВТ.Добавить("ВТДоходыСоСтавками");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЕСТЬNULL(СУММА(Доходы.ДоходыБезВычетов), 0) КАК ОблагаемыйДоходЗаГод,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	|					ТОГДА Доходы.ДоходыБезВычетов
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК ОблагаемыйДоходЗаМесяц
	|ПОМЕСТИТЬ ВТДоходыРезидентовНарастающимЗаГод
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК Доходы
	|		ПО (Доходы.МесяцНалоговогоПериода МЕЖДУ Периоды.НачалоГодаНалоговогоПериода И Периоды.МесяцНалоговогоПериода)
	|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	|			И (Доходы.ИсчислятьНалогНарастающимИтогом)
	|ГДЕ
	|	Периоды.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо";
	
	Если ПервыйМесяцНалоговогоПериода < Запрос.Параметры.ДатаИзмененияИсчисленияДляИностранцев Тогда
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + 
		"ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Периоды.МесяцНалоговогоПериода,
		|	Периоды.ФизическоеЛицо,
		|	ЕСТЬNULL(СУММА(Доходы.ДоходыБезВычетов), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
		|					ТОГДА Доходы.ДоходыБезВычетов
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0)
		|ИЗ
		|	ВТПериодыФизлиц КАК Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСУчетомВычетовКДоходам КАК Доходы
		|		ПО (Доходы.МесяцНалоговогоПериода МЕЖДУ Периоды.НачалоГодаНалоговогоПериода И Периоды.МесяцНалоговогоПериода)
		|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
		|			И (Периоды.Резидент)
		|ГДЕ
		|	Периоды.МесяцНалоговогоПериода < &ДатаИзмененияИсчисленияДляИностранцев
		|
		|СГРУППИРОВАТЬ ПО
		|	Периоды.МесяцНалоговогоПериода,
		|	Периоды.ФизическоеЛицо";
	КонецЕсли;
	
	ПакетЗапросов.Добавить(ТекстЗапроса);
	УдаляемыеВТ.Добавить("ВТДоходыРезидентовНарастающимЗаГод");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Периоды.НачалоГодаНалоговогоПериода КАК НачалоГодаНалоговогоПериода,
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Доходы.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	Доходы.ДоходМежрасчетногоПериода КАК ЗарегистрированоДляПромежуточногоРасчета
	|ПОМЕСТИТЬ ВТДатыПолученияДоходаДляНарастающегоДохода
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК Доходы
	|		ПО Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	|ГДЕ
	|	Периоды.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Периоды.НачалоГодаНалоговогоПериода,
	|	Периоды.МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Периоды.МесяцНалоговогоПериода, МЕСЯЦ), ДЕНЬ),
	|	ЛОЖЬ
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК Доходы
	|		ПО Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	|			И (Доходы.ДатаПолученияДохода = НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Периоды.МесяцНалоговогоПериода, МЕСЯЦ), ДЕНЬ))
	|ГДЕ
	|	Периоды.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев
	|	И Доходы.ДатаПолученияДохода ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Периоды.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	Периоды.ЗарегистрированоДляПромежуточногоРасчета КАК ЗарегистрированоДляПромежуточногоРасчета,
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	|						И Доходы.ИсчислятьНалогНарастающимИтогом
	|					ТОГДА Доходы.ДоходыБезВычетов
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК ОблагаемыйДоходЗаМесяц,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Доходы.ИсчислятьНалогНарастающимИтогом
	|					ТОГДА Доходы.ДоходыБезВычетов
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК ОблагаемыйДоходЗаГод
	|ПОМЕСТИТЬ ВТДоходыПоДатамПолученияДоходаНарастающимЗаГод
	|ИЗ
	|	ВТДатыПолученияДоходаДляНарастающегоДохода КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК Доходы
	|		ПО (Доходы.ДатаПолученияДохода >= Периоды.НачалоГодаНалоговогоПериода
	|					И Доходы.ДатаПолученияДохода < Периоды.ДатаПолученияДохода
	|				ИЛИ Доходы.ДатаПолученияДохода = Периоды.ДатаПолученияДохода
	|					И Доходы.ДоходМежрасчетногоПериода = Периоды.ЗарегистрированоДляПромежуточногоРасчета
	|				ИЛИ Доходы.ДатаПолученияДохода = Периоды.ДатаПолученияДохода
	|					И НЕ Периоды.ЗарегистрированоДляПромежуточногоРасчета)
	|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.ДатаПолученияДохода,
	|	Периоды.ЗарегистрированоДляПромежуточногоРасчета,
	|	Периоды.МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код108)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаДетей,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код110)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаДетейДвойной,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код111)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаДетейДвойнойВторой,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код116)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаТретьегоРебенка,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код120)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаТретьегоРебенкаДвойной,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код124)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаТретьегоРебенкаДвойнойВторой,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код115)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаВторогоРебенка,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код119)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаВторогоРебенкаДвойной,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код123)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаВторогоРебенкаДвойнойВторой,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код109)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаРебенкаИнвалида,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код112)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаРебенкаИнвалидаДвойной,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код113)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаРебенкаИнвалидаДвойнойВторой,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код130)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаДетейДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код135)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаДетейДвойнойДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код143)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаДетейДвойнойВторойДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код132)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаТретьегоРебенкаДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код139)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаТретьегоРебенкаДвойнойДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код147)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаТретьегоРебенкаДвойнойВторойДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код131)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаВторогоРебенкаДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код137)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаВторогоРебенкаДвойнойДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код145)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаВторогоРебенкаДвойнойВторойДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код117о)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаРебенкаИнвалидаДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код121о)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаРебенкаИнвалидаДвойнойДляОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код125о)
	|				ТОГДА ЕСТЬNULL(ВычетыНаДетей.Количество, 0) * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетНаРебенкаИнвалидаДвойнойВторойДляОпекунов,
	|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
	|				КОГДА ЕСТЬNULL(НЕ ВычетыНаДетей.ЛичныйВычет, ИСТИНА)
	|					ТОГДА РазмерВычетовНаДетей.ОграничениеПоДоходам
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК ОграничениеПоДоходам,
	|	СУММА(ВЫБОР
	|			КОГДА ВычетыНаДетей.ЛичныйВычет
	|				ТОГДА 1 * ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетЛичный,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВычетыНаДетей.ЛичныйВычет, ЛОЖЬ)
	|				ТОГДА ВычетыНаДетей.КодВычета
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|		КОНЕЦ) КАК КодВычетаЛичный,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВычетыНаДетей.ЛичныйВычет, ЛОЖЬ)
	|				ТОГДА РазмерВычетовНаДетей.ОграничениеПоДоходам
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОграничениеПоДоходамЛичныйВычет
	|ПОМЕСТИТЬ ВТВычетыНаДетейИЛичные
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтандартныеВычетыПоНДФЛВторичный КАК ВычетыНаДетей
	|		ПО Периоды.ФизическоеЛицо = ВычетыНаДетей.ФизическоеЛицо
	|			И (ВЫБОР
	|				КОГДА Периоды.МесяцНалоговогоПериода > &ПериодСрезаПравНаВычеты
	|					ТОГДА &ПериодСрезаПравНаВычеты
	|				ИНАЧЕ Периоды.МесяцНалоговогоПериода
	|			КОНЕЦ МЕЖДУ ВычетыНаДетей.ПериодРегистрацииНачало И ВычетыНаДетей.ПериодРегистрацииОкончание)
	|			И (Периоды.МесяцНалоговогоПериода МЕЖДУ ВычетыНаДетей.ДатаНачала И ВычетыНаДетей.ДатаОкончания)
	|			И (НЕ ВычетыНаДетей.ЛичныйВычет
	|				ИЛИ ВычетыНаДетей.КодВычета <> ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерВычетовНДФЛВторичный КАК РазмерВычетовНаДетей
	|		ПО (ВычетыНаДетей.КодВычета = РазмерВычетовНаДетей.КодВычета)
	|			И (Периоды.НачалоГодаНалоговогоПериода МЕЖДУ РазмерВычетовНаДетей.ДатаНачала И РазмерВычетовНаДетей.ДатаОкончания)
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ВычетыНаДетей.КодВычетаЛичный КАК КодВычетаЛичный,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ЕСТЬNULL(ВычетыНаДетей.ОграничениеПоДоходамЛичныйВычет, 0)
	|					ИЛИ ЕСТЬNULL(ВычетыНаДетей.ОграничениеПоДоходамЛичныйВычет, 0) = 0)
	|			ТОГДА ЕСТЬNULL(ВычетыНаДетей.ВычетЛичный, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыЛичные,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаДетей
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетские,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаДетейДвойной
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеДвойные,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаДетейДвойнойВторой
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеДвойныеВторые,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаТретьегоРебенка
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаТретьегоРебенка,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаТретьегоРебенкаДвойной
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаТретьегоРебенкаДвойные,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаТретьегоРебенкаДвойнойВторой
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаВторогоРебенка
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаВторогоРебенка,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаВторогоРебенкаДвойной
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаВторогоРебенкаДвойные,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаВторогоРебенкаДвойнойВторой
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаВторогоРебенкаДвойныеВторые,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаРебенкаИнвалида
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеИнвалидов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаРебенкаИнвалидаДвойной
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеИнвалидовДвойные,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаРебенкаИнвалидаДвойнойВторой
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеИнвалидовДвойныеВторые,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаДетейДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаДетейДвойнойДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеДвойныеОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаДетейДвойнойВторойДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеДвойныеВторыеОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаТретьегоРебенкаДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаТретьегоРебенкаОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаТретьегоРебенкаДвойнойДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаТретьегоРебенкаДвойныеОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаТретьегоРебенкаДвойнойВторойДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаТретьегоРебенкаДвойныеВторыеОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаВторогоРебенкаДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаВторогоРебенкаОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаВторогоРебенкаДвойнойДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаВторогоРебенкаДвойныеОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаВторогоРебенкаДвойнойВторойДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыНаВторогоРебенкаДвойныеВторыеОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаРебенкаИнвалидаДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеИнвалидовОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаРебенкаИнвалидаДвойнойДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеИнвалидовДвойныеОпекунов,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ВычетыНаДетей.ОграничениеПоДоходам
	|					ИЛИ ВычетыНаДетей.ОграничениеПоДоходам = 0)
	|			ТОГДА ВычетыНаДетей.ВычетНаРебенкаИнвалидаДвойнойВторойДляОпекунов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтандартныеВычетыДетскиеИнвалидовДвойныеВторыеОпекунов,
	|	ВычетыНаДетей.ОграничениеПоДоходамЛичныйВычет КАК ОграничениеПоДоходамЛичные,
	|	ВычетыНаДетей.ОграничениеПоДоходам КАК ОграничениеПоДоходамНаДетей
	|ПОМЕСТИТЬ ВТПраваНаСтандартныеВычетыПоМесяцам
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеСтандартныхВычетовПоНДФЛВторичный КАК ПрименениеВычетов
	|		ПО Периоды.ФизическоеЛицо = ПрименениеВычетов.ФизическоеЛицо
	|			И (ПрименениеВычетов.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|			И (Периоды.МесяцНалоговогоПериода МЕЖДУ ПрименениеВычетов.ДатаНачала И ПрименениеВычетов.ДатаОкончания)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДоходыПредыдущегоМестаРаботыНДФЛ КАК ДоходыСПредыдущегоМестаРаботы
	|		ПО Периоды.МесяцНалоговогоПериода = ДоходыСПредыдущегоМестаРаботы.МесяцНалоговогоПериода
	|			И Периоды.ФизическоеЛицо = ДоходыСПредыдущегоМестаРаботы.ФизическоеЛицо
	|			И (ДоходыСПредыдущегоМестаРаботы.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыРезидентовНарастающимЗаГод КАК ДоходыНарастающимИтогом
	|		ПО Периоды.МесяцНалоговогоПериода = ДоходыНарастающимИтогом.МесяцНалоговогоПериода
	|			И Периоды.ФизическоеЛицо = ДоходыНарастающимИтогом.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВычетыНаДетейИЛичные КАК ВычетыНаДетей
	|		ПО Периоды.ФизическоеЛицо = ВычетыНаДетей.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ВычетыНаДетей.МесяцНалоговогоПериода";
	
	ПакетЗапросов.Добавить(ТекстЗапроса);
	УдаляемыеВТ.Добавить("ВТМесяцыПолученияДохода");
	УдаляемыеВТ.Добавить("ВТДатыПолученияДоходаДляНарастающегоДохода");
	УдаляемыеВТ.Добавить("ВТДоходыПоДатамПолученияДоходаНарастающимЗаГод");
	УдаляемыеВТ.Добавить("ВТВычетыНаДетейИЛичные");
	УдаляемыеВТ.Добавить("ВТПраваНаСтандартныеВычетыПоМесяцам");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Доходы.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА Доходы.Резидент
	|					ТОГДА 0
	|				ИНАЧЕ Доходы.ДоходыБезВычетов
	|			КОНЕЦ * &СтавкиНалогаВПроцентахРазмер КАК ЧИСЛО(13, 0))) КАК НалогНерезидента
	|ПОМЕСТИТЬ ВТНалогНерезидентов
	|ИЗ
	|	ВТДоходыСУчетомВычетовКДоходам КАК Доходы
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизическоеЛицо,
	|	Доходы.МесяцНалоговогоПериода";
	ВписатьТекстПолученияЗначенияСтавкиНДФЛЧислом(ТекстЗапроса, "&СтавкиНалогаВПроцентахРазмер", "Доходы", "СтавкаНалогообложенияНеРезидента");
	Если ПервыйМесяцНалоговогоПериода < Запрос.Параметры.ДатаИзмененияИсчисленияДляИностранцев Тогда
		ПакетЗапросов.Добавить(ТекстЗапроса);
		УдаляемыеВТ.Добавить("ВТНалогНерезидентов");
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ЕСТЬNULL(ДатыДохода.ДатаПолученияДохода, МАКСИМУМ(ЕСТЬNULL(Доходы.ДатаПолученияДохода, НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Периоды.МесяцНалоговогоПериода, МЕСЯЦ), ДЕНЬ)))) КАК ДатаПолученияДохода,
	|	ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент) КАК Статус,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка) КАК КодДохода,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка) КАК КатегорияДохода,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
	|	ЕСТЬNULL(СУММА(Доходы.ВсеДоходы), 0) КАК СуммаДохода,
	|	0 КАК НалогНерезидента,
	|	ИСТИНА КАК ИсчислятьНалогНарастающимИтогом,
	|	ЕСТЬNULL(ДатыДохода.ДоходМежрасчетногоПериода, ЛОЖЬ) КАК ЗарегистрированоДляПромежуточногоРасчета,
	|	МАКСИМУМ(ЕСТЬNULL(Доходы.ДатаПолученияДохода, НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Периоды.МесяцНалоговогоПериода, МЕСЯЦ), ДЕНЬ))) КАК МаксимальнаяДатаПолученияДохода
	|ПОМЕСТИТЬ ВТДоходыНалоги
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК Доходы
	|		ПО Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	|			И (Доходы.ИсчислятьНалогНарастающимИтогом)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК ДатыДохода
	|		ПО Периоды.ФизическоеЛицо = ДатыДохода.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ДатыДохода.МесяцНалоговогоПериода
	|			И (ДатыДохода.ИсчислятьНалогНарастающимИтогом)
	|ГДЕ
	|	Периоды.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.МесяцНалоговогоПериода,
	|	Периоды.ФизическоеЛицо,
	|	ДатыДохода.ДатаПолученияДохода,
	|	ДатыДохода.ДоходМежрасчетногоПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Периоды.ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода,
	|	Доходы.ДатаПолученияДохода,
	|	Доходы.Статус,
	|	Доходы.КодДохода,
	|	Доходы.КатегорияДохода,
	|	Доходы.Подразделение,
	|	СУММА(Доходы.ДоходыБезВычетов),
	|	ВЫРАЗИТЬ(СУММА(Доходы.ДоходыБезВычетов) * Доходы.СтавкаЧислом КАК ЧИСЛО(13, 0)),
	|	ЛОЖЬ,
	|	Доходы.ДоходМежрасчетногоПериода,
	|	Доходы.ДатаПолученияДохода
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК Доходы
	|		ПО Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	|			И (НЕ Доходы.ИсчислятьНалогНарастающимИтогом)
	|ГДЕ
	|	Периоды.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев
	|	И Доходы.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода,
	|	Доходы.ДатаПолученияДохода,
	|	Доходы.ДоходМежрасчетногоПериода,
	|	Доходы.КодДохода,
	|	Доходы.КатегорияДохода,
	|	Доходы.Подразделение,
	|	Доходы.СтавкаЧислом,
	|	Доходы.Статус,
	|	Доходы.ДатаПолученияДохода
	|
	|ИМЕЮЩИЕ
	|	СУММА(Доходы.ДоходыБезВычетов) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыФизлиц.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПериодыФизлиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|	МАКСИМУМ(НАЧАЛОПЕРИОДА(ДоходыРезидентовНарастающимЗаГод.ДатаПолученияДохода, МЕСЯЦ)) КАК СтаршийМесяцПолученияДохода
	|ПОМЕСТИТЬ ВТМесяцыПолученияДохода
	|ИЗ
	|	ВТПериодыФизлиц КАК ПериодыФизлиц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыНалоги КАК ДоходыРезидентовНарастающимЗаГод
	|		ПО ПериодыФизлиц.ФизическоеЛицо = ДоходыРезидентовНарастающимЗаГод.ФизическоеЛицо
	|			И (ГОД(ПериодыФизлиц.МесяцНалоговогоПериода) = ГОД(ДоходыРезидентовНарастающимЗаГод.МесяцНалоговогоПериода))
	|			И (ДоходыРезидентовНарастающимЗаГод.СуммаДохода > 0)
	|			И (ДоходыРезидентовНарастающимЗаГод.ИсчислятьНалогНарастающимИтогом)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыФизлиц.МесяцНалоговогоПериода,
	|	ПериодыФизлиц.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИмущественныеВычеты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(ИмущественныеВычеты.Период, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ИмущественныеВычеты.ВидДвижения КАК ВидДвижения,
	|	ВЫБОР
	|		КОГДА ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|			ТОГДА ИмущественныеВычеты.Подразделение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|	КОНЕЦ КАК Подразделение,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код320о)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета)
	|				ТОГДА ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетРасходыНаСвоеОбучение,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код321)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета)
	|				ТОГДА ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетРасходыНаОбучениеДетей,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код324)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета)
	|				ТОГДА ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетРасходыНаЛечение,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код325)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета)
	|				ТОГДА ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетСтраховыеВзносыНаМедУслуги,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код326)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета)
	|				ТОГДА ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетРасходыНаДорогостоящееЛечение,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код329)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета)
	|				ТОГДА ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетВзносыНаДобровольноеСтрахованиеЖизни,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код311)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета)
	|				ТОГДА ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетИмущественныйРасходы,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код312)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета)
	|				ТОГДА ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетИмущественныйПроцентыПоКредитам,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код318)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета)
	|				ТОГДА ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетИмущественныйПроцентыПриПерекредитовании,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код320о)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|				ТОГДА -ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетРасходыНаСвоеОбучение,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код321)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|				ТОГДА -ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетРасходыНаОбучениеДетей,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код324)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|				ТОГДА -ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетРасходыНаЛечение,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код325)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|				ТОГДА -ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетСтраховыеВзносыНаМедУслуги,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код326)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|				ТОГДА -ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетРасходыНаДорогостоящееЛечение,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код329)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|				ТОГДА -ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код311)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|				ТОГДА -ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетИмущественныйРасходы,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код312)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|				ТОГДА -ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетИмущественныйПроцентыПоКредитам,
	|	СУММА(ВЫБОР
	|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код318)
	|					И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|				ТОГДА -ИмущественныеВычеты.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетИмущественныйПроцентыПриПерекредитовании
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИмущественныеВычеты.Период КАК Период,
	|		ИмущественныеВычеты.ВидДвижения КАК ВидДвижения,
	|		ИмущественныеВычеты.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ИмущественныеВычеты.Подразделение КАК Подразделение,
	|		ИмущественныеВычеты.КодВычета КАК КодВычета,
	|		ИмущественныеВычеты.Сумма КАК Сумма
	|	ИЗ
	|		РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычеты
	|	ГДЕ
	|		ИмущественныеВычеты.Регистратор <> &Регистратор
	|		И ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаИмущественныхВычетов
	|		И ИмущественныеВычеты.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|		И &УсловиеФизическоеЛицо
	|		И ВЫБОР
	|				КОГДА ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ИмущественныеВычеты.Год = ГОД(ИмущественныеВычеты.Период)
	|				ИНАЧЕ &ОкончательныйРасчетВычеты
	|			КОНЕЦ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИмущественныеВычеты.Период,
	|		ИмущественныеВычеты.ВидДвижения,
	|		ИмущественныеВычеты.ФизическоеЛицо,
	|		ИмущественныеВычеты.Подразделение,
	|		ИмущественныеВычеты.КодВычета,
	|		ИмущественныеВычеты.Сумма
	|	ИЗ
	|		ВТРегистрНакопления_ИмущественныеВычетыНДФЛ КАК ИмущественныеВычеты
	|	ГДЕ
	|		ИмущественныеВычеты.Регистратор <> &Регистратор
	|		И ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаИмущественныхВычетов
	|		И ИмущественныеВычеты.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|		И &УсловиеФизическоеЛицо
	|		И ВЫБОР
	|				КОГДА ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ИмущественныеВычеты.Год = ГОД(ИмущественныеВычеты.Период)
	|				ИНАЧЕ &ОкончательныйРасчетВычеты
	|			КОНЕЦ) КАК ИмущественныеВычеты
	|
	|СГРУППИРОВАТЬ ПО
	|	ИмущественныеВычеты.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(ИмущественныеВычеты.Период, МЕСЯЦ),
	|	ИмущественныеВычеты.ВидДвижения,
	|	ВЫБОР
	|		КОГДА ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И (ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|			ТОГДА ИмущественныеВычеты.Подразделение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ГОД(Периоды.МесяцНалоговогоПериода) КАК НалоговыйПериод,
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Доходы.ИсчислятьНалогНарастающимИтогом КАК ИсчислятьНалогНарастающимИтогом,
	|	Доходы.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	Доходы.МаксимальнаяДатаПолученияДохода КАК МаксимальнаяДатаПолученияДоходаМесяца,
	|	Доходы.ЗарегистрированоДляПромежуточногоРасчета КАК ЗарегистрированоДляПромежуточногоРасчета,
	|	Доходы.Статус КАК Статус,
	|	ВЫБОР
	|		КОГДА Доходы.ИсчислятьНалогНарастающимИтогом
	|			ТОГДА 0
	|		ИНАЧЕ Доходы.СуммаДохода
	|	КОНЕЦ КАК СуммаДохода,
	|	Доходы.СуммаДохода КАК ВсеДоходыЗаМесяц,
	|	ЕСТЬNULL(ДоходыПоДатамПолученияДоходаНарастающимИтогом.ОблагаемыйДоходЗаМесяц, 0) КАК ОблагаемыйДоход,
	|	Доходы.НалогНерезидента КАК НалогНерезидента,
	|	Доходы.КатегорияДохода КАК КатегорияДохода,
	|	Доходы.Подразделение КАК Подразделение,
	|	ЕСТЬNULL(ДоходыРезидентовНарастающимЗаГод.ОблагаемыйДоходЗаМесяц, 0) КАК ОблагаемыйДоходЗаМесяц,
	|	ЕСТЬNULL(ДоходыРезидентовНарастающимЗаГод.ОблагаемыйДоходЗаГод, 0) КАК ОблагаемыйДоходНарастающимИтогом,
	|	ЕСТЬNULL(МесяцыПолученияДохода.СтаршийМесяцПолученияДохода, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК СтаршийМесяцПолученияДохода,
	|	СоциальныеВычеты.СуммаОборот КАК СоциальныйВычет,
	|	0.13 КАК СтавкаДляРезидента,
	|	ПравоНаСтандартныеВычеты.КодВычетаЛичный КАК КодВычетаЛичный,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыЛичные КАК СтандартныеВычетыЛичные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетские КАК СтандартныеВычетыДетские,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеДвойные КАК СтандартныеВычетыДетскиеДвойные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеДвойныеВторые КАК СтандартныеВычетыДетскиеДвойныеВторые,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенка КАК СтандартныеВычетыНаТретьегоРебенка,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенкаДвойные КАК СтандартныеВычетыНаТретьегоРебенкаДвойные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые КАК СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенка КАК СтандартныеВычетыНаВторогоРебенка,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенкаДвойные КАК СтандартныеВычетыНаВторогоРебенкаДвойные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенкаДвойныеВторые КАК СтандартныеВычетыНаВторогоРебенкаДвойныеВторые,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидов КАК СтандартныеВычетыДетскиеИнвалидов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовДвойные КАК СтандартныеВычетыДетскиеИнвалидовДвойные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовДвойныеВторые КАК СтандартныеВычетыДетскиеИнвалидовДвойныеВторые,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовОпекунов КАК СтандартныеВычетыДетскиеИнвалидовОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовДвойныеОпекунов КАК СтандартныеВычетыДетскиеИнвалидовДвойныеОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовДвойныеВторыеОпекунов КАК СтандартныеВычетыДетскиеИнвалидовДвойныеВторыеОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеОпекунов КАК СтандартныеВычетыДетскиеОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеДвойныеОпекунов КАК СтандартныеВычетыДетскиеДвойныеОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеДвойныеВторыеОпекунов КАК СтандартныеВычетыДетскиеДвойныеВторыеОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенкаОпекунов КАК СтандартныеВычетыНаТретьегоРебенкаОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенкаДвойныеОпекунов КАК СтандартныеВычетыНаТретьегоРебенкаДвойныеОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторыеОпекунов КАК СтандартныеВычетыНаТретьегоРебенкаДвойныеВторыеОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенкаОпекунов КАК СтандартныеВычетыНаВторогоРебенкаОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенкаДвойныеОпекунов КАК СтандартныеВычетыНаВторогоРебенкаДвойныеОпекунов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенкаДвойныеВторыеОпекунов КАК СтандартныеВычетыНаВторогоРебенкаДвойныеВторыеОпекунов
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаСтандартныеВычетыПоМесяцам КАК ПравоНаСтандартныеВычеты
	|		ПО Периоды.ФизическоеЛицо = ПравоНаСтандартныеВычеты.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ПравоНаСтандартныеВычеты.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоциальныеВычетыПомесячно КАК СоциальныеВычеты
	|		ПО Периоды.ФизическоеЛицо = СоциальныеВычеты.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = СоциальныеВычеты.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыРезидентовНарастающимЗаГод КАК ДоходыРезидентовНарастающимЗаГод
	|		ПО Периоды.ФизическоеЛицо = ДоходыРезидентовНарастающимЗаГод.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ДоходыРезидентовНарастающимЗаГод.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМесяцыПолученияДохода КАК МесяцыПолученияДохода
	|		ПО Периоды.ФизическоеЛицо = МесяцыПолученияДохода.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = МесяцыПолученияДохода.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыНалоги КАК Доходы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоДатамПолученияДоходаНарастающимЗаГод КАК ДоходыПоДатамПолученияДоходаНарастающимИтогом
	|			ПО Доходы.ФизическоеЛицо = ДоходыПоДатамПолученияДоходаНарастающимИтогом.ФизическоеЛицо
	|				И Доходы.МесяцНалоговогоПериода = ДоходыПоДатамПолученияДоходаНарастающимИтогом.МесяцНалоговогоПериода
	|				И Доходы.ДатаПолученияДохода = ДоходыПоДатамПолученияДоходаНарастающимИтогом.ДатаПолученияДохода
	|				И Доходы.ЗарегистрированоДляПромежуточногоРасчета = ДоходыПоДатамПолученияДоходаНарастающимИтогом.ЗарегистрированоДляПромежуточногоРасчета
	|		ПО Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	|ГДЕ
	|	Периоды.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев
	|	И (НЕ Доходы.ИсчислятьНалогНарастающимИтогом
	|			ИЛИ Доходы.ДатаПолученияДохода = Доходы.МаксимальнаяДатаПолученияДохода
	|			ИЛИ ЕСТЬNULL(ДоходыПоДатамПолученияДоходаНарастающимИтогом.ОблагаемыйДоходЗаМесяц, 0) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	МесяцНалоговогоПериода,
	|	Доходы.ИсчислятьНалогНарастающимИтогом УБЫВ,
	|	ДатаПолученияДохода,
	|	ЗарегистрированоДляПромежуточногоРасчета УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Доходы.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Доходы.Подразделение КАК Подразделение,
	|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
	|	Доходы.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	Доходы.КатегорияДохода КАК КатегорияДохода,
	|	Доходы.ЗарегистрированоДляПромежуточногоРасчета КАК ЗарегистрированоДляПромежуточногоРасчета,
	|	Доходы.ДоходТекущегоРасчета КАК ДоходТекущегоРасчета,
	|	Доходы.ДокументОснование КАК ДокументОснование,
	|	Доходы.ИсчислятьНалогНарастающимИтогом КАК ИсчислятьНалогНарастающимИтогом
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПериодыФизлиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ПериодыФизлиц.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|		СведенияОДоходахНДФЛ.Подразделение КАК Подразделение,
	|		СведенияОДоходахНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|		СведенияОДоходахНДФЛ.ДоходыБезВычетов КАК СуммаДохода,
	|		СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|		НЕ СведенияОДоходахНДФЛ.Сторно
	|			И ЕСТЬNULL(ДокументыУчтенныеПриРасчетеНДФЛ.Регистратор, &Регистратор) = &Регистратор КАК ДоходТекущегоРасчета,
	|		СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода КАК ЗарегистрированоДляПромежуточногоРасчета,
	|		СведенияОДоходахНДФЛ.ИсчислятьНалогНарастающимИтогом КАК ИсчислятьНалогНарастающимИтогом,
	|		СведенияОДоходахНДФЛ.ДокументОснование КАК ДокументОснование
	|	ИЗ
	|		ВТПериодыФизлиц КАК ПериодыФизлиц
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК СведенияОДоходахНДФЛ
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыУчтенныеПриРасчетеНДФЛ КАК ДокументыУчтенныеПриРасчетеНДФЛ
	|				ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ДокументыУчтенныеПриРасчетеНДФЛ.ФизическоеЛицо
	|					И СведенияОДоходахНДФЛ.ДокументОснование = ДокументыУчтенныеПриРасчетеНДФЛ.ДокументОснование
	|			ПО ПериодыФизлиц.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
	|				И (ПериодыФизлиц.МесяцНалоговогоПериода = НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ))
	|				И (&ОкончательныйРасчетДоходы)
	|	ГДЕ
	|		ПериодыФизлиц.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев
	|		И СведенияОДоходахНДФЛ.ФизическоеЛицо ЕСТЬ НЕ NULL ) КАК Доходы
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизическоеЛицо,
	|	Доходы.МесяцНалоговогоПериода,
	|	Доходы.Подразделение,
	|	Доходы.ДатаПолученияДохода,
	|	Доходы.КатегорияДохода,
	|	Доходы.ЗарегистрированоДляПромежуточногоРасчета,
	|	Доходы.ДоходТекущегоРасчета,
	|	Доходы.ДокументОснование,
	|	Доходы.ИсчислятьНалогНарастающимИтогом
	|
	|ИМЕЮЩИЕ
	|	СУММА(Доходы.СуммаДохода) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо";
	
	ПакетЗапросов.Добавить(ТекстЗапроса);
	УдаляемыеВТ.Добавить("ВТДоходыНалоги");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Периоды.Резидент КАК Резидент,
	|	ДоходыРезидентовНарастающимЗаГод.ОблагаемыйДоходЗаМесяц КАК ОблагаемыйДоходЗаМесяц,
	|	ДоходыРезидентовНарастающимЗаГод.ОблагаемыйДоходЗаГод КАК ОблагаемыйДоходНарастающимИтогом,
	|	СоциальныеВычеты.СуммаОборот КАК СоциальныйВычет,
	|	ВЫБОР
	|		КОГДА Периоды.Резидент
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(НалогНерезидентов.НалогНерезидента, 0)
	|	КОНЕЦ КАК НалогЗаМесяц,
	|	0.13 КАК СтавкаДляРезидента,
	|	ПравоНаСтандартныеВычеты.КодВычетаЛичный КАК КодВычетаЛичный,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыЛичные КАК СтандартныеВычетыЛичные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетские КАК СтандартныеВычетыДетские,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеДвойные КАК СтандартныеВычетыДетскиеДвойные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеДвойныеВторые КАК СтандартныеВычетыДетскиеДвойныеВторые,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидов КАК СтандартныеВычетыДетскиеИнвалидов,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовДвойные КАК СтандартныеВычетыДетскиеИнвалидовДвойные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовДвойныеВторые КАК СтандартныеВычетыДетскиеИнвалидовДвойныеВторые,
	|	ГОД(Периоды.МесяцНалоговогоПериода) КАК НалоговыйПериод,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенка КАК СтандартныеВычетыНаТретьегоРебенка,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенкаДвойные КАК СтандартныеВычетыНаТретьегоРебенкаДвойные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые КАК СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые,
	|	ПравоНаСтандартныеВычеты.ОграничениеПоДоходамЛичные КАК ОграничениеПоДоходамЛичные,
	|	ПравоНаСтандартныеВычеты.ОграничениеПоДоходамНаДетей КАК ОграничениеПоДоходамНаДетей,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенка КАК СтандартныеВычетыНаВторогоРебенка,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенкаДвойные КАК СтандартныеВычетыНаВторогоРебенкаДвойные,
	|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенкаДвойныеВторые КАК СтандартныеВычетыНаВторогоРебенкаДвойныеВторые
	|ИЗ
	|	ВТПериодыФизлиц КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалогНерезидентов КАК НалогНерезидентов
	|		ПО Периоды.ФизическоеЛицо = НалогНерезидентов.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = НалогНерезидентов.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаСтандартныеВычетыПоМесяцам КАК ПравоНаСтандартныеВычеты
	|		ПО Периоды.ФизическоеЛицо = ПравоНаСтандартныеВычеты.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ПравоНаСтандартныеВычеты.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыРезидентовНарастающимЗаГод КАК ДоходыРезидентовНарастающимЗаГод
	|		ПО Периоды.ФизическоеЛицо = ДоходыРезидентовНарастающимЗаГод.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = ДоходыРезидентовНарастающимЗаГод.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоциальныеВычетыПомесячно КАК СоциальныеВычеты
	|		ПО Периоды.ФизическоеЛицо = СоциальныеВычеты.ФизическоеЛицо
	|			И Периоды.МесяцНалоговогоПериода = СоциальныеВычеты.МесяцНалоговогоПериода
	|ГДЕ
	|	Периоды.МесяцНалоговогоПериода < &ДатаИзмененияИсчисленияДляИностранцев
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	НалоговыйПериод,
	|	МесяцНалоговогоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Доходы.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Доходы.Подразделение КАК Подразделение,
	|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПериодыФизлиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ПериодыФизлиц.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|		СведенияОДоходахНДФЛ.Подразделение КАК Подразделение,
	|		ЕСТЬNULL(СведенияОДоходахНДФЛ.СуммаДохода, 0) - ВЫБОР
	|			КОГДА ПериодыФизлиц.Резидент
	|				ТОГДА ЕСТЬNULL(СведенияОДоходахНДФЛ.СуммаВычета, 0)
	|			КОГДА СведенияОДоходахНДФЛ.КодВычета В (&КодыВычетовРезидентов)
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(СведенияОДоходахНДФЛ.СуммаВычета, 0)
	|		КОНЕЦ КАК СуммаДохода
	|	ИЗ
	|		ВТПериодыФизлиц КАК ПериодыФизлиц
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|			ПО ПериодыФизлиц.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
	|				И (ПериодыФизлиц.МесяцНалоговогоПериода = НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ))
	|				И (ПериодыФизлиц.Резидент
	|					ИЛИ НЕ СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ)
	|				И (СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13))
	|				И (НЕ СведенияОДоходахНДФЛ.КодДохода.НеОблагаетсяУНалоговогоАгента)
	|				И (&ОкончательныйРасчетДоходы)
	|	ГДЕ
	|		ПериодыФизлиц.МесяцНалоговогоПериода < &ДатаИзмененияИсчисленияДляИностранцев) КАК Доходы
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизическоеЛицо,
	|	Доходы.МесяцНалоговогоПериода,
	|	Доходы.Подразделение";
	
	Если ПервыйМесяцНалоговогоПериода < Запрос.Параметры.ДатаИзмененияИсчисленияДляИностранцев Тогда
		ПакетЗапросов.Добавить(ТекстЗапроса);
		Сдвиг = 0;
	Иначе
		Сдвиг = 2;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериодаДляПоиска,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение КАК Подразделение,
	|	-СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма) КАК НалогПоСтавке13,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода КАК КатегорияДохода
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма КАК Сумма,
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение КАК Подразделение,
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода КАК КатегорияДохода
	|	ИЗ
	|		РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|	ГДЕ
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор <> &Регистратор
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период МЕЖДУ &НачалоПредшествующегоГода И &КонецМесяцаРасчета
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|		И &УсловиеФизическоеЛицо
	|		И &ОкончательныйРасчетПоРасчетам
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма,
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода
	|	ИЗ
	|		ВТРегистрНакопления_РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|	ГДЕ
	|		РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор <> &Регистратор
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период МЕЖДУ &НачалоПредшествующегоГода И &КонецМесяцаРасчета
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	|		И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|		И &УсловиеФизическоеЛицо
	|		И &ОкончательныйРасчетПоРасчетам) КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛПредоставленныеСтандартныеВычеты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НДФЛПредоставленныеСтандартныеВычеты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	НДФЛПредоставленныеСтандартныеВычеты.МесяцПериодаПредоставленияВычета КАК МесяцПериодаПредоставленияВычета,
	|	НДФЛПредоставленныеСтандартныеВычеты.Подразделение КАК Подразделение,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета В (ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код103), ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код104), ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код105))
	|				ТОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|		КОНЕЦ) КАК КодВычетаЛичный,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета В (ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код103), ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код104), ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код105))
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетЛичный,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код108)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетей,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код110)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейДвойной,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код111)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейДвойнойВторой,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код116)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаТретьегоРебенка,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код120)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаТретьегоРебенкаДвойной,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код124)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаТретьегоРебенкаДвойнойВторой,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код115)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаВторогоРебенка,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код119)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаВторогоРебенкаДвойной,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код123)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаВторогоРебенкаДвойнойВторой,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код109)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейИнвалидов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код112)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейИнвалидовДвойной,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код113)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейИнвалидовДвойнойВторой,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код130)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код135)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейДвойнойОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код143)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейДвойнойВторойОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код131)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаВторогоРебенкаОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код137)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаВторогоРебенкаДвойнойОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код145)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаВторогоРебенкаДвойнойВторойОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код132)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаТретьегоРебенкаОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код139)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаТретьегоРебенкаДвойнойОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код147)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаТретьегоРебенкаДвойнойВторойОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код117о)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейИнвалидовОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код121о)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов,
	|	СУММА(ВЫБОР
	|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код125о)
	|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов
	|ИЗ
	|	ВТПредоставленныеСтандартныеИСоциальныеВычеты КАК НДФЛПредоставленныеСтандартныеВычеты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДФЛПредоставленныеСтандартныеВычеты.Подразделение,
	|	НДФЛПредоставленныеСтандартныеВычеты.МесяцНалоговогоПериода,
	|	НДФЛПредоставленныеСтандартныеВычеты.МесяцПериодаПредоставленияВычета,
	|	НДФЛПредоставленныеСтандартныеВычеты.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	МесяцПериодаПредоставленияВычета,
	|	МесяцНалоговогоПериода";
	
	ПакетЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = СтрСоединить(ПакетЗапросов, Символы.ПС + ";" + Символы.ПС);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеФизическоеЛицо", ТекстУсловияФизическоеЛицо);
	
	Если Не ИсключатьДоходыРегистратора Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И (СведенияОДоходахНДФЛ.Регистратор <> &ИсключаемыйРегистратор)", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И СведенияОДоходахНДФЛ.Регистратор <> &ИсключаемыйРегистратор", "");
	КонецЕсли;
	
	Если ОкончательныйРасчет Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетВычеты", "Истина");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетДоходы", "Истина");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетПоРасчетам", "Истина");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетВычеты", 
		"(Период < &НачалоМесяцаРасчета
		|			ИЛИ ВычетМежрасчетногоПериода
		|				И (Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета))");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетДоходы", 
		"(СведенияОДоходахНДФЛ.Период < &НачалоМесяцаРасчета
		|					ИЛИ СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода
		|						И (СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета))");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетПоРасчетам", 
		"(Период < &НачалоМесяцаРасчета
		|			ИЛИ РасчетМежрасчетногоПериода
		|				И (Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета))");
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВсегоРезультатов = Результат.Количество();
	
	ИмущественныеВычеты = Результат[ВсегоРезультатов - 7 + Сдвиг].Выгрузить();
	ИсчисленоРанее = Результат[ВсегоРезультатов - 2].Выгрузить();
	СтандартныхВычетовРанее = Результат[ВсегоРезультатов - 1].Выгрузить();
	
	ПоляПоиска = "ФизическоеЛицо, МесяцНалоговогоПериода";
	СтруктураПоиска = Новый Структура(ПоляПоиска);
	ПоляПоискаИмущественныхВычетов = ПоляПоиска + ", ВидДвижения";
	СтруктураПоискаВычетов = Новый Структура(ПоляПоискаИмущественныхВычетов);
	ИмущественныеВычеты.Индексы.Добавить(ПоляПоискаИмущественныхВычетов);
	
	СтрокаРесурсов = РассчитываемыеРесурсыПоОсновнойСтавке();
	МассивРесурсов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаРесурсов);
	НазванияВычетовНаДетей = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(РассчитываемыеРесурсыВычетовНаДетей());
	
	РезультатыРасчетов = ТаблицаНДФЛ();
	
	ТекущийГод = Год(МесяцРасчета);
		
	// Помесячный расчет
	Если ПервыйМесяцНалоговогоПериода < ДатаИзмененияИсчисленияДляИностранцев Тогда
		
		ВспомогательнаяТаблицаМесяца = РезультатыРасчетов.СкопироватьКолонки();
		ВспомогательнаяТаблицаФизическогоЛица = РезультатыРасчетов.СкопироватьКолонки();
		
		СтандартныхВычетовРанее.Индексы.Добавить(ПоляПоиска);
		ИсчисленоРанее.Индексы.Добавить(ПоляПоиска);
		РаспределениеДоходовПоПодразделениям = Результат[ВсегоРезультатов - 3].Выгрузить();
		РаспределениеДоходовПоПодразделениям.Индексы.Добавить(ПоляПоиска);
		
		ВыборкаРасчетов = Результат[ВсегоРезультатов - 4].Выбрать();
		Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
			
			ВспомогательнаяТаблицаФизическогоЛица.Очистить();
			
			// Подготовим распределение, которое будет использоваться при отсутствии базы соответствующего месяца.
			СтруктураПоиска.ФизическоеЛицо = ВыборкаРасчетов.ФизическоеЛицо;

			БазаРаспределения = 0;
			МесяцПоиска = НачалоМесяца(МесяцРасчета);
			Пока БазаРаспределения = 0 И Год(МесяцПоиска) = ТекущийГод Цикл
				СтруктураПоиска.МесяцНалоговогоПериода = МесяцПоиска;
				ДоходыМесяцаРасчета = РаспределениеДоходовПоПодразделениям.НайтиСтроки(СтруктураПоиска);
				БазаРаспределения = 0;
				Для каждого СтрокаРаспределения Из ДоходыМесяцаРасчета Цикл
					БазаРаспределения = БазаРаспределения + СтрокаРаспределения.СуммаДохода;
				КонецЦикла; 
				МесяцПоиска = ДобавитьМесяц(МесяцПоиска, -1);
			КонецЦикла;
			
			КоэффициентыПодразделенийМесяцаРасчета = ОбщегоНазначения.ВыгрузитьКолонку(ДоходыМесяцаРасчета, "СуммаДохода");
			
			Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("НалоговыйПериод") Цикл
				
				ВычетЛичныйОстаток = 0;
				ВычетНаДетейОстаток = 0;
				ВычетНаДетейДвойнойОстаток = 0;
				ВычетНаДетейДвойнойВторойОстаток = 0;
				ВычетНаТретьегоРебенкаОстаток = 0;
				ВычетНаТретьегоРебенкаДвойнойОстаток = 0;
				ВычетНаТретьегоРебенкаДвойнойВторойОстаток = 0;
				ВычетНаВторогоРебенкаОстаток = 0;
				ВычетНаВторогоРебенкаДвойнойОстаток = 0;
				ВычетНаВторогоРебенкаДвойнойВторойОстаток = 0;
				ВычетНаДетейИнвалидовОстаток = 0;
				ВычетНаДетейИнвалидовДвойнойОстаток = 0;
				ВычетНаДетейИнвалидовДвойнойВторойОстаток = 0;
				ВычетИмущественныйРасходыОстаток = 0;
				ВычетИмущественныйПроцентыПоКредитамОстаток = 0;
				ВычетИмущественныйПроцентыПриПерекредитованииОстаток = 0;
				ВычетСоциальныйОстаток = 0;
				ОблагаемыйДоход = 0;
				ДоходЗаМесяцОстаток = 0;
				НалогИсчисленный = 0;
				
				Пока ВыборкаРасчетов.Следующий() Цикл
					
					Если ВыборкаРасчетов.МесяцНалоговогоПериода >= ДатаИзмененияИсчисленияДляИностранцев Тогда
						Продолжить;
					КонецЕсли;
					
					ВспомогательнаяТаблицаМесяца.Очистить();
					ЗаполнитьЗначенияСвойств(СтруктураПоиска,ВыборкаРасчетов);
					Доходы = РаспределениеДоходовПоПодразделениям.НайтиСтроки(СтруктураПоиска);
					
					БазаРаспределения = 0;
					Для каждого СтрокаРаспределения Из Доходы Цикл
						БазаРаспределения = БазаРаспределения + СтрокаРаспределения.СуммаДохода;
					КонецЦикла; 
					Если БазаРаспределения = 0 Тогда
						// Если доходов за прошлый месяц нет - будем использовать текущее распределение.
						Доходы = ДоходыМесяцаРасчета;
						КоэффициентыПодразделений = КоэффициентыПодразделенийМесяцаРасчета;
					Иначе
						КоэффициентыПодразделений = ОбщегоНазначения.ВыгрузитьКолонку(Доходы, "СуммаДохода");
					КонецЕсли;
					
					ЗаполнитьЗначенияСвойств(СтруктураПоискаВычетов, СтруктураПоиска);
					СтруктураПоискаВычетов.ВидДвижения = ВидДвиженияНакопления.Расход;

					ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаМесяца, ИсчисленоРанее.НайтиСтроки(СтруктураПоиска), "НалогПоСтавке13");
					ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаМесяца, СтандартныхВычетовРанее.НайтиСтроки(СтруктураПоиска), "ПримененныйВычетЛичный," + РассчитываемыеРесурсыВычетовНаДетей());
					ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаМесяца, ИмущественныеВычеты.НайтиСтроки(СтруктураПоиска), РассчитываемыеРесурсыИмущественныхВычетов());
					
					Если ВыборкаРасчетов.Резидент Тогда
						
						// Расчет сумм примененных вычетов и налога.
						
						ВычетЛичныйЗаМесяц = 0;
						ВычетНаДетейЗаМесяц = 0;
						ВычетНаДетейЗаМесяц = 0;
						ВычетСоциальныйЗаМесяц = 0;
						ВычетНаДетейДвойнойЗаМесяц = 0;
						ВычетНаДетейДвойнойВторойЗаМесяц = 0;
						ВычетНаТретьегоРебенкаЗаМесяц = 0;
						ВычетНаТретьегоРебенкаДвойнойЗаМесяц = 0;
						ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц = 0;
						ВычетНаВторогоРебенкаЗаМесяц = 0;
						ВычетНаВторогоРебенкаДвойнойЗаМесяц = 0;
						ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц = 0;
						ВычетНаДетейИнвалидовЗаМесяц = 0;
						ВычетНаДетейИнвалидовДвойнойЗаМесяц = 0;
						ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц = 0;
						ВычетИмущественныйРасходыЗаМесяц = 0;
						ВычетИмущественныйПроцентыПоКредитамЗаМесяц = 0;
						ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц = 0;
						
						ВычетСоциальныйОстаток = ВычетСоциальныйОстаток + ВыборкаРасчетов.СоциальныйВычет;
						
						ЗаполнитьЗначенияСвойств(СтруктураПоискаВычетов, СтруктураПоиска);
						СтруктураПоискаВычетов.ВидДвижения = ВидДвиженияНакопления.Приход;
						СтрокиПравНаИмущественныеВычеты = ИмущественныеВычеты.НайтиСтроки(СтруктураПоиска);
						
						Если СтрокиПравНаИмущественныеВычеты.Количество() > 0 Тогда
							ВычетИмущественныйРасходыОстаток = ВычетИмущественныйРасходыОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетИмущественныйРасходы;
							ВычетИмущественныйПроцентыПоКредитамОстаток = ВычетИмущественныйПроцентыПоКредитамОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетИмущественныйПроцентыПоКредитам;
							ВычетИмущественныйПроцентыПриПерекредитованииОстаток = ВычетИмущественныйПроцентыПриПерекредитованииОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетИмущественныйПроцентыПриПерекредитовании;
						КонецЕсли;
						Если ОсобенностиУчетаВычетов = Перечисления.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом Тогда
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток + ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц;
							ВычетЛичныйОстаток = ВычетЛичныйОстаток + ВыборкаРасчетов.СтандартныеВычетыЛичные;
							ВычетНаДетейОстаток = ВычетНаДетейОстаток + ВыборкаРасчетов.СтандартныеВычетыДетские;
							ВычетНаДетейДвойнойОстаток = ВычетНаДетейДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойные;
							ВычетНаДетейДвойнойВторойОстаток = ВычетНаДетейДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеВторые;
							ВычетНаТретьегоРебенкаОстаток = ВычетНаТретьегоРебенкаОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенка;
							ВычетНаТретьегоРебенкаДвойнойОстаток = ВычетНаТретьегоРебенкаДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойные;
							ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые;
							ВычетНаВторогоРебенкаОстаток = ВычетНаВторогоРебенкаОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенка;
							ВычетНаВторогоРебенкаДвойнойОстаток = ВычетНаВторогоРебенкаДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойные;
							ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВычетНаВторогоРебенкаДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеВторые;
							ВычетНаДетейИнвалидовОстаток = ВычетНаДетейИнвалидовОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидов;
							ВычетНаДетейИнвалидовДвойнойОстаток = ВычетНаДетейИнвалидовДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойные;
							ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВычетНаДетейИнвалидовДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеВторые;
						Иначе
							ДоходЗаМесяцОстаток = ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц;
							ВычетЛичныйОстаток = ВыборкаРасчетов.СтандартныеВычетыЛичные;
							ВычетНаДетейОстаток = ВыборкаРасчетов.СтандартныеВычетыДетские;
							ВычетНаДетейДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойные;
							ВычетНаДетейДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеВторые;
							ВычетНаТретьегоРебенкаОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенка;
							ВычетНаТретьегоРебенкаДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойные;
							ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые;
							ВычетНаВторогоРебенкаОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенка;
							ВычетНаВторогоРебенкаДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойные;
							ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеВторые;
							ВычетНаДетейИнвалидовОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидов;
							ВычетНаДетейИнвалидовДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойные;
							ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеВторые;
						КонецЕсли;
						
						Если ДоходЗаМесяцОстаток > 0 Тогда
							
							ВычетСоциальныйЗаМесяц = Мин(ДоходЗаМесяцОстаток, ВычетСоциальныйОстаток);
							ВычетСоциальныйОстаток = ВычетСоциальныйОстаток - ВычетСоциальныйЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетСоциальныйЗаМесяц;
							
							Если ВыборкаРасчетов.КодВычетаЛичный = Справочники.ВидыВычетовНДФЛ.Код103 Тогда
								ВычетЛичныйЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетЛичныйОстаток);
								ВычетЛичныйОстаток = ВычетЛичныйОстаток - ВычетЛичныйЗаМесяц;
								ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетЛичныйЗаМесяц;
							КонецЕсли;
							
							ВычетНаДетейЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейОстаток);
							ВычетНаДетейОстаток = ВычетНаДетейОстаток - ВычетНаДетейЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейЗаМесяц;
							
							ВычетНаДетейДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейДвойнойОстаток);
							ВычетНаДетейДвойнойОстаток = ВычетНаДетейДвойнойОстаток - ВычетНаДетейДвойнойЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейДвойнойЗаМесяц;
							
							ВычетНаДетейДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейДвойнойВторойОстаток);
							ВычетНаДетейДвойнойВторойОстаток = ВычетНаДетейДвойнойВторойОстаток - ВычетНаДетейДвойнойВторойЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейДвойнойВторойЗаМесяц;
							
							ВычетНаВторогоРебенкаЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаОстаток);
							ВычетНаВторогоРебенкаОстаток = ВычетНаВторогоРебенкаОстаток - ВычетНаВторогоРебенкаЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаЗаМесяц;
							
							ВычетНаВторогоРебенкаДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаДвойнойОстаток);
							ВычетНаВторогоРебенкаДвойнойОстаток = ВычетНаВторогоРебенкаДвойнойОстаток - ВычетНаВторогоРебенкаДвойнойЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаДвойнойЗаМесяц;
							
							ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаДвойнойВторойОстаток);
							ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВычетНаВторогоРебенкаДвойнойВторойОстаток - ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц;

							ВычетНаТретьегоРебенкаЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаОстаток);
							ВычетНаТретьегоРебенкаОстаток = ВычетНаТретьегоРебенкаОстаток - ВычетНаТретьегоРебенкаЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаЗаМесяц;
							
							ВычетНаТретьегоРебенкаДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаДвойнойОстаток);
							ВычетНаТретьегоРебенкаДвойнойОстаток = ВычетНаТретьегоРебенкаДвойнойОстаток - ВычетНаТретьегоРебенкаДвойнойЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаДвойнойЗаМесяц;
							
							ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаДвойнойВторойОстаток);
							ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОстаток - ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц;

							ВычетНаДетейИнвалидовЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовОстаток);
							ВычетНаДетейИнвалидовОстаток = ВычетНаДетейИнвалидовОстаток - ВычетНаДетейИнвалидовЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовЗаМесяц;
							
							ВычетНаДетейИнвалидовДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовДвойнойОстаток);
							ВычетНаДетейИнвалидовДвойнойОстаток = ВычетНаДетейИнвалидовДвойнойОстаток - ВычетНаДетейИнвалидовДвойнойЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовДвойнойЗаМесяц;
							
							ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовДвойнойВторойОстаток);
							ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВычетНаДетейИнвалидовДвойнойВторойОстаток - ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц;
								
							Если ВыборкаРасчетов.КодВычетаЛичный <> Справочники.ВидыВычетовНДФЛ.Код103 Тогда
								ВычетЛичныйЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетЛичныйОстаток);
								ВычетЛичныйОстаток = ВычетЛичныйОстаток - ВычетЛичныйЗаМесяц;
								ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетЛичныйЗаМесяц;
							КонецЕсли;
							
							ДоходЗаМесяцДляИмущественныхВычетов = Макс(0, ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц - ВычетСоциальныйЗаМесяц - ВычетЛичныйЗаМесяц 
									- ВычетНаДетейЗаМесяц - ВычетНаДетейДвойнойЗаМесяц - ВычетНаДетейДвойнойВторойЗаМесяц 
									- ВычетНаВторогоРебенкаЗаМесяц - ВычетНаВторогоРебенкаДвойнойЗаМесяц - ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц 
									- ВычетНаТретьегоРебенкаЗаМесяц - ВычетНаТретьегоРебенкаДвойнойЗаМесяц - ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц 
									- ВычетНаДетейИнвалидовЗаМесяц - ВычетНаДетейИнвалидовДвойнойЗаМесяц - ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц);
							
							Если ДоходЗаМесяцДляИмущественныхВычетов > 0 Тогда
								
								ВычетИмущественныйПроцентыПоКредитамЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетИмущественныйПроцентыПоКредитамОстаток);
								ВычетИмущественныйПроцентыПоКредитамОстаток = ВычетИмущественныйПроцентыПоКредитамОстаток - ВычетИмущественныйПроцентыПоКредитамЗаМесяц;
								ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетИмущественныйПроцентыПоКредитамЗаМесяц;
								ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетИмущественныйПроцентыПоКредитамЗаМесяц;
								
								ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетИмущественныйПроцентыПриПерекредитованииОстаток);
								ВычетИмущественныйПроцентыПриПерекредитованииОстаток = ВычетИмущественныйПроцентыПриПерекредитованииОстаток - ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц;
								ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц;
								ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц;
								
								ВычетИмущественныйРасходыЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетИмущественныйРасходыОстаток);
								ВычетИмущественныйРасходыОстаток = ВычетИмущественныйРасходыОстаток - ВычетИмущественныйРасходыЗаМесяц;
								ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетИмущественныйРасходыЗаМесяц;
								
							КонецЕсли;
							
							ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетЛичныйЗаМесяц, "ПримененныйВычетЛичный", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейЗаМесяц, "ПримененныйВычетНаДетей", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейДвойнойЗаМесяц, "ПримененныйВычетНаДетейДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейДвойнойВторойЗаМесяц, "ПримененныйВычетНаДетейДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаВторогоРебенкаЗаМесяц, "ПримененныйВычетНаВторогоРебенка", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаВторогоРебенкаДвойнойЗаМесяц, "ПримененныйВычетНаВторогоРебенкаДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц, "ПримененныйВычетНаВторогоРебенкаДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаТретьегоРебенкаЗаМесяц, "ПримененныйВычетНаТретьегоРебенка", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаТретьегоРебенкаДвойнойЗаМесяц, "ПримененныйВычетНаТретьегоРебенкаДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц, "ПримененныйВычетНаТретьегоРебенкаДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейИнвалидовЗаМесяц, "ПримененныйВычетНаДетейИнвалидов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейИнвалидовДвойнойЗаМесяц, "ПримененныйВычетНаДетейИнвалидовДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц, "ПримененныйВычетНаДетейИнвалидовДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетИмущественныйРасходыЗаМесяц, "ПримененныйВычетИмущественныйРасходы", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетИмущественныйПроцентыПоКредитамЗаМесяц, "ПримененныйВычетИмущественныйПроцентыПоКредитам", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
							ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц, "ПримененныйВычетИмущественныйПроцентыПриПерекредитовании", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
						КонецЕсли;
						
						ОблагаемыйДоход = Макс(0, ОблагаемыйДоход + ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц - (ВычетСоциальныйЗаМесяц + ВычетЛичныйЗаМесяц 
									+ ВычетНаДетейЗаМесяц + ВычетНаДетейДвойнойЗаМесяц + ВычетНаДетейДвойнойВторойЗаМесяц 
									+ ВычетНаТретьегоРебенкаЗаМесяц + ВычетНаТретьегоРебенкаДвойнойЗаМесяц + ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц 
									+ ВычетНаВторогоРебенкаЗаМесяц + ВычетНаВторогоРебенкаДвойнойЗаМесяц + ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц 
									+ ВычетНаДетейИнвалидовЗаМесяц + ВычетНаДетейИнвалидовДвойнойЗаМесяц + ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц 
									+ ВычетИмущественныйПроцентыПоКредитамЗаМесяц + ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц + ВычетИмущественныйРасходыЗаМесяц));
							
						НалогЗаМесяц = Окр(ОблагаемыйДоход * ВыборкаРасчетов.СтавкаДляРезидента) - НалогИсчисленный;
						НалогИсчисленный = НалогИсчисленный + НалогЗаМесяц;
						
					Иначе	
						
						НалогЗаМесяц = ВыборкаРасчетов.НалогЗаМесяц;
						
					КонецЕсли;
					
					ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, НалогЗаМесяц, "НалогПоСтавке13", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, 0);
					
					ВспомогательнаяТаблицаМесяца.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода, Подразделение, КатегорияДохода", СтрокаРесурсов);
					Для каждого СтрокаТЗ Из ВспомогательнаяТаблицаМесяца Цикл
						ЕстьДанныеВСтроке = Ложь;
						Для каждого ИмяРесурса Из МассивРесурсов Цикл
							ЕстьДанныеВСтроке = СтрокаТЗ[ИмяРесурса] <> 0;
							Если ЕстьДанныеВСтроке Тогда
								Прервать;
							КонецЕсли;
						КонецЦикла;
						Если ЕстьДанныеВСтроке Тогда
							ЗаполнитьЗначенияСвойств(ВспомогательнаяТаблицаФизическогоЛица.Добавить(), СтрокаТЗ);
						КонецЕсли;
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
			Если Не ОкончательныйРасчет И ВспомогательнаяТаблицаФизическогоЛица.Количество() > 0 Тогда
				ПереписатьМежрасчетныйНДФЛФизическогоЛицаВРезультатБО(РезультатыРасчетов, ВспомогательнаяТаблицаФизическогоЛица, ДатаУдержанияИсчисленногоНалога, МесяцРасчета);
			Иначе
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВспомогательнаяТаблицаФизическогоЛица, РезультатыРасчетов)
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Расчет по каждой дате получения дохода
	Если ПоследнийМесяцНалоговогоПериода >= ДатаИзмененияИсчисленияДляИностранцев Тогда
		
		ВспомогательнаяТаблицаМесяца = РезультатыРасчетов.СкопироватьКолонки();
		ВспомогательнаяТаблицаФизическогоЛица = РезультатыРасчетов.СкопироватьКолонки();
		ВспомогательнаяТаблицаВычетовМесяца = РезультатыРасчетов.СкопироватьКолонки();
		
		ЭтоПерерасчет = Не ЭтоРасчетПоДоходамТекущегоМесяца;
		ПереноситьДоходДляПримененияВычетовВМесяцРасчета = Не ОкончательныйРасчет И Год(МесяцРасчета) = Год(ДатаУдержанияИсчисленногоНалога) И МесяцРасчета < НачалоМесяца(ДатаУдержанияИсчисленногоНалога);
		ОсобыеКатегорииДохода = Новый Соответствие;
		ОсобыеКатегорииДохода.Вставить(Перечисления.КатегорииДоходовНДФЛ.Дивиденды, Истина);
		ОсобыеКатегорииДохода.Вставить(Перечисления.КатегорииДоходовНДФЛ.ДивидендыПоСтавке05, Истина);
		ОсобыеКатегорииДохода.Вставить(Перечисления.КатегорииДоходовНДФЛ.ДивидендыПоСтавке10, Истина);
		ОсобыеКатегорииДохода.Вставить(Перечисления.КатегорииДоходовНДФЛ.ДивидендыПоСтавке12, Истина);
		ОсобыеКатегорииДохода.Вставить(Перечисления.КатегорииДоходовНДФЛ.АвторскиеРоялтиПоСтавке03, Истина);
		ОсобыеКатегорииДохода.Вставить(Перечисления.КатегорииДоходовНДФЛ.АвторскиеРоялтиПоСтавке06, Истина);
		ОсобыеКатегорииДохода.Вставить(Перечисления.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке05, Истина);
		ОсобыеКатегорииДохода.Вставить(Перечисления.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке07, Истина);
		ОсобыеКатегорииДохода.Вставить(Перечисления.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке10, Истина);
		ОсобыеКатегорииДохода.Вставить(Перечисления.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке15, Истина);
		
		СтруктураПоискаИсчисленного = Новый Структура("ФизическоеЛицо, МесяцНалоговогоПериодаДляПоиска");
		ИсчисленоРанее.Индексы.Добавить("ФизическоеЛицо,МесяцНалоговогоПериодаДляПоиска"); 
		
		СтруктураПоискаПоФизлицу = Новый Структура("ФизическоеЛицо");
		СтруктураПоискаПоДатам = Новый Структура(ПоляПоиска + ", ДатаПолученияДохода, ЗарегистрированоДляПромежуточногоРасчета");
		СтруктураПоискаПоДатам.Вставить("ИсчислятьНалогНарастающимИтогом", Истина);
		СтруктураПоискаПоДатамИПодразделениям = Новый Структура("ДатаПолученияДохода,Подразделение");
		ПоляПоискаСтандартныхВычетов = "ФизическоеЛицо,МесяцПериодаПредоставленияВычета";
		СтруктураПоискаСтандартныхВычетов = Новый Структура(ПоляПоискаСтандартныхВычетов);
		СтандартныхВычетовРанее.Индексы.Добавить(ПоляПоискаСтандартныхВычетов);
		СтруктураПоискаДоходовПоДатам = Новый Структура("ДатаПолученияДохода");
		СтруктураПоискаТекущихДоходов = Новый Структура("ДоходТекущегоРасчета, ЗарегистрированоДляПромежуточногоРасчета", Истина, Не ОкончательныйРасчет);
		РаспределениеДоходовПоПодразделениям = Результат[ВсегоРезультатов - 5 + Сдвиг].Выгрузить();
		РаспределениеДоходовПоПодразделениям.Индексы.Добавить("ФизическоеЛицо");
		
		ВыборкаРасчетов = Результат[ВсегоРезультатов - 6 + Сдвиг].Выбрать();
		Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
			
			СтруктураПоискаПоФизлицу.ФизическоеЛицо = ВыборкаРасчетов.ФизическоеЛицо;
			РаспределениеДоходовФизлица = РаспределениеДоходовПоПодразделениям.Скопировать(СтруктураПоискаПоФизлицу);
			
			ДоходыТекущегоРасчета = РаспределениеДоходовФизлица.Скопировать(СтруктураПоискаТекущихДоходов);
			ВсегоДоходовТекущегоРасчета = ДоходыТекущегоРасчета.Итог("СуммаДохода");
			Если Не ОкончательныйРасчет И ВсегоДоходовТекущегоРасчета <= 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ВспомогательнаяТаблицаФизическогоЛица.Очистить();
			
			УчтенныеОснования = Новый Массив();
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(УчтенныеОснования, ДоходыТекущегоРасчета.ВыгрузитьКолонку("ДокументОснование"), Истина);
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(УчтенныеОснования, Регистратор);
			
			ДоходыТекущегоРасчета.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода, Подразделение, ДатаПолученияДохода, КатегорияДохода", "СуммаДохода");
			
			// Подготовим распределение, которое будет использоваться при отсутствии базы соответствующего месяца.
			СтруктураПоиска.ФизическоеЛицо = ВыборкаРасчетов.ФизическоеЛицо;
			СтруктураПоискаИсчисленного.ФизическоеЛицо = ВыборкаРасчетов.ФизическоеЛицо;

			БазаРаспределения = 0;
			МесяцПоиска = НачалоМесяца(МесяцРасчета);
			Пока БазаРаспределения = 0 И Год(МесяцПоиска) = ТекущийГод Цикл
				СтруктураПоиска.МесяцНалоговогоПериода = МесяцПоиска;
				ДоходыМесяцаРасчета = РаспределениеДоходовФизлица.НайтиСтроки(СтруктураПоиска);
				БазаРаспределения = 0;
				Для каждого СтрокаРаспределения Из ДоходыМесяцаРасчета Цикл
					БазаРаспределения = БазаРаспределения + СтрокаРаспределения.СуммаДохода;
				КонецЦикла; 
				МесяцПоиска = ДобавитьМесяц(МесяцПоиска, -1);
			КонецЦикла;
			
			КоэффициентыПодразделенийМесяцаРасчета = ОбщегоНазначения.ВыгрузитьКолонку(ДоходыМесяцаРасчета, "СуммаДохода");
			
			Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("НалоговыйПериод") Цикл
				
				ВычетЛичныйОстаток = 0;
				ВычетНаДетейОстаток = 0;
				ВычетНаДетейДвойнойОстаток = 0;
				ВычетНаДетейДвойнойВторойОстаток = 0;
				ВычетНаТретьегоРебенкаОстаток = 0;
				ВычетНаТретьегоРебенкаДвойнойОстаток = 0;
				ВычетНаТретьегоРебенкаДвойнойВторойОстаток = 0;
				ВычетНаВторогоРебенкаОстаток = 0;
				ВычетНаВторогоРебенкаДвойнойОстаток = 0;
				ВычетНаВторогоРебенкаДвойнойВторойОстаток = 0;
				ВычетНаДетейИнвалидовОстаток = 0;
				ВычетНаДетейИнвалидовДвойнойОстаток = 0;
				ВычетНаДетейИнвалидовДвойнойВторойОстаток = 0;
				ВычетНаДетейОпекуновОстаток = 0;
				ВычетНаДетейДвойнойОпекуновОстаток = 0;
				ВычетНаДетейДвойнойВторойОпекуновОстаток = 0;
				ВычетНаТретьегоРебенкаОпекуновОстаток = 0;
				ВычетНаТретьегоРебенкаДвойнойОпекуновОстаток = 0;
				ВычетНаТретьегоРебенкаДвойнойВторойОпекуновОстаток = 0;
				ВычетНаВторогоРебенкаОпекуновОстаток = 0;
				ВычетНаВторогоРебенкаДвойнойОпекуновОстаток = 0;
				ВычетНаВторогоРебенкаДвойнойВторойОпекуновОстаток = 0;
				ВычетНаДетейИнвалидовОпекуновОстаток = 0;
				ВычетНаДетейИнвалидовДвойнойОпекуновОстаток = 0;
				ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток = 0;
				ВычетИмущественныйРасходыОстаток = 0;
				ВычетИмущественныйПроцентыПоКредитамОстаток = 0;
				ВычетИмущественныйПроцентыПриПерекредитованииОстаток = 0;
				ВычетРасходыНаСвоеОбучениеОстаток = 0;
				ВычетРасходыНаОбучениеДетейОстаток = 0;
				ВычетРасходыНаЛечениеОстаток = 0;
				ВычетСтраховыеВзносыНаМедУслугиОстаток = 0;
				ВычетРасходыНаДорогостоящееЛечениеОстаток = 0;
				ВычетВзносыНаДобровольноеСтрахованиеЖизниОстаток = 0;
				ВычетСоциальныйОстаток = 0;
				ОблагаемыйДоход = 0;
				ДоходЗаМесяцОстаток = 0;
				НалогИсчисленный = 0;
				ВычетыПредыдущихМесяцев = Новый Соответствие;
				ОтложенныеПраваНаВычеты = Новый Соответствие;
				ВспомогательнаяТаблицаМесяца.Очистить();
				
				ВсеДатыТекущегоРасчета = Новый Соответствие;
				ВсеКатегорииТекущегоРасчета = Новый Соответствие;
				ДатыТекущегоРасчетаПоМесяцам = Новый Соответствие;
				Для СчМесяцев = 1 По 12 Цикл
					ДатыТекущегоРасчетаПоМесяцам.Вставить(СчМесяцев,'00010101');
				КонецЦикла;
				Для каждого СтрокаТЗ Из ДоходыТекущегоРасчета Цикл
					Если Год(СтрокаТЗ.ДатаПолученияДохода) <> ВыборкаРасчетов.НалоговыйПериод Тогда
						Продолжить;
					КонецЕсли;
					ВсеДатыТекущегоРасчета.Вставить(СтрокаТЗ.ДатаПолученияДохода, Истина);
					ВсеКатегорииТекущегоРасчета.Вставить(СтрокаТЗ.КатегорияДохода, Истина);
					МесяцДаты = Месяц(СтрокаТЗ.ДатаПолученияДохода);
					ДатыТекущегоРасчетаПоМесяцам.Вставить(МесяцДаты, Макс(ДатыТекущегоРасчетаПоМесяцам[МесяцДаты], СтрокаТЗ.ДатаПолученияДохода));
				КонецЦикла;
				
				Если ОкончательныйРасчет Тогда
					ДатыРасчетаПоМесяцам = Новый Соответствие;
					ДатаНалоговогоПериода = '00010101';
					Для СчМесяцев = 1 По 12 Цикл
						ДатыРасчетаПоМесяцам.Вставить(СчМесяцев,'00010101');
					КонецЦикла;
					Для каждого СтрокаТЗ Из РаспределениеДоходовФизлица Цикл
						Если Год(СтрокаТЗ.ДатаПолученияДохода) <> ВыборкаРасчетов.НалоговыйПериод Тогда
							Продолжить;
						КонецЕсли;
						ДатаНалоговогоПериода = Макс(ДатаНалоговогоПериода, СтрокаТЗ.ДатаПолученияДохода); 
						МесяцДаты = Месяц(СтрокаТЗ.ДатаПолученияДохода);
						ДатыРасчетаПоМесяцам.Вставить(МесяцДаты, Макс(ДатыРасчетаПоМесяцам[МесяцДаты], СтрокаТЗ.ДатаПолученияДохода));
					КонецЦикла;
					
					ОсновнаяДатаМесяцаРасчетаПоТекущимДоходам = ДатыТекущегоРасчетаПоМесяцам[Месяц(МесяцРасчета)];
					ОсновнаяДатаМесяцаРасчета = ?(Год(МесяцРасчета) = ВыборкаРасчетов.НалоговыйПериод, ДатыРасчетаПоМесяцам[Месяц(МесяцРасчета)], '00010101');
					
					ДоходыМесяцаРасчетаПоТекущимДоходам = Новый Массив;
					ДоходыКонцаМесяцаРасчета = Новый Массив;
					ДоходыНалоговогоПериода = Новый Массив;
					КоэффициентыПодразделенийМесяцаРасчетаПоТекущимДоходам = Новый Массив;
					КоэффициентыПодразделенийКонцаМесяцаРасчета = Новый Массив;
					КоэффициентыПодразделенийНалоговогоПериода = Новый Массив;
					Если ЗначениеЗаполнено(ОсновнаяДатаМесяцаРасчетаПоТекущимДоходам) Тогда
						СтруктураПоискаДоходовПоДатам.ДатаПолученияДохода = ОсновнаяДатаМесяцаРасчетаПоТекущимДоходам;
						ВыделитьРаспределениеДоходов(ДоходыТекущегоРасчета, СтруктураПоискаДоходовПоДатам, ДоходыМесяцаРасчетаПоТекущимДоходам, КоэффициентыПодразделенийМесяцаРасчетаПоТекущимДоходам, Новый Массив, Новый Массив);											
					КонецЕсли;
					Если ЗначениеЗаполнено(ОсновнаяДатаМесяцаРасчета) Тогда
						СтруктураПоискаДоходовПоДатам.ДатаПолученияДохода = ОсновнаяДатаМесяцаРасчета;
						ВыделитьРаспределениеДоходов(РаспределениеДоходовФизлица, СтруктураПоискаДоходовПоДатам, ДоходыКонцаМесяцаРасчета, КоэффициентыПодразделенийКонцаМесяцаРасчета, Новый Массив, Новый Массив);											
					КонецЕсли;
					Если ЗначениеЗаполнено(ДатаНалоговогоПериода) Тогда
						СтруктураПоискаДоходовПоДатам.ДатаПолученияДохода = ДатаНалоговогоПериода;
						ВыделитьРаспределениеДоходов(РаспределениеДоходовФизлица, СтруктураПоискаДоходовПоДатам, ДоходыНалоговогоПериода, КоэффициентыПодразделенийНалоговогоПериода, Новый Массив, Новый Массив);											
					Иначе
						ДатаНалоговогоПериода = НачалоДня(КонецМесяца(МесяцРасчета))
					КонецЕсли;
				Иначе
					ОсновнаяДатаТекущегоРасчета = ДатаУдержанияИсчисленногоНалога;
					Если ВсеДатыТекущегоРасчета[ОсновнаяДатаТекущегоРасчета] = Неопределено Тогда
						Для СчМесяцев = 1 По 12 Цикл
							Если ЗначениеЗаполнено(ДатыТекущегоРасчетаПоМесяцам[13 - СчМесяцев]) Тогда
								ОсновнаяДатаТекущегоРасчета = ДатыТекущегоРасчетаПоМесяцам[13 - СчМесяцев];
								Прервать;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
				
				Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("МесяцНалоговогоПериода") Цикл
					
					Если ВыборкаРасчетов.МесяцНалоговогоПериода < ДатаИзмененияИсчисленияДляИностранцев Тогда
						Продолжить;
					КонецЕсли;
					
					ВспомогательнаяТаблицаВычетовМесяца.Очистить();
					ЗаполнитьЗначенияСвойств(СтруктураПоиска,ВыборкаРасчетов);
					ЗаполнитьЗначенияСвойств(СтруктураПоискаСтандартныхВычетов,ВыборкаРасчетов);
					СтруктураПоискаИсчисленного.МесяцНалоговогоПериодаДляПоиска = ВыборкаРасчетов.МесяцНалоговогоПериода;
					СтруктураПоискаСтандартныхВычетов.МесяцПериодаПредоставленияВычета = ВыборкаРасчетов.МесяцНалоговогоПериода;
					ЗаполнитьЗначенияСвойств(СтруктураПоискаВычетов, СтруктураПоиска);
					
					// Расчет сумм примененных вычетов
					
					ВсегоВычетовЗаМесяц = 0;
					
					ВычетСоциальныйЗаМесяц = 0;
					ВычетЛичныйЗаМесяц = 0;
					ВычетНаДетейЗаМесяц = 0;
					ВычетНаДетейДвойнойЗаМесяц = 0;
					ВычетНаДетейДвойнойВторойЗаМесяц = 0;
					ВычетНаТретьегоРебенкаЗаМесяц = 0;
					ВычетНаТретьегоРебенкаДвойнойЗаМесяц = 0;
					ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц = 0;
					ВычетНаВторогоРебенкаЗаМесяц = 0;
					ВычетНаВторогоРебенкаДвойнойЗаМесяц = 0;
					ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц = 0;
					ВычетНаДетейИнвалидовЗаМесяц = 0;
					ВычетНаДетейИнвалидовДвойнойЗаМесяц = 0;
					ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц = 0;
					ВычетНаДетейОпекуновЗаМесяц = 0;
					ВычетНаДетейДвойнойОпекуновЗаМесяц = 0;
					ВычетНаДетейДвойнойВторойОпекуновЗаМесяц = 0;
					ВычетНаТретьегоРебенкаОпекуновЗаМесяц = 0;
					ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц = 0;
					ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц = 0;
					ВычетНаВторогоРебенкаОпекуновЗаМесяц = 0;
					ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц = 0;
					ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц = 0;
					ВычетНаДетейИнвалидовОпекуновЗаМесяц = 0;
					ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц = 0;
					ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц = 0;
					ВычетИмущественныйРасходыЗаМесяц = 0;
					ВычетИмущественныйПроцентыПоКредитамЗаМесяц = 0;
					ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц = 0;
					ВычетРасходыНаСвоеОбучениеЗаМесяц = 0;
					ВычетРасходыНаОбучениеДетейЗаМесяц = 0;
					ВычетРасходыНаЛечениеЗаМесяц = 0;
					ВычетСтраховыеВзносыНаМедУслугиЗаМесяц = 0;
					ВычетРасходыНаДорогостоящееЛечениеЗаМесяц = 0;
					ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц = 0;
					
					ВычетСоциальныйОстаток = ВычетСоциальныйОстаток + ВыборкаРасчетов.СоциальныйВычет;

					СтруктураПоискаВычетов.ВидДвижения = ВидДвиженияНакопления.Приход;
					СтрокиПравНаИмущественныеВычеты = ИмущественныеВычеты.НайтиСтроки(СтруктураПоискаВычетов);

					ЕстьВычетыЗаМесяц = Ложь;
					ЗапоминатьВычетыНаБудущее = Ложь;
					ПроводитьРасчетЗаОчереднойМесяц = ВыборкаРасчетов.ВсеДоходыЗаМесяц <> 0 Или ЭтоПерерасчет;
					Если СтрокиПравНаИмущественныеВычеты.Количество() > 0 Тогда
						ВычетРасходыНаСвоеОбучениеОстаток = ВычетРасходыНаСвоеОбучениеОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетРасходыНаСвоеОбучение;
						ВычетРасходыНаОбучениеДетейОстаток = ВычетРасходыНаОбучениеДетейОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетРасходыНаОбучениеДетей;
						ВычетРасходыНаЛечениеОстаток = ВычетРасходыНаЛечениеОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетРасходыНаЛечение;
						ВычетСтраховыеВзносыНаМедУслугиОстаток = ВычетСтраховыеВзносыНаМедУслугиОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетСтраховыеВзносыНаМедУслуги;
						ВычетРасходыНаДорогостоящееЛечениеОстаток = ВычетРасходыНаДорогостоящееЛечениеОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетРасходыНаДорогостоящееЛечение;
						ВычетВзносыНаДобровольноеСтрахованиеЖизниОстаток = ВычетВзносыНаДобровольноеСтрахованиеЖизниОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетВзносыНаДобровольноеСтрахованиеЖизни;
						ВычетИмущественныйРасходыОстаток = ВычетИмущественныйРасходыОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетИмущественныйРасходы;
						ВычетИмущественныйПроцентыПоКредитамОстаток = ВычетИмущественныйПроцентыПоКредитамОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетИмущественныйПроцентыПоКредитам;
						ВычетИмущественныйПроцентыПриПерекредитованииОстаток = ВычетИмущественныйПроцентыПриПерекредитованииОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетИмущественныйПроцентыПриПерекредитовании;
					КонецЕсли;
					Если ОсобенностиУчетаВычетов = Перечисления.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом Тогда
						Если ПереноситьДоходДляПримененияВычетовВМесяцРасчета И ВыборкаРасчетов.МесяцНалоговогоПериода = НачалоМесяца(МесяцРасчета) Тогда
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток + ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц + ВсегоДоходовТекущегоРасчета;
							ЗапоминатьВычетыНаБудущее = Истина;
						ИначеЕсли ПереноситьДоходДляПримененияВычетовВМесяцРасчета И ВыборкаРасчетов.МесяцНалоговогоПериода = НачалоМесяца(ДатаУдержанияИсчисленногоНалога) Тогда
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток + ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц - ВсегоДоходовТекущегоРасчета;
						Иначе
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток + ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц;
						КонецЕсли;
						ВычетЛичныйОстаток = ВычетЛичныйОстаток + ВыборкаРасчетов.СтандартныеВычетыЛичные;
						ВычетНаДетейОстаток = ВычетНаДетейОстаток + ВыборкаРасчетов.СтандартныеВычетыДетские;
						ВычетНаДетейДвойнойОстаток = ВычетНаДетейДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойные;
						ВычетНаДетейДвойнойВторойОстаток = ВычетНаДетейДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеВторые;
						ВычетНаТретьегоРебенкаОстаток = ВычетНаТретьегоРебенкаОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенка;
						ВычетНаТретьегоРебенкаДвойнойОстаток = ВычетНаТретьегоРебенкаДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойные;
						ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые;
						ВычетНаВторогоРебенкаОстаток = ВычетНаВторогоРебенкаОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенка;
						ВычетНаВторогоРебенкаДвойнойОстаток = ВычетНаВторогоРебенкаДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойные;
						ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВычетНаВторогоРебенкаДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеВторые;
						ВычетНаДетейИнвалидовОстаток = ВычетНаДетейИнвалидовОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидов;
						ВычетНаДетейИнвалидовДвойнойОстаток = ВычетНаДетейИнвалидовДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойные;
						ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВычетНаДетейИнвалидовДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеВторые;
						ВычетНаДетейОпекуновОстаток = ВычетНаДетейОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеОпекунов;
						ВычетНаДетейДвойнойОпекуновОстаток = ВычетНаДетейДвойнойОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеОпекунов;
						ВычетНаДетейДвойнойВторойОпекуновОстаток = ВычетНаДетейДвойнойВторойОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеВторыеОпекунов;
						ВычетНаТретьегоРебенкаОпекуновОстаток = ВычетНаТретьегоРебенкаОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаОпекунов;
						ВычетНаТретьегоРебенкаДвойнойОпекуновОстаток = ВычетНаТретьегоРебенкаДвойнойОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеОпекунов;
						ВычетНаТретьегоРебенкаДвойнойВторойОпекуновОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторыеОпекунов;
						ВычетНаВторогоРебенкаОпекуновОстаток = ВычетНаВторогоРебенкаОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаОпекунов;
						ВычетНаВторогоРебенкаДвойнойОпекуновОстаток = ВычетНаВторогоРебенкаДвойнойОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеОпекунов;
						ВычетНаВторогоРебенкаДвойнойВторойОпекуновОстаток = ВычетНаВторогоРебенкаДвойнойВторойОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеВторыеОпекунов;
						ВычетНаДетейИнвалидовОпекуновОстаток = ВычетНаДетейИнвалидовОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовОпекунов;
						ВычетНаДетейИнвалидовДвойнойОпекуновОстаток = ВычетНаДетейИнвалидовДвойнойОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеОпекунов;
						ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток = ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеВторыеОпекунов;
					Иначе
						ДоходЗаМесяцОстаток = ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц;
						ВычетЛичныйОстаток = ВыборкаРасчетов.СтандартныеВычетыЛичные;
						ВычетНаДетейОстаток = ВыборкаРасчетов.СтандартныеВычетыДетские;
						ВычетНаДетейДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойные;
						ВычетНаДетейДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеВторые;
						ВычетНаТретьегоРебенкаОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенка;
						ВычетНаТретьегоРебенкаДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойные;
						ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые;
						ВычетНаВторогоРебенкаОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенка;
						ВычетНаВторогоРебенкаДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойные;
						ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеВторые;
						ВычетНаДетейИнвалидовОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидов;
						ВычетНаДетейИнвалидовДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойные;
						ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеВторые;
						ВычетНаДетейОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеОпекунов;
						ВычетНаДетейДвойнойОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеОпекунов;
						ВычетНаДетейДвойнойВторойОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеВторыеОпекунов;
						ВычетНаТретьегоРебенкаОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаОпекунов;
						ВычетНаТретьегоРебенкаДвойнойОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеОпекунов;
						ВычетНаТретьегоРебенкаДвойнойВторойОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторыеОпекунов;
						ВычетНаВторогоРебенкаОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаОпекунов;
						ВычетНаВторогоРебенкаДвойнойОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеОпекунов;
						ВычетНаВторогоРебенкаДвойнойВторойОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеВторыеОпекунов;
						ВычетНаДетейИнвалидовОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовОпекунов;
						ВычетНаДетейИнвалидовДвойнойОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеОпекунов;
						ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеВторыеОпекунов;
					КонецЕсли;
						
					// Перенесем ранее предоставленные при исчислении налога для будущих дат получения дохода вычеты 
					// текущего месяца на тот месяц, когда их предоставили на самом деле.
					// Манипуляции производим с правами на стандартные вычеты и со строками зарегистрированных вычетов.
					Для каждого Элемент Из ОтложенныеПраваНаВычеты Цикл
						ТекущийВычет = Элемент.Значение;
						Если Элемент.Ключ.МесяцНалоговогоПериода = ВыборкаРасчетов.МесяцНалоговогоПериода Тогда
							ВычетЛичныйОстаток = ВычетЛичныйОстаток + ТекущийВычет.ПримененныйВычетЛичный;
							ВычетНаДетейОстаток = ВычетНаДетейОстаток + ТекущийВычет.ПримененныйВычетНаДетей;
							ВычетНаДетейДвойнойОстаток = ВычетНаДетейДвойнойОстаток + ТекущийВычет.ПримененныйВычетНаДетейДвойной;
							ВычетНаДетейДвойнойВторойОстаток = ВычетНаДетейДвойнойВторойОстаток + ТекущийВычет.ПримененныйВычетНаДетейДвойнойВторой;
							ВычетНаВторогоРебенкаОстаток = ВычетНаВторогоРебенкаОстаток + ТекущийВычет.ПримененныйВычетНаВторогоРебенка;
							ВычетНаВторогоРебенкаДвойнойОстаток = ВычетНаВторогоРебенкаДвойнойОстаток + ТекущийВычет.ПримененныйВычетНаВторогоРебенкаДвойной;
							ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВычетНаВторогоРебенкаДвойнойВторойОстаток + ТекущийВычет.ПримененныйВычетНаВторогоРебенкаДвойнойВторой;
							ВычетНаТретьегоРебенкаОстаток = ВычетНаТретьегоРебенкаОстаток + ТекущийВычет.ПримененныйВычетНаТретьегоРебенка;
							ВычетНаТретьегоРебенкаДвойнойОстаток = ВычетНаТретьегоРебенкаДвойнойОстаток + ТекущийВычет.ПримененныйВычетНаТретьегоРебенкаДвойной;
							ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОстаток + ТекущийВычет.ПримененныйВычетНаТретьегоРебенкаДвойнойВторой;
							ВычетНаДетейИнвалидовОстаток = ВычетНаДетейИнвалидовОстаток + ТекущийВычет.ПримененныйВычетНаДетейИнвалидов;
							ВычетНаДетейИнвалидовДвойнойОстаток = ВычетНаДетейИнвалидовДвойнойОстаток + ТекущийВычет.ПримененныйВычетНаДетейИнвалидовДвойной;
							ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВычетНаДетейИнвалидовДвойнойВторойОстаток + ТекущийВычет.ПримененныйВычетНаДетейИнвалидовДвойнойВторой;
							ВычетНаДетейОпекуновОстаток = ВычетНаДетейОпекуновОстаток + ТекущийВычет.ПримененныйВычетНаДетейОпекунов;
							ВычетНаДетейДвойнойОпекуновОстаток = ВычетНаДетейДвойнойОпекуновОстаток + ТекущийВычет.ПримененныйВычетНаДетейДвойнойОпекунов;
							ВычетНаДетейДвойнойВторойОпекуновОстаток = ВычетНаДетейДвойнойВторойОпекуновОстаток + ТекущийВычет.ПримененныйВычетНаДетейДвойнойВторойОпекунов;
							ВычетНаТретьегоРебенкаОпекуновОстаток = ВычетНаТретьегоРебенкаОпекуновОстаток + ТекущийВычет.ПримененныйВычетНаТретьегоРебенкаОпекунов;
							ВычетНаТретьегоРебенкаДвойнойОпекуновОстаток = ВычетНаТретьегоРебенкаДвойнойОпекуновОстаток + ТекущийВычет.ПримененныйВычетНаТретьегоРебенкаДвойнойОпекунов;
							ВычетНаТретьегоРебенкаДвойнойВторойОпекуновОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОпекуновОстаток + ТекущийВычет.ПримененныйВычетНаТретьегоРебенкаДвойнойВторойОпекунов;
							ВычетНаВторогоРебенкаОпекуновОстаток = ВычетНаВторогоРебенкаОпекуновОстаток + ТекущийВычет.ПримененныйВычетНаВторогоРебенкаОпекунов;
							ВычетНаВторогоРебенкаДвойнойОпекуновОстаток = ВычетНаВторогоРебенкаДвойнойОпекуновОстаток + ТекущийВычет.ПримененныйВычетНаВторогоРебенкаДвойнойОпекунов;
							ВычетНаВторогоРебенкаДвойнойВторойОпекуновОстаток = ВычетНаВторогоРебенкаДвойнойВторойОпекуновОстаток + ТекущийВычет.ПримененныйВычетНаВторогоРебенкаДвойнойВторойОпекунов;
							ВычетНаДетейИнвалидовОпекуновОстаток = ВычетНаДетейИнвалидовОпекуновОстаток + ТекущийВычет.ПримененныйВычетНаДетейИнвалидовОпекунов;
							ВычетНаДетейИнвалидовДвойнойОпекуновОстаток = ВычетНаДетейИнвалидовДвойнойОпекуновОстаток + ТекущийВычет.ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов;
							ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток = ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток + ТекущийВычет.ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов;
							ОтложенныеПраваНаВычеты.Удалить(Элемент.Ключ);
						КонецЕсли;
					КонецЦикла;
					СтрокиСтандартныхВычетов = СтандартныхВычетовРанее.НайтиСтроки(СтруктураПоискаСтандартныхВычетов);
					Для каждого СтрокаТЗ Из СтрокиСтандартныхВычетов Цикл
						Если СтрокаТЗ.МесяцНалоговогоПериода <= ВыборкаРасчетов.МесяцНалоговогоПериода Тогда
							Продолжить;	
						КонецЕсли;
						ВычетыКЗачету = Новый Структура;
						Если СтрокаТЗ.ПримененныйВычетЛичный < 0 И ВычетЛичныйОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетЛичный, ВычетЛичныйОстаток);
							ВычетЛичныйОстаток = ВычетЛичныйОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетЛичный", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаДетей < 0 И ВычетНаДетейОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаДетей, ВычетНаДетейОстаток);
							ВычетНаДетейОстаток = ВычетНаДетейОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаДетей", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаДетейДвойной < 0 И ВычетНаДетейДвойнойОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаДетейДвойной, ВычетНаДетейДвойнойОстаток);
							ВычетНаДетейДвойнойОстаток = ВычетНаДетейДвойнойОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаДетейДвойной", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаДетейДвойнойВторой < 0 И ВычетНаДетейДвойнойВторойОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаДетейДвойнойВторой, ВычетНаДетейДвойнойВторойОстаток);
							ВычетНаДетейДвойнойВторойОстаток = ВычетНаДетейДвойнойВторойОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаДетейДвойнойВторой", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаВторогоРебенка < 0 И ВычетНаВторогоРебенкаОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаВторогоРебенка, ВычетНаВторогоРебенкаОстаток);
							ВычетНаВторогоРебенкаОстаток = ВычетНаВторогоРебенкаОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаВторогоРебенка", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаВторогоРебенкаДвойной < 0 И ВычетНаВторогоРебенкаДвойнойОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаВторогоРебенкаДвойной, ВычетНаВторогоРебенкаДвойнойОстаток);
							ВычетНаВторогоРебенкаДвойнойОстаток = ВычетНаВторогоРебенкаДвойнойОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаВторогоРебенкаДвойной", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаВторогоРебенкаДвойнойВторой < 0 И ВычетНаВторогоРебенкаДвойнойВторойОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаВторогоРебенкаДвойнойВторой, ВычетНаВторогоРебенкаДвойнойВторойОстаток);
							ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВычетНаВторогоРебенкаДвойнойВторойОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаВторогоРебенкаДвойнойВторой", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаТретьегоРебенка < 0 И ВычетНаТретьегоРебенкаОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаТретьегоРебенка, ВычетНаТретьегоРебенкаОстаток);
							ВычетНаТретьегоРебенкаОстаток = ВычетНаТретьегоРебенкаОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаТретьегоРебенка", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаТретьегоРебенкаДвойной < 0 И ВычетНаТретьегоРебенкаДвойнойОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаТретьегоРебенкаДвойной, ВычетНаТретьегоРебенкаДвойнойОстаток);
							ВычетНаТретьегоРебенкаДвойнойОстаток = ВычетНаТретьегоРебенкаДвойнойОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаТретьегоРебенкаДвойной", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаТретьегоРебенкаДвойнойВторой < 0 И ВычетНаТретьегоРебенкаДвойнойВторойОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаТретьегоРебенкаДвойнойВторой, ВычетНаТретьегоРебенкаДвойнойВторойОстаток);
							ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаТретьегоРебенкаДвойнойВторой", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаДетейИнвалидов < 0 И ВычетНаДетейИнвалидовОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаДетейИнвалидов, ВычетНаДетейИнвалидовОстаток);
							ВычетНаДетейИнвалидовОстаток = ВычетНаДетейИнвалидовОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаДетейИнвалидов", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаДетейИнвалидовДвойной < 0 И ВычетНаДетейИнвалидовДвойнойОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаДетейИнвалидовДвойной, ВычетНаДетейИнвалидовДвойнойОстаток);
							ВычетНаДетейИнвалидовДвойнойОстаток = ВычетНаДетейИнвалидовДвойнойОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаДетейИнвалидовДвойной", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаДетейИнвалидовДвойнойВторой < 0 И ВычетНаДетейИнвалидовДвойнойВторойОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаДетейИнвалидовДвойнойВторой, ВычетНаДетейИнвалидовДвойнойВторойОстаток);
							ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВычетНаДетейИнвалидовДвойнойВторойОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаДетейИнвалидовДвойнойВторой", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаДетейОпекунов < 0 И ВычетНаДетейОпекуновОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаДетейОпекунов, ВычетНаДетейОпекуновОстаток);
							ВычетНаДетейОпекуновОстаток = ВычетНаДетейОпекуновОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаДетейОпекунов", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаДетейДвойнойОпекунов < 0 И ВычетНаДетейДвойнойОпекуновОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаДетейДвойнойОпекунов, ВычетНаДетейДвойнойОпекуновОстаток);
							ВычетНаДетейДвойнойОпекуновОстаток = ВычетНаДетейДвойнойОпекуновОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаДетейДвойнойОпекунов", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаДетейДвойнойВторойОпекунов < 0 И ВычетНаДетейДвойнойВторойОпекуновОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаДетейДвойнойВторойОпекунов, ВычетНаДетейДвойнойВторойОпекуновОстаток);
							ВычетНаДетейДвойнойВторойОпекуновОстаток = ВычетНаДетейДвойнойВторойОпекуновОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаДетейДвойнойВторойОпекунов", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаТретьегоРебенкаОпекунов < 0 И ВычетНаТретьегоРебенкаОпекуновОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаТретьегоРебенкаОпекунов, ВычетНаТретьегоРебенкаОпекуновОстаток);
							ВычетНаТретьегоРебенкаОпекуновОстаток = ВычетНаТретьегоРебенкаОпекуновОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаТретьегоРебенкаОпекунов", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаТретьегоРебенкаДвойнойОпекунов < 0 И ВычетНаТретьегоРебенкаДвойнойОпекуновОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаТретьегоРебенкаДвойнойОпекунов, ВычетНаТретьегоРебенкаДвойнойОпекуновОстаток);
							ВычетНаТретьегоРебенкаДвойнойОпекуновОстаток = ВычетНаТретьегоРебенкаДвойнойОпекуновОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаТретьегоРебенкаДвойнойОпекунов", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаТретьегоРебенкаДвойнойВторойОпекунов < 0 И ВычетНаТретьегоРебенкаДвойнойВторойОпекуновОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаТретьегоРебенкаДвойнойВторойОпекунов, ВычетНаТретьегоРебенкаДвойнойВторойОпекуновОстаток);
							ВычетНаТретьегоРебенкаДвойнойВторойОпекуновОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОпекуновОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаТретьегоРебенкаДвойнойВторойОпекунов", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаВторогоРебенкаОпекунов < 0 И ВычетНаВторогоРебенкаОпекуновОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаВторогоРебенкаОпекунов, ВычетНаВторогоРебенкаОпекуновОстаток);
							ВычетНаВторогоРебенкаОпекуновОстаток = ВычетНаВторогоРебенкаОпекуновОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаВторогоРебенкаОпекунов", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаВторогоРебенкаДвойнойОпекунов < 0 И ВычетНаВторогоРебенкаДвойнойОпекуновОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаВторогоРебенкаДвойнойОпекунов, ВычетНаВторогоРебенкаДвойнойОпекуновОстаток);
							ВычетНаВторогоРебенкаДвойнойОпекуновОстаток = ВычетНаВторогоРебенкаДвойнойОпекуновОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаВторогоРебенкаДвойнойОпекунов", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаВторогоРебенкаДвойнойВторойОпекунов < 0 И ВычетНаВторогоРебенкаДвойнойВторойОпекуновОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаВторогоРебенкаДвойнойВторойОпекунов, ВычетНаВторогоРебенкаДвойнойВторойОпекуновОстаток);
							ВычетНаВторогоРебенкаДвойнойВторойОпекуновОстаток = ВычетНаВторогоРебенкаДвойнойВторойОпекуновОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаВторогоРебенкаДвойнойВторойОпекунов", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаДетейИнвалидовОпекунов < 0 И ВычетНаДетейИнвалидовОпекуновОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаДетейИнвалидовОпекунов, ВычетНаДетейИнвалидовОпекуновОстаток);
							ВычетНаДетейИнвалидовОпекуновОстаток = ВычетНаДетейИнвалидовОпекуновОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаДетейИнвалидовОпекунов", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов < 0 И ВычетНаДетейИнвалидовДвойнойОпекуновОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов, ВычетНаДетейИнвалидовДвойнойОпекуновОстаток);
							ВычетНаДетейИнвалидовДвойнойОпекуновОстаток = ВычетНаДетейИнвалидовДвойнойОпекуновОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов", ВычетКЗачету)
						КонецЕсли;
						Если СтрокаТЗ.ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов < 0 И ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток > 0 Тогда
							ВычетКЗачету = Мин(-СтрокаТЗ.ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов, ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток);
							ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток = ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток - ВычетКЗачету;
							ВычетыКЗачету.Вставить("ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов", ВычетКЗачету)
						КонецЕсли;
						Если ВычетыКЗачету.Количество() > 0 Тогда
							СтрокаТЗ.МесяцПериодаПредоставленияВычета = СтрокаТЗ.МесяцНалоговогоПериода;
							Для каждого ИмяРесурса Из МассивРесурсов Цикл
								Если Не ВычетыКЗачету.Свойство(ИмяРесурса) Тогда
									ВычетыКЗачету.Вставить(ИмяРесурса, 0)
								КонецЕсли;
							КонецЦикла; 
							ОтложенныеПраваНаВычеты.Вставить(СтрокаТЗ, ВычетыКЗачету);
						КонецЕсли;
					КонецЦикла;
					// Если вычеты перенесли, надо обновить зарегистрированные вычеты текущего месяца.
					Если ОтложенныеПраваНаВычеты.Количество() > 0 Тогда
						СтрокиСтандартныхВычетов = Неопределено;
					КонецЕсли;
					
					Если ДоходЗаМесяцОстаток > 0 И ВыборкаРасчетов.МесяцНалоговогоПериода <= ВыборкаРасчетов.СтаршийМесяцПолученияДохода Тогда
						
						ВычетСоциальныйЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетСоциальныйОстаток);
						ВычетСоциальныйОстаток = ВычетСоциальныйОстаток - ВычетСоциальныйЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетСоциальныйЗаМесяц;
						
						ВычетНаДетейЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейОстаток);
						ВычетНаДетейОстаток = ВычетНаДетейОстаток - ВычетНаДетейЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейЗаМесяц;
						
						ВычетНаДетейДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейДвойнойОстаток);
						ВычетНаДетейДвойнойОстаток = ВычетНаДетейДвойнойОстаток - ВычетНаДетейДвойнойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейДвойнойЗаМесяц;
						
						ВычетНаДетейДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейДвойнойВторойОстаток);
						ВычетНаДетейДвойнойВторойОстаток = ВычетНаДетейДвойнойВторойОстаток - ВычетНаДетейДвойнойВторойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейДвойнойВторойЗаМесяц;
						
						ВычетНаВторогоРебенкаЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаОстаток);
						ВычетНаВторогоРебенкаОстаток = ВычетНаВторогоРебенкаОстаток - ВычетНаВторогоРебенкаЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаЗаМесяц;
						
						ВычетНаВторогоРебенкаДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаДвойнойОстаток);
						ВычетНаВторогоРебенкаДвойнойОстаток = ВычетНаВторогоРебенкаДвойнойОстаток - ВычетНаВторогоРебенкаДвойнойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаДвойнойЗаМесяц;
						
						ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаДвойнойВторойОстаток);
						ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВычетНаВторогоРебенкаДвойнойВторойОстаток - ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц;
						
						ВычетНаТретьегоРебенкаЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаОстаток);
						ВычетНаТретьегоРебенкаОстаток = ВычетНаТретьегоРебенкаОстаток - ВычетНаТретьегоРебенкаЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаЗаМесяц;
						
						ВычетНаТретьегоРебенкаДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаДвойнойОстаток);
						ВычетНаТретьегоРебенкаДвойнойОстаток = ВычетНаТретьегоРебенкаДвойнойОстаток - ВычетНаТретьегоРебенкаДвойнойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаДвойнойЗаМесяц;
						
						ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаДвойнойВторойОстаток);
						ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОстаток - ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц;
						
						ВычетНаДетейИнвалидовЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовОстаток);
						ВычетНаДетейИнвалидовОстаток = ВычетНаДетейИнвалидовОстаток - ВычетНаДетейИнвалидовЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовЗаМесяц;
						
						ВычетНаДетейИнвалидовДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовДвойнойОстаток);
						ВычетНаДетейИнвалидовДвойнойОстаток = ВычетНаДетейИнвалидовДвойнойОстаток - ВычетНаДетейИнвалидовДвойнойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовДвойнойЗаМесяц;
						
						ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовДвойнойВторойОстаток);
						ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВычетНаДетейИнвалидовДвойнойВторойОстаток - ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц;
						
						ВычетНаДетейОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейОпекуновОстаток);
						ВычетНаДетейОпекуновОстаток = ВычетНаДетейОпекуновОстаток - ВычетНаДетейОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейОпекуновЗаМесяц;
						
						ВычетНаДетейДвойнойОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейДвойнойОпекуновОстаток);
						ВычетНаДетейДвойнойОпекуновОстаток = ВычетНаДетейДвойнойОпекуновОстаток - ВычетНаДетейДвойнойОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейДвойнойОпекуновЗаМесяц;
						
						ВычетНаДетейДвойнойВторойОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейДвойнойВторойОпекуновОстаток);
						ВычетНаДетейДвойнойВторойОпекуновОстаток = ВычетНаДетейДвойнойВторойОпекуновОстаток - ВычетНаДетейДвойнойВторойОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейДвойнойВторойОпекуновЗаМесяц;
						
						ВычетНаВторогоРебенкаОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаОпекуновОстаток);
						ВычетНаВторогоРебенкаОпекуновОстаток = ВычетНаВторогоРебенкаОпекуновОстаток - ВычетНаВторогоРебенкаОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаОпекуновЗаМесяц;
						
						ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаДвойнойОпекуновОстаток);
						ВычетНаВторогоРебенкаДвойнойОпекуновОстаток = ВычетНаВторогоРебенкаДвойнойОпекуновОстаток - ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц;
						
						ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаДвойнойВторойОпекуновОстаток);
						ВычетНаВторогоРебенкаДвойнойВторойОпекуновОстаток = ВычетНаВторогоРебенкаДвойнойВторойОпекуновОстаток - ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц;
						
						ВычетНаТретьегоРебенкаОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаОпекуновОстаток);
						ВычетНаТретьегоРебенкаОпекуновОстаток = ВычетНаТретьегоРебенкаОпекуновОстаток - ВычетНаТретьегоРебенкаОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаОпекуновЗаМесяц;
						
						ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаДвойнойОпекуновОстаток);
						ВычетНаТретьегоРебенкаДвойнойОпекуновОстаток = ВычетНаТретьегоРебенкаДвойнойОпекуновОстаток - ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц;
						
						ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаДвойнойВторойОпекуновОстаток);
						ВычетНаТретьегоРебенкаДвойнойВторойОпекуновОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОпекуновОстаток - ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц;
						
						ВычетНаДетейИнвалидовОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовОпекуновОстаток);
						ВычетНаДетейИнвалидовОпекуновОстаток = ВычетНаДетейИнвалидовОпекуновОстаток - ВычетНаДетейИнвалидовОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовОпекуновЗаМесяц;
						
						ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовДвойнойОпекуновОстаток);
						ВычетНаДетейИнвалидовДвойнойОпекуновОстаток = ВычетНаДетейИнвалидовДвойнойОпекуновОстаток - ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц;
						
						ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток);
						ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток = ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток - ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц;
						
						ВычетЛичныйЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетЛичныйОстаток);
						ВычетЛичныйОстаток = ВычетЛичныйОстаток - ВычетЛичныйЗаМесяц;
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетЛичныйЗаМесяц;
						
						ДоходЗаМесяцДляИмущественныхВычетов = Макс(0, ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц - ВычетСоциальныйЗаМесяц - ВычетЛичныйЗаМесяц 
							- ВычетНаДетейЗаМесяц - ВычетНаДетейДвойнойЗаМесяц - ВычетНаДетейДвойнойВторойЗаМесяц 
							- ВычетНаТретьегоРебенкаЗаМесяц - ВычетНаТретьегоРебенкаДвойнойЗаМесяц - ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц 
							- ВычетНаВторогоРебенкаЗаМесяц - ВычетНаВторогоРебенкаДвойнойЗаМесяц - ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц 
							- ВычетНаДетейИнвалидовЗаМесяц - ВычетНаДетейИнвалидовДвойнойЗаМесяц - ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц
							- ВычетНаДетейОпекуновЗаМесяц - ВычетНаДетейДвойнойОпекуновЗаМесяц - ВычетНаДетейДвойнойВторойОпекуновЗаМесяц 
							- ВычетНаТретьегоРебенкаОпекуновЗаМесяц - ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц - ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц 
							- ВычетНаВторогоРебенкаОпекуновЗаМесяц - ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц - ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц 
							- ВычетНаДетейИнвалидовОпекуновЗаМесяц - ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц - ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц);
						
						// Для расчета имущественных вычетов учтем ранее не учтенные из-за отсутствия дохода в предшествующих месяцах
						// налогового периода вычеты.
						Для каждого Элемент Из ВычетыПредыдущихМесяцев Цикл
							Если Элемент.Ключ < ВыборкаРасчетов.МесяцНалоговогоПериода Тогда
								ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - Мин(ДоходЗаМесяцДляИмущественныхВычетов, Элемент.Значение);
								Если ДоходЗаМесяцДляИмущественныхВычетов = 0 Тогда
									Прервать;
								КонецЕсли;	
							КонецЕсли;
						КонецЦикла;
							
						Если ДоходЗаМесяцДляИмущественныхВычетов > 0 И (ВыборкаРасчетов.ВсеДоходыЗаМесяц <> 0 Или ЭтоПерерасчет) Тогда
							
							ВычетРасходыНаДорогостоящееЛечениеЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетРасходыНаДорогостоящееЛечениеОстаток);
							ВычетРасходыНаДорогостоящееЛечениеОстаток = ВычетРасходыНаДорогостоящееЛечениеОстаток - ВычетРасходыНаДорогостоящееЛечениеЗаМесяц;
							ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетРасходыНаДорогостоящееЛечениеЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетРасходыНаДорогостоящееЛечениеЗаМесяц;
							
							ВычетСтраховыеВзносыНаМедУслугиЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетСтраховыеВзносыНаМедУслугиОстаток);
							ВычетСтраховыеВзносыНаМедУслугиОстаток = ВычетСтраховыеВзносыНаМедУслугиОстаток - ВычетСтраховыеВзносыНаМедУслугиЗаМесяц;
							ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетСтраховыеВзносыНаМедУслугиЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетСтраховыеВзносыНаМедУслугиЗаМесяц;
							
							ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетВзносыНаДобровольноеСтрахованиеЖизниОстаток);
							ВычетВзносыНаДобровольноеСтрахованиеЖизниОстаток = ВычетВзносыНаДобровольноеСтрахованиеЖизниОстаток - ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц;
							ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц;
							
							ВычетРасходыНаЛечениеЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетРасходыНаЛечениеОстаток);
							ВычетРасходыНаЛечениеОстаток = ВычетРасходыНаЛечениеОстаток - ВычетРасходыНаЛечениеЗаМесяц;
							ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетРасходыНаЛечениеЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетРасходыНаЛечениеЗаМесяц;
							
							ВычетРасходыНаОбучениеДетейЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетРасходыНаОбучениеДетейОстаток);
							ВычетРасходыНаОбучениеДетейОстаток = ВычетРасходыНаОбучениеДетейОстаток - ВычетРасходыНаОбучениеДетейЗаМесяц;
							ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетРасходыНаОбучениеДетейЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетРасходыНаОбучениеДетейЗаМесяц;
							
							ВычетРасходыНаСвоеОбучениеЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетРасходыНаСвоеОбучениеОстаток);
							ВычетРасходыНаСвоеОбучениеОстаток = ВычетРасходыНаСвоеОбучениеОстаток - ВычетРасходыНаСвоеОбучениеЗаМесяц;
							ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетРасходыНаСвоеОбучениеЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетРасходыНаСвоеОбучениеЗаМесяц;
							
							ВычетИмущественныйПроцентыПоКредитамЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетИмущественныйПроцентыПоКредитамОстаток);
							ВычетИмущественныйПроцентыПоКредитамОстаток = ВычетИмущественныйПроцентыПоКредитамОстаток - ВычетИмущественныйПроцентыПоКредитамЗаМесяц;
							ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетИмущественныйПроцентыПоКредитамЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетИмущественныйПроцентыПоКредитамЗаМесяц;
							
							ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетИмущественныйПроцентыПриПерекредитованииОстаток);
							ВычетИмущественныйПроцентыПриПерекредитованииОстаток = ВычетИмущественныйПроцентыПриПерекредитованииОстаток - ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц;
							ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц;
							
							ВычетИмущественныйРасходыЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетИмущественныйРасходыОстаток);
							ВычетИмущественныйРасходыОстаток = ВычетИмущественныйРасходыОстаток - ВычетИмущественныйРасходыЗаМесяц;
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетИмущественныйРасходыЗаМесяц;
							
						КонецЕсли;
						
						ВсегоВычетовЗаМесяц = ВсегоВычетовЗаМесяц + ВычетСоциальныйЗаМесяц + ВычетЛичныйЗаМесяц 
								+ ВычетНаДетейЗаМесяц + ВычетНаДетейДвойнойЗаМесяц + ВычетНаДетейДвойнойВторойЗаМесяц 
								+ ВычетНаТретьегоРебенкаЗаМесяц + ВычетНаТретьегоРебенкаДвойнойЗаМесяц + ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц 
								+ ВычетНаВторогоРебенкаЗаМесяц + ВычетНаВторогоРебенкаДвойнойЗаМесяц + ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц 
								+ ВычетНаДетейИнвалидовЗаМесяц + ВычетНаДетейИнвалидовДвойнойЗаМесяц + ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц 
								+ ВычетНаДетейОпекуновЗаМесяц + ВычетНаДетейДвойнойОпекуновЗаМесяц + ВычетНаДетейДвойнойВторойОпекуновЗаМесяц 
								+ ВычетНаТретьегоРебенкаОпекуновЗаМесяц + ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц + ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц 
								+ ВычетНаВторогоРебенкаОпекуновЗаМесяц + ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц + ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц 
								+ ВычетНаДетейИнвалидовОпекуновЗаМесяц + ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц + ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц 
								+ ВычетРасходыНаСвоеОбучениеЗаМесяц + ВычетРасходыНаОбучениеДетейЗаМесяц + ВычетРасходыНаЛечениеЗаМесяц + ВычетСтраховыеВзносыНаМедУслугиЗаМесяц + ВычетРасходыНаДорогостоящееЛечениеЗаМесяц + ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц
								+ ВычетИмущественныйПроцентыПоКредитамЗаМесяц + ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц + ВычетИмущественныйРасходыЗаМесяц;
						
						ЕстьВычетыЗаМесяц = ВычетСоциальныйЗаМесяц <> 0 Или ВычетЛичныйЗаМесяц <> 0 
								Или ВычетНаДетейЗаМесяц <> 0 Или ВычетНаДетейДвойнойЗаМесяц <> 0 Или ВычетНаДетейДвойнойВторойЗаМесяц <> 0 
								Или ВычетНаВторогоРебенкаЗаМесяц <> 0 Или ВычетНаВторогоРебенкаДвойнойЗаМесяц <> 0 Или ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц <> 0 
								Или ВычетНаТретьегоРебенкаЗаМесяц <> 0 Или ВычетНаТретьегоРебенкаДвойнойЗаМесяц <> 0 Или ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц <> 0 
								Или ВычетНаДетейИнвалидовЗаМесяц <> 0 Или ВычетНаДетейИнвалидовДвойнойЗаМесяц <> 0 Или ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц <> 0 
								Или ВычетНаДетейОпекуновЗаМесяц <> 0 Или ВычетНаДетейДвойнойОпекуновЗаМесяц <> 0 Или ВычетНаДетейДвойнойВторойОпекуновЗаМесяц <> 0 
								Или ВычетНаВторогоРебенкаОпекуновЗаМесяц <> 0 Или ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц <> 0 Или ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц <> 0 
								Или ВычетНаТретьегоРебенкаОпекуновЗаМесяц <> 0 Или ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц <> 0 Или ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц <> 0 
								Или ВычетНаДетейИнвалидовОпекуновЗаМесяц <> 0 Или ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц <> 0 Или ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц <> 0 
								Или ВычетРасходыНаСвоеОбучениеЗаМесяц <> 0 Или ВычетРасходыНаОбучениеДетейЗаМесяц <> 0 Или ВычетРасходыНаЛечениеЗаМесяц <> 0 Или ВычетСтраховыеВзносыНаМедУслугиЗаМесяц <> 0 Или ВычетРасходыНаДорогостоящееЛечениеЗаМесяц <> 0 Или ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц <> 0
								Или ВычетИмущественныйПроцентыПоКредитамЗаМесяц <> 0 Или ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц <> 0 Или ВычетИмущественныйРасходыЗаМесяц <> 0;
								
					КонецЕсли;
					
					// Перенесем некоторые суммы вычетов из других месяцев.
					Если ПроводитьРасчетЗаОчереднойМесяц Тогда
						// Учтем ранее не учтенные вычеты из-за отсутствия дохода в предшествующих месяцах налогового периода.
						Для каждого Элемент Из ВычетыПредыдущихМесяцев Цикл
							Если Элемент.Ключ < ВыборкаРасчетов.МесяцНалоговогоПериода Тогда
								ВсегоВычетовЗаМесяц = ВсегоВычетовЗаМесяц + Элемент.Значение;
								ВычетыПредыдущихМесяцев.Вставить(Элемент.Ключ, 0);
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
					Если ЗапоминатьВычетыНаБудущее Или ЕстьВычетыЗаМесяц И Не ПроводитьРасчетЗаОчереднойМесяц Тогда
						ВычетыПредыдущихМесяцев.Вставить(ВыборкаРасчетов.МесяцНалоговогоПериода, ?(ЗначениеЗаполнено(ВычетыПредыдущихМесяцев[ВыборкаРасчетов.МесяцНалоговогоПериода]), ВычетыПредыдущихМесяцев[ВыборкаРасчетов.МесяцНалоговогоПериода], 0) + Макс(ВсегоВычетовЗаМесяц - ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц, 0));
						ВсегоВычетовЗаМесяц = ВсегоВычетовЗаМесяц - Макс(ВсегоВычетовЗаМесяц - ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц, 0);
					КонецЕсли;
					
					ДоходыДляРаспределенияВычетов = Новый Массив;
					КоэффициентыДляРаспределенияВычетов = Новый Массив;
					
					ВыполнятьМинимизациюПерерасчетов = Ложь;
					НалогЗаМесяц = 0;
					Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("ИсчислятьНалогНарастающимИтогом") Цикл
						Если ВыборкаРасчетов.ИсчислятьНалогНарастающимИтогом Тогда
							Если ПроводитьРасчетЗаОчереднойМесяц Тогда
								// Расчет сумм налога
								ВыполнятьМинимизациюПерерасчетов = Истина;
								ОблагаемыйДоходНаНачалоМесяца = ОблагаемыйДоход;
								НалогЗаМесяц = 0;
								НачисленныйДоходЗаДату = 0;
								ИспользованоВычетовЗаМесяц = 0;
								Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("ДатаПолученияДохода") Цикл

									ОблагаемыйДоходНаНачалоМесяца = ОблагаемыйДоход;
									ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета = 0;
									ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета = 0;
									ЕстьДоходыПромежуточногоРасчета = Ложь;
									ЕстьДоходыОкончательногоРасчета = Ложь;
									Пока ВыборкаРасчетов.Следующий() Цикл
										НачисленныйДоходЗаДату = ВыборкаРасчетов.ОблагаемыйДоход;
										Если ВыборкаРасчетов.ЗарегистрированоДляПромежуточногоРасчета  Тогда 
											ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета = Мин(ВыборкаРасчетов.ОблагаемыйДоходНарастающимИтогом, Макс(0, ОблагаемыйДоходНаНачалоМесяца + ВыборкаРасчетов.ОблагаемыйДоход - ВсегоВычетовЗаМесяц));
											ЕстьДоходыПромежуточногоРасчета = Истина;
										Иначе
											ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета = Мин(ВыборкаРасчетов.ОблагаемыйДоходНарастающимИтогом, Макс(0, ОблагаемыйДоходНаНачалоМесяца + ВыборкаРасчетов.ОблагаемыйДоход - ВсегоВычетовЗаМесяц));
											ЕстьДоходыОкончательногоРасчета = Истина;
										КонецЕсли;
										ЗаполнитьЗначенияСвойств(СтруктураПоискаПоДатам, ВыборкаРасчетов);
									КонецЦикла;
									
									// Расчет сумм налога
									Если ВыборкаРасчетов.ДатаПолученияДохода < ВыборкаРасчетов.МаксимальнаяДатаПолученияДоходаМесяца Тогда
										
										Если ЕстьДоходыПромежуточногоРасчета Тогда
											
											СтруктураПоискаПоДатам.ЗарегистрированоДляПромежуточногоРасчета = Истина;
											ВыделитьРаспределениеДоходов(РаспределениеДоходовФизлица, СтруктураПоискаПоДатам, Доходы, КоэффициентыПодразделений, ДоходыМесяцаРасчета, КоэффициентыПодразделенийМесяцаРасчета);
											
											ОблагаемыйДоходДляИсчисленияНалога = Макс(0, ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета);
											НалогСДохода = Макс(Окр(ОблагаемыйДоходДляИсчисленияНалога * ВыборкаРасчетов.СтавкаДляРезидента) - НалогИсчисленный, 0);
											НалогИсчисленный = НалогИсчисленный + НалогСДохода;
											НалогЗаМесяц = НалогЗаМесяц + НалогСДохода;
											ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.ДатаПолученияДохода, НалогСДохода, "НалогПоСтавке13", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, 0, "Подразделение, КатегорияДохода");
											
										КонецЕсли;
										
										Если ЕстьДоходыОкончательногоРасчета Тогда
											
											СтруктураПоискаПоДатам.ЗарегистрированоДляПромежуточногоРасчета = Ложь;
											ВыделитьРаспределениеДоходов(РаспределениеДоходовФизлица, СтруктураПоискаПоДатам, Доходы, КоэффициентыПодразделений, ДоходыМесяцаРасчета, КоэффициентыПодразделенийМесяцаРасчета);											
											
											ОблагаемыйДоходДляИсчисленияНалога = Макс(0, ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета);
											НалогСДохода = Окр(ОблагаемыйДоходДляИсчисленияНалога * ВыборкаРасчетов.СтавкаДляРезидента) - НалогИсчисленный;
											НалогИсчисленный = НалогИсчисленный + НалогСДохода;
											НалогЗаМесяц = НалогЗаМесяц + НалогСДохода;
											ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.ДатаПолученияДохода, НалогСДохода, "НалогПоСтавке13", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, 0, "Подразделение, КатегорияДохода");
											
										КонецЕсли;
										
									Иначе
										
										Если ЕстьДоходыПромежуточногоРасчета И ЕстьДоходыОкончательногоРасчета Тогда
											
											СтруктураПоискаПоДатам.ЗарегистрированоДляПромежуточногоРасчета = Истина;
											ВыделитьРаспределениеДоходов(РаспределениеДоходовФизлица, СтруктураПоискаПоДатам, Доходы, КоэффициентыПодразделений, ДоходыМесяцаРасчета, КоэффициентыПодразделенийМесяцаРасчета);											
											ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоходыДляРаспределенияВычетов, Доходы);
											ОбщегоНазначенияКлиентСервер.ДополнитьМассив(КоэффициентыДляРаспределенияВычетов, КоэффициентыПодразделений);
											
											ОблагаемыйДоходДляИсчисленияНалога = Макс(0, ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета);
											НалогСДохода = Макс(Окр(ОблагаемыйДоходДляИсчисленияНалога * ВыборкаРасчетов.СтавкаДляРезидента) - НалогИсчисленный, 0);
											НалогИсчисленный = НалогИсчисленный + НалогСДохода;
											НалогЗаМесяц = НалогЗаМесяц + НалогСДохода;
											ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.ДатаПолученияДохода, НалогСДохода, "НалогПоСтавке13", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, 0, "Подразделение, КатегорияДохода");
											
											СтруктураПоискаПоДатам.ЗарегистрированоДляПромежуточногоРасчета = Ложь;
											ВыделитьРаспределениеДоходов(РаспределениеДоходовФизлица, СтруктураПоискаПоДатам, Доходы, КоэффициентыПодразделений, ДоходыМесяцаРасчета, КоэффициентыПодразделенийМесяцаРасчета);											
											ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоходыДляРаспределенияВычетов, Доходы);
											ОбщегоНазначенияКлиентСервер.ДополнитьМассив(КоэффициентыДляРаспределенияВычетов, КоэффициентыПодразделений);
											
											ОблагаемыйДоходДляИсчисленияНалога = Макс(0, ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета);
											НалогСДохода = Окр(ОблагаемыйДоходДляИсчисленияНалога * ВыборкаРасчетов.СтавкаДляРезидента) - НалогИсчисленный;
											НалогИсчисленный = НалогИсчисленный + НалогСДохода;
											НалогЗаМесяц = НалогЗаМесяц + НалогСДохода;
											ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.ДатаПолученияДохода, НалогСДохода, "НалогПоСтавке13", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, 0, "Подразделение, КатегорияДохода");
											
											ОблагаемыйДоход = ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета;
											
										Иначе
											
											ВыделитьРаспределениеДоходов(РаспределениеДоходовФизлица, СтруктураПоискаПоДатам, Доходы, КоэффициентыПодразделений, ДоходыМесяцаРасчета, КоэффициентыПодразделенийМесяцаРасчета);											
											ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоходыДляРаспределенияВычетов, Доходы);
											ОбщегоНазначенияКлиентСервер.ДополнитьМассив(КоэффициентыДляРаспределенияВычетов, КоэффициентыПодразделений);
											
											ОблагаемыйДоходДляИсчисленияНалога = Макс(0, ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета + ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета);
											НалогСДохода = Окр(ОблагаемыйДоходДляИсчисленияНалога * ВыборкаРасчетов.СтавкаДляРезидента) - НалогИсчисленный;
											НалогИсчисленный = НалогИсчисленный + НалогСДохода;
											НалогЗаМесяц = НалогЗаМесяц + НалогСДохода;
											ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.ДатаПолученияДохода, НалогСДохода, "НалогПоСтавке13", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, 0, "Подразделение, КатегорияДохода");
											
											ОблагаемыйДоход = ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета + ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета;
											
										КонецЕсли;
										
									КонецЕсли;
									
									Если ЕстьДоходыПромежуточногоРасчета И ЕстьДоходыОкончательногоРасчета Тогда
										ОблагаемыйДоходЗаДату = ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета;
									Иначе
										ОблагаемыйДоходЗаДату = ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета + ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета;
									КонецЕсли;
									ВсегоВычетовЗаДату = НачисленныйДоходЗаДату - (ОблагаемыйДоходЗаДату - ОблагаемыйДоходНаНачалоМесяца) - ИспользованоВычетовЗаМесяц;
									ИспользованоВычетовЗаМесяц = ИспользованоВычетовЗаМесяц + ВсегоВычетовЗаДату;
									
									Если ВсегоВычетовЗаДату * ВычетНаДетейЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетей", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейЗаМесяц = ВычетНаДетейЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейДвойнойЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейДвойнойЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейДвойнойЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейДвойнойЗаМесяц = ВычетНаДетейДвойнойЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейДвойнойВторойЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейДвойнойВторойЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейДвойнойВторойЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейДвойнойВторойЗаМесяц = ВычетНаДетейДвойнойВторойЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаВторогоРебенкаЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаВторогоРебенкаЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаВторогоРебенкаЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаВторогоРебенка", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаВторогоРебенкаЗаМесяц = ВычетНаВторогоРебенкаЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаВторогоРебенкаДвойнойЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаВторогоРебенкаДвойнойЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаВторогоРебенкаДвойнойЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаВторогоРебенкаДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаВторогоРебенкаДвойнойЗаМесяц = ВычетНаВторогоРебенкаДвойнойЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаВторогоРебенкаДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц = ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаТретьегоРебенкаЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаТретьегоРебенкаЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаТретьегоРебенкаЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаТретьегоРебенка", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаТретьегоРебенкаЗаМесяц = ВычетНаТретьегоРебенкаЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаТретьегоРебенкаДвойнойЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаТретьегоРебенкаДвойнойЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаТретьегоРебенкаДвойнойЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаТретьегоРебенкаДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаТретьегоРебенкаДвойнойЗаМесяц = ВычетНаТретьегоРебенкаДвойнойЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаТретьегоРебенкаДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц = ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейИнвалидовЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейИнвалидовЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейИнвалидовЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейИнвалидов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейИнвалидовЗаМесяц = ВычетНаДетейИнвалидовЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейИнвалидовДвойнойЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейИнвалидовДвойнойЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейИнвалидовДвойнойЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейИнвалидовДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейИнвалидовДвойнойЗаМесяц = ВычетНаДетейИнвалидовДвойнойЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейИнвалидовДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц = ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейОпекуновЗаМесяц = ВычетНаДетейОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейДвойнойОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейДвойнойОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейДвойнойОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейДвойнойОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейДвойнойОпекуновЗаМесяц = ВычетНаДетейДвойнойОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейДвойнойВторойОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейДвойнойВторойОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейДвойнойВторойОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейДвойнойВторойОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейДвойнойВторойОпекуновЗаМесяц = ВычетНаДетейДвойнойВторойОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаВторогоРебенкаОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаВторогоРебенкаОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаВторогоРебенкаОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаВторогоРебенкаОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаВторогоРебенкаОпекуновЗаМесяц = ВычетНаВторогоРебенкаОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаВторогоРебенкаДвойнойОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц = ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаВторогоРебенкаДвойнойВторойОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц = ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаТретьегоРебенкаОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаТретьегоРебенкаОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаТретьегоРебенкаОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаТретьегоРебенкаОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаТретьегоРебенкаОпекуновЗаМесяц = ВычетНаТретьегоРебенкаОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаТретьегоРебенкаДвойнойОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц = ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаТретьегоРебенкаДвойнойВторойОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц = ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейИнвалидовОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейИнвалидовОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейИнвалидовОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейИнвалидовОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейИнвалидовОпекуновЗаМесяц = ВычетНаДетейИнвалидовОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц = ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц = ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетЛичныйЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетЛичныйЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетЛичныйЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетЛичный", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетЛичныйЗаМесяц = ВычетЛичныйЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетРасходыНаДорогостоящееЛечениеЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетРасходыНаДорогостоящееЛечениеЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетРасходыНаДорогостоящееЛечениеЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетРасходыНаДорогостоящееЛечение", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетРасходыНаДорогостоящееЛечениеЗаМесяц = ВычетРасходыНаДорогостоящееЛечениеЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц = ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетСтраховыеВзносыНаМедУслугиЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетСтраховыеВзносыНаМедУслугиЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетСтраховыеВзносыНаМедУслугиЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетСтраховыеВзносыНаМедУслуги", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетСтраховыеВзносыНаМедУслугиЗаМесяц = ВычетСтраховыеВзносыНаМедУслугиЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетРасходыНаЛечениеЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетРасходыНаЛечениеЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетРасходыНаЛечениеЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетРасходыНаЛечение", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетРасходыНаЛечениеЗаМесяц = ВычетРасходыНаЛечениеЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетРасходыНаОбучениеДетейЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетРасходыНаОбучениеДетейЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетРасходыНаОбучениеДетейЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетРасходыНаОбучениеДетей", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетРасходыНаОбучениеДетейЗаМесяц = ВычетРасходыНаОбучениеДетейЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетРасходыНаСвоеОбучениеЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетРасходыНаСвоеОбучениеЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетРасходыНаСвоеОбучениеЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетРасходыНаСвоеОбучение", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетРасходыНаСвоеОбучениеЗаМесяц = ВычетРасходыНаСвоеОбучениеЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетИмущественныйПроцентыПоКредитамЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетИмущественныйПроцентыПоКредитамЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетИмущественныйПроцентыПоКредитамЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетИмущественныйПроцентыПоКредитам", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетИмущественныйПроцентыПоКредитамЗаМесяц = ВычетИмущественныйПроцентыПоКредитамЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетИмущественныйПроцентыПриПерекредитовании", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
										ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц = ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц - Учтено;
									КонецЕсли;
									Если ВсегоВычетовЗаДату * ВычетИмущественныйРасходыЗаМесяц > 0 Тогда
										Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ВычетИмущественныйРасходыЗаМесяц, ВсегоВычетовЗаДату), Макс(ВычетИмущественныйРасходыЗаМесяц, ВсегоВычетовЗаДату));
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', Учтено, "ПримененныйВычетИмущественныйРасходы", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
										ВычетИмущественныйРасходыЗаМесяц = ВычетИмущественныйРасходыЗаМесяц - Учтено;
									КонецЕсли;
									
								КонецЦикла;
							КонецЕсли;
						Иначе	
							Пока ВыборкаРасчетов.Следующий() Цикл
								
								НалогСДохода = ВыборкаРасчетов.НалогНерезидента;
								НалогЗаМесяц = НалогЗаМесяц + НалогСДохода;
								
								СтрокаНалога = ВспомогательнаяТаблицаМесяца.Добавить();
								ЗаполнитьЗначенияСвойств(СтрокаНалога, ВыборкаРасчетов, "ФизическоеЛицо, Подразделение, КатегорияДохода");
								СтрокаНалога.НалогПоСтавке13 = НалогСДохода;
								СтрокаНалога.МесяцНалоговогоПериода = ВыборкаРасчетов.ДатаПолученияДохода;
								
							КонецЦикла;
						КонецЕсли;
					КонецЦикла;
					
					// Сбор вычетов в собственной таблице значений.
					СтруктураПоискаВычетов.ВидДвижения = ВидДвиженияНакопления.Расход;
					ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаВычетовМесяца, ИмущественныеВычеты.НайтиСтроки(СтруктураПоискаВычетов), РассчитываемыеРесурсыИмущественныхВычетов());
					ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаВычетовМесяца, ?(СтрокиСтандартныхВычетов <> Неопределено, СтрокиСтандартныхВычетов, СтандартныхВычетовРанее.НайтиСтроки(СтруктураПоискаСтандартныхВычетов)), "ПримененныйВычетЛичный," + РассчитываемыеРесурсыВычетовНаДетей());
					Если ЕстьВычетыЗаМесяц Тогда
						
						Если Не ЗначениеЗаполнено(ДоходыДляРаспределенияВычетов) Тогда
							Если ОкончательныйРасчет Тогда
								Если ЗначениеЗаполнено(ОсновнаяДатаМесяцаРасчетаПоТекущимДоходам) Тогда
									ДатаМесяца = ОсновнаяДатаМесяцаРасчетаПоТекущимДоходам;
									ДоходыДляРаспределенияВычетов = ДоходыМесяцаРасчетаПоТекущимДоходам;
									КоэффициентыДляРаспределенияВычетов = КоэффициентыПодразделенийМесяцаРасчетаПоТекущимДоходам;
								ИначеЕсли ЗначениеЗаполнено(ОсновнаяДатаМесяцаРасчета) Тогда
									ДатаМесяца = ОсновнаяДатаМесяцаРасчета;
									ДоходыДляРаспределенияВычетов = ДоходыКонцаМесяцаРасчета;
									КоэффициентыДляРаспределенияВычетов = КоэффициентыПодразделенийКонцаМесяцаРасчета;
								Иначе
									ДатаМесяца = ДатаНалоговогоПериода;
									ДоходыДляРаспределенияВычетов = ДоходыНалоговогоПериода;
									КоэффициентыДляРаспределенияВычетов = КоэффициентыПодразделенийНалоговогоПериода;
								КонецЕсли;
							Иначе
								ДатаМесяца = ОсновнаяДатаТекущегоРасчета;
								СтруктураПоискаДоходовПоДатам.ДатаПолученияДохода = ОсновнаяДатаТекущегоРасчета;
								ВыделитьРаспределениеДоходов(ДоходыТекущегоРасчета, СтруктураПоискаДоходовПоДатам, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов, Новый Массив, Новый Массив);											
							КонецЕсли;
						КонецЕсли;
						
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетЛичныйЗаМесяц, "ПримененныйВычетЛичный", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейЗаМесяц, "ПримененныйВычетНаДетей", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейДвойнойЗаМесяц, "ПримененныйВычетНаДетейДвойной", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейДвойнойВторойЗаМесяц, "ПримененныйВычетНаДетейДвойнойВторой", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаТретьегоРебенкаЗаМесяц, "ПримененныйВычетНаТретьегоРебенка", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаТретьегоРебенкаДвойнойЗаМесяц, "ПримененныйВычетНаТретьегоРебенкаДвойной", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц, "ПримененныйВычетНаТретьегоРебенкаДвойнойВторой", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаВторогоРебенкаЗаМесяц, "ПримененныйВычетНаВторогоРебенка", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаВторогоРебенкаДвойнойЗаМесяц, "ПримененныйВычетНаВторогоРебенкаДвойной", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц, "ПримененныйВычетНаВторогоРебенкаДвойнойВторой", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейИнвалидовЗаМесяц, "ПримененныйВычетНаДетейИнвалидов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейИнвалидовДвойнойЗаМесяц, "ПримененныйВычетНаДетейИнвалидовДвойной", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц, "ПримененныйВычетНаДетейИнвалидовДвойнойВторой", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейОпекуновЗаМесяц, "ПримененныйВычетНаДетейОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейДвойнойОпекуновЗаМесяц, "ПримененныйВычетНаДетейДвойнойОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейДвойнойВторойОпекуновЗаМесяц, "ПримененныйВычетНаДетейДвойнойВторойОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаТретьегоРебенкаОпекуновЗаМесяц, "ПримененныйВычетНаТретьегоРебенкаОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаТретьегоРебенкаДвойнойОпекуновЗаМесяц, "ПримененныйВычетНаТретьегоРебенкаДвойнойОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаТретьегоРебенкаДвойнойВторойОпекуновЗаМесяц, "ПримененныйВычетНаТретьегоРебенкаДвойнойВторойОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаВторогоРебенкаОпекуновЗаМесяц, "ПримененныйВычетНаВторогоРебенкаОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаВторогоРебенкаДвойнойОпекуновЗаМесяц, "ПримененныйВычетНаВторогоРебенкаДвойнойОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаВторогоРебенкаДвойнойВторойОпекуновЗаМесяц, "ПримененныйВычетНаВторогоРебенкаДвойнойВторойОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейИнвалидовОпекуновЗаМесяц, "ПримененныйВычетНаДетейИнвалидовОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц, "ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц, "ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетИмущественныйРасходыЗаМесяц, "ПримененныйВычетИмущественныйРасходы", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетИмущественныйПроцентыПоКредитамЗаМесяц, "ПримененныйВычетИмущественныйПроцентыПоКредитам", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц, "ПримененныйВычетИмущественныйПроцентыПриПерекредитовании", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетРасходыНаСвоеОбучениеЗаМесяц, "ПримененныйВычетРасходыНаСвоеОбучение", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетРасходыНаОбучениеДетейЗаМесяц, "ПримененныйВычетРасходыНаОбучениеДетей", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетРасходыНаЛечениеЗаМесяц, "ПримененныйВычетРасходыНаЛечение", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетСтраховыеВзносыНаМедУслугиЗаМесяц, "ПримененныйВычетСтраховыеВзносыНаМедУслуги", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетРасходыНаДорогостоящееЛечениеЗаМесяц, "ПримененныйВычетРасходыНаДорогостоящееЛечение", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаВычетовМесяца, '00010101', ВычетВзносыНаДобровольноеСтрахованиеЖизниЗаМесяц, "ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
						
					КонецЕсли;
					
					// Переписываем вычеты в таблицу результатов расчета за месяц.
					Если ЕстьДанныеВТаблицеФизическогоЛица(ВспомогательнаяТаблицаВычетовМесяца, МассивРесурсов) Тогда
						Если ОкончательныйРасчет Тогда
							Если ВыборкаРасчетов.ВсеДоходыЗаМесяц <> 0 Или ЭтоПерерасчет Тогда
								ДатаУчетаВычетов = КонецМесяца(ВыборкаРасчетов.МесяцНалоговогоПериода)
							Иначе
								ОсновнаяДатаПолученияДохода = ДатыТекущегоРасчетаПоМесяцам[Месяц(ВыборкаРасчетов.МесяцНалоговогоПериода)];
								Если ЗначениеЗаполнено(ОсновнаяДатаПолученияДохода) Тогда
									ДатаУчетаВычетов = ОсновнаяДатаПолученияДохода;
								ИначеЕсли ЗначениеЗаполнено(ОсновнаяДатаМесяцаРасчетаПоТекущимДоходам) Тогда
									ДатаУчетаВычетов = ОсновнаяДатаМесяцаРасчетаПоТекущимДоходам;
								ИначеЕсли ЗначениеЗаполнено(ОсновнаяДатаМесяцаРасчета) Тогда
									ДатаУчетаВычетов = ОсновнаяДатаМесяцаРасчета;
								Иначе
									ДатаУчетаВычетов = ДатаНалоговогоПериода;
								КонецЕсли;
							КонецЕсли;
						Иначе
							ДатаУчетаВычетов = ОсновнаяДатаТекущегоРасчета;
						КонецЕсли;
						Если Не ЕстьВычетыЗаМесяц Тогда
							ВспомогательнаяТаблицаВычетовМесяца.ЗаполнитьЗначения(ДатаУчетаВычетов, "МесяцНалоговогоПериода");
							ВспомогательнаяТаблицаВычетовМесяца.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода, МесяцПериодаПредоставленияВычета, Подразделение, КатегорияДохода", СтрокаРесурсов);
							ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВспомогательнаяТаблицаВычетовМесяца, ВспомогательнаяТаблицаМесяца)
						Иначе
							ВспомогательнаяТаблицаВычетовМесяцаФизическогоЛица = ВспомогательнаяТаблицаВычетовМесяца.Скопировать( ,"ФизическоеЛицо, Подразделение, " + СтрокаРесурсов);
							ВспомогательнаяТаблицаВычетовМесяцаФизическогоЛица.Свернуть("ФизическоеЛицо, Подразделение", СтрокаРесурсов);
							Если ВспомогательнаяТаблицаВычетовМесяцаФизическогоЛица.Количество() = 1 Тогда
								СтрокаТЗ = ВспомогательнаяТаблицаВычетовМесяцаФизическогоЛица[0];
								Для каждого ИмяРесурса Из МассивРесурсов Цикл
									Если СтрокаТЗ[ИмяРесурса] <> 0 Тогда
										ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, СтрокаТЗ[ИмяРесурса], ИмяРесурса, СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов,, "Подразделение, КатегорияДохода");
									КонецЕсли;
								КонецЦикла;
							Иначе 	
								Для каждого СтрокаТЗ Из ВспомогательнаяТаблицаВычетовМесяцаФизическогоЛица Цикл
									Доходы = Новый Массив;
									Для каждого СтрокаРаспределения Из ДоходыДляРаспределенияВычетов Цикл
										Если СтрокаРаспределения.Подразделение = СтрокаТЗ.Подразделение Тогда
											Доходы.Добавить(СтрокаРаспределения)
										КонецЕсли;
									КонецЦикла;
									Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(Доходы, "СуммаДохода");
									Для каждого ИмяРесурса Из МассивРесурсов Цикл
										Если СтрокаТЗ[ИмяРесурса] <> 0 Тогда
											ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, СтрокаТЗ[ИмяРесурса], ИмяРесурса, СтруктураПоиска, Доходы, Коэффициенты,, "Подразделение, КатегорияДохода");
										КонецЕсли;
									КонецЦикла;
								КонецЦикла;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
					// Вычитаем ранее исчисленное.
					ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаМесяца, ИсчисленоРанее.НайтиСтроки(СтруктураПоискаИсчисленного), "КатегорияДохода, НалогПоСтавке13");
					
					// В "межрасчетном" варианте оставляем только те результаты, которые соответствуют месяцу (-ам) получения дохода
					// текущего акта расчета.
					Если ВыполнятьМинимизациюПерерасчетов И Не ОкончательныйРасчет И Не ЗначениеЗаполнено(ДатыТекущегоРасчетаПоМесяцам[Месяц(ВыборкаРасчетов.МесяцНалоговогоПериода)]) Тогда
						Если ВспомогательнаяТаблицаМесяца.Итог("НалогПоСтавке13") <> 0 Тогда
							ВспомогательнаяТаблицаМесяца.Очистить();
							Продолжить;
						Иначе
							СтрокиКУдалению = Новый Соответствие;
							Для каждого СтрокаТЗ Из ВспомогательнаяТаблицаМесяца Цикл
								Если ВсеДатыТекущегоРасчета[СтрокаТЗ.МесяцНалоговогоПериода] = Неопределено Тогда
									СтрокиКУдалению.Вставить(СтрокаТЗ, Истина)
								КонецЕсли;
							КонецЦикла;
							Если ВспомогательнаяТаблицаМесяца.Количество() = СтрокиКУдалению.Количество() Тогда
								ВспомогательнаяТаблицаМесяца.Очистить();
								Продолжить;
							Иначе
								Для каждого Элемент Из СтрокиКУдалению Цикл
									ВспомогательнаяТаблицаМесяца.Удалить(Элемент.Ключ);
								КонецЦикла;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
					ВспомогательнаяТаблицаМесяца.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода, МесяцПериодаПредоставленияВычета, Подразделение, КатегорияДохода", СтрокаРесурсов);
					ВспомогательнаяТаблицаМесяца.ЗаполнитьЗначения(ВыборкаРасчетов.МесяцНалоговогоПериода,"МесяцПериодаПредоставленияВычета");
					
					// Вычеркнем из результата строки по переброске некоторой суммы с одной категории на другую
					ТаблицаМесяцаБезКатегорийДохода = ВспомогательнаяТаблицаМесяца.Скопировать();
					ТаблицаМесяцаБезКатегорийДохода.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода,Подразделение", СтрокаРесурсов);
					Для каждого СтрокаТЗ Из ТаблицаМесяцаБезКатегорийДохода Цикл
						Если Не ЕстьДанныеВСтроке(СтрокаТЗ, МассивРесурсов) Тогда
							СтрокиКОбнулению = ВспомогательнаяТаблицаМесяца.НайтиСтроки(Новый Структура("МесяцНалоговогоПериода,Подразделение", СтрокаТЗ.МесяцНалоговогоПериода, СтрокаТЗ.Подразделение));
							Для каждого СтрокаКОбнулению Из СтрокиКОбнулению Цикл
								Для каждого ИмяРесурса Из МассивРесурсов Цикл
									СтрокаКОбнулению[ИмяРесурса] = 0;
								КонецЦикла;
							КонецЦикла; 	
						КонецЕсли;
					КонецЦикла;
					
					// Для 2015 года парные записи с + и - за месяц из-за уточнения учета в результаты расчетов не пишем
					Если НачалоГода(ВыборкаРасчетов.МесяцНалоговогоПериода) = ДатаИзмененияИсчисленияДляИностранцев Тогда
						НачалоМесяца = НачалоМесяца(ВыборкаРасчетов.МесяцНалоговогоПериода);
						СтрокиНалогов = ВспомогательнаяТаблицаМесяца.Скопировать(,"Подразделение, НалогПоСтавке13");
						СтрокиНалогов.Свернуть("Подразделение", "НалогПоСтавке13");
						СтрокиОкругления = Новый Массив;
						СуммаСтрокОкругления = 0;
						Для каждого СтрокаТЗ Из СтрокиНалогов Цикл
							Если СтрокаТЗ.НалогПоСтавке13 * СтрокаТЗ.НалогПоСтавке13 = 1 Тогда
								СтрокиОкругления.Добавить(СтрокаТЗ);
								СуммаСтрокОкругления = СуммаСтрокОкругления + СтрокаТЗ.НалогПоСтавке13;
							КонецЕсли;
						КонецЦикла;
						Если СуммаСтрокОкругления = 0 Тогда
							Для каждого СтрокаТЗ Из СтрокиОкругления Цикл
								СтрокаТЗ.НалогПоСтавке13 = 0
							КонецЦикла;
						КонецЕсли;
						Для каждого СтрокаТЗ Из СтрокиНалогов Цикл
							СтрокиПодразделения = ВспомогательнаяТаблицаМесяца.НайтиСтроки(Новый Структура("Подразделение",СтрокаТЗ.Подразделение));
							Если СтрокиПодразделения.Количество() = 1 Тогда
								Продолжить;
							КонецЕсли;
							Если СтрокаТЗ.НалогПоСтавке13 = 0 Тогда
								Для каждого СтрокаПодразделения Из СтрокиПодразделения Цикл
									СтрокаПодразделения.НалогПоСтавке13 = 0
								КонецЦикла;
							Иначе
								СуммаПерерасчета = 0;
								Для каждого СтрокаПодразделения Из СтрокиПодразделения Цикл
									Если СтрокаПодразделения.МесяцНалоговогоПериода = НачалоМесяца И СтрокаПодразделения.НалогПоСтавке13 < 0 Тогда
										СуммаПерерасчета = СтрокаПодразделения.НалогПоСтавке13;
										СтрокаНачалаМесяца = СтрокаПодразделения;
										Прервать;
									КонецЕсли;
								КонецЦикла;
								Если СуммаПерерасчета < 0 Тогда
									Для каждого СтрокаПодразделения Из СтрокиПодразделения Цикл
										Если СуммаПерерасчета < 0 И СтрокаПодразделения.МесяцНалоговогоПериода > НачалоМесяца И СтрокаПодразделения.НалогПоСтавке13 > 0 Тогда
											СуммаЗачета = Мин(-СуммаПерерасчета, СтрокаПодразделения.НалогПоСтавке13);
											СтрокаНачалаМесяца.НалогПоСтавке13 = СтрокаНачалаМесяца.НалогПоСтавке13 + СуммаЗачета;
											СтрокаПодразделения.НалогПоСтавке13 = СтрокаПодразделения.НалогПоСтавке13 - СуммаЗачета;
											СуммаПерерасчета = СтрокаНачалаМесяца.НалогПоСтавке13;
										ИначеЕсли СуммаПерерасчета = 0 Тогда 
											Прервать;
										КонецЕсли;
									КонецЦикла;
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
					
					Если Не ЕстьДанныеВТаблицеФизическогоЛица(ВспомогательнаяТаблицаМесяца, МассивРесурсов) Тогда
						Продолжить;
					КонецЕсли;
					
					ВспомогательнаяТаблицаМесяца.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода, МесяцПериодаПредоставленияВычета,Подразделение, КатегорияДохода", СтрокаРесурсов);
					
					Если ВыполнятьМинимизациюПерерасчетов Тогда
						// Минимизируем появление отсутствующих в текущих доходах дат получения и категорий дохода:
						// 1. Определяем подходящую дату получения дохода и соответствующее ей распределение
						ОсновнаяДатаПолученияДохода = ДатыТекущегоРасчетаПоМесяцам[Месяц(ВыборкаРасчетов.МесяцНалоговогоПериода)];
						Если ОкончательныйРасчет Тогда
							
							Если Не ЗначениеЗаполнено(ОсновнаяДатаПолученияДохода) Тогда // перерасчет налога при отсутствии дохода текущего акта расчета
								ВсегоНалогаЗаМесяц = ВспомогательнаяТаблицаМесяца.Итог("НалогПоСтавке13");
								Если ВсегоНалогаЗаМесяц = 0 И ВыборкаРасчетов.МесяцНалоговогоПериода < НачалоМесяца(МесяцРасчета) Тогда // нашли предшествующий месяц с нулевым налогом
									ЕстьДанныеМесяца = Ложь;
									Для каждого ИмяРесурса Из МассивРесурсов Цикл
										ЕстьДанныеМесяца = ВспомогательнаяТаблицаМесяца.Итог(ИмяРесурса) <> 0;
										Если ЕстьДанныеМесяца Тогда
											Прервать;
										КонецЕсли;
									КонецЦикла;
									Если Не ЕстьДанныеМесяца Тогда // игнорируем различные переброски сумм в одной колонке, но не между колонками 
										ВспомогательнаяТаблицаМесяца.Очистить();
										Продолжить;
									КонецЕсли;
								КонецЕсли;
								Если ВыборкаРасчетов.МесяцНалоговогоПериода > КонецМесяца(МесяцРасчета) Тогда // перерасчет по будущим доходам не производим
									Продолжить;	
								КонецЕсли;
							КонецЕсли;
							
							ДоходыТекущегоМесяца = Неопределено;
							КоэффициентыПодразделенийТекущегоМесяца = Неопределено;
							Если ВыборкаРасчетов.МесяцНалоговогоПериода < НачалоМесяца(МесяцРасчета) Тогда
								Если ЗначениеЗаполнено(ОсновнаяДатаПолученияДохода) Тогда
									СтруктураПоискаДоходовПоДатам.ДатаПолученияДохода = ОсновнаяДатаПолученияДохода;
									ДатаМесяца = ОсновнаяДатаПолученияДохода;
									ВыделитьРаспределениеДоходов(ДоходыТекущегоРасчета, СтруктураПоискаДоходовПоДатам, ДоходыТекущегоМесяца, КоэффициентыПодразделенийТекущегоМесяца, Новый Массив, Новый Массив);											
								ИначеЕсли ЗначениеЗаполнено(ОсновнаяДатаМесяцаРасчетаПоТекущимДоходам) Тогда
									ДатаМесяца = ОсновнаяДатаМесяцаРасчетаПоТекущимДоходам;
									ДоходыТекущегоМесяца = ДоходыМесяцаРасчетаПоТекущимДоходам;
									КоэффициентыПодразделенийТекущегоМесяца = КоэффициентыПодразделенийМесяцаРасчетаПоТекущимДоходам;
								ИначеЕсли ЗначениеЗаполнено(ОсновнаяДатаМесяцаРасчета) Тогда
									ДатаМесяца = ОсновнаяДатаМесяцаРасчета;
									ДоходыТекущегоМесяца = ДоходыКонцаМесяцаРасчета;
									КоэффициентыПодразделенийТекущегоМесяца = КоэффициентыПодразделенийКонцаМесяцаРасчета;
								Иначе
									ДатаМесяца = ДатаНалоговогоПериода;
									ДоходыТекущегоМесяца = ДоходыНалоговогоПериода;
									КоэффициентыПодразделенийТекущегоМесяца = КоэффициентыПодразделенийНалоговогоПериода;
								КонецЕсли;
							Иначе
								Если ЗначениеЗаполнено(ОсновнаяДатаПолученияДохода) Тогда
									СтруктураПоискаДоходовПоДатам.ДатаПолученияДохода = ОсновнаяДатаПолученияДохода;
									ДатаМесяца = ОсновнаяДатаПолученияДохода;
									ВыделитьРаспределениеДоходов(ДоходыТекущегоРасчета, СтруктураПоискаДоходовПоДатам, ДоходыТекущегоМесяца, КоэффициентыПодразделенийТекущегоМесяца, Новый Массив, Новый Массив);											
								Иначе
									ДатаМесяца = ДатаНалоговогоПериода;
									ДоходыТекущегоМесяца = ДоходыНалоговогоПериода;
									КоэффициентыПодразделенийТекущегоМесяца = КоэффициентыПодразделенийНалоговогоПериода;
								КонецЕсли;
							КонецЕсли;
							
						Иначе	
							ДоходыТекущегоМесяца = Неопределено;
							КоэффициентыПодразделенийТекущегоМесяца = Неопределено;
							ДатаМесяца = ОсновнаяДатаПолученияДохода;
							СтруктураПоискаДоходовПоДатам.ДатаПолученияДохода = ОсновнаяДатаПолученияДохода;
							ВыделитьРаспределениеДоходов(ДоходыТекущегоРасчета, СтруктураПоискаДоходовПоДатам, ДоходыТекущегоМесяца, КоэффициентыПодразделенийТекущегоМесяца, Новый Массив, Новый Массив);											
						КонецЕсли;
						// 2. Заменяем даты получения дохода на подходящую и пересматриваем категорию дохода
						Для каждого СтрокаТЗ Из ВспомогательнаяТаблицаМесяца Цикл
							Если ЕстьДанныеВСтроке(СтрокаТЗ, МассивРесурсов) Тогда
								
								ЗаменятьДатуПолученияДохода = ВсеДатыТекущегоРасчета[СтрокаТЗ.МесяцНалоговогоПериода] = Неопределено;
								ЗаменятьКатегориюДохода = ВсеКатегорииТекущегоРасчета[СтрокаТЗ.КатегорияДохода] = Неопределено;
								ЗаменятьПодразделение = ВыборкаРасчетов.МесяцНалоговогоПериода >= НачалоМесяца(МесяцРасчета) И НачалоМесяца(СтрокаТЗ.МесяцНалоговогоПериода) = НачалоМесяца(ДатаМесяца);
								Если ЗаменятьПодразделение Тогда
									СтруктураПоискаПоДатамИПодразделениям.ДатаПолученияДохода = СтрокаТЗ.МесяцНалоговогоПериода;
									ЗаполнитьЗначенияСвойств(СтруктураПоискаПоДатамИПодразделениям, СтрокаТЗ);
									ЗаменятьПодразделение = ДоходыТекущегоРасчета.НайтиСтроки(СтруктураПоискаПоДатамИПодразделениям).Количество() = 0;
								КонецЕсли;
								Если Не ЗаменятьДатуПолученияДохода И Не ЗаменятьПодразделение И Не ЗаменятьКатегориюДохода Тогда
									ЗаполнитьЗначенияСвойств(ВспомогательнаяТаблицаФизическогоЛица.Добавить(),СтрокаТЗ);
									Продолжить;
								КонецЕсли;
								Если ЗаменятьДатуПолученияДохода Тогда
									СтрокаТЗ.МесяцНалоговогоПериода = ДатаМесяца;
								КонецЕсли;
								Если ОсобыеКатегорииДохода[СтрокаТЗ.КатегорияДохода] = Истина Тогда
									ЗаполнитьЗначенияСвойств(ВспомогательнаяТаблицаФизическогоЛица.Добавить(),СтрокаТЗ);
									Продолжить;
								КонецЕсли;
								Если ЗаменятьДатуПолученияДохода Тогда
									Доходы = ДоходыТекущегоМесяца;
									КоэффициентыПодразделений = КоэффициентыПодразделенийТекущегоМесяца;
								Иначе
									СтруктураПоискаДоходовПоДатам.ДатаПолученияДохода = СтрокаТЗ.МесяцНалоговогоПериода;
									ВыделитьРаспределениеДоходов(ДоходыТекущегоРасчета, СтруктураПоискаДоходовПоДатам, Доходы, КоэффициентыПодразделений, Новый Массив, Новый Массив);											
								КонецЕсли;
								Если Не ЗначениеЗаполнено(Доходы) Тогда
									ЗаполнитьЗначенияСвойств(ВспомогательнаяТаблицаФизическогоЛица.Добавить(),СтрокаТЗ);
									Продолжить;
								ИначеЕсли Доходы.Количество() = 1 Тогда
									Если ЗаменятьПодразделение Тогда
										СтрокаТЗ.Подразделение = Доходы[0].Подразделение;
									КонецЕсли;
									Если ЗаменятьКатегориюДохода Тогда
										СтрокаТЗ.КатегорияДохода = Доходы[0].КатегорияДохода;
									КонецЕсли;
									ЗаполнитьЗначенияСвойств(ВспомогательнаяТаблицаФизическогоЛица.Добавить(),СтрокаТЗ);
								Иначе
									СтрокДоРаспределения = ВспомогательнаяТаблицаФизическогоЛица.Количество();
									Для каждого ИмяРесурса Из МассивРесурсов Цикл
										Если СтрокаТЗ[ИмяРесурса] <> 0 Тогда
											ВписатьРесурсВРезультатыРасчетовБО(ВспомогательнаяТаблицаФизическогоЛица, СтрокаТЗ.МесяцНалоговогоПериода, СтрокаТЗ[ИмяРесурса], ИмяРесурса, СтруктураПоиска, Доходы, КоэффициентыПодразделений,?(ИмяРесурса = "НалогПоСтавке13",0,2), "Подразделение, КатегорияДохода");
										КонецЕсли;
									КонецЦикла;
									Если СтрокДоРаспределения < ВспомогательнаяТаблицаФизическогоЛица.Количество() Тогда
										Для Сч = СтрокДоРаспределения + 1 По ВспомогательнаяТаблицаФизическогоЛица.Количество() Цикл
											Если ЗаменятьДатуПолученияДохода Тогда
												// восстановим подразделение или категорию, если ранее это была чужая строка налога
												Если Не ЗаменятьПодразделение Тогда
													ВспомогательнаяТаблицаФизическогоЛица[Сч-1].Подразделение = СтрокаТЗ.Подразделение
												КонецЕсли;
												Если Не ЗаменятьКатегориюДохода Тогда
													ВспомогательнаяТаблицаФизическогоЛица[Сч-1].КатегорияДохода = СтрокаТЗ.КатегорияДохода
												КонецЕсли;
											КонецЕсли;
											ВспомогательнаяТаблицаФизическогоЛица[Сч-1].МесяцПериодаПредоставленияВычета = СтрокаТЗ.МесяцПериодаПредоставленияВычета
										КонецЦикла;
									КонецЕсли;
								КонецЕсли;
								
							КонецЕсли;
						КонецЦикла;
						ВспомогательнаяТаблицаМесяца.Очистить();
					Иначе
						// ненулевые строки переписываем в результат по физ.лицу
						Для каждого СтрокаТЗ Из ВспомогательнаяТаблицаМесяца Цикл
							Если ЕстьДанныеВСтроке(СтрокаТЗ, МассивРесурсов) Тогда
								ЗаполнитьЗначенияСвойств(ВспомогательнаяТаблицаФизическогоЛица.Добавить(),СтрокаТЗ);
							КонецЕсли;
						КонецЦикла;
						ВспомогательнаяТаблицаМесяца.Очистить();
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
			Если Не ЕстьДанныеВТаблицеФизическогоЛица(ВспомогательнаяТаблицаФизическогоЛица, МассивРесурсов) Тогда
				Продолжить;	
			КонецЕсли;
			
			ВспомогательнаяТаблицаФизическогоЛица.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода, МесяцПериодаПредоставленияВычета,Подразделение, КатегорияДохода", СтрокаРесурсов);
			Если ОкончательныйРасчет Тогда
				Для каждого СтрокаТЗ Из ВспомогательнаяТаблицаФизическогоЛица Цикл
					Если ЕстьДанныеВСтроке(СтрокаТЗ, МассивРесурсов) Тогда
						ЗаполнитьЗначенияСвойств(РезультатыРасчетов.Добавить(),СтрокаТЗ);
					КонецЕсли;
				КонецЦикла;
				КоличествоСтрок = РезультатыРасчетов.Количество();
				Если КоличествоСтрок > 0 Тогда
					РезультатыРасчетов[КоличествоСтрок - 1].УчтенныеОснования = УчтенныеОснования;
				КонецЕсли;
			Иначе 
				ПереписатьМежрасчетныйНДФЛФизическогоЛицаВРезультатБО(РезультатыРасчетов, ВспомогательнаяТаблицаФизическогоЛица, ДатаУдержанияИсчисленногоНалога, МесяцРасчета, ВсегоДоходовТекущегоРасчета);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Заполнение поля КодВычетаЛичный в результате расчета будем делать с минимальным использованием СУБД,
	// для чего выгрузим ВТВычетыНаДетейИЛичные в таблицу значений, проиндексируем ее и будем искать в ней личные вычеты.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПравоНаЛичныеВычеты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПравоНаЛичныеВычеты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПравоНаЛичныеВычеты.КодВычетаЛичный КАК КодВычета
	|ИЗ
	|	ВТВычетыНаДетейИЛичные КАК ПравоНаЛичныеВычеты
	|ГДЕ
	|	ПравоНаЛичныеВычеты.КодВычетаЛичный <> ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)";
	
	ЛичныеВычеты = Запрос.Выполнить().Выгрузить();
	ЛичныеВычеты.Индексы.Добавить(ПоляПоиска);
	СтруктураПоиска = Новый Структура(ПоляПоиска);
	
	СтрокиЛичныхВычетов = Новый Массив;
	Для Каждого СтрокаРезультат Из РезультатыРасчетов Цикл
		Если Не ЗначениеЗаполнено(СтрокаРезультат.КатегорияДохода) Тогда
			СтрокаРезультат.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаРезультат.ПримененныйВычетЛичный) Тогда
			СтрокиЛичныхВычетов.Добавить(СтрокаРезультат);
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаРезультат);
			СтруктураПоиска.МесяцНалоговогоПериода = НачалоМесяца(СтруктураПоиска.МесяцНалоговогоПериода);
			НайденныеСтроки = ЛичныеВычеты.НайтиСтроки(СтруктураПоиска);
			Если НайденныеСтроки.Количество() > 0 Тогда
				СтрокаРезультат.КодВычетаЛичный = НайденныеСтроки[0].КодВычета;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаРезультат.КодВычетаЛичный) Тогда
				Для каждого СтрокаВычетов Из СтандартныхВычетовРанее.НайтиСтроки(Новый Структура("ФизическоеЛицо",СтрокаРезультат.ФизическоеЛицо)) Цикл
					Если ЗначениеЗаполнено(СтрокаВычетов.КодВычетаЛичный) Тогда
						СтрокаРезультат.КодВычетаЛичный = СтрокаВычетов.КодВычетаЛичный;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если СтрокиЛичныхВычетов.Количество() > 0 Тогда
		РезультатыРасчетов.Индексы.Добавить("ФизическоеЛицо, ПримененныйВычетЛичный");
		СтруктураПоиска = Новый Структура("ФизическоеЛицо, ПримененныйВычетЛичный", , 0);
		Для каждого СтрокаСВычетом Из СтрокиЛичныхВычетов Цикл
			СтруктураПоиска.ФизическоеЛицо = СтрокаСВычетом.ФизическоеЛицо;
			Для каждого СтрокаРезультат Из РезультатыРасчетов.НайтиСтроки(СтруктураПоиска) Цикл
				Если НачалоМесяца(СтрокаРезультат.МесяцНалоговогоПериода) = НачалоМесяца(СтрокаСВычетом.МесяцНалоговогоПериода) Тогда
					СтрокаРезультат.КодВычетаЛичный = СтрокаСВычетом.КодВычетаЛичный
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, УдаляемыеВТ);
	
	ВписатьВРезультатЗачтенныеАвансы(Регистратор, Организация, МесяцРасчета, РезультатыРасчетов, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13, "НалогПоСтавке13", "ЗачтеноАвансовыхПлатежейПоСтавке13", ИсключатьДоходыРегистратора, МенеджерВременныхТаблиц);
	
	Возврат РезультатыРасчетов;
	
КонецФункции

Функция РассчитатьНалогПоПлоскойСтавке(ИсключаемыйРегистратор, Организация, МесяцРасчета, Знач СписокФизическихЛиц, Знач ПервыйМесяцНалоговогоПериода, Знач ПоследнийМесяцНалоговогоПериода, ОкончательныйРасчет, ДатаУдержанияИсчисленногоНалога, ДвиженияТекущегоРегистратора, ОграничиватьНалоговыйПериод = Ложь) Экспорт
	
	// 0. Проверим, стОит ли вообще что-то считать: массив физ.лиц может быть пустым, либо доходы межрасчетного
	// регистратора могут быть нулевыми. В обоих случаях результатом расчетов окажется пустая таблица.
	Если Не ЗначениеЗаполнено(СписокФизическихЛиц) Тогда
		Возврат ТаблицаНДФЛ()
	КонецЕсли;
	ЕстьДвиженияТекущегоРегистратораПоДоходам = ДвиженияТекущегоРегистратора <> Неопределено И ПроведениеСервер.ЕстьДвижения(ДвиженияТекущегоРегистратора, "СведенияОДоходахНДФЛ");
	Если Не ОкончательныйРасчет И Не ЕстьДвиженияТекущегоРегистратораПоДоходам Тогда
		Возврат ТаблицаНДФЛ()
	КонецЕсли;
	Если ЕстьДвиженияТекущегоРегистратораПоДоходам Тогда
		ДоходыТекущегоРегистратора = ДвиженияТекущегоРегистратора.СведенияОДоходахНДФЛ.Выгрузить();
		Если Не ОкончательныйРасчет Тогда
			ТаблицаДоходовТекущегоРегистратора = ДоходыТекущегоРегистратора.Скопировать(ДоходыТекущегоРегистратора.НайтиСтроки(Новый Структура("Сторно, ЗарегистрированоПриНачисленииАванса", Ложь, '00010101')), "ФизическоеЛицо, СуммаДохода, СуммаВычета");
			Если СписокФизическихЛиц.Количество() = 1 Тогда
				Если ТаблицаДоходовТекущегоРегистратора.Итог("СуммаДохода") - ТаблицаДоходовТекущегоРегистратора.Итог("СуммаВычета") = 0 Тогда
					Возврат ТаблицаНДФЛ()
				КонецЕсли;
			Иначе
				ТаблицаДоходовТекущегоРегистратора.Свернуть("ФизическоеЛицо", "СуммаДохода, СуммаВычета");
				Для каждого ТекущаяСтрока Из ТаблицаДоходовТекущегоРегистратора Цикл
					Если ТекущаяСтрока.СуммаДохода - ТекущаяСтрока.СуммаВычета = 0 Тогда
						ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(СписокФизическихЛиц, ТекущаяСтрока.ФизическоеЛицо)
					КонецЕсли;		
				КонецЦикла;
				Если Не ЗначениеЗаполнено(СписокФизическихЛиц) Тогда
					Возврат ТаблицаНДФЛ()
				КонецЕсли;
			КонецЕсли;  
		КонецЕсли;
	КонецЕсли;
	
	ГоловнаяОрганизация = ЗарплатаКадры.ГоловнаяОрганизация(Организация);
	ЭтоРасчетПоДоходамТекущегоМесяца = ПервыйМесяцНалоговогоПериода = Неопределено Или ПоследнийМесяцНалоговогоПериода = Неопределено;
	НачалоМесяцаРасчета = НачалоМесяца(МесяцРасчета);
	КонецМесяцаРасчета = КонецМесяца(МесяцРасчета); 
	СоответствиеФизическихЛиц = ОбщегоНазначенияБЗККлиентСервер.МассивВСоответствие(СписокФизическихЛиц);
	МаксимальнаяДата = ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата();

	ПоляПоиска = "ФизическоеЛицо, МесяцНалоговогоПериода";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("НачалоМесяцаРасчета", НачалоМесяцаРасчета);
	Запрос.УстановитьПараметр("КонецМесяцаРасчета", КонецМесяцаРасчета);
	Запрос.УстановитьПараметр("СписокФизическихЛиц", СписокФизическихЛиц);
	Запрос.УстановитьПараметр("ИсключаемыйРегистратор", ИсключаемыйРегистратор);
	
	// 1.	Определим минимальные и максимальные периоды расчета в целом по всем физическим лицам
	//	Если на вход переданы первый и последний месяцы налогового периода (заказан перерасчет конкретного периода) - ничего не делаем.
	//	Среди записей регистра СведенияОДоходахНДФЛ, зарегистрированных в месяце расчета, получим минимальное и максимальное значение поля МесяцНалоговогоПериода
	Если ЭтоРасчетПоДоходамТекущегоМесяца Тогда
		
		ПервыйМесяцНалоговогоПериода = МаксимальнаяДата;
		ПоследнийМесяцНалоговогоПериода = '00010101';
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода) КАК ПоследнийМесяцНалоговогоПериода,
		|	МИНИМУМ(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода) КАК ПервыйМесяцНалоговогоПериода
		|ИЗ
		|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
		|ГДЕ
		|	СведенияОДоходахНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|	И СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета
		|	И СведенияОДоходахНДФЛ.ФизическоеЛицо В(&СписокФизическихЛиц)
		|	И СведенияОДоходахНДФЛ.Регистратор <> &ИсключаемыйРегистратор
		|	И СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода";
		Если ОкончательныйРасчет Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода", "");
		КонецЕсли;
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.ПервыйМесяцНалоговогоПериода) Тогда
			ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.ПервыйМесяцНалоговогоПериода);
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.ПоследнийМесяцНалоговогоПериода);
		КонецЕсли;
		
		Если ЕстьДвиженияТекущегоРегистратораПоДоходам Тогда
			
			ДоходыТекущегоРегистратора.Сортировать("МесяцНалоговогоПериода");
			
			Для Каждого ТекущаяСтрока Из ДоходыТекущегоРегистратора Цикл
				Если ТекущаяСтрока.МесяцНалоговогоПериода >= ПервыйМесяцНалоговогоПериода Тогда
					Прервать;
				КонецЕсли;
				Если СоответствиеФизическихЛиц[ТекущаяСтрока.ФизическоеЛицо] = Истина
					И ТекущаяСтрока.ГоловнаяОрганизация = ГоловнаяОрганизация
					И ТекущаяСтрока.Период >= НачалоМесяцаРасчета
					И ТекущаяСтрока.Период <= КонецМесяцаРасчета	
					И (ОкончательныйРасчет Или ТекущаяСтрока.ДоходМежрасчетногоПериода)	Тогда
					
					ПервыйМесяцНалоговогоПериода = НачалоМесяца(ТекущаяСтрока.МесяцНалоговогоПериода);
					Прервать;
				КонецЕсли;		 			
			КонецЦикла;	 
			Для Сч = 1 По ДоходыТекущегоРегистратора.Количество() Цикл
				ТекущаяСтрока = ДоходыТекущегоРегистратора[ДоходыТекущегоРегистратора.Количество() - Сч];
				Если ТекущаяСтрока.МесяцНалоговогоПериода <= ПоследнийМесяцНалоговогоПериода Тогда
					Прервать;
				КонецЕсли;
				Если СоответствиеФизическихЛиц[ТекущаяСтрока.ФизическоеЛицо] = Истина
					И ТекущаяСтрока.ГоловнаяОрганизация = ГоловнаяОрганизация
					И ТекущаяСтрока.Период >= НачалоМесяцаРасчета
					И ТекущаяСтрока.Период <= КонецМесяцаРасчета	
					И (ОкончательныйРасчет Или ТекущаяСтрока.ДоходМежрасчетногоПериода)	Тогда
					
					ПоследнийМесяцНалоговогоПериода = КонецМесяца(ТекущаяСтрока.МесяцНалоговогоПериода);
					Прервать;
				КонецЕсли;	
			КонецЦикла;
			
		КонецЕсли;
		
		Если ПоследнийМесяцНалоговогоПериода = '00010101' Тогда
			ПервыйМесяцНалоговогоПериода = НачалоМесяца(МесяцРасчета);
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(МесяцРасчета);
		КонецЕсли;	
		
	КонецЕсли;
	
	Если ОграничиватьНалоговыйПериод Тогда
		
		ПервыйМесяцРасчетаНДФЛПоПрогрессивнойШкале = УчетНДФЛ.ПараметрыРасчетаНДФЛПоПрогрессивнойШкале().НачалоРасчетаНДФЛПоПрогрессивнойШкале;

		Если ПервыйМесяцНалоговогоПериода >= ПервыйМесяцРасчетаНДФЛПоПрогрессивнойШкале Тогда
			Возврат ТаблицаНДФЛ()
		КонецЕсли;
		ПоследнийМесяцНалоговогоПериода = Мин(ПоследнийМесяцНалоговогоПериода, ДобавитьМесяц(ПервыйМесяцРасчетаНДФЛПоПрогрессивнойШкале, -1))
		
	КонецЕсли;

	// В случае расчета за 2015 и предыдущие годы будем использовать архивный вариант алгоритма.
	Если ПервыйМесяцНалоговогоПериода < КонецГода(УчетНДФЛ.ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев()) Тогда
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Если ДвиженияТекущегоРегистратора <> Неопределено Тогда
			Если ПроведениеСервер.ЕстьДвижения(ДвиженияТекущегоРегистратора, "СведенияОДоходахНДФЛ") Тогда
				ЗарплатаКадры.СоздатьВТПоНаборуЗаписей(МенеджерВременныхТаблиц, ДвиженияТекущегоРегистратора.СведенияОДоходахНДФЛ);
			КонецЕсли;	
			Если ПроведениеСервер.ЕстьДвижения(ДвиженияТекущегоРегистратора, "АвансовыеПлатежиИностранцевПоНДФЛ") Тогда
				ЗарплатаКадры.СоздатьВТПоНаборуЗаписей(МенеджерВременныхТаблиц, ДвиженияТекущегоРегистратора.АвансовыеПлатежиИностранцевПоНДФЛ);
			КонецЕсли;	
			Если ПроведениеСервер.ЕстьДвижения(ДвиженияТекущегоРегистратора, "ИмущественныеВычетыНДФЛ") Тогда
				ЗарплатаКадры.СоздатьВТПоНаборуЗаписей(МенеджерВременныхТаблиц, ДвиженияТекущегоРегистратора.ИмущественныеВычетыНДФЛ);
			КонецЕсли;	
			Если ПроведениеСервер.ЕстьДвижения(ДвиженияТекущегоРегистратора, "ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ") Тогда
				ЗарплатаКадры.СоздатьВТПоНаборуЗаписей(МенеджерВременныхТаблиц, ДвиженияТекущегоРегистратора.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ, Истина);
			КонецЕсли;	
			Если ПроведениеСервер.ЕстьДвижения(ДвиженияТекущегоРегистратора, "РасчетыНалогоплательщиковСБюджетомПоНДФЛ") Тогда
				ЗарплатаКадры.СоздатьВТПоНаборуЗаписей(МенеджерВременныхТаблиц, ДвиженияТекущегоРегистратора.РасчетыНалогоплательщиковСБюджетомПоНДФЛ);
			КонецЕсли;	
		КонецЕсли;
		ТаблицаФизическихЛиц = Новый ТаблицаЗначений;
		ТаблицаФизическихЛиц.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
		Для Каждого ТекущееФизическоеЛицо Из СписокФизическихЛиц Цикл
			СтрокаТЗ = ТаблицаФизическихЛиц.Добавить();
			СтрокаТЗ.ФизическоеЛицо = ТекущееФизическоеЛицо;
		КонецЦикла;	
		ТаблицаФизическихЛиц.Свернуть("ФизическоеЛицо");
		ЗарплатаКадры.СоздатьВТПоТаблицеЗначений(МенеджерВременныхТаблиц, ТаблицаФизическихЛиц, "ВТФизическиеЛица"); 
		
		Возврат	РассчитатьНалогПоОсновнойСтавке(ИсключаемыйРегистратор, Организация, МесяцРасчета, МенеджерВременныхТаблиц, ПервыйМесяцНалоговогоПериода, ПоследнийМесяцНалоговогоПериода, Истина, ОкончательныйРасчет, ДатаУдержанияИсчисленногоНалога)
	КонецЕсли;
	
	// 2.	Получим ТЗ данные о доходах 
	//	Из регистра накоплений СведенияОДоходахНДФЛ получим записи, соответствующие условиям:
	//	- записи, зарегистрированные между началом года, предшествующего полученному на предыдущем шаге минимальному месяцу налогового периода, и окончанием месяца расчета
	//	- месяц налогового периода у записей между началом года месяца минимального налогового периода и концом месяца максимального налогового периода
	//	- доход облагается у налогового агента
	//	- ставка налогообложения дохода для налоговых резидентов РФ - 13%
	//	- для месяца расчета также пропускаем записи, зарегистрированные при начислении аванса
	//	При этом, в случае если выполняется промежуточный расчет и доход зарегистрирован в месяце расчета не для промежуточного расчета (ДоходМежрасчетногоПериода = Ложь), сумму дохода и сумму вычета будем считать равными 0  
	//	Затем добавим записи текущего набора доходов, применив к ним те же условия (уже на языке 1С), что и в запросе.
	
	НачалоПредшествующегоГода = ДобавитьМесяц(НачалоГода(ПервыйМесяцНалоговогоПериода), -12);;
	НачалоГодаПериодаРасчета = НачалоГода(ПервыйМесяцНалоговогоПериода);
	КонецПериодаРасчета = КонецМесяца(ПоследнийМесяцНалоговогоПериода);
	НачалоГодаРасчета = НачалоГода(МесяцРасчета); 
	
	Запрос.УстановитьПараметр("НачалоПредшествующегоГода", НачалоПредшествующегоГода);
	Запрос.УстановитьПараметр("НачалоГодаПериодаРасчета", НачалоГодаПериодаРасчета);
	Запрос.УстановитьПараметр("НачалоГодаРасчета", НачалоГодаРасчета);
	Запрос.УстановитьПараметр("КонецПериодаРасчета", КонецПериодаРасчета);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	СведенияОДоходахНДФЛ.Подразделение КАК Подразделение,
	|	СведенияОДоходахНДФЛ.Период КАК Период,
	|	СведенияОДоходахНДФЛ.СтавкаНалогообложения КАК СтавкаНалогообложения,
	|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода КАК ДоходМежрасчетногоПериода,
	|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ КАК ИсточникДоходаЗаПределамиРФ,
	|	СведенияОДоходахНДФЛ.КодВычета КАК КодВычета,
	|	СведенияОДоходахНДФЛ.КодДохода КАК КодДохода,
	|	СведенияОДоходахНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, ГОД) КАК НалоговыйПериод,
	|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДокументыУчтенныеПриРасчетеНДФЛ.Регистратор, &ИсключаемыйРегистратор) = &ИсключаемыйРегистратор
	|			ТОГДА СведенияОДоходахНДФЛ.Регистратор
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.НачислениеЗарплаты.ПустаяСсылка)
	|	КОНЕЦ КАК ДокументОснование,
	|	ЕСТЬNULL(СведенияОДоходахНДФЛ.КодВычета.НеПредоставляетсяНерезидентам, ЛОЖЬ) КАК НеПредоставляетсяНерезидентам,
	|	СУММА(ВЫБОР
	|			КОГДА &ОкончательныйРасчетДоходы
	|				ТОГДА СведенияОДоходахНДФЛ.СуммаДохода
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДохода,
	|	СУММА(ВЫБОР
	|			КОГДА &ОкончательныйРасчетДоходы
	|				ТОГДА СведенияОДоходахНДФЛ.СуммаВычета
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВычета,
	|	ВЫБОР
	|		КОГДА &ОкончательныйРасчетДоходы
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользоватьДляРаспределения,
	|	ВЫБОР
	|		КОГДА &ОкончательныйРасчетДоходы
	|				И (СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоГодаРасчета И &КонецМесяцаРасчета)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьПериодПриРасчете,
	|	ЕСТЬNULL(ДокументыУчтенныеПриРасчетеНДФЛ.Регистратор, &ИсключаемыйРегистратор) = &ИсключаемыйРегистратор КАК ДоходТекущегоРасчета,
	|	СведенияОДоходахНДФЛ.ЗарегистрированоПриНачисленииАванса КАК ЗарегистрированоПриНачисленииАванса
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыУчтенныеПриРасчетеНДФЛ КАК ДокументыУчтенныеПриРасчетеНДФЛ
	|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ДокументыУчтенныеПриРасчетеНДФЛ.ФизическоеЛицо
	|			И СведенияОДоходахНДФЛ.Регистратор = ДокументыУчтенныеПриРасчетеНДФЛ.ДокументОснование
	|ГДЕ
	|	СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоПредшествующегоГода И &КонецМесяцаРасчета
	|	И СведенияОДоходахНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И СведенияОДоходахНДФЛ.ФизическоеЛицо В(&СписокФизическихЛиц)
	|	И СведенияОДоходахНДФЛ.Регистратор <> &ИсключаемыйРегистратор
	|	И СведенияОДоходахНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	|	И СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|	И НЕ СведенияОДоходахНДФЛ.КодДохода.НеОблагаетсяУНалоговогоАгента
	|	И СведенияОДоходахНДФЛ.ЗарегистрированоПриНачисленииАванса < &УсловиеНаНачисленноеВАванс
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ),
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, ГОД),
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
	|	СведенияОДоходахНДФЛ.Подразделение,
	|	СведенияОДоходахНДФЛ.Период,
	|	СведенияОДоходахНДФЛ.СтавкаНалогообложения,
	|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода,
	|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ,
	|	СведенияОДоходахНДФЛ.КодВычета.НеПредоставляетсяНерезидентам,
	|	СведенияОДоходахНДФЛ.КодВычета,
	|	СведенияОДоходахНДФЛ.КодДохода,
	|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента,
	|	СведенияОДоходахНДФЛ.КатегорияДохода,
	|	ЕСТЬNULL(ДокументыУчтенныеПриРасчетеНДФЛ.Регистратор, &ИсключаемыйРегистратор) = &ИсключаемыйРегистратор,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДокументыУчтенныеПриРасчетеНДФЛ.Регистратор, &ИсключаемыйРегистратор) = &ИсключаемыйРегистратор
	|			ТОГДА СведенияОДоходахНДФЛ.Регистратор
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.НачислениеЗарплаты.ПустаяСсылка)
	|	КОНЕЦ,
	|	СведенияОДоходахНДФЛ.ЗарегистрированоПриНачисленииАванса
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ВЫБОР
	|				КОГДА &ОкончательныйРасчетДоходы
	|					ТОГДА СведенияОДоходахНДФЛ.СуммаДохода
	|				ИНАЧЕ 0
	|			КОНЕЦ) <> 0
	|		ИЛИ СУММА(ВЫБОР
	|				КОГДА &ОкончательныйРасчетДоходы
	|					ТОГДА СведенияОДоходахНДФЛ.СуммаВычета
	|				ИНАЧЕ 0
	|			КОНЕЦ) <> 0)";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "УсловиеНаНачисленноеВАванс", ?(ЭтоРасчетПоДоходамТекущегоМесяца, "НачалоМесяцаРасчета", "КонецМесяцаРасчета"));
	Если ОкончательныйРасчет Тогда
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетДоходы", "Истина");
	Иначе
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетДоходы", 
		"(СведенияОДоходахНДФЛ.Период < &НачалоМесяцаРасчета
		|					ИЛИ СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода
		|						И (СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета))");
	КонецЕсли;
	ДанныеУчетаДоходов = Запрос.Выполнить().Выгрузить();
	
	МесяцыНачисленияЗарплаты = Новый Соответствие; 
	Если ЕстьДвиженияТекущегоРегистратораПоДоходам Тогда
		// Определим месяцы, за которые начисляется з/пл в текущем расчете - по полю период.
		Если ЭтоРасчетПоДоходамТекущегоМесяца Тогда
			МесяцыНачисленияЗарплаты.Вставить(МесяцРасчета, Истина);
		КонецЕсли;
		ДоходыТекущегоРегистратора.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода, ДатаПолученияДохода, Подразделение, Период, СтавкаНалогообложения, ДоходМежрасчетногоПериода, ИсточникДоходаЗаПределамиРФ, КодВычета, КодДохода, КатегорияДохода, Сторно, ЗарегистрированоПриНачисленииАванса", "СуммаДохода, СуммаВычета");
		СтавкаРезидента13 = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13;
		Для Каждого ТекущаяСтрока Из ДоходыТекущегоРегистратора Цикл
			Если ЗначениеЗаполнено(ТекущаяСтрока.ЗарегистрированоПриНачисленииАванса) Тогда
				Продолжить;
			КонецЕсли;
			Если СоответствиеФизическихЛиц[ТекущаяСтрока.ФизическоеЛицо] = Истина
				И ТекущаяСтрока.КодДохода.СтавкаНалогообложенияРезидента = СтавкаРезидента13
				И ТекущаяСтрока.КодДохода.НеОблагаетсяУНалоговогоАгента <> Истина Тогда
							
				НоваяСтрока = ДанныеУчетаДоходов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
				НоваяСтрока.ДокументОснование = ИсключаемыйРегистратор;
				НоваяСтрока.НеПредоставляетсяНерезидентам = ТекущаяСтрока.КодВычета.НеПредоставляетсяНерезидентам;
				НоваяСтрока.СтавкаНалогообложенияРезидента = СтавкаРезидента13;
				НоваяСтрока.НалоговыйПериод = НачалоГода(ТекущаяСтрока.МесяцНалоговогоПериода);
				НоваяСтрока.МесяцНалоговогоПериода = НачалоМесяца(НоваяСтрока.МесяцНалоговогоПериода);
				НоваяСтрока.УчитыватьПериодПриРасчете = НоваяСтрока.Период >= НачалоГодаРасчета И НоваяСтрока.Период <= КонецМесяцаРасчета;	
				НоваяСтрока.ДоходТекущегоРасчета = Не ТекущаяСтрока.Сторно;	
				НоваяСтрока.ИспользоватьДляРаспределения = Истина;
				МесяцыНачисленияЗарплаты.Вставить(НачалоМесяца(ТекущаяСтрока.Период), Истина);
			КонецЕсли;			
		КонецЦикла;	
	КонецЕсли;	
	НеучтенныеРанееОснования = ДанныеУчетаДоходов.Скопировать(Новый Структура("ДоходТекущегоРасчета", Истина), "ФизическоеЛицо, ДокументОснование");
	НеучтенныеРанееОснования.Свернуть("ФизическоеЛицо, ДокументОснование");
	НеучтенныеРанееОснования.Индексы.Добавить("ФизическоеЛицо");
	ДанныеУчетаДоходов.Сортировать("ФизическоеЛицо, МесяцНалоговогоПериода, ДатаПолученияДохода", Новый СравнениеЗначений);
	МесяцыНачисленияЗарплатыВЗапрос = Новый Массив;
	Для каждого Элемент Из МесяцыНачисленияЗарплаты Цикл
		МесяцыНачисленияЗарплатыВЗапрос.Добавить(Элемент.Ключ)
	КонецЦикла;
	Запрос.УстановитьПараметр("МесяцыНачисленияЗарплаты", МесяцыНачисленияЗарплатыВЗапрос);
	
	// 3.	Определим минимальные и максимальные месяцы налогового периода по физическим лицам. Результат работы метода - таблица значений (ПериодыРасчетаПоФизическимЛицам)
	ПериодыРасчетаПоФизическимЛицам = Новый ТаблицаЗначений;
	ПериодыРасчетаПоФизическимЛицам.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ПериодыРасчетаПоФизическимЛицам.Колонки.Добавить("НачалоГодаНалоговогоПериода", Новый ОписаниеТипов("Дата"));
	ПериодыРасчетаПоФизическимЛицам.Колонки.Добавить("ПоследнийМесяцНалоговогоПериода", Новый ОписаниеТипов("Дата"));
	Если ЭтоРасчетПоДоходамТекущегоМесяца Тогда
		//	Среди записей о доходах, полученных на предыдущем шаге, отбираем строки к осмотру по условиям (ранее рассчитано в поле УчитыватьПериодПриРасчете):  
		//	- запись зарегистрирована между началом года месяца расчета и концом месяца расчета
		//	- если выполняется промежуточный расчет, доход зарегистрирован раньше месяца расчета, а в месяце расчета только промежуточного расчета (ДоходМежрасчетногоПериода = Истина)
		//	Минимальная дата (НачалоГодаНалоговогоПериода): если запись зарегистрирована в месяце расчета, возьмем начало года месяца налогового периода этой записи, 
		//		если зарегистрирована в предыдущих месяцах, возьмем начало года от месяца расчета.
		//	Максимальная дата (ПоследнийМесяцНалоговогоПериода): максимальный месяц налогового периода 
		
		// Дополнительно избавимся от "лишних" строк доходов, зарегистрированных начислениями авансов. 
		
		СтрокиКУдалению = Новый Соответствие;
		ТекущееФизическоеЛицо = Неопределено;
		Для Каждого СтрокаТаблицыДоходов Из ДанныеУчетаДоходов Цикл
			Если МесяцыНачисленияЗарплаты[СтрокаТаблицыДоходов.ЗарегистрированоПриНачисленииАванса] <> Неопределено Тогда
				СтрокиКУдалению.Вставить(СтрокаТаблицыДоходов);
				Продолжить;
			КонецЕсли;
			Если СтрокаТаблицыДоходов.ФизическоеЛицо <> ТекущееФизическоеЛицо Тогда  
				СтрокаПериодовПоФизическомуЛицу = ПериодыРасчетаПоФизическимЛицам.Добавить();
				СтрокаПериодовПоФизическомуЛицу.ФизическоеЛицо = СтрокаТаблицыДоходов.ФизическоеЛицо;
				СтрокаПериодовПоФизическомуЛицу.НачалоГодаНалоговогоПериода = МаксимальнаяДата;
				
				ТекущееФизическоеЛицо = СтрокаПериодовПоФизическомуЛицу.ФизическоеЛицо; 
			КонецЕсли;
			Если СтрокаТаблицыДоходов.УчитыватьПериодПриРасчете Тогда
				СтрокаПериодовПоФизическомуЛицу.НачалоГодаНалоговогоПериода = Мин(?(НачалоМесяца(СтрокаТаблицыДоходов.Период) = НачалоМесяцаРасчета, СтрокаТаблицыДоходов.НалоговыйПериод, НачалоГодаРасчета), СтрокаПериодовПоФизическомуЛицу.НачалоГодаНалоговогоПериода);
				СтрокаПериодовПоФизическомуЛицу.ПоследнийМесяцНалоговогоПериода = Макс(СтрокаТаблицыДоходов.МесяцНалоговогоПериода, СтрокаПериодовПоФизическомуЛицу.ПоследнийМесяцНалоговогоПериода);
			КонецЕсли;	
		КонецЦикла;	
		Для Каждого УдаляемаяСтрока Из СтрокиКУдалению Цикл
			ДанныеУчетаДоходов.Удалить(УдаляемаяСтрока.Ключ);		
		КонецЦикла;	
	Иначе
		// В случае если расчет выполняется не по доходам текущего месяца, в качестве НачалоГодаНалоговогоПериода будем
		// использовать начала года первого месяца периода, переданного на вход алгоритма расчета, в качестве
		// ПоследнийМесяцНалоговогоПериода - первый день месяца окончания периода, переданного на вход алгоритма расчета
		НачалоПоследнегоМесяцаНалоговогоПериода = НачалоМесяца(ПоследнийМесяцНалоговогоПериода);
		Для Каждого ТекущееФизическоеЛицо Из СписокФизическихЛиц Цикл
			СтрокаТаблицыПериодов = ПериодыРасчетаПоФизическимЛицам.Добавить();
			СтрокаТаблицыПериодов.ФизическоеЛицо = ТекущееФизическоеЛицо;
			СтрокаТаблицыПериодов.НачалоГодаНалоговогоПериода = НачалоГодаПериодаРасчета;
			СтрокаТаблицыПериодов.ПоследнийМесяцНалоговогоПериода = НачалоПоследнегоМесяцаНалоговогоПериода;
		КонецЦикла;	
	КонецЕсли;	
	ПериодыРасчетаПоФизическимЛицам.Индексы.Добавить("ФизическоеЛицо");

	// 4.	Получим данные о статусе налогоплательщиков физических лиц (ТЗ СтатусыФизическихЛиц) из регистра сведений СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.
	//	Вход: список физических лиц,  ПервыйМесяцНалоговогоПериода, ПоследнийМесяцНалоговогоПериода
	//	Выход: таблица значений с полями ФизическоеЛицо, ДатаНачала, ДатаОкончания, Статус, РезидентРФНаКонецМесяца, ПрименяетсяСтавкаПункта1Статьи224НК, РезидентРФНаКонецГода, СтатусНаКонецГода
	//			таблица индексирована по колонке ФизическоеЛицо 
	//	Описание алгоритма: 
	//		Читаем записи регистра СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный с отбором по списку физических лиц, действующие на начало года минимального месяца расчета, а также зарегистрированные между началом года минимального месяца расчета и концом максимального месяца расчета
	//		Применим отбор по списку физических лиц 
	СтатусыФизическихЛиц = СтатусыФизическихЛиц(СписокФизическихЛиц, ПервыйМесяцНалоговогоПериода, ПоследнийМесяцНалоговогоПериода);	

	// 5.	Для каждой строки полученных ранее данных учета доходов определим 
	//	- Ставку налогообложения (СтавкаЧислом)
	//	- Рассчитывать ли доход нарастающим итогом (ИсчислятьНалогНарастающимИтогом)
	//	- Сумму дохода за минусом вычета (ДоходыБезВычетов)
	//	- Сумму, используемую как коэффициент при распределении результатов расчета по подразделениям и категориям доходов (БазаРаспределения)
	//		... равна сумме дохода без вычета, для всех строк, если выполняется окончательный расчет, или для строк доходов, зарегистрированных для промежуточного расчета, и для всех строк, зарегистрированных раньше месяца расчета.
	ДополнитьДанныеУчетаСтавками(ДанныеУчетаДоходов, "УчитыватьИзмененияСтатусаДляРасчета", , СтатусыФизическихЛиц, ПервыйМесяцНалоговогоПериода, ПоследнийМесяцНалоговогоПериода);		
	ДанныеУчетаДоходов.Колонки.Добавить("ДоходыБезВычетов", Новый ОписаниеТипов("Число"));
	ДанныеУчетаДоходов.Колонки.Добавить("БазаРаспределения", Новый ОписаниеТипов("Число"));
	СтрокиКУдалению = Новый Соответствие;
	Для Каждого СтрокаТаблицыДоходов Из ДанныеУчетаДоходов Цикл
		Если СтрокаТаблицыДоходов.РезидентРФвНалоговомПериоде Или Не СтрокаТаблицыДоходов.ИсточникДоходаЗаПределамиРФ Тогда
			Если СтрокаТаблицыДоходов.ИсточникДоходаЗаПределамиРФ Тогда
				УчитыватьВычет = СтрокаТаблицыДоходов.УчитыватьВычетыКДоходамОтИсточникаВнеРФ;
			Иначе 
				УчитыватьВычет = СтрокаТаблицыДоходов.УчитыватьВсеВычетыКДоходамОтИсточникаРФ Или Не СтрокаТаблицыДоходов.НеПредоставляетсяНерезидентам 
			КонецЕсли;
			СтрокаТаблицыДоходов.ДоходыБезВычетов = СтрокаТаблицыДоходов.СуммаДохода - ?(УчитыватьВычет, СтрокаТаблицыДоходов.СуммаВычета, 0);
			Если СтрокаТаблицыДоходов.ИспользоватьДляРаспределения Тогда
				СтрокаТаблицыДоходов.БазаРаспределения = СтрокаТаблицыДоходов.ДоходыБезВычетов;
			КонецЕсли;				
		Иначе
			СтрокиКУдалению.Вставить(СтрокаТаблицыДоходов)
		КонецЕсли;
	КонецЦикла;
	Для Каждого УдаляемаяСтрока Из СтрокиКУдалению Цикл
		ДанныеУчетаДоходов.Удалить(УдаляемаяСтрока.Ключ);		
	КонецЦикла;	
	ДанныеУчетаДоходов.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода, ДатаПолученияДохода, КодДохода, Подразделение, СтавкаЧислом, ИсчислятьНалогНарастающимИтогом, Период, ДоходМежрасчетногоПериода, КатегорияДохода, ДоходТекущегоРасчета", "ДоходыБезВычетов, СуммаДохода, БазаРаспределения");
 	ДанныеУчетаДоходов.Колонки.СуммаДохода.Имя = "ВсеДоходы";
	
	// 6.	Поделим доходы на две части: для расчета налога нарастающим итогом и по каждой сумме дохода отдельно (абзацы первый и второй пункта 3 статьи 226 НК РФ)

	//	Для выделения доходов с расчетом налога по каждой сумме дохода отдельно из таблицы значений с данными учета доходов (где ранее рассчитана ставка налогообложения и признак расчета налога нарастающим итогом) 
	//	скопируем все строки с ИсчислятьНалогНарастающимИтогом = Ложь
	ДоходыДляРасчетаНалогаПоКаждойСуммеОтдельно = ДанныеУчетаДоходов.Скопировать(Новый Структура("ИсчислятьНалогНарастающимИтогом", Ложь));	
	//	Под "каждой суммой", для которой будем исчислять налог, понимаем сумму доходов физ.лица в одну дату получения дохода, по одному коду дохода, подразделению, категории, начисленную по отдельному основанию.
	ДоходыДляРасчетаНалогаПоКаждойСуммеОтдельно.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода, ДатаПолученияДохода, Подразделение, КатегорияДохода, СтавкаЧислом, ДоходТекущегоРасчета, ДоходМежрасчетногоПериода", "ДоходыБезВычетов");

	// В основной таблице оставим только доходы, по которым налог исчисляется нарастающим итогом.
	СоответствиеНерезидентов = Новый Соответствие;
	Если ДоходыДляРасчетаНалогаПоКаждойСуммеОтдельно.Количество() > 0 Тогда
		ДоходыДляРасчетаНалогаПоКаждойСуммеОтдельно.Индексы.Добавить(ПоляПоиска);
		ДоходыДляРасчетаНалогаПоКаждойСуммеОтдельно.Индексы.Добавить("ФизическоеЛицо, ДоходТекущегоРасчета, ДоходМежрасчетногоПериода");
		СоответствиеНерезидентов = ОбщегоНазначенияБЗККлиентСервер.МассивВСоответствие(ДоходыДляРасчетаНалогаПоКаждойСуммеОтдельно.ВыгрузитьКолонку("ФизическоеЛицо"));
		ДанныеУчетаДоходов = ДанныеУчетаДоходов.Скопировать(Новый Структура("ИсчислятьНалогНарастающимИтогом", Истина))
	КонецЕсли;
	
	РассчитыватьНалогНарастающимИтогом = ДанныеУчетаДоходов.Количество() > 0;
	
	// данные о праве на вычеты будем читать только при наличии резидентов
	Если РассчитыватьНалогНарастающимИтогом Тогда 
		
		// 7.	Получим таблицу с данными для распределения результатов расчета по подразделениям и категориям
		//	Из таблицы значений с данными учета доходов с дополнительно рассчитанной на предыдущем шаге колонкой БазаРаспределения
		//	копированием получаем новую таблицу значений, данные которой сгруппированы по полям 
		//	ФизическоеЛицо, МесяцНалоговогоПериода, ДатаПолученияДохода, КатегорияДохода, Подразделение, ДоходМежрасчетногоПериода, ДоходТекущегоРасчета
		ДоходыПоПодразделениямИКатегориям = ДанныеУчетаДоходов.Скопировать(, "ФизическоеЛицо, МесяцНалоговогоПериода, ДатаПолученияДохода, КатегорияДохода, Подразделение, ДоходМежрасчетногоПериода, ДоходТекущегоРасчета, ДоходыБезВычетов, БазаРаспределения");
		ДоходыПоПодразделениямИКатегориям.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода, ДатаПолученияДохода, КатегорияДохода, Подразделение, ДоходМежрасчетногоПериода, ДоходТекущегоРасчета", "ДоходыБезВычетов, БазаРаспределения");
		ДоходыПоПодразделениямИКатегориям.Колонки.ДоходыБезВычетов.Имя = "СуммаДоходаТекущегоРасчета"; 
		ДоходыПоПодразделениямИКатегориям.Колонки.БазаРаспределения.Имя = "СуммаДохода"; 
		ДоходыПоПодразделениямИКатегориям.Индексы.Добавить("ФизическоеЛицо");
		
		// 8.	Дополним таблицу значений с данными учета доходов итогами по месяцам и датам получения дохода, в том числе нарастающим итогом с начала года. 
		//		В результате в таблице должно получиться как минимум по одной строке на каждый месяц, по которому выполняется расчет по физическому лицу. 
		//	В таблице данных учета оставляем колонки ФизическоеЛицо, МесяцНалоговогоПериода, ДатаПолученияДохода, ДоходМежрасчетногоПериода, ДоходыБезВычетов, ВсеДоходы, БазаРаспределения
		//	и добавляем:
		//	- ОблагаемыйДоход - облагаемый доход нарастающим итогом с начала месяца этой даты по дату получения дохода из строки таблицы, причем строка с ДоходМежрасчетногоПериода = Истина предшествует строке "окончательного расчета" той же даты и не включает доход "окончательного расчета".
		//	- ОблагаемыйДоходНарастающимИтогом - облагаемый доход на конец месяца нарастающим итогом с начала года, заполняется только для первой строки за месяц.
		//	- ОблагаемыйДоходЗаМесяц - облагаемый доход месяца (доход - вычеты к доходам), заполняется только для первой строки за месяц.
		//	- ВсеДоходыЗаМесяц - сумма доходов месяца (без учета вычетов), служит флажком наличия доходов, заполняется только для первой строки за месяц.
		//	- СтаршийМесяцПолученияДохода - наибольший месяц налогового периода, за который имеется положительный доход (без учета вычетов), служит ограничением для расчета вычетов, заполняется только для первой строки за месяц.
		//	Для последующего удобства обхода таблицы добавляем признаки первой и последней строки по физическому лицу, налоговому периоду, месяцу налогового периода и дате получения дохода.
		ДанныеУчетаДоходов.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода, ДатаПолученияДохода, ДоходМежрасчетногоПериода", "ДоходыБезВычетов, ВсеДоходы");	
		ДанныеУчетаДоходов.Сортировать("ФизическоеЛицо, МесяцНалоговогоПериода, ДатаПолученияДохода, ДоходМежрасчетногоПериода УБЫВ", Новый СравнениеЗначений);
		
		ДанныеУчетаДоходов.Колонки.Добавить("ОблагаемыйДоход", Новый ОписаниеТипов("Число")); 
		ДанныеУчетаДоходов.Колонки.Добавить("ОблагаемыйДоходНарастающимИтогом", Новый ОписаниеТипов("Число"));
		ДанныеУчетаДоходов.Колонки.Добавить("ОблагаемыйДоходЗаМесяц", Новый ОписаниеТипов("Число"));
		ДанныеУчетаДоходов.Колонки.Добавить("ВсеДоходыЗаМесяц", Новый ОписаниеТипов("Число"));
		ДанныеУчетаДоходов.Колонки.Добавить("СтаршийМесяцПолученияДохода", Новый ОписаниеТипов("Дата"));
		ДанныеУчетаДоходов.Колонки.Добавить("ЭтоПоследняяСтрокаЗаДату", Новый ОписаниеТипов("Булево"));
		ДанныеУчетаДоходов.Колонки.Добавить("ЭтоПоследняяСтрокаЗаМесяц", Новый ОписаниеТипов("Булево"));	
		ДанныеУчетаДоходов.Колонки.Добавить("ЭтоПоследняяСтрокаЗаГод", Новый ОписаниеТипов("Булево"));	
		ДанныеУчетаДоходов.Колонки.Добавить("ЭтоПоследняяСтрокаПоФизическомуЛицу", Новый ОписаниеТипов("Булево"));
		ДанныеУчетаДоходов.Колонки.Добавить("ЭтоПерваяСтрокаЗаДату", Новый ОписаниеТипов("Булево"));
		ДанныеУчетаДоходов.Колонки.Добавить("ЭтоПерваяСтрокаЗаМесяц", Новый ОписаниеТипов("Булево"));	
		ДанныеУчетаДоходов.Колонки.Добавить("ЭтоПерваяСтрокаЗаГод", Новый ОписаниеТипов("Булево"));	
		ДанныеУчетаДоходов.Колонки.Добавить("ЭтоПерваяСтрокаПоФизическомуЛицу", Новый ОписаниеТипов("Булево"));
		
		//	Описание алгоритма:
		//	В результирующей таблице (для экономии памяти, модифицируем входную таблицу с доходами) будут строки на каждую дату получения дохода, причем если на дату зарегистрирован 
		//	доход для промежуточного и для окончательно расчета, на дату будет две строки с разными значениями ДоходМежрасчетногоПериода. 
		//	Если облагаемый доход нарастающим итогом с начала месяца по дату получения дохода равен 0 и эта строка не является последней за месяц, то не будем оставлять ее в таблице.
		//	Если за месяц, входящий в период расчета по физическому лицу, вообще не было зарегистрировано доходов, то добавим строку с датой получения дохода, равной концу месяца.
		//	При расчете поля ОблагаемыйДоход (доход нарастающим итогом с начала месяца этой даты по дату получения дохода):
		//		если в строке отражен доход межрасчетного периода (ДоходМежрасчетногоПериода = Истина), возьмем все доходы за предыдущие даты месяца и доход текущей строки
		//		если в строке отражен доход окончательного расчета (ДоходМежрасчетногоПериода = Ложь), возьмем все доходы за предыдущие даты месяца и все доходы за текущую дату
		//	Алгоритм реализуется оптимальным образом за счет сортировки предварительно свернутой таблицы с данными учета доходов  по полям ФизическоеЛицо, МесяцНалоговогоПериода, ДатаПолученияДохода, ДоходМежрасчетногоПериода (по убыванию)  
		СтрокиКУдалению = Новый Соответствие;
		ИндексОбрабатываемойСтроки = 0;
		Пока ИндексОбрабатываемойСтроки <= ДанныеУчетаДоходов.Количество() - 1 Цикл
			
			СтрокиПоФизическомуЛицу = Новый Массив;
			ПервыеСтрокиМесяцев = Новый Массив;
			ТекущаяСтрока = ДанныеУчетаДоходов[ИндексОбрабатываемойСтроки];
			ТекущееФизическоеЛицо = ТекущаяСтрока.ФизическоеЛицо;
			
			МесяцНачала = '00010101';
			МесяцОкончания = '00010101';
			СтрокиТаблицыПериодов = ПериодыРасчетаПоФизическимЛицам.НайтиСтроки(Новый Структура("ФизическоеЛицо", ТекущееФизическоеЛицо));
			Если СтрокиТаблицыПериодов.Количество() > 0 Тогда
				МесяцНачала = СтрокиТаблицыПериодов[0].НачалоГодаНалоговогоПериода;
				МесяцОкончания = СтрокиТаблицыПериодов[0].ПоследнийМесяцНалоговогоПериода;
			КонецЕсли;
			
			ПоследнийОбработанныйМесяц = ТекущаяСтрока.МесяцНалоговогоПериода;
			ПоследнийМесяцДополнения = Мин(НачалоГода(ТекущаяСтрока.МесяцНалоговогоПериода), МесяцОкончания);
			ДополнитьСтрокамиМесяцевБезДоходов(ДанныеУчетаДоходов, СтрокиПоФизическомуЛицу, ПервыеСтрокиМесяцев, ТекущееФизическоеЛицо, МесяцНачала, ПоследнийМесяцДополнения, ИндексОбрабатываемойСтроки);	
			
			ПредыдущаяСтрока = Неопределено;
			ПредыдущийНалоговыйПериод = Неопределено;
			Пока ИндексОбрабатываемойСтроки <= ДанныеУчетаДоходов.Количество() - 1 И ДанныеУчетаДоходов[ИндексОбрабатываемойСтроки].ФизическоеЛицо = ТекущееФизическоеЛицо Цикл
				
				ТекущаяСтрока = ДанныеУчетаДоходов[ИндексОбрабатываемойСтроки];
				ТекущийМесяцНалоговогоПериода = ТекущаяСтрока.МесяцНалоговогоПериода;
				
				Если Не (ТекущийМесяцНалоговогоПериода >= МесяцНачала И ТекущийМесяцНалоговогоПериода <= МесяцОкончания) Тогда
					ИндексОбрабатываемойСтроки = ИндексОбрабатываемойСтроки + 1;
					СтрокиКУдалению.Вставить(ТекущаяСтрока);
					Продолжить;
				КонецЕсли;	
				
				УдалятьТекущуюСтроку = Ложь;
				ТекущийНалоговыйПериод = НачалоГода(ТекущийМесяцНалоговогоПериода);
				
				Если ТекущийНалоговыйПериод <> ПредыдущийНалоговыйПериод Или ПредыдущаяСтрока = Неопределено Тогда	
					
					Если ПредыдущаяСтрока <> Неопределено Тогда
						ПредыдущаяСтрока.ЭтоПоследняяСтрокаЗаГод = Истина;
						ПредыдущаяСтрока.ЭтоПоследняяСтрокаЗаМесяц = Истина;
						ПредыдущаяСтрока.ЭтоПоследняяСтрокаЗаДату = Истина;
						РассчитатьСтаршийМесяцПолученияДохода(ПервыеСтрокиМесяцев);
					КонецЕсли;	
					
					ПоследнийМесяцДополнения = Мин(ТекущийМесяцНалоговогоПериода, МесяцОкончания);
					ДополнитьСтрокамиМесяцевБезДоходов(ДанныеУчетаДоходов, СтрокиПоФизическомуЛицу, ПервыеСтрокиМесяцев, ТекущееФизическоеЛицо, ТекущийНалоговыйПериод, ПоследнийМесяцДополнения, ИндексОбрабатываемойСтроки);			
					
					ТекущаяСтрока.ЭтоПерваяСтрокаЗаГод = Месяц(ТекущийМесяцНалоговогоПериода) = 1;
					ТекущаяСтрока.ЭтоПерваяСтрокаЗаМесяц = Истина;
					ТекущаяСтрока.ЭтоПерваяСтрокаЗаДату = Истина;
					
					ОблагаемыйДоход = 0;
					ОблагаемыйДоходНарастающимИтогомЗаГод = 0;
					ПерваяСтрокаЗаМесяц = ТекущаяСтрока;
					ПервыеСтрокиМесяцев.Добавить(ПерваяСтрокаЗаМесяц);
					ПредыдущийНалоговыйПериод = ТекущийНалоговыйПериод;
					
				ИначеЕсли ТекущийМесяцНалоговогоПериода <> ПредыдущаяСтрока.МесяцНалоговогоПериода Тогда 			
					
					ПредыдущаяСтрока.ЭтоПоследняяСтрокаЗаМесяц = Истина;
					ПредыдущаяСтрока.ЭтоПоследняяСтрокаЗаДату = Истина;
					
					ПоследнийМесяцДополнения = Мин(ТекущийМесяцНалоговогоПериода, МесяцОкончания);
					ДополнитьСтрокамиМесяцевБезДоходов(ДанныеУчетаДоходов, СтрокиПоФизическомуЛицу, ПервыеСтрокиМесяцев, ТекущееФизическоеЛицо, ДобавитьМесяц(ПредыдущаяСтрока.МесяцНалоговогоПериода, 1), ТекущийМесяцНалоговогоПериода, ИндексОбрабатываемойСтроки, ОблагаемыйДоходНарастающимИтогомЗаГод);
					
					ТекущаяСтрока.ЭтоПерваяСтрокаЗаМесяц = Истина;
					ТекущаяСтрока.ЭтоПерваяСтрокаЗаДату = Истина;
					
					ОблагаемыйДоход = 0;		
					ПерваяСтрокаЗаМесяц = ТекущаяСтрока;
					ПервыеСтрокиМесяцев.Добавить(ПерваяСтрокаЗаМесяц);
					
				ИначеЕсли ТекущаяСтрока.ДатаПолученияДохода <> ПредыдущаяСтрока.ДатаПолученияДохода Тогда
					ПредыдущаяСтрока.ЭтоПоследняяСтрокаЗаДату = Истина;
					// Если на предыдущую дату доход нарастающим итогом с начала месяца равен 0, то соответствующая строка не нужна: в
					// месяце есть еще строки
					Если ПредыдущаяСтрока.ОблагаемыйДоход = 0 Тогда
						ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ПредыдущаяСтрока, "ЭтоПерваяСтрокаПоФизическомуЛицу, ЭтоПерваяСтрокаЗаГод, ЭтоПерваяСтрокаЗаМесяц, ОблагаемыйДоходЗаМесяц, ВсеДоходыЗаМесяц");								
						СтрокиКУдалению.Вставить(ПредыдущаяСтрока);	
						СтрокиПоФизическомуЛицу.Удалить(СтрокиПоФизическомуЛицу.Количество() - 1);
						Если ПредыдущаяСтрока.ЭтоПерваяСтрокаЗаМесяц Тогда
							ПерваяСтрокаЗаМесяц = ТекущаяСтрока;
							ПервыеСтрокиМесяцев.Добавить(ПерваяСтрокаЗаМесяц);
						КонецЕсли;	
					КонецЕсли;		
					ТекущаяСтрока.ЭтоПерваяСтрокаЗаДату = Истина;
				ИначеЕсли ОблагаемыйДоход + ТекущаяСтрока.ДоходыБезВычетов = 0 Тогда 
					УдалятьТекущуюСтроку = Истина;
				КонецЕсли;	
				
				ОблагаемыйДоход = ОблагаемыйДоход + ТекущаяСтрока.ДоходыБезВычетов;
				ОблагаемыйДоходНарастающимИтогомЗаГод = ОблагаемыйДоходНарастающимИтогомЗаГод + ТекущаяСтрока.ДоходыБезВычетов;
				ТекущаяСтрока.ОблагаемыйДоход = ОблагаемыйДоход;	
				ПерваяСтрокаЗаМесяц.ОблагаемыйДоходЗаМесяц = ПерваяСтрокаЗаМесяц.ОблагаемыйДоходЗаМесяц + ТекущаяСтрока.ДоходыБезВычетов;
				ПерваяСтрокаЗаМесяц.ВсеДоходыЗаМесяц = ПерваяСтрокаЗаМесяц.ВсеДоходыЗаМесяц + ТекущаяСтрока.ВсеДоходы;
				ПерваяСтрокаЗаМесяц.ОблагаемыйДоходНарастающимИтогом = ОблагаемыйДоходНарастающимИтогомЗаГод;
				
				ИндексОбрабатываемойСтроки = ИндексОбрабатываемойСтроки + 1;
				
				Если УдалятьТекущуюСтроку Тогда
					СтрокиКУдалению.Вставить(ТекущаяСтрока);
				Иначе	
					ПредыдущаяСтрока = ТекущаяСтрока;
					СтрокиПоФизическомуЛицу.Добавить(ТекущаяСтрока);
				КонецЕсли;	
			КонецЦикла;	// по физ.лицу                        
			
			Если СтрокиПоФизическомуЛицу.Количество() > 0 Тогда
				СтрокиПоФизическомуЛицу[СтрокиПоФизическомуЛицу.Количество() - 1].ЭтоПоследняяСтрокаПоФизическомуЛицу = Истина;	
				СтрокиПоФизическомуЛицу[СтрокиПоФизическомуЛицу.Количество() - 1].ЭтоПоследняяСтрокаЗаГод = Истина;
				СтрокиПоФизическомуЛицу[СтрокиПоФизическомуЛицу.Количество() - 1].ЭтоПоследняяСтрокаЗаМесяц = Истина;
				СтрокиПоФизическомуЛицу[СтрокиПоФизическомуЛицу.Количество() - 1].ЭтоПоследняяСтрокаЗаДату = Истина;
				СтрокиПоФизическомуЛицу[0].ЭтоПерваяСтрокаПоФизическомуЛицу = Истина;
				СтрокиПоФизическомуЛицу[0].ЭтоПерваяСтрокаЗаГод = Истина;
				СтрокиПоФизическомуЛицу[0].ЭтоПерваяСтрокаЗаМесяц = Истина;
				СтрокиПоФизическомуЛицу[0].ЭтоПерваяСтрокаЗаДату = Истина;
				РассчитатьСтаршийМесяцПолученияДохода(ПервыеСтрокиМесяцев);
			КонецЕсли;	
			
		КонецЦикла;		
		Для Каждого УдаляемаяСтрока Из СтрокиКУдалению Цикл
			ДанныеУчетаДоходов.Удалить(УдаляемаяСтрока.Ключ);		
		КонецЦикла;	
		
		// 9.	Получим доходы с предыдущего места работы
		//	Читаем регистр ДоходыПредыдущегоМестаРаботыНДФЛ с отбором по списку физических лиц, головной организации для всех месяцев периода расчета.
		//	В качестве результата получаем таблицу значений с полями ФизическоеЛицо, МесяцНалоговогоПериода, Размер
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоходыПредыдущегоМестаРаботыНДФЛ.ФизическоеЛицо,
		|	ДоходыПредыдущегоМестаРаботыНДФЛ.МесяцНалоговогоПериода,
		|	ДоходыПредыдущегоМестаРаботыНДФЛ.Размер
		|ИЗ
		|	РегистрСведений.ДоходыПредыдущегоМестаРаботыНДФЛ КАК ДоходыПредыдущегоМестаРаботыНДФЛ
		|ГДЕ
		|	ДоходыПредыдущегоМестаРаботыНДФЛ.ФизическоеЛицо В (&СписокФизическихЛиц)
		|	И ДоходыПредыдущегоМестаРаботыНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|	И ДоходыПредыдущегоМестаРаботыНДФЛ.МесяцНалоговогоПериода
		|		МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета";
		ДоходыСПредыдущегоМестаРаботы = Запрос.Выполнить().Выгрузить();
		ДоходыСПредыдущегоМестаРаботы.Индексы.Добавить(ПоляПоиска);
		
		// Признак из учетной политики, определяющий порядок накопления сумм стандартных вычетов. 
		ПрименятьСтандартныеВычетыНарастающимИтогом = Истина;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетнаяПолитикаПоНДФЛ.ОсобенностиИсчисленияНДФЛ КАК ОсобенностиИсчисленияНДФЛ
		|ИЗ
		|	РегистрСведений.УчетнаяПолитикаПоНДФЛ КАК УчетнаяПолитикаПоНДФЛ
		|ГДЕ
		|	УчетнаяПолитикаПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ПрименятьСтандартныеВычетыНарастающимИтогом = Выборка.ОсобенностиИсчисленияНДФЛ = Перечисления.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом;
		КонецЕсли;
		
		// 10.	Информация о правах на стандартные вычеты
		//	Читаем из регистра СтандартныеВычетыПоНДФЛВторичный записи с отбором по списку физических лиц, действующие (определяем по ДатаНачала) на начало года первого месяца 
		//	налогового периода расчета или зарегистрированные между началом года первого месяца налогового периода расчета и последним месяцем налогового периода расчета.
		//	В качестве результата получаем таблицу значений с полями ФизическоеЛицо, ДатаНачала, ДатаОкончания, ПериодРегистрацииНачало, ПериодРегистрацииОкончание, КодВычета, ЛичныйВычет, Количество.
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВычетыНаДетей.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВычетыНаДетей.ДатаНачала КАК ДатаНачала,
		|	ВычетыНаДетей.ДатаОкончания КАК ДатаОкончания,
		|	ВычетыНаДетей.ПериодРегистрацииНачало КАК ПериодРегистрацииНачало,
		|	ВычетыНаДетей.ПериодРегистрацииОкончание КАК ПериодРегистрацииОкончание,
		|	ВычетыНаДетей.КодВычета КАК КодВычета,
		|	ВычетыНаДетей.ЛичныйВычет КАК ЛичныйВычет,
		|	ВычетыНаДетей.Количество КАК Количество
		|ИЗ
		|	РегистрСведений.СтандартныеВычетыПоНДФЛВторичный КАК ВычетыНаДетей
		|ГДЕ
		|	ВычетыНаДетей.ФизическоеЛицо В(&СписокФизическихЛиц)
		|	И (&НачалоГодаПериодаРасчета МЕЖДУ ВычетыНаДетей.ДатаНачала И ВычетыНаДетей.ДатаОкончания
		|			ИЛИ ВычетыНаДетей.ДатаНачала МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
		|	И (НЕ ВычетыНаДетей.ЛичныйВычет
		|			ИЛИ ВычетыНаДетей.КодВычета <> ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка))";
		ВычетыНаДетейИЛичные = Запрос.Выполнить().Выгрузить();
		ВычетыНаДетейИЛичные.Индексы.Добавить("ФизическоеЛицо"); 
		
		// 11.	Получим информацию о применении вычетов по физическим лицам в организации, для которой ведется расчет налога.
		//	Читаем записи регистра ПрименениеСтандартныхВычетовПоНДФЛВторичный по списку физических лиц и головной организации, действующие (определяем по ДатаНачала) на начало года первого месяца 
		//	налогового периода расчета или зарегистрированные между началом года первого месяца налогового периода расчета и последним месяцем налогового периода расчета.
		//	В качестве результата получаем таблицу значений с полями ФизическоеЛицо, ДатаНачала, ДатаОкончания, ПрименятьВычеты
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПрименениеСтандартныхВычетовПоНДФЛВторичный.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПрименениеСтандартныхВычетовПоНДФЛВторичный.ДатаНачала КАК ДатаНачала,
		|	ПрименениеСтандартныхВычетовПоНДФЛВторичный.ДатаОкончания КАК ДатаОкончания,
		|	ПрименениеСтандартныхВычетовПоНДФЛВторичный.ПрименятьВычеты КАК ПрименятьВычеты
		|ИЗ
		|	РегистрСведений.ПрименениеСтандартныхВычетовПоНДФЛВторичный КАК ПрименениеСтандартныхВычетовПоНДФЛВторичный
		|ГДЕ
		|	ПрименениеСтандартныхВычетовПоНДФЛВторичный.ФизическоеЛицо В(&СписокФизическихЛиц)
		|	И ПрименениеСтандартныхВычетовПоНДФЛВторичный.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|	И (&НачалоГодаПериодаРасчета МЕЖДУ ПрименениеСтандартныхВычетовПоНДФЛВторичный.ДатаНачала И ПрименениеСтандартныхВычетовПоНДФЛВторичный.ДатаОкончания
		|			ИЛИ ПрименениеСтандартныхВычетовПоНДФЛВторичный.ДатаНачала МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)";
		ПрименениеСтандартныхВычетов = Запрос.Выполнить().Выгрузить();
		ПрименениеСтандартныхВычетов.Индексы.Добавить("ФизическоеЛицо");
		
		// Прочитаем размеры вычетов за каждый год периода расчета.
		// В качестве результата получаем соответствие, в котором по годам лежат соответствия, в которых каждому вычету
		// сопоставлена структура с полями Размер и ОграничениеПоДоходам.
		РазмерыВычетов = УчетНДФЛПовтИсп.РазмерыВычетов(НачалоГода(ПервыйМесяцНалоговогоПериода), НачалоГода(ПоследнийМесяцНалоговогоПериода));
		
	КонецЕсли;
	
	// 12.	Получим данные об имущественных вычетах (как ранее предоставленные, так и о праве на вычет)
	//	Читаем записи регистра накопления ИмущественныеВычетыНДФЛ по списку физических лиц и головной организации, зарегистрированные за весь период расчетов.
	//	Для записей прихода (права на вычеты) период дополнительно ограничиваем сверху окончанием месяца расчета (весь период расчетов может заканчиваться позже), а также учитываем только те записи, у которых год поля период совпадает со значением измерения Год.
	//	Для записей расхода (использованные вычеты) дополнительно проверяем условие на "межрасчетность" записей при выполнении промежуточного расчета.
	//	Полученный результат дополняем данными текущего регистратора о праве на вычеты и группируем.
	//	В качестве результата получаем таблицу значений с полями ФизическоеЛицо, МесяцНалоговогоПериода, КодВычета, ВидДвижения, Подразделение, Сумма.
	КонецПериодаИмущественныхВычетов = Макс(КонецПериодаРасчета, КонецМесяцаРасчета);
	Запрос.УстановитьПараметр("КонецПериодаИмущественныхВычетов", КонецПериодаИмущественныхВычетов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИмущественныеВычеты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(ИмущественныеВычеты.Период, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ИмущественныеВычеты.КодВычета КАК КодВычета,
	|	ИмущественныеВычеты.ВидДвижения КАК ВидДвижения,
	|	ВЫБОР
	|		КОГДА ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ИмущественныеВычеты.Подразделение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|	КОНЕЦ КАК Подразделение,
	|	СУММА(ИмущественныеВычеты.Сумма) КАК Сумма
	|ИЗ
	|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычеты
	|ГДЕ
	|	ИмущественныеВычеты.Регистратор <> &ИсключаемыйРегистратор
	|	И ИмущественныеВычеты.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаИмущественныхВычетов
	|	И ИмущественныеВычеты.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И ИмущественныеВычеты.ФизическоеЛицо В(&СписокФизическихЛиц)
	|	И НЕ ИмущественныеВычеты.ЗарегистрированоПриНачисленииАванса В (&МесяцыНачисленияЗарплаты)
	|	И ВЫБОР
	|			КОГДА ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ИмущественныеВычеты.Год = ГОД(ИмущественныеВычеты.Период)
	|						И ИмущественныеВычеты.Период <= &КонецМесяцаРасчета
	|			ИНАЧЕ ИмущественныеВычеты.Период <= &КонецПериодаРасчета
	|					И &ОкончательныйРасчетВычеты
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ИмущественныеВычеты.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(ИмущественныеВычеты.Период, МЕСЯЦ),
	|	ИмущественныеВычеты.КодВычета,
	|	ИмущественныеВычеты.ВидДвижения,
	|	ВЫБОР
	|		КОГДА ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ИмущественныеВычеты.Подразделение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|	КОНЕЦ";	
	Если ОкончательныйРасчет Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОкончательныйРасчетВычеты", "Истина");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОкончательныйРасчетВычеты", 
		"(Период < &НачалоМесяцаРасчета
		|			ИЛИ ВычетМежрасчетногоПериода
		|				И (Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета))");
	КонецЕсли;
	
	ИмущественныеВычеты = Запрос.Выполнить().Выгрузить();
	Если ДвиженияТекущегоРегистратора <> Неопределено И ПроведениеСервер.ЕстьДвижения(ДвиженияТекущегоРегистратора, "ИмущественныеВычетыНДФЛ") Тогда
		ЕстьНовыеЗаписи = Ложь;
		Для Каждого СтрокаВычетовТекущегоРегистратора Из ДвиженияТекущегоРегистратора.ИмущественныеВычетыНДФЛ Цикл
			Если СоответствиеФизическихЛиц[СтрокаВычетовТекущегоРегистратора.ФизическоеЛицо] <> Истина Тогда
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаВычетовТекущегоРегистратора.ЗарегистрированоПриНачисленииАванса) Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = ИмущественныеВычеты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВычетовТекущегоРегистратора);
			НоваяСтрока.МесяцНалоговогоПериода = НачалоМесяца(СтрокаВычетовТекущегоРегистратора.Период);
			НоваяСтрока.Подразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			ЕстьНовыеЗаписи = Истина;
			
		КонецЦикла;	
		Если ЕстьНовыеЗаписи Тогда // Новые права и сторно-записи регистрируются достаточно редко, поэтому проверим, надо ли сворачивать таблицу.
			ИмущественныеВычеты.Свернуть("ФизическоеЛицо, Подразделение, МесяцНалоговогоПериода, ВидДвижения, КодВычета", "Сумма");
		КонецЕсли;
	КонецЕсли;	
	ИмущественныеВычеты.Индексы.Добавить("ФизическоеЛицо, МесяцНалоговогоПериода, ВидДвижения");
	
	// 13.	Получим информацию о предоставленных стандартных и социальных вычетах.
	//	Читаем записи регистра накопления ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛс по списку физических лиц и головной организации, зарегистрированные за 
	//	период между началом года первого месяца налогового периода и концом последнего месяца налогового периода.
	//	Дополнительно проверяем условие на "межрасчетность" записей при выполнении промежуточного расчета.
	//	Для стандартных вычетов заполняем поля Подразделение и КодВычета (для социальных вычетов берем пустые ссылки). 
	//	Рассчитываем поле ЭтоСоциальныйВычет (булево) исходя из группы вычета.
	//	Полученный результат дополняем данными текущего регистратора о праве на социальные вычеты и группируем.
	//	В качестве результата получаем таблицу значений с полями ФизическоеЛицо, МесяцНалоговогоПериода, КодВычета, ЭтоСоциальныйВычет, Подразделение, Сумма.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВычетыБД.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА ВычетыБД.КодВычета.ГруппаВычета = ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Социальные)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|		ИНАЧЕ ВычетыБД.КодВычета
	|	КОНЕЦ КАК КодВычета,
	|	ВЫБОР
	|		КОГДА ВычетыБД.КодВычета.ГруппаВычета = ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Социальные)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоСоциальныйВычет,
	|	ВЫБОР
	|		КОГДА ВычетыБД.КодВычета.ГруппаВычета = ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Социальные)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|		ИНАЧЕ ВычетыБД.Подразделение
	|	КОНЕЦ КАК Подразделение,
	|	НАЧАЛОПЕРИОДА(ВычетыБД.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	НАЧАЛОПЕРИОДА(ВЫБОР
	|			КОГДА ВычетыБД.КодВычета.ГруппаВычета = ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Социальные)
	|				ТОГДА ВычетыБД.МесяцНалоговогоПериода
	|			КОГДА ВычетыБД.МесяцПериодаПредоставленияВычета = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ВычетыБД.МесяцНалоговогоПериода
	|			ИНАЧЕ ВычетыБД.МесяцПериодаПредоставленияВычета
	|		КОНЕЦ, МЕСЯЦ) КАК МесяцПериодаПредоставленияВычета,
	|	СУММА(ВычетыБД.Сумма) КАК Сумма
	|ИЗ
	|	РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ВычетыБД
	|ГДЕ
	|	ВычетыБД.Период МЕЖДУ &НачалоПредшествующегоГода И &КонецМесяцаРасчета
	|	И ВычетыБД.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И ВычетыБД.ФизическоеЛицо В(&СписокФизическихЛиц)
	|	И (ВЫБОР
	|				КОГДА ВычетыБД.КодВычета.ГруппаВычета = ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Социальные)
	|					ТОГДА ВычетыБД.МесяцНалоговогоПериода
	|				КОГДА ВычетыБД.МесяцПериодаПредоставленияВычета = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА ВычетыБД.МесяцНалоговогоПериода
	|				ИНАЧЕ ВычетыБД.МесяцПериодаПредоставленияВычета
	|			КОНЕЦ МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	|			ИЛИ ВычетыБД.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета)
	|	И ВычетыБД.Регистратор <> &ИсключаемыйРегистратор
	|	И НЕ ВычетыБД.ЗарегистрированоПриНачисленииАванса В (&МесяцыНачисленияЗарплаты)
	|	И &ОкончательныйРасчетВычеты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВычетыБД.ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА ВычетыБД.КодВычета.ГруппаВычета = ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Социальные)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВычетыБД.КодВычета.ГруппаВычета = ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Социальные)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|		ИНАЧЕ ВычетыБД.Подразделение
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВычетыБД.КодВычета.ГруппаВычета = ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Социальные)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|		ИНАЧЕ ВычетыБД.КодВычета
	|	КОНЕЦ,
	|	НАЧАЛОПЕРИОДА(ВЫБОР
	|			КОГДА ВычетыБД.КодВычета.ГруппаВычета = ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Социальные)
	|				ТОГДА ВычетыБД.МесяцНалоговогоПериода
	|			КОГДА ВычетыБД.МесяцПериодаПредоставленияВычета = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ВычетыБД.МесяцНалоговогоПериода
	|			ИНАЧЕ ВычетыБД.МесяцПериодаПредоставленияВычета
	|		КОНЕЦ, МЕСЯЦ),
	|	ВычетыБД.МесяцНалоговогоПериода";
	Если ОкончательныйРасчет Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОкончательныйРасчетВычеты", "Истина");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОкончательныйРасчетВычеты", 
		"(Период < &НачалоМесяцаРасчета
		|			ИЛИ ВычетМежрасчетногоПериода
		|				И (Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета))");		
	КонецЕсли;

	ПредоставленныеСтандартныеИСоциальныеВычеты = Запрос.Выполнить().Выгрузить();
	Если ДвиженияТекущегоРегистратора <> Неопределено И ПроведениеСервер.ЕстьДвижения(ДвиженияТекущегоРегистратора, "ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ") Тогда
		ЕстьНовыеЗаписи = Ложь;
		Для Каждого ТекущаяСтрока Из ДвиженияТекущегоРегистратора.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ Цикл
			Если СоответствиеФизическихЛиц[ТекущаяСтрока.ФизическоеЛицо] <> Истина Тогда
				Продолжить;	
			КонецЕсли;			
			Если ЗначениеЗаполнено(ТекущаяСтрока.ЗарегистрированоПриНачисленииАванса) Тогда
				Продолжить;
			КонецЕсли;
				
			НоваяСтрока = ПредоставленныеСтандартныеИСоциальныеВычеты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
			НоваяСтрока.МесяцНалоговогоПериода = НачалоМесяца(ТекущаяСтрока.МесяцНалоговогоПериода);
			НоваяСтрока.ЭтоСоциальныйВычет = ТекущаяСтрока.КодВычета.ГруппаВычета = Перечисления.ГруппыВычетовПоНДФЛ.Социальные;	
			Если НоваяСтрока.ЭтоСоциальныйВычет Тогда
				НоваяСтрока.МесяцПериодаПредоставленияВычета = НоваяСтрока.МесяцНалоговогоПериода;
				НоваяСтрока.Подразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
				НоваяСтрока.КодВычета = Справочники.ВидыВычетовНДФЛ.ПустаяСсылка();
			ИначеЕсли Не ЗначениеЗаполнено(НоваяСтрока.МесяцПериодаПредоставленияВычета) Тогда	
				НоваяСтрока.МесяцПериодаПредоставленияВычета = НоваяСтрока.МесяцНалоговогоПериода;
			КонецЕсли;
			НоваяСтрока.МесяцПериодаПредоставленияВычета = НачалоМесяца(НоваяСтрока.МесяцПериодаПредоставленияВычета);
			ЕстьНовыеЗаписи = Истина;
				
		КонецЦикла;
		Если ЕстьНовыеЗаписи Тогда // Сторно-записи регистрируются достаточно редко, поэтому проверим, надо ли сворачивать таблицу.
			ПредоставленныеСтандартныеИСоциальныеВычеты.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода, МесяцПериодаПредоставленияВычета, КодВычета, Подразделение, ЭтоСоциальныйВычет", "Сумма");
		КонецЕсли;			
	КонецЕсли;	
	ПредоставленныеСтандартныеИСоциальныеВычеты.Индексы.Добавить("ФизическоеЛицо, МесяцПериодаПредоставленияВычета, ЭтоСоциальныйВычет");
		
	// 14.	Получим информацию об исчисленном ранее налоге
	//	Читаем приходные записи (соответствуют налогу исчисленному) регистра накопления РасчетыНалогоплательщиковСБюджетомПоНДФЛ по списку физических лиц и головной организации со ставкой резидента 13%, 
	//	зарегистрированные за период между началом года первого месяца налогового периода и концом последнего месяца налогового периода.
	//	Дополнительно проверяем условие на "межрасчетность" записей при выполнении промежуточного расчета.
	//	Рассчитываем поле МесяцНалоговогоПериодаДляПоиска как начало месяца налогового периода.
	//	В качестве результата получаем таблицу значений с полями ФизическоеЛицо,  МесяцНалоговогоПериодаДляПоиска, МесяцНалоговогоПериода, Подразделение, КатегорияДохода и НалогПоСтавке13
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериодаДляПоиска,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение КАК Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|	-СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма) КАК НалогПоСтавке13,
	|	0 КАК НалогСПревышенияПоСтавке13
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор <> &ИсключаемыйРегистратор
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период МЕЖДУ &НачалоПредшествующегоГода И &КонецМесяцаРасчета
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо В(&СписокФизическихЛиц)
	|	И НЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ЗарегистрированоПриНачисленииАванса В (&МесяцыНачисленияЗарплаты)
	|	И &ОкончательныйРасчетПоРасчетам
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ),
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода";
	Если ОкончательныйРасчет Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОкончательныйРасчетПоРасчетам", "Истина");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОкончательныйРасчетПоРасчетам", 
		"(Период < &НачалоМесяцаРасчета
		|			ИЛИ РасчетМежрасчетногоПериода
		|				И (Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета))");	
	КонецЕсли;
	ИсчисленныйРанееНалог = Запрос.Выполнить().Выгрузить();
	Если ДвиженияТекущегоРегистратора <> Неопределено И ПроведениеСервер.ЕстьДвижения(ДвиженияТекущегоРегистратора, "РасчетыНалогоплательщиковСБюджетомПоНДФЛ") Тогда
		ЕстьНовыеЗаписи = Ложь;
		Для Каждого СтрокаНалогаТекущегоРегистратора Из ДвиженияТекущегоРегистратора.РасчетыНалогоплательщиковСБюджетомПоНДФЛ Цикл
			
			Если ЗначениеЗаполнено(СтрокаНалогаТекущегоРегистратора.ЗарегистрированоПриНачисленииАванса) Тогда
				Продолжить;
			КонецЕсли;
			Если СоответствиеФизическихЛиц[СтрокаНалогаТекущегоРегистратора.ФизическоеЛицо] <> Истина 
				Или СтрокаНалогаТекущегоРегистратора.ВидДвижения = ВидДвиженияНакопления.Расход 
				Или СтрокаНалогаТекущегоРегистратора.СтавкаНалогообложенияРезидента <> Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13 Тогда
				Продолжить;	
			КонецЕсли;			
				 
			НоваяСтрока = ИсчисленныйРанееНалог.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаНалогаТекущегоРегистратора);	
			НоваяСтрока.МесяцНалоговогоПериодаДляПоиска = НачалоМесяца(СтрокаНалогаТекущегоРегистратора.МесяцНалоговогоПериода);
			НоваяСтрока.НалогПоСтавке13 = -СтрокаНалогаТекущегоРегистратора.Сумма;
			ЕстьНовыеЗаписи = Истина;
		КонецЦикла;	
		Если ЕстьНовыеЗаписи Тогда // Сторно-записи регистрируются достаточно редко, поэтому проверим, надо ли сворачивать таблицу.
			ИсчисленныйРанееНалог.Свернуть("Подразделение, ФизическоеЛицо, МесяцНалоговогоПериода, МесяцНалоговогоПериодаДляПоиска, КатегорияДохода", "НалогПоСтавке13");	
		КонецЕсли;	
	КонецЕсли;	
	ИсчисленныйРанееНалог.Индексы.Добавить("ФизическоеЛицо, МесяцНалоговогоПериодаДляПоиска"); 
	
	// 15.	Получим информацию об остатках авансовых платежей в бюджет
	//	Читаем остатки из регистра АвансовыеПлатежиИностранцевПоНДФЛ по списку физических лиц на конец месяца расчета за годы периода расчета.
	//	Отнимем движения исключаемого регистратора (удовлетворяющих тем же условиям что и данные остатков)
	//	В качестве результата получаем таблицу значений с полями ФизическоеЛицо, НалоговыйПериод (число, год), Остаток
	Запрос.УстановитьПараметр("МинимальныйГод", Год(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("МаксимальныйГод", Год(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("КонецМесяцаРасчета", КонецМесяца(МесяцРасчета) + 1);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Авансы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Авансы.НалоговыйПериод КАК НалоговыйПериод,
	|	СУММА(Авансы.Остаток) КАК Остаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		АвансовыеПлатежиИностранцевПоНДФЛОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|		АвансовыеПлатежиИностранцевПоНДФЛОбороты.Год КАК НалоговыйПериод,
	|		АвансовыеПлатежиИностранцевПоНДФЛОбороты.СуммаОстаток КАК Остаток
	|	ИЗ
	|		РегистрНакопления.АвансовыеПлатежиИностранцевПоНДФЛ.Остатки(
	|				&КонецМесяцаРасчета,
	|				ФизическоеЛицо В (&СписокФизическихЛиц)
	|					И (Год МЕЖДУ &МинимальныйГод И &МаксимальныйГод)
	|					И ГоловнаяОрганизация = &ГоловнаяОрганизация) КАК АвансовыеПлатежиИностранцевПоНДФЛОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияРегистратора.ФизическоеЛицо,
	|		ДвиженияРегистратора.Год,
	|		ВЫБОР
	|			КОГДА ДвиженияРегистратора.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДвиженияРегистратора.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.АвансовыеПлатежиИностранцевПоНДФЛ КАК ДвиженияРегистратора
	|	ГДЕ
	|		ДвиженияРегистратора.Регистратор = &ИсключаемыйРегистратор
	|		И ДвиженияРегистратора.ФизическоеЛицо В(&СписокФизическихЛиц)
	|		И ДвиженияРегистратора.Год МЕЖДУ &МинимальныйГод И &МаксимальныйГод
	|		И ДвиженияРегистратора.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|		И НЕ ДвиженияРегистратора.ЗарегистрированоПриНачисленииАванса В (&МесяцыНачисленияЗарплаты)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		АвансовыеДвижения.ФизическоеЛицо,
	|		АвансовыеДвижения.Год,
	|		ВЫБОР
	|			КОГДА АвансовыеДвижения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АвансовыеДвижения.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.АвансовыеПлатежиИностранцевПоНДФЛ КАК АвансовыеДвижения
	|	ГДЕ
	|		АвансовыеДвижения.ЗарегистрированоПриНачисленииАванса В (&МесяцыНачисленияЗарплаты)
	|		И АвансовыеДвижения.ФизическоеЛицо В(&СписокФизическихЛиц)
	|		И АвансовыеДвижения.Год МЕЖДУ &МинимальныйГод И &МаксимальныйГод
	|		И АвансовыеДвижения.ГоловнаяОрганизация = &ГоловнаяОрганизация) КАК Авансы
	|
	|СГРУППИРОВАТЬ ПО
	|	Авансы.ФизическоеЛицо,
	|	Авансы.НалоговыйПериод";
	ОстаткиПоАвансовымПлатежам = Запрос.Выполнить().Выгрузить();
	Если ДвиженияТекущегоРегистратора <> Неопределено И ПроведениеСервер.ЕстьДвижения(ДвиженияТекущегоРегистратора, "АвансовыеПлатежиИностранцевПоНДФЛ") Тогда 
		ЕстьНовыеЗаписи = Ложь;
		Для Каждого СтрокаНабора Из ДвиженияТекущегоРегистратора.АвансовыеПлатежиИностранцевПоНДФЛ Цикл
			Если СоответствиеФизическихЛиц[СтрокаНабора.ФизическоеЛицо] <> Истина Или СтрокаНабора.ВидДвижения = ВидДвиженияНакопления.Приход Тогда
				Продолжить;	
			КонецЕсли;	
			Если ЗначениеЗаполнено(СтрокаНабора.ЗарегистрированоПриНачисленииАванса) Тогда
				Продолжить;
			КонецЕсли;
			СтрокаРезультат = ОстаткиПоАвансовымПлатежам.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРезультат, СтрокаНабора);
			СтрокаРезультат.НалоговыйПериод = СтрокаНабора.Год;
			СтрокаРезультат.Остаток = - СтрокаНабора.Сумма;
			ЕстьНовыеЗаписи = Истина;
		КонецЦикла;	
		Если ЕстьНовыеЗаписи Тогда // Сторно-записи регистрируются достаточно редко, поэтому проверим, надо ли сворачивать таблицу.
			ОстаткиПоАвансовымПлатежам.Свернуть("ФизическоеЛицо, НалоговыйПериод", "Остаток");
		КонецЕсли;	
	КонецЕсли;	
	ОстаткиПоАвансовымПлатежам.Индексы.Добавить("ФизическоеЛицо, НалоговыйПериод");
	
	РезультатРасчета = ТаблицаНДФЛ();
	
	СтруктураПоискаПоФизическомуЛицу = Новый Структура("ФизическоеЛицо");
	СтруктураПоискаТекущихДоходов = Новый Структура("ДоходТекущегоРасчета, ДоходМежрасчетногоПериода", Истина, Не ОкончательныйРасчет);
	СтруктураПоискаТекущихДоходовНерезидентов = Новый Структура("ФизическоеЛицо, ДоходТекущегоРасчета, ДоходМежрасчетногоПериода", , Истина, Не ОкончательныйРасчет);
	СтруктураПоискаИсчисленного = Новый Структура("ФизическоеЛицо, МесяцНалоговогоПериодаДляПоиска");
	СтруктураПоискаСтандартныхВычетов = Новый Структура("ФизическоеЛицо, МесяцПериодаПредоставленияВычета, ЭтоСоциальныйВычет");
	СтруктураПоискаИмущественныхВычетов = Новый Структура("ФизическоеЛицо, МесяцНалоговогоПериода, ВидДвижения");
	ОписаниеВычетов = УчетНДФЛПовтИсп.ОписаниеВычетов();
	
	// инициализируем общие вспомогательные объекты
	РезультатРасчетаВспомогательный = РезультатРасчета;
	ВспомогательнаяТаблицаМесяца = РезультатРасчета.СкопироватьКолонки("ФизическоеЛицо, МесяцПериодаПредоставленияВычета, МесяцНалоговогоПериода, Подразделение, КатегорияДохода, НалогПоСтавке13, ЗачтеноАвансовыхПлатежейПоСтавке13, НалогСПревышенияПоСтавке13, ЗачтеноАвансовыхПлатежейСПревышенияПоСтавке13");
	ВспомогательнаяТаблицаМесяца.Колонки.Добавить("КоличествоВычетов", Новый ОписаниеТипов("Число"));
	
	ВспомогательнаяТаблицаВычетовМесяца = Новый ТаблицаЗначений;
	ВспомогательнаяТаблицаВычетовМесяца.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ВспомогательнаяТаблицаВычетовМесяца.Колонки.Добавить("МесяцНалоговогоПериода", Новый ОписаниеТипов("Дата",,,,, Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ВспомогательнаяТаблицаВычетовМесяца.Колонки.Добавить("МесяцПериодаПредоставленияВычета", Новый ОписаниеТипов("Дата",,,,, Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ВспомогательнаяТаблицаВычетовМесяца.Колонки.Добавить("Подразделение", Метаданные.ОпределяемыеТипы.ТерриторияВыполненияРаботВОрганизации.Тип);
	ВспомогательнаяТаблицаВычетовМесяца.Колонки.Добавить("КатегорияДохода", Новый ОписаниеТипов("ПеречислениеСсылка.КатегорииДоходовНДФЛ"));
	ВспомогательнаяТаблицаВычетовМесяца.Колонки.Добавить("КодВычета", Новый ОписаниеТипов("СправочникСсылка.ВидыВычетовНДФЛ"));
	ВспомогательнаяТаблицаВычетовМесяца.Колонки.Добавить("РазмерВычета", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	
	// Начнем с расчета по резидентам и приравненным к ним.
	Если РассчитыватьНалогНарастающимИтогом Тогда
		
		ВспомогательныеДатыПодразделенияКатегории = Новый ТаблицаЗначений;
		ВспомогательныеДатыПодразделенияКатегории.Колонки.Добавить("МесяцНалоговогоПериода", Новый ОписаниеТипов("Дата",,,,, Новый КвалификаторыДаты(ЧастиДаты.Дата)));
		ВспомогательныеДатыПодразделенияКатегории.Колонки.Добавить("Подразделение", Метаданные.ОпределяемыеТипы.ТерриторияВыполненияРаботВОрганизации.Тип);
		ВспомогательныеДатыПодразделенияКатегории.Колонки.Добавить("КатегорияДохода", Новый ОписаниеТипов("ПеречислениеСсылка.КатегорииДоходовНДФЛ"));
		ВспомогательныеДатыПодразделенияКатегории.Колонки.Добавить("Распределение", Новый ОписаниеТипов("ТаблицаЗначений"));
		ВспомогательныеДатыПодразделенияКатегории.Колонки.Добавить("ЗаменятьДатуПолученияДохода", Новый ОписаниеТипов("Булево"));
		ВспомогательныеДатыПодразделенияКатегории.Колонки.Добавить("ЗаменятьПодразделение", Новый ОписаниеТипов("Булево"));
		ВспомогательныеДатыПодразделенияКатегории.Колонки.Добавить("ЗаменятьКатегориюДохода", Новый ОписаниеТипов("Булево"));
		
		ВычетыЗаМесяц = Новый ТаблицаЗначений;
		ВычетыЗаМесяц.Колонки.Добавить("КодВычета");
		ВычетыЗаМесяц.Колонки.Добавить("РазмерВычета", Новый ОписаниеТипов("Число"));
		
		СтавкаДляРезидента = 0.13; // Пункт 1 статьи 224 НК РФ.
		ОсобыеКатегорииДохода = Новый Соответствие; // Эти категории дохода определяют собственные ставки налога, поэтому их нельзя заменять текущими даже при перерасчете.
		ОсобыеКатегорииДохода.Вставить(Перечисления.КатегорииДоходовНДФЛ.Дивиденды, Истина);
		ОсобыеКатегорииДохода.Вставить(Перечисления.КатегорииДоходовНДФЛ.ДивидендыПоСтавке05, Истина);
		ОсобыеКатегорииДохода.Вставить(Перечисления.КатегорииДоходовНДФЛ.ДивидендыПоСтавке10, Истина);
		ОсобыеКатегорииДохода.Вставить(Перечисления.КатегорииДоходовНДФЛ.ДивидендыПоСтавке12, Истина);
		ОсобыеКатегорииДохода.Вставить(Перечисления.КатегорииДоходовНДФЛ.АвторскиеРоялтиПоСтавке03, Истина);
		ОсобыеКатегорииДохода.Вставить(Перечисления.КатегорииДоходовНДФЛ.АвторскиеРоялтиПоСтавке06, Истина);
		ОсобыеКатегорииДохода.Вставить(Перечисления.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке05, Истина);
		ОсобыеКатегорииДохода.Вставить(Перечисления.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке07, Истина);
		ОсобыеКатегорииДохода.Вставить(Перечисления.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке10, Истина);
		ОсобыеКатегорииДохода.Вставить(Перечисления.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке15, Истина);
		
		ПериодСрезаПравНаВычеты = НачалоМесяца(Макс(МесяцРасчета, ПоследнийМесяцНалоговогоПериода));
		ПереноситьДоходДляПримененияВычетовВМесяцРасчета = Не ОкончательныйРасчет И Год(МесяцРасчета) = Год(ДатаУдержанияИсчисленногоНалога) И МесяцРасчета < НачалоМесяца(ДатаУдержанияИсчисленногоНалога);
		
		// Инициализируем вспомогательные объекты.
		СтруктураПоиска = Новый Структура(ПоляПоиска);
		ПоляПоискаПоДатам = "ДатаПолученияДохода, ДоходМежрасчетногоПериода";
		СтруктураПоискаПоДатам = Новый Структура(ПоляПоискаПоДатам);
		СтруктураПоискаТолькоПоДатам = Новый Структура("ДатаПолученияДохода");
		СтруктураПоискаПоДатамИПодразделениям = Новый Структура("ДатаПолученияДохода,Подразделение");
		
		// Структуру описания остатков создаем однократно, в дальнейшем для каждого сочетания ФЛ+Налоговый период очищаем ее коллекции.
		ОстаткиВычетов = НовыйОстаткиВычетов();
		ТекущиеОстаткиВычетов = ОстаткиВычетов.Остатки; 
		
		ПараметрыЗаполненияРесурсаНалогПоСтавке13 = НовыйПараметрыЗаполненияРесурса("НалогПоСтавке13", "СуммаДохода", 0, "Подразделение, КатегорияДохода");
		ПараметрыЗаполненияРесурсаСуммаВычетаПоПодразделению = НовыйПараметрыЗаполненияРесурса("РазмерВычета", "СуммаДохода", , , "КодВычета");
		ПараметрыЗаполненияРесурсаСуммаВычетаПоКатегории = НовыйПараметрыЗаполненияРесурса("РазмерВычета", "СуммаДохода", ,"Подразделение, КатегорияДохода", "КодВычета,МесяцПериодаПредоставленияВычета");
		
		// Однократный обход таблицы ДанныеУчетаДоходов организован двумя вложенными циклами; внутренний цикл выполняет расчет
		// налога за один налоговый период по одному физлицу. В качестве промежуточной структуры данных для результатов
		// расчета за месяц используем две таблицы: в одной оставляем только ресурсы НалогПоСтавке13,
		// ЗачтеноАвансовыхПлатежейПоСтавке13, во второй таблице храним результат расчета вычетов (измерение КодВычета и ресурс РазмерВычета).
		ИндексТекущейСтрокиТаблицыДоходов = 0;
		Пока ИндексТекущейСтрокиТаблицыДоходов <= ДанныеУчетаДоходов.Количество() - 1 Цикл		
			
			// будет инициализирована только в том случае, если она понадобится
			ТаблицаРаспределенияМесяцаРасчета = Неопределено;	
			
			ТекущаяСтрокаТаблицыДоходов = ДанныеУчетаДоходов[ИндексТекущейСтрокиТаблицыДоходов];
			// получим физическое лицо, по которому выполняется расчет
			ТекущееФизическоеЛицо = ТекущаяСтрокаТаблицыДоходов.ФизическоеЛицо;
			
			// получим налоговый период, по которому далее будет выполняться расчет.
			ТекущийНалоговыйПериод = НачалоГода(ТекущаяСтрокаТаблицыДоходов.МесяцНалоговогоПериода);
			РазмерыВычетовНаГод = РазмерыВычетов[ТекущийНалоговыйПериод];
			
			// обнулим остатки вычетов
			ТекущиеОстаткиВычетов.Очистить();
			ОстаткиВычетов.ТаблицаВычетов.Очистить();	
			ВычетыПредыдущихМесяцев = Новый Соответствие;
			ОтложенныеПраваНаВычеты = Новый Соответствие;
			ВспомогательнаяТаблицаМесяца.Очистить();
			
			ДействующаяИнформацияОСтандартныхВычетах = Неопределено;
			ДействующаяИнформацияОСтатусе = Неопределено;
			                                                                         	
			// инициализируем переменные, хранящие итоги за год
			СтрокиНДФЛЗаГод = Новый Массив;
			ОблагаемыйДоходНаНачалоМесяца = 0;  
			ОблагаемыйДоходНаКонецМесяца = 0;
			
			ДоходЗаМесяцОстаток = 0;	
			НалогИсчисленный = 0;
			ВычетСоциальныйОстаток = 0;
			ИсчисленоНДФЛЗаГод = 0;
			ОблагаемыйДоход = 0;
			ВсегоДоходовТекущегоРасчета = 0;
			
			Если ТекущаяСтрокаТаблицыДоходов.ЭтоПерваяСтрокаПоФизическомуЛицу Тогда // Начало обработки очередного физ.лица.
				
				СтруктураПоискаПоФизическомуЛицу.ФизическоеЛицо = ТекущееФизическоеЛицо;
				СтруктураПоискаТекущихДоходовНерезидентов.ФизическоеЛицо = ТекущееФизическоеЛицо;
				
				// Получим данные, необходимые для определения прав на вычеты.
				СтрокиТаблицыСтатусов = СтатусыФизическихЛиц.НайтиСтроки(СтруктураПоискаПоФизическомуЛицу);
				СтрокиТаблицыПримененияВычетов = ПрименениеСтандартныхВычетов.НайтиСтроки(СтруктураПоискаПоФизическомуЛицу);
				СтрокиТаблицыПравНаВычеты = ВычетыНаДетейИЛичные.НайтиСтроки(СтруктураПоискаПоФизическомуЛицу);
				
				// Если выполняется окончательный расчет, будем вписывать результат расчета сразу в таблицы результата.
				// В случае с промежуточным расчетом будем использовать промежуточную таблицу, а потом переносить в результирующую с
				// учетом ограничений.
				Если Не ОкончательныйРасчет Тогда
					РезультатРасчетаВспомогательный = РезультатРасчета.СкопироватьКолонки();
				КонецЕсли;
				
				РаспределениеДоходовФизлица = ДоходыПоПодразделениямИКатегориям.Скопировать(СтруктураПоискаПоФизическомуЛицу);
				РаспределениеДоходовФизлица.Индексы.Добавить(ПоляПоискаПоДатам);
				ДоходыТекущегоРасчета = РаспределениеДоходовФизлица.Скопировать(СтруктураПоискаТекущихДоходов);
				Если Не ОкончательныйРасчет Тогда
					ВсегоДоходовТекущегоРасчета = ДоходыТекущегоРасчета.Итог("СуммаДоходаТекущегоРасчета");
					ДоходыТекущегоРасчетаНерезидента = ДоходыДляРасчетаНалогаПоКаждойСуммеОтдельно.Скопировать(СтруктураПоискаТекущихДоходовНерезидентов);
				КонецЕсли;
				
			КонецЕсли;
				                                                                             				
			// Характеристики доходов "текущего" расчета за очередной налоговый период.
			ВсеДатыТекущегоРасчета = Новый Соответствие;
			ВсеКатегорииТекущегоРасчета = Новый Соответствие;
			ДатыТекущегоРасчетаПоМесяцам = Новый Соответствие;
			ТекущийГод = Год(ТекущийНалоговыйПериод);
			Для СчМесяцев = 1 По 12 Цикл
				ДатыТекущегоРасчетаПоМесяцам.Вставить(СчМесяцев,'00010101');
			КонецЦикла;
			Для каждого СтрокаТЗ Из ДоходыТекущегоРасчета Цикл
				Если Год(СтрокаТЗ.ДатаПолученияДохода) <> ТекущийГод Тогда
					Продолжить;
				КонецЕсли;
				ВсеДатыТекущегоРасчета.Вставить(СтрокаТЗ.ДатаПолученияДохода, Истина);
				ВсеКатегорииТекущегоРасчета.Вставить(СтрокаТЗ.КатегорияДохода, Истина);
				МесяцДаты = Месяц(СтрокаТЗ.ДатаПолученияДохода);
				ДатыТекущегоРасчетаПоМесяцам.Вставить(МесяцДаты, Макс(ДатыТекущегоРасчетаПоМесяцам[МесяцДаты], СтрокаТЗ.ДатаПолученияДохода));
			КонецЦикла;
			Если ОкончательныйРасчет Тогда
				ДатыРасчетаПоМесяцам = Новый Соответствие;
				ДатаНалоговогоПериода = '00010101';
				Для СчМесяцев = 1 По 12 Цикл
					ДатыРасчетаПоМесяцам.Вставить(СчМесяцев,'00010101');
				КонецЦикла;
				Для каждого СтрокаТЗ Из РаспределениеДоходовФизлица Цикл
					Если Год(СтрокаТЗ.ДатаПолученияДохода) <> ТекущийГод Тогда
						Продолжить;
					КонецЕсли;
					ДатаНалоговогоПериода = Макс(ДатаНалоговогоПериода, СтрокаТЗ.ДатаПолученияДохода); 
					МесяцДаты = Месяц(СтрокаТЗ.ДатаПолученияДохода);
					ДатыРасчетаПоМесяцам.Вставить(МесяцДаты, Макс(ДатыРасчетаПоМесяцам[МесяцДаты], СтрокаТЗ.ДатаПолученияДохода));
				КонецЦикла;
				
				ОсновнаяДатаМесяцаРасчетаПоТекущимДоходам = ДатыТекущегоРасчетаПоМесяцам[Месяц(МесяцРасчета)];
				ОсновнаяДатаМесяцаРасчета = ?(Год(МесяцРасчета) = ТекущийГод, ДатыРасчетаПоМесяцам[Месяц(МесяцРасчета)], '00010101');
				
				ТаблицаРаспределенияМесяцаРасчетаПоТекущимДоходам = Новый Массив;
				ТаблицаРаспределенияКонцаМесяцаРасчета = Новый Массив;
				ТаблицаРаспределенияНалоговогоПериода = Новый Массив;
				Если ЗначениеЗаполнено(ОсновнаяДатаМесяцаРасчетаПоТекущимДоходам) Тогда
					СтруктураПоискаТолькоПоДатам.ДатаПолученияДохода = ОсновнаяДатаМесяцаРасчетаПоТекущимДоходам;
					ТаблицаРаспределенияМесяцаРасчетаПоТекущимДоходам = ДоходыТекущегоРасчета.Скопировать(ДоходыТекущегоРасчета.НайтиСтроки(СтруктураПоискаТолькоПоДатам)); 
				КонецЕсли;
				Если ЗначениеЗаполнено(ОсновнаяДатаМесяцаРасчета) Тогда
					СтруктураПоискаТолькоПоДатам.ДатаПолученияДохода = ОсновнаяДатаМесяцаРасчета;
					ТаблицаРаспределенияКонцаМесяцаРасчета = РаспределениеДоходовФизлица.Скопировать(РаспределениеДоходовФизлица.НайтиСтроки(СтруктураПоискаТолькоПоДатам)); 
				КонецЕсли;
				Если ЗначениеЗаполнено(ДатаНалоговогоПериода) Тогда
					СтруктураПоискаТолькоПоДатам.ДатаПолученияДохода = ДатаНалоговогоПериода;
					ТаблицаРаспределенияНалоговогоПериода = РаспределениеДоходовФизлица.Скопировать(РаспределениеДоходовФизлица.НайтиСтроки(СтруктураПоискаТолькоПоДатам)); 
				Иначе
					ДатаНалоговогоПериода = НачалоДня(КонецМесяца(МесяцРасчета))
				КонецЕсли;
			Иначе
				ОсновнаяДатаТекущегоРасчета = ДатаУдержанияИсчисленногоНалога;
				Если ВсеДатыТекущегоРасчета[ОсновнаяДатаТекущегоРасчета] = Неопределено Тогда
					Для СчМесяцев = 1 По 12 Цикл
						Если ЗначениеЗаполнено(ДатыТекущегоРасчетаПоМесяцам[13 - СчМесяцев]) Тогда
							ОсновнаяДатаТекущегоРасчета = ДатыТекущегоРасчетаПоМесяцам[13 - СчМесяцев];
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				ДатыТекущегоРасчетаНерезидента = Новый Соответствие;
				Для каждого СтрокаТЗ Из ДоходыТекущегоРасчетаНерезидента Цикл
					Если Год(СтрокаТЗ.ДатаПолученияДохода) <> ТекущийГод Тогда
						Продолжить;
					КонецЕсли;
					ДатыТекущегоРасчетаНерезидента.Вставить(Месяц(СтрокаТЗ.ДатаПолученияДохода), СтрокаТЗ.ДатаПолученияДохода);
				КонецЦикла;
			КонецЕсли;
			
			ПродолжатьРасчет = Истина;
			Пока ПродолжатьРасчет Цикл
				
				ТекущаяСтрокаТаблицыДоходов = ДанныеУчетаДоходов[ИндексТекущейСтрокиТаблицыДоходов]; 
				
				Если ТекущаяСтрокаТаблицыДоходов.ЭтоПерваяСтрокаЗаМесяц Тогда
					
					МесяцНалоговогоПериода = ТекущаяСтрокаТаблицыДоходов.МесяцНалоговогоПериода;
					ПроводитьРасчетЗаОчереднойМесяц = ТекущаяСтрокаТаблицыДоходов.ВсеДоходыЗаМесяц <> 0 Или Не ЭтоРасчетПоДоходамТекущегоМесяца;
					
					// Получаем информацию о статусе налогоплательщика на начало месяца.
					Если ДействующаяИнформацияОСтатусе = Неопределено
						Или Не (МесяцНалоговогоПериода >= ДействующаяИнформацияОСтатусе.ДатаНачала И МесяцНалоговогоПериода <= ДействующаяИнформацияОСтатусе.ДатаОкончания) Тогда
						ДействующаяИнформацияОСтатусе = ИнформацияОСтатусеНалогоплательщика(МесяцНалоговогоПериода, СтрокиТаблицыСтатусов);
					КонецЕсли;	
					
					// Получаем информацию об имеющихся правах на стандартные вычеты.
					Если ДействующаяИнформацияОСтандартныхВычетах = Неопределено 
						Или Не (МесяцНалоговогоПериода >= ДействующаяИнформацияОСтандартныхВычетах.ДатаНачала И МесяцНалоговогоПериода <= ДействующаяИнформацияОСтандартныхВычетах.ДатаОкончания) Тогда
						ДействующаяИнформацияОСтандартныхВычетах = ИнформацияОСтандартныхВычетахДействующихНаДату(МесяцНалоговогоПериода, ПериодСрезаПравНаВычеты, СтрокиТаблицыПравНаВычеты, СтрокиТаблицыПримененияВычетов, ДействующаяИнформацияОСтатусе);	
					КонецЕсли;
					
					ВспомогательнаяТаблицаВычетовМесяца.Очистить();
					ЗаполнитьЗначенияСвойств(СтруктураПоиска,ТекущаяСтрокаТаблицыДоходов);
					ЗаполнитьЗначенияСвойств(СтруктураПоискаСтандартныхВычетов, ТекущаяСтрокаТаблицыДоходов);
					ЗаполнитьЗначенияСвойств(СтруктураПоискаИмущественныхВычетов, ТекущаяСтрокаТаблицыДоходов);
					ЗаполнитьЗначенияСвойств(СтруктураПоискаИсчисленного, ТекущаяСтрокаТаблицыДоходов);
					СтруктураПоискаИсчисленного.МесяцНалоговогоПериодаДляПоиска = МесяцНалоговогоПериода;
					СтруктураПоискаСтандартныхВычетов.МесяцПериодаПредоставленияВычета = МесяцНалоговогоПериода;
								
					// Вписываем во вспомогательную таблицу месяца исчисленные ранее налоги.
					СтрокиНалога = ИсчисленныйРанееНалог.НайтиСтроки(СтруктураПоискаИсчисленного);
					ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаМесяца, СтрокиНалога, "КатегорияДохода, НалогПоСтавке13");	
					УдалитьУчтенныеСтрокиНерезидентов(СоответствиеНерезидентов, СтрокиНалога, ИсчисленныйРанееНалог);					
					
					// Получаем использованный в месяце социальный вычет.
					СтруктураПоискаСтандартныхВычетов.ЭтоСоциальныйВычет = Истина;
					СтрокиПравНаСоциальныеВычеты = ПредоставленныеСтандартныеИСоциальныеВычеты.НайтиСтроки(СтруктураПоискаСтандартныхВычетов);
					ВычетСоциальныйОстаток = ВычетСоциальныйОстаток + ?(СтрокиПравНаСоциальныеВычеты.Количество() > 0 И ДействующаяИнформацияОСтатусе.ПрименяетсяСтавкаПункта1Статьи224НК, СтрокиПравНаСоциальныеВычеты[0].Сумма, 0);
					
					// Создадим набор сумм вычетов, которые могут уменьшить облагаемый доход, начнем с имущественных вычетов.
					СтруктураПоискаИмущественныхВычетов.ВидДвижения = ВидДвиженияНакопления.Приход;
					СтрокиПравНаИмущественныеВычеты = ИмущественныеВычеты.НайтиСтроки(СтруктураПоискаИмущественныхВычетов);
					Для Каждого СтрокаПрав Из СтрокиПравНаИмущественныеВычеты Цикл
						ДобавитьОстатокВычетов(ОстаткиВычетов, СтрокаПрав.КодВычета, СтрокаПрав.Сумма);		
					КонецЦикла;					
					
					// Добавим стандартные вычеты очередного месяца.
					ОблагаемыйДоходНарастающимИтогом = ТекущаяСтрокаТаблицыДоходов.ОблагаемыйДоходНарастающимИтогом;
					ДоходСПредыдущегоМестаРаботы = 0;
					СтрокиДоходаСПредыдущегоМестаРаботы = ДоходыСПредыдущегоМестаРаботы.НайтиСтроки(СтруктураПоиска);
					Если СтрокиДоходаСПредыдущегоМестаРаботы.Количество() > 0 Тогда
						ДоходСПредыдущегоМестаРаботы = СтрокиДоходаСПредыдущегоМестаРаботы[0].Размер;
					КонецЕсли;	
					ОблагаемыйДоходДляВычетов = ОблагаемыйДоходНарастающимИтогом + ДоходСПредыдущегоМестаРаботы;	
					Для Каждого ТекущийВычет Из ДействующаяИнформацияОСтандартныхВычетах.Вычеты Цикл
						ОписаниеРазмераВычета = РазмерыВычетовНаГод[ТекущийВычет.Ключ];
						Если ОписаниеРазмераВычета = Неопределено Тогда
							Продолжить;
						КонецЕсли;	
						Если ОписаниеРазмераВычета.ОграничениеПоДоходам <> 0 И ОблагаемыйДоходДляВычетов > ОписаниеРазмераВычета.ОграничениеПоДоходам Тогда
							Продолжить;
						КонецЕсли;	
						ДобавитьОстатокВычетов(ОстаткиВычетов, ТекущийВычет.Ключ, ТекущийВычет.Значение * ОписаниеРазмераВычета.Размер, ПрименятьСтандартныеВычетыНарастающимИтогом);	
					КонецЦикла;		
					
					СтруктураПоискаСтандартныхВычетов.ЭтоСоциальныйВычет = Ложь;
					СтрокиСтандартныхВычетов = ПредоставленныеСтандартныеИСоциальныеВычеты.НайтиСтроки(СтруктураПоискаСтандартныхВычетов);
						
					// Перенесем ранее предоставленные при исчислении налога для будущих дат получения дохода вычеты 
					// текущего месяца на тот месяц, когда их предоставили на самом деле.
					// Манипуляции производим с правами на стандартные вычеты и со строками зарегистрированных вычетов.
					Для каждого Элемент Из ОтложенныеПраваНаВычеты Цикл
						ТекущийВычет = Элемент.Ключ;
						Если ТекущийВычет.МесяцНалоговогоПериода = МесяцНалоговогоПериода Тогда
							ДобавитьОстатокВычетов(ОстаткиВычетов, ТекущийВычет.КодВычета, Элемент.Значение, Истина);
							ОтложенныеПраваНаВычеты.Удалить(ТекущийВычет);
						КонецЕсли;
					КонецЦикла;
					Для каждого СтрокаТЗ Из СтрокиСтандартныхВычетов Цикл
						Если СтрокаТЗ.МесяцНалоговогоПериода <= МесяцНалоговогоПериода Тогда
							Продолжить;	
						КонецЕсли;
						Если СтрокаТЗ.Сумма > 0 Тогда
							ОстатокВычета = ТекущиеОстаткиВычетов[СтрокаТЗ.КодВычета];
							Если ОстатокВычета <> Неопределено  Тогда
								ВычетКЗачету = Мин(СтрокаТЗ.Сумма, ОстатокВычета);
								ТекущиеОстаткиВычетов.Вставить(СтрокаТЗ.КодВычета, ОстатокВычета - ВычетКЗачету);
								СтрокаТЗ.МесяцПериодаПредоставленияВычета = СтрокаТЗ.МесяцНалоговогоПериода;
								ОтложенныеПраваНаВычеты.Вставить(СтрокаТЗ, ВычетКЗачету);
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
					// Если вычеты перенесли, надо обновить зарегистрированные вычеты текущего месяца.
					Если ОтложенныеПраваНаВычеты.Количество() > 0 Тогда
						СтрокиСтандартныхВычетов = ПредоставленныеСтандартныеИСоциальныеВычеты.НайтиСтроки(СтруктураПоискаСтандартныхВычетов);
					КонецЕсли;
					
					// Определим доход, который могут уменьшать вычеты.
					ЗапоминатьВычетыНаБудущее = Ложь;
					ОблагаемыйДоходЗаМесяц = ТекущаяСтрокаТаблицыДоходов.ОблагаемыйДоходЗаМесяц;
					Если ПрименятьСтандартныеВычетыНарастающимИтогом Тогда
						Если ПереноситьДоходДляПримененияВычетовВМесяцРасчета И МесяцНалоговогоПериода = НачалоМесяца(МесяцРасчета) Тогда
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток + ОблагаемыйДоходЗаМесяц + ВсегоДоходовТекущегоРасчета;
							ЗапоминатьВычетыНаБудущее = Истина;
						ИначеЕсли ПереноситьДоходДляПримененияВычетовВМесяцРасчета И МесяцНалоговогоПериода = НачалоМесяца(ДатаУдержанияИсчисленногоНалога) Тогда
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток + ОблагаемыйДоходЗаМесяц - ВсегоДоходовТекущегоРасчета;
						Иначе
							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток + ОблагаемыйДоходЗаМесяц;
						КонецЕсли;
					Иначе
						ДоходЗаМесяцОстаток = ОблагаемыйДоходЗаМесяц;		
					КонецЕсли;	                                                     
					// Имущественные вычеты не могут уменьшать доходы месяцев, предшествующих месяцу начала применения.
					ДоходЗаМесяцДляИмущественныхВычетов = ОблагаемыйДоходЗаМесяц; 
					
					// Рассчитываем примененные за месяц вычеты.
					ВсегоВычетовЗаМесяц = 0;
					ЕстьВычетыЗаМесяц = Ложь;
					ВычетыЗаМесяц.Очистить();	
					Если ДоходЗаМесяцОстаток > 0 И МесяцНалоговогоПериода <= ТекущаяСтрокаТаблицыДоходов.СтаршийМесяцПолученияДохода Тогда
						
						ВычетСоциальныйЗаМесяц = Мин(ДоходЗаМесяцОстаток, ВычетСоциальныйОстаток);
						ВычетСоциальныйОстаток = ВычетСоциальныйОстаток - ВычетСоциальныйЗаМесяц;
						ВсегоВычетовЗаМесяц = ВсегоВычетовЗаМесяц + ВычетСоциальныйЗаМесяц;
						ЕстьВычетыЗаМесяц = ВычетСоциальныйЗаМесяц <> 0;
						
						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетСоциальныйЗаМесяц;
						ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетСоциальныйЗаМесяц;
						// Для расчета имущественных вычетов учтем ранее не учтенные из-за отсутствия дохода в предшествующих месяцах
						// налогового периода вычеты.
						Для каждого Элемент Из ВычетыПредыдущихМесяцев Цикл
							Если Элемент.Ключ < МесяцНалоговогоПериода Тогда
								ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - Мин(ДоходЗаМесяцДляИмущественныхВычетов, Элемент.Значение);
								Если ДоходЗаМесяцДляИмущественныхВычетов = 0 Тогда
									Прервать;
								КонецЕсли;	
							КонецЕсли;
						КонецЦикла;
						
						Если ДоходЗаМесяцОстаток > 0 Тогда
							// Заполняем таблицу значений ВычетыЗаМесяц (с колонками КодВычета, Сумма) суммами вычетов, которые будут
							// применены в текущем месяце. Строки в таблицу помещаем в соответствии с наиболее выгодным для сотрудника
							// приоритетом применения вычетов (описанным непосредственно в справочнике вычетов), для чего. отсортируем
							// таблицу ТаблицаВычетов по полю ПорядокСписания. Применяемые суммы вычетов переписываем из таблицы Остатки,
							// содержащей права на вычеты, в пределах доходов, которые могут быть уменьшены на стандартные, имущественные
							// вычеты. Если положенных физ.лицу вычетов оказывается больше, чем начисленного дохода, в таблице Остатки
							// оказываются суммы неиспользованных в этом месяце вычетов для предоставления их в будущем.
							ОстаткиВычетов.ТаблицаВычетов.Сортировать("ПорядокСписания");
							Для Каждого ВычетКСписанию Из ОстаткиВычетов.ТаблицаВычетов Цикл
								
								Если ДоходЗаМесяцОстаток = 0 И ДоходЗаМесяцДляИмущественныхВычетов = 0 Тогда
									Прервать;
								КонецЕсли;
								Если ВычетКСписанию.ИмущественныйВычет И Не ПроводитьРасчетЗаОчереднойМесяц Тогда 
									Прервать;
								КонецЕсли;
								
								ВычетЗаМесяц = 0;
								ОстатокВычета = ТекущиеОстаткиВычетов[ВычетКСписанию.КодВычета];
								Если ВычетКСписанию.ИмущественныйВычет Тогда 
									Если ДоходЗаМесяцДляИмущественныхВычетов > 0 Тогда
										ВычетЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ОстатокВычета);	
										ТекущиеОстаткиВычетов.Вставить(ВычетКСписанию.КодВычета, ОстатокВычета - ВычетЗаМесяц);
									КонецЕсли;	
								Иначе	
									ВычетЗаМесяц = Мин(ДоходЗаМесяцОстаток, ОстатокВычета);
									ТекущиеОстаткиВычетов.Вставить(ВычетКСписанию.КодВычета, ОстатокВычета - ВычетЗаМесяц);
								КонецЕсли;	
								Если ВычетЗаМесяц <> 0 Тогда
									СтрокаТаблицыРезультата = ВычетыЗаМесяц.Добавить();	
									СтрокаТаблицыРезультата.КодВычета = ВычетКСписанию.КодВычета;
									СтрокаТаблицыРезультата.РазмерВычета = ВычетЗаМесяц;
									
									ЕстьВычетыЗаМесяц = Истина;
									ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетЗаМесяц;
									ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетЗаМесяц);
								КонецЕсли;
								
							КонецЦикла;	
						КонецЕсли;
						
						ВсегоВычетовЗаМесяц = ВсегоВычетовЗаМесяц + ВычетыЗаМесяц.Итог("РазмерВычета");
					КонецЕсли;
					
					// Перенесем некоторые суммы вычетов из других месяцев.
					Если ПроводитьРасчетЗаОчереднойМесяц Тогда 
						// Учтем ранее не учтенные вычеты из-за отсутствия дохода в предшествующих месяцах налогового периода.
						Для каждого Элемент Из ВычетыПредыдущихМесяцев Цикл
							Если Элемент.Ключ < МесяцНалоговогоПериода Тогда
								ВсегоВычетовЗаМесяц = ВсегоВычетовЗаМесяц + Элемент.Значение;
								ВычетыПредыдущихМесяцев.Вставить(Элемент.Ключ, 0);
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;	
					Если ЗапоминатьВычетыНаБудущее Или ЕстьВычетыЗаМесяц И Не ПроводитьРасчетЗаОчереднойМесяц Тогда // Запомним вычеты на будущее.
						ВычетыПредыдущихМесяцев.Вставить(МесяцНалоговогоПериода, ?(ЗначениеЗаполнено(ВычетыПредыдущихМесяцев[МесяцНалоговогоПериода]), ВычетыПредыдущихМесяцев[МесяцНалоговогоПериода], 0) + Макс(ВсегоВычетовЗаМесяц - ОблагаемыйДоходЗаМесяц, 0));
						ВсегоВычетовЗаМесяц = ВсегоВычетовЗаМесяц - Макс(ВсегоВычетовЗаМесяц - ОблагаемыйДоходЗаМесяц, 0);
					КонецЕсли;	
					
					ТаблицаРаспределенияВычетов = РаспределениеДоходовФизлица.СкопироватьКолонки();

					НачисленныйДоходЗаДату = 0;
					ИспользованоВычетовЗаМесяц = 0;

					// Начнем расчет с вычитания уже зарегистрированных в учете вычетов, затем по мере расчета вычеты будут
					// "применяться" к конкретным доходам.
					
					// Строки примененных ранее стандартных вычетов отобрали ранее
					ВписатьПредоставленныеРанееВычетыВДанныеУчета(ВспомогательнаяТаблицаВычетовМесяца, СтрокиСтандартныхВычетов);
					УдалитьУчтенныеСтрокиНерезидентов(СоответствиеНерезидентов, СтрокиСтандартныхВычетов, ПредоставленныеСтандартныеИСоциальныеВычеты);					
					// Строки примененных ранее имущественных вычетов отберем сейчас.
					СтруктураПоискаИмущественныхВычетов.ВидДвижения = ВидДвиженияНакопления.Расход;
					СтрокиВычетов = ИмущественныеВычеты.НайтиСтроки(СтруктураПоискаИмущественныхВычетов);
					ВписатьПредоставленныеРанееВычетыВДанныеУчета(ВспомогательнаяТаблицаВычетовМесяца, СтрокиВычетов);
					УдалитьУчтенныеСтрокиНерезидентов(СоответствиеНерезидентов, СтрокиВычетов, ИмущественныеВычеты);					
					
				КонецЕсли;	
				
				Если ПроводитьРасчетЗаОчереднойМесяц Тогда
					
					Если ТекущаяСтрокаТаблицыДоходов.ЭтоПерваяСтрокаЗаДату Тогда
						
						ОблагаемыйДоходНаНачалоМесяца = ОблагаемыйДоход;
						ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета = 0;
						ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета = 0;
						ЕстьДоходыПромежуточногоРасчета = Ложь;
						ЕстьДоходыОкончательногоРасчета = Ложь;
						
						СтруктураПоискаПоДатам.ДатаПолученияДохода = ТекущаяСтрокаТаблицыДоходов.ДатаПолученияДохода;
						СтруктураПоискаПоДатам.ДоходМежрасчетногоПериода = Истина;
						ТаблицаРаспределенияНаДатуПоДоходамМежрасчетногоПериода = РаспределениеДоходовФизлица.Скопировать(РаспределениеДоходовФизлица.НайтиСтроки(СтруктураПоискаПоДатам)); 
						СтруктураПоискаПоДатам.ДоходМежрасчетногоПериода = Ложь;
						ТаблицаРаспределенияНаДатуПоДоходамОкончательногоРасчета = РаспределениеДоходовФизлица.Скопировать(РаспределениеДоходовФизлица.НайтиСтроки(СтруктураПоискаПоДатам)); 
						
						ТаблицаРаспределенияНаДату = ТаблицаРаспределенияНаДатуПоДоходамМежрасчетногоПериода.Скопировать();
						ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаРаспределенияНаДатуПоДоходамОкончательногоРасчета, ТаблицаРаспределенияНаДату);
						Если ТаблицаРаспределенияНаДату.Итог("СуммаДохода") = 0 Тогда
							// если доходов за прошлый месяц нет - будем использовать текущее распределение
							Если ТаблицаРаспределенияМесяцаРасчета = Неопределено Тогда
								ТекущийГод = Год(МесяцРасчета);
								СтруктураПоискаРаспределения = Новый Структура("МесяцНалоговогоПериода");
								БазаРаспределения = 0;
								МесяцПоиска = НачалоМесяца(МесяцРасчета);                                             
								Пока БазаРаспределения = 0 И Год(МесяцПоиска) = ТекущийГод Цикл
									СтруктураПоискаРаспределения.МесяцНалоговогоПериода = МесяцПоиска;
									ТаблицаРаспределенияМесяцаРасчета = РаспределениеДоходовФизлица.Скопировать(РаспределениеДоходовФизлица.НайтиСтроки(СтруктураПоискаРаспределения));
									БазаРаспределения = ТаблицаРаспределенияМесяцаРасчета.Итог("СуммаДохода");
									МесяцПоиска = ДобавитьМесяц(МесяцПоиска, -1);
								КонецЦикла;
							КонецЕсли;
							ТаблицаРаспределенияНаДату = ТаблицаРаспределенияМесяцаРасчета;
						КонецЕсли;
						ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаРаспределенияНаДату, ТаблицаРаспределенияВычетов);
						
					КонецЕсли;	
					
					НачисленныйДоходЗаДату = ТекущаяСтрокаТаблицыДоходов.ОблагаемыйДоход;
					Если ТекущаяСтрокаТаблицыДоходов.ДоходМежрасчетногоПериода Тогда 
						ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета = Мин(ОблагаемыйДоходНарастающимИтогом, Макс(0, ОблагаемыйДоходНаНачалоМесяца + ТекущаяСтрокаТаблицыДоходов.ОблагаемыйДоход - ВсегоВычетовЗаМесяц));
						ЕстьДоходыПромежуточногоРасчета = Истина;
					Иначе
						ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета = Мин(ОблагаемыйДоходНарастающимИтогом, Макс(0, ОблагаемыйДоходНаНачалоМесяца + ТекущаяСтрокаТаблицыДоходов.ОблагаемыйДоход - ВсегоВычетовЗаМесяц));
						ЕстьДоходыОкончательногоРасчета = Истина;
					КонецЕсли;

					Если ТекущаяСтрокаТаблицыДоходов.ЭтоПоследняяСтрокаЗаДату Тогда
						
						// Расчет сумм налога
						Если Не ТекущаяСтрокаТаблицыДоходов.ЭтоПоследняяСтрокаЗаМесяц Тогда					
							Если ЕстьДоходыПромежуточногоРасчета Тогда
								ОблагаемыйДоходДляИсчисленияНалога = Макс(0, ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета);
								НалогСДохода = Макс(Окр(ОблагаемыйДоходДляИсчисленияНалога * СтавкаДляРезидента) - НалогИсчисленный, 0);
								НалогИсчисленный = НалогИсчисленный + НалогСДохода;
								
								ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ПараметрыЗаполненияРесурсаНалогПоСтавке13, ТекущаяСтрокаТаблицыДоходов.ДатаПолученияДохода, НалогСДохода, ТекущаяСтрокаТаблицыДоходов, ТаблицаРаспределенияНаДатуПоДоходамМежрасчетногоПериода);
							КонецЕсли;
							Если ЕстьДоходыОкончательногоРасчета Тогда
								ОблагаемыйДоходДляИсчисленияНалога = Макс(0, ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета);
								НалогСДохода = Окр(ОблагаемыйДоходДляИсчисленияНалога * СтавкаДляРезидента) - НалогИсчисленный;
								НалогИсчисленный = НалогИсчисленный + НалогСДохода;
								
								ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ПараметрыЗаполненияРесурсаНалогПоСтавке13, ТекущаяСтрокаТаблицыДоходов.ДатаПолученияДохода, НалогСДохода, ТекущаяСтрокаТаблицыДоходов, ТаблицаРаспределенияНаДатуПоДоходамОкончательногоРасчета);
							КонецЕсли;
						Иначе
							Если ЕстьДоходыПромежуточногоРасчета И ЕстьДоходыОкончательногоРасчета Тогда
								
								ОблагаемыйДоходДляИсчисленияНалога = Макс(0, ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета);
								НалогСДохода = Макс(Окр(ОблагаемыйДоходДляИсчисленияНалога * СтавкаДляРезидента) - НалогИсчисленный, 0);
								НалогИсчисленный = НалогИсчисленный + НалогСДохода;
								ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ПараметрыЗаполненияРесурсаНалогПоСтавке13, ТекущаяСтрокаТаблицыДоходов.ДатаПолученияДохода, НалогСДохода, ТекущаяСтрокаТаблицыДоходов, ТаблицаРаспределенияНаДатуПоДоходамМежрасчетногоПериода);
								
								ОблагаемыйДоходДляИсчисленияНалога = Макс(0, ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета);
								НалогСДохода = Окр(ОблагаемыйДоходДляИсчисленияНалога * СтавкаДляРезидента) - НалогИсчисленный;
								НалогИсчисленный = НалогИсчисленный + НалогСДохода;
								ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ПараметрыЗаполненияРесурсаНалогПоСтавке13, ТекущаяСтрокаТаблицыДоходов.ДатаПолученияДохода, НалогСДохода, ТекущаяСтрокаТаблицыДоходов, ТаблицаРаспределенияНаДатуПоДоходамОкончательногоРасчета);
								
								ОблагаемыйДоход = ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета;
								
							Иначе
								
								ОблагаемыйДоходДляИсчисленияНалога = Макс(0, ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета + ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета);
								НалогСДохода = Окр(ОблагаемыйДоходДляИсчисленияНалога * СтавкаДляРезидента) - НалогИсчисленный;
								НалогИсчисленный = НалогИсчисленный + НалогСДохода;
								ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ПараметрыЗаполненияРесурсаНалогПоСтавке13, ТекущаяСтрокаТаблицыДоходов.ДатаПолученияДохода, НалогСДохода, ТекущаяСтрокаТаблицыДоходов, ?(ТекущаяСтрокаТаблицыДоходов.ДоходМежрасчетногоПериода, ТаблицаРаспределенияНаДатуПоДоходамМежрасчетногоПериода, ТаблицаРаспределенияНаДатуПоДоходамОкончательногоРасчета));
								
								ОблагаемыйДоход = ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета + ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета;	
							КонецЕсли;
						КонецЕсли;
						Если ВсеДатыТекущегоРасчета[ТекущаяСтрокаТаблицыДоходов.ДатаПолученияДохода] = Неопределено Тогда
							СтрокиКУдалению.Очистить();
							РассчитаноНалогаЗаДату = 0;
							Для каждого СтрокаНалога Из ВспомогательнаяТаблицаМесяца Цикл
								Если СтрокаНалога.МесяцНалоговогоПериода = ТекущаяСтрокаТаблицыДоходов.ДатаПолученияДохода Тогда
									РассчитаноНалогаЗаДату = РассчитаноНалогаЗаДату + СтрокаНалога.НалогПоСтавке13;
									СтрокиКУдалению.Вставить(СтрокаНалога);
								КонецЕсли;
							КонецЦикла;
							Если РассчитаноНалогаЗаДату = 0 Тогда
								Для Каждого УдаляемаяСтрока Из СтрокиКУдалению Цикл
									ВспомогательнаяТаблицаМесяца.Удалить(УдаляемаяСтрока.Ключ);		
								КонецЦикла;	
							КонецЕсли;
						КонецЕсли;
						
						Если ЕстьДоходыПромежуточногоРасчета И ЕстьДоходыОкончательногоРасчета Тогда
							ОблагаемыйДоходЗаДату = ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета;
						Иначе
							ОблагаемыйДоходЗаДату = ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета + ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета;
						КонецЕсли;
						ВсегоВычетовЗаДату = НачисленныйДоходЗаДату - (ОблагаемыйДоходЗаДату - ОблагаемыйДоходНаНачалоМесяца) - ИспользованоВычетовЗаМесяц;
						ИспользованоВычетовЗаМесяц = ИспользованоВычетовЗаМесяц + ВсегоВычетовЗаДату;
						
						Если ВсегоВычетовЗаДату <> 0 Тогда
								
							// Таблица ВычетыЗаМесяц содержит строки с располагаемыми суммами вычетов, упорядоченные в соответствии с
							// наиболее выгодным для сотрудника приоритетом применения вычетов. Переписываем вычеты из таблицы ВычетыЗаМесяц
							// в таблицу ВспомогательнаяТаблицаВычетовМесяца (распределяя суммы по подразделениям из доходов этой даты
							// получения дохода) в пределах рассчитанного ранее примененного за дату вычета (если сумма вычета и остаток
							// вычета на дату одного знака, берем минимальное по модулю). Если располагаемая сумма вычета полностью исчерпана
							// (стала равна 0), удаляем строку из таблицы ВычетыЗаМесяц.
							ИндексПоследнейСтрокиТаблицыВычетов = ВычетыЗаМесяц.Количество() - 1;
							Индекс = 0;
							Пока Индекс <= ИндексПоследнейСтрокиТаблицыВычетов Цикл		
								ТекущийВычет = ВычетыЗаМесяц[Индекс];
								ЗначениеВычетаЗаМесяц = ТекущийВычет.РазмерВычета;
								Если ВсегоВычетовЗаДату * ЗначениеВычетаЗаМесяц > 0 Тогда		
									Учтено = ?(ВсегоВычетовЗаДату > 0, Мин(ЗначениеВычетаЗаМесяц, ВсегоВычетовЗаДату), Макс(ЗначениеВычетаЗаМесяц, ВсегоВычетовЗаДату));
									ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, ПараметрыЗаполненияРесурсаСуммаВычетаПоПодразделению, '00010101', Учтено, ТекущаяСтрокаТаблицыДоходов, ТаблицаРаспределенияНаДату, ТекущийВычет);
									ВсегоВычетовЗаДату = ВсегоВычетовЗаДату - Учтено;
									ТекущийВычет.РазмерВычета = ЗначениеВычетаЗаМесяц - Учтено;
									Если ТекущийВычет.РазмерВычета = 0 Тогда
										ВычетыЗаМесяц.Удалить(Индекс);
										ИндексПоследнейСтрокиТаблицыВычетов = ИндексПоследнейСтрокиТаблицыВычетов - 1;
										Индекс = Индекс - 1;
									КонецЕсли;
									Если ВсегоВычетовЗаДату = 0 Тогда
										Прервать;
									КонецЕсли;
								КонецЕсли;	
								Индекс = Индекс + 1;
							КонецЦикла;
							
							// Проверим не были ли ранее зарегистрированы в учете предоставленные сейчас вычеты;
							// если были, то при нулевом итоге таблицу очистим, а со следующей даты начнем накапливать вычеты "с чистого листа".
							Если ВспомогательнаяТаблицаВычетовМесяца.Итог("РазмерВычета") = 0 Тогда
								ИтогиПоВычетам = Новый Соответствие;
								Для каждого СтрокаТЗ Из ВспомогательнаяТаблицаВычетовМесяца Цикл
									Значение = ИтогиПоВычетам[СтрокаТЗ.КодВычета];
									ИтогиПоВычетам.Вставить(СтрокаТЗ.КодВычета, ?(Значение = Неопределено, 0, Значение) + СтрокаТЗ.РазмерВычета)
								КонецЦикла;
								Если ИтогиПоВычетам.Количество() = 1 Тогда
									ВспомогательнаяТаблицаВычетовМесяца.Очистить();
								Иначе
									СтрокиКУдалению.Очистить();
									Для каждого СтрокаТЗ Из ВспомогательнаяТаблицаВычетовМесяца Цикл
										Если Не ЗначениеЗаполнено(ИтогиПоВычетам[СтрокаТЗ.КодВычета]) Тогда
											СтрокиКУдалению.Вставить(СтрокаТЗ, Истина)
										КонецЕсли;	
									КонецЦикла;
									Для каждого Элемент Из СтрокиКУдалению Цикл
										ВспомогательнаяТаблицаВычетовМесяца.Удалить(Элемент.Ключ)
									КонецЦикла;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;	
					
				КонецЕсли;	
				
				Если ТекущаяСтрокаТаблицыДоходов.ЭтоПоследняяСтрокаЗаМесяц Тогда				
					
					// Окончательный сбор вычетов в собственной таблице значений.
					
					Для каждого СтрокаТЗ Из ВспомогательнаяТаблицаВычетовМесяца Цикл
						Если Не ОписаниеВычетов[СтрокаТЗ.КодВычета].ИмущественныйВычет Тогда
							СтрокаТЗ.МесяцПериодаПредоставленияВычета = МесяцНалоговогоПериода
						КонецЕсли;
					КонецЦикла; 
					
					// Определяем дату получения дохода, к строке которой будут приписаны вычеты этого месяца.
					Если ОкончательныйРасчет Тогда
						Если ПроводитьРасчетЗаОчереднойМесяц Тогда
							ДатаУчетаВычетов = КонецМесяца(МесяцНалоговогоПериода)
						Иначе
							ОсновнаяДатаПолученияДохода = ДатыТекущегоРасчетаПоМесяцам[Месяц(МесяцНалоговогоПериода)];
							Если ЗначениеЗаполнено(ОсновнаяДатаПолученияДохода) Тогда
								ДатаУчетаВычетов = ОсновнаяДатаПолученияДохода;
							ИначеЕсли ЗначениеЗаполнено(ОсновнаяДатаМесяцаРасчетаПоТекущимДоходам) Тогда
								ДатаУчетаВычетов = ОсновнаяДатаМесяцаРасчетаПоТекущимДоходам;
							ИначеЕсли ЗначениеЗаполнено(ОсновнаяДатаМесяцаРасчета) Тогда
								ДатаУчетаВычетов = ОсновнаяДатаМесяцаРасчета;
							Иначе
								ДатаУчетаВычетов = ДатаНалоговогоПериода;
							КонецЕсли;
						КонецЕсли;
					Иначе
						ДатаУчетаВычетов = ОсновнаяДатаТекущегоРасчета;
					КонецЕсли;
					
					Если ЕстьВычетыЗаМесяц Тогда // Перераспределим итоговые суммы предоставленных вычетов по категориям, сохраняя подразделения.
						
						// Доходов в месяце может не быть, но вычеты приходится предоставлять, распределим их по доходам текущего расчета.
						Если Не ЗначениеЗаполнено(ТаблицаРаспределенияВычетов) Тогда
							Если ОкончательныйРасчет Тогда
								Если ЗначениеЗаполнено(ОсновнаяДатаМесяцаРасчетаПоТекущимДоходам) Тогда
									ТаблицаРаспределенияВычетов = ТаблицаРаспределенияМесяцаРасчетаПоТекущимДоходам;
								ИначеЕсли ЗначениеЗаполнено(ОсновнаяДатаМесяцаРасчета) Тогда
									ТаблицаРаспределенияВычетов = ТаблицаРаспределенияКонцаМесяцаРасчета;
								Иначе
									ТаблицаРаспределенияВычетов = ТаблицаРаспределенияНалоговогоПериода;
								КонецЕсли;
							Иначе
								СтруктураПоискаТолькоПоДатам.ДатаПолученияДохода = ОсновнаяДатаТекущегоРасчета;
								ТаблицаРаспределенияВычетов = ДоходыТекущегоРасчета.Скопировать(ДоходыТекущегоРасчета.НайтиСтроки(СтруктураПоискаТолькоПоДатам)); 
							КонецЕсли;
						КонецЕсли;
						Если ЗначениеЗаполнено(ВычетыЗаМесяц) Тогда
							БылоСтрокВычетов = ВспомогательнаяТаблицаВычетовМесяца.Количество();
							Для Каждого ТекущийВычет Из ВычетыЗаМесяц Цикл
								ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаВычетовМесяца, ПараметрыЗаполненияРесурсаСуммаВычетаПоПодразделению, '00010101', ТекущийВычет.РазмерВычета, СтруктураПоиска, ТаблицаРаспределенияВычетов, ТекущийВычет);
							КонецЦикла;	
							Для Сч = БылоСтрокВычетов + 1 По ВспомогательнаяТаблицаВычетовМесяца.Количество() Цикл
								ВспомогательнаяТаблицаВычетовМесяца[Сч - 1].МесяцПериодаПредоставленияВычета = МесяцНалоговогоПериода
							КонецЦикла;
						КонецЕсли;
						
						ВычетыМесяца = ВспомогательнаяТаблицаВычетовМесяца.СкопироватьКолонки();
						
						ВспомогательнаяТаблицаВычетовМесяца.ЗаполнитьЗначения(ДатаУчетаВычетов, "МесяцНалоговогоПериода");
						ВспомогательнаяТаблицаВычетовМесяца.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода, МесяцПериодаПредоставленияВычета, Подразделение, КатегорияДохода, КодВычета", "РазмерВычета");
						Если ВспомогательнаяТаблицаВычетовМесяца.Количество() > 0 Тогда
							ВспомогательнаяТаблицаВычетовМесяцаФизическогоЛица = ВспомогательнаяТаблицаВычетовМесяца.Скопировать( ,"Подразделение");
							ВспомогательнаяТаблицаВычетовМесяцаФизическогоЛица.Свернуть("Подразделение");
							Если ВспомогательнаяТаблицаВычетовМесяцаФизическогоЛица.Количество() = 1 Тогда
								Для каждого СтрокаТЗ Из ВспомогательнаяТаблицаВычетовМесяца Цикл
									Если СтрокаТЗ.РазмерВычета <> 0 Тогда
										ВписатьРесурсВРезультатыРасчетов(ВычетыМесяца, ПараметрыЗаполненияРесурсаСуммаВычетаПоКатегории, ДатаУчетаВычетов, СтрокаТЗ.РазмерВычета, СтруктураПоиска, ТаблицаРаспределенияВычетов, СтрокаТЗ);
									КонецЕсли;
								КонецЦикла;
							Иначе 	
								ТаблицаДляРаспределенияПоПодразделению = ТаблицаРаспределенияВычетов.СкопироватьКолонки();
								СтрокиРаспределенияПоПодразделениям = Новый Соответствие;
								Для Каждого СтрокаТаблицыРаспределения Из ТаблицаРаспределенияВычетов Цикл
									СтрокиРаспределения = СтрокиРаспределенияПоПодразделениям[СтрокаТаблицыРаспределения.Подразделение];
									Если СтрокиРаспределения = Неопределено Тогда
										СтрокиРаспределения = Новый Массив;
										СтрокиРаспределенияПоПодразделениям.Вставить(СтрокаТаблицыРаспределения.Подразделение, СтрокиРаспределения);
									КонецЕсли;	
									СтрокиРаспределения.Добавить(СтрокаТаблицыРаспределения);
								КонецЦикла;	
								Для Каждого СтрокаТЗ Из ВспомогательнаяТаблицаВычетовМесяца Цикл
									СтрокиРаспределения = СтрокиРаспределенияПоПодразделениям[СтрокаТЗ.Подразделение];
									Если СтрокиРаспределения = Неопределено Тогда
										ТаблицаРаспределения = ТаблицаРаспределенияВычетов.СкопироватьКолонки();
									Иначе
										ТаблицаРаспределения = ТаблицаРаспределенияВычетов.Скопировать(СтрокиРаспределения);
									КонецЕсли;	
									ВписатьРесурсВРезультатыРасчетов(ВычетыМесяца, ПараметрыЗаполненияРесурсаСуммаВычетаПоКатегории, ДатаУчетаВычетов, СтрокаТЗ.РазмерВычета, СтруктураПоиска, ТаблицаРаспределения, СтрокаТЗ);
								КонецЦикла;
							КонецЕсли;
						КонецЕсли;
						
					Иначе // У сторно-строк вычетов оставим имевшиеся ранее подразделения и категории.
						ВычетыМесяца = ВспомогательнаяТаблицаВычетовМесяца.Скопировать();
						Если ВспомогательнаяТаблицаВычетовМесяца.Количество() > 0 Тогда 
							ВычетыМесяца.ЗаполнитьЗначения(ДатаУчетаВычетов, "МесяцНалоговогоПериода");
						КонецЕсли;
					КонецЕсли;
					
					ВычетыМесяца.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода, МесяцПериодаПредоставленияВычета, Подразделение, КатегорияДохода, КодВычета", "РазмерВычета");
					
					// Если у физ.лица также есть доходы, облагаемые не нарастающим итогом, - добавим и их тоже.
					ДоходыДляРасчетаНалогаПоКаждойСуммеОтдельноПоФизическомуЛицу = ДоходыДляРасчетаНалогаПоКаждойСуммеОтдельно.НайтиСтроки(СтруктураПоиска);
					Для Каждого СтрокаТЗ Из ДоходыДляРасчетаНалогаПоКаждойСуммеОтдельноПоФизическомуЛицу Цикл
						НалогСДохода = Окр(СтрокаТЗ.ДоходыБезВычетов * СтрокаТЗ.СтавкаЧислом);
						СтрокаНалога = ВспомогательнаяТаблицаМесяца.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаНалога, СтрокаТЗ, "ФизическоеЛицо, Подразделение, КатегорияДохода");
						СтрокаНалога.НалогПоСтавке13 = НалогСДохода;
						СтрокаНалога.МесяцНалоговогоПериода = СтрокаТЗ.ДатаПолученияДохода;
						ДоходыДляРасчетаНалогаПоКаждойСуммеОтдельно.Удалить(СтрокаТЗ);
					КонецЦикла;	
					
					// В "межрасчетном" варианте оставляем только те результаты, которые соответствуют месяцу (-ам) получения дохода
					// текущего акта расчета.
					Если Не ОкончательныйРасчет И Не ЗначениеЗаполнено(ДатыТекущегоРасчетаПоМесяцам[Месяц(МесяцНалоговогоПериода)]) И Не ЗначениеЗаполнено(ДатыТекущегоРасчетаНерезидента[Месяц(МесяцНалоговогоПериода)]) Тогда
						
						// В итоговую таблицу запишем только вычеты.
						ДобавлятьРезультатМесяцаВИтогиФизлица = Ложь;
						
						Если МесяцНалоговогоПериода < КонецМесяца(МесяцРасчета) И ВспомогательнаяТаблицаМесяца.Итог("НалогПоСтавке13") = 0 Тогда
							Для каждого СтрокаВычета Из ВычетыМесяца Цикл
								ДобавлятьРезультатМесяцаВИтогиФизлица = СтрокаВычета.РазмерВычета <> 0;
								Если ДобавлятьРезультатМесяцаВИтогиФизлица Тогда
									Прервать;
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
						
						// Минимизируем появление отсутствующих в текущих доходах категорий дохода.
						Если ДобавлятьРезультатМесяцаВИтогиФизлица Тогда
							
							ДатаМесяца = ОсновнаяДатаТекущегоРасчета;
							СтруктураПоискаТолькоПоДатам.ДатаПолученияДохода = ОсновнаяДатаТекущегоРасчета;
							ТаблицаРаспределенияТекущегоМесяца = ДоходыТекущегоРасчета.Скопировать(ДоходыТекущегоРасчета.НайтиСтроки(СтруктураПоискаТолькоПоДатам)); 
							
							ДатыПодразделенияКатегории = ВспомогательныеДатыПодразделенияКатегории.СкопироватьКолонки();
							НаборИзмерений = ВычетыМесяца.Скопировать(, "МесяцНалоговогоПериода, КатегорияДохода, Подразделение");
							НаборИзмерений.Свернуть("МесяцНалоговогоПериода, КатегорияДохода, Подразделение");
							ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(НаборИзмерений, ДатыПодразделенияКатегории);
							Для каждого СтрокаТЗ Из ДатыПодразделенияКатегории Цикл
								СтрокаТЗ.ЗаменятьДатуПолученияДохода = Истина;
								СтрокаТЗ.ЗаменятьКатегориюДохода = ВсеКатегорииТекущегоРасчета[СтрокаТЗ.КатегорияДохода] = Неопределено;
								СтрокаТЗ.ЗаменятьПодразделение = МесяцНалоговогоПериода >= НачалоМесяца(МесяцРасчета) И НачалоМесяца(СтрокаТЗ.МесяцНалоговогоПериода) = НачалоМесяца(ДатаМесяца);
								СтрокаТЗ.Распределение = ТаблицаРаспределенияТекущегоМесяца;
								Если ОсобыеКатегорииДохода[СтрокаТЗ.КатегорияДохода] = Истина Тогда
									СтрокаТЗ.ЗаменятьПодразделение = Ложь;
									СтрокаТЗ.ЗаменятьКатегориюДохода = Ложь;
								ИначеЕсли СтрокаТЗ.ЗаменятьПодразделение Тогда 	
									СтруктураПоискаПоДатамИПодразделениям.ДатаПолученияДохода = СтрокаТЗ.МесяцНалоговогоПериода;
									СтруктураПоискаПоДатамИПодразделениям.Подразделение = СтрокаТЗ.Подразделение;
									СтрокаТЗ.ЗаменятьПодразделение = ДоходыТекущегоРасчета.НайтиСтроки(СтруктураПоискаПоДатамИПодразделениям).Количество() = 0;
								КонецЕсли;
							КонецЦикла;
							Если ДатыПодразделенияКатегории.Количество() > 2 Тогда
								ДатыПодразделенияКатегории.Индексы.Добавить("МесяцНалоговогоПериода, КатегорияДохода, Подразделение");
							КонецЕсли;
							
							ВспомогательнаяТаблицаВычетовМесяца.Очистить();
							ЗаменитьДатыПодразделенияКатегории(ВспомогательнаяТаблицаВычетовМесяца, ВычетыМесяца, ПараметрыЗаполненияРесурсаСуммаВычетаПоКатегории, ДатыПодразделенияКатегории, ДатаМесяца, "МесяцПериодаПредоставленияВычета, КодВычета");
							
							// Перенесем результат расчета месяца в основную таблицу с результатом расчета.
							ПереписатьЧастичныйРезультатРасчетаВРезультатПоФизическомуЛицу(РезультатРасчетаВспомогательный, СтрокиНДФЛЗаГод, ВспомогательнаяТаблицаМесяца.СкопироватьКолонки(), ВспомогательнаяТаблицаВычетовМесяца, ОписаниеВычетов);
						КонецЕсли;
						
						ВспомогательнаяТаблицаМесяца.Очистить();
						
					Иначе 
					
						ИсчисленоНДФЛЗаГод = ИсчисленоНДФЛЗаГод + ВспомогательнаяТаблицаМесяца.Итог("НалогПоСтавке13");
						
						Если ПроводитьРасчетЗаОчереднойМесяц Тогда
							
							// Вычеркнем из результата строки по переброске некоторой суммы с одной категории на другую.
							ТаблицаМесяцаБезКатегорийДохода = ВспомогательнаяТаблицаМесяца.Скопировать();
							ТаблицаМесяцаБезКатегорийДохода.Свернуть("МесяцНалоговогоПериода, Подразделение", "НалогПоСтавке13");
							Для каждого СтрокаТЗ Из ТаблицаМесяцаБезКатегорийДохода Цикл
								Если СтрокаТЗ.НалогПоСтавке13 = 0 Тогда
									СтрокиКОбнулению = ВспомогательнаяТаблицаМесяца.НайтиСтроки(Новый Структура("МесяцНалоговогоПериода, Подразделение", СтрокаТЗ.МесяцНалоговогоПериода, СтрокаТЗ.Подразделение));
									Для каждого СтрокаКОбнулению Из СтрокиКОбнулению Цикл
										ВспомогательнаяТаблицаМесяца.Удалить(СтрокаКОбнулению);
									КонецЦикла; 	
								КонецЕсли;
							КонецЦикла;
							
							// Минимизируем появление отсутствующих в текущих доходах дат получения и категорий дохода:
							// 1. Определяем подходящую дату получения дохода и соответствующее ей распределение
							// при этом некоторые результаты расчетов могут быть проигнорированы совсем.
							ДобавлятьРезультатМесяцаВИтогиФизлица = Истина;
							ОсновнаяДатаПолученияДохода = ДатыТекущегоРасчетаПоМесяцам[Месяц(МесяцНалоговогоПериода)];
							Если ОкончательныйРасчет Тогда
								Если Не ЗначениеЗаполнено(ОсновнаяДатаПолученияДохода) Тогда // перерасчет налога при отсутствии дохода текущего акта расчета
									Если МесяцНалоговогоПериода > КонецМесяца(МесяцРасчета) Тогда // перерасчет по будущим доходам не производим
										ДобавлятьРезультатМесяцаВИтогиФизлица = Ложь;
									ИначеЕсли ВспомогательнаяТаблицаМесяца.Итог("НалогПоСтавке13") = 0 И МесяцНалоговогоПериода < НачалоМесяца(МесяцРасчета) Тогда // нашли предшествующий месяц с нулевым налогом
										ВычетыДляПроверки = ВычетыМесяца.Скопировать(, "КодВычета, РазмерВычета");
										ВычетыДляПроверки.Свернуть("КодВычета", "РазмерВычета");
										ЕстьДанныеМесяца = Ложь;
										Для каждого СтрокаТЗ Из ВычетыДляПроверки Цикл
											ЕстьДанныеМесяца = СтрокаТЗ.РазмерВычета <> 0;
											Если ЕстьДанныеМесяца Тогда
												Прервать;
											КонецЕсли;
										КонецЦикла;
										Если Не ЕстьДанныеМесяца Тогда // игнорируем различные переброски сумм одного вычета, но не между вычетами 
											ДобавлятьРезультатМесяцаВИтогиФизлица = Ложь;
											ВспомогательнаяТаблицаМесяца.Очистить();
										КонецЕсли;
									КонецЕсли;
								КонецЕсли;
								Если ДобавлятьРезультатМесяцаВИтогиФизлица Тогда
									Если МесяцНалоговогоПериода < НачалоМесяца(МесяцРасчета) Тогда
										Если ЗначениеЗаполнено(ОсновнаяДатаПолученияДохода) Тогда
											ДатаМесяца = ОсновнаяДатаПолученияДохода;
											СтруктураПоискаТолькоПоДатам.ДатаПолученияДохода = ОсновнаяДатаПолученияДохода;
											ТаблицаРаспределенияТекущегоМесяца = ДоходыТекущегоРасчета.Скопировать(ДоходыТекущегоРасчета.НайтиСтроки(СтруктураПоискаТолькоПоДатам)); 
										ИначеЕсли ЗначениеЗаполнено(ОсновнаяДатаМесяцаРасчетаПоТекущимДоходам) Тогда
											ДатаМесяца = ОсновнаяДатаМесяцаРасчетаПоТекущимДоходам;
											ТаблицаРаспределенияТекущегоМесяца = ТаблицаРаспределенияМесяцаРасчетаПоТекущимДоходам;
										ИначеЕсли ЗначениеЗаполнено(ОсновнаяДатаМесяцаРасчета) Тогда
											ДатаМесяца = ОсновнаяДатаМесяцаРасчета;
											ТаблицаРаспределенияТекущегоМесяца = ТаблицаРаспределенияКонцаМесяцаРасчета;
										Иначе
											ДатаМесяца = ДатаНалоговогоПериода;
											ТаблицаРаспределенияТекущегоМесяца = ТаблицаРаспределенияНалоговогоПериода;
										КонецЕсли;
									Иначе
										Если ЗначениеЗаполнено(ОсновнаяДатаПолученияДохода) Тогда
											ДатаМесяца = ОсновнаяДатаПолученияДохода;
											СтруктураПоискаТолькоПоДатам.ДатаПолученияДохода = ОсновнаяДатаПолученияДохода;
											ТаблицаРаспределенияТекущегоМесяца = ДоходыТекущегоРасчета.Скопировать(ДоходыТекущегоРасчета.НайтиСтроки(СтруктураПоискаТолькоПоДатам)); 
										Иначе
											ДатаМесяца = ДатаНалоговогоПериода;
											ТаблицаРаспределенияТекущегоМесяца = ТаблицаРаспределенияНалоговогоПериода;
										КонецЕсли;
									КонецЕсли;
								КонецЕсли;
							Иначе	
								ДатаМесяца = ОсновнаяДатаПолученияДохода;
								СтруктураПоискаТолькоПоДатам.ДатаПолученияДохода = ОсновнаяДатаПолученияДохода;
								ТаблицаРаспределенияТекущегоМесяца = ДоходыТекущегоРасчета.Скопировать(ДоходыТекущегоРасчета.НайтиСтроки(СтруктураПоискаТолькоПоДатам)); 
							КонецЕсли;
							Если ДобавлятьРезультатМесяцаВИтогиФизлица Тогда
								
								// 2. Заменяем даты получения дохода на подходящую и пересматриваем категорию дохода
								ДатыПодразделенияКатегории = ВспомогательныеДатыПодразделенияКатегории.СкопироватьКолонки();
								НаборИзмерений = ВспомогательнаяТаблицаМесяца.Скопировать(, "МесяцНалоговогоПериода, КатегорияДохода, Подразделение");
								ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВычетыМесяца.Скопировать(, "МесяцНалоговогоПериода, КатегорияДохода, Подразделение"), НаборИзмерений);
								НаборИзмерений.Свернуть("МесяцНалоговогоПериода, КатегорияДохода, Подразделение");
								ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(НаборИзмерений, ДатыПодразделенияКатегории);
								Для каждого СтрокаТЗ Из ДатыПодразделенияКатегории Цикл
									СтрокаТЗ.ЗаменятьДатуПолученияДохода = ВсеДатыТекущегоРасчета[СтрокаТЗ.МесяцНалоговогоПериода] = Неопределено;
									СтрокаТЗ.ЗаменятьКатегориюДохода = ВсеКатегорииТекущегоРасчета[СтрокаТЗ.КатегорияДохода] = Неопределено;
									СтрокаТЗ.ЗаменятьПодразделение = МесяцНалоговогоПериода >= НачалоМесяца(МесяцРасчета) И НачалоМесяца(СтрокаТЗ.МесяцНалоговогоПериода) = НачалоМесяца(ДатаМесяца);
									Если ОсобыеКатегорииДохода[СтрокаТЗ.КатегорияДохода] = Истина Тогда
										СтрокаТЗ.ЗаменятьПодразделение = Ложь;
										СтрокаТЗ.ЗаменятьКатегориюДохода = Ложь;
									ИначеЕсли СтрокаТЗ.ЗаменятьПодразделение Тогда 	
										СтруктураПоискаПоДатамИПодразделениям.ДатаПолученияДохода = СтрокаТЗ.МесяцНалоговогоПериода;
										СтруктураПоискаПоДатамИПодразделениям.Подразделение = СтрокаТЗ.Подразделение;
										СтрокаТЗ.ЗаменятьПодразделение = ДоходыТекущегоРасчета.НайтиСтроки(СтруктураПоискаПоДатамИПодразделениям).Количество() = 0;
									КонецЕсли;
									Если СтрокаТЗ.ЗаменятьДатуПолученияДохода Тогда
										СтрокаТЗ.Распределение = ТаблицаРаспределенияТекущегоМесяца;
									Иначе
										СтруктураПоискаТолькоПоДатам.ДатаПолученияДохода = СтрокаТЗ.МесяцНалоговогоПериода;
										СтрокаТЗ.Распределение = ДоходыТекущегоРасчета.Скопировать(ДоходыТекущегоРасчета.НайтиСтроки(СтруктураПоискаТолькоПоДатам)); 
									КонецЕсли;
								КонецЦикла;
								Если ДатыПодразделенияКатегории.Количество() > 2 Тогда
									ДатыПодразделенияКатегории.Индексы.Добавить("МесяцНалоговогоПериода, КатегорияДохода, Подразделение");
								КонецЕсли;
								
								ВспомогательнаяТаблицаФизическогоЛица = ВспомогательнаяТаблицаМесяца.СкопироватьКолонки();
								ЗаменитьДатыПодразделенияКатегории(ВспомогательнаяТаблицаФизическогоЛица, ВспомогательнаяТаблицаМесяца, ПараметрыЗаполненияРесурсаНалогПоСтавке13, ДатыПодразделенияКатегории, ДатаМесяца);
								ВспомогательнаяТаблицаМесяца.Очистить();
								ВспомогательнаяТаблицаВычетовМесяца.Очистить();
								ЗаменитьДатыПодразделенияКатегории(ВспомогательнаяТаблицаВычетовМесяца, ВычетыМесяца, ПараметрыЗаполненияРесурсаСуммаВычетаПоКатегории, ДатыПодразделенияКатегории, ДатаМесяца, "МесяцПериодаПредоставленияВычета, КодВычета");
								
								// Перенесем результат расчета месяца в основную таблицу с результатом расчета.
								ПереписатьЧастичныйРезультатРасчетаВРезультатПоФизическомуЛицу(РезультатРасчетаВспомогательный, СтрокиНДФЛЗаГод, ВспомогательнаяТаблицаФизическогоЛица, ВспомогательнаяТаблицаВычетовМесяца, ОписаниеВычетов);
							КонецЕсли;
							
						Иначе
							
							// Перенесем результат расчета месяца в основную таблицу с результатом расчета.
							ПереписатьЧастичныйРезультатРасчетаВРезультатПоФизическомуЛицу(РезультатРасчетаВспомогательный, СтрокиНДФЛЗаГод, ВспомогательнаяТаблицаМесяца, ВычетыМесяца, ОписаниеВычетов);
							ВспомогательнаяТаблицаМесяца.Очистить();
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;		
				
				Если ТекущаяСтрокаТаблицыДоходов.ЭтоПоследняяСтрокаЗаГод Тогда
					Если ИсчисленоНДФЛЗаГод <> 0 Тогда
						// вписываем зачтенные авансовые платежи иностранцев
						ВписатьАвансовыеПлатежиВРезультатРасчета(СтрокиНДФЛЗаГод, ОстаткиПоАвансовымПлатежам, ИсчисленоНДФЛЗаГод, ТекущееФизическоеЛицо, ТекущийНалоговыйПериод);
					Иначе // игнорируем различные переброски сумм одного вычета, но не между вычетами
						НетДанных = Истина;
						Для каждого ЭлементОписания Из ОписаниеВычетов Цикл
							ИмяКолонки = ЭлементОписания.Значение.ИмяКолонки;
							СуммаВычета = 0; ЕстьЗначенияВКолонке = Ложь;
							Для каждого СтрокаРезультата Из СтрокиНДФЛЗаГод Цикл
								СуммаВычета = СуммаВычета + СтрокаРезультата[ИмяКолонки];
								ЕстьЗначенияВКолонке = ЕстьЗначенияВКолонке Или СтрокаРезультата[ИмяКолонки] <> 0
							КонецЦикла;
							Если ЕстьЗначенияВКолонке И СуммаВычета = 0 Тогда
								Для каждого СтрокаРезультата Из СтрокиНДФЛЗаГод Цикл
									Если ИмяКолонки = "ПримененныйВычетЛичный" Тогда
										СтрокаРезультата.КодВычетаЛичный = ""	
									КонецЕсли;
									СтрокаРезультата[ИмяКолонки] = 0
								КонецЦикла;
							КонецЕсли;
							НетДанных = НетДанных И СуммаВычета = 0;
						КонецЦикла;
						Если НетДанных Тогда // удаляем незначащие строки за год из результата
							Для каждого СтрокаРезультата Из СтрокиНДФЛЗаГод Цикл
								РезультатРасчетаВспомогательный.Удалить(СтрокаРезультата)
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
					ПродолжатьРасчет = Ложь;
				Иначе
					ИндексТекущейСтрокиТаблицыДоходов = ИндексТекущейСтрокиТаблицыДоходов + 1;
				КонецЕсли;	
				
			КонецЦикла;  // по налоговым периодам физ.лиц
			
			Если ТекущаяСтрокаТаблицыДоходов.ЭтоПоследняяСтрокаПоФизическомуЛицу Тогда // заканчиваем обработку физ.лица
				Если ОкончательныйРасчет Тогда
					// Допишем учтенные в расчете документы-основания.
					ВписатьУчтенныеОснованияВРезультатРасчета(РезультатРасчетаВспомогательный, НеучтенныеРанееОснования, СтруктураПоискаПоФизическомуЛицу, ИсключаемыйРегистратор);
					СоответствиеФизическихЛиц.Удалить(ТекущееФизическоеЛицо);
				Иначе 
					// Перенесем результаты расчета в основную таблицу с учетом ограничений.
					ПереписатьМежрасчетныйНДФЛФизическогоЛицаВРезультат(РезультатРасчета, РезультатРасчетаВспомогательный, ДатаУдержанияИсчисленногоНалога, МесяцРасчета, ВсегоДоходовТекущегоРасчета + ДоходыТекущегоРасчетаНерезидента.Итог("ДоходыБезВычетов"));	
				КонецЕсли;
			КонецЕсли;	
			
			ИндексТекущейСтрокиТаблицыДоходов = ИндексТекущейСтрокиТаблицыДоходов + 1;
			
		КонецЦикла;	
		
	КонецЕсли;
	
	// Продолжим расчет по нерезидентам.
	СтрокОтдельныхСумм = ДоходыДляРасчетаНалогаПоКаждойСуммеОтдельно.Количество();
	Если СтрокОтдельныхСумм > 0 Тогда

		ДоходыДляРасчетаНалогаПоКаждойСуммеОтдельно.Сортировать(ПоляПоиска, Новый СравнениеЗначений);
		ИндексОбрабатываемойСтроки = 0;
		ТекущееФизическоеЛицо = Неопределено;
		ТекущийНалоговыйПериод = '00010101';
		МесяцНалоговогоПериодаПредыдущейСтроки = '00010101';
		СтруктураПоискаСтандартныхВычетов.ЭтоСоциальныйВычет = Ложь;
		СтруктураПоискаИмущественныхВычетов.ВидДвижения = ВидДвиженияНакопления.Расход;
		// Если выполняется окончательный расчет, будем вписывать результат расчета сразу в таблицы результата.
		// В случае с промежуточным расчетом будем использовать промежуточную таблицу, а потом переносить в результирующую с
		// учетом ограничений.
		Если Не ОкончательныйРасчет Тогда
			РезультатРасчетаВспомогательный = РезультатРасчета.СкопироватьКолонки();
		КонецЕсли;	
		
		Пока ИндексОбрабатываемойСтроки <= СтрокОтдельныхСумм - 1 Цикл
			
			ТекущаяСтрока = ДоходыДляРасчетаНалогаПоКаждойСуммеОтдельно[ИндексОбрабатываемойСтроки];
			
			Если ТекущаяСтрока.ФизическоеЛицо <> ТекущееФизическоеЛицо Тогда 
				
				Если ТекущееФизическоеЛицо <> Неопределено Тогда  // Завершение обработки предыдущего физлица.
					
					// вычтем ранее исчисленное
					СтруктураПоискаИсчисленного.ФизическоеЛицо = ТекущееФизическоеЛицо;
					Для СчМесяцев = 1 По Месяц(МесяцНалоговогоПериодаПредыдущейСтроки) Цикл
						СтруктураПоискаИсчисленного.МесяцНалоговогоПериодаДляПоиска = ДобавитьМесяц(ТекущийНалоговыйПериод, СчМесяцев - 1);
						ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаМесяца, ИсчисленныйРанееНалог.НайтиСтроки(СтруктураПоискаИсчисленного), "КатегорияДохода, НалогПоСтавке13");	
					КонецЦикла;
					
					// впишем засчитываемые авансовые платежи
					ВписатьАвансовыеПлатежиВРезультатРасчета(ВспомогательнаяТаблицаМесяца, ОстаткиПоАвансовымПлатежам, Неопределено, ТекущееФизическоеЛицо, ТекущийНалоговыйПериод);
					
					// перепишем результаты за последний налоговый период
					ПереписатьЧастичныйРезультатРасчетаВРезультатПоФизическомуЛицу(РезультатРасчетаВспомогательный, Неопределено, ВспомогательнаяТаблицаМесяца, ВспомогательнаяТаблицаВычетовМесяца, ОписаниеВычетов, ТекущийНалоговыйПериод, ПредоставленныеСтандартныеИСоциальныеВычеты, СтруктураПоискаСтандартныхВычетов, ИмущественныеВычеты, СтруктураПоискаИмущественныхВычетов, Месяц(МесяцНалоговогоПериодаПредыдущейСтроки));
					
					// окончательно доработаем результаты
					Если ОкончательныйРасчет Тогда
						Если СоответствиеФизическихЛиц[ТекущееФизическоеЛицо] <> Неопределено Тогда // Допишем учтенные в расчете документы-основания.
							СтруктураПоискаПоФизическомуЛицу.ФизическоеЛицо = ТекущееФизическоеЛицо;
							ВписатьУчтенныеОснованияВРезультатРасчета(РезультатРасчетаВспомогательный, НеучтенныеРанееОснования, СтруктураПоискаПоФизическомуЛицу, ИсключаемыйРегистратор);
						КонецЕсли;
					Иначе
						ПереписатьМежрасчетныйНДФЛФизическогоЛицаВРезультат(РезультатРасчета, РезультатРасчетаВспомогательный, ДатаУдержанияИсчисленногоНалога, МесяцРасчета);	
					КонецЕсли;
					
				КонецЕсли;
				
				ТекущееФизическоеЛицо = ТекущаяСтрока.ФизическоеЛицо; // Начало обработки очередного физлица.
				ТекущийНалоговыйПериод = НачалоГода(ТекущаяСтрока.МесяцНалоговогоПериода);
				ВспомогательнаяТаблицаМесяца.Очистить();
				Если Не ОкончательныйРасчет Тогда
					РезультатРасчетаВспомогательный.Очистить();
				КонецЕсли;	
				ЗаполнитьЗначенияСвойств(СтруктураПоискаСтандартныхВычетов, ТекущаяСтрока);
				ЗаполнитьЗначенияСвойств(СтруктураПоискаИмущественныхВычетов, ТекущаяСтрока);
			
			КонецЕсли;
			
			Если ТекущийНалоговыйПериод <> НачалоГода(ТекущаяСтрока.МесяцНалоговогоПериода) Тогда
				
				// Завершение обработки предыдущего налогового периода.
				
				// вычтем ранее исчисленное
				СтруктураПоискаИсчисленного.ФизическоеЛицо = ТекущееФизическоеЛицо;
				Для СчМесяцев = 0 По 11 Цикл
					СтруктураПоискаИсчисленного.МесяцНалоговогоПериодаДляПоиска = ДобавитьМесяц(ТекущийНалоговыйПериод, СчМесяцев);
					ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаМесяца, ИсчисленныйРанееНалог.НайтиСтроки(СтруктураПоискаИсчисленного), "КатегорияДохода, НалогПоСтавке13");	
				КонецЦикла;
				
				// впишем засчитываемые авансовые платежи
				ВписатьАвансовыеПлатежиВРезультатРасчета(ВспомогательнаяТаблицаМесяца, ОстаткиПоАвансовымПлатежам, Неопределено, ТекущееФизическоеЛицо, ТекущийНалоговыйПериод);
				
				// перепишем результаты за налоговый период
				ПереписатьЧастичныйРезультатРасчетаВРезультатПоФизическомуЛицу(РезультатРасчетаВспомогательный, Неопределено, ВспомогательнаяТаблицаМесяца, ВспомогательнаяТаблицаВычетовМесяца, ОписаниеВычетов, ТекущийНалоговыйПериод, ПредоставленныеСтандартныеИСоциальныеВычеты, СтруктураПоискаСтандартныхВычетов, ИмущественныеВычеты, СтруктураПоискаИмущественныхВычетов);
				
				// Начало обработки очередного налогового периода.
				
				ТекущийНалоговыйПериод = НачалоГода(ТекущаяСтрока.МесяцНалоговогоПериода); 
				ВспомогательнаяТаблицаМесяца.Очистить();
				
			КонецЕсли;
			
			// Расчет налога по очередной строке дохода.
			
			СтрокаНалога = ВспомогательнаяТаблицаМесяца.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНалога, ТекущаяСтрока, "ФизическоеЛицо, Подразделение, КатегорияДохода");
			СтрокаНалога.НалогПоСтавке13 = Окр(ТекущаяСтрока.ДоходыБезВычетов * ТекущаяСтрока.СтавкаЧислом);
			СтрокаНалога.МесяцНалоговогоПериода = ТекущаяСтрока.ДатаПолученияДохода;
			
			МесяцНалоговогоПериодаПредыдущейСтроки = ТекущаяСтрока.МесяцНалоговогоПериода;
			ИндексОбрабатываемойСтроки = ИндексОбрабатываемойСтроки + 1;
			
		КонецЦикла;
		
		Если ТекущееФизическоеЛицо <> Неопределено Тогда  // Завершение обработки последнего по порядку физлица.
			
			// вычтем ранее исчисленное
			СтруктураПоискаИсчисленного.ФизическоеЛицо = ТекущееФизическоеЛицо;
			Для СчМесяцев = 1 По Месяц(ТекущаяСтрока.МесяцНалоговогоПериода) Цикл
				СтруктураПоискаИсчисленного.МесяцНалоговогоПериодаДляПоиска = ДобавитьМесяц(ТекущийНалоговыйПериод, СчМесяцев - 1);
				ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаМесяца, ИсчисленныйРанееНалог.НайтиСтроки(СтруктураПоискаИсчисленного), "КатегорияДохода, НалогПоСтавке13");	
			КонецЦикла;
			
			// впишем засчитываемые авансовые платежи
			ВписатьАвансовыеПлатежиВРезультатРасчета(ВспомогательнаяТаблицаМесяца, ОстаткиПоАвансовымПлатежам, Неопределено, ТекущееФизическоеЛицо, ТекущийНалоговыйПериод);
			
			// перепишем результаты за последний налоговый период
			ПереписатьЧастичныйРезультатРасчетаВРезультатПоФизическомуЛицу(РезультатРасчетаВспомогательный, Неопределено, ВспомогательнаяТаблицаМесяца, ВспомогательнаяТаблицаВычетовМесяца, ОписаниеВычетов, ТекущийНалоговыйПериод, ПредоставленныеСтандартныеИСоциальныеВычеты, СтруктураПоискаСтандартныхВычетов, ИмущественныеВычеты, СтруктураПоискаИмущественныхВычетов, Месяц(ТекущаяСтрока.МесяцНалоговогоПериода));
					
			// окончательно доработаем результаты
			Если ОкончательныйРасчет Тогда
				Если СоответствиеФизическихЛиц[ТекущееФизическоеЛицо] <> Неопределено Тогда // Допишем учтенные в расчете документы-основания.
					СтруктураПоискаПоФизическомуЛицу.ФизическоеЛицо = ТекущееФизическоеЛицо;
					ВписатьУчтенныеОснованияВРезультатРасчета(РезультатРасчетаВспомогательный, НеучтенныеРанееОснования, СтруктураПоискаПоФизическомуЛицу, ИсключаемыйРегистратор);
				КонецЕсли;
			Иначе
				ПереписатьМежрасчетныйНДФЛФизическогоЛицаВРезультат(РезультатРасчета, РезультатРасчетаВспомогательный, ДатаУдержанияИсчисленногоНалога, МесяцРасчета);	
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Дозаполним категорию дохода значением по умолчанию.
	Для Каждого СтрокаРезультат Из РезультатРасчета Цикл
		Если Не ЗначениеЗаполнено(СтрокаРезультат.КатегорияДохода) Тогда
			СтрокаРезультат.КатегорияДохода = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда;
		КонецЕсли;
	КонецЦикла;

	Возврат РезультатРасчета;
	
КонецФункции

Функция ДанныеОПерерасчетеНДФЛпоПлоскимСтавкам(Организация, МесяцПерерасчета, НачалоПериода, ОкончаниеПериода, ФизическиеЛица = Неопределено, ДокументСсылка = Неопределено) Экспорт
	
	Если ЗарплатаКадры.ВыполнятьРасчетЗарплатыБезОптимизации() Тогда
		Возврат ДанныеОПерерасчетеНДФЛ(Организация, МесяцПерерасчета, НачалоПериода, ОкончаниеПериода, ФизическиеЛица, ДокументСсылка)
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадры.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ДатаАктуальности", КонецМесяца(МесяцПерерасчета));
	Запрос.УстановитьПараметр("НачалоГодаПериодаРасчета", НачалоГода(НачалоПериода));
	Запрос.УстановитьПараметр("КонецМесяцаРасчета", КонецМесяца(ОкончаниеПериода));
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СоздатьВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП(Организация, Запрос.МенеджерВременныхТаблиц);	
	
    ТекстЗапроса =
	"ВЫБРАТЬ
	|	Обороты.СуммаДохода КАК СуммаДохода,
	|	Обороты.СуммаВычета КАК СуммаВычета,
	|	Обороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Обороты.ДатаПолученияДохода КАК Период,
	|	Обороты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Обороты.КатегорияДохода КАК КатегорияДохода,
	|	Обороты.КодДохода КАК КодДохода,
	|	Обороты.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	Обороты.Подразделение КАК Подразделение,
	|	Обороты.ДатаПолученияДохода КАК ДатаПолученияДохода
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК Обороты
	|ГДЕ
	|	Обороты.Период <= &ДатаАктуальности
	|	И Обороты.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И НЕ Обороты.КодДохода.НеОблагаетсяУНалоговогоАгента
	|	И Обороты.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета
	|	И &УсловиеДляФизлиц
	|	И Обороты.РегистрацияВНалоговомОргане В
	|			(ВЫБРАТЬ
	|				РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП.РегистрацияВНалоговомОргане
	|			ИЗ
	|				ВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП КАК РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП)";
	
	Если ЗначениеЗаполнено(ФизическиеЛица) Тогда
		Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеДляФизлиц", "ФизическоеЛицо В(&ФизическиеЛица)");
		Запрос.Выполнить();
	Иначе
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеДляФизлиц", "Истина") + ЗарплатаКадрыОбщиеНаборыДанных.РазделительЗапросов() + 
		"////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Обороты.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	ВТДоходы КАК Обороты
		|ГДЕ
		|	Обороты.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)";
		ФизическиеЛица = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
	КонецЕсли;
	
	РезультатРасчетаНДФЛ = РассчитатьНалогПоПлоскойСтавке(ДокументСсылка, Организация, МесяцПерерасчета, ФизическиеЛица, НачалоПериода, ОкончаниеПериода, Истина, Неопределено, Неопределено);
	
	РезультатРасчетаНДФЛ.Колонки.Добавить("НалогПоСтавке09", Новый ОписаниеТипов("Число"));
	РезультатРасчетаНДФЛ.Колонки.Добавить("НалогПоСтавке35", Новый ОписаниеТипов("Число"));
	РезультатРасчетаНДФЛ.Колонки.Добавить("ЗачтеноАвансовыхПлатежейПоСтавке35", Новый ОписаниеТипов("Число"));
	
	СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТДоходы", "УчитыватьИзмененияСтатусаДляРасчета");
	
	Запрос.УстановитьПараметр("Регистратор", ДокументСсылка);
	Запрос.УстановитьПараметр("ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев", УчетНДФЛ.ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев());
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТСписокФизЛиц
	|ИЗ
	|	ВТДоходы КАК Доходы
	|ГДЕ
	|	Доходы.СтавкаНалогообложенияРезидента <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСБюджетом.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|				ТОГДА РасчетыСБюджетом.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НалогПоСтавке09,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|				ТОГДА РасчетыСБюджетом.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НалогПоСтавке35,
	|	РасчетыСБюджетом.Подразделение КАК Подразделение,
	|	РасчетыСБюджетом.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	РасчетыСБюджетом.КатегорияДохода КАК КатегорияДохода
	|ПОМЕСТИТЬ ВТРанееНачисленныеНалоги
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыСБюджетом
	|ГДЕ
	|	РасчетыСБюджетом.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И РасчетыСБюджетом.ФизическоеЛицо В
	|			(ВЫБРАТЬ
	|				СписокФизЛиц.ФизическоеЛицо
	|			ИЗ
	|				ВТСписокФизЛиц КАК СписокФизЛиц)
	|	И РасчетыСБюджетом.Период <= &ДатаАктуальности
	|	И РасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета
	|	И РасчетыСБюджетом.Регистратор <> &Регистратор
	|	И РасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И РасчетыСБюджетом.СтавкаНалогообложенияРезидента <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|	И РасчетыСБюджетом.РегистрацияВНалоговомОргане В
	|			(ВЫБРАТЬ
	|				РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП.РегистрацияВНалоговомОргане
	|			ИЗ
	|				ВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП КАК РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСБюджетом.ФизическоеЛицо,
	|	РасчетыСБюджетом.Подразделение,
	|	РасчетыСБюджетом.МесяцНалоговогоПериода,
	|	РасчетыСБюджетом.КатегорияДохода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Доходы.Подразделение КАК Подразделение,
	|	Доходы.КатегорияДохода КАК КатегорияДохода,
	|	ВЫБОР
	|		КОГДА Доходы.ДатаПолученияДохода < &ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев
	|			ТОГДА Доходы.МесяцНалоговогоПериода
	|		ИНАЧЕ Доходы.ДатаПолученияДохода
	|	КОНЕЦ КАК МесяцНалоговогоПериода,
	|	ВЫРАЗИТЬ((Доходы.СуммаДохода - Доходы.СуммаВычета) * ВЫБОР
	|			КОГДА Доходы.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|				ТОГДА СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(10, 0)) КАК НалогПоСтавке09,
	|	ВЫРАЗИТЬ((Доходы.СуммаДохода - Доходы.СуммаВычета) * ВЫБОР
	|			КОГДА Доходы.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|				ТОГДА СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(10, 0)) КАК НалогПоСтавке35
	|ПОМЕСТИТЬ ВТНалоги
	|ИЗ
	|	ВТДоходы КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
	|		ПО Доходы.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
	|			И Доходы.Период = СтавкаНДФЛПоСтавкеРезидента.Период
	|			И Доходы.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
	|			И Доходы.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
	|ГДЕ
	|	Доходы.СтавкаНалогообложенияРезидента <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РанееНачисленныеНалоги.ФизическоеЛицо,
	|	РанееНачисленныеНалоги.Подразделение,
	|	РанееНачисленныеНалоги.КатегорияДохода,
	|	РанееНачисленныеНалоги.МесяцНалоговогоПериода,
	|	-РанееНачисленныеНалоги.НалогПоСтавке09,
	|	-РанееНачисленныеНалоги.НалогПоСтавке35
	|ИЗ
	|	ВТРанееНачисленныеНалоги КАК РанееНачисленныеНалоги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Налоги.Подразделение КАК Подразделение,
	|	Налоги.КатегорияДохода КАК КатегорияДохода,
	|	Налоги.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	СУММА(Налоги.НалогПоСтавке09) КАК НалогПоСтавке09,
	|	СУММА(Налоги.НалогПоСтавке35) КАК НалогПоСтавке35,
	|	0 КАК ЗачтеноАвансовыхПлатежейПоСтавке35
	|ИЗ
	|	ВТНалоги КАК Налоги
	|
	|СГРУППИРОВАТЬ ПО
	|	Налоги.ФизическоеЛицо,
	|	Налоги.Подразделение,
	|	Налоги.МесяцНалоговогоПериода,
	|	Налоги.КатегорияДохода
	|
	|ИМЕЮЩИЕ
	|	(СУММА(Налоги.НалогПоСтавке09) <> 0
	|		ИЛИ СУММА(Налоги.НалогПоСтавке35) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	МесяцНалоговогоПериода,
	|	Подразделение";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат РезультатРасчетаНДФЛ
	КонецЕсли;
	
	НалогПоСтавкам09и35 = Результат.Выгрузить();
	
	ВписатьВРезультатЗачтенныеАвансы(ДокументСсылка, Организация, МесяцПерерасчета, НалогПоСтавкам09и35, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35, "НалогПоСтавке35", "ЗачтеноАвансовыхПлатежейПоСтавке35");
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(НалогПоСтавкам09и35, РезультатРасчетаНДФЛ);
	
	Возврат РезультатРасчетаНДФЛ
	
КонецФункции 

Функция ДанныеОПерерасчетеНДФЛ(Организация, МесяцПерерасчета, НачалоПериода, ОкончаниеПериода, ФизическиеЛица = Неопределено, ДокументСсылка = Неопределено)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадры.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ДатаАктуальности", КонецМесяца(МесяцПерерасчета));
	Запрос.УстановитьПараметр("НачалоГодаПериодаРасчета", НачалоГода(НачалоПериода));
	Запрос.УстановитьПараметр("КонецМесяцаРасчета", КонецМесяца(ОкончаниеПериода));
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СоздатьВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП(Организация, Запрос.МенеджерВременныхТаблиц);	
	
    ТекстЗапроса =
	"ВЫБРАТЬ
	|	Обороты.СуммаДохода КАК СуммаДохода,
	|	Обороты.СуммаВычета КАК СуммаВычета,
	|	Обороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Обороты.ДатаПолученияДохода КАК Период,
	|	Обороты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Обороты.КатегорияДохода КАК КатегорияДохода,
	|	Обороты.КодДохода КАК КодДохода,
	|	Обороты.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	Обороты.Подразделение КАК Подразделение,
	|	Обороты.ДатаПолученияДохода КАК ДатаПолученияДохода
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК Обороты
	|ГДЕ
	|	Обороты.Период <= &ДатаАктуальности
	|	И Обороты.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И НЕ Обороты.КодДохода.НеОблагаетсяУНалоговогоАгента
	|	И Обороты.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета
	|	И &УсловиеДляФизлиц
	|	И Обороты.РегистрацияВНалоговомОргане В
	|			(ВЫБРАТЬ
	|				РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП.РегистрацияВНалоговомОргане
	|			ИЗ
	|				ВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП КАК РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Обороты.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизическиеЛица
	|ИЗ
	|	ВТДоходы КАК Обороты
	|ГДЕ
	|	Обороты.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)";
	
	Если ЗначениеЗаполнено(ФизическиеЛица) Тогда
		Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеДляФизлиц", "ФизическоеЛицо В(&ФизическиеЛица)");
	Иначе
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеДляФизлиц", "Истина");
	КонецЕсли;
	Запрос.Выполнить();
	
	РезультатРасчетаНДФЛ = РассчитатьНалогПоОсновнойСтавке(ДокументСсылка, Организация, МесяцПерерасчета, Запрос.МенеджерВременныхТаблиц, НачалоПериода, ОкончаниеПериода);
	
	РезультатРасчетаНДФЛ.Колонки.Добавить("НалогПоСтавке09", Новый ОписаниеТипов("Число"));
	РезультатРасчетаНДФЛ.Колонки.Добавить("НалогПоСтавке35", Новый ОписаниеТипов("Число"));
	РезультатРасчетаНДФЛ.Колонки.Добавить("ЗачтеноАвансовыхПлатежейПоСтавке35", Новый ОписаниеТипов("Число"));
	
	СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТДоходы", "УчитыватьИзмененияСтатусаДляРасчета");
	
	Запрос.УстановитьПараметр("Регистратор", ДокументСсылка);
	Запрос.УстановитьПараметр("ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев", УчетНДФЛ.ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев());
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТСписокФизЛиц
	|ИЗ
	|	ВТДоходы КАК Доходы
	|ГДЕ
	|	Доходы.СтавкаНалогообложенияРезидента <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСБюджетом.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|				ТОГДА РасчетыСБюджетом.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НалогПоСтавке09,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|				ТОГДА РасчетыСБюджетом.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НалогПоСтавке35,
	|	РасчетыСБюджетом.Подразделение КАК Подразделение,
	|	РасчетыСБюджетом.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	РасчетыСБюджетом.КатегорияДохода КАК КатегорияДохода
	|ПОМЕСТИТЬ ВТРанееНачисленныеНалоги
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыСБюджетом
	|ГДЕ
	|	РасчетыСБюджетом.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И РасчетыСБюджетом.ФизическоеЛицо В
	|			(ВЫБРАТЬ
	|				СписокФизЛиц.ФизическоеЛицо
	|			ИЗ
	|				ВТСписокФизЛиц КАК СписокФизЛиц)
	|	И РасчетыСБюджетом.Период <= &ДатаАктуальности
	|	И РасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета
	|	И РасчетыСБюджетом.Регистратор <> &Регистратор
	|	И РасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И РасчетыСБюджетом.СтавкаНалогообложенияРезидента <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|	И РасчетыСБюджетом.РегистрацияВНалоговомОргане В
	|			(ВЫБРАТЬ
	|				РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП.РегистрацияВНалоговомОргане
	|			ИЗ
	|				ВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП КАК РегистрацииВНалоговомОрганеОрганизацииОКАТОКПП)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСБюджетом.ФизическоеЛицо,
	|	РасчетыСБюджетом.Подразделение,
	|	РасчетыСБюджетом.МесяцНалоговогоПериода,
	|	РасчетыСБюджетом.КатегорияДохода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Доходы.Подразделение КАК Подразделение,
	|	Доходы.КатегорияДохода КАК КатегорияДохода,
	|	ВЫБОР
	|		КОГДА Доходы.ДатаПолученияДохода < &ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев
	|			ТОГДА Доходы.МесяцНалоговогоПериода
	|		ИНАЧЕ Доходы.ДатаПолученияДохода
	|	КОНЕЦ КАК МесяцНалоговогоПериода,
	|	ВЫРАЗИТЬ((Доходы.СуммаДохода - Доходы.СуммаВычета) * ВЫБОР
	|			КОГДА Доходы.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|				ТОГДА СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(10, 0)) КАК НалогПоСтавке09,
	|	ВЫРАЗИТЬ((Доходы.СуммаДохода - Доходы.СуммаВычета) * ВЫБОР
	|			КОГДА Доходы.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|				ТОГДА СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(10, 0)) КАК НалогПоСтавке35
	|ПОМЕСТИТЬ ВТНалоги
	|ИЗ
	|	ВТДоходы КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
	|		ПО Доходы.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
	|			И Доходы.Период = СтавкаНДФЛПоСтавкеРезидента.Период
	|			И Доходы.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
	|			И Доходы.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
	|ГДЕ
	|	Доходы.СтавкаНалогообложенияРезидента <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РанееНачисленныеНалоги.ФизическоеЛицо,
	|	РанееНачисленныеНалоги.Подразделение,
	|	РанееНачисленныеНалоги.КатегорияДохода,
	|	РанееНачисленныеНалоги.МесяцНалоговогоПериода,
	|	-РанееНачисленныеНалоги.НалогПоСтавке09,
	|	-РанееНачисленныеНалоги.НалогПоСтавке35
	|ИЗ
	|	ВТРанееНачисленныеНалоги КАК РанееНачисленныеНалоги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Налоги.Подразделение КАК Подразделение,
	|	Налоги.КатегорияДохода КАК КатегорияДохода,
	|	Налоги.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	СУММА(Налоги.НалогПоСтавке09) КАК НалогПоСтавке09,
	|	СУММА(Налоги.НалогПоСтавке35) КАК НалогПоСтавке35,
	|	0 КАК ЗачтеноАвансовыхПлатежейПоСтавке35
	|ИЗ
	|	ВТНалоги КАК Налоги
	|
	|СГРУППИРОВАТЬ ПО
	|	Налоги.ФизическоеЛицо,
	|	Налоги.Подразделение,
	|	Налоги.МесяцНалоговогоПериода,
	|	Налоги.КатегорияДохода
	|
	|ИМЕЮЩИЕ
	|	(СУММА(Налоги.НалогПоСтавке09) <> 0
	|		ИЛИ СУММА(Налоги.НалогПоСтавке35) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	МесяцНалоговогоПериода,
	|	Подразделение";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат РезультатРасчетаНДФЛ
	КонецЕсли;
	
	НалогПоСтавкам09и35 = Результат.Выгрузить();
	
	ВписатьВРезультатЗачтенныеАвансы(ДокументСсылка, Организация, МесяцПерерасчета, НалогПоСтавкам09и35, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35, "НалогПоСтавке35", "ЗачтеноАвансовыхПлатежейПоСтавке35");
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(НалогПоСтавкам09и35, РезультатРасчетаНДФЛ);
	
	Возврат РезультатРасчетаНДФЛ
	
КонецФункции 

// Предназначена для выделения сумм НДФЛ, которые следует учесть в расчетах с сотрудниками
//
// Параметры:
//		РезультатыРасчетов - ТаблицаЗначений - с колонками
//				ФизическоеЛицо: должно быть непустым
//              колонки сумм исчисленного налога и сумм зачтенных авансовых платежей (для работающих по патенту), их
//              имена передаются дополнительно
//				может содержать другие колонки
//		ИмяКолонкиНалогаИсчисленного - строка -
//		ИмяКолонкиАвансаЗачтенного - строка -
//
//  Возвращаемое значение - таблица значений с колонками
//			ФизическоеЛицо
//			Налог - общая сумма налога по физ.лицу 
//
Функция ИсчисленныйНалогФизическихЛицПоРезультатамРасчета(РезультатыРасчетов, ИмяКолонкиНалогаИсчисленного = "НалогПоСтавке13", ИмяКолонкиАвансаЗачтенного = "ЗачтеноАвансовыхПлатежейПоСтавке13") Экспорт

	Налоги = РезультатыРасчетов.Скопировать(, "ФизическоеЛицо," + ИмяКолонкиНалогаИсчисленного + "," + ИмяКолонкиАвансаЗачтенного);
	Налоги.Свернуть("ФизическоеЛицо", ИмяКолонкиНалогаИсчисленного + "," + ИмяКолонкиАвансаЗачтенного);
	Налоги.Колонки.Добавить("Налог", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));

	Для каждого СтрокаТЗ Из Налоги Цикл
		СтрокаТЗ.Налог = СтрокаТЗ[ИмяКолонкиНалогаИсчисленного] - СтрокаТЗ[ИмяКолонкиАвансаЗачтенного]
	КонецЦикла;
	
	Налоги.Колонки.Удалить(ИмяКолонкиНалогаИсчисленного);
	Налоги.Колонки.Удалить(ИмяКолонкиАвансаЗачтенного);
	
	Возврат Налоги
	
КонецФункции

Функция РассчитатьУдержанныеНалоги(Ссылка, Организация, ДатаОперации, МенеджерТаблиц, ПериодРегистрации = Неопределено, ОкончательныйРасчет = Истина, ТаблицаВыплат = Неопределено) Экспорт
	
	// до 1 января 2016 года
	
	УточненнаяДатаОперации = ?(ОкончательныйРасчет И ЗначениеЗаполнено(ПериодРегистрации), Макс(КонецМесяца(ПериодРегистрации), КонецДня(ДатаОперации)), КонецДня(ДатаОперации));
	
	РезультатыРасчетов = Новый ТаблицаЗначений;
	РезультатыРасчетов.Колонки.Добавить("ФизическоеЛицо",Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	РезультатыРасчетов.Колонки.Добавить("СтавкаНалогообложенияРезидента",Новый ОписаниеТипов("ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента"));
	РезультатыРасчетов.Колонки.Добавить("КодДохода",Новый ОписаниеТипов("СправочникСсылка.ВидыДоходовНДФЛ"));               
	РезультатыРасчетов.Колонки.Добавить("КатегорияДохода", Новый ОписаниеТипов("ПеречислениеСсылка.КатегорииДоходовНДФЛ"));
	РезультатыРасчетов.Колонки.Добавить("МесяцНалоговогоПериода",Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	РезультатыРасчетов.Колонки.Добавить("РегистрацияВНалоговомОргане",Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	РезультатыРасчетов.Колонки.Добавить("Подразделение", Метаданные.ОпределяемыеТипы.ТерриторияВыполненияРаботВОрганизации.Тип);
	РезультатыРасчетов.Колонки.Добавить("Сумма",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(13,0)));
	РезультатыРасчетов.Колонки.Добавить("СуммаСПревышения",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(13,0)));
	РезультатыРасчетов.Колонки.Добавить("НачисленоНалога",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(13,0)));
	РезультатыРасчетов.Колонки.Добавить("ВключатьВДекларациюПоНалогуНаПрибыль",Новый ОписаниеТипов("Булево"));
	РезультатыРасчетов.Колонки.Добавить("ДокументОснование", Метаданные.ОпределяемыеТипы.ДокументыОснованияНДФЛ.Тип);
	
	ТаблицыКУдалению = Новый Массив;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерТаблиц;
	КолонкиРезультата = МенеджерТаблиц.Таблицы["ВТСписокСотрудников"].Колонки;
	ИмяТаблицыСписокСотрудников = "ВТСписокСотрудников";
	Если КолонкиРезультата.Найти("ДокументОснование") = Неопределено Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 * ИЗ ВТСписокСотрудников КАК СписокСотрудников";
		Если Запрос.Выполнить().Пустой() Тогда
			Возврат РезультатыРасчетов
		КонецЕсли;
	ИначеЕсли Не ОкончательныйРасчет Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СписокСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СписокСотрудников.ДокументОснование КАК ДокументОснование, *
		|ПОМЕСТИТЬ ВТУточненныйСписокСотрудников
		|ИЗ
		|	ВТСписокСотрудников КАК СписокСотрудников
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыУчтенныеПриРасчетеНДФЛ КАК ДокументыУчтенныеПриРасчетеНДФЛ
		|		ПО СписокСотрудников.ФизическоеЛицо = ДокументыУчтенныеПриРасчетеНДФЛ.ФизическоеЛицо
		|			И СписокСотрудников.ДокументОснование = ДокументыУчтенныеПриРасчетеНДФЛ.ДокументОснование
		|ГДЕ
		|	НЕ ЕСТЬNULL(ДокументыУчтенныеПриРасчетеНДФЛ.УдержатьНалогПриВыплатеЗарплаты, ЛОЖЬ)";
		ИмяТаблицыСписокСотрудников = "ВТУточненныйСписокСотрудников";
		ТаблицыКУдалению.Добавить(ИмяТаблицыСписокСотрудников);
		Если Запрос.Выполнить().Выгрузить()[0].Количество = 0 Тогда
			Возврат РезультатыРасчетов
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(ТаблицаВыплат) Тогда
		УчетНДФЛВнутренний.ДописатьДокументыОплаченныеБезУдержанияНДФЛ(Ссылка, Организация, ДатаОперации, ПериодРегистрации, МенеджерТаблиц, ТаблицаВыплат, ИмяТаблицыСписокСотрудников);
		Если ИмяТаблицыСписокСотрудников <> "ВТСписокСотрудников" Тогда
			ТаблицыКУдалению.Добавить(ИмяТаблицыСписокСотрудников);
		КонецЕсли;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадры.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаОперации", КонецДня(УточненнаяДатаОперации));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(УточненнаяДатаОперации));
	Запрос.УстановитьПараметр("ОкончательныйРасчет", ОкончательныйРасчет);
	Запрос.УстановитьПараметр("ДоляПолнойВыплаты", УчетНДФЛ.ДоляПолнойВыплаты());
	Запрос.УстановитьПараметр("ОсобыеРегистраторы", ЗарплатаКадры.РегистраторыПереносаДанных());
	
	ТекстЗапроса =  
	"ВЫБРАТЬ
	|	СписокСотрудников.ФизическоеЛицо,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОснование,
	|	0 КАК СуммаНачисленная,
	|	0 КАК СуммаВыплаченная,
	|	СУММА(СписокСотрудников.СуммаВыплаты) КАК СуммаВыплаты
	|ПОМЕСТИТЬ ВТСуммыНДФЛПоСотрудникамИДокументам
	|ИЗ
	|	ВТСписокСотрудников КАК СписокСотрудников
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокСотрудников.ФизическоеЛицо";
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "ВТСписокСотрудников", ИмяТаблицыСписокСотрудников); 
	Запрос.Выполнить();
	
	ТаблицыКУдалению.Добавить("ВТСуммыНДФЛПоСотрудникамИДокументам");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(СписокСотрудников.СуммаНачисленная) КАК СуммаНачисленная,
	|	СУММА(СписокСотрудников.СуммаВыплаченная) КАК СуммаВыплаченная,
	|	МАКСИМУМ(СписокСотрудников.СуммаВыплаты) КАК СуммаВыплаты
	|ПОМЕСТИТЬ ВТСуммыВыплатыБезОснований
	|ИЗ
	|	ВТСуммыНДФЛПоСотрудникамИДокументам КАК СписокСотрудников
	|ГДЕ
	|	СписокСотрудников.ДокументОснование = НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокСотрудников.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(СписокСотрудников.СуммаВыплаты) КАК СуммаВыплаты
	|ПОМЕСТИТЬ ВТСуммыНДФЛПоСотрудникам
	|ИЗ
	|	ВТСуммыНДФЛПоСотрудникамИДокументам КАК СписокСотрудников
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокСотрудников.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период КАК Период,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода КАК КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация КАК Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение КАК Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование КАК ДокументОснование,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания КАК ВариантУдержания,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма КАК Сумма,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения КАК ВидДвижения,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДатаПолученияДоходаФиксирована КАК ДатаПолученияДоходаФиксирована,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТСтрокиРегистра
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСуммыНДФЛПоСотрудникам КАК СуммыНДФЛПоСотрудникам
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = СуммыНДФЛПоСотрудникам.ФизическоеЛицо
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор <> &Регистратор
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = &Организация
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период <= &ДатаОперации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ДанныеДокументаОснования.Период, СтрокиДанных.Период) КАК Период,
	|	ЕСТЬNULL(НАЧАЛОПЕРИОДА(ДанныеДокументаОснования.МесяцНалоговогоПериода, ДЕНЬ), СтрокиДанных.МесяцНалоговогоПериода) КАК МесяцНалоговогоПериода,
	|	СтрокиДанных.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтрокиДанных.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	СтрокиДанных.КатегорияДохода КАК КатегорияДохода,
	|	СтрокиДанных.КодДохода КАК КодДохода,
	|	СтрокиДанных.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СтрокиДанных.Организация КАК Организация,
	|	СтрокиДанных.Подразделение КАК Подразделение,
	|	СтрокиДанных.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	СтрокиДанных.ДокументОснование КАК ДокументОснование,
	|	СтрокиДанных.ВариантУдержания КАК ВариантУдержания,
	|	СУММА(СтрокиДанных.Сумма) КАК Сумма,
	|	СтрокиДанных.ВидДвижения КАК ВидДвижения
	|ПОМЕСТИТЬ ВТДанныеРегистра
	|ИЗ
	|	ВТСтрокиРегистра КАК СтрокиДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МИНИМУМ(СтрокиДанных.Период) КАК Период,
	|			МИНИМУМ(СтрокиДанных.МесяцНалоговогоПериода) КАК МесяцНалоговогоПериода,
	|			СтрокиДанных.ДокументОснование КАК ДокументОснование,
	|			СтрокиДанных.ФизическоеЛицо КАК ФизическоеЛицо
	|		ИЗ
	|			ВТСтрокиРегистра КАК СтрокиДанных
	|		ГДЕ
	|			СтрокиДанных.Регистратор = СтрокиДанных.ДокументОснование
	|			И НЕ СтрокиДанных.ДатаПолученияДоходаФиксирована
	|			И СтрокиДанных.ДокументОснование <> НЕОПРЕДЕЛЕНО
	|			И НЕ ТИПЗНАЧЕНИЯ(СтрокиДанных.ДокументОснование) В (&ОсобыеРегистраторы)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СтрокиДанных.ДокументОснование,
	|			СтрокиДанных.ФизическоеЛицо) КАК ДанныеДокументаОснования
	|		ПО СтрокиДанных.ДокументОснование = ДанныеДокументаОснования.ДокументОснование
	|			И (НЕ СтрокиДанных.ДатаПолученияДоходаФиксирована)
	|			И СтрокиДанных.ФизическоеЛицо = ДанныеДокументаОснования.ФизическоеЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	СтрокиДанных.ФизическоеЛицо,
	|	СтрокиДанных.СтавкаНалогообложенияРезидента,
	|	СтрокиДанных.КатегорияДохода,
	|	СтрокиДанных.КодДохода,
	|	СтрокиДанных.РегистрацияВНалоговомОргане,
	|	СтрокиДанных.Организация,
	|	СтрокиДанных.Подразделение,
	|	СтрокиДанных.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	СтрокиДанных.ДокументОснование,
	|	СтрокиДанных.ВариантУдержания,
	|	СтрокиДанных.ВидДвижения,
	|	ЕСТЬNULL(НАЧАЛОПЕРИОДА(ДанныеДокументаОснования.МесяцНалоговогоПериода, ДЕНЬ), СтрокиДанных.МесяцНалоговогоПериода),
	|	ЕСТЬNULL(ДанныеДокументаОснования.Период, СтрокиДанных.Период)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период, ДЕНЬ)) КАК ДатаНачисления,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК Период,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода КАК КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация КАК Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение КАК Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование) В (&ОсобыеРегистраторы)
	|			ТОГДА ""ОсобыйРегистратор""
	|		ИНАЧЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование
	|	КОНЕЦ КАК ДокументОснование,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	|			КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
	|				ТОГДА -РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НачисленоНалога,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА 0
	|			КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
	|				ТОГДА 0
	|			ИНАЧЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	|		КОНЕЦ) КАК УдержаноНалога,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	|			ИНАЧЕ -РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	|		КОНЕЦ) КАК СуммаОстаток,
	|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
	|				КОГДА СуммыНДФЛПоСотрудникамИДокументам.СуммаНачисленная = 0
	|					ТОГДА 1
	|				КОГДА СуммыНДФЛПоСотрудникамИДокументам.СуммаВыплаченная + СуммыНДФЛПоСотрудникамИДокументам.СуммаВыплаты > СуммыНДФЛПоСотрудникамИДокументам.СуммаНачисленная * &ДоляПолнойВыплаты
	|					ТОГДА 1
	|				КОГДА СуммыНДФЛПоСотрудникамИДокументам.СуммаВыплаченная ЕСТЬ НЕ NULL 
	|					ТОГДА (СуммыНДФЛПоСотрудникамИДокументам.СуммаВыплаченная + СуммыНДФЛПоСотрудникамИДокументам.СуммаВыплаты) / СуммыНДФЛПоСотрудникамИДокументам.СуммаНачисленная
	|				КОГДА СуммыВыплатыБезОснований.СуммаНачисленная = 0
	|					ТОГДА 1
	|				КОГДА СуммыВыплатыБезОснований.СуммаВыплаченная + СуммыВыплатыБезОснований.СуммаВыплаты > СуммыВыплатыБезОснований.СуммаНачисленная * &ДоляПолнойВыплаты
	|					ТОГДА 1
	|				ИНАЧЕ (СуммыВыплатыБезОснований.СуммаВыплаченная + СуммыВыплатыБезОснований.СуммаВыплаты) / СуммыВыплатыБезОснований.СуммаНачисленная
	|			КОНЕЦ), 1) КАК Доля,
	|	МАКСИМУМ(СуммыНДФЛПоСотрудникам.СуммаВыплаты) КАК СуммаВыплаты
	|ПОМЕСТИТЬ ВТДанныеУчета
	|ИЗ
	|	ВТСуммыНДФЛПоСотрудникам КАК СуммыНДФЛПоСотрудникам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеРегистра КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммыНДФЛПоСотрудникамИДокументам КАК СуммыНДФЛПоСотрудникамИДокументам
	|			ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = СуммыНДФЛПоСотрудникамИДокументам.ФизическоеЛицо
	|				И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование = СуммыНДФЛПоСотрудникамИДокументам.ДокументОснование
	|				И (СуммыНДФЛПоСотрудникамИДокументам.СуммаВыплаты > 0)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммыВыплатыБезОснований КАК СуммыВыплатыБезОснований
	|			ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = СуммыВыплатыБезОснований.ФизическоеЛицо
	|				И (СуммыВыплатыБезОснований.СуммаВыплаты > 0)
	|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование) В (&ОсобыеРегистраторы)
	|			ТОГДА ""ОсобыйРегистратор""
	|		ИНАЧЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование
	|	КОНЕЦ,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	|			ИНАЧЕ -РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	|		КОНЕЦ) <> 0";
	
	ТаблицыКУдалению.Добавить("ВТСуммыВыплатыБезОснований");
	ТаблицыКУдалению.Добавить("ВТСуммыНДФЛПоСотрудникам");
	ТаблицыКУдалению.Добавить("ВТДанныеРегистра");
	ТаблицыКУдалению.Добавить("ВТДанныеУчета");
	ТаблицыКУдалению.Добавить("ВТСтрокиРегистра");
	Если Запрос.Выполнить().Выгрузить()[0].Количество = 0 Тогда
		ЗарплатаКадры.УничтожитьВТ(МенеджерТаблиц, ТаблицыКУдалению);
		Возврат РезультатыРасчетов
	КонецЕсли;
	
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	ДанныеУчета.ДатаНачисления КАК ДатаНачисления,
	|	ДанныеУчета.Период КАК Период,
	|	ДанныеУчета.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ДанныеУчета.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеУчета.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ДанныеУчета.КатегорияДохода КАК КатегорияДохода,
	|	ДанныеУчета.КодДохода КАК КодДохода,
	|	ДанныеУчета.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ДанныеУчета.Организация КАК Организация,
	|	ДанныеУчета.Подразделение КАК Подразделение,
	|	ДанныеУчета.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ДанныеУчета.ДокументОснование КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА ДанныеУчета.СуммаОстаток < 0
	|			ТОГДА ДанныеУчета.СуммаОстаток
	|		КОГДА ДанныеУчета.Доля = 1
	|			ТОГДА ДанныеУчета.СуммаОстаток
	|		КОГДА ДанныеУчета.СуммаОстаток <= ВЫБОР
	|				КОГДА (ВЫРАЗИТЬ(ДанныеУчета.НачисленоНалога * ДанныеУчета.Доля КАК ЧИСЛО(15, 0))) - ДанныеУчета.УдержаноНалога > 0
	|					ТОГДА (ВЫРАЗИТЬ(ДанныеУчета.НачисленоНалога * ДанныеУчета.Доля КАК ЧИСЛО(15, 0))) - ДанныеУчета.УдержаноНалога
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|			ТОГДА ДанныеУчета.СуммаОстаток
	|		ИНАЧЕ ВЫБОР
	|				КОГДА (ВЫРАЗИТЬ(ДанныеУчета.НачисленоНалога * ДанныеУчета.Доля КАК ЧИСЛО(15, 0))) - ДанныеУчета.УдержаноНалога > 0
	|					ТОГДА (ВЫРАЗИТЬ(ДанныеУчета.НачисленоНалога * ДанныеУчета.Доля КАК ЧИСЛО(15, 0))) - ДанныеУчета.УдержаноНалога
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СуммаОстаток,
	|	ДанныеУчета.СуммаВыплаты КАК СуммаВыплаты,
	|	ДанныеУчета.НачисленоНалога КАК НачисленоНалога
	|ПОМЕСТИТЬ ВТПодробно
	|ИЗ
	|	ВТДанныеУчета КАК ДанныеУчета
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ДанныеУчета.СуммаОстаток < 0
	|				ТОГДА ДанныеУчета.СуммаОстаток
	|			КОГДА ДанныеУчета.Доля = 1
	|				ТОГДА ДанныеУчета.СуммаОстаток
	|			КОГДА ДанныеУчета.СуммаОстаток <= ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(ДанныеУчета.НачисленоНалога * ДанныеУчета.Доля КАК ЧИСЛО(15, 0))) - ДанныеУчета.УдержаноНалога > 0
	|						ТОГДА (ВЫРАЗИТЬ(ДанныеУчета.НачисленоНалога * ДанныеУчета.Доля КАК ЧИСЛО(15, 0))) - ДанныеУчета.УдержаноНалога
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|				ТОГДА ДанныеУчета.СуммаОстаток
	|			ИНАЧЕ ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(ДанныеУчета.НачисленоНалога * ДанныеУчета.Доля КАК ЧИСЛО(15, 0))) - ДанныеУчета.УдержаноНалога > 0
	|						ТОГДА (ВЫРАЗИТЬ(ДанныеУчета.НачисленоНалога * ДанныеУчета.Доля КАК ЧИСЛО(15, 0))) - ДанныеУчета.УдержаноНалога
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		КОНЕЦ <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодробныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(ПодробныеДанные.СуммаОстаток) КАК СуммаОстаток,
	|	ПодробныеДанные.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ВТПоФизическомуЛицуОснованию
	|ИЗ
	|	ВТПодробно КАК ПодробныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодробныеДанные.ФизическоеЛицо,
	|	ПодробныеДанные.ДокументОснование
	|
	|ИМЕЮЩИЕ
	|	СУММА(ПодробныеДанные.СуммаОстаток) <> 0";
	
	ТаблицыКУдалению.Добавить("ВТПодробно");
	ТаблицыКУдалению.Добавить("ВТПоФизическомуЛицуОснованию");
	Если Запрос.Выполнить().Выгрузить()[0].Количество = 0 Тогда
		ЗарплатаКадры.УничтожитьВТ(МенеджерТаблиц, ТаблицыКУдалению);
		Возврат РезультатыРасчетов
	КонецЕсли;
	
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	ПодробныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПодробныеДанные.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	НАЧАЛОПЕРИОДА(ПодробныеДанные.МесяцНалоговогоПериода, ДЕНЬ) КАК ДатаПолученияДохода,
	|	СУММА(ПодробныеДанные.СуммаОстаток) КАК СуммаОстаток
	|ПОМЕСТИТЬ ВТПоФизическомуЛицуНаДатуПолученияДохода
	|ИЗ
	|	ВТПодробно КАК ПодробныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодробныеДанные.ФизическоеЛицо,
	|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
	|	НАЧАЛОПЕРИОДА(ПодробныеДанные.МесяцНалоговогоПериода, ДЕНЬ)
	|
	|ИМЕЮЩИЕ
	|	СУММА(ПодробныеДанные.СуммаОстаток) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРегистра.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ДанныеРегистра.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеРегистра.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ДанныеРегистра.КатегорияДохода КАК КатегорияДохода,
	|	ДанныеРегистра.КодДохода КАК КодДохода,
	|	ДанныеРегистра.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|	ДанныеРегистра.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	МАКСИМУМ(ДанныеРегистра.ДокументОснование) КАК ДокументОснование
	|ПОМЕСТИТЬ ВТДанныеОсобыхРегистраторов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПодробныеДанные.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|		ПодробныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ПодробныеДанные.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|		ПодробныеДанные.КатегорияДохода КАК КатегорияДохода,
	|		ПодробныеДанные.КодДохода КАК КодДохода,
	|		ПодробныеДанные.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|		ПодробныеДанные.Организация КАК Организация,
	|		ПодробныеДанные.Подразделение КАК Подразделение,
	|		ПодробныеДанные.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|		ПодробныеДанные.ДокументОснование КАК ДокументОснование
	|	ИЗ
	|		ВТДанныеРегистра КАК ПодробныеДанные
	|	ГДЕ
	|		ТИПЗНАЧЕНИЯ(ПодробныеДанные.ДокументОснование) В (&ОсобыеРегистраторы)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПодробныеДанные.Период,
	|		ПодробныеДанные.ДокументОснование,
	|		ПодробныеДанные.МесяцНалоговогоПериода,
	|		ПодробныеДанные.ФизическоеЛицо,
	|		ПодробныеДанные.СтавкаНалогообложенияРезидента,
	|		ПодробныеДанные.КатегорияДохода,
	|		ПодробныеДанные.КодДохода,
	|		ПодробныеДанные.РегистрацияВНалоговомОргане,
	|		ПодробныеДанные.Организация,
	|		ПодробныеДанные.Подразделение,
	|		ПодробныеДанные.ВключатьВДекларациюПоНалогуНаПрибыль
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ВЫБОР
	|				КОГДА ПодробныеДанные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ПодробныеДанные.Сумма
	|				ИНАЧЕ -ПодробныеДанные.Сумма
	|			КОНЕЦ) > 0) КАК ДанныеРегистра
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистра.МесяцНалоговогоПериода,
	|	ДанныеРегистра.ФизическоеЛицо,
	|	ДанныеРегистра.СтавкаНалогообложенияРезидента,
	|	ДанныеРегистра.КатегорияДохода,
	|	ДанныеРегистра.КодДохода,
	|	ДанныеРегистра.РегистрацияВНалоговомОргане,
	|	ДанныеРегистра.Организация,
	|	ДанныеРегистра.Подразделение,
	|	ДанныеРегистра.ВключатьВДекларациюПоНалогуНаПрибыль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодробныеДанные.ДатаНачисления КАК ДатаНачисления,
	|	ПодробныеДанные.Период КАК Период,
	|	ПодробныеДанные.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПодробныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПодробныеДанные.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ПодробныеДанные.КатегорияДохода КАК КатегорияДохода,
	|	ПодробныеДанные.КодДохода КАК КодДохода,
	|	ПодробныеДанные.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ПодробныеДанные.Организация КАК Организация,
	|	ПодробныеДанные.Подразделение КАК Подразделение,
	|	ПодробныеДанные.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	ВЫБОР
	|		КОГДА ПодробныеДанные.ДокументОснование = ""ОсобыйРегистратор""
	|			ТОГДА ЕСТЬNULL(ДанныеОсобыхРегистраторов.ДокументОснование, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ ПодробныеДанные.ДокументОснование
	|	КОНЕЦ КАК ДокументОснование,
	|	ПодробныеДанные.СуммаОстаток КАК СуммаОстаток,
	|	ПодробныеДанные.СуммаВыплаты КАК СуммаВыплаты,
	|	ПодробныеДанные.НачисленоНалога КАК НачисленоНалога
	|ПОМЕСТИТЬ ВТПодробноБезНулевыхОснований
	|ИЗ
	|	ВТПодробно КАК ПодробныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоФизическомуЛицуОснованию КАК ПоФизическомуЛицуОснованию
	|		ПО ПодробныеДанные.ФизическоеЛицо = ПоФизическомуЛицуОснованию.ФизическоеЛицо
	|			И ПодробныеДанные.ДокументОснование = ПоФизическомуЛицуОснованию.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоФизическомуЛицуНаДатуПолученияДохода КАК НаДатуПолученияДохода
	|		ПО ПодробныеДанные.ФизическоеЛицо = НаДатуПолученияДохода.ФизическоеЛицо
	|			И (НАЧАЛОПЕРИОДА(ПодробныеДанные.МесяцНалоговогоПериода, ДЕНЬ) = НаДатуПолученияДохода.ДатаПолученияДохода)
	|			И ПодробныеДанные.СтавкаНалогообложенияРезидента = НаДатуПолученияДохода.СтавкаНалогообложенияРезидента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОсобыхРегистраторов КАК ДанныеОсобыхРегистраторов
	|		ПО ПодробныеДанные.ФизическоеЛицо = ДанныеОсобыхРегистраторов.ФизическоеЛицо
	|			И ПодробныеДанные.МесяцНалоговогоПериода = ДанныеОсобыхРегистраторов.МесяцНалоговогоПериода
	|			И ПодробныеДанные.СтавкаНалогообложенияРезидента = ДанныеОсобыхРегистраторов.СтавкаНалогообложенияРезидента
	|			И ПодробныеДанные.КатегорияДохода = ДанныеОсобыхРегистраторов.КатегорияДохода
	|			И ПодробныеДанные.КодДохода = ДанныеОсобыхРегистраторов.КодДохода
	|			И ПодробныеДанные.РегистрацияВНалоговомОргане = ДанныеОсобыхРегистраторов.РегистрацияВНалоговомОргане
	|			И ПодробныеДанные.Организация = ДанныеОсобыхРегистраторов.Организация
	|			И ПодробныеДанные.Подразделение = ДанныеОсобыхРегистраторов.Подразделение
	|			И ПодробныеДанные.ВключатьВДекларациюПоНалогуНаПрибыль = ДанныеОсобыхРегистраторов.ВключатьВДекларациюПоНалогуНаПрибыль
	|			И (ПодробныеДанные.ДокументОснование = ""ОсобыйРегистратор"")
	|ГДЕ
	|	ПоФизическомуЛицуОснованию.ДокументОснование ЕСТЬ НЕ NULL 
	|	И НаДатуПолученияДохода.ФизическоеЛицо ЕСТЬ НЕ NULL ";
	Запрос.Выполнить();
	
	ТаблицыКУдалению.Добавить("ВТПоФизическомуЛицуНаДатуПолученияДохода");
	ТаблицыКУдалению.Добавить("ВТДанныеОсобыхРегистраторов");
	ТаблицыКУдалению.Добавить("ВТПодробноБезНулевыхОснований");
	ТаблицыКУдалению.Добавить("ВТВсегоПоФизическомуЛицу");
	
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	ПодробныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПодробныеДанные.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	НАЧАЛОПЕРИОДА(ПодробныеДанные.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	СУММА(ПодробныеДанные.СуммаОстаток) КАК СуммаОстаток
	|ПОМЕСТИТЬ ВТПоФизическомуЛицуЗаМесяц
	|ИЗ
	|	ВТПодробноБезНулевыхОснований КАК ПодробныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодробныеДанные.ФизическоеЛицо,
	|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
	|	НАЧАЛОПЕРИОДА(ПодробныеДанные.МесяцНалоговогоПериода, МЕСЯЦ)";
	Запрос.Выполнить();
	ТаблицыКУдалению.Добавить("ВТПоФизическомуЛицуЗаМесяц");
	
	Если ЗначениеЗаполнено(ПериодРегистрации) Тогда
		
		Запрос.УстановитьПараметр("НачалоГода", НачалоГода(ПериодРегистрации));
		Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодРегистрации));
		Запрос.Текст =  
		"ВЫБРАТЬ
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	ГОД(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода) КАК НалоговыйПериод
		|ПОМЕСТИТЬ ВТПерерасчетыПрошлыхПериодов
		|ИЗ
		|	ВТСуммыНДФЛПоСотрудникам КАК СписокСотрудников
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
		|		ПО СписокСотрудников.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
		|ГДЕ
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор <> &Регистратор
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода < &НачалоГода
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = &Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
		|	ГОД(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода)
		|
		|ИМЕЮЩИЕ
		|	СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма) < 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПодробныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	ГОД(ПодробныеДанные.МесяцНалоговогоПериода) КАК НалоговыйПериод,
		|	СУММА(ПодробныеДанные.СуммаОстаток) КАК СуммаОстаток,
		|	МАКСИМУМ(ПодробныеДанные.МесяцНалоговогоПериода) КАК МесяцНалоговогоПериода
		|ПОМЕСТИТЬ ВТВсегоПоФизическомуЛицуЗаНалоговыйПериод
		|ИЗ
		|	ВТПоФизическомуЛицуЗаМесяц КАК ПодробныеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	ПодробныеДанные.ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
		|	ГОД(ПодробныеДанные.МесяцНалоговогоПериода)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПодробныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	СУММА(ПодробныеДанные.СуммаОстаток) КАК СуммаОстаток,
		|	СУММА(ВЫБОР
		|			КОГДА ПерерасчетыПрошлыхПериодов.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|					И ПодробныеДанные.СуммаОстаток < 0
		|				ТОГДА ПодробныеДанные.СуммаОстаток
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВозвратПрошлыхПериодов
		|ПОМЕСТИТЬ ВТВсегоПоФизическомуЛицу
		|ИЗ
		|	ВТВсегоПоФизическомуЛицуЗаНалоговыйПериод КАК ПодробныеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПерерасчетыПрошлыхПериодов КАК ПерерасчетыПрошлыхПериодов
		|		ПО ПодробныеДанные.ФизическоеЛицо = ПерерасчетыПрошлыхПериодов.ФизическоеЛицо
		|			И ПодробныеДанные.СтавкаНалогообложенияРезидента = ПерерасчетыПрошлыхПериодов.СтавкаНалогообложенияРезидента
		|			И ПодробныеДанные.НалоговыйПериод = ПерерасчетыПрошлыхПериодов.НалоговыйПериод
		|ГДЕ
		|	(ПодробныеДанные.СуммаОстаток > 0
		|			ИЛИ ПерерасчетыПрошлыхПериодов.ФизическоеЛицо ЕСТЬ НЕ NULL )
		|
		|СГРУППИРОВАТЬ ПО
		|	ПодробныеДанные.ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СуммыНДФЛПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	ВсегоПоФизическомуЛицуЗаНалоговыйПериод.НалоговыйПериод КАК НалоговыйПериод,
		|	ВсегоПоФизическомуЛицуЗаНалоговыйПериод.СуммаОстаток КАК ОстатокЗаНалоговыйПериод,
		|	ВсегоПоФизическомуЛицуЗаНалоговыйПериод.МесяцНалоговогоПериода КАК ПоследнийМесяцНалоговогоПериода,
		|	СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	НАЧАЛОПЕРИОДА(СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода, МЕСЯЦ) КАК НачалоМесяцаНалоговогоПериода,
		|	СуммыНДФЛПоСотрудникам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	СуммыНДФЛПоСотрудникам.КатегорияДохода КАК КатегорияДохода,
		|	СуммыНДФЛПоСотрудникам.КодДохода КАК КодДохода,
		|	СуммыНДФЛПоСотрудникам.ДокументОснование КАК ДокументОснование,
		|	СуммыНДФЛПоСотрудникам.СуммаОстаток КАК СуммаОстаток,
		|	СуммыНДФЛПоСотрудникам.НачисленоНалога КАК НачисленоНалога,
		|	СуммыНДФЛПоСотрудникам.Организация КАК Организация,
		|	СуммыНДФЛПоСотрудникам.Подразделение КАК Подразделение,
		|	СуммыНДФЛПоСотрудникам.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
		|	СуммыНДФЛПоСотрудникам.СуммаВыплаты - ВсегоПоФизическомуЛицу.ВозвратПрошлыхПериодов КАК СуммаВыплаты,
		|	ПоФизическомуЛицуЗаМесяц.СуммаОстаток КАК СуммаЗаМесяц
		|ИЗ
		|	ВТПодробноБезНулевыхОснований КАК СуммыНДФЛПоСотрудникам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсегоПоФизическомуЛицуЗаНалоговыйПериод КАК ВсегоПоФизическомуЛицуЗаНалоговыйПериод
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПерерасчетыПрошлыхПериодов КАК ПерерасчетыПрошлыхПериодов
		|			ПО ВсегоПоФизическомуЛицуЗаНалоговыйПериод.ФизическоеЛицо = ПерерасчетыПрошлыхПериодов.ФизическоеЛицо
		|				И ВсегоПоФизическомуЛицуЗаНалоговыйПериод.СтавкаНалогообложенияРезидента = ПерерасчетыПрошлыхПериодов.СтавкаНалогообложенияРезидента
		|				И ВсегоПоФизическомуЛицуЗаНалоговыйПериод.НалоговыйПериод = ПерерасчетыПрошлыхПериодов.НалоговыйПериод
		|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ВсегоПоФизическомуЛицуЗаНалоговыйПериод.ФизическоеЛицо
		|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ВсегоПоФизическомуЛицуЗаНалоговыйПериод.СтавкаНалогообложенияРезидента
		|			И (ГОД(СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода) = ВсегоПоФизическомуЛицуЗаНалоговыйПериод.НалоговыйПериод)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсегоПоФизическомуЛицу КАК ВсегоПоФизическомуЛицу
		|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ВсегоПоФизическомуЛицу.ФизическоеЛицо
		|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ВсегоПоФизическомуЛицу.СтавкаНалогообложенияРезидента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоФизическомуЛицуЗаМесяц КАК ПоФизическомуЛицуЗаМесяц
		|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ПоФизическомуЛицуЗаМесяц.ФизическоеЛицо
		|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ПоФизическомуЛицуЗаМесяц.СтавкаНалогообложенияРезидента
		|			И (НАЧАЛОПЕРИОДА(СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода, МЕСЯЦ) = ПоФизическомуЛицуЗаМесяц.МесяцНалоговогоПериода)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоФизическомуЛицуНаДатуПолученияДохода КАК ПоФизическомуЛицуНаДатуПолученияДохода
		|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ПоФизическомуЛицуНаДатуПолученияДохода.ФизическоеЛицо
		|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ПоФизическомуЛицуНаДатуПолученияДохода.СтавкаНалогообложенияРезидента
		|			И СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода = ПоФизическомуЛицуНаДатуПолученияДохода.ДатаПолученияДохода
		|ГДЕ
		|	ВсегоПоФизическомуЛицу.СуммаОстаток > 0
		|	И ПоФизическомуЛицуНаДатуПолученияДохода.СуммаОстаток <> 0
		|	И (ВсегоПоФизическомуЛицуЗаНалоговыйПериод.СуммаОстаток > 0
		|			ИЛИ ПерерасчетыПрошлыхПериодов.ФизическоеЛицо ЕСТЬ НЕ NULL )
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	СтавкаНалогообложенияРезидента,
		|	НалоговыйПериод,
		|	НачалоМесяцаНалоговогоПериода,
		|	МесяцНалоговогоПериода,
		|	СуммыНДФЛПоСотрудникам.ДатаНачисления,
		|	ДокументОснование,
		|	РегистрацияВНалоговомОргане,
		|	Подразделение,
		|	СуммыНДФЛПоСотрудникам.КатегорияДохода,
		|	ВключатьВДекларациюПоНалогуНаПрибыль";
		
		Выборка = Запрос.ВыполнитьПакет()[3].Выбрать();
		
		ТаблицыКУдалению.Добавить("ВТПерерасчетыПрошлыхПериодов");
		ТаблицыКУдалению.Добавить("ВТВсегоПоФизическомуЛицуЗаНалоговыйПериод");
		
	Иначе
		
		Запрос.Текст =  
		"ВЫБРАТЬ 
		|	ПодробныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	СУММА(ПодробныеДанные.СуммаОстаток) КАК СуммаОстаток,
		|	ГОД(ПодробныеДанные.МесяцНалоговогоПериода) КАК НалоговыйПериод
		|ПОМЕСТИТЬ ВТВсегоПоФизическомуЛицу
		|ИЗ
		|	ВТПодробноБезНулевыхОснований КАК ПодробныеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	ПодробныеДанные.ФизическоеЛицо,
		|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
		|	ГОД(ПодробныеДанные.МесяцНалоговогоПериода)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СуммыНДФЛПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	ВсегоПоФизическомуЛицу.НалоговыйПериод КАК НалоговыйПериод,
		|	ВсегоПоФизическомуЛицу.СуммаОстаток КАК ОстатокЗаНалоговыйПериод,
		|	НАЧАЛОПЕРИОДА(СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода, МЕСЯЦ) КАК НачалоМесяцаНалоговогоПериода,
		|	СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	СуммыНДФЛПоСотрудникам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	СуммыНДФЛПоСотрудникам.КодДохода КАК КодДохода,
		|	СуммыНДФЛПоСотрудникам.КатегорияДохода КАК КатегорияДохода,
		|	СуммыНДФЛПоСотрудникам.ДокументОснование КАК ДокументОснование,
		|	СуммыНДФЛПоСотрудникам.СуммаОстаток КАК СуммаОстаток,
		|	СуммыНДФЛПоСотрудникам.НачисленоНалога КАК НачисленоНалога,
		|	СуммыНДФЛПоСотрудникам.Организация КАК Организация,
		|	СуммыНДФЛПоСотрудникам.Подразделение КАК Подразделение,
		|	СуммыНДФЛПоСотрудникам.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
		|	СуммыНДФЛПоСотрудникам.СуммаВыплаты КАК СуммаВыплаты,
		|	ПоФизическомуЛицуЗаМесяц.СуммаОстаток КАК СуммаЗаМесяц
		|ИЗ
		|	ВТПодробноБезНулевыхОснований КАК СуммыНДФЛПоСотрудникам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсегоПоФизическомуЛицу КАК ВсегоПоФизическомуЛицу
		|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ВсегоПоФизическомуЛицу.ФизическоеЛицо
		|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ВсегоПоФизическомуЛицу.СтавкаНалогообложенияРезидента
		|			И (ГОД(СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода) = ВсегоПоФизическомуЛицу.НалоговыйПериод)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоФизическомуЛицуЗаМесяц КАК ПоФизическомуЛицуЗаМесяц
		|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ПоФизическомуЛицуЗаМесяц.ФизическоеЛицо
		|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ПоФизическомуЛицуЗаМесяц.СтавкаНалогообложенияРезидента
		|			И (НАЧАЛОПЕРИОДА(СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода, МЕСЯЦ) = ПоФизическомуЛицуЗаМесяц.МесяцНалоговогоПериода)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоФизическомуЛицуНаДатуПолученияДохода КАК ПоФизическомуЛицуНаДатуПолученияДохода
		|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ПоФизическомуЛицуНаДатуПолученияДохода.ФизическоеЛицо
		|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ПоФизическомуЛицуНаДатуПолученияДохода.СтавкаНалогообложенияРезидента
		|			И СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода = ПоФизическомуЛицуНаДатуПолученияДохода.ДатаПолученияДохода
		|ГДЕ
		|	ВсегоПоФизическомуЛицу.СуммаОстаток > 0
		|	И ПоФизическомуЛицуНаДатуПолученияДохода.СуммаОстаток <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	СтавкаНалогообложенияРезидента,
		|	НалоговыйПериод,
		|	НачалоМесяцаНалоговогоПериода,
		|	МесяцНалоговогоПериода,
		|	СуммыНДФЛПоСотрудникам.ДатаНачисления,
		|	ДокументОснование,
		|	РегистрацияВНалоговомОргане,
		|	Подразделение,
		|	КатегорияДохода,
		|	ВключатьВДекларациюПоНалогуНаПрибыль";
		
		Выборка = Запрос.ВыполнитьПакет()[1].Выбрать();
		
	КонецЕсли;
	
	Пока Выборка.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл 
		
		СуммаКРаспределению = Выборка.СуммаВыплаты;
		Пока Выборка.СледующийПоЗначениюПоля("СтавкаНалогообложенияРезидента") И СуммаКРаспределению >= 0 Цикл 
			Пока Выборка.СледующийПоЗначениюПоля("НалоговыйПериод") И СуммаКРаспределению >= 0 Цикл 
				Если Выборка.ОстатокЗаНалоговыйПериод >= 0 Тогда
					ОстатокКУдержанию = 0;
					Пока Выборка.СледующийПоЗначениюПоля("НачалоМесяцаНалоговогоПериода") И СуммаКРаспределению > 0 Цикл 
						ОстатокКУдержанию = ОстатокКУдержанию + Выборка.СуммаЗаМесяц;
						Если ОстатокКУдержанию > 0 И Выборка.СуммаЗаМесяц > 0 Тогда
							Пока Выборка.Следующий() И СуммаКРаспределению > 0 И ОстатокКУдержанию > 0 Цикл
								Если Выборка.СуммаОстаток > 0 Тогда
									
									СписываемаяСумма = Мин(Выборка.СуммаОстаток, СуммаКРаспределению, ОстатокКУдержанию);
									СуммаКРаспределению = СуммаКРаспределению - СписываемаяСумма;
									ОстатокКУдержанию = ОстатокКУдержанию - СписываемаяСумма;
									
									СтрокаТаблицыРезультатов = РезультатыРасчетов.Добавить();
									ЗаполнитьЗначенияСвойств(СтрокаТаблицыРезультатов, Выборка);
									СтрокаТаблицыРезультатов.Сумма = СписываемаяСумма;			
									
								КонецЕсли;
							КонецЦикла;			
						КонецЕсли;
					КонецЦикла;			
				Иначе
					СуммаКРаспределению = СуммаКРаспределению - Выборка.ОстатокЗаНалоговыйПериод;
					СтрокаТаблицыРезультатов = РезультатыРасчетов.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицыРезультатов, Выборка);
					СтрокаТаблицыРезультатов.Сумма = Выборка.ОстатокЗаНалоговыйПериод;			
					СтрокаТаблицыРезультатов.МесяцНалоговогоПериода = Выборка.ПоследнийМесяцНалоговогоПериода;			
				КонецЕсли;
			КонецЦикла;	
		КонецЦикла;	
		
	КонецЦикла;	
	
	ЗарплатаКадры.УничтожитьВТ(МенеджерТаблиц, ТаблицыКУдалению);
	
	Возврат РезультатыРасчетов;
	
КонецФункции

#КонецОбласти

// Вызовы экспортных методов

Процедура ВписатьВРезультатЗачтенныеАвансы(Регистратор, Организация, МесяцРасчета, РезультатыРасчетов, СтавкаНалога, ИмяКолонкиНалогаИсчисленного, ИмяКолонкиАвансаЗачтенного, ИсключатьДвиженияРегистратора = Истина, МенеджерВременныхТаблиц = Неопределено) 
	
	УчетНДФЛ.ВписатьВРезультатЗачтенныеАвансы(Регистратор, Организация, МесяцРасчета, РезультатыРасчетов, СтавкаНалога, ИмяКолонкиНалогаИсчисленного, ИмяКолонкиАвансаЗачтенного, ИсключатьДвиженияРегистратора, МенеджерВременныхТаблиц) 

КонецПроцедуры 

Процедура ВписатьТекстПолученияЗначенияСтавкиНДФЛЧислом(ТекстЗапроса, Знач ПодстрокаПоиска, Знач СинонимТаблицы, Знач ИмяПоляСтавки)
	
	УчетНДФЛ.ВписатьТекстПолученияЗначенияСтавкиНДФЛЧислом(ТекстЗапроса, ПодстрокаПоиска, СинонимТаблицы, ИмяПоляСтавки)	
	
КонецПроцедуры

Процедура СоздатьВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП(Организация, МенеджерВременныхТаблиц)

	УчетНДФЛ.СоздатьВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП(Организация, МенеджерВременныхТаблиц)
	
КонецПроцедуры 

Процедура СоздатьВТСтавкиНалогаЧислом(МенеджерВременныхТаблиц) 
	
	УчетНДФЛ.СоздатьВТСтавкиНалогаЧислом(МенеджерВременныхТаблиц)

КонецПроцедуры

Процедура СформироватьВТФизическиеЛицаСУчетомПереездаВИнойНО(КППОтправки, МенеджерВременныхТаблиц, ИмяТаблицыПодразделений, ПолеДаты)  
	
	УчетНДФЛ.СформироватьВТФизическиеЛицаСУчетомПереездаВИнойНО(КППОтправки, МенеджерВременныхТаблиц, ИмяТаблицыПодразделений, ПолеДаты)
	
КонецПроцедуры

Функция РассчитываемыеРесурсыВычетовНаДетей() 

	Возврат УчетНДФЛ.РассчитываемыеРесурсыВычетовНаДетей()

КонецФункции 

Функция РассчитываемыеРесурсыИмущественныхВычетов() 

	Возврат УчетНДФЛ.РассчитываемыеРесурсыИмущественныхВычетов()

КонецФункции 

Функция РассчитываемыеРесурсыПоОсновнойСтавке()

	Возврат УчетНДФЛ.РассчитываемыеРесурсыПоОсновнойСтавке()

КонецФункции 

Функция ТаблицаНДФЛ()
	
	Возврат УчетНДФЛ.ТаблицаНДФЛ();
	
КонецФункции

// Копии неэкспортных методов

Процедура ВписатьВРезультатЗарегистрированныеВУчетеДанные(РезультатыРасчетов, ЗарегистрированныеВУчетеДанные, ИменаКолонок)
	
	Для каждого СтрокаТЗ Из ЗарегистрированныеВУчетеДанные Цикл
		ЗаполнитьЗначенияСвойств(РезультатыРасчетов.Добавить(), СтрокаТЗ, "ФизическоеЛицо, МесяцНалоговогоПериода, Подразделение," + ИменаКолонок);
	КонецЦикла;
	
КонецПроцедуры

Процедура ВписатьРесурсВРезультатыРасчетовБО(РезультатыРасчетов, МесяцНалоговогоПериода, Сумма, ИмяРесурса, СтруктураКлючей, СтрокиРаспределения, КоэффициентыРаспределения, ТочностьВеличины = 2, ПоляЗаполнения = "Подразделение")
	
	Если Сумма = 0 Тогда
		Возврат
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(КоэффициентыРаспределения) Тогда
		НоваяСтрока = РезультатыРасчетов.Добавить();
		НоваяСтрока[ИмяРесурса] = Сумма; 
		НоваяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериода; 
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураКлючей, "ФизическоеЛицо");
	ИначеЕсли КоэффициентыРаспределения.Количество() = 1 Тогда
		НоваяСтрока = РезультатыРасчетов.Добавить();
		НоваяСтрока[ИмяРесурса] = Сумма; 
		НоваяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериода; 
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокиРаспределения[0], "ФизическоеЛицо, " + ПоляЗаполнения);
	Иначе
		РаспределениеРесурса = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(Сумма, КоэффициентыРаспределения, ТочностьВеличины);
		Если РаспределениеРесурса = Неопределено Тогда
			НоваяСтрока = РезультатыРасчетов.Добавить();
			НоваяСтрока[ИмяРесурса] = Сумма; 
			НоваяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериода; 
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураКлючей, "ФизическоеЛицо");
		Иначе
			Индекс = 0;
			Для каждого СтрокаТЗ Из СтрокиРаспределения Цикл
				НоваяСтрока = РезультатыРасчетов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ, "ФизическоеЛицо, " + ПоляЗаполнения);
				НоваяСтрока[ИмяРесурса] = РаспределениеРесурса[Индекс];
				НоваяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериода; 
				Индекс = Индекс + 1;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПереписатьМежрасчетныйНДФЛФизическогоЛицаВРезультатБО(РезультатыРасчетов, МежрасчетныйНДФЛ, ДатаУдержанияИсчисленногоНалога, МесяцРасчета, Знач ВсегоДоходов = 0) 
	
	Если МежрасчетныйНДФЛ.Итог("НалогПоСтавке13") >= 0 Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(МежрасчетныйНДФЛ, РезультатыРасчетов);
	Иначе
		
		ТекущийПериод = НачалоМесяца(?(ЗначениеЗаполнено(ДатаУдержанияИсчисленногоНалога), ДатаУдержанияИсчисленногоНалога, МесяцРасчета));
		СтруктураПоискаТекущегоНДФЛ = Новый Структура("МесяцНалоговогоПериодаДляПоиска", ТекущийПериод);
		
		Если МежрасчетныйНДФЛ.Колонки.Найти("МесяцНалоговогоПериодаДляПоиска") = Неопределено Тогда
			МежрасчетныйНДФЛ.Колонки.Добавить("МесяцНалоговогоПериодаДляПоиска", Новый ОписаниеТипов("Дата"));
		КонецЕсли;
		Для каждого СтрокаДанных Из МежрасчетныйНДФЛ Цикл
			Если ЗначениеЗаполнено(СтрокаДанных.МесяцНалоговогоПериода) Тогда
				СтрокаДанных.МесяцНалоговогоПериодаДляПоиска = НачалоМесяца(СтрокаДанных.МесяцНалоговогоПериода)
			КонецЕсли;
		КонецЦикла;
		
		НДФЛТекущегоПериода = МежрасчетныйНДФЛ.Скопировать(СтруктураПоискаТекущегоНДФЛ);
		НДФЛТекущегоПериодаВсего = НДФЛТекущегоПериода.Итог("НалогПоСтавке13");
		Если НДФЛТекущегоПериодаВсего < 0 Тогда // произошел перерасчет обязательств текущего периода из-за изменения данных "задним" числом
			
			Если ВсегоДоходов <= 0 Тогда // оказалось, что располагаемых доходов нет
				Возврат
			КонецЕсли;
			
			НДФЛТекущегоПериода.Сортировать("МесяцНалоговогоПериода");
			МассивРесурсов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(РассчитываемыеРесурсыПоОсновнойСтавке());
			Для каждого СтрокаДанных Из НДФЛТекущегоПериода Цикл
				ЕстьДанныеВСтроке = Ложь;
				Для каждого ИмяРесурса Из МассивРесурсов Цикл
					Если ИмяРесурса = "НалогПоСтавке13" Тогда
						СтрокаДанных[ИмяРесурса] = 0
					ИначеЕсли ВсегоДоходов > 0 Тогда
						Учтено = Мин(СтрокаДанных[ИмяРесурса], ВсегоДоходов);
						СтрокаДанных[ИмяРесурса] = Учтено;
						ВсегоДоходов = ВсегоДоходов - Учтено;
					Иначе
						СтрокаДанных[ИмяРесурса] = 0
					КонецЕсли;
					Если Не ЕстьДанныеВСтроке Тогда
						ЕстьДанныеВСтроке = СтрокаДанных[ИмяРесурса] <> 0;
					КонецЕсли;
				КонецЦикла;
				Если ЕстьДанныеВСтроке Тогда
					ЗаполнитьЗначенияСвойств(РезультатыРасчетов.Добавить(),СтрокаДанных);
				КонецЕсли;
				Если ВсегоДоходов = 0 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла; 
			
		Иначе
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(НДФЛТекущегоПериода, РезультатыРасчетов);
			МежрасчетныйНДФЛ.Сортировать("МесяцНалоговогоПериода Убыв");
			// Налоги предыдущих периодов добавляем в пределах положительного налога текущего периода,
			// не допуская возврата налога.
			Для каждого СтрокаДанных Из МежрасчетныйНДФЛ Цикл
				Если СтрокаДанных.МесяцНалоговогоПериодаДляПоиска = ТекущийПериод Тогда
					Продолжить;
				КонецЕсли;
				Если НДФЛТекущегоПериодаВсего + СтрокаДанных.НалогПоСтавке13 >= 0 Тогда
					ЗаполнитьЗначенияСвойств(РезультатыРасчетов.Добавить(), СтрокаДанных);
					НДФЛТекущегоПериодаВсего = НДФЛТекущегоПериодаВсего + СтрокаДанных.НалогПоСтавке13;
				ИначеЕсли НДФЛТекущегоПериодаВсего > 0 Тогда
					НоваяСтрока = РезультатыРасчетов.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
					НоваяСтрока.НалогПоСтавке13 = - НДФЛТекущегоПериодаВсего;
					НДФЛТекущегоПериодаВсего = 0
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыделитьРаспределениеДоходов(РаспределениеДоходовПоПодразделениям, СтруктураПоискаПоДатам, Доходы, КоэффициентыПодразделений, ДоходыМесяцаРасчета, КоэффициентыПодразделенийМесяцаРасчета)
	
	Доходы = РаспределениеДоходовПоПодразделениям.НайтиСтроки(СтруктураПоискаПоДатам);
	БазаРаспределения = 0;
	Для каждого СтрокаРаспределения Из Доходы Цикл
		БазаРаспределения = БазаРаспределения + СтрокаРаспределения.СуммаДохода;
	КонецЦикла; 
	Если БазаРаспределения = 0 Тогда
		// если доходов за прошлый месяц нет - будем использовать текущее распределение
		Доходы = ДоходыМесяцаРасчета;
		КоэффициентыПодразделений = КоэффициентыПодразделенийМесяцаРасчета;
	Иначе
		КоэффициентыПодразделений = ОбщегоНазначения.ВыгрузитьКолонку(Доходы, "СуммаДохода");
	КонецЕсли;
	
КонецПроцедуры

Функция ЕстьДанныеВСтроке(СтрокаКоллекции, ИменаРесурсов)
	Для каждого ИмяРесурса Из ИменаРесурсов Цикл
		Если ЗначениеЗаполнено(СтрокаКоллекции[ИмяРесурса]) Тогда
			Возврат Истина	
		КонецЕсли;
	КонецЦикла;
	Возврат Ложь	
КонецФункции

Функция ЕстьДанныеВТаблицеФизическогоЛица(ТаблицаДанных, ИменаРесурсов)
	
	КоличествоСтрок = ТаблицаДанных.Количество();
	Если КоличествоСтрок = 0 Тогда
		Возврат Ложь                            
	ИначеЕсли КоличествоСтрок = 1 Тогда
		Возврат ЕстьДанныеВСтроке(ТаблицаДанных[0], ИменаРесурсов) 	
	КонецЕсли;
	
	Для каждого ИмяРесурса Из ИменаРесурсов Цикл
		Если ЗначениеЗаполнено(ТаблицаДанных.Итог(ИмяРесурса)) Тогда
			Возврат Истина	
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаИзмерений = ТаблицаДанных.Скопировать(,"Подразделение, КатегорияДохода");
	ТаблицаИзмерений.Свернуть("Подразделение, КатегорияДохода",);
	
	Возврат ТаблицаИзмерений.Количество() > 1   

КонецФункции

Функция УдалитьПоляРасшифровкиИзЗапроса(Знач ТекстЗапроса, МассивПолей, ИмяТаблицы = "СведенияОДоходах")
	
	Для каждого ПолеРасшифровки Из МассивПолей Цикл
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,ИмяТаблицы + "." + ПолеРасшифровки,"Неопределено");
	КонецЦикла;
	
	Возврат ТекстЗапроса
	
КонецФункции	


// Предназначена для дополнения рассчитанных сумм НДФЛ информацией о суммах подлежащих зачету авансовых платежей.
// Имеет дополнительный эффект: если в параметр ИсчисленоНДФЛЗаГод передано Неопределено, а итог по колонкам 
// НалогПоСтавке13, НалогСПревышенияПоСтавке13 в таблице СтрокиНДФЛЗаГод нулевой - эта таблица очищается. 
//
// Параметры:
//      СтрокиНДФЛЗаГод - Массив, ТаблицаЗначений - массив содержит строки таблицы значений, в обоих случаях обязательны
//                                                  колонки НалогПоСтавке13, НалогСПревышенияПоСтавке13 и ЗачтеноАвансовыхПлатежейПоСтавке13, ЗачтеноАвансовыхПлатежейСПревышенияПоСтавке13
//		ОстаткиПоАвансовымПлатежам - ТаблицаЗначений -
//		ИсчисленоНДФЛЗаГод - Число, Неопределено - если передано Неопределено, вычисляется как итог по колонке НалогПоСтавке13 таблицы значений СтрокиНДФЛЗаГод
//      ТекущееФизическоеЛицо - СправочникСсылка.ФизическиеЛица - 
//      ТекущийНалоговыйПериод - Дата -
//
Процедура ВписатьАвансовыеПлатежиВРезультатРасчета(СтрокиНДФЛЗаГод, ОстаткиПоАвансовымПлатежам, ИсчисленоНДФЛЗаГод, ТекущееФизическоеЛицо, ТекущийНалоговыйПериод)
	
	Если ИсчисленоНДФЛЗаГод = Неопределено Тогда  // вызов из расчета нерезидента, СтрокиНДФЛЗаГод являются таблицей значений
		ИсчисленоНДФЛЗаГод = СтрокиНДФЛЗаГод.Итог("НалогПоСтавке13") + СтрокиНДФЛЗаГод.Итог("НалогСПревышенияПоСтавке13");
		Если ИсчисленоНДФЛЗаГод = 0 Тогда
			СтрокиНДФЛЗаГод.Очистить();
			Возврат;
		Иначе
			СтрокиНДФЛЗаГод.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода, МесяцПериодаПредоставленияВычета, Подразделение, КатегорияДохода", "НалогПоСтавке13, НалогСПревышенияПоСтавке13, КоличествоВычетов, ЗачтеноАвансовыхПлатежейПоСтавке13, ЗачтеноАвансовыхПлатежейСПревышенияПоСтавке13");
		КонецЕсли;
	ИначеЕсли ИсчисленоНДФЛЗаГод = 0 Тогда
		Возврат;
	КонецЕсли;
		
	НайденныеСтрокиАвансовыхПлатежей = ОстаткиПоАвансовымПлатежам.НайтиСтроки(Новый Структура("ФизическоеЛицо, НалоговыйПериод", ТекущееФизическоеЛицо, Год(ТекущийНалоговыйПериод)));
	Если НайденныеСтрокиАвансовыхПлатежей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	ОстатокАвансовыхПлатежей = НайденныеСтрокиАвансовыхПлатежей[0].Остаток;
	
	СуммаКЗачету = Мин(ИсчисленоНДФЛЗаГод, ОстатокАвансовыхПлатежей);
	Для Каждого СтрокаНДФЛ Из СтрокиНДФЛЗаГод Цикл
		Если (СтрокаНДФЛ.НалогПоСтавке13 + СтрокаНДФЛ.НалогСПревышенияПоСтавке13) * СуммаКЗачету > 0 Тогда
			Если СтрокаНДФЛ.НалогПоСтавке13 + СтрокаНДФЛ.НалогСПревышенияПоСтавке13 > 0 Тогда
				КЗачетуПоСтроке = Мин(СтрокаНДФЛ.НалогПоСтавке13 + СтрокаНДФЛ.НалогСПревышенияПоСтавке13, СуммаКЗачету);
				СтрокаНДФЛ.ЗачтеноАвансовыхПлатежейПоСтавке13 = Мин(СтрокаНДФЛ.НалогПоСтавке13, КЗачетуПоСтроке);
			Иначе
				КЗачетуПоСтроке = Макс(СтрокаНДФЛ.НалогПоСтавке13 + СтрокаНДФЛ.НалогСПревышенияПоСтавке13, СуммаКЗачету);
				СтрокаНДФЛ.ЗачтеноАвансовыхПлатежейПоСтавке13 = Макс(СтрокаНДФЛ.НалогПоСтавке13, КЗачетуПоСтроке);
			КонецЕсли;
			СтрокаНДФЛ.ЗачтеноАвансовыхПлатежейСПревышенияПоСтавке13 = КЗачетуПоСтроке - СтрокаНДФЛ.ЗачтеноАвансовыхПлатежейПоСтавке13;
			СуммаКЗачету = СуммаКЗачету - КЗачетуПоСтроке;
			Если СуммаКЗачету = 0 Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры	

Процедура ВписатьПредоставленныеРанееВычетыВДанныеУчета(ДанныеУчета, ПредоставленныеРанееВычеты)
	Для Каждого СтрокаВычета Из ПредоставленныеРанееВычеты Цикл
		Если СтрокаВычета.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		СтрокаУчета = ДанныеУчета.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаУчета, СтрокаВычета);
		СтрокаУчета.РазмерВычета = - СтрокаВычета.Сумма;
	КонецЦикла;	
КонецПроцедуры

// Аналог метод распределения пропорционально коэффициентам ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(), 
//	оптимальным образом использующий свойства таблицы значений.
Процедура ВписатьРесурсВРезультатыРасчетов(РезультатыРасчетов, ПараметрыЗаполненияРесурса, МесяцНалоговогоПериода, РаспределяемаяСумма, СтруктураКлючей, ТаблицаРаспределения, СтруктураДополнительныхПолей = Неопределено)
	
	МаксимальныйКоэффициент = 0;
	РаспределеннаяСумма = 0;
	СуммаКоэффициентов  = ТаблицаРаспределения.Итог(ПараметрыЗаполненияРесурса.ИмяПоляКоэффициент);
	
	КоличествоСтрокВТаблицеРезультат = РезультатыРасчетов.Количество();
	Если РаспределяемаяСумма <> 0 Тогда
		Если ТаблицаРаспределения.Количество() = 0 Или СуммаКоэффициентов = 0 Тогда
			НоваяСтрока = РезультатыРасчетов.Добавить();
			НоваяСтрока[ПараметрыЗаполненияРесурса.ИмяРесурса] = РаспределяемаяСумма; 
			НоваяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериода; 
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураКлючей, "ФизическоеЛицо");
			Если СтруктураДополнительныхПолей <> Неопределено Тогда
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДополнительныхПолей, ПараметрыЗаполненияРесурса.ДополнительныеПоляЗаполнения);
			КонецЕсли;	
		ИначеЕсли ТаблицаРаспределения.Количество() = 1 Тогда
			НоваяСтрока = РезультатыРасчетов.Добавить();
			НоваяСтрока[ПараметрыЗаполненияРесурса.ИмяРесурса] = РаспределяемаяСумма; 
			НоваяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериода; 
			Если СтруктураДополнительныхПолей <> Неопределено Тогда
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДополнительныхПолей, ПараметрыЗаполненияРесурса.ДополнительныеПоляЗаполнения);
			КонецЕсли;	
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТаблицаРаспределения[0], "ФизическоеЛицо, " + ПараметрыЗаполненияРесурса.ПоляЗаполнения);	
		Иначе
			Индекс = 0;
			Для Каждого СтрокаТЗ Из ТаблицаРаспределения Цикл
				АбсолютноеЗначениеКоэффициента = Макс(СтрокаТЗ.СуммаДохода, -СтрокаТЗ.СуммаДохода);
				Если МаксимальныйКоэффициент < АбсолютноеЗначениеКоэффициента Тогда
					МаксимальныйКоэффициент = АбсолютноеЗначениеКоэффициента;
					ИндексМаксимальногоКоэффициента = КоличествоСтрокВТаблицеРезультат + ТаблицаРаспределения.Индекс(СтрокаТЗ);
				КонецЕсли;
				
				НоваяСтрока = РезультатыРасчетов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ, "ФизическоеЛицо, " + ПараметрыЗаполненияРесурса.ПоляЗаполнения);
				НоваяСтрока.МесяцНалоговогоПериода = МесяцНалоговогоПериода; 
				
				НоваяСтрока[ПараметрыЗаполненияРесурса.ИмяРесурса] = Окр(РаспределяемаяСумма * СтрокаТЗ[ПараметрыЗаполненияРесурса.ИмяПоляКоэффициент] / СуммаКоэффициентов, ПараметрыЗаполненияРесурса.ТочностьВеличины, 1);
				Если СтруктураДополнительныхПолей <> Неопределено Тогда
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДополнительныхПолей, ПараметрыЗаполненияРесурса.ДополнительныеПоляЗаполнения);
				КонецЕсли;	
	
				РаспределеннаяСумма = РаспределеннаяСумма + НоваяСтрока[ПараметрыЗаполненияРесурса.ИмяРесурса];
			КонецЦикла;
			
			Если Не РаспределеннаяСумма = РаспределяемаяСумма Тогда
				РезультатыРасчетов[ИндексМаксимальногоКоэффициента][ПараметрыЗаполненияРесурса.ИмяРесурса] = РезультатыРасчетов[ИндексМаксимальногоКоэффициента][ПараметрыЗаполненияРесурса.ИмяРесурса] + РаспределяемаяСумма - РаспределеннаяСумма;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ВписатьУчтенныеОснованияВРезультатРасчета(РезультатРасчета, НеучтенныеРанееОснования, СтруктураПоискаПоФизическомуЛицу, ИсключаемыйРегистратор)
	
	КоличествоСтрок = РезультатРасчета.Количество();
	Если КоличествоСтрок > 0 И РезультатРасчета[КоличествоСтрок - 1].ФизическоеЛицо = СтруктураПоискаПоФизическомуЛицу.ФизическоеЛицо Тогда
		УчтенныеОснования = Новый Массив();
		СтрокиОснований = НеучтенныеРанееОснования.НайтиСтроки(СтруктураПоискаПоФизическомуЛицу);
		Для каждого СтрокаОснований Из СтрокиОснований Цикл
			Если СтрокаОснований.ДокументОснование = ИсключаемыйРегистратор Или Не ЗначениеЗаполнено(СтрокаОснований.ДокументОснование) Тогда
				Продолжить;
			КонецЕсли;
			УчтенныеОснования.Добавить(СтрокаОснований.ДокументОснование)
		КонецЦикла; 
		РезультатРасчета[КоличествоСтрок - 1].УчтенныеОснования = УчтенныеОснования;
	КонецЕсли;
	
КонецПроцедуры

// Вписывает переданную сумму вычета в соответствие ОстаткиВычетов.Остатки, добавляя к существующему значению или
// создавая новое описание вычета.
//	В таблицу ОстаткиВычетов.ТаблицаВычетов добавляется строка, описывающая свойства текущего вычета (если ранее такого вычета не было).
//
// Параметры:
//  ОстаткиВычетов - структура - с полями ОписаниеВычетов, Остатки и ТаблицаВычетов.
//  КодВычета - СправочникСсылка.ВидыВычетовНДФЛ -
//  СуммаВычета - Число - 
//  РассчитыватьНарастающимИтогом - булево - 
//
Процедура ДобавитьОстатокВычетов(ОстаткиВычетов, КодВычета, СуммаВычета, РассчитыватьНарастающимИтогом = Истина)
	
	ОписаниеВычета = ОстаткиВычетов.ОписаниеВычетов[КодВычета];
	Если ОписаниеВычета = Неопределено Тогда
		Возврат
	КонецЕсли;	
	
	ТекущееЗначение = ОстаткиВычетов.Остатки[КодВычета];
	Если ТекущееЗначение = Неопределено Тогда
		ОстаткиВычетов.Остатки.Вставить(КодВычета, СуммаВычета);
		
		СтрокаТаблицыВычетов = ОстаткиВычетов.ТаблицаВычетов.Добавить();
		СтрокаТаблицыВычетов.КодВычета = КодВычета;
		ЗаполнитьЗначенияСвойств(СтрокаТаблицыВычетов, ОписаниеВычета);
	Иначе
		Если РассчитыватьНарастающимИтогом Тогда
			ОстаткиВычетов.Остатки.Вставить(КодВычета, ТекущееЗначение + СуммаВычета);
		Иначе
			ОстаткиВычетов.Остатки.Вставить(КодВычета, СуммаВычета);
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры	

// Дополняет данные о ставке налогообложения, используемой для резидентов РФ, 
// сведениями о реальной ставке обложения с учетом налогового статуса физического лица и другие параметры.
// В переданную таблицу значений ДанныеУчета добавляются колонки:
//		Статус, тип СправочникСсылка.СтатусыНалогоплательщиковПоНДФЛ
//		СтавкаНДФЛ, тип ПеречислениеСсылка.НДФЛСтавки
//		СтавкаЧислом, тип Число, например, 0.13
//      ИсчислятьНалогНарастающимИтогом, тип Булево
//      УчитыватьВсеВычетыКДоходамОтИсточникаРФ, тип Булево
//      УчитыватьВычетыКДоходамОтИсточникаВнеРФ, тип Булево
//      РезидентРФвНалоговомПериоде, тип Булево.
//
// Параметры:
//	ДанныеУчета - ТаблицаЗначений - таблица с колонками (допустимы и другие колонки):
//		ФизическоеЛицо
//		ДатаПолученияДохода, дата на которую будет определен статус налогоплательщика
//    	КатегорияДохода, тип ПеречислениеСсылка.КатегорииДоходовНДФЛ: должно быть непустым
//		СтавкаНалогообложенияРезидента, тип ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента.
//	ПорядокУчетаСтатусаНаКонецГода - строка - необязательный, описание того, как следует учитывать изменение 
//		статуса на конец налогового (отчетного) периода, возможные значения:
//			"НеУчитыватьИзмененияСтатуса" (значение по умолчанию)
//			"УчитыватьИзмененияСтатусаДляРасчета"
//			"УчитыватьИзмененияСтатусаДляОтчетности".
//	ОкончаниеОтчетногоПериода - Дата - необязательный, значение будет учитываться при определении периода, на который будет определен статус налогоплательщика, если необходимо учитывать изменение статуса.
//	СтатусыФизическихЛиц - ТаблицаЗначений - необязательный, имеет тот же состав колонок, что и регистр СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный; 
//												если не задан, данные будут считаны из ИБ.
//	ПервыйМесяцНалоговогоПериода - Дата - 
//	ПоследнийМесяцНалоговогоПериода - Дата - 
//
Процедура ДополнитьДанныеУчетаСтавками(ДанныеУчета, ПорядокУчетаСтатусаНаКонецГода = "НеУчитыватьИзмененияСтатуса", ОкончаниеОтчетногоПериода = '00010101', СтатусыФизическихЛиц = Неопределено, Знач ПервыйМесяцНалоговогоПериода = '00010101', Знач ПоследнийМесяцНалоговогоПериода = '00010101') 
	
	Если ТипЗнч(ДанныеУчета) <> Тип("ТаблицаЗначений") Тогда
		Возврат;	
	КонецЕсли;
		
	ДанныеУчета.Колонки.Добавить("СтавкаЧислом", Новый ОписаниеТипов("Число"));
	ДанныеУчета.Колонки.Добавить("СтавкаНДФЛ", Новый ОписаниеТипов("ПеречислениеСсылка.НДФЛСтавки"));
	ДанныеУчета.Колонки.Добавить("Статус", Новый ОписаниеТипов("СправочникСсылка.СтатусыНалогоплательщиковПоНДФЛ"));
	ДанныеУчета.Колонки.Добавить("ИсчислятьНалогНарастающимИтогом", Новый ОписаниеТипов("Булево"));
	ДанныеУчета.Колонки.Добавить("УчитыватьВсеВычетыКДоходамОтИсточникаРФ", Новый ОписаниеТипов("Булево"));
	ДанныеУчета.Колонки.Добавить("УчитыватьВычетыКДоходамОтИсточникаВнеРФ", Новый ОписаниеТипов("Булево"));
	ДанныеУчета.Колонки.Добавить("РезидентРФвНалоговомПериоде", Новый ОписаниеТипов("Булево"));

	Если ДанныеУчета.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	ПроверятьКодДохода = ДанныеУчета.Колонки.Найти("КодДохода") <> Неопределено;
	Доход3010 = УчетНДФЛПовтИсп.Доход3010();
	
	Если СтатусыФизическихЛиц = Неопределено Тогда
		Если Не ЗначениеЗаполнено(ПервыйМесяцНалоговогоПериода) Или Не ЗначениеЗаполнено(ПоследнийМесяцНалоговогоПериода) Тогда
			ДанныеУчета.Сортировать("ДатаПолученияДохода");
			ПервыйМесяцНалоговогоПериода = НачалоМесяца(ДанныеУчета[0].ДатаПолученияДохода);
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ДанныеУчета[ДанныеУчета.Количество() - 1].ДатаПолученияДохода);
		КонецЕсли;
		СтатусыФизическихЛиц = СтатусыФизическихЛиц(ДанныеУчета.ВыгрузитьКолонку("ФизическоеЛицо"), ПервыйМесяцНалоговогоПериода, ПоследнийМесяцНалоговогоПериода);		
	КонецЕсли;
	
	// Т.к. ставка налогообложения, необходимость учитывать доход нарастающим итогом и необходимость учитывать вычет к
	// доходу (если он есть), зависит от небольшого количества параметров (статус налогоплательщика, категория дохода,
	// налоговый период, к которому относится дата дохода и т.д), различных комбинаций значений, которых на практике при
	// расчете встречается не так уже и много, будем использовать готовую таблицу соответствий.
	ТаблицаОписаний = УчетНДФЛПовтИсп.ТаблицаОписанийДоходов();
	СтруктураПоиска = Новый Структура("ФизическоеЛицо");
	СтруктураПоискаСтавок = Новый Структура("СтатусФизическогоЛица, КатегорияДохода, СтавкаНалогообложенияРезидента, РасчетПоПрогрессивнойШкале");
	ПервыйМесяцРасчетаНДФЛПоПрогрессивнойШкале = УчетНДФЛ.ПараметрыРасчетаНДФЛПоПрогрессивнойШкале().НачалоРасчетаНДФЛПоПрогрессивнойШкале;
	
	ТекущееФизическоеЛицо = Неопределено;	
	Для Каждого СтрокаДанныхУчета Из ДанныеУчета Цикл
		Если СтрокаДанныхУчета.ФизическоеЛицо <> ТекущееФизическоеЛицо Тогда
			ТекущееФизическоеЛицо = СтрокаДанныхУчета.ФизическоеЛицо;
			СтруктураПоиска.ФизическоеЛицо = ТекущееФизическоеЛицо;
			СтрокиТаблицыСтатусов = СтатусыФизическихЛиц.НайтиСтроки(СтруктураПоиска);
			
			ИнформацияОСтатусеНалогоплательщика = ИнформацияОСтатусеНалогоплательщика(СтрокаДанныхУчета.ДатаПолученияДохода, СтрокиТаблицыСтатусов, ПорядокУчетаСтатусаНаКонецГода, ОкончаниеОтчетногоПериода);
		КонецЕсли;	
		
		// Проверим, актуальна ли на текущую дату полученная ранее информация о статусе налогоплательщика
		Если Не (СтрокаДанныхУчета.ДатаПолученияДохода >= ИнформацияОСтатусеНалогоплательщика.ДатаНачала И СтрокаДанныхУчета.ДатаПолученияДохода <= ИнформацияОСтатусеНалогоплательщика.ДатаОкончания) Тогда
			ИнформацияОСтатусеНалогоплательщика = ИнформацияОСтатусеНалогоплательщика(СтрокаДанныхУчета.ДатаПолученияДохода, СтрокиТаблицыСтатусов, ПорядокУчетаСтатусаНаКонецГода, ОкончаниеОтчетногоПериода);
		КонецЕсли;	
		
		ЗаполнитьЗначенияСвойств(СтруктураПоискаСтавок, СтрокаДанныхУчета, "СтавкаНалогообложенияРезидента, КатегорияДохода");
		СтруктураПоискаСтавок.СтатусФизическогоЛица = ИнформацияОСтатусеНалогоплательщика.СтатусДляОпределенияСтавки;
		СтруктураПоискаСтавок.РасчетПоПрогрессивнойШкале = СтрокаДанныхУчета.ДатаПолученияДохода >= ПервыйМесяцРасчетаНДФЛПоПрогрессивнойШкале;
		СтрокаДанныхУчета.Статус = ИнформацияОСтатусеНалогоплательщика.СтатусДляОпределенияСтавки;
		СтрокаДанныхУчета.РезидентРФвНалоговомПериоде = ?(ПорядокУчетаСтатусаНаКонецГода = "УчитыватьИзмененияСтатусаДляРасчета", ИнформацияОСтатусеНалогоплательщика.РезидентРФНаКонецГода Или ИнформацияОСтатусеНалогоплательщика.РезидентРФНаКонецМесяца, ИнформацияОСтатусеНалогоплательщика.РезидентРФНаКонецГода);
		
		СтрокиОписания = ТаблицаОписаний.НайтиСтроки(СтруктураПоискаСтавок); 
		
		Если СтрокиОписания.Количество() > 0 Тогда
			
			Описание = СтрокиОписания[0];
			ЗаполнитьЗначенияСвойств(СтрокаДанныхУчета, Описание, "ИсчислятьНалогНарастающимИтогом, УчитыватьВсеВычетыКДоходамОтИсточникаРФ,УчитыватьВычетыКДоходамОтИсточникаВнеРФ");
			
			ПостфиксНалоговогоПериода = ?(СтрокаДанныхУчета.ДатаПолученияДохода < '20150101', "2014", ?(СтрокаДанныхУчета.ДатаПолученияДохода < '20180101', "2015", "2018"));
			СтрокаДанныхУчета.СтавкаЧислом = Описание["СтавкаЧислом" + ПостфиксНалоговогоПериода];
			СтрокаДанныхУчета.СтавкаНДФЛ = Описание["СтавкаНДФЛ" + ПостфиксНалоговогоПериода];

			Если ПроверятьКодДохода И СтрокаДанныхУчета.КодДохода = Доход3010 Тогда
				СтрокаДанныхУчета.ИсчислятьНалогНарастающимИтогом = Ложь
			ИначеЕсли СтрокаДанныхУчета.ИсчислятьНалогНарастающимИтогом И СтрокаДанныхУчета.СтавкаНДФЛ <> Перечисления.НДФЛСтавки.Ставка13 Тогда 	
				СтрокаДанныхУчета.ИсчислятьНалогНарастающимИтогом = Ложь
			КонецЕсли;
			
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры

// Вставляет в таблицу доходов перед текущей строкой нулевые строки за пропущенные после предыдущей строки месяцы.
Процедура ДополнитьСтрокамиМесяцевБезДоходов(ДанныеУчетаДоходов, СтрокиПоФизическомуЛицу, ПервыеСтрокиМесяцев, ФизическоеЛицо, МесяцС, МесяцПо, ИндексТекущейСтроки, ОблагаемыйДоходНарастающимИтогомЗаГод = 0)
	ТекущийМесяц = МесяцС;
	Пока ТекущийМесяц < МесяцПо Цикл
		
		НоваяСтрока = ДанныеУчетаДоходов.Вставить(ИндексТекущейСтроки);
		СтрокиПоФизическомуЛицу.Добавить(НоваяСтрока);
		ПервыеСтрокиМесяцев.Добавить(НоваяСтрока);
		ИндексТекущейСтроки = ИндексТекущейСтроки + 1;
		
		НоваяСтрока.ФизическоеЛицо = ФизическоеЛицо;
		НоваяСтрока.МесяцНалоговогоПериода = ТекущийМесяц;
		НоваяСтрока.ДатаПолученияДохода = НачалоДня(КонецМесяца(ТекущийМесяц));
		НоваяСтрока.ОблагаемыйДоходНарастающимИтогом = ОблагаемыйДоходНарастающимИтогомЗаГод;
		НоваяСтрока.ДоходМежрасчетногоПериода = Ложь;
		
		НоваяСтрока.ЭтоПоследняяСтрокаЗаДату = Истина;
		НоваяСтрока.ЭтоПоследняяСтрокаЗаМесяц = Истина;
		НоваяСтрока.ЭтоПерваяСтрокаЗаДату = Истина;
		НоваяСтрока.ЭтоПерваяСтрокаЗаМесяц = Истина;
		Если Месяц(ТекущийМесяц) = 1 Тогда
			НоваяСтрока.ЭтоПерваяСтрокаЗаГод = Истина;
		ИначеЕсли  Месяц(ТекущийМесяц) = 12 Тогда
			НоваяСтрока.ЭтоПоследняяСтрокаЗаГод = Истина;
		КонецЕсли;	
		
		ТекущийМесяц  = ДобавитьМесяц(ТекущийМесяц, 1);
		
	КонецЦикла;	
КонецПроцедуры	

// Переписываем данные о результатах расчета НДФЛ из ТаблицаИсточник в ТаблицаПриемник, 
//	заменяя несоответствующие текущему расчету даты получения и категории дохода.
//	В процессе замены некоторые суммы могут быть перераспределены по доходам текущего расчета.
//
// Параметры:
//  ТаблицаПриемник - ТаблицаЗначений - 
//  ТаблицаИсточник - ТаблицаЗначений -
//  ПараметрыЗаполненияРесурса - структура - описывает особенности распределения строки по базе доходов.
//  ДатыПодразделенияКатегории - ТаблицаЗначений -
//  ОсновнаяДатаПолученияДохода - Дата - определяется по доходам текущего расчета.
//  ДополнительныеПоляЗаполнения - строка - перечень полей для копирования при распределении строки по базе доходов.
//
Процедура ЗаменитьДатыПодразделенияКатегории(ТаблицаПриемник, ТаблицаИсточник, ПараметрыЗаполненияРесурса, ДатыПодразделенияКатегории, ОсновнаяДатаПолученияДохода, ДополнительныеПоляЗаполнения = "")
	
	СтруктураПоискаЗаменыИзмерений = Новый Структура("МесяцНалоговогоПериода, КатегорияДохода, Подразделение");
	Для каждого СтрокаТЗ Из ТаблицаИсточник Цикл
		Если СтрокаТЗ[ПараметрыЗаполненияРесурса.ИмяРесурса] <> 0 Тогда
			ЗаполнитьЗначенияСвойств(СтруктураПоискаЗаменыИзмерений, СтрокаТЗ);
			СтрокиПараметровЗамены = ДатыПодразделенияКатегории.НайтиСтроки(СтруктураПоискаЗаменыИзмерений);
			Если СтрокиПараметровЗамены.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			СтрокаПараметровЗамены = СтрокиПараметровЗамены[0]; 
			ЗаменятьДатуПолученияДохода = СтрокаПараметровЗамены.ЗаменятьДатуПолученияДохода;
			ЗаменятьКатегориюДохода = СтрокаПараметровЗамены.ЗаменятьКатегориюДохода;
			ЗаменятьПодразделение = СтрокаПараметровЗамены.ЗаменятьПодразделение;
			Если Не ЗаменятьДатуПолученияДохода И Не ЗаменятьПодразделение И Не ЗаменятьКатегориюДохода Тогда
				ЗаполнитьЗначенияСвойств(ТаблицаПриемник.Добавить(), СтрокаТЗ);
				Продолжить;
			КонецЕсли;
			Если ЗаменятьДатуПолученияДохода Тогда
				СтрокаТЗ.МесяцНалоговогоПериода = ОсновнаяДатаПолученияДохода;
			КонецЕсли;
			Если Не ЗаменятьПодразделение И Не ЗаменятьКатегориюДохода Тогда
				ЗаполнитьЗначенияСвойств(ТаблицаПриемник.Добавить(), СтрокаТЗ);
				Продолжить;
			КонецЕсли;
			ТаблицаРаспределения = СтрокаПараметровЗамены.Распределение;
			Если Не ЗначениеЗаполнено(ТаблицаРаспределения) Тогда
				ЗаполнитьЗначенияСвойств(ТаблицаПриемник.Добавить(), СтрокаТЗ);
			ИначеЕсли ТаблицаРаспределения.Количество() = 1 Тогда
				Если ЗаменятьПодразделение Тогда
					СтрокаТЗ.Подразделение = ТаблицаРаспределения[0].Подразделение;
				КонецЕсли;
				Если ЗаменятьКатегориюДохода Тогда
					СтрокаТЗ.КатегорияДохода = ТаблицаРаспределения[0].КатегорияДохода;
				КонецЕсли;
				ЗаполнитьЗначенияСвойств(ТаблицаПриемник.Добавить(), СтрокаТЗ);
			Иначе
				СтрокДоРаспределения = ТаблицаПриемник.Количество();
				Если ЗначениеЗаполнено(ДополнительныеПоляЗаполнения) Тогда
					ВписатьРесурсВРезультатыРасчетов(ТаблицаПриемник, ПараметрыЗаполненияРесурса, СтрокаТЗ.МесяцНалоговогоПериода, СтрокаТЗ[ПараметрыЗаполненияРесурса.ИмяРесурса], СтрокаТЗ, ТаблицаРаспределения, СтрокаТЗ);
				Иначе
					ВписатьРесурсВРезультатыРасчетов(ТаблицаПриемник, ПараметрыЗаполненияРесурса, СтрокаТЗ.МесяцНалоговогоПериода, СтрокаТЗ[ПараметрыЗаполненияРесурса.ИмяРесурса], СтрокаТЗ, ТаблицаРаспределения);
				КонецЕсли;
				Если СтрокДоРаспределения < ТаблицаПриемник.Количество() И ЗаменятьДатуПолученияДохода Тогда
					// восстановим подразделение или категорию, если ранее это была чужая строка налога
					Для Сч = СтрокДоРаспределения + 1 По ТаблицаПриемник.Количество() Цикл
						Если Не ЗаменятьПодразделение Тогда
							ТаблицаПриемник[Сч-1].Подразделение = СтрокаТЗ.Подразделение
						КонецЕсли;
						Если Не ЗаменятьКатегориюДохода Тогда
							ТаблицаПриемник[Сч-1].КатегорияДохода = СтрокаТЗ.КатегорияДохода
						КонецЕсли;
						Если ЗначениеЗаполнено(ДополнительныеПоляЗаполнения) Тогда
							ЗаполнитьЗначенияСвойств(ТаблицаПриемник[Сч-1], СтрокаТЗ, ДополнительныеПоляЗаполнения);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Для расчета налога в "межрасчетном" варианте обеспечивает "соответствие" налога, вписываемого в документ, доходам документа.
// Вписываемый налог должен иметь тот же знак, что и доход. Если в результате расчета налога нарастающим итогом за год
// получилось иначе, вписывается нулевая сумма налога (возможно из строк за несколько месяцев) и сумма вычетов в
// пределам суммы доходов документа.
//
// Параметры:
//      РезультатыРасчетов - ТаблицаЗначений - таблица значений, содержащая будущий результат работы метода РассчитатьНалогПоОсновнойСтавке().
//		МежрасчетныйНДФЛ - ТаблицаЗначений - таблица значений, содержащая посчитанный налог по физическому лицу с учетом всех перерасчетов.
//		ДатаУдержанияИсчисленногоНалога - дата - дата предполагаемого удержания налога, который был исчислен.
//		МесяцРасчета - дата -
//		ВсегоДоходов - число - сумма дохода по межрасчетному документу для ограничения предоставленных вычетов
//
Процедура ПереписатьМежрасчетныйНДФЛФизическогоЛицаВРезультат(РезультатыРасчетов, МежрасчетныйНДФЛ, ДатаУдержанияИсчисленногоНалога, МесяцРасчета, Знач ВсегоДоходов = 0)
	
	Если (МежрасчетныйНДФЛ.Итог("НалогПоСтавке13") + МежрасчетныйНДФЛ.Итог("НалогСПревышенияПоСтавке13")) * ВсегоДоходов >= 0 Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(МежрасчетныйНДФЛ, РезультатыРасчетов);
	Иначе 
		
		// Произошел перерасчет обязательств из-за изменения данных "задним" числом, т.е. 
		// сумма налога по знаку (+ или -) не соответствует доходам документа.
		// Налоги предыдущих периодов добавляем в пределах налога текущего периода с тем, 
		// чтобы общая сумма налога в документе оказалось нулевой.
		
		МежрасчетныйНДФЛ.Сортировать("МесяцНалоговогоПериода Убыв");
		
		ТекущийПериод = НачалоМесяца(?(ЗначениеЗаполнено(ДатаУдержанияИсчисленногоНалога), ДатаУдержанияИсчисленногоНалога, МесяцРасчета));
		НДФЛТекущегоПериодаВсего = 0;
		НДФЛТекущегоПериода = Новый Массив;
		СтрокиРезультатаДляТекущегоПериода = Новый Массив;
		Для каждого СтрокаДанных Из МежрасчетныйНДФЛ Цикл
			Если НачалоМесяца(СтрокаДанных.МесяцНалоговогоПериода) = ТекущийПериод Тогда
				НДФЛТекущегоПериодаВсего = НДФЛТекущегоПериодаВсего + СтрокаДанных.НалогПоСтавке13 + СтрокаДанных.НалогСПревышенияПоСтавке13;
				НоваяСтрокаНДФЛ = РезультатыРасчетов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаНДФЛ, СтрокаДанных);
				СтрокиРезультатаДляТекущегоПериода.Добавить(НоваяСтрокаНДФЛ);
				НДФЛТекущегоПериода.Добавить(СтрокаДанных);
			ИначеЕсли СтрокаДанных.МесяцНалоговогоПериода < ТекущийПериод Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НДФЛТекущегоПериодаВсего * ВсегоДоходов > 0 Тогда
			Если НДФЛТекущегоПериодаВсего > 0 Тогда
				Для каждого СтрокаДанных Из МежрасчетныйНДФЛ Цикл
					Если НачалоМесяца(СтрокаДанных.МесяцНалоговогоПериода) = ТекущийПериод Тогда
						Продолжить;
					КонецЕсли;
					Если НДФЛТекущегоПериодаВсего + СтрокаДанных.НалогПоСтавке13 + СтрокаДанных.НалогСПревышенияПоСтавке13 >= 0 Тогда
						ЗаполнитьЗначенияСвойств(РезультатыРасчетов.Добавить(), СтрокаДанных);
						НДФЛТекущегоПериодаВсего = НДФЛТекущегоПериодаВсего + СтрокаДанных.НалогПоСтавке13 + СтрокаДанных.НалогСПревышенияПоСтавке13;
					ИначеЕсли НДФЛТекущегоПериодаВсего > 0 Тогда
						НоваяСтрока = РезультатыРасчетов.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
						Если НоваяСтрока.НалогСПревышенияПоСтавке13 >= 0 Тогда
							НоваяСтрока.НалогПоСтавке13 = -НДФЛТекущегоПериодаВсего;
						ИначеЕсли НоваяСтрока.НалогПоСтавке13 >= 0 Тогда	
							НоваяСтрока.НалогСПревышенияПоСтавке13 = -НДФЛТекущегоПериодаВсего;
						Иначе	
							НоваяСтрока.НалогСПревышенияПоСтавке13 = Макс(-НДФЛТекущегоПериодаВсего, НоваяСтрока.НалогСПревышенияПоСтавке13);
							НДФЛТекущегоПериодаВсего = НДФЛТекущегоПериодаВсего - НоваяСтрока.НалогСПревышенияПоСтавке13;
							НоваяСтрока.НалогПоСтавке13 = -НДФЛТекущегоПериодаВсего;
						КонецЕсли;
						НДФЛТекущегоПериодаВсего = 0
					КонецЕсли;
				КонецЦикла;
			Иначе
				Для каждого СтрокаДанных Из МежрасчетныйНДФЛ Цикл
					Если НачалоМесяца(СтрокаДанных.МесяцНалоговогоПериода) = ТекущийПериод Тогда
						Продолжить;
					КонецЕсли;
					Если НДФЛТекущегоПериодаВсего + СтрокаДанных.НалогПоСтавке13 + СтрокаДанных.НалогСПревышенияПоСтавке13 <= 0 Тогда
						ЗаполнитьЗначенияСвойств(РезультатыРасчетов.Добавить(), СтрокаДанных);
						НДФЛТекущегоПериодаВсего = НДФЛТекущегоПериодаВсего + СтрокаДанных.НалогПоСтавке13 + СтрокаДанных.НалогСПревышенияПоСтавке13;
					ИначеЕсли НДФЛТекущегоПериодаВсего < 0 Тогда
						НоваяСтрока = РезультатыРасчетов.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
						Если НоваяСтрока.НалогСПревышенияПоСтавке13 <= 0 Тогда
							НоваяСтрока.НалогПоСтавке13 = -НДФЛТекущегоПериодаВсего;
						ИначеЕсли НоваяСтрока.НалогПоСтавке13 <= 0 Тогда	
							НоваяСтрока.НалогСПревышенияПоСтавке13 = -НДФЛТекущегоПериодаВсего;
						Иначе	
							НоваяСтрока.НалогСПревышенияПоСтавке13 = Мин(-НДФЛТекущегоПериодаВсего, НоваяСтрока.НалогСПревышенияПоСтавке13);
							НДФЛТекущегоПериодаВсего = НДФЛТекущегоПериодаВсего - НоваяСтрока.НалогСПревышенияПоСтавке13;
							НоваяСтрока.НалогПоСтавке13 = -НДФЛТекущегоПериодаВсего;
						КонецЕсли;
						НДФЛТекущегоПериодаВсего = 0
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		Иначе 	
			
			// Впишем вычеты, которые обнулили налог.
			// Вписанные ранее строки налога текущего месяца заменим другими - с нулевым доходом, но ненулевыми вычетами.
			
			Для Каждого УдаляемаяСтрока Из СтрокиРезультатаДляТекущегоПериода Цикл
				РезультатыРасчетов.Удалить(УдаляемаяСтрока);
			КонецЦикла;
			
			Если ВсегоДоходов <= 0 Тогда // оказалось, что располагаемых доходов нет
				Возврат
			КонецЕсли;
			
			ВсегоСтрокТекущегоПериода = НДФЛТекущегоПериода.Количество();
			МассивРесурсов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(РассчитываемыеРесурсыПоОсновнойСтавке());
			Для Сч = 1 По ВсегоСтрокТекущегоПериода Цикл
				СтрокаДанных = НДФЛТекущегоПериода [ВсегоСтрокТекущегоПериода - Сч];
				ЕстьДанныеВСтроке = Ложь;
				Для каждого ИмяРесурса Из МассивРесурсов Цикл
					Если ИмяРесурса = "НалогПоСтавке13" Или ИмяРесурса = "НалогСПревышенияПоСтавке13" Тогда
						СтрокаДанных[ИмяРесурса] = 0
					ИначеЕсли ВсегоДоходов > 0 Тогда
						Учтено = Мин(СтрокаДанных[ИмяРесурса], ВсегоДоходов);
						СтрокаДанных[ИмяРесурса] = Учтено;
						ВсегоДоходов = ВсегоДоходов - Учтено;
					Иначе
						СтрокаДанных[ИмяРесурса] = 0
					КонецЕсли;
					Если Не ЕстьДанныеВСтроке Тогда
						ЕстьДанныеВСтроке = СтрокаДанных[ИмяРесурса] <> 0;
					КонецЕсли;
				КонецЦикла;
				Если ЕстьДанныеВСтроке Тогда
					ЗаполнитьЗначенияСвойств(РезультатыРасчетов.Добавить(),СтрокаДанных);
				КонецЕсли;
				Если ВсегоДоходов = 0 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла; 
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПереписатьЧастичныйРезультатРасчетаВРезультатПоФизическомуЛицу(РезультатРасчетаПоФизическомуЛицу, СтрокиНДФЛЗаГод, НДФЛПорцииРасчета, ВычетыПорцииРасчета, ОписаниеВычетов, ТекущийНалоговыйПериод = Неопределено, ПредоставленныеСтандартныеИСоциальныеВычеты = Неопределено, СтруктураПоискаСтандартныхВычетов = Неопределено, ИмущественныеВычеты = Неопределено, СтруктураПоискаИмущественныхВычетов = Неопределено, ПоследнийМесяцПериода = 12)
	
	Если СтрокиНДФЛЗаГод = Неопределено Тогда // вызов из расчета для нерезидента
		
		// отменяем ранее предоставленные вычеты
		ВычетыПорцииРасчета.Очистить();
		Для СчМесяцев = 0 По ПоследнийМесяцПериода - 1 Цикл
			СтруктураПоискаСтандартныхВычетов.МесяцПериодаПредоставленияВычета = ДобавитьМесяц(ТекущийНалоговыйПериод, СчМесяцев);
			СтруктураПоискаИмущественныхВычетов.МесяцНалоговогоПериода = СтруктураПоискаСтандартныхВычетов.МесяцПериодаПредоставленияВычета;
			ВписатьПредоставленныеРанееВычетыВДанныеУчета(ВычетыПорцииРасчета, ПредоставленныеСтандартныеИСоциальныеВычеты.НайтиСтроки(СтруктураПоискаСтандартныхВычетов));
			ВписатьПредоставленныеРанееВычетыВДанныеУчета(ВычетыПорцииРасчета, ИмущественныеВычеты.НайтиСтроки(СтруктураПоискаИмущественныхВычетов));
		КонецЦикла;
		
		// Переписываем результаты очередной порции расчета в таблицу физ.лица
		Если ВычетыПорцииРасчета.Количество() = 0 Тогда
			Для Каждого СтрокаТЗ Из НДФЛПорцииРасчета Цикл
				Если СтрокаТЗ.НалогПоСтавке13 <> 0 Или СтрокаТЗ.НалогСПревышенияПоСтавке13 <> 0 Тогда
					ЗаполнитьЗначенияСвойств(РезультатРасчетаПоФизическомуЛицу.Добавить(), СтрокаТЗ);
				КонецЕсли;
			КонецЦикла;
			Возврат
		КонецЕсли;
			
	КонецЕсли;
	
	СтруктураПоискаВычетов = Новый Структура("ФизическоеЛицо, МесяцНалоговогоПериода, МесяцПериодаПредоставленияВычета, Подразделение, КатегорияДохода");
	
	Для Каждого СтрокаТЗ Из НДФЛПорцииРасчета Цикл
		СтрокаТЗ.МесяцПериодаПредоставленияВычета = НачалоМесяца(СтрокаТЗ.МесяцНалоговогоПериода);
	КонецЦикла;				
	
	// Вписываем наличие вычетов в таблицу результатов расчета.
	Для Каждого СтрокаТаблицыВычетов Из ВычетыПорцииРасчета Цикл
		ОписаниеВычета = ОписаниеВычетов[СтрокаТаблицыВычетов.КодВычета];
		Если ОписаниеВычета <> Неопределено И СтрокаТаблицыВычетов.РазмерВычета <> 0 Тогда
			СтрокаРезультат = НДФЛПорцииРасчета.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРезультат, СтрокаТаблицыВычетов);
			СтрокаРезультат.КоличествоВычетов = 1;	
		КонецЕсли;
	КонецЦикла;				
	
	НДФЛПорцииРасчета.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода, МесяцПериодаПредоставленияВычета, Подразделение, КатегорияДохода", "НалогПоСтавке13, НалогСПревышенияПоСтавке13, КоличествоВычетов, ЗачтеноАвансовыхПлатежейПоСтавке13, ЗачтеноАвансовыхПлатежейСПревышенияПоСтавке13");
	
	// Переписываем результаты очередной порции расчета в таблицу физ.лица
	Для Каждого СтрокаТЗ Из НДФЛПорцииРасчета Цикл
		Если СтрокаТЗ.НалогПоСтавке13 + СтрокаТЗ.НалогСПревышенияПоСтавке13 <> 0 Или СтрокаТЗ.КоличествоВычетов > 0 Тогда
			СтрокаРезультат = РезультатРасчетаПоФизическомуЛицу.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРезультат, СтрокаТЗ);
			Если СтрокиНДФЛЗаГод <> Неопределено Тогда
				СтрокиНДФЛЗаГод.Добавить(СтрокаРезультат);
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(СтруктураПоискаВычетов, СтрокаТЗ);
			СтрокиВычетов = ВычетыПорцииРасчета.НайтиСтроки(СтруктураПоискаВычетов);
			
			Для Каждого ТекущаяСтрокаВычета Из СтрокиВычетов Цикл
				ОписаниеТекущегоВычета = ОписаниеВычетов[ТекущаяСтрокаВычета.КодВычета];
				Если ТекущаяСтрокаВычета.РазмерВычета <> 0 И ОписаниеТекущегоВычета <> Неопределено Тогда
					СтрокаРезультат[ОписаниеТекущегоВычета.ИмяКолонки] = СтрокаРезультат[ОписаниеТекущегоВычета.ИмяКолонки] + ТекущаяСтрокаВычета.РазмерВычета;
					Если ОписаниеТекущегоВычета.ИмяКолонки = "ПримененныйВычетЛичный" Тогда
						СтрокаРезультат.КодВычетаЛичный	= ТекущаяСтрокаВычета.КодВычета;
					КонецЕсли;	
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;
	КонецЦикла;		
	
КонецПроцедуры	

Процедура РассчитатьСтаршийМесяцПолученияДохода(ПервыеСтрокиМесяцев)
	
	Если ПервыеСтрокиМесяцев.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	СтаршийМесяцПолученияДохода = ПервыеСтрокиМесяцев[0].МесяцНалоговогоПериода;
	Для каждого СтрокаМесяца Из ПервыеСтрокиМесяцев Цикл
		Если СтрокаМесяца.ВсеДоходыЗаМесяц > 0 Тогда
			СтаршийМесяцПолученияДохода = Макс(СтрокаМесяца.МесяцНалоговогоПериода, СтаршийМесяцПолученияДохода)
		КонецЕсли;
	КонецЦикла;
	Для каждого СтрокаМесяца Из ПервыеСтрокиМесяцев Цикл
		СтрокаМесяца.СтаршийМесяцПолученияДохода = СтаршийМесяцПолученияДохода
	КонецЦикла;
	
	ПервыеСтрокиМесяцев.Очистить();
	
КонецПроцедуры

Процедура УдалитьУчтенныеСтрокиНерезидентов(СоответствиеНерезидентов, УчтенныеСтроки, ТаблицаДанныхУчета)
	
	Если Не ЗначениеЗаполнено(УчтенныеСтроки) Тогда
		Возврат
	КонецЕсли;
	
	Если СоответствиеНерезидентов[УчтенныеСтроки[0].ФизическоеЛицо] = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из УчтенныеСтроки Цикл
		ТаблицаДанныхУчета.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

// Возвращает описание стандартных вычетов, на которые имеет право физическое лицо в месяце МесяцНалоговогоПериода.
//
// Параметры:
//	МесяцНалоговогоПериода - Дата - месяц права на вычет 
//	ПериодСрезаПравНаВычеты - Дата - дата, по состоянию на которую читаются периодические сведения
//	СтрокиПравНаВычеты - ТаблицаЗначений или массив строк таблицы значений - строки соответствующей таблицы по физическому лицу
//	СтрокиТаблицыПримененияВычетов - ТаблицаЗначений или массив строк таблицы значений - строки соответствующей таблицы по физическому лицу
//	ИнформацияОНалоговомСтатусе - Структура - данные, возвращаемые методом ИнформацияОСтатусеНалогоплательщика()
//
// Возвращаемое значение:
//	Структура с полями: Вычеты, ДатаНачала, ДатаОкончания.
//
Функция ИнформацияОСтандартныхВычетахДействующихНаДату(МесяцНалоговогоПериода, ПериодСрезаПравНаВычеты, СтрокиПравНаВычеты, СтрокиТаблицыПримененияВычетов, ИнформацияОНалоговомСтатусе)
	
// Описание алгоритма: 
//	1. Проверяем статус сотрудника: для нерезидента описываем период без вычетов и больше никуда не смотрим.
//	2. Среди строк таблицы применения вычетов по физическому лицу, ищем строку (если есть - она будет единственной), для которой выполняется условие
//	МесяцНалоговогоПериода лежит между датой начала и датой окончания, указанными в строке. Если не найдем - определяем дату окончания периода без вычетов, в права на вычеты не заглядываем.
//	3. Если в текущем месяце у физ.лица зарегистрировано право на применение вычетов, выбираем те вычеты, что действуют в периоде этого права.
//	Прежде чем в очередной раз обращаться к этой функции, проверяем что предыдущей результат этой функции потерял актуальность (по датам начала и окончания и физическому лицу)
	
	Вычеты = Новый Соответствие;	
	ИнформацияОПримененииВычетов = Новый Структура("Вычеты, ДатаНачала, ДатаОкончания", Вычеты, МесяцНалоговогоПериода, ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата());
	
	Если СтрокиПравНаВычеты.Количество() = 0 Или СтрокиТаблицыПримененияВычетов.Количество() = 0 Тогда
		Возврат ИнформацияОПримененииВычетов;	
	КонецЕсли;	                                
	
	Если Не ИнформацияОНалоговомСтатусе.ПрименяетсяСтавкаПункта1Статьи224НК Тогда
		ИнформацияОПримененииВычетов.ДатаОкончания = ИнформацияОНалоговомСтатусе.ДатаОкончания;
		Возврат ИнформацияОПримененииВычетов;
	КонецЕсли;
	
	// получим действующую строку с данными о применении вычетов
	СтрокаТаблицыПримененияВычетов = Неопределено;
	Если СтрокиТаблицыПримененияВычетов.Количество() = 1 Тогда
		СтрокаТаблицыПримененияВычетов = СтрокиТаблицыПримененияВычетов[0];
		Если МесяцНалоговогоПериода < СтрокаТаблицыПримененияВычетов.ДатаНачала Или МесяцНалоговогоПериода > СтрокаТаблицыПримененияВычетов.ДатаОкончания Тогда
			Если СтрокаТаблицыПримененияВычетов.ДатаНачала > МесяцНалоговогоПериода Тогда
				ИнформацияОПримененииВычетов.ДатаОкончания = Мин(ИнформацияОПримененииВычетов.ДатаОкончания, СтрокаТаблицыПримененияВычетов.ДатаНачала - 1);
			КонецЕсли;
			СтрокаТаблицыПримененияВычетов = Неопределено;
		КонецЕсли;
	Иначе	
		Для Каждого ТекущаяСтрокаПримененияВычетов Из СтрокиТаблицыПримененияВычетов Цикл
			Если МесяцНалоговогоПериода >= ТекущаяСтрокаПримененияВычетов.ДатаНачала И МесяцНалоговогоПериода <= ТекущаяСтрокаПримененияВычетов.ДатаОкончания Тогда
				СтрокаТаблицыПримененияВычетов = ТекущаяСтрокаПримененияВычетов;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если СтрокаТаблицыПримененияВычетов = Неопределено Тогда
			Для Каждого ТекущаяСтрокаПримененияВычетов Из СтрокиТаблицыПримененияВычетов Цикл
				Если ТекущаяСтрокаПримененияВычетов.ДатаНачала > МесяцНалоговогоПериода Тогда
					ИнформацияОПримененииВычетов.ДатаОкончания = Мин(ИнформацияОПримененииВычетов.ДатаОкончания, ТекущаяСтрокаПримененияВычетов.ДатаНачала - 1);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если СтрокаТаблицыПримененияВычетов = Неопределено Тогда
		Возврат ИнформацияОПримененииВычетов;
	ИначеЕсли Не СтрокаТаблицыПримененияВычетов.ПрименятьВычеты Тогда
		ИнформацияОПримененииВычетов.ДатаОкончания = СтрокаТаблицыПримененияВычетов.ДатаОкончания;
		Возврат ИнформацияОПримененииВычетов;
	КонецЕсли;

	ДатаОкончания = Мин(ИнформацияОПримененииВычетов.ДатаОкончания, ИнформацияОНалоговомСтатусе.ДатаОкончания, КонецГода(МесяцНалоговогоПериода));
	
	ПериодСрезаВычетов = ?(МесяцНалоговогоПериода > ПериодСрезаПравНаВычеты, ПериодСрезаПравНаВычеты,  МесяцНалоговогоПериода);
	Для Каждого СтрокаТаблицыВычетов Из СтрокиПравНаВычеты Цикл
		Если МесяцНалоговогоПериода >= СтрокаТаблицыВычетов.ДатаНачала
			И МесяцНалоговогоПериода <= СтрокаТаблицыВычетов.ДатаОкончания
			И ПериодСрезаВычетов >= СтрокаТаблицыВычетов.ПериодРегистрацииНачало
			И ПериодСрезаВычетов <= СтрокаТаблицыВычетов.ПериодРегистрацииОкончание Тогда
		
			ДатаОкончания = Мин(ДатаОкончания, СтрокаТаблицыВычетов.ДатаОкончания - 1, СтрокаТаблицыВычетов.ПериодРегистрацииОкончание - 1);
												
			Если (СтрокаТаблицыВычетов.Количество <> 0 Или СтрокаТаблицыВычетов.ЛичныйВычет)
				И (Не СтрокаТаблицыВычетов.ЛичныйВычет Или СтрокаТаблицыВычетов.КодВычета <> Справочники.ВидыВычетовНДФЛ.ПустаяСсылка()) Тогда
			
				Вычеты.Вставить(СтрокаТаблицыВычетов.КодВычета, СтрокаТаблицыВычетов.Количество);
			КонецЕсли;	
		Иначе
			Если СтрокаТаблицыВычетов.ДатаНачала > МесяцНалоговогоПериода Тогда
				ДатаОкончания = Мин(ДатаОкончания, СтрокаТаблицыВычетов.ДатаНачала - 1);
			КонецЕсли;
			Если СтрокаТаблицыВычетов.ПериодРегистрацииНачало > ПериодСрезаВычетов Тогда
				ДатаОкончания = Мин(ДатаОкончания, СтрокаТаблицыВычетов.ПериодРегистрацииНачало - 1);
			КонецЕсли;					
		КонецЕсли;		
	КонецЦикла;		
	
	ИнформацияОПримененииВычетов.ДатаОкончания = ДатаОкончания;
	
	Возврат ИнформацияОПримененииВычетов;
КонецФункции	

// Возвращает описание текущего статуса физического лица с точки зрения налогового резидентства.
//
// Параметры:
//	ДатаСреза - Дата - 
//	СтрокиТаблицыСтатусов - ТаблицаЗначений или массив строк таблицы значений - строки таблицы статусов по физическому лицу
//	ПорядокУчетаСтатусаНаКонецГода - строка - необязательный, описание того, как следует учитывать изменение 
//		статуса на конец налогового периода, возможные значения:
//			"НеУчитыватьИзмененияСтатуса" (значение по умолчанию)
//			"УчитыватьИзмененияСтатусаДляРасчета"
//			"УчитыватьИзмененияСтатусаДляОтчетности".
//	ОкончаниеОтчетногоПериода - Дата - необязательный, значение будет учитываться в определение периода на которую будет определен статус налогоплательщика если необходимо учитывать изменение статуса.
//
// Возвращаемое значение:
//	Структура с полями: ДатаНачала, ДатаОкончания, Резидент, ПрименяетсяСтавкаПункта1Статьи224НК, СтатусДляОпределенияСтавки, РезидентРФНаКонецГода, РезидентРФНаКонецМесяца.
//
Функция ИнформацияОСтатусеНалогоплательщика(Знач ДатаСреза, СтрокиТаблицыСтатусов, ПорядокУчетаСтатусаНаКонецГода = "НеУчитыватьИзмененияСтатуса", ОкончаниеОтчетногоПериода = '00010101')
	
	// Описание алгоритма: 
	//	Среди строк таблицы статусов по физическому лицу, найдем строку (она будет единственной), для которой выполняется условие
	//	Дата среза (с учетом уточнения для 2014 и более ранних лет) лежит между датой начала и датой окончания, указанными в строке
	//	На основе этой строки рассчитаем поля структуры
	//	Прежде чем в очередной раз обращаться к этой функции, проверяем что предыдущей результат этой функции потерял актуальность (по датам начала и окончания и физическому лицу)

	ИнформацияОСтатусе = Новый Структура("ДатаНачала, ДатаОкончания, ПрименяетсяСтавкаПункта1Статьи224НК, СтатусДляОпределенияСтавки, РезидентРФНаКонецГода, РезидентРФНаКонецМесяца", ДатаСреза, ДатаСреза, Истина, Справочники.СтатусыНалогоплательщиковПоНДФЛ.Резидент, Истина, Истина);

	Если СтрокиТаблицыСтатусов.Количество() = 0 Тогда
		ИнформацияОСтатусе.ДатаОкончания = КонецГода(ДатаСреза);
		Возврат ИнформацияОСтатусе;
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(ДатаСреза) Тогда
		ДатаСреза = КонецМесяца(ТекущаяДатаСеанса())
	КонецЕсли;

	УчитыватьИзмененияСтатусаДляРасчета = ПорядокУчетаСтатусаНаКонецГода = "УчитыватьИзмененияСтатусаДляРасчета";
	НеУчитыватьИзмененияСтатуса = ПорядокУчетаСтатусаНаКонецГода <> "УчитыватьИзмененияСтатусаДляРасчета" И ПорядокУчетаСтатусаНаКонецГода <> "УчитыватьИзмененияСтатусаДляОтчетности";
	ГодОтчетногоПериода = НачалоГода(ОкончаниеОтчетногоПериода);
	ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев = УчетНДФЛ.ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев();
	УточненнаяДатаСреза = ?(ДатаСреза < ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев, КонецМесяца(ДатаСреза), ДатаСреза);
	ИмяКолонкиСтатуса = "СтатусНаКонецКвартала" + ?(ОкончаниеОтчетногоПериода = '00010101', 4, Цел((Месяц(ОкончаниеОтчетногоПериода) + 2)/3));
	Резидент = Справочники.СтатусыНалогоплательщиковПоНДФЛ.Резидент;
	НеРезидент = Справочники.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент;	
	
	Для Каждого СтрокаТаблицыСтатусов Из СтрокиТаблицыСтатусов Цикл
		Если УточненнаяДатаСреза >= СтрокаТаблицыСтатусов.ДатаНачала И УточненнаяДатаСреза <= СтрокаТаблицыСтатусов.ДатаОкончания Тогда
			
			ЗаполнитьЗначенияСвойств(ИнформацияОСтатусе, СтрокаТаблицыСтатусов);
			Если НеУчитыватьИзмененияСтатуса Тогда
				ИнформацияОСтатусе.СтатусДляОпределенияСтавки = СтрокаТаблицыСтатусов.Статус;
			ИначеЕсли СтрокаТаблицыСтатусов.Год < ГодОтчетногоПериода Тогда
				Если СтрокаТаблицыСтатусов.Статус = СтрокаТаблицыСтатусов.СтатусНаКонецГода Тогда
					ИнформацияОСтатусе.СтатусДляОпределенияСтавки = СтрокаТаблицыСтатусов.Статус;
				ИначеЕсли СтрокаТаблицыСтатусов.СтатусНаКонецГода = Резидент Тогда 	
					ИнформацияОСтатусе.СтатусДляОпределенияСтавки = СтрокаТаблицыСтатусов.СтатусНаКонецГода;
				ИначеЕсли УчитыватьИзмененияСтатусаДляРасчета Тогда
					ИнформацияОСтатусе.СтатусДляОпределенияСтавки = СтрокаТаблицыСтатусов.Статус;
				ИначеЕсли ДатаСреза < ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев Тогда
					ИнформацияОСтатусе.СтатусДляОпределенияСтавки = СтрокаТаблицыСтатусов.СтатусНаКонецГода;
				ИначеЕсли СтрокаТаблицыСтатусов.СтатусНаКонецГода = НеРезидент Тогда
					Если СтрокаТаблицыСтатусов.Статус = Резидент Тогда
						ИнформацияОСтатусе.СтатусДляОпределенияСтавки = НеРезидент
					Иначе
						ИнформацияОСтатусе.СтатусДляОпределенияСтавки = СтрокаТаблицыСтатусов.Статус;
					КонецЕсли; 
				ИначеЕсли СтрокаТаблицыСтатусов.Статус = Резидент Тогда
					ИнформацияОСтатусе.СтатусДляОпределенияСтавки = НеРезидент
				Иначе
					ИнформацияОСтатусе.СтатусДляОпределенияСтавки = СтрокаТаблицыСтатусов.Статус;
				КонецЕсли;		
			Иначе
				Если СтрокаТаблицыСтатусов.Статус = СтрокаТаблицыСтатусов[ИмяКолонкиСтатуса] Тогда
					ИнформацияОСтатусе.СтатусДляОпределенияСтавки = СтрокаТаблицыСтатусов.Статус;
				ИначеЕсли СтрокаТаблицыСтатусов[ИмяКолонкиСтатуса] = Резидент Тогда 	
					ИнформацияОСтатусе.СтатусДляОпределенияСтавки = СтрокаТаблицыСтатусов[ИмяКолонкиСтатуса];
				ИначеЕсли УчитыватьИзмененияСтатусаДляРасчета Тогда
					ИнформацияОСтатусе.СтатусДляОпределенияСтавки = СтрокаТаблицыСтатусов.Статус;
				ИначеЕсли ДатаСреза < ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев Тогда
					ИнформацияОСтатусе.СтатусДляОпределенияСтавки = СтрокаТаблицыСтатусов[ИмяКолонкиСтатуса];
				ИначеЕсли СтрокаТаблицыСтатусов[ИмяКолонкиСтатуса] = НеРезидент Тогда
					Если СтрокаТаблицыСтатусов.Статус = Резидент Тогда
						ИнформацияОСтатусе.СтатусДляОпределенияСтавки = НеРезидент
					Иначе
						ИнформацияОСтатусе.СтатусДляОпределенияСтавки = СтрокаТаблицыСтатусов.Статус;
					КонецЕсли; 
				ИначеЕсли СтрокаТаблицыСтатусов.Статус = Резидент Тогда
					ИнформацияОСтатусе.СтатусДляОпределенияСтавки = НеРезидент
				Иначе
					ИнформацияОСтатусе.СтатусДляОпределенияСтавки = СтрокаТаблицыСтатусов.Статус;
				КонецЕсли;		
			КонецЕсли;
			
			Возврат ИнформацияОСтатусе;
			
		КонецЕсли;	
	КонецЦикла;	

	Возврат ИнформацияОСтатусе;	
	
КонецФункции

Функция НовыйПараметрыЗаполненияРесурса(ИмяРесурса, ИмяПоляКоэффициент, ТочностьВеличины = 2, ПоляЗаполнения = "Подразделение", ДополнительныеПоляЗаполнения = Неопределено)
	
	ПараметрыЗаполненияРесурса = Новый Структура();
	ПараметрыЗаполненияРесурса.Вставить("ИмяРесурса", ИмяРесурса);
	ПараметрыЗаполненияРесурса.Вставить("ИмяПоляКоэффициент", ИмяПоляКоэффициент);
	ПараметрыЗаполненияРесурса.Вставить("ТочностьВеличины", ТочностьВеличины);
	ПараметрыЗаполненияРесурса.Вставить("ПоляЗаполнения", ПоляЗаполнения);
	ПараметрыЗаполненияРесурса.Вставить("ДополнительныеПоляЗаполнения", ДополнительныеПоляЗаполнения);
	
	Возврат ПараметрыЗаполненияРесурса;	
КонецФункции	

// Чтобы обеспечить применение вычетов в нужном порядке, создадим специальную структуру данных со свойствами
//		ОписаниеВычетов - соответствие, где для каждого вычета содержится информация о том, является ли он имущественным, а также определяющий очередность применения порядковый номер
//		ОстаткиВычетов - соответствие, где ключом выступает код вычета, значение - остающаяся пока не примененной сумма вычета
//		ТаблицаВычетов - таблица значений с полями КодВычета, ПорядокСписания, ИмущественныйВычет
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	Структура.
//
Функция НовыйОстаткиВычетов()
	
	ОстаткиВычетов = Новый Структура;	
	ОстаткиВычетов.Вставить("ОписаниеВычетов", УчетНДФЛПовтИсп.ОписаниеВычетов());
			
	//	Нужен счетчик остатков - это соответствие, где в качестве ключа выступает имя вычета, в качестве значения число;
	// элементы соответствия будем добавлять по мере появления прав на вычеты.
	ОстаткиВычетов.Вставить("Остатки", Новый Соответствие); 	
		
	//	Также нужна упорядоченная (впоследствии) таблица значений, где соответствующие вычетам строки будут находится в том порядке, 
	// в котором они будут списываться
	ТаблицаВычетов = Новый ТаблицаЗначений();
	ОстаткиВычетов.Вставить("ТаблицаВычетов", ТаблицаВычетов);
	
	ТаблицаВычетов.Колонки.Добавить("КодВычета");
	ТаблицаВычетов.Колонки.Добавить("ПорядокСписания", Новый ОписаниеТипов("Число"));
	ТаблицаВычетов.Колонки.Добавить("ИмущественныйВычет", Новый ОписаниеТипов("Булево"));
		
	Возврат ОстаткиВычетов;
		
КонецФункции

// Возвращает данные из ИБ о статусах переданных физических лиц с точки зрения налогового резидентства.
//
// Параметры:
//	ФизическиеЛица - Массив - 
//	ПервыйМесяцНалоговогоПериода - Дата - 
//	ПоследнийМесяцНалоговогоПериода - Дата - 
//
// Возвращаемое значение:
//	Таблица значений, имеет тот же состав колонок, что и регистр СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный;
//  	проиндексирована по полю ФизическоеЛицо
//
Функция СтатусыФизическихЛиц(ФизическиеЛица, ПервыйМесяцНалоговогоПериода, ПоследнийМесяцНалоговогоПериода) 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
	Запрос.УстановитьПараметр("НачалоГодаПериодаРасчета", НачалоГода(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("КонецПоследнегоМесяцаРасчета", КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.ДатаНачала КАК ДатаНачала,
	|	СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.ДатаОкончания КАК ДатаОкончания,
	|	СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.Статус КАК Статус,
	|	СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.РезидентРФНаКонецМесяца КАК РезидентРФНаКонецМесяца,
	|	СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.ПрименяетсяСтавкаПункта1Статьи224НК КАК ПрименяетсяСтавкаПункта1Статьи224НК,
	|	СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.Год КАК Год,
	|	СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.РезидентРФНаКонецКвартала1 КАК РезидентРФНаКонецКвартала1,
	|	СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.РезидентРФНаКонецКвартала2 КАК РезидентРФНаКонецКвартала2,
	|	СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.РезидентРФНаКонецКвартала3 КАК РезидентРФНаКонецКвартала3,
	|	СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.РезидентРФНаКонецГода КАК РезидентРФНаКонецГода,
	|	СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.СтатусНаКонецКвартала1 КАК СтатусНаКонецКвартала1,
	|	СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.СтатусНаКонецКвартала2 КАК СтатусНаКонецКвартала2,
	|	СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.СтатусНаКонецКвартала3 КАК СтатусНаКонецКвартала3,
	|	СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.СтатусНаКонецГода КАК СтатусНаКонецКвартала4,
	|	СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.СтатусНаКонецГода КАК СтатусНаКонецГода
	|ИЗ
	|	РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный КАК СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный
	|ГДЕ
	|	СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.ФизическоеЛицо В(&ФизическиеЛица)
	|	И (&НачалоГодаПериодаРасчета МЕЖДУ СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.ДатаНачала И СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.ДатаОкончания
	|			ИЛИ СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.ДатаНачала > &НачалоГодаПериодаРасчета
	|				И СтатусФизическихЛицКакНалогоплательщиковНДФЛВторичный.ДатаНачала <= &КонецПоследнегоМесяцаРасчета)";
	СтатусыФизическихЛиц = Запрос.Выполнить().Выгрузить();		
	СтатусыФизическихЛиц.Индексы.Добавить("ФизическоеЛицо");
	Возврат СтатусыФизическихЛиц
	
КонецФункции


#КонецОбласти
