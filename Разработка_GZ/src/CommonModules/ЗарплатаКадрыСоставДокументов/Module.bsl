#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава объекта.
//
// Возвращаемое значение
//  Структура - список параметров состава объекта
//   * ИмяРеквизитаКраткийСостав                      - Строка - имя реквизита краткий состав объекта
//   * ИмяТабличнойЧастиФизическиеЛица                - Строка - имя табличной части физические лица объекта
//   * ЗаполнятьТабличнуюЧастьФизическиеЛицаДокумента - Булево - заполнять табличную часть Физические лица объекта
//   * ИспользоватьКраткийСостав                      - Булево - заполнять реквизит краткий состав объекта
//   * ЗаполнятьСоставДокументов                      - Булево - заполнять регистр состава документов для отбора в
//                                                               списках и журналов
//   * ЗаполнятьФизическиеЛицаПоСотрудникам           - Булево - заполнять физические лица по сотрудникам в табличных
//                                                               частях/шапке объекта
//   * ИспользоватьОграничениеДоступа                 - Булево - заполнять регистр Физические лица объекта для
//                                                               ограничения доступа
//   * ОписаниеХраненияСотрудниковФизическихЛиц       - Массив - массив структур(см ОписаниеСоставаТабличныхЧастей), 
//      Необходим для заполнения физических лиц и/или сотрудников
//      для добавления используется ДобавитьОписаниеХраненияСотрудниковФизическихЛиц
//   * ОписаниеЗаполненияФизическихЛицПоСотрудникам   - Массив - массив структур(см ОписаниеСоставаТабличныхЧастей), 
//      Необходим для заполнения физических лиц по сотрудникам
//      для добавления используется ДобавитьОписаниеХраненияСотрудниковФизическихЛиц.
//
Функция НовоеОписаниеСоставаОбъекта() Экспорт
	
	ОписаниеСостава = Новый Структура;
	ОписаниеСостава.Вставить("ИмяРеквизитаКраткийСостав", "КраткийСоставДокумента");
	ОписаниеСостава.Вставить("ИмяТабличнойЧастиФизическиеЛица", "ФизическиеЛица");
	ОписаниеСостава.Вставить("ЗаполнятьТабличнуюЧастьФизическиеЛицаДокумента", Истина);
	ОписаниеСостава.Вставить("ИспользоватьКраткийСостав", Истина);
	ОписаниеСостава.Вставить("ЗаполнятьСоставДокументов", Истина);
	ОписаниеСостава.Вставить("ЗаполнятьФизическиеЛицаПоСотрудникам", Истина);
	ОписаниеСостава.Вставить("ИспользоватьОграничениеДоступа", Истина);
	
	ОписаниеХраненияСотрудниковФизическихЛиц = Новый Массив;
	ОписаниеСостава.Вставить("ОписаниеХраненияСотрудниковФизическихЛиц", ОписаниеХраненияСотрудниковФизическихЛиц);
	
	ОписаниеЗаполненияФизическихЛицПоСотрудникам = Новый Массив;
	ОписаниеСостава.Вставить("ОписаниеЗаполненияФизическихЛицПоСотрудникам", ОписаниеЗаполненияФизическихЛицПоСотрудникам);
	
	Возврат ОписаниеСостава;
	
КонецФункции

// Возвращает описание хранения сотрудников и физических лиц объекта.
//
// Возвращаемое значение
//  Структура - список параметров хранения сотрудников и физических лиц документа
//   * ИмяТаблицы             - Строка - имя таблицы с сотрудниками и/или физическими лицами, если данные в шапке,
//                                       указывать Неопределено
//   * ПолеФизическоеЛицо     - Строка - имя поля физическое лицо, если отсутствует, указываем Неопределено
//   * ПолеСотрудник          - Строка - имя поля сотрудник, если отсутствует, указываем Неопределено
//   * ВключатьВКраткийСостав - Булево - включать ли физическое лицо в краткий состав документа.
//
Функция ОписаниеХраненияСотрудниковФизическихЛиц() Экспорт
	
	ОписаниеХраненияСотрудниковФизическихЛиц = Новый Структура;
	ОписаниеХраненияСотрудниковФизическихЛиц.Вставить("ИмяТаблицы");
	ОписаниеХраненияСотрудниковФизическихЛиц.Вставить("ПолеФизическоеЛицо", "ФизическоеЛицо");
	ОписаниеХраненияСотрудниковФизическихЛиц.Вставить("ПолеСотрудник", "Сотрудник");
	ОписаниеХраненияСотрудниковФизическихЛиц.Вставить("ВключатьВКраткийСостав", Истина);
	
	Возврат ОписаниеХраненияСотрудниковФизическихЛиц;
	
КонецФункции

// Добавляет в массив описание хранения сотрудников физических лиц.
//
// Параметры:
//			МассивОписаний     - Массив - содержит структуры со свойствами см. НовоеОписаниеСоставаОбъекта.
//			ИмяТаблицы         - Строка - имя таблицы, хранящей сотрудников и/или физические лица
//			ПолеФизическоеЛицо - Строка - имя реквизита ФизическоеЛицо.
//			ПолеСотрудник      - Строка - имя реквизита Сотрудник.
//
Процедура ДобавитьОписаниеХраненияСотрудниковФизическихЛиц(МассивОписаний, ИмяТаблицы = Неопределено, ПолеФизическоеЛицо = Неопределено, ПолеСотрудник = Неопределено) Экспорт
	
	ОписаниеЗаполнения = ОписаниеХраненияСотрудниковФизическихЛиц();
	ОписаниеЗаполнения.ИмяТаблицы = ИмяТаблицы;
	ОписаниеЗаполнения.ПолеФизическоеЛицо = ?(ЗначениеЗаполнено(ПолеФизическоеЛицо), ПолеФизическоеЛицо, Неопределено);
	ОписаниеЗаполнения.ПолеСотрудник      = ?(ЗначениеЗаполнено(ПолеСотрудник),      ПолеСотрудник,      Неопределено);
	МассивОписаний.Добавить(ОписаниеЗаполнения);
	
КонецПроцедуры

// Возвращает описание состава документа, в случае хранения физических лиц в табличных частях.
//
// Возвращаемое значение
//  Структура - см. НовоеОписаниеСоставаОбъекта.
//
Функция ОписаниеСоставаОбъектаФизическоеЛицоВШапке(ИмяРеквизитаФизическоеЛицо = "ФизическоеЛицо", ИмяРеквизитаСотрудник = "Сотрудник") Экспорт
	ОписаниеСостава = НовоеОписаниеСоставаОбъекта();
	ОписаниеСостава.ИспользоватьКраткийСостав = Ложь;
	ОписаниеСостава.ЗаполнятьТабличнуюЧастьФизическиеЛицаДокумента = Ложь;
	
	ДобавитьОписаниеХраненияСотрудниковФизическихЛиц(
		ОписаниеСостава.ОписаниеХраненияСотрудниковФизическихЛиц,
		,
		ИмяРеквизитаФизическоеЛицо,
		ИмяРеквизитаСотрудник);
	
	ОписаниеСостава.ЗаполнятьФизическиеЛицаПоСотрудникам = ЗначениеЗаполнено(ИмяРеквизитаСотрудник) И ЗначениеЗаполнено(ИмяРеквизитаФизическоеЛицо);
	Если ОписаниеСостава.ЗаполнятьФизическиеЛицаПоСотрудникам Тогда
		
		ДобавитьОписаниеХраненияСотрудниковФизическихЛиц(
			ОписаниеСостава.ОписаниеЗаполненияФизическихЛицПоСотрудникам,
			,
			ИмяРеквизитаФизическоеЛицо,
			ИмяРеквизитаСотрудник);
		
	КонецЕсли;
	
	Возврат ОписаниеСостава;
КонецФункции

// Возвращает описание состава объекта по метаданным, в случае хранения физических лиц в табличных частях.
//
// Возвращаемое значение
//  Структура - см. НовоеОписаниеСоставаОбъекта.
//
Функция ОписаниеСоставаОбъектаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеОбъекта) Экспорт
	
	ИспользоватьКраткийСостав = МетаданныеОбъекта.Реквизиты.Найти("КраткийСоставДокумента") <> Неопределено;
	ЗаполнятьТабличнуюЧастьФизическиеЛицаДокумента = МетаданныеОбъекта.ТабличныеЧасти.Найти("ФизическиеЛица") <> Неопределено;
	
	ОписаниеСостава = НовоеОписаниеСоставаОбъекта();
	ОписаниеСостава.ИспользоватьКраткийСостав = ИспользоватьКраткийСостав;
	ОписаниеСостава.ЗаполнятьТабличнуюЧастьФизическиеЛицаДокумента = ЗаполнятьТабличнуюЧастьФизическиеЛицаДокумента;
	ОписаниеСостава.ЗаполнятьФизическиеЛицаПоСотрудникам = Ложь;
	
	Для Каждого ТабличнаяЧасть Из МетаданныеОбъекта.ТабличныеЧасти Цикл
		
		Если ТабличнаяЧасть.Имя = "ФизическиеЛица" 
			Или ЗарплатаКадрыОбщиеНаборыДанных.ИмяНеИспользуется(ТабличнаяЧасть.Имя) Тогда
			Продолжить;
		КонецЕсли;
		
		ПолеСотрудник = Неопределено;
		ПолеФизическоеЛицо = Неопределено;
		Для Каждого Реквизит Из ТабличнаяЧасть.Реквизиты Цикл
			Если ЗарплатаКадрыОбщиеНаборыДанных.ИмяНеИспользуется(Реквизит.Имя) Тогда
				Продолжить;
			КонецЕсли;
			
			Типы = Реквизит.Тип.Типы();
			Если Типы[0] = Тип("СправочникСсылка.Сотрудники")
				И Типы.Количество() = 1
				И ПолеСотрудник = Неопределено Тогда
				
				ПолеСотрудник = Реквизит.Имя;
			ИначеЕсли Типы[0] = Тип("СправочникСсылка.ФизическиеЛица")
				И Типы.Количество() = 1
				И ПолеФизическоеЛицо = Неопределено Тогда
				
				ПолеФизическоеЛицо = Реквизит.Имя;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ПолеСотрудник <> Неопределено
			Или ПолеФизическоеЛицо <> Неопределено Тогда
			
			ОписаниеЗаполнения = ОписаниеХраненияСотрудниковФизическихЛиц();
			ОписаниеЗаполнения.ИмяТаблицы = ТабличнаяЧасть.Имя;
			ОписаниеЗаполнения.ПолеСотрудник = ПолеСотрудник;
			ОписаниеЗаполнения.ПолеФизическоеЛицо = ПолеФизическоеЛицо;
			
			Если ИспользоватьКраткийСостав
				И ТабличнаяЧасть.Имя = "НачисленияПерерасчет" Тогда
				
				ОписаниеЗаполнения.ВключатьВКраткийСостав = Ложь;
			КонецЕсли;
			
			ОписаниеСостава.ОписаниеХраненияСотрудниковФизическихЛиц.Добавить(ОписаниеЗаполнения);
			
			Если Не ЗаполнятьТабличнуюЧастьФизическиеЛицаДокумента 
				И ПолеФизическоеЛицо <> Неопределено 
				И ПолеСотрудник <> Неопределено Тогда
				
				ОписаниеСостава.ЗаполнятьФизическиеЛицаПоСотрудникам = Истина;
				ОписаниеЗаполнения = ОписаниеХраненияСотрудниковФизическихЛиц();
				ОписаниеЗаполнения.ИмяТаблицы = ТабличнаяЧасть.Имя;
				ОписаниеЗаполнения.ПолеСотрудник = ПолеСотрудник;
				ОписаниеЗаполнения.ПолеФизическоеЛицо = ПолеФизическоеЛицо;
				ОписаниеСостава.ОписаниеЗаполненияФизическихЛицПоСотрудникам.Добавить(ОписаниеЗаполнения);
				
			КонецЕсли;
			
		КонецЕсли;

	КонецЦикла;
		
	Возврат ОписаниеСостава;
	
КонецФункции

// Возвращает сотрудников и физических лиц объекта
//
// Параметры:
//			Источник          - Объект, Ссылка.
//			ОписаниеИсточника - Структура - см. НовоеОписаниеСоставаОбъекта
//
// Возвращаемое значение
//  Структура - состав объекта.
//   * ФизическиеЛица           - Массив - физические лица объекта
//   * СотрудникиФизическиеЛица - Таблица значений - коллекция сотрудников, физических лиц объекта
//
Функция СоставОбъекта(Источник, ОписаниеИсточника = Неопределено) Экспорт
	
	Если ОписаниеИсточника = Неопределено Тогда
		ОписаниеИсточника = ОписаниеОбъектаПоИсточнику(Источник);
		Если ОписаниеИсточника = Неопределено Тогда
			ВызватьИсключение НСтр("ru = 'Отсутствует описание объекта.'");
		КонецЕсли;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЗначениеСсылочногоТипа(Источник) Тогда
		Возврат СоставОбъектаСсылки(Источник, ОписаниеИсточника);
	КонецЕсли;
	
	СоставОбъекта = Новый Структура("ФизическиеЛица, СотрудникиФизическиеЛица");
	Если Источник.ДополнительныеСвойства.Свойство("СоставОбъекта_ФизическиеЛица", СоставОбъекта.ФизическиеЛица)
		И Источник.ДополнительныеСвойства.Свойство("СоставОбъекта_СотрудникиФизическиеЛица", СоставОбъекта.СотрудникиФизическиеЛица) Тогда
		
		Возврат СоставОбъекта;
	КонецЕсли;
	
	СоставОбъекта.СотрудникиФизическиеЛица = СотрудникиФизическиеЛица(Источник, ОписаниеИсточника);
	СоставОбъекта.ФизическиеЛица = ОбщегоНазначения.ВыгрузитьКолонку(СоставОбъекта.СотрудникиФизическиеЛица, "ФизическоеЛицо", Истина);
	
	Источник.ДополнительныеСвойства.Вставить("СоставОбъекта_ФизическиеЛица", СоставОбъекта.ФизическиеЛица);
	Источник.ДополнительныеСвойства.Вставить("СоставОбъекта_СотрудникиФизическиеЛица", СоставОбъекта.СотрудникиФизическиеЛица);
		
	Возврат СоставОбъекта;
	
КонецФункции

// Возвращает сотрудников и физических лиц объекта
//
// Параметры:
//			Источник          - Ссылка.
//			ОписаниеИсточника - Структура - см. НовоеОписаниеСоставаОбъекта
//
// Возвращаемое значение
//  Структура - состав объекта.
//   * ФизическиеЛица           - Массив - физические лица объекта
//   * СотрудникиФизическиеЛица - Таблица значений - коллекция сотрудников, физических лиц объекта
//
Функция СоставОбъектаСсылки(Источник, ОписаниеИсточника) Экспорт
	
	СоставОбъекта = Новый Структура("ФизическиеЛица, СотрудникиФизическиеЛица");
	ПолноеИмяОбъекта = Источник.Метаданные().ПолноеИмя();
	ЧастиЗапроса = ЧастиЗапросаПоТаблицамДокумента(ПолноеИмяОбъекта, ОписаниеИсточника);
	РазделительЗапроса = Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС;
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(ЧастиЗапроса, РазделительЗапроса);
	Запрос.УстановитьПараметр("МассивОбъектов", Источник);
	
	СоставОбъекта.СотрудникиФизическиеЛица = Запрос.Выполнить().Выгрузить();
	СоставОбъекта.ФизическиеЛица = ОбщегоНазначения.ВыгрузитьКолонку(СоставОбъекта.СотрудникиФизическиеЛица, "ФизическоеЛицо", Истина);
	
	Возврат СоставОбъекта;
	
КонецФункции

#Область ОбновлениеИнформационнойБазы

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.8.45";
	Обработчик.Процедура = "ЗарплатаКадрыСоставДокументов.ЗаполнитьДатыДокументов";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("940f56be-270a-469f-b1b5-00d0611ece2a");
	Обработчик.Комментарий = НСтр("ru='Заполняет даты документов для состава документов'");
	
КонецПроцедуры

#КонецОбласти

Функция ДокументыФизическихЛиц(МассивФизическихЛиц, ОбъектыМетаданных = Неопределено) Экспорт
	
	Запрос = ЗапросДокументыФизическихЛиц(МассивФизическихЛиц, ОбъектыМетаданных);
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ДокументыСотрудников(МассивСотрудников, ОбъектыМетаданных = Неопределено) Экспорт
	
	Запрос = ЗапросДокументыСотрудников(МассивСотрудников, ОбъектыМетаданных);
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ФизическиеЛицаДокументов(МассивДокументов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДокументФизическогоЛица КАК Документ,
		|	ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	РегистрСведений.ФизическиеЛицаДокументов
		|ГДЕ
		|	ДокументФизическогоЛица В (&МассивДокументов)";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ОписаниеОбъектаПоИсточнику(Источник) Экспорт
	
	МетаданныеОбъекта = Источник.Метаданные();
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(МетаданныеОбъекта.ПолноеИмя());
	Возврат МенеджерОбъекта.ОписаниеСоставаОбъекта();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СотрудникиФизическиеЛица(Источник, ОписаниеИсточника) Экспорт
	
	СотрудникиФизическиеЛица = Новый ТаблицаЗначений;
	СотрудникиФизическиеЛица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	СотрудникиФизическиеЛица.Колонки.Добавить("ГоловнойСотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	СотрудникиФизическиеЛица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	СотрудникиФизическиеЛица.Колонки.Добавить("ВключатьВКраткийСостав", Новый ОписаниеТипов("Булево"));
	
	Для Каждого ОписаниеХраненияСотрудниковФизическихЛиц Из ОписаниеИсточника.ОписаниеХраненияСотрудниковФизическихЛиц Цикл
		
		ИмяТаблицы = ОписаниеХраненияСотрудниковФизическихЛиц.ИмяТаблицы;
		
		Если ИмяТаблицы <> Неопределено Тогда
			ЗаполнитьТаблицуСоставаИзТабличнойЧасти(СотрудникиФизическиеЛица, Источник, ОписаниеХраненияСотрудниковФизическихЛиц);
		Иначе
			ЗаполнитьТаблицуСоставаИзШапки(СотрудникиФизическиеЛица, Источник, ОписаниеХраненияСотрудниковФизическихЛиц);
		КонецЕсли;
	КонецЦикла;
	
	СотрудникиДокумента = Новый Массив;
	Для Каждого СтрокаТаблицы Из СотрудникиФизическиеЛица Цикл
		Если ЗначениеЗаполнено(СтрокаТаблицы.Сотрудник) Тогда
			СотрудникиДокумента.Добавить(СтрокаТаблицы.Сотрудник);
		КонецЕсли;
	КонецЦикла;
	РеквизитыСотрудников = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(СотрудникиДокумента, "ФизическоеЛицо, ГоловнойСотрудник");
	
	Для Каждого СтрокаТаблицы Из СотрудникиФизическиеЛица Цикл
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Сотрудник) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ОбщегоНазначения.СсылкаСуществует(СтрокаТаблицы.Сотрудник) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначенияРеквизитовСотрудника = РеквизитыСотрудников[СтрокаТаблицы.Сотрудник];
		СтрокаТаблицы.ГоловнойСотрудник = ЗначенияРеквизитовСотрудника.ГоловнойСотрудник;
		Если ЗначениеЗаполнено(ЗначенияРеквизитовСотрудника.ФизическоеЛицо) Тогда
			СтрокаТаблицы.ФизическоеЛицо = ЗначенияРеквизитовСотрудника.ФизическоеЛицо;
		КонецЕсли;
	КонецЦикла;
	
	СотрудникиФизическиеЛица.Свернуть("ФизическоеЛицо,ГоловнойСотрудник,Сотрудник,ВключатьВКраткийСостав");
	
	Возврат СотрудникиФизическиеЛица;
	
КонецФункции

Процедура ЗаполнитьТаблицуСоставаИзТабличнойЧасти(СотрудникиФизическиеЛица, Источник, ОписаниеХраненияСотрудниковФизическихЛиц)
	
	ИмяТаблицы = ОписаниеХраненияСотрудниковФизическихЛиц.ИмяТаблицы;
	
	Для Каждого СтрокаТаблицы Из Источник[ИмяТаблицы] Цикл
		ЗаполнитьТаблицуПоСтрокеОписания(СотрудникиФизическиеЛица, СтрокаТаблицы, ОписаниеХраненияСотрудниковФизическихЛиц);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуСоставаИзШапки(СотрудникиФизическиеЛица, Источник, ОписаниеХраненияСотрудниковФизическихЛиц)
	
	ЗаполнитьТаблицуПоСтрокеОписания(СотрудникиФизическиеЛица, Источник, ОписаниеХраненияСотрудниковФизическихЛиц);
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуПоСтрокеОписания(СотрудникиФизическиеЛица, ИсточникЗаполнения, ОписаниеХраненияСотрудниковФизическихЛиц)
	
	ПолеСотрудник = ОписаниеХраненияСотрудниковФизическихЛиц.ПолеСотрудник;
	ПолеФизическоеЛицо = ОписаниеХраненияСотрудниковФизическихЛиц.ПолеФизическоеЛицо;
	ВключатьВКраткийСостав = ОписаниеХраненияСотрудниковФизическихЛиц.ВключатьВКраткийСостав;
	
	Если ПолеСотрудник <> Неопределено
		И ТипЗнч(ИсточникЗаполнения[ПолеСотрудник]) <> Тип("СправочникСсылка.Сотрудники") Тогда
		
		Возврат;
	КонецЕсли;
	
	НоваяСтрока = СотрудникиФизическиеЛица.Добавить();
	НоваяСтрока.ВключатьВКраткийСостав = ВключатьВКраткийСостав;
	
	Если ПолеФизическоеЛицо <> Неопределено Тогда
		НоваяСтрока.ФизическоеЛицо = ИсточникЗаполнения[ПолеФизическоеЛицо];
	КонецЕсли;
	
	Если ПолеСотрудник <> Неопределено Тогда
		НоваяСтрока.Сотрудник = ИсточникЗаполнения[ПолеСотрудник];
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьКраткийСоставДокумента(Источник, ОписаниеДокумента, СотрудникиФизическиеЛица) Экспорт
	
	ФизическиеЛица = Новый Массив;
	Для Каждого СтрокаТаблица Из СотрудникиФизическиеЛица Цикл
		Если СтрокаТаблица.ВключатьВКраткийСостав Тогда
			ФизическиеЛица.Добавить(СтрокаТаблица.ФизическоеЛицо);
		КонецЕсли;
	КонецЦикла;
	
	ИмяРеквизитаКраткийСостав = ОписаниеДокумента.ИмяРеквизитаКраткийСостав;
	Источник[ИмяРеквизитаКраткийСостав] = Неопределено;
	
	УстановитьПривилегированныйРежим(Истина);
	Источник[ИмяРеквизитаКраткийСостав] = ЗарплатаКадры.КраткийСоставСотрудниковПоСпискуФизическихЛиц(ФизическиеЛица, Источник.Дата);
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьРегистрСоставДокументовЗарплатаКадры(Источник, СотрудникиФизическиеЛица, ДатаДокумента) Экспорт
	
	СотрудникиФизическиеЛицаДокумента = СотрудникиФизическиеЛица.Скопировать();
	СотрудникиФизическиеЛицаДокумента.Свернуть("Сотрудник, ГоловнойСотрудник, ФизическоеЛицо");
	НаборЗаписей = РегистрыСведений.СоставДокументовЗарплатаКадры.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДокументФизическогоЛица.Установить(Источник);
	Для Каждого СотрудникФизическоеЛицо Из СотрудникиФизическиеЛицаДокумента Цикл
		Если Не ЗначениеЗаполнено(СотрудникФизическоеЛицо.ФизическоеЛицо)
			И Не ЗначениеЗаполнено(СотрудникФизическоеЛицо.Сотрудник) Тогда
			
			Продолжить;
		КонецЕсли;
		НоваяСтрока = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СотрудникФизическоеЛицо);
		НоваяСтрока.ДокументФизическогоЛица = Источник;
		НоваяСтрока.ДатаДокумента = ДатаДокумента;
	КонецЦикла;
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьФизическиеЛицаДокумента(Источник, ОписаниеДокумента, ФизическиеЛица) Экспорт
	
	ИмяТаблицы = ОписаниеДокумента.ИмяТабличнойЧастиФизическиеЛица;
	ТабличнаяЧастьФизическиеЛица = Источник[ИмяТаблицы];
	ТабличнаяЧастьФизическиеЛица.Очистить();
	
	Для Каждого ФизическоеЛицо Из ФизическиеЛица Цикл
		Если Не ЗначениеЗаполнено(ФизическоеЛицо) Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = ТабличнаяЧастьФизическиеЛица.Добавить();
		НоваяСтрока.ФизическоеЛицо = ФизическоеЛицо;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьФизическиеЛицаПоСотрудникамВДокументе(Источник, ОписаниеДокумента) Экспорт
	
	СотрудникиДокумента = Новый Массив;
	Для Каждого ОписаниеЗаполнения Из ОписаниеДокумента.ОписаниеЗаполненияФизическихЛицПоСотрудникам Цикл
		
		ИмяТаблицы = ОписаниеЗаполнения.ИмяТаблицы;
		ПолеСотрудник = ОписаниеЗаполнения.ПолеСотрудник;
		ПолеФизическоеЛицо = ОписаниеЗаполнения.ПолеФизическоеЛицо;
		
		Если ИмяТаблицы <> Неопределено Тогда
			Для Каждого СтрокаТаблицы Из Источник[ИмяТаблицы] Цикл
				Если ЗначениеЗаполнено(СтрокаТаблицы[ПолеСотрудник]) 
					И ТипЗнч(СтрокаТаблицы[ПолеСотрудник]) = Тип("СправочникСсылка.Сотрудники") Тогда
					
					СотрудникиДокумента.Добавить(СтрокаТаблицы[ПолеСотрудник]);
				КонецЕсли;
			КонецЦикла;
		Иначе
			Если ЗначениеЗаполнено(Источник[ПолеСотрудник]) 
				И ТипЗнч(Источник[ПолеСотрудник]) = Тип("СправочникСсылка.Сотрудники") Тогда
				
				СотрудникиДокумента.Добавить(Источник[ПолеСотрудник]);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	ФизическиеЛицаСотрудников = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(СотрудникиДокумента, "ФизическоеЛицо");
	
	Для Каждого ОписаниеЗаполнения Из ОписаниеДокумента.ОписаниеЗаполненияФизическихЛицПоСотрудникам Цикл
		
		ИмяТаблицы = ОписаниеЗаполнения.ИмяТаблицы;
		ПолеСотрудник = ОписаниеЗаполнения.ПолеСотрудник;
		ПолеФизическоеЛицо = ОписаниеЗаполнения.ПолеФизическоеЛицо;
		
		Если ИмяТаблицы <> Неопределено Тогда
			Для Каждого СтрокаТаблицы Из Источник[ИмяТаблицы] Цикл
				Если ЗначениеЗаполнено(СтрокаТаблицы[ПолеСотрудник]) 
					И ТипЗнч(СтрокаТаблицы[ПолеСотрудник]) = Тип("СправочникСсылка.Сотрудники") Тогда
					
					СтрокаТаблицы[ПолеФизическоеЛицо] = ФизическиеЛицаСотрудников[СтрокаТаблицы[ПолеСотрудник]];
				КонецЕсли;
			КонецЦикла;
		Иначе
			Если ЗначениеЗаполнено(Источник[ПолеСотрудник])
				И ТипЗнч(Источник[ПолеСотрудник]) = Тип("СправочникСсылка.Сотрудники") Тогда
				
				Источник[ПолеФизическоеЛицо] = ФизическиеЛицаСотрудников[Источник[ПолеСотрудник]];
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРегистрФизическиеЛицаДокументов(Источник, ФизическиеЛица) Экспорт
	
	НаборЗаписей = РегистрыСведений.ФизическиеЛицаДокументов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДокументФизическогоЛица.Установить(Источник);
	Для Каждого ФизическоеЛицо Из ФизическиеЛица Цикл
		Если Не ЗначениеЗаполнено(ФизическоеЛицо) Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = НаборЗаписей.Добавить();
		НоваяСтрока.ФизическоеЛицо = ФизическоеЛицо;
		НоваяСтрока.ДокументФизическогоЛица = Источник;
	КонецЦикла;
	НаборЗаписей.Записать();
	
КонецПроцедуры

Функция ЧастиЗапросаПоТаблицамДокумента(ИмяОбъекта, ОписаниеИсточника)
	
	ТекстШаблонаЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаДокумент.Ссылка КАК ДокументФизическогоЛица,
		|	_ПолеСотрудник КАК Сотрудник,
		|	_ПолеГоловнойСотрудник КАК ГоловнойСотрудник,
		|	_ПолеФизическоеЛицо КАК ФизическоеЛицо,
		|	_ЗаполнятьСоставДокументов КАК ЗаполнятьСоставДокументов,
		|	_ИспользоватьОграничениеДоступа КАК ИспользоватьОграничениеДоступа
		|ИЗ
		|	#ТаблицаДокумент КАК ТаблицаДокумент
		|ГДЕ
		|	ТаблицаДокумент.Ссылка В (&МассивОбъектов)";
	
	Возврат ЧастиЗапросаПоШаблонуОписаниюДокумента(ТекстШаблонаЗапроса, ИмяОбъекта, ОписаниеИсточника);
	
КонецФункции

Функция ЧастиЗапросаПоШаблонуОписаниюДокумента(ШаблонЧастиЗапроса, ИмяОбъекта, ОписаниеИсточника)
	
	ЧастиЗапроса = Новый Массив;
	Для Каждого ОписаниеСостава Из ОписаниеИсточника.ОписаниеХраненияСотрудниковФизическихЛиц Цикл
		
		ТекстЧастиЗапроса = ШаблонЧастиЗапроса;
		ИмяТаблицыОбъекта = ИмяОбъекта;
		Если ОписаниеСостава.ИмяТаблицы <> Неопределено Тогда
			ИмяТаблицыОбъекта = ИмяТаблицыОбъекта + "." + ОписаниеСостава.ИмяТаблицы;
		КонецЕсли;
		ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "#ТаблицаДокумент", ИмяТаблицыОбъекта);
		
		Если ОписаниеСостава.ПолеФизическоеЛицо <> Неопределено Тогда
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ПолеФизическоеЛицо", "ТаблицаДокумент." + ОписаниеСостава.ПолеФизическоеЛицо);
		ИначеЕсли ОписаниеСостава.ПолеСотрудник <> Неопределено Тогда
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ПолеФизическоеЛицо", "ТаблицаДокумент." + ОписаниеСостава.ПолеСотрудник + ".ФизическоеЛицо");
		Иначе
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ПолеФизическоеЛицо", "НЕОПРЕДЕЛЕНО");
		КонецЕсли;
		
		Если ОписаниеСостава.ПолеСотрудник <> Неопределено Тогда
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ПолеСотрудник", "ТаблицаДокумент." + ОписаниеСостава.ПолеСотрудник);
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ПолеГоловнойСотрудник", "ТаблицаДокумент." + ОписаниеСостава.ПолеСотрудник + ".ГоловнойСотрудник");
		Иначе
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ПолеСотрудник", "НЕОПРЕДЕЛЕНО");
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ПолеГоловнойСотрудник", "НЕОПРЕДЕЛЕНО");
		КонецЕсли;
		
		Если ОписаниеИсточника.ЗаполнятьСоставДокументов Тогда
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ЗаполнятьСоставДокументов", "ИСТИНА");
		Иначе
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ЗаполнятьСоставДокументов", "ЛОЖЬ");
		КонецЕсли;
		
		Если ОписаниеИсточника.ИспользоватьОграничениеДоступа Тогда
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ИспользоватьОграничениеДоступа", "ИСТИНА");
		Иначе
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ИспользоватьОграничениеДоступа", "ЛОЖЬ");
		КонецЕсли;
		
		ЧастиЗапроса.Добавить(ТекстЧастиЗапроса);
		
	КонецЦикла;
	
	Возврат ЧастиЗапроса;
	
КонецФункции

Функция ЗапросДокументыФизическихЛиц(МассивФизическихЛиц, ОбъектыМетаданных = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивФизическихЛиц", МассивФизическихЛиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФизическиеЛицаДокументов.ДокументФизическогоЛица КАК ДокументФизическогоЛица,
	|	ФизическиеЛицаДокументов.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	РегистрСведений.ФизическиеЛицаДокументов КАК ФизическиеЛицаДокументов
	|ГДЕ
	|	ФизическиеЛицаДокументов.ФизическоеЛицо В(&МассивФизическихЛиц)";
	
	Если ОбъектыМетаданных <> Неопределено Тогда
		МассивУсловий = Новый Массив;
		Для Каждого ОбъектМетаданных Из ОбъектыМетаданных Цикл
			МассивУсловий.Добавить("ФизическиеЛицаДокументов.ДокументФизическогоЛица Ссылка " + ОбъектМетаданных.ПолноеИмя());
		КонецЦикла;
		УсловиеЗапроса = СтрСоединить(МассивУсловий, Символы.ПС + "		ИЛИ ");
		Запрос.Текст = Запрос.Текст + Символы.ПС + "	И (" + УсловиеЗапроса + ")";
	КонецЕсли;
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросДокументыСотрудников(МассивСотрудников, ОбъектыМетаданных = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСотрудников", МассивСотрудников);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоставДокументовЗарплатаКадры.ДокументФизическогоЛица КАК ДокументСотрудника,
	|	СоставДокументовЗарплатаКадры.Сотрудник КАК Сотрудник
	|ИЗ
	|	РегистрСведений.СоставДокументовЗарплатаКадры КАК СоставДокументовЗарплатаКадры
	|ГДЕ
	|	СоставДокументовЗарплатаКадры.Сотрудник В(&МассивСотрудников)";
	
	Если ОбъектыМетаданных <> Неопределено Тогда
		МассивУсловий = Новый Массив;
		Для Каждого ОбъектМетаданных Из ОбъектыМетаданных Цикл
			МассивУсловий.Добавить("СоставДокументовЗарплатаКадры.ДокументФизическогоЛица Ссылка " + ОбъектМетаданных.ПолноеИмя());
		КонецЦикла;
		УсловиеЗапроса = СтрСоединить(МассивУсловий, Символы.ПС + "		ИЛИ ");
		Запрос.Текст = Запрос.Текст + Символы.ПС + "	И (" + УсловиеЗапроса + ")";
	КонецЕсли;
	
	Возврат Запрос;
	
КонецФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗаполнитьДатыДокументов(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 100
	|	СоставДокументовЗарплатаКадры.ДокументФизическогоЛица КАК ДокументФизическогоЛица
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	РегистрСведений.СоставДокументовЗарплатаКадры КАК СоставДокументовЗарплатаКадры
	|ГДЕ
	|	СоставДокументовЗарплатаКадры.ДокументФизическогоЛица <> НЕОПРЕДЕЛЕНО
	|	И СоставДокументовЗарплатаКадры.ДатаДокумента = ДАТАВРЕМЯ(1, 1, 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоставДокументовЗарплатаКадры.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СоставДокументовЗарплатаКадры.ДокументФизическогоЛица КАК ДокументФизическогоЛица,
	|	СоставДокументовЗарплатаКадры.Сотрудник КАК Сотрудник,
	|	СоставДокументовЗарплатаКадры.ГоловнойСотрудник КАК ГоловнойСотрудник
	|ИЗ
	|	РегистрСведений.СоставДокументовЗарплатаКадры КАК СоставДокументовЗарплатаКадры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументы КАК Документы
	|		ПО (Документы.ДокументФизическогоЛица = СоставДокументовЗарплатаКадры.ДокументФизическогоЛица)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СоставДокументовЗарплатаКадры.ДокументФизическогоЛица");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбработкаЗавершена = РезультатЗапроса.Пустой();
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", ОбработкаЗавершена);
	Если ОбработкаЗавершена Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ПорцияДокументов = Новый Массив;
	Пока Выборка.СледующийПоЗначениюПоля("ДокументФизическогоЛица") Цикл
		ПорцияДокументов.Добавить(Выборка.ДокументФизическогоЛица);
	КонецЦикла;
	Выборка.Сбросить();
	
 	ДатыДокументов = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ПорцияДокументов, "Дата");
	
	Пока Выборка.СледующийПоЗначениюПоля("ДокументФизическогоЛица") Цикл
		
		НаборЗаписей = РегистрыСведений.СоставДокументовЗарплатаКадры.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ДокументФизическогоЛица.Установить(Выборка.ДокументФизическогоЛица);		
		
		ДатаДокумента = ДатыДокументов.Получить(Выборка.ДокументФизическогоЛица);
		
		Если ДатаДокумента = Неопределено Или ДатаДокумента = '00010101' Тогда
			ДатаДокумента = '00010102';
		КонецЕсли;
		
		Пока Выборка.Следующий() Цикл
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			НоваяЗапись.ДатаДокумента = ДатаДокумента;
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
