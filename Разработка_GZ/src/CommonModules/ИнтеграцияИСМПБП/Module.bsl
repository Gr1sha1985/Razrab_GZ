#Область ПроверкаИПодборПродукции

// Предназначена для определения факта наличия в данных документа номенклатуры, являющейся маркируемой продукцией.
// 
// Параметры:
//  Коллекция                - ДанныеФормыКоллекция - состав номенклатуры документа
//  ВидМаркируемойПродукции  - ПеречислениеСсылка.ВидыПродукцииИС - вид продукции, наличие которой необходимо определить.
//  ЕстьМаркируемаяПродукция - Булево - признак наличия маркируемой продукции.
//
Процедура ЕстьМаркируемаяПродукцияВКоллекции(Коллекция, ВидМаркируемойПродукции, ЕстьМаркируемаяПродукция) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ
	|	ВремТаблТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЕстьМаркируемаяПродукция
	|ИЗ
	|	ВремТаблТовары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	&УсловиеМаркируемаяПродукция
	|";
	
	УстановитьУсловиеПоМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТаблицаТовары", Коллекция.Выгрузить(, "Номенклатура"));
	Результат = Запрос.Выполнить();
	
	ЕстьМаркируемаяПродукция = НЕ Результат.Пустой();
	
КонецПроцедуры

// Заполняет переданную таблицу товарами переданного документа, являющимися маркируемой продукцией требуемого вида.
// 
// Параметры:
//  Контекст - ФормаКлиентскогоПриложения, ДокументСсылка - документ, маркируемую продукцию которого необходимо получить.
//  ВидМаркируемойПродукции - ПеречислениеСсылка.ВидыПродукцииИС - вид маркируемой продукции, которую необходимо получить.
//  ТаблицаМаркируемойПродукции - ТаблицаЗначений - таблица маркируемой продукции документа. (См. ПроверкаИПодборПродукцииИСМП.ТаблицаМаркируемойПродукцииДокумента())
//
Процедура ЗаполнитьМаркируемуюПродукциюДокумента(Контекст, ВидМаркируемойПродукции, ТаблицаМаркируемойПродукции) Экспорт
	
	Если ТаблицаМаркируемойПродукции.Количество() > 0 Тогда
		РезультатЗапроса = ЗапросGTINпоТаблицеМаркируемойПродукции(ТаблицаМаркируемойПродукции);
		ТаблицаМаркируемойПродукции.Очистить();
	ИначеЕсли ЭтоДокументПоНаименованию(Контекст, "РеализацияТоваровУслуг") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииРеализацияТоваровУслуг(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ЭтоДокументПоНаименованию(Контекст, "ПоступлениеТоваровУслуг") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииПоступлениеТоваровУслуг(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ЭтоДокументПоНаименованию(Контекст, "ПриемкаТоваровИСМП") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииПриемкаТоваровИСМП(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ЭтоДокументПоНаименованию(Контекст, "ВозвратТоваровОтПокупателя") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииВозвратТоваровОтПокупателя(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ЭтоДокументПоНаименованию(Контекст, "ВозвратТоваровПоставщику") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииВозвратТоваровПоставщику(Контекст, ВидМаркируемойПродукции);
	//ИначеЕсли ЭтоДокументПоНаименованию(Контекст, "ЧекККМ")
	//	Или ЭтоДокументПоНаименованию(Контекст, "ЧекККМВозврат") Тогда
	//
	//ИначеЕсли ЭтоДокументПоНаименованию(Контекст, "КорректировкаРеализации") Тогда
	//
	Иначе
		Возврат;
	КонецЕсли;
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл
		ВыборкаХарактеристика = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаХарактеристика.Следующий() Цикл
			ПродукцияПоGTIN = ТаблицаМаркируемойПродукции.СкопироватьКолонки();
			ДлинаСтрокиGTIN = 0;
			
			ВыборкаGTIN = ВыборкаХарактеристика.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаGTIN.Следующий() Цикл
				Если ПродукцияПоGTIN.Количество() = 0 Тогда
					Выборка = ВыборкаGTIN.Выбрать();
					Пока Выборка.Следующий() Цикл
						ЗаполнитьЗначенияСвойств(ПродукцияПоGTIN.Добавить(), Выборка,, "GTIN");
					КонецЦикла;
				КонецЕсли;
				
				Если МенеджерОборудованияКлиентСервер.ПроверитьКорректностьGTIN(ВыборкаGTIN.GTIN)
					И СтрДлина(ВыборкаGTIN.GTIN) > ДлинаСтрокиGTIN Тогда
					ПродукцияПоGTIN.ЗаполнитьЗначения(ВыборкаGTIN.GTIN, "GTIN");
					ДлинаСтрокиGTIN = СтрДлина(ВыборкаGTIN.GTIN);
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого СтрокаПродукцииПоGTIN Из ПродукцияПоGTIN Цикл
				ЗаполнитьЗначенияСвойств(ТаблицаМаркируемойПродукции.Добавить(), СтрокаПродукцииПоGTIN);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Функция ЗапросGTINпоТаблицеМаркируемойПродукции(ТаблицаМаркируемойПродукции)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МаркируемаяПродукция.Номенклатура КАК Номенклатура,
	|	МаркируемаяПродукция.Характеристика КАК Характеристика,
	|	МаркируемаяПродукция.Серия КАК Серия,
	|	МаркируемаяПродукция.Количество КАК Количество
	|ПОМЕСТИТЬ ВТМаркируемаяПродукция
	|ИЗ
	|	&МаркируемаяПродукция КАК МаркируемаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ШтрихкодыНоменклатуры.Штрихкод) КАК Штрихкод
	|ПОМЕСТИТЬ ВТ_ШтрихкодыНоменклатуры
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМаркируемаяПродукция КАК ВТМаркируемаяПродукция
	|		ПО ШтрихкодыНоменклатуры.Номенклатура = ВТМаркируемаяПродукция.Номенклатура
	|ГДЕ
	|	НЕ ШтрихкодыНоменклатуры.Штрихкод ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ШтрихкодыНоменклатуры.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	МаркируемаяПродукция.Номенклатура КАК Номенклатура,
	|	МаркируемаяПродукция.Характеристика КАК Характеристика,
	|	МаркируемаяПродукция.Серия КАК Серия,
	|	МаркируемаяПродукция.Количество КАК Количество
	|ИЗ
	|	ВТМаркируемаяПродукция КАК МаркируемаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО МаркируемаяПродукция.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МаркируемаяПродукция", ТаблицаМаркируемойПродукции);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииПоступлениеТоваровУслуг(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	ПоступлениеТоваровУслугТовары.Номенклатура     КАК Номенклатура,
	|	""""                                           КАК Характеристика,
	|	""""                                           КАК Серия,
	|	ПоступлениеТоваровУслугТовары.Количество       КАК Количество
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ПоступлениеТоваровУслугТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО ПоступлениеТоваровУслугТовары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	УстановитьУсловиеПоМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииРеализацияТоваровУслуг(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	РеализацияТоваровУслугТовары.Номенклатура      КАК Номенклатура,
	|	""""                                           КАК Характеристика,
	|	""""                                           КАК Серия,
	|	РеализацияТоваровУслугТовары.Количество        КАК Количество
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО РеализацияТоваровУслугТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО РеализацияТоваровУслугТовары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	УстановитьУсловиеПоМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииВозвратТоваровОтПокупателя(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	ВозвратТоваровОтПокупателя.Номенклатура     КАК Номенклатура,
	|	""""                                        КАК Характеристика,
	|	""""                                        КАК Серия,
	|	ВозвратТоваровОтПокупателя.Количество       КАК Количество
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателя
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ВозвратТоваровОтПокупателя.Номенклатура = СправочникНоменклатура.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО ВозвратТоваровОтПокупателя.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|ГДЕ
	|	ВозвратТоваровОтПокупателя.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	УстановитьУсловиеПоМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииВозвратТоваровПоставщику(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	ВозвратТоваровПоставщику.Номенклатура      КАК Номенклатура,
	|	""""                                           КАК Характеристика,
	|	""""                                           КАК Серия,
	|	ВозвратТоваровПоставщику.Количество        КАК Количество
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщику
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ВозвратТоваровПоставщику.Номенклатура = СправочникНоменклатура.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО ВозвратТоваровПоставщику.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|ГДЕ
	|	ВозвратТоваровПоставщику.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	УстановитьУсловиеПоМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииПриемкаТоваровИСМП(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура КАК Номенклатура,
	|	"""" КАК Характеристика,
	|	"""" КАК Серия,
	|	Товары.Количество КАК Количество
	|ИЗ
	|	Документ.ПриемкаТоваровИСМП.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|ИТОГИ
	|ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN";
	
	УстановитьУсловиеПоМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	Возврат Запрос.Выполнить();
	
КонецФункции

#КонецОбласти

#Область ОбработкаЗаполнения

// Зполняет переданную таблицу данные из ТЧ документа.
// 
// Параметры:
//   Документ - ДокументСсылка - Документ из ТЧ которого будет происходить заполнение.
//   ТаблицаПродукции - ТаблицаЗначений - Таблица для заполнения данными из документа.
//   ВидыМаркируемойПродукции - ПеречислениеСсылка.ВидыПродукцииИС, Массив - вид(ы) маркируемой продукции, которым(и) необходимо заполнить таблицу.
//
Процедура СформироватьТаблицуМаркируемойПродукцииДокумента(Документ, ТаблицаПродукции, ВидыМаркируемойПродукции) Экспорт
	
	ТипДокумента = ТипЗнч(Документ);
	Если ТипДокумента = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
		Или ТипДокумента = Тип("ДокументСсылка.РеализацияТоваровУслуг")
		Или ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровПоставщику")
		Или ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")
		Или ТипДокумента = Тип("ДокументСсылка.СписаниеТоваров")
		Или ТипДокумента = Тип("ДокументСсылка.ИнвентаризацияТоваровНаСкладе")
		Или ТипДокумента = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		
		ТекстЗапроса = ТекстЗапросаМаркируемойПродукции(Документ);
		
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену") Тогда
		
		ТекстЗапроса = ТекстЗапросаМаркируемойПродукции(Документ, "Продукция");
		
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		
		ТекстЗапроса = ТекстЗапросаМаркируемойПродукции(Документ, "Возвраты");
		
	Иначе
		
		ВызватьИсключение НСтр("ru = 'Формирование таблицы маркируемой продукции указанного документа не определено'");
		
	КонецЕсли;
	
	УстановитьУсловиеПоМаркируемойПродукции(ТекстЗапроса, ВидыМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Документ", Документ);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаПродукции.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
КонецПроцедуры

// Заполняет таблицу маркированный товаров по выбранным документам. Требуется обеспечить формирование временной таблицы
//   "МаркированныеТоварыОснований" с колонками по порядку:
//   ДокументОснование,Номенклатура,Характеристика,Шаблон,СпособВводаВОборот,Количество.
// Текст запроса уже содержит выбираемые данные во временную таблицу "ТоварыПредварительно",
// поэтому должен начинаться с конструкции: ОБЪЕДИНИТЬ ВСЕ и для присоединения к существующему тексту запроса.
// Параметры:
//  Запрос - Запрос - запрос, в котором требуется сформировать временную таблицу.
//  ИсточникОснований - Строка - Имя временной таблицы с колонкой "ДокументОснование".
Процедура СформироватьТаблицуМаркированныхТоваровОснований(Запрос, ИсточникОснований) Экспорт
	
	ТекстЗапроса = "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыПредварительно.Ссылка             КАК ДокументОснование,
	|	ТоварыПредварительно.Организация        КАК Организация,
	|	ТоварыПредварительно.Номенклатура       КАК Номенклатура,
	|	ТоварыПредварительно.Характеристика     КАК Характеристика,
	|	ТоварыПредварительно.Шаблон             КАК Шаблон,
	|	ТоварыПредварительно.СпособВводаВОборот КАК СпособВводаВОборот,
	|	СУММА(ТоварыПредварительно.Количество)  КАК Количество
	|ПОМЕСТИТЬ МаркированныеТоварыОснований
	|ИЗ
	|	ТоварыПредварительно КАК ТоварыПредварительно
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|	ПО ТоварыПредварительно.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	СправочникНоменклатура.ОбувнаяПродукция
	|	ИЛИ СправочникНоменклатура.ТабачнаяПродукция
	|СГРУППИРОВАТЬ ПО
	|	ТоварыПредварительно.Ссылка,
	|	ТоварыПредварительно.Организация,
	|	ТоварыПредварительно.Номенклатура,
	|	ТоварыПредварительно.Характеристика,
	|	ТоварыПредварительно.Шаблон,
	|	ТоварыПредварительно.СпособВводаВОборот
	|";
	
	Запрос.Текст = Запрос.Текст + ТекстЗапроса;
	
КонецПроцедуры

Процедура ОбработкаЗаполненияДокументаВыводИзОборотаИСМП(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	ТипОснования = ОпределитьТипОснования(ДанныеЗаполнения);
	
	Если ТипОснования = Тип("ДокументСсылка.СписаниеТоваров") Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДокументСсылка.Ссылка           КАК ДокументОснование,
		|	ДокументСсылка.Организация      КАК Организация,
		|	НЕ ДокументСсылка.Проведен      КАК ЕстьОшибкиПроведен,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИСМП.ВыводИзОборотаУтратаПовреждениеТовара) КАК Операция,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПервичныхДокументовИСМП.Прочее)      КАК ВидПервичногоДокумента
		|ИЗ
		|	Документ.СписаниеТоваров КАК ДокументСсылка
		|ГДЕ
		|	ДокументСсылка.Ссылка = &ДокументОснование
		|");
		
		ЗаполнитьШапкуДокумента(ДокументОбъект, ДанныеЗаполнения, Запрос);
		ЗаполнитьТабличныеЧастиВыводаИзОборотаИСМП(ДокументОбъект, ДанныеЗаполнения, "СписаниеТоваров");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполненияДокументаМаркировкаТоваровИСМП(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	ТипОснования = ОпределитьТипОснования(ДанныеЗаполнения);
	
	Если ТипОснования = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену") Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДокументСсылка.Ссылка           КАК ДокументОснование,
		|	ДокументСсылка.Организация      КАК Организация,
		|	НЕ ДокументСсылка.Проведен      КАК ЕстьОшибкиПроведен
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену КАК ДокументСсылка
		|ГДЕ
		|	ДокументСсылка.Ссылка = &ДокументОснование
		|");
		
		ЗаполнитьШапкуДокумента(ДокументОбъект, ДанныеЗаполнения, Запрос);
		
		ФильтрВидПродукции = ?(ЗначениеЗаполнено(ДокументОбъект.ВидПродукции), ДокументОбъект.ВидПродукции, Неопределено);
		ТабличныеЧасти = Новый Массив;
		ТабличныеЧасти.Добавить(Новый Структура("Товары, Серии", "Продукция", ""));
		ЗаполнитьТабличныеЧастиМаркировкиТоваровИСМП(ДокументОбъект, ДанныеЗаполнения, "ОтчетПроизводстваЗаСмену", ТабличныеЧасти,
			, ФильтрВидПродукции);
		
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДокументСсылка.Ссылка           КАК ДокументОснование,
		|	ДокументСсылка.Организация      КАК Организация,
		|	НЕ ДокументСсылка.Проведен      КАК ЕстьОшибкиПроведен
		|ИЗ
		|	Документ.ОприходованиеТоваров КАК ДокументСсылка
		|ГДЕ
		|	ДокументСсылка.Ссылка = &ДокументОснование
		|");
		
		ЗаполнитьШапкуДокумента(ДокументОбъект, ДанныеЗаполнения, Запрос);
		
		ФильтрВидПродукции = ?(ЗначениеЗаполнено(ДокументОбъект.ВидПродукции), ДокументОбъект.ВидПродукции, Неопределено);
		ЗаполнитьТабличныеЧастиМаркировкиТоваровИСМП(ДокументОбъект, ДанныеЗаполнения, "ОприходованиеТоваров",
			,, ФильтрВидПродукции);
		
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ИнвентаризацияТоваровНаСкладе") Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДокументСсылка.Ссылка           КАК ДокументОснование,
		|	ДокументСсылка.Организация      КАК Организация,
		|	НЕ ДокументСсылка.Проведен      КАК ЕстьОшибкиПроведен
		|ИЗ
		|	Документ.ИнвентаризацияТоваровНаСкладе КАК ДокументСсылка
		|ГДЕ
		|	ДокументСсылка.Ссылка = &ДокументОснование
		|");
		
		ЗаполнитьШапкуДокумента(ДокументОбъект, ДанныеЗаполнения, Запрос);
		
		ФильтрВидПродукции = ?(ЗначениеЗаполнено(ДокументОбъект.ВидПродукции), ДокументОбъект.ВидПродукции, Неопределено);
		ЗаполнитьТабличныеЧастиМаркировкиТоваровИСМП(ДокументОбъект, ДанныеЗаполнения, "ИнвентаризацияТоваровНаСкладе", 
			,, ФильтрВидПродукции);
			
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПроизводственнаяОперацияВЕТИС") Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДокументСсылка.Ссылка           КАК ДокументОснование,
		|	НЕ ДокументСсылка.Проведен      КАК ЕстьОшибкиПроведен
		|ИЗ
		|	Документ.ПроизводственнаяОперацияВЕТИС КАК ДокументСсылка
		|ГДЕ
		|	ДокументСсылка.Ссылка = &ДокументОснование
		|");
		
		ЗаполнитьШапкуДокумента(ДокументОбъект, ДанныеЗаполнения, Запрос);
		
		ОрганизацияИзСопоставления = Неопределено;
		ИнтеграцияИСПереопределяемый.ПриОпределенииОрганизацииИзПрикладногоОбъекта(ОрганизацияИзСопоставления, ДанныеЗаполнения);
		
		Если ТипЗнч(ОрганизацияИзСопоставления) = Тип("СправочникСсылка.Организации") Тогда
			ДокументОбъект.Организация = ОрганизацияИзСопоставления;
		КонецЕсли;
		
		ФильтрВидПродукции = ?(ЗначениеЗаполнено(ДокументОбъект.ВидПродукции), ДокументОбъект.ВидПродукции, Неопределено);
		ЗаполнитьТабличныеЧастиМаркировкиТоваровИСМП(ДокументОбъект, ДанныеЗаполнения, "ПроизводственнаяОперацияВЕТИС", 
			,, ФильтрВидПродукции);
			
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ВходящаяТранспортнаяОперацияВЕТИС") Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДокументСсылка.Ссылка           КАК ДокументОснование,
		|	НЕ ДокументСсылка.Проведен      КАК ЕстьОшибкиПроведен
		|ИЗ
		|	Документ.ВходящаяТранспортнаяОперацияВЕТИС КАК ДокументСсылка
		|ГДЕ
		|	ДокументСсылка.Ссылка = &ДокументОснование
		|");
		
		ЗаполнитьШапкуДокумента(ДокументОбъект, ДанныеЗаполнения, Запрос);
		
		ОрганизацияИзСопоставления = Неопределено;
		ИнтеграцияИСПереопределяемый.ПриОпределенииОрганизацииИзПрикладногоОбъекта(ОрганизацияИзСопоставления, ДанныеЗаполнения);
		
		Если ТипЗнч(ОрганизацияИзСопоставления) = Тип("СправочникСсылка.Организации") Тогда
			ДокументОбъект.Организация = ОрганизацияИзСопоставления;
		КонецЕсли;
			
		ФильтрВидПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС;
		ДокументОбъект.ВидПродукции = ФильтрВидПродукции;
		ЗаполнитьТабличныеЧастиМаркировкиТоваровИСМП(ДокументОбъект, ДанныеЗаполнения, "ВходящаяТранспортнаяОперацияВЕТИС", 
			,, ФильтрВидПродукции);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполненияДокументаПеремаркировкаТоваровИСМП(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	ТипОснования = ОпределитьТипОснования(ДанныеЗаполнения);
	
	Если ТипОснования = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДокументСсылка.Ссылка           КАК ДокументОснование,
		|	ДокументСсылка.Организация      КАК Организация,
		|	НЕ ДокументСсылка.Проведен      КАК ЕстьОшибкиПроведен,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИСМП.Перемаркировка) КАК Операция
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя КАК ДокументСсылка
		|ГДЕ
		|	ДокументСсылка.Ссылка = &ДокументОснование
		|");
		
		ЗаполнитьШапкуДокумента(ДокументОбъект, ДанныеЗаполнения, Запрос);
		
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДокументСсылка.Ссылка           КАК ДокументОснование,
		|	ДокументСсылка.Организация      КАК Организация,
		|	НЕ ДокументСсылка.Проведен      КАК ЕстьОшибкиПроведен,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИСМП.Перемаркировка) КАК Операция
		|ИЗ
		|	Документ.ОтчетОРозничныхПродажах КАК ДокументСсылка
		|ГДЕ
		|	ДокументСсылка.Ссылка = &ДокументОснование
		|");
		
		ЗаполнитьШапкуДокумента(ДокументОбъект, ДанныеЗаполнения, Запрос);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполненияДокументаОтгрузкаТоваровИСМП(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	ТипОснования = ОпределитьТипОснования(ДанныеЗаполнения);
	
	Если ТипОснования = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДокументСсылка.Ссылка КАК ДокументОснование,
		|	ДокументСсылка.Организация КАК Организация,
		|	НЕ ДокументСсылка.Проведен КАК ЕстьОшибкиПроведен,
		|	ДокументСсылка.Контрагент КАК Контрагент,
		|	ДокументСсылка.Дата КАК ДатаПервичногоДокумента,
		|	ДокументСсылка.Дата КАК ДатаОтгрузки,
		|	ДокументСсылка.Номер КАК НомерПервичногоДокумента
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК ДокументСсылка
		|ГДЕ
		|	ДокументСсылка.Ссылка = &ДокументОснование");
		
		ЗаполнитьШапкуДокумента(ДокументОбъект, ДанныеЗаполнения, Запрос);
		ДокументОбъект.Операция = Перечисления.ВидыОперацийИСМП.ОтгрузкаПродажа;
		ДокументОбъект.НомерПервичногоДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДокументОбъект.НомерПервичногоДокумента, Истина, Ложь);
		ЗаполнитьТабличныеЧастиОтгрузкиТоваровИСМП(ДокументОбъект, ДанныеЗаполнения, "РеализацияТоваровУслуг", , Истина, Ложь);
		
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДокументСсылка.Ссылка           КАК ДокументОснование,
		|	ДокументСсылка.Организация      КАК Организация,
		|	НЕ ДокументСсылка.Проведен      КАК ЕстьОшибкиПроведен,
		|	ДокументСсылка.Контрагент КАК Контрагент,
		|	ДокументСсылка.Дата КАК ДатаПервичногоДокумента,
		|	ДокументСсылка.Дата КАК ДатаОтгрузки,
		|	ДокументСсылка.Номер КАК НомерПервичногоДокумента
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику КАК ДокументСсылка
		|ГДЕ
		|	ДокументСсылка.Ссылка = &ДокументОснование
		|");
		
		ЗаполнитьШапкуДокумента(ДокументОбъект, ДанныеЗаполнения, Запрос);
		ДокументОбъект.Операция = Перечисления.ВидыОперацийИСМП.ОтгрузкаПродажа;
		ДокументОбъект.НомерПервичногоДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДокументОбъект.НомерПервичногоДокумента, Истина, Ложь);
		ЗаполнитьТабличныеЧастиОтгрузкиТоваровИСМП(ДокументОбъект, ДанныеЗаполнения, "ВозвратТоваровПоставщику");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПечатьЭтикетокИСМП
// В данной процедуре определяется метод печати этикеток ИС МП
// 
// Параметры:
// 	ТаблицаДляПечати - Массив - Массив строк таблицы (см. РегистрыСведений.ПулКодовМаркировкиСУЗ.НоваяТаблицаДанныхДляПечатиЭтикеток)
// 	ТабличныйДокумент - ТабличныйДокумент - результат печати
// 	СтруктураНастроек - Структура - Дополнительне параметры для печати
// 	СтандартнаяОбработка - Булево - Признак использования бублиотечной печати
Процедура ПечатьЭтикетокИСМП(ТаблицаДляПечати, ТабличныйДокумент, СтруктураНастроек, СтандартнаяОбработка) Экспорт
	СтандартнаяОбработка = Ложь;
	
	ТабличныйДокумент.Очистить();
	
	СписокНоменклатурыПоШаблонам = РазобратьНоменклатуруПоШаблонам(ТаблицаДляПечати);
	Для каждого ЭлементСписка Из СписокНоменклатурыПоШаблонам Цикл
		
		МассивНоменклатуры = ЭлементСписка.Значение.ВыгрузитьКолонку("Номенклатура");
	
		ТабличныйДокументЭтикетка = Обработки.ПечатьЭтикеток.ТабличныйДокументЭтикетка(
			МассивНоменклатуры, 
			ЭлементСписка.Ключ, 
			ЭлементСписка.Значение, 
			СтруктураНастроек.КаждаяЭтикеткаНаНовомЛисте);
			
		Если ТабличныйДокумент.ВысотаТаблицы <> 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли; 
			
		ТабличныйДокумент.Вывести(ТабличныйДокументЭтикетка);
		
	КонецЦикла;
КонецПроцедуры

Функция ДанныеВСтрокуJSON(Данные)
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, Данные);
	
	Возврат ЗаписьJSON.Закрыть();
	
КонецФункции


Функция РазобратьНоменклатуруПоШаблонам(ТаблицаДляПечати)
	Результат = Новый Соответствие;
	
	Для каждого ОписаниеЭтикетки Из ТаблицаДляПечати Цикл
	
		Если Результат.Получить(ОписаниеЭтикетки.ШаблонЭтикетки) = Неопределено Тогда
			Результат.Вставить(ОписаниеЭтикетки.ШаблонЭтикетки, Обработки.ПечатьЭтикеток.НовыйШтрихкодыМаркируемойПродукции());
		КонецЕсли; 
		
		НоваяСтрока = Результат[ОписаниеЭтикетки.ШаблонЭтикетки].Добавить();
		
		НоваяСтрока.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		
		НоваяСтрока.Организация     = ОписаниеЭтикетки.Организация;
		НоваяСтрока.Номенклатура    = ОписаниеЭтикетки.Номенклатура;
		НоваяСтрока.Количество      = ОписаниеЭтикетки.Количество;
		НоваяСтрока.ТипШтрихкода    = ОписаниеЭтикетки.ТипШтрихкода;
		
		
		СтруктураШтрихкода  = Новый Структура;
		СтруктураШтрихкода.Вставить("Штрихкод",        ОписаниеЭтикетки.Штрихкод);
		СтруктураШтрихкода.Вставить("ШтрихкодВBase64", ОписаниеЭтикетки.ШтрихкодВBase64);
		СтруктураШтрихкода.Вставить("ТипШтрихкода",    ОбщегоНазначения.ИмяЗначенияПеречисления(ОписаниеЭтикетки.ТипШтрихкода));
		
		НоваяСтрока.Штрихкод        = ДанныеВСтрокуJSON(СтруктураШтрихкода);
		
		СоставКодаМаркировки = МенеджерОборудованияМаркировкаКлиентСервер.РазобратьШтриховойКодТовара(ОписаниеЭтикетки.КодМаркировки);
		
		Если СоставКодаМаркировки <> Неопределено Тогда
			НоваяСтрока.СерийныйНомер = СоставКодаМаркировки.СерийныйНомер;
			НоваяСтрока.GTIN          = СоставКодаМаркировки.GTIN;
		КонецЕсли; 
		
	КонецЦикла; 
	
	Возврат Результат;
КонецФункции 

Процедура ПодготовитьФормуПечатьЭтикетокИСМП(Форма) Экспорт
	НовыеПараметры = Новый Массив;
	НовыеПараметры.Добавить(Новый ПараметрВыбора("Отбор.МаркированнаяПродукция", Истина));
	
	Форма.Элементы.ДеревоАгрегированныхКодовШаблонПотребительскойЭтикетки.ПараметрыВыбора = Новый ФиксированныйМассив(НовыеПараметры);
	Форма.Элементы.СписокКодовМаркировкиШаблонЭтикетки.ПараметрыВыбора = Новый ФиксированныйМассив(НовыеПараметры);
	
	ДанныеЗаполнения = Новый Структура("ШаблонПотребительскойЭтикетки", Справочники.ХранилищеШаблонов.ШаблонЭтикеткаОбувь);
	ТабличныеЧасти = Новый Структура("ДеревоАгрегированныхКодов,СписокКодовМаркировки");
	
	ЗаполнитьЗначенияСвойств(ТабличныеЧасти, Форма);
	Для каждого ТабличнаяЧасть Из ТабличныеЧасти Цикл
		Если ТабличнаяЧасть.Значение <> Неопределено Тогда
			Если ТипЗнч(ТабличнаяЧасть.Значение) = Тип("ДанныеФормыДерево") Тогда
				ОбойтиДеревоРекурсивно(ТабличнаяЧасть.Значение, ДанныеЗаполнения);
			Иначе
				Для каждого СтрокаТаблицы Из ТабличнаяЧасть.Значение Цикл
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ДанныеЗаполнения);
				КонецЦикла;
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
 
Процедура ОбойтиДеревоРекурсивно(ДеревоЗначений, ДанныеЗаполнения)
	ЭлементыДерева = ДеревоЗначений.ПолучитьЭлементы();
	Для каждого ЭлементДерева Из ЭлементыДерева Цикл
		ЗаполнитьЗначенияСвойств(ЭлементДерева, ДанныеЗаполнения);
		ОбойтиДеревоРекурсивно(ЭлементДерева, ДанныеЗаполнения);
	КонецЦикла; 
КонецПроцедуры

#КонецОбласти 

// Получает GTIN для таблицы переданных товаров
//
// Параметры:
//  Товары - ТаблицаЗначений - таблица товаров с колонками
//   * Номенклатура - СправочникСсылка.Номенклатура - номенклатура (маркируемый товар).
//   * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - характеристика номенклатуры (маркируемого товара).
//
// Возвращаемое значение:
//   Соответствие - данные возможных GTIN:
//    * Ключ     - Строка    - GTIN всех товаров входящей таблицы
//    * Значение - Структура - пара (номенклатура,характеристика) к которой относится GTIN
//
Функция GTINМаркированныхТоваров(Товары) Экспорт
	Результат = Новый Соответствие;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Штрихкоды.Штрихкод КАК Штрихкод,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	|		ПО Товары.Номенклатура = Штрихкоды.Номенклатура
	|ГДЕ
	|	НЕ Штрихкоды.Штрихкод ЕСТЬ NULL";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Товары", Товары);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		GTIN = ШтрихкодированиеИСКлиентСервер.GTINПоШтрихкодуEAN(Выборка.Штрихкод);
		
		Если МенеджерОборудованияКлиентСервер.ПроверитьКорректностьGTIN(GTIN) Тогда
			Результат.Вставить(GTIN, 
				Новый Структура("Номенклатура,Характеристика", Выборка.Номенклатура, Выборка.Характеристика));
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция СтрокаУсловияМаркируемойПродукции(ВидМаркируемойПродукции)

	УсловиеМаркируемаяПродукция = "";
	Если ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Табак Тогда
		УсловиеМаркируемаяПродукция = "СправочникНоменклатура.ТабачнаяПродукция";
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Обувь Тогда
		УсловиеМаркируемаяПродукция = "СправочникНоменклатура.ОбувнаяПродукция";
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Велосипеды Тогда
		УсловиеМаркируемаяПродукция = "СправочникНоменклатура.Велосипеды";
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Духи Тогда
		УсловиеМаркируемаяПродукция = "СправочникНоменклатура.Духи";
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.КреслаКоляски Тогда
		УсловиеМаркируемаяПродукция = "СправочникНоменклатура.КреслаКоляски";
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ЛегкаяПромышленность Тогда
		УсловиеМаркируемаяПродукция = "СправочникНоменклатура.ЛегкаяПромышленность";
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС Тогда
		УсловиеМаркируемаяПродукция = "СправочникНоменклатура.МолочнаяПродукцияПодконтрольнаяВЕТИС";
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияБезВЕТИС Тогда
		УсловиеМаркируемаяПродукция = "СправочникНоменклатура.МолочнаяПродукцияБезВЕТИС";
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Фотоаппараты Тогда
		УсловиеМаркируемаяПродукция = "СправочникНоменклатура.Фотоаппараты";
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Шины Тогда
		УсловиеМаркируемаяПродукция = "СправочникНоменклатура.Шины";
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.АльтернативныйТабак Тогда
		УсловиеМаркируемаяПродукция = "СправочникНоменклатура.АльтернативныйТабак";
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.УпакованнаяВода Тогда
		УсловиеМаркируемаяПродукция = "СправочникНоменклатура.УпакованнаяВода";
	КонецЕсли;

	Возврат УсловиеМаркируемаяПродукция;
КонецФункции 

// Устанавливает в тексте запроса условие отбора по маркируемой продукции требуемого вида.
// Текст запроса должен содержать строку вида "&УсловиеМаркируемаяПродукция" в условии соединения или условии отбора
// и таблицу с синонимом "СправочникНоменклатура", которой как правило является таблица справочника "Номенклатура".
// Параметры:
//   ТекстЗапроса - Строка - строка с текстом запроса, удовлетворяющая приведенным выше условиям.
//   ВидМаркируемойПродукции - ПеречислениеСсылка.ВидыПродукцииИС, Массив Из ПеречислениеСсылка.ВидыПродукцииИС - 
//     вид или виды маркируемой продукции, условие отбора по которым необходимо установить.
Процедура УстановитьУсловиеПоМаркируемойПродукции(ТекстЗапроса, Знач ВидМаркируемойПродукции) Экспорт
	Если ТипЗнч(ВидМаркируемойПродукции) = Тип("Массив") Тогда
		МассивУсловийМаркируемойПродукции = Новый Массив;
		Для каждого ЭлементМаркируемойПродукции Из ВидМаркируемойПродукции Цикл
			СтрокаУсловияМаркируемойПродукции = СтрокаУсловияМаркируемойПродукции(ЭлементМаркируемойПродукции);
			Если НЕ ПустаяСтрока(СтрокаУсловияМаркируемойПродукции) Тогда
				МассивУсловийМаркируемойПродукции.Добавить(СтрокаУсловияМаркируемойПродукции);
			КонецЕсли; 
		КонецЦикла; 
		
		УсловиеМаркируемаяПродукция = СтрСоединить(МассивУсловийМаркируемойПродукции, " ИЛИ ");
	Иначе
		УсловиеМаркируемаяПродукция = СтрокаУсловияМаркируемойПродукции(ВидМаркируемойПродукции);
	КонецЕсли; 
	
	Если Не ПустаяСтрока(УсловиеМаркируемаяПродукция) Тогда
		УсловиеМаркируемаяПродукция = СтрШаблон("(%1)", УсловиеМаркируемаяПродукция);
	Иначе
		УсловиеМаркируемаяПродукция = "ЛОЖЬ";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеМаркируемаяПродукция", УсловиеМаркируемаяПродукция);
КонецПроцедуры

Функция УсловиеПоВидуПродукции(ВидПродукции)
	Условие = СтрокаУсловияМаркируемойПродукции(ВидПродукции);
	
	Если ПустаяСтрока(Условие) Тогда
	
		Условие = "(СправочникНоменклатура.ТабачнаяПродукция 
			|ИЛИ СправочникНоменклатура.ОбувнаяПродукция
			|ИЛИ СправочникНоменклатура.Велосипеды
			|ИЛИ СправочникНоменклатура.Духи
			|ИЛИ СправочникНоменклатура.КреслаКоляски
			|ИЛИ СправочникНоменклатура.ЛегкаяПромышленность
			|ИЛИ СправочникНоменклатура.МолочнаяПродукцияПодконтрольнаяВЕТИС
			|ИЛИ СправочникНоменклатура.МолочнаяПродукцияБезВЕТИС
			|ИЛИ СправочникНоменклатура.Фотоаппараты
			|ИЛИ СправочникНоменклатура.Шины
			|ИЛИ СправочникНоменклатура.АльтернативныйТабак
			|ИЛИ СправочникНоменклатура.УпакованнаяВода)";
	
	КонецЕсли; 

	Возврат Условие;
КонецФункции

//Определяет соответствие переданного документа проверяемому типу.
//
// Параметры:
//  Контекст - ФормаКлиентскогоПриложения, ДокументСсылка - Контекст для определения типа документа.
//  Имя      - Строка - имя объекта метаданного документа.
//
//Возвращаемое значение:
//   Булево - это документ
Функция ЭтоДокументПоНаименованию(Контекст, Имя) Экспорт

	Результат = Ложь;

	ТипКонтекста = ТипЗнч(Контекст);
	ТипДокумента = Тип(СтрШаблон("ДокументСсылка.%1", Имя));

	Если ТипКонтекста = Тип("ФормаКлиентскогоПриложения") Тогда
		Если СтрНачинаетсяС(Контекст.ИмяФормы, СтрШаблон("Документ.%1", Имя)) Тогда
			Результат = Истина;
		КонецЕсли;
	ИначеЕсли ТипКонтекста = ТипДокумента Тогда
		Результат = Истина;
	КонецЕсли;

	Возврат Результат;

КонецФункции

Функция ТекстЗапросаМаркируемойПродукции(ДокументСсылка, ИмяТабЧастиТовары = Неопределено)
	
	МетаданныеДокумента = ДокументСсылка.Метаданные();
	
	Если ИмяТабЧастиТовары = Неопределено Тогда
		ИмяТабЧастиТовары = "Товары";
	КонецЕсли;
	
	ТекстЗапросаШаблон = "ВЫБРАТЬ
	|	Товары.Номенклатура      КАК Номенклатура,
	|	"""" КАК Характеристика,
	|	"""" КАК Серия,
	|	СУММА(Товары.Количество) КАК Количество
	|ИЗ
	|	Документ.%1.%2 КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &Документ
	|	И &УсловиеМаркируемаяПродукция
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия";
	
	ТекстЗапроса = СтрШаблон(ТекстЗапросаШаблон, МетаданныеДокумента.Имя, ИмяТабЧастиТовары);
		
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ОпределитьТипОснования(Знач ДанныеЗаполнения)
	
	ОснованиеЗаполнения = ДанныеЗаполнения;
	Если ТипЗнч(ОснованиеЗаполнения) = Тип("Структура") И ОснованиеЗаполнения.Свойство("Основание") Тогда
		ОснованиеЗаполнения = ОснованиеЗаполнения.Основание;
	КонецЕсли;
	Возврат ТипЗнч(ОснованиеЗаполнения);
	
КонецФункции

Процедура ЗаполнитьШапкуДокумента(ДокументОбъект, ДанныеЗаполнения, Запрос)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		Возврат;
	КонецЕсли;
	
	Основание = ДанныеЗаполнения;
	Если ТипЗнч(Основание) = Тип("Структура") Тогда
		Основание = Основание.Основание;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДокументОснование", Основание);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
			
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьДокумента(ТабличнаяЧасть, РезультатЗапроса, ДанныеЗаполнения, ДополнительныеПараметры = Неопределено)
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗаполнениеНеобязательно = ТипЗнч(ДополнительныеПараметры) = Тип("Структура")
		И ДополнительныеПараметры.Свойство("ВозможноПустая");
	
	Если Выборка.Количество() = 0 И Не ЗаполнениеНеобязательно Тогда
		
		ВызватьИсключение СтрШаблон(
			НСтр("ru='В %1 отсутствует продукция для заполнения.'"),
			ДанныеЗаполнения);
		
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТабличнаяЧасть.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТекстЗапросаТабличнойЧастиШтрихкодыУпаковок(ИмяДокумента, ЕстьЗначениеШтрихкода = Истина)
	
	Если ЕстьЗначениеШтрихкода Тогда
		Возврат СтрШаблон(
		"ВЫБРАТЬ
		|	Таблица.ШтрихкодУпаковки,
		|	Таблица.ЗначениеШтрихкода
		|ИЗ
		|	Документ.%1.ШтрихкодыУпаковок КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Ссылка",
		ИмяДокумента);
	Иначе
		Возврат СтрШаблон(
		"ВЫБРАТЬ
		|	Таблица.ШтрихкодУпаковки
		|ИЗ
		|	Документ.%1.ШтрихкодыУпаковок КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Ссылка",
		ИмяДокумента);
	КонецЕсли;
	
КонецФункции

//Вывод из оборота

Процедура ЗаполнитьТабличныеЧастиВыводаИзОборотаИСМП(
	ДокументОбъект, ДанныеЗаполнения, ИмяДокумента, Штрихкоды = Неопределено)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		Возврат;
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.ШтрихкодыУпаковок.Очистить();
	
	ТаблицыТоваров = Новый Массив;
	ТаблицыТоваров.Добавить(Новый Структура("Товары, ПолеСумма", "Товары", "0"));
	
	ФильтрВидПродукции = Перечисления.ВидыПродукцииИС.Обувь;
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Основание = ДанныеЗаполнения.Основание;
		Если ДанныеЗаполнения.ИмяФильтра = "ЗаполнениеСВидомПродукции" Тогда
			ФильтрВидПродукции =  ДанныеЗаполнения.ЗначениеФильтра;
		КонецЕсли; 
	Иначе
		Основание = ДанныеЗаполнения;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияВыводаИзОборотаИСМПИзПрикладногоДокумента(ИмяДокумента, ФильтрВидПродукции, ТаблицыТоваров, Штрихкоды);
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", Основание);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ВыводИзОборотаИСМП.КонечныеСтатусы());
	
	Пакет = Запрос.ВыполнитьПакет();
	ИндексТовары    = Пакет.Количество() - ?(Штрихкоды = Неопределено, 1, 2);
	ЗаполнитьТабличнуюЧастьДокумента(ДокументОбъект.Товары, Пакет[ИндексТовары], Основание);
	
	Если ФильтрВидПродукции = Неопределено Тогда
		ИнтеграцияИСМП.ЗаполнитьВидПродукцииПоТабличнойЧасти(ДокументОбъект);
	Иначе
		ДокументОбъект.ВидПродукции = ФильтрВидПродукции;
	КонецЕсли;
	
	Если Штрихкоды <> Неопределено Тогда
		ИндексШтрихкоды = Пакет.Количество() - 1;
		ЗаполнитьТабличнуюЧастьДокумента(ДокументОбъект.ШтрихкодыУпаковок, Пакет[ИндексШтрихкоды], Основание, Новый Структура("ВозможноПустая"));
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияВыводаИзОборотаИСМПИзПрикладногоДокумента(ИмяДокумента, ВидПродукции, ТаблицыТоваров, ТабличнаяЧастьШтрихкоды)
	
	УсловиеВидПродукции = УсловиеПоВидуПродукции(ВидПродукции);
	
	ТоварыПоТабличнымЧастям = Новый Массив;
	ЭтоПервыйЭлемент = Истина;
	Для Каждого ТабличнаяЧастьТовары Из ТаблицыТоваров Цикл
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
		|	""""                            КАК Характеристика,
		|	""""                            КАК Серия,
		|	СУММА(ТаблицаТовары.Количество) КАК Количество,
		|	СУММА(&ПолеСумма)               КАК Сумма
		|ПОМЕСТИТЬ ВТТовары
		|ИЗ
		|	&ОписаниеДокументаТовары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &ДокументОснование
		|	И %1
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТовары.Номенклатура
		|;";
		
		Если ЭтоПервыйЭлемент Тогда
			ЭтоПервыйЭлемент = Ложь;
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ВТТовары", "");
		КонецЕсли;
		
		ОписаниеДокумента = СтрШаблон("Документ.%1", ИмяДокумента);
		Если ЗначениеЗаполнено(ТабличнаяЧастьТовары.Товары) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОписаниеДокументаТовары", СтрШаблон("%1.%2", ОписаниеДокумента,ТабличнаяЧастьТовары.Товары));
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОписаниеДокументаТовары", ОписаниеДокумента);
		КонецЕсли;
		Если ЗначениеЗаполнено(ТабличнаяЧастьТовары.ПолеСумма)
			И ТабличнаяЧастьТовары.ПолеСумма <> "0" Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолеСумма", СтрШаблон("ТаблицаТовары.%1",ТабличнаяЧастьТовары.ПолеСумма));
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолеСумма", "0");
		КонецЕсли;
		
		ТоварыПоТабличнымЧастям.Добавить(ТекстЗапроса);
		
	КонецЦикла;
	
	
	ТекстЗапроса = СтрСоединить(ТоварыПоТабличнымЧастям, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|");
	ТекстЗапроса = ТекстЗапроса + "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура   КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия          КАК Серия,
	|	Товары.Количество     КАК Количество,
	|	Товары.Сумма          КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ВТТовары КАК Товары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.Сумма
	|ИЗ
	|	Документ.ВыводИзОборотаИСМП.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка.Проведен
	|	И ОформленныеТовары.Ссылка.ДокументОснование = &ДокументОснование
	|	И ОформленныеТовары.Ссылка <> &ЭтаСсылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура      КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика    КАК Характеристика,
	|	ТоварыКОформлению.Серия             КАК Серия,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.Количество) КАК КоличествоУпаковок,
	|	СУММА(ТоварыКОформлению.Сумма)      КАК Сумма,
	|	ВЫБОР КОГДА СУММА(ТоварыКОформлению.Количество) > 0 И СУММА(ТоварыКОформлению.Сумма) > 0
	|		ТОГДА СУММА(ТоварыКОформлению.Сумма) / СУММА(ТоварыКОформлению.Количество)
	|	ИНАЧЕ 0 КОНЕЦ                       КАК Цена
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|";
	Если ТабличнаяЧастьШтрихкоды <> Неопределено Тогда
		ТекстЗапроса = ТекстЗапроса + СтрШаблон(
		"ВЫБРАТЬ
		|	Штрихкоды.%3 КАК ШтрихкодУпаковки
		|ИЗ
		|	Документ.%1.%2 КАК Штрихкоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО Штрихкоды.%3.Номенклатура = СправочникНоменклатура.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВыводИзОборотаИСМП.ШтрихкодыУпаковок КАК ОформленныеШтрихкоды
		|		ПО ОформленныеШтрихкоды.Ссылка.ДокументОснование = &ДокументОснование
		|		И ОформленныеШтрихкоды.Ссылка <> &ЭтаСсылка
		|		И ОформленныеШтрихкоды.ШтрихкодУпаковки = Штрихкоды.%3
		|		И ОформленныеШтрихкоды.Ссылка.Проведен
		|ГДЕ
		|	Штрихкоды.Ссылка = &ДокументОснование
		|	И %4
		|	И ОформленныеШтрихкоды.ШтрихкодУпаковки ЕСТЬ NULL
		|",
		ИмяДокумента,
		ТабличнаяЧастьШтрихкоды.ИмяТаблицыШтрихкодыУпаковок,
		ТабличнаяЧастьШтрихкоды.ИмяКолонкиШтрихкодУпаковки,
		УсловиеВидПродукции);
	КонецЕсли;
	
	ТекстЗапроса = СтрШаблон(ТекстЗапроса, УсловиеВидПродукции);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//Маркировка товаров

Процедура ЗаполнитьТабличныеЧастиМаркировкиТоваровИСМП(
	ДокументОбъект, ДанныеЗаполнения, ИмяДокумента, ТоварыСерии = Неопределено, ЕстьШтрихкодыУпаковок = Ложь, ФильтрВидПродукции = Неопределено)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТоварыСерии = Неопределено Тогда
		ТоварыСерии = Новый Массив;
		ТоварыСерии.Добавить(Новый Структура("Товары, Серии", "Товары", ""));
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Основание = ДанныеЗаполнения.Основание;
		Если ФильтрВидПродукции = Неопределено 
			И ДанныеЗаполнения.ИмяФильтра = "ЗаполнениеСВидомПродукции" Тогда
			
			ФильтрВидПродукции =  ДанныеЗаполнения.ЗначениеФильтра;
		КонецЕсли; 
	Иначе
		Основание = ДанныеЗаполнения;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияМаркировкиТоваровИСМПИзПрикладногоДокумента(ИмяДокумента, ФильтрВидПродукции, ТоварыСерии);
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", Основание);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.МаркировкаТоваровИСМП.КонечныеСтатусы());
	
	ЗаполнитьТабличнуюЧастьДокумента(ДокументОбъект.Товары, Запрос.Выполнить(), Основание);
	
	Если ЕстьШтрихкодыУпаковок Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапросаТабличнойЧастиШтрихкодыУпаковок(ИмяДокумента);
		Запрос.УстановитьПараметр("Ссылка", Основание);
		ДокументОбъект.ШтрихкодыУпаковок.Загрузить(Запрос.Выполнить().Выгрузить());
	КонецЕсли;
	
	Если ФильтрВидПродукции = Неопределено Тогда
		ИнтеграцияИСМП.ЗаполнитьВидПродукцииПоТабличнойЧасти(ДокументОбъект);
	Иначе
		ДокументОбъект.ВидПродукции = ФильтрВидПродукции;
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияМаркировкиТоваровИСМПИзПрикладногоДокумента(ИмяДокумента, ВидПродукции, ТабличныеЧастиТоварыСерии)
	
	УсловиеВидПродукции = УсловиеПоВидуПродукции(ВидПродукции);
	
	ТоварыСерииПоТабличнымЧастям = Новый Массив;
	ЭтоПервыйЭлемент = Истина;
	Для Каждого ТоварыСерии Из ТабличныеЧастиТоварыСерии Цикл
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
		|	""""    КАК Характеристика,
		|	""""             КАК Серия,
		|	СУММА(ТаблицаТовары.Количество) КАК Количество
		|ПОМЕСТИТЬ ТоварыСерии
		|ИЗ
		|	&ОписаниеДокументаТовары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &ДокументОснование
		|	И %1
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТовары.Номенклатура
		|";
		
		Если ЭтоПервыйЭлемент Тогда
			ЭтоПервыйЭлемент = Ложь;
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТоварыСерии", "");
		КонецЕсли;
		
		ОписаниеДокумента = СтрШаблон("Документ.%1", ИмяДокумента);
		Если ЗначениеЗаполнено(ТоварыСерии.Товары) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОписаниеДокументаТовары", СтрШаблон("%1.%2", ОписаниеДокумента,ТоварыСерии.Товары));
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОписаниеДокументаТовары", ОписаниеДокумента);
		КонецЕсли;
		ТоварыСерииПоТабличнымЧастям.Добавить(ТекстЗапроса);
	КонецЦикла;
	ТекстЗапроса = СтрСоединить(ТоварыСерииПоТабличнымЧастям, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|");
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура   КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия          КАК Серия,
	|	Товары.Количество     КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК Товары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.МаркировкаТоваровИСМП.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка.Проведен
	|	И ОформленныеТовары.Ссылка.ДокументОснование = &ДокументОснование
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия КАК Серия,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.Количество) КАК КоличествоУпаковок,
	|	СпрНоменклатура.КодТНВЭД КАК КодТНВЭД
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ТоварыКОформлению.Номенклатура = СпрНоменклатура.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СпрНоменклатура.КодТНВЭД
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|";
	
	ТекстЗапроса = СтрШаблон(ТекстЗапроса, УсловиеВидПродукции);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//Отгрузка товаров

Процедура ЗаполнитьТабличныеЧастиОтгрузкиТоваровИСМП(
	ДокументОбъект, ДанныеЗаполнения, ИмяДокумента, ТоварыСерии = Неопределено, ЕстьШтрихкодыУпаковок = Ложь, ЕстьЗначениеШтрихкода = Ложь, ФильтрВидПродукции = Неопределено)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТоварыСерии = Неопределено Тогда
		ТоварыСерии = Новый Массив;
		ТоварыСерии.Добавить(Новый Структура("Товары, Серии", "Товары", ""));
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Основание = ДанныеЗаполнения.Основание;
		Если ФильтрВидПродукции = Неопределено 
			И ДанныеЗаполнения.ИмяФильтра = "ЗаполнениеСВидомПродукции" Тогда
			
			ФильтрВидПродукции =  ДанныеЗаполнения.ЗначениеФильтра;
		КонецЕсли; 
	Иначе
		Основание = ДанныеЗаполнения;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияОтгрузкиТоваровИСМПИзПрикладногоДокумента(ИмяДокумента, ФильтрВидПродукции, ТоварыСерии);
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", Основание);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.МаркировкаТоваровИСМП.КонечныеСтатусы());
	
	ЗаполнитьТабличнуюЧастьДокумента(ДокументОбъект.Товары, Запрос.Выполнить(), Основание);
	
	Если ЕстьШтрихкодыУпаковок Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапросаТабличнойЧастиШтрихкодыУпаковок(ИмяДокумента, ЕстьЗначениеШтрихкода);
		Запрос.УстановитьПараметр("Ссылка", Основание);
		ДокументОбъект.ШтрихкодыУпаковок.Загрузить(Запрос.Выполнить().Выгрузить());
	КонецЕсли;
	
	Если ФильтрВидПродукции = Неопределено Тогда
		ИнтеграцияИСМП.ЗаполнитьВидПродукцииПоТабличнойЧасти(ДокументОбъект);
	Иначе
		ДокументОбъект.ВидПродукции = ФильтрВидПродукции;
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияОтгрузкиТоваровИСМПИзПрикладногоДокумента(ИмяДокумента, ВидПродукции, ТабличныеЧастиТоварыСерии)
	
	УсловиеВидПродукции = УсловиеПоВидуПродукции(ВидПродукции);
	
	ТоварыСерииПоТабличнымЧастям = Новый Массив;
	ЭтоПервыйЭлемент = Истина;
	Для Каждого ТоварыСерии Из ТабличныеЧастиТоварыСерии Цикл
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
		|	""""    КАК Характеристика,
		|	""""             КАК Серия,
		|	СУММА(ТаблицаТовары.Количество) КАК Количество,
		|	СУММА(ВЫБОР
		|		КОГДА ТаблицаТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.Сумма
		|		ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
		|	КОНЕЦ) КАК СуммаСНДС,
		|	СУММА(ВЫБОР
		|		КОГДА ТаблицаТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.Сумма - ТаблицаТовары.СуммаНДС
		|		ИНАЧЕ ТаблицаТовары.Сумма
		|	КОНЕЦ) КАК Сумма,
		|	СУММА(ТаблицаТовары.СуммаНДС) КАК СуммаНДС,
		|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
		|	ВЫБОР 
		|		КОГДА ТаблицаТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.Цена 
		|		КОГДА ТаблицаТовары.Количество = 0
		|			ТОГДА ТаблицаТовары.Сумма
		|		ИНАЧЕ ВЫРАЗИТЬ((ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС) / ТаблицаТовары.Количество КАК ЧИСЛО(15, 2))
		|	КОНЕЦ КАК Цена
		|ПОМЕСТИТЬ ТоварыСерии
		|ИЗ
		|	&ОписаниеДокументаТовары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &ДокументОснование
		|	И %1
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.СтавкаНДС,
		|	ВЫБОР 
		|		КОГДА ТаблицаТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.Цена 
		|		КОГДА ТаблицаТовары.Количество = 0
		|			ТОГДА ТаблицаТовары.Сумма
		|		ИНАЧЕ ВЫРАЗИТЬ((ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС) / ТаблицаТовары.Количество КАК ЧИСЛО(15, 2))
		|	КОНЕЦ
		|";
		
		Если ЭтоПервыйЭлемент Тогда
			ЭтоПервыйЭлемент = Ложь;
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТоварыСерии", "");
		КонецЕсли;
		
		ОписаниеДокумента = СтрШаблон("Документ.%1", ИмяДокумента);
		Если ЗначениеЗаполнено(ТоварыСерии.Товары) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОписаниеДокументаТовары", СтрШаблон("%1.%2", ОписаниеДокумента,ТоварыСерии.Товары));
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОписаниеДокументаТовары", ОписаниеДокумента);
		КонецЕсли;
		ТоварыСерииПоТабличнымЧастям.Добавить(ТекстЗапроса);
	КонецЦикла;
	ТекстЗапроса = СтрСоединить(ТоварыСерииПоТабличнымЧастям, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|");
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура   КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия          КАК Серия,
	|	Товары.Цена           КАК Цена,
	|	Товары.СтавкаНДС      КАК СтавкаНДС,
	|	Товары.Количество     КАК Количество,
	|	Товары.СуммаСНДС      КАК Сумма,
	|	Товары.СуммаСНДС      КАК СуммаСНДС,
	|	Товары.СуммаНДС       КАК СуммаНДС
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК Товары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	ОформленныеТовары.Цена,
	|	ОформленныеТовары.СтавкаНДС,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.Сумма,
	|	-ОформленныеТовары.СуммаСНДС,
	|	-ОформленныеТовары.СуммаНДС
	|ИЗ
	|	Документ.ОтгрузкаТоваровИСМП.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка.Проведен
	|	И ОформленныеТовары.Ссылка.ДокументОснование = &ДокументОснование
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура      КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика    КАК Характеристика,
	|	ТоварыКОформлению.Серия             КАК Серия,
	|	ТоварыКОформлению.Цена              КАК Цена,
	|	ТоварыКОформлению.СтавкаНДС         КАК СтавкаНДС,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.Сумма)      КАК Сумма,
	|	СУММА(ТоварыКОформлению.СуммаСНДС)  КАК СуммаСНДС,
	|	СУММА(ТоварыКОформлению.СуммаНДС)   КАК СуммаНДС,
	|	СУММА(ТоварыКОформлению.Количество) КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	ТоварыКОформлению.Цена,
	|	ТоварыКОформлению.СтавкаНДС
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|";
	
	ТекстЗапроса = СтрШаблон(ТекстЗапроса, УсловиеВидПродукции);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//Виды маркируемых товаров

Функция СписокПараметровНоменклатурыИС() Экспорт
	
	Возврат "ТабачнаяПродукция, ОбувнаяПродукция, Велосипеды, Духи, КреслаКоляски, ЛегкаяПромышленность, МолочнаяПродукцияПодконтрольнаяВЕТИС, МолочнаяПродукцияБезВЕТИС, Фотоаппараты, Шины, АльтернативныйТабак, УпакованнаяВода";
	
КонецФункции

Функция ВидПродукцииИС(ПараметрыНоменклатуры) Экспорт
	
	Если ПараметрыНоменклатуры.ТабачнаяПродукция = Неопределено Тогда
		Возврат Перечисления.ВидыПродукцииИС.ПустаяСсылка();
	КонецЕсли;
	
	Если ПараметрыНоменклатуры.ТабачнаяПродукция Тогда
		Возврат Перечисления.ВидыПродукцииИС.Табак;
	ИначеЕсли ПараметрыНоменклатуры.ОбувнаяПродукция Тогда
		Возврат Перечисления.ВидыПродукцииИС.Обувь;
	ИначеЕсли ПараметрыНоменклатуры.Велосипеды Тогда
		Возврат Перечисления.ВидыПродукцииИС.Велосипеды;
	ИначеЕсли ПараметрыНоменклатуры.Духи Тогда
		Возврат Перечисления.ВидыПродукцииИС.Духи;
	ИначеЕсли ПараметрыНоменклатуры.КреслаКоляски Тогда
		Возврат Перечисления.ВидыПродукцииИС.КреслаКоляски;
	ИначеЕсли ПараметрыНоменклатуры.ЛегкаяПромышленность Тогда
		Возврат Перечисления.ВидыПродукцииИС.ЛегкаяПромышленность;
	ИначеЕсли ПараметрыНоменклатуры.МолочнаяПродукцияБезВЕТИС Тогда
		Возврат Перечисления.ВидыПродукцииИС.МолочнаяПродукцияБезВЕТИС;
	ИначеЕсли ПараметрыНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС Тогда
		Возврат Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС;
	ИначеЕсли ПараметрыНоменклатуры.Фотоаппараты Тогда
		Возврат Перечисления.ВидыПродукцииИС.Фотоаппараты;
	ИначеЕсли ПараметрыНоменклатуры.Шины Тогда
		Возврат Перечисления.ВидыПродукцииИС.Шины;
	ИначеЕсли ПараметрыНоменклатуры.АльтернативныйТабак Тогда
		Возврат Перечисления.ВидыПродукцииИС.АльтернативныйТабак;
	ИначеЕсли ПараметрыНоменклатуры.УпакованнаяВода Тогда
		Возврат Перечисления.ВидыПродукцииИС.УпакованнаяВода;
	Иначе
		Возврат Перечисления.ВидыПродукцииИС.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

//Приемка товаров

Процедура ЗаполнитьПоступлениеПоПриемкаТоваровИСМП(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзПриемкиТоваровИСМП(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты, , "Товары");
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	ДанныеОбъекта = Новый Структура(
		"Дата, ВидОперации, Организация, Склад, ТипЦен, СуммаВключаетНДС,
		|ВалютаДокумента, КурсВзаиморасчетов, КратностьВзаиморасчетов");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ДокументОбъект);
	
	Выборка = Реквизиты.Товары.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка);
		
		Если ЗначениеЗаполнено(Выборка.Номенклатура) Тогда
			СведенияОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре(Выборка.Номенклатура, ДанныеОбъекта, Ложь, Ложь);
			НоваяСтрока.СтавкаНДС = СведенияОНоменклатуре.СтавкаНДС;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ДанныеПрикладныхДокументовИзПриемкиТоваровИСМП(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриемкаТоваровИСМП.Организация КАК Организация,
	|	ПриемкаТоваровИСМП.Контрагент  КАК Контрагент,
	|	ПриемкаТоваровИСМП.Комментарий КАК Комментарий,
	|	ПриемкаТоваровИСМП.Дата        КАК Дата,
	|	Не ПриемкаТоваровИСМП.Проведен КАК ЕстьОшибкиПроведен,
	|	ПриемкаТоваровИСМП.Товары.(
	|		Номенклатура           КАК Номенклатура,
	|		Характеристика         КАК Характеристика,
	|		Серия                  КАК Серия,
	|		Упаковка               КАК Упаковка,
	|		Количество             КАК Количество,
	|		КоличествоУпаковок     КАК КоличествоУпаковок,
	|		СтатусУказанияСерий    КАК СтатусУказанияСерий
	|	) КАК Товары
	|ИЗ
	|	Документ.ПриемкаТоваровИСМП КАК ПриемкаТоваровИСМП
	|ГДЕ
	|	ПриемкаТоваровИСМП.Ссылка = &Ссылка";
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

#Область ОтчетыОРасхождениях

#Область ПрограммныйИнтерфейс

Процедура ПриОпределенииТекстаЗапросаОформленныхДокументов(ТекстЗапроса, ОтчетОбъект) Экспорт
	
	Текст = Неопределено;
	Отчет = ОтчетОбъект.Метаданные();
	
	Если Отчет = Метаданные.Отчеты.АнализРасхожденийПриПоступленииАлкогольнойПродукции Тогда
		Текст = ОформленныеДокументыПоПоступлениюАлкогольнойПродукции();
	ИначеЕсли Отчет = Метаданные.Отчеты.АнализРасхожденийПриОтгрузкеАлкогольнойПродукции Тогда
		Текст = ОформленныеДокументыПоОтгрузкеАлкогольнойПродукции();
	
	ИначеЕсли Отчет = Метаданные.Отчеты.АнализРасхожденийПриПоступленииПродукцииВЕТИС Тогда
		Текст = ОформленныеДокументыПоПоступлениюПродукцииВЕТИС();
	ИначеЕсли Отчет = Метаданные.Отчеты.АнализРасхожденийПриОтгрузкеПродукцииВЕТИС Тогда
		Текст = ОформленныеДокументыПоОтгрузкеПродукцииВЕТИС();
	ИначеЕсли Отчет = Метаданные.Отчеты.АнализРасхожденийПриИнвентаризацииПродукцииВЕТИС Тогда
		Текст = ОформленныеДокументыПоИнвентаризацииПродукцииВЕТИС();
	ИначеЕсли Отчет = Метаданные.Отчеты.АнализРасхожденийПриПроизводствеПродукцииВЕТИС Тогда
		Текст = ОформленныеДокументыПоПроизводственнойОперацииВЕТИС();
	
	ИначеЕсли Отчет = Метаданные.Отчеты.АнализРасхожденийПриМаркировкеТоваровИСМП Тогда
		Текст = ОформленныеДокументыПоМаркировкеТоваровИСМП();
	ИначеЕсли Отчет = Метаданные.Отчеты.АнализРасхожденийПриВыводеИзОборотаИСМП Тогда
		Текст = ОформленныеДокументыВыводуИзОборотаИСМП();
	КонецЕсли;
	
	Если Не(Текст = Неопределено) Тогда
		ТекстЗапроса = Текст;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ТекстыЗапросов

Функция ОформленныеДокументыВыводуИзОборотаИСМП()
	
	МассивТекстовЗапросов = Новый Массив;
	
	Реализации = "";
	ДобавитьОснование(МассивТекстовЗапросов, "РеализацияТоваровУслуг", "Товары");
	Если МассивТекстовЗапросов.Количество() Тогда
		Реализации = СтрСоединить(МассивТекстовЗапросов, " ОБЪЕДИНИТЬ ВСЕ ");
		Реализации = СтрЗаменить(Реализации, ".Проведен", ".Проведен И ТаблицаТовары.Ссылка.Контрагент.СтранаРегистрации <> ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)");
	КонецЕсли;
	МассивТекстовЗапросов.Очистить();
	
	ДобавитьОснование(МассивТекстовЗапросов, "СписаниеТоваров", "Товары");
	
	Если ЗначениеЗаполнено(Реализации) Тогда
		МассивТекстовЗапросов.Добавить(Реализации);
	КонецЕсли;
	
	Текст = СтрСоединить(МассивТекстовЗапросов, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|");
	ДоработатьЗапросПродукцииИСМП(Текст);
	
	Возврат Текст;
	
КонецФункции

Функция ОформленныеДокументыПоМаркировкеТоваровИСМП()
	
	МассивТекстовЗапросов = Новый Массив;
	
	Знак = "ТаблицаТовары.Ссылка.Контрагент.СтранаРегистрации <> ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)";
	ЗнакПоступление = СтрШаблон("ВЫБОР КОГДА %1 ТОГДА 1 ИНАЧЕ 0 КОНЕЦ * ", Знак);
	ДобавитьОснование(МассивТекстовЗапросов,"ПоступлениеТоваровУслуг", "Товары", , ЗнакПоступление);
	ДобавитьОснование(МассивТекстовЗапросов, "ОприходованиеТоваров", "Товары");
	ДобавитьОснование(МассивТекстовЗапросов, "ОтчетПроизводстваЗаСмену", "Продукция");
	ДобавитьОснование(МассивТекстовЗапросов, "ОтчетПроизводстваЗаСмену", "Материалы", ,"-");
	
	Текст = СтрСоединить(МассивТекстовЗапросов, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|");
	ДоработатьЗапросПродукцииИСМП(Текст);
	
	Возврат Текст;
	
КонецФункции

Функция ОформленныеДокументыПоПроизводственнойОперацииВЕТИС()
	
	МассивТекстовЗапросов = Новый Массив;
	
	ДобавитьОснование(МассивТекстовЗапросов, "ОтчетПроизводстваЗаСмену", "Продукция");
	ДобавитьОснование(МассивТекстовЗапросов, "ОтчетПроизводстваЗаСмену", "Материалы", ,"-");
	
	Текст = СтрСоединить(МассивТекстовЗапросов, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|");
	ДоработатьЗапросПродукцииВЕТИС(Текст);
	
	Возврат Текст;
	
КонецФункции

Функция ОформленныеДокументыПоИнвентаризацииПродукцииВЕТИС()
	
	МассивТекстовЗапросов = Новый Массив;
	ДобавитьОснование(МассивТекстовЗапросов, "СписаниеТоваров", "Товары", , "-");
	ДобавитьОснование(МассивТекстовЗапросов, "ОприходованиеТоваров", "Товары");
	
	Текст = СтрСоединить(МассивТекстовЗапросов, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|");
	ДоработатьЗапросПродукцииВЕТИС(Текст);
	
	Возврат Текст;
	
КонецФункции

Функция ОформленныеДокументыПоОтгрузкеПродукцииВЕТИС()
	
	МассивТекстовЗапросов = Новый Массив;
	ДобавитьОснование(МассивТекстовЗапросов, "РеализацияТоваровУслуг", "Товары");
	ДобавитьОснование(МассивТекстовЗапросов, "ВозвратТоваровПоставщику", "Товары");
	ДобавитьОснование(МассивТекстовЗапросов, "ПеремещениеТоваров", "Товары");
	
	Текст = СтрСоединить(МассивТекстовЗапросов, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|");
	ДоработатьЗапросПродукцииВЕТИС(Текст);
	
	Возврат Текст;
	
КонецФункции

Функция ОформленныеДокументыПоПоступлениюПродукцииВЕТИС()
	
	МассивТекстовЗапросов = Новый Массив;
	ДобавитьОснование(МассивТекстовЗапросов,"ПоступлениеТоваровУслуг", "Товары");
	ДобавитьОснование(МассивТекстовЗапросов,"ВозвратТоваровОтПокупателя", "Товары");
	ДобавитьОснование(МассивТекстовЗапросов,"ПеремещениеТоваров", "Товары");
	
	Текст = СтрСоединить(МассивТекстовЗапросов, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|");
	ДоработатьЗапросПродукцииВЕТИС(Текст);
	
	Возврат Текст;
	
КонецФункции

Функция ОформленныеДокументыПоОтгрузкеАлкогольнойПродукции()
	
	МассивТекстовЗапросов = Новый Массив;
	ДобавитьОснование(МассивТекстовЗапросов,"ВозвратТоваровПоставщику", "Товары");
	ДобавитьОснование(МассивТекстовЗапросов,"ПеремещениеТоваров", "Товары");
	ДобавитьОснование(МассивТекстовЗапросов,"РеализацияТоваровУслуг", "Товары");
	
	Текст = СтрСоединить(МассивТекстовЗапросов, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|");
	ДоработатьЗапросПродукцииЕГАИС(Текст);
	
	Возврат Текст;
	
КонецФункции

Функция ОформленныеДокументыПоПоступлениюАлкогольнойПродукции()
	
	МассивТекстовЗапросов = Новый Массив;
	ДобавитьОснование(МассивТекстовЗапросов,"ПоступлениеТоваровУслуг", "Товары");
	ДобавитьОснование(МассивТекстовЗапросов,"ПеремещениеТоваров", "Товары");
	
	Текст = СтрСоединить(МассивТекстовЗапросов, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|");
	ДоработатьЗапросПродукцииЕГАИС(Текст);
	
	Возврат Текст;
	
КонецФункции

#КонецОбласти

#Область Шаблоны

Функция ДобавитьОснование(МассивТекстовЗапросов, ИмяДокумента, ИмяТабличнойЧасти, СерииОтдельно = Ложь, Знак = "", Постфикс = "")
	
	Если Не ПравоДоступа("Просмотр", Метаданные.Документы[ИмяДокумента]) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Шаблон = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка              КАК Ссылка,
	|	ТаблицаТовары.Номенклатура%5      КАК Номенклатура,
	|	""""                              КАК Характеристика,
	|	""""                              КАК Серия,
	|	%4СУММА(ТаблицаТовары.Количество) КАК Количество
	|ИЗ
	|	Документ.%1.%2 КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка.Проведен
	|	И ТаблицаТовары.Ссылка В
	|		(ВЫБРАТЬ
	|			ПрикладныеДокументы.Ссылка
	|		ИЗ
	|			ПрикладныеДокументы КАК ПрикладныеДокументы)
	|	%3
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Номенклатура%5,
	|	"""",
	|	""""";
	
	Шаблон = СтрШаблон(Шаблон,
		ИмяДокумента,
		ИмяТабличнойЧасти,
		"",
		Знак,
		Постфикс);
	
	МассивТекстовЗапросов.Добавить(Шаблон);
	Возврат Истина;
	
КонецФункции

Процедура ДоработатьЗапросПродукцииВЕТИС(Текст)
	
	Позиция = СтрНайти(Текст, "ВЫБРАТЬ");
	Текст = Лев(Текст, Позиция-1) + "ВЫБРАТЬ РАЗРЕШЕННЫЕ" + Сред(Текст, Позиция + СтрДлина("ВЫБРАТЬ"));
	Позиция = СтрНайти(Текст, "
	|ИЗ");
	Текст = Лев(Текст, Позиция -1)+ "
	|ПОМЕСТИТЬ ТоварыНакладнойПредварительно
	|"+ Сред(Текст, Позиция);
	
	Текст = Текст + 
	";
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Номенклатура КАК Номенклатура,
	|	"""" КАК Характеристика,
	|	"""" КАК Серия,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыНакладной
	|ИЗ
	|	ТоварыНакладнойПредварительно КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС 
	|;
	|
	|";
КонецПроцедуры

Процедура ДоработатьЗапросПродукцииЕГАИС(Текст)
	
	Позиция = СтрНайти(Текст, "ВЫБРАТЬ");
	Текст = Лев(Текст, Позиция-1) + "ВЫБРАТЬ РАЗРЕШЕННЫЕ" + Сред(Текст, Позиция + СтрДлина("ВЫБРАТЬ"));
	Позиция = СтрНайти(Текст, "
	|ИЗ");
	Текст = Лев(Текст, Позиция -1)+ "
	|ПОМЕСТИТЬ ТоварыНакладнойПредварительно
	|"+ Сред(Текст, Позиция);
	
	Текст = Текст + 
	";
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Номенклатура КАК Номенклатура,
	|	"""" КАК Характеристика,
	|	"""" КАК Серия,
	|	Товары.Количество КАК Количество,
	|	СведенияОбАлкогольнойПродукции.КоэффПересчетаДал КАК ОбъемДАЛ
	|ПОМЕСТИТЬ ТоварыНакладной
	|ИЗ
	|	ТоварыНакладнойПредварительно КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбАлкогольнойПродукции КАК СведенияОбАлкогольнойПродукции
	|		ПО Товары.Номенклатура = СведенияОбАлкогольнойПродукции.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК ВидыАлкогольнойПродукции
	|		ПО СведенияОбАлкогольнойПродукции.КодВида169 = ВидыАлкогольнойПродукции.Код
	|ГДЕ
	|	(НЕ СведенияОбАлкогольнойПродукции.Номенклатура ЕСТЬ NULL)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТоварыНакладной.Номенклатура КАК Номенклатура,
	|	ТоварыНакладной.Характеристика КАК Характеристика,
	|	ТоварыНакладной.ОбъемДАЛ КАК ОбъемДАЛ
	|ПОМЕСТИТЬ НоменклатураПереопределяемый
	|ИЗ
	|	ТоварыНакладной КАК ТоварыНакладной
	|;
	|
	|";
	
КонецПроцедуры

Процедура ДоработатьЗапросПродукцииИСМП(Текст)
	
	Позиция = СтрНайти(Текст, "ВЫБРАТЬ");
	Текст = Лев(Текст, Позиция-1) + "ВЫБРАТЬ РАЗРЕШЕННЫЕ" + Сред(Текст, Позиция + СтрДлина("ВЫБРАТЬ"));
	
	Позиция = СтрНайти(Текст, "
	|ИЗ");
	Текст = Лев(Текст, Позиция -1)+ "
	|ПОМЕСТИТЬ ТоварыНакладнойПредварительно
	|"+ Сред(Текст, Позиция)+"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Текст = Текст + 
	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Номенклатура КАК Номенклатура,
	|	"""" КАК Характеристика,
	|	"""" КАК Серия,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыНакладной
	|ИЗ
	|	ТоварыНакладнойПредварительно КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		И (СправочникНоменклатура.ОбувнаяПродукция 
	|			ИЛИ СправочникНоменклатура.ТабачнаяПродукция
	|			)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТоварыНакладной.Номенклатура КАК Номенклатура,
	|	Выбор
	|		Когда ТоварыНакладной.Номенклатура В (ВЫБРАТЬ РАЗЛИЧНЫЕ Номенклатура ИЗ РегистрСведений.СоответствиеНоменклатурыЕГАИС)
	|			Тогда Значение(Перечисление.ВидыПродукцииИС.Алкогольная)
	|		Когда ТоварыНакладной.Номенклатура.ТабачнаяПродукция
	|			Тогда Значение(Перечисление.ВидыПродукцииИС.Табак)
	|		Когда ТоварыНакладной.Номенклатура.ОбувнаяПродукция
	|			Тогда Значение(Перечисление.ВидыПродукцииИС.Обувь)
	|		Когда ТоварыНакладной.Номенклатура.ЛегкаяПромышленность
	|			Тогда Значение(Перечисление.ВидыПродукцииИС.ЛегкаяПромышленность)
	|		Когда ТоварыНакладной.Номенклатура.МолочнаяПродукцияПодконтрольнаяВЕТИС
	|			Тогда Значение(Перечисление.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС)
	|		Когда ТоварыНакладной.Номенклатура.МолочнаяПродукцияБезВЕТИС
	|			Тогда Значение(Перечисление.ВидыПродукцииИС.МолочнаяПродукцияБезВЕТИС)
	|		Когда ТоварыНакладной.Номенклатура.Шины
	|			Тогда Значение(Перечисление.ВидыПродукцииИС.Шины)
	|		Когда ТоварыНакладной.Номенклатура.АльтернативныйТабак
	|			Тогда Значение(Перечисление.ВидыПродукцииИС.АльтернативныйТабак)
	|		Когда ТоварыНакладной.Номенклатура.УпакованнаяВода
	|			Тогда Значение(Перечисление.ВидыПродукцииИС.УпакованнаяВода)
	|		Когда ТоварыНакладной.Номенклатура.Фотоаппараты
	|			Тогда Значение(Перечисление.ВидыПродукцииИС.Фотоаппараты)
	|		Когда ТоварыНакладной.Номенклатура.Духи
	|			Тогда Значение(Перечисление.ВидыПродукцииИС.Духи)
	|		Когда ТоварыНакладной.Номенклатура.Велосипеды
	|			Тогда Значение(Перечисление.ВидыПродукцииИС.Велосипеды)
	|		Когда ТоварыНакладной.Номенклатура.КреслаКоляски
	|			Тогда Значение(Перечисление.ВидыПродукцииИС.КреслаКоляски)
	|		Иначе Значение(Перечисление.ВидыПродукцииИС.ПустаяСсылка)
	|	Конец КАК ВидПродукции
	|ПОМЕСТИТЬ НоменклатураПереопределяемый
	|ИЗ
	|	ТоварыНакладной КАК ТоварыНакладной
	|;
	|
	|";
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти
