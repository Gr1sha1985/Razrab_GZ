#Область СлужебныйПрограммныйИнтерфейс

// Проверяет в переданном списке учредителей наличие иностранных граждан
//
// Параметры:
//  Учредители - ДанныеФормыКоллекция - список учредителей
//
// Возвращаемое значение:
//  Булево - Истина, если среди учредителей (или их представителей) есть хоть один иностранный гражданин
//
Функция ЕстьУчредителиИлиПредставителиИностранныеГраждане(Учредители) Экспорт
	
	ПроверяемыеФизЛица = Новый Массив;
	Для Каждого ДанныеУчредителя Из Учредители Цикл
		Если ЗначениеЗаполнено(ДанныеУчредителя.ПредставительУчредителя) Тогда
			ПроверяемыеФизЛица.Добавить(ДанныеУчредителя.ПредставительУчредителя);
		Иначе
			ПроверяемыеФизЛица.Добавить(ДанныеУчредителя.Учредитель);
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ГражданствоФизическихЛицСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	РегистрСведений.ГражданствоФизическихЛиц.СрезПоследних(, ФизическоеЛицо В (&ФизическиеЛица)) КАК ГражданствоФизическихЛицСрезПоследних
		|ГДЕ
		|	ГражданствоФизическихЛицСрезПоследних.Страна <> ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
		|	И ГражданствоФизическихЛицСрезПоследних.Страна <> ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("ФизическиеЛица", ПроверяемыеФизЛица);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

Процедура ЗаполнитьСписокВыбораГражданства(Форма, СвойстваРоссии) Экспорт
	
	Перем КодПоУмолчанию, НаименованиеПоУмолчанию;
	
	Элементы = Форма.Элементы;
	
	Если СвойстваРоссии <> Неопределено Тогда
		КодПоУмолчанию = СвойстваРоссии.Код;
		НаименованиеПоУмолчанию = СвойстваРоссии.Наименование;
		Форма.КодРоссии = СвойстваРоссии.Код;
	КонецЕсли;
	
	СписокВыбора = Элементы.Гражданство.СписокВыбора;
	
	СписокВыбора.Очистить();
	СписокВыбора.Добавить(
		РегистрацияОрганизацииКлиентСервер.КодПустогоЗначенияВСпискеВыбораГражданства(),
		НСтр("ru = 'Без гражданства'"));
	Если ЗначениеЗаполнено(КодПоУмолчанию) Тогда
		СписокВыбора.Добавить(КодПоУмолчанию, НаименованиеПоУмолчанию);
	КонецЕсли;
	
	ТаблицаКлассификатора = РаботаСАдресами.ТаблицаКлассификатора();
	Для Каждого СтрокаКлассификатора Из ТаблицаКлассификатора Цикл
		Если СтрокаКлассификатора.Код <> КодПоУмолчанию Тогда
			СписокВыбора.Добавить(СтрокаКлассификатора.Код, СтрокаКлассификатора.Наименование);
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(Форма.Гражданство) И ЗначениеЗаполнено(КодПоУмолчанию) Тогда
		Форма.Гражданство = КодПоУмолчанию;
	КонецЕсли;
	
КонецПроцедуры

// Возвращает признак использования типовых уставов при регистрации юридического лица
//
// Параметры:
//   ИмяФормы - Строка - имя формы регламентированного уведомления
//
// Возвращаемое значение:
//   Булево
//
Функция ИспользоватьТиповыеУставы(ИмяФормы = "") Экспорт
	
	Если ИмяФормы = "" Тогда
		Период = ОбщегоНазначения.ТекущаяДатаПользователя();
		ВыбраннаяФорма = Обработки.РегистрацияОрганизации.ФормаЗаявленияПоУмолчанию(
			ОбщегоНазначения.ТекущаяДатаПользователя(),
			"РегламентированноеУведомлениеФормаР11001");
	Иначе
		ВыбраннаяФорма = ИмяФормы;
	КонецЕсли;
	
	Если ВыбраннаяФорма = "Форма2014_1" Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

#КонецОбласти