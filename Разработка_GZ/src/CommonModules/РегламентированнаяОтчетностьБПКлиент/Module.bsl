#Область ПрограммныйИнтерфейс

// См. РегламентированнаяОтчетностьКлиентПереопределяемый.ОткрытьРасшифровкуОтчета
Процедура ОткрытьРасшифровкуОтчета(ИДОтчета, ИДРедакцииОтчета, ИДИменПоказателей, ПараметрыОтчета) Экспорт
	
	Если ИДОтчета = "РегламентированныйОтчетБухОтчетность" Тогда
		ОткрытьРасшифровкуБухОтчетность(ИДИменПоказателей, ПараметрыОтчета);
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетБухОтчетностьМП" Тогда
		ОткрытьРасшифровкуБухОтчетностьМП(ИДИменПоказателей, ПараметрыОтчета);
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетБухОтчетностьСОНКО" Тогда
		ОткрытьРасшифровкуБухОтчетностьСОНКО(ИДИменПоказателей, ПараметрыОтчета);
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетПрибыль" Тогда
		
		ОткрытьРасшифровкуОтчетПрибыль(ИДИменПоказателей, ПараметрыОтчета);
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетНДС" Тогда
		
		ОткрытьРасшифровкуОтчетНДС(ИДИменПоказателей, ПараметрыОтчета);
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетИмущество" Тогда
		
		Если  ИДРедакцииОтчета = "ФормаОтчета2013Кв4"
			Или ИДРедакцииОтчета = "ФормаОтчета2017Кв4"
			Или ИДРедакцииОтчета = "ФормаОтчета2019Кв1"
			Или ИДРедакцииОтчета = "ФормаОтчета2019Кв4"
			Или ИДРедакцииОтчета = "ФормаОтчета2020Кв4" 
			Или ИДРедакцииОтчета = "ФормаОтчета2020Кв4_1" Тогда
			
			ОткрытьРасшифровкуОтчетИмущество(ИДИменПоказателей, ПараметрыОтчета);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетАвансыИмущество" Тогда
		
		Если  ИДРедакцииОтчета = "ФормаОтчета2013Кв4"
			ИЛИ ИДРедакцииОтчета = "ФормаОтчета2017Кв1"
			ИЛИ ИДРедакцииОтчета = "ФормаОтчета2019Кв1" Тогда
			
			ОткрытьРасшифровкуОтчетАвансыИмуществоФормаОтчета2013Кв4(ИДИменПоказателей, ПараметрыОтчета);
			
		КонецЕсли;

	ИначеЕсли ЗаполнениеФормСтатистикиКлиентСервер.РеализованоАвтозаполнениеФормы(ИДОтчета) Тогда
		
		ЗаполнениеФормСтатистикиКлиент.ОткрытьРасшифровкуСтатистики(ИДОтчета, ИДРедакцииОтчета, ИДИменПоказателей, ПараметрыОтчета);
		
	ИначеЕсли ИДОтчета = "БухгалтерскаяОтчетностьВБанк" Тогда
		Если ИДРедакцииОтчета = "ФормаОтчета2011Кв4"
		 ИЛИ ИДРедакцииОтчета = "ФормаОтчета2017Кв3" Тогда
			ОткрытьРасшифровкуБухОтчетность(ИДИменПоказателей, ПараметрыОтчета);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// См. РегламентированнаяОтчетностьКлиентПереопределяемый.ПроверитьНастройкиАвтозаполненияОтчета
Процедура ПроверитьНастройкиАвтозаполненияОтчета(ПараметрыОтчета, ВыполняемоеОповещение, СтандартнаяОбработка) Экспорт
	
	ИмяОтчета   = ПараметрыОтчета.ИДОтчета;
	ИмяФормы    = ПараметрыОтчета.ИДРедакцииОтчета;
	Организация = ПараметрыОтчета.Организация;
	
	РезультатПроверки = ЗаполнениеФормСтатистикиВызовСервера.ПроверитьНастройкиЗаполненияОтчета(ИмяОтчета, ИмяФормы, Организация);
		
	Если РезультатПроверки = Неопределено Тогда
		// У пользователя нет прав на редактирование настроек.
		// Поэтому предложить ему ничего не можем.
		// Либо настройка формы не предусмотрена.
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, Истина);
		// Обработка оповещения более не требуется
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	ФормаСтатистики 			= РезультатПроверки.ФормаСтатистики;
	ВыполнялисьНастройкиФормы 	= РезультатПроверки.ВыполнялисьНастройкиФормы;
	
	Если Не ВыполнялисьНастройкиФормы Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Кнопки = Новый СписокЗначений();
		
		Кнопки.Добавить(КодВозвратаДиалога.Да, 		"Открыть настройки");
		Кнопки.Добавить(КодВозвратаДиалога.Нет, 	"Заполнить");
		Кнопки.Добавить(КодВозвратаДиалога.Отмена, 	"Отмена");
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ВыполняемоеОповещение", ВыполняемоеОповещение);
		ДополнительныеПараметры.Вставить("Организация", Организация);
		ДополнительныеПараметры.Вставить("ФормаСтатистики", ФормаСтатистики);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьНастройкиЗаполненияОтчетаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ТекстВопроса = "Перед заполнением этой формы рекомендуем проверить настройки заполнения
			|";
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки);
		
	КонецЕсли;
	
КонецПроцедуры

// См. РегламентированнаяОтчетностьКлиентПереопределяемый.ПередЗаполнениемОтчета
Процедура ПередЗаполнениемОтчета(ИДОтчета, ПараметрыОтчета, ФормаОтчета, ОписаниеОповещения, СтандартнаяОбработка = Неопределено) Экспорт
	
	Если СтрНайти(ИДОтчета, "РегламентированноеУведомлениеЕНВД") = 1 Тогда
		
		СтандартнаяОбработка = Ложь;
		
		УчетЕНВДКлиент.ПередЗаполнениемЗаявления(ПараметрыОтчета, ФормаОтчета, ОписаниеОповещения);
	ИначеЕсли СтрНайти(ИДОтчета, "РегламентированноеУведомлениеУтратаПраваПатент") = 1 Тогда
		
		СтандартнаяОбработка = Ложь;
		
		УчетПСНКлиент.ПередЗаполнениемЗаявленияУтратаПраваНаПатент(ПараметрыОтчета, ФормаОтчета, ОписаниеОповещения);
	ИначеЕсли СтрНайти(ИДОтчета, "РегламентированноеУведомлениеПрекращениеПатент") = 1 Тогда
		
		СтандартнаяОбработка = Ложь;
		
		УчетПСНКлиент.ПередЗаполнениемЗаявленияПрекращениеПатента(ПараметрыОтчета, ФормаОтчета, ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

// См. РегламентированнаяОтчетностьКлиентПереопределяемый.ВыполнитьНазначаемуюКомандуНаКлиенте
Процедура ВыполнитьНазначаемуюКомандуНаКлиенте(Форма) Экспорт
	
	Организации = Форма.Организация;
	
	Если Организации.Количество() = 1 Тогда
		ОрганизацияОтчета = Организации.Получить(0).Значение;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация", ОрганизацияОтчета);
	ПараметрыФормы.Вставить("НачалоПериода", Форма.ДатаНачалаПериодаОтчета);
	ПараметрыФормы.Вставить("КонецПериода", Форма.ДатаКонцаПериодаОтчета);
	
	ОткрытьФорму("Отчет.ЭкспрессПроверкаВеденияУчета.Форма", Новый Структура("ПараметрыФормы", ПараметрыФормы));
	
КонецПроцедуры

// См. РегламентированнаяОтчетностьКлиентПереопределяемый.ОткрытьФормуНастройкиАвтозаполнения
Процедура ОткрытьФормуНастройкиАвтозаполнения(ПараметрыФормы) Экспорт
	
	Перем ИмяОтчета, ИмяФормы, ИмяПоля, Организация;
	
	ПараметрыФормы.Свойство("ИДОтчета",             ИмяОтчета);
	ПараметрыФормы.Свойство("ИДРедакцииОтчета",     ИмяФормы);
	ПараметрыФормы.Свойство("ИДТекущегоПоказателя", ИмяПоля); // Может не передаваться или передаваться Неопределено, если пользователь хочет выполнить настройку для всей формы
	ПараметрыФормы.Свойство("Организация",          Организация);
	
	ОписаниеФормы = ЗаполнениеФормСтатистикиВызовСервера.ОписаниеФормыНастройкиПоля(ИмяОтчета, ИмяФормы, ИмяПоля, Организация);
	
	Если ТипЗнч(ОписаниеФормы) = Тип("Строка") Тогда
		
		ПоказатьПредупреждение(,ОписаниеФормы);
		
	Иначе
		
		ОткрытьФорму(ОписаниеФормы.ИмяФормы, ОписаниеФормы.ПараметрыФормы);
		
	КонецЕсли;
	
КонецПроцедуры

// См. РегламентированнаяОтчетностьКлиентПереопределяемый.ОбработчикСозданияУведомления
Процедура ОбработчикСозданияУведомления(Форма, Параметр) Экспорт
	
	Если ТипЗнч(Параметр) = Тип("Структура") Тогда 
		ВидУведомления = Неопределено;
		Параметр.Свойство("ВидУведомления", ВидУведомления);
		
		Если ВидУведомления = ПредопределенноеЗначение("Перечисление.ВидыУведомленийОСпецрежимахНалогообложения.ФормаТС1") Тогда 
			ТорговыйСборКлиент.ПриВыбореВидаУведомления(Форма, Параметр);
		КонецЕсли;
		
		Если ВидУведомления =
			ПредопределенноеЗначение("Перечисление.ВидыУведомленийОСпецрежимахНалогообложения.ОсвобождениеОтУплатыНДС") Тогда
			УведомлениеОбОсвобожденииОтУплатыНДСКлиент.ПриВыбореВидаУведомления(Форма, Параметр);
		КонецЕсли;
		
		РегистрацияОрганизацииКлиент.ОбработчикСозданияУведомления(Форма, Параметр);
	КонецЕсли;
	
КонецПроцедуры

// См. РегламентированнаяОтчетностьКлиентПереопределяемый.ОткрытьФормуВыбораКодаПоОКВЭД
Процедура ОткрытьФормуВыбораКодаПоОКВЭДЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(РезультатВыбора) Тогда
		ВозвращаемыйРезультат = Новый Структура();
		ВозвращаемыйРезультат.Вставить("КодОКВЭД", РезультатВыбора.Код);
		ВозвращаемыйРезультат.Вставить("НаименованиеОКВЭД", РезультатВыбора.Наименование);
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ВыполняемоеОповещение, ВозвращаемыйРезультат);
	КонецЕсли;
	
КонецПроцедуры

// См. РегламентированнаяОтчетностьКлиентПереопределяемый.ОткрытьФормуДляЗаполненияРегистрирующегоОргана
Процедура ОткрытьФормуДляЗаполненияРегистрирующегоОргана(Организация, ВыполняемоеОповещение) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Организация);
	ОткрытьФорму("Справочник.Организации.Форма.ФормаОрганизации", ПараметрыФормы,,,,, ВыполняемоеОповещение);
	
КонецПроцедуры

#КонецОбласти

Процедура ОткрытьРасшифровкуБухОтчетность(ИДИменПоказателей, ПараметрыОтчета)
	
	ПараметрыФормы = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПараметрыОтчета);
	ПараметрыФормы.Вставить("ИДИменПоказателей", ИДИменПоказателей);
	
	ЗаголовокРасшифровкиДляВсегоРаздела = НаименованиеРасшифровкиБухОтчетности(
		"Бухгалтерская отчетность", ПараметрыОтчета.мДатаНачалаПериодаОтчета, ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	
	Если НЕ ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ЕстьРасшифровкаПоПоказателям(ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, ИДИменПоказателей) Тогда
		ТекстВопроса = НСтр("ru = 'Для выбранной ячейки расшифровка не существует." + Символы.ПС
			+ "Показать расшифровку для всех показателей формы?'");
		ДополнительныеПараметры = Новый Структура("ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы", ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьРасшифровкуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ПоказатьРасшифровкуВсехПоказателейФормы(ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРасшифровкуОтчетНДС(ИДИменПоказателей, ПараметрыОтчета)
	
	Если ИДИменПоказателей.Количество() > 0 Тогда
		
		ПользовательскиеНастройки = Неопределено;
		
		ИдПоказателя = ИДИменПоказателей[0];
		
		ИдентификаторМакета = УчетНДСВызовСервера.ПолучитьИдентификаторМакетаРасшифровкиДекларацииПоНДС(ПараметрыОтчета, ИдПоказателя, ПользовательскиеНастройки);
		
		Если ЗначениеЗаполнено(ИдентификаторМакета) Тогда
			
			Если ТипЗнч(ИдентификаторМакета) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
				
				ПараметрыФормы = Новый Структура();
				ПараметрыФормы.Вставить("Ключ", ИдентификаторМакета);
				ОткрытьФорму("Справочник.ОсновныеСредства.ФормаОбъекта", ПараметрыФормы,, Новый УникальныйИдентификатор);
				
			Иначе
				
				Если ПользовательскиеНастройки = Неопределено Тогда
					ПользовательскиеНастройки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
				КонецЕсли;
				
				ЕстьОтбор = ПользовательскиеНастройки.Элементы.Найти("Отбор") <> Неопределено;
				ЗаполняемыеНастройки = Новый Структура("Показатели, Группировка, Отбор, ВыводимыеДанные", Ложь, Ложь, ЕстьОтбор, Ложь);
				
				ДополнительныеСвойства = ПользовательскиеНастройки.ДополнительныеСвойства;
				ДополнительныеСвойства.Вставить("РежимРасшифровки", Истина);
				ДополнительныеСвойства.Вставить("Организация",      ПараметрыОтчета.Организация);
				
				Если ПараметрыОтчета.Свойство("ДатаНачалаРасширенногоПериодаОтчета") Тогда
					ДополнительныеСвойства.Вставить("НачалоПериода", ПараметрыОтчета.ДатаНачалаРасширенногоПериодаОтчета);
				Иначе
					ДополнительныеСвойства.Вставить("НачалоПериода", ПараметрыОтчета.ДатаНачалаПериодаОтчета);
				КонецЕсли;
				
				ДополнительныеСвойства.Вставить("КонецПериода",      ПараметрыОтчета.ДатаКонцаПериодаОтчета);
				ДополнительныеСвойства.Вставить("ВыводитьЗаголовок", Истина);
				ДополнительныеСвойства.Вставить("КлючВарианта",      ИдентификаторМакета);
				
				ГруппаОрганизаций = Новый СписокЗначений;
				Если ПараметрыОтчета.Свойство("ГруппаОрганизаций", ГруппаОрганизаций)
					И ТипЗнч(ГруппаОрганизаций) = Тип("СписокЗначений")
					И ГруппаОрганизаций.Количество() > 0 Тогда
					
					ДополнительныеСвойства.Вставить("ВключатьОбособленныеПодразделения", Истина);
					
				КонецЕсли;
				
				ПараметрыФормы = Новый Структура();
				ПараметрыФормы.Вставить("ВидРасшифровки", 2);
				ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
				ПараметрыФормы.Вставить("ИДРасшифровки", ИдентификаторМакета);
				ПараметрыФормы.Вставить("ЗаполняемыеНастройки", ЗаполняемыеНастройки);
				ПараметрыФормы.Вставить("ЭтоРасшифровкаДекларации", Истина);
				ПараметрыФормы.Вставить("ПользовательскиеНастройки", ПользовательскиеНастройки);
				
				ОткрытьФорму("Отчет.РасшифровкаПоказателейНДС.Форма.ФормаОтчета", ПараметрыФормы,, Новый УникальныйИдентификатор);
			КонецЕсли;
		Иначе
			ТекстПредупреждения = НСтр("ru = 'Для выбранной ячейки расшифровка не существует.'");
			ПоказатьПредупреждение(,ТекстПредупреждения);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРасшифровкуОтчетИмущество(ИДИменПоказателей, ПараметрыОтчета)
	
	Если ИДИменПоказателей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
		
	ПоказательДляРасшифровки = ИДИменПоказателей[0] + ?(ПараметрыОтчета.НомерТекущейстраницы = 0, "", "_" + ПараметрыОтчета.НомерТекущейстраницы);
	
	// Если показатель расшифровывается таблицей детальных записей, то используем стандартную форму расшифровки...
	Если ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ЕстьДетальныеЗаписиРасшифровки(
		 ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, 
		 ПоказательДляРасшифровки) Тогда
		 
		ПараметрыФормы = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПараметрыОтчета);
		ПараметрыФормы.Вставить("ИДИменПоказателей", ИДИменПоказателей);
		ОткрытьФорму("ОбщаяФорма.РасшифровкаПоказателейРегламентированныхОтчетов", ПараметрыФормы,, Истина);
		Возврат;
		 
	КонецЕсли;	 
	
	// ... в ином случае расшифровка выполняет справкой-расчетом налога на имущество
	ДополнительныеПараметрыРасшифровки = ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ПолучитьДополнительныеПараметрыРасшифровкиПоказателя(ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, ПоказательДляРасшифровки);
			
	Если ДополнительныеПараметрыРасшифровки = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru = 'Для выбранной ячейки расшифровка не существует.'");
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат;
	КонецЕсли;	
		
	Если ДополнительныеПараметрыРасшифровки.РегламентныеОперацииВыполнены Тогда
		
		ПараметрыРасшифровки = ДополнительныеПараметрыРасшифровки.ПараметрыРасшифровки;
		
		ЗаполняемыеНастройки = Новый Структура("Показатели, Группировка, Отбор, ВыводимыеДанные", Ложь, Истина, Истина, Ложь);
		ДополнительныеСвойства = ПараметрыРасшифровки.ДополнительныеСвойства;
		ДополнительныеСвойства.Вставить("РежимРасшифровки",  Истина);
		ДополнительныеСвойства.Вставить("Организация",       ПараметрыОтчета.Организация);
		ДополнительныеСвойства.Вставить("НачалоПериода", 	 ПараметрыОтчета.ДатаНачалаПериодаОтчета);
		Если ДополнительныеПараметрыРасшифровки.Свойство("КонецПериода") Тогда
			ДополнительныеСвойства.Вставить("КонецПериода",  ДополнительныеПараметрыРасшифровки.КонецПериода);
		Иначе
			ДополнительныеСвойства.Вставить("КонецПериода",  ПараметрыОтчета.ДатаКонцаПериодаОтчета);
		КонецЕсли;	
		ДополнительныеСвойства.Вставить("КлючВарианта",      "РасчетНалогаНаимущество");
		
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("ВидРасшифровки", 2);
		ПараметрыФормы.Вставить("СформироватьПриОткрытии", 		Истина);
		ПараметрыФормы.Вставить("ЗаполняемыеНастройки", 		ЗаполняемыеНастройки);
		ПараметрыФормы.Вставить("ПользовательскиеНастройки", 	ПараметрыРасшифровки);
		
		ОткрытьФорму("Отчет.СправкаРасчетНалогаНаИмущество.Форма.ФормаОтчета", ПараметрыФормы,, Новый УникальныйИдентификатор);
	Иначе
		ТекстПредупреждения = НСтр("ru = 'Для расшифровки показателя необходимо выполнить регламентную операцию ""Расчет налога на имущество"".'");
		ПоказатьПредупреждение(,ТекстПредупреждения);
	КонецЕсли;
			
КонецПроцедуры

Процедура ОткрытьРасшифровкуОтчетАвансыИмуществоФормаОтчета2013Кв4(ИДИменПоказателей, ПараметрыОтчета)
	
	Если ИДИменПоказателей.Количество() > 0 Тогда
		
		ПоказательДляРасшифровки = ИДИменПоказателей[0] + "_" + ПараметрыОтчета.НомерТекущейстраницы;
		
		ДополнительныеПараметрыРасшифровки = ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ПолучитьДополнительныеПараметрыРасшифровкиПоказателя(ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, ПоказательДляРасшифровки);
		
		Если ДополнительныеПараметрыРасшифровки <> Неопределено 
			И ДополнительныеПараметрыРасшифровки.РегламентныеОперацииВыполнены Тогда
			
			ПараметрыРасшифровки = ДополнительныеПараметрыРасшифровки.ПараметрыРасшифровки;
			
			ЗаполняемыеНастройки = Новый Структура("Показатели, Группировка, Отбор, ВыводимыеДанные", Ложь, Истина, Истина, Ложь);
			ДополнительныеСвойства = ПараметрыРасшифровки.ДополнительныеСвойства;
			ДополнительныеСвойства.Вставить("РежимРасшифровки",  Истина);
			ДополнительныеСвойства.Вставить("Организация",       ПараметрыОтчета.Организация);
			ДополнительныеСвойства.Вставить("НачалоПериода",     ПараметрыОтчета.ДатаНачалаПериодаОтчета);
			ДополнительныеСвойства.Вставить("КонецПериода",      ПараметрыОтчета.ДатаКонцаПериодаОтчета);
			ДополнительныеСвойства.Вставить("КлючВарианта",      "РасчетНалогаНаимущество");
			
			ПараметрыФормы = Новый Структура();
			ПараметрыФормы.Вставить("ВидРасшифровки", 2);
			ПараметрыФормы.Вставить("СформироватьПриОткрытии", 		Истина);
			ПараметрыФормы.Вставить("ЗаполняемыеНастройки", 		ЗаполняемыеНастройки);
			ПараметрыФормы.Вставить("ПользовательскиеНастройки", 	ПараметрыРасшифровки);
			
			ОткрытьФорму("Отчет.СправкаРасчетНалогаНаИмущество.Форма.ФормаОтчета", ПараметрыФормы,, Новый УникальныйИдентификатор);
		Иначе
			Если ДополнительныеПараметрыРасшифровки = Неопределено Тогда
				ТекстПредупреждения = НСтр("ru = 'Для выбранной ячейки расшифровка не существует.'");
			Иначе
				ТекстПредупреждения = НСтр("ru = 'Для расшифровки показателя необходимо выполнить регламентную операцию ""Расчет налога на имущество"".'");
			КонецЕсли;
			ПоказатьПредупреждение(,ТекстПредупреждения);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРасшифровкуБухОтчетностьМП(ИДИменПоказателей, ПараметрыОтчета)
	
	ПараметрыФормы = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПараметрыОтчета);
	ПараметрыФормы.Вставить("ИДИменПоказателей", ИДИменПоказателей);
	
	ЗаголовокРасшифровкиДляВсегоРаздела = НаименованиеРасшифровкиБухОтчетности(
		"Упрощенная бухгалтерская отчетность", ПараметрыОтчета.ДатаНачалаПериодаОтчета, ПараметрыОтчета.ДатаКонцаПериодаОтчета);
	
	Если НЕ ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ЕстьРасшифровкаПоПоказателям(ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, ИДИменПоказателей) Тогда
		ТекстВопроса = НСтр("ru = 'Для выбранной ячейки расшифровка не существует." + Символы.ПС
			+ "Показать расшифровку для всех показателей формы?'");
		ДополнительныеПараметры = Новый Структура("ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы", ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьРасшифровкуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ПоказатьРасшифровкуВсехПоказателейФормы(ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРасшифровкуБухОтчетностьСОНКО(ИДИменПоказателей, ПараметрыОтчета)
	
	ПараметрыФормы = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПараметрыОтчета);
	ПараметрыФормы.Вставить("ИДИменПоказателей", ИДИменПоказателей);
	
	ЗаголовокРасшифровкиДляВсегоРаздела = НаименованиеРасшифровкиБухОтчетности(
		"Бухгалтерская отчетность СО НКО", ПараметрыОтчета.ДатаНачалаПериодаОтчета, ПараметрыОтчета.ДатаКонцаПериодаОтчета);
	
	Если НЕ ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ЕстьРасшифровкаПоПоказателям(ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, ИДИменПоказателей) Тогда
		ТекстВопроса = НСтр("ru = 'Для выбранной ячейки расшифровка не существует." + Символы.ПС
			+ "Показать расшифровку для всех показателей формы?'");
		ДополнительныеПараметры = Новый Структура("ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы", ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьРасшифровкуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ПоказатьРасшифровкуВсехПоказателейФормы(ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРасшифровкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ЗаголовокРасшифровкиДляВсегоРаздела = ДополнительныеПараметры.ЗаголовокРасшифровкиДляВсегоРаздела;
	ПараметрыФормы = ДополнительныеПараметры.ПараметрыФормы;
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПоказатьРасшифровкуВсехПоказателейФормы(ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьРасшифровкуВсехПоказателейФормы(ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы)
	
	ПараметрыФормы.Вставить("ЗаголовокРасшифровки", ЗаголовокРасшифровкиДляВсегоРаздела);
	ОткрытьФорму("ОбщаяФорма.РасшифровкаПоказателейРегламентированныхОтчетов", ПараметрыФормы, , Истина);
	
КонецПроцедуры

Процедура ОткрытьРасшифровкуОтчетПрибыль(ИДИменПоказателей, ПараметрыОтчета)
	
	ПараметрыФормы = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПараметрыОтчета);
	ПараметрыФормы.Вставить("ИДИменПоказателей", ИДИменПоказателей);
	
	ЗаголовокРасшифровкиДляВсегоРаздела = НаименованиеРасшифровкиДекларацииПоНалогуНаПрибыль(
		ПараметрыОтчета.мДатаНачалаПериодаОтчета, ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	
	Если НЕ ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ЕстьРасшифровкаПоПоказателям(ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, ИДИменПоказателей) Тогда
		ТекстВопроса = НСтр("ru = 'Для выбранной ячейки расшифровка не существует." + Символы.ПС
			+ "Показать расшифровку для всех показателей формы?'");
			
		ДополнительныеПараметры = Новый Структура("ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы", ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьРасшифровкуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ПоказатьРасшифровкуВсехПоказателейФормы(ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

// Процедура завершения проверки настройки заполнения статистических отчетов
// Вызывается если задан вопрос, про проверку настроек заполнения.
//
Процедура ПроверитьНастройкиЗаполненияОтчетаЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Организация = ДополнительныеПараметры.Организация;
	ФормаСтатистики = ДополнительныеПараметры.ФормаСтатистики;
	ВыполняемоеОповещение = ДополнительныеПараметры.ВыполняемоеОповещение;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Организация", Организация);
		ПараметрыФормы.Вставить("ФормаСтатистики", ФормаСтатистики);
		ОткрытьФорму("РегистрСведений.НастройкаЗаполненияФормСтатистики.Форма.НастройкаЗаполненияФормСтатистики", ПараметрыФормы);
		Результат = Ложь;
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		ЗаполнениеФормСтатистикиВызовСервера.ЗаписатьНастройкиВыполнены(ФормаСтатистики, Организация);
		Результат = Истина;
	Иначе
		Результат = Ложь;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, Результат);
	
КонецПроцедуры

Функция НаименованиеРасшифровкиБухОтчетности(НаименованиеОтчета, НачалоПериода, КонецПериода)
	
	Если НачалоГода(НачалоПериода) <> НачалоДня(НачалоПериода) Тогда
		ПериодОтчета = Формат(НачалоПериода, "ДФ=dd.MM.yyyy") + " - " + Формат(КонецПериода, "ДФ='ММММ гггг'") + " г." ;
	Иначе
		Если Месяц(КонецПериода) = 1 Тогда 
			ПериодОтчета = Формат(КонецПериода, "ДФ='ММММ гггг'") + " г." ;
		Иначе
			ПериодОтчета = "Январь - " + Формат(КонецПериода, "ДФ='ММММ гггг'") + " г." ;
		КонецЕсли;
	КонецЕсли;
	
	Возврат НаименованиеОтчета + " за " + ПериодОтчета + " - расшифровка значений показателей";
	
КонецФункции

Функция НаименованиеРасшифровкиДекларацииПоНалогуНаПрибыль(НачалоПериода, КонецПериода)
	
	ПериодОтчета = ПредставлениеПериода(НачалоДня(НачалоПериода), КонецДня(КонецПериода), "ФП = Истина");
	
	Возврат "Декларация по налогу на прибыль за " + ПериодОтчета + " - расшифровка значений показателей";
	
КонецФункции
