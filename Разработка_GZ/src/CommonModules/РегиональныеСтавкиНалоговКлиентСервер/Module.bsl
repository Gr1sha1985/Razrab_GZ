#Область ПрограммныйИнтерфейс

// Рассчитывает потенциальный доход в зависимости от значения физического показателя, используя данные, полученные из Сервиса
//
// Параметры:
//   АдресДанныхДляРасчета - Строка - адрес временного хранилища данных расчета
//   ФизическийПоказатель - Число - значение физического показателя
//   ОписаниеОшибки - Строка - возвращаемое значение описания ошибки
// 
// Возвращаемое значение:
//   Число, Неопределено - в случае возникновения ошибки возвращается Неопределено
//
Функция ПотенциальныйДоход(АдресДанныхДляРасчета, Знач ФизическийПоказатель = Неопределено, ОписаниеОшибки = "") Экспорт
	
	Перем Результат;
	
	Если ЭтоАдресВременногоХранилища(АдресДанныхДляРасчета) Тогда
		ДанныеДляРасчета = ПолучитьИзВременногоХранилища(АдресДанныхДляРасчета);
	КонецЕсли;
	
	Если ДанныеДляРасчета = Неопределено Тогда
		ОписаниеОшибки = НСтр("ru = 'Неизвестная ошибка при получении данных для расчета потенциального дохода'");
		Возврат Неопределено;
	КонецЕсли;
	
	Если ФизическийПоказатель <> Неопределено И ЗначениеЗаполнено(ДанныеДляРасчета.ИмяФизическогоПоказателя) Тогда
		РазрядностьФизическогоПоказателя = Цел(ДанныеДляРасчета.РазрядностьФизическогоПоказателя);
		РежимОкругленияФизическогоПоказателя = Строка(ДанныеДляРасчета.РежимОкругленияФизическогоПоказателя);
		ФизическийПоказатель = ОкруглитьЗначениеФизическогоПоказателя(
			ФизическийПоказатель,
			РазрядностьФизическогоПоказателя,
			РежимОкругленияФизическогоПоказателя);
	КонецЕсли;
	
	Для Каждого СтрокаДанных Из ДанныеДляРасчета.РазмерыПотенциальногоДохода Цикл
		
		Если СтрокаДанных.ФизическийПоказательОграничен И ФизическийПоказатель <> Неопределено Тогда
			
			Если Не ЗначениеФизическогоПоказателяПринадлежитДиапазону(ФизическийПоказатель, СтрокаДанных) Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтрокаДанных.ПотенциальныйДоход = 0 Тогда
				ГраницаФизическогоПоказателя = 0;
			ИначеЕсли СтрокаДанных.ЗначениеФизическогоПоказателяОтВключительно Тогда
				ГраницаФизическогоПоказателя = СтрокаДанных.ЗначениеФизическогоПоказателяОт - 1;
			Иначе
				ГраницаФизическогоПоказателя = СтрокаДанных.ЗначениеФизическогоПоказателяОт;
			КонецЕсли;
			
			ПотенциальныйФизическогоПоказателя =
				СтрокаДанных.ПотенциальныйДоходНаЕдиницуФизическогоПоказателя * (ФизическийПоказатель - ГраницаФизическогоПоказателя);
			
		ИначеЕсли ФизическийПоказатель <> Неопределено Тогда
			
			ПотенциальныйФизическогоПоказателя =
				СтрокаДанных.ПотенциальныйДоходНаЕдиницуФизическогоПоказателя * ФизическийПоказатель;
			
		Иначе
			
			ПотенциальныйФизическогоПоказателя = 0;
			
		КонецЕсли;
		
		ПотенциальныйДоход = Окр(СтрокаДанных.ПотенциальныйДоход + ПотенциальныйФизическогоПоказателя, 2);
		Если СтрокаДанных.МаксимальныйПотенциальныйДоход <> 0 Тогда
			ПотенциальныйДоход = Мин(ПотенциальныйДоход, СтрокаДанных.МаксимальныйПотенциальныйДоход);
		КонецЕсли;
		Если СтрокаДанных.МинимальныйПотенциальныйДоход <> 0 Тогда
			ПотенциальныйДоход = Макс(ПотенциальныйДоход, СтрокаДанных.МинимальныйПотенциальныйДоход);
		КонецЕсли;
		
		Если Результат = Неопределено Тогда
			Результат = ПотенциальныйДоход;
		ИначеЕсли Результат <> ПотенциальныйДоход Тогда
			Результат = Неопределено;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Результат = Неопределено Тогда
		Если ФизическийПоказатель <> Неопределено И ЗначениеЗаполнено(ДанныеДляРасчета.ИмяФизическогоПоказателя) Тогда
			ИмяФизическогоПоказателяПСН = ПредопределенноеЗначение(
				СтрШаблон("Перечисление.ФизическиеПоказатели.%1", ДанныеДляРасчета.ИмяФизическогоПоказателя));
			Если ФизическийПоказатель = 0 Тогда
				ОписаниеОшибки = СтрШаблон(
					НСтр("ru = 'Укажите значение ""%1""'"),
					ИмяФизическогоПоказателяПСН);
			Иначе
				ОписаниеОшибки = СтрШаблон(
					НСтр("ru = 'При выбранном значении ""%1"" патентная система налогообложения не применяется'"),
					ИмяФизическогоПоказателяПСН);
			КонецЕсли;
		Иначе
			ОписаниеОшибки = НСтр("ru = 'Результат расчета потенциального дохода не определен'");
		КонецЕсли;
	Иначе
		ОписаниеОшибки = "";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗначениеФизическогоПоказателяПринадлежитДиапазону(Значение, Диапазон)
	
	Если Диапазон.ЗначениеФизическогоПоказателяОтВключительно Тогда
		Если Значение < Диапазон.ЗначениеФизическогоПоказателяОт Тогда
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Если Значение <= Диапазон.ЗначениеФизическогоПоказателяОт Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если Диапазон.ЗначениеФизическогоПоказателяДоВключительно Тогда
		Если Диапазон.ЗначениеФизическогоПоказателяДо < Значение Тогда
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Если Диапазон.ЗначениеФизическогоПоказателяДо <> 0 И Диапазон.ЗначениеФизическогоПоказателяДо <= Значение Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ОкруглитьЗначениеФизическогоПоказателя(Знач Значение, Разрядность, Режим)
	
	Если Не ЗначениеЗаполнено(Значение) Или Разрядность = 0 Тогда
		Возврат Значение;
	КонецЕсли;
	
	Если НРег(Режим) = НРег("Окр15как20") Тогда
		
		Значение = Окр(Значение, Разрядность, РежимОкругления.Окр15как20);
		
	ИначеЕсли НРег(Режим) = НРег("Окр15как10") Тогда
		
		Значение = Окр(Значение, Разрядность, РежимОкругления.Окр15как10);
		
	ИначеЕсли НРег(Режим) = НРег("Потолок") Или НРег(Режим) = НРег("Пол") Тогда
		
		База = Pow(10, Разрядность);
		
		Значение = Значение * База;
		
		Если НРег(Режим) = НРег("Потолок") Тогда
			Если Значение > 0 Тогда
				Значение = Цел(Значение) + 1;
			ИначеЕсли Значение < 0 Тогда
				Значение = Цел(Значение);
			КонецЕсли;
		ИначеЕсли НРег(Режим) = НРег("Пол") Тогда
			Если Значение > 0 Тогда
				Значение = Цел(Значение);
			ИначеЕсли Значение < 0 Тогда
				Значение = Цел(Значение) + 1;
			КонецЕсли;
		КонецЕсли;
		
		Значение = Значение / База;
		
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции

#КонецОбласти