
#Область СлужебныйПрограммныйИнтерфейс

// Функция определяет фактический срок использования актива (в месяцах)
// исходя из даты принятия актива к учету и даты выбытия.
//
// Параметры:
//   ДатаПринятияКУчету - Дата - дата принятия актива к учету.
//   ДатаВыбытия - Дата - дата выбытия актива.
//
// Возвращаемое значение:
//   Число месяцев.
//
Функция ОпределитьФактическийСрокИспользования(ДатаПринятияКУчету, ДатаВыбытия) Экспорт
	
	КоличествоЛет     = Год(ДатаВыбытия) - Год(ДатаПринятияКУчету);
	КоличествоМесяцев = Месяц(ДатаВыбытия) - Месяц(ДатаПринятияКУчету);
	
	Возврат КоличествоЛет * 12 + КоличествоМесяцев;
	
КонецФункции // ОпределитьФактическийСрокИспользования()

Функция ПолучитьДатуПереходаКЛинейномуМетоду(ДатаРасчета, Организация) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ДатаРасчета));

	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкиУчетаНалогаНаПрибыль.Период
	|ПОМЕСТИТЬ НелинейныйМетод
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНалогаНаПрибыль.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И МетодНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.МетодыНачисленияАмортизации.Нелинейный)) КАК НастройкиУчетаНалогаНаПрибыль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиУчетаНалогаНаПрибыль.Период
	|ПОМЕСТИТЬ ЛинейныйМетод
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНалогаНаПрибыль КАК НастройкиУчетаНалогаНаПрибыль
	|ГДЕ
	|	НастройкиУчетаНалогаНаПрибыль.Организация = &Организация
	|	И НастройкиУчетаНалогаНаПрибыль.МетодНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.МетодыНачисленияАмортизации.Линейный)
	|	И НастройкиУчетаНалогаНаПрибыль.Период МЕЖДУ ДАТАВРЕМЯ(2009, 1, 1) И &НачалоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МИНИМУМ(ЛинейныйМетод.Период), ДАТАВРЕМЯ(2009, 1, 1)) КАК ДатаПереходаКЛинейномуМетоду
	|ИЗ
	|	НелинейныйМетод КАК НелинейныйМетод
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЛинейныйМетод КАК ЛинейныйМетод
	|		ПО НелинейныйМетод.Период < ЛинейныйМетод.Период";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	Возврат Выборка.ДатаПереходаКЛинейномуМетоду;

КонецФункции // ПолучитьДатуПереходаКЛинейномуМетоду()

Функция ПолучитьНормуПоАмортизационнойГруппе(АмортизационнаяГруппа) Экспорт
	
	НормаАмортизации = Неопределено;
	
	Если АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ПерваяГруппа Тогда
		НормаАмортизации         = 14.3;
	ИначеЕсли АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ВтораяГруппа Тогда
		НормаАмортизации    =  8.8;
	ИначеЕсли АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ТретьяГруппа Тогда
		НормаАмортизации    =  5.6;
	ИначеЕсли АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ЧетвертаяГруппа Тогда
		НормаАмортизации =  3.8;
	ИначеЕсли АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ПятаяГруппа Тогда
		НормаАмортизации     =  2.7;
	ИначеЕсли АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ШестаяГруппа Тогда
		НормаАмортизации    =  1.8;
	ИначеЕсли АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.СедьмаяГруппа Тогда
		НормаАмортизации   =  1.3;
	ИначеЕсли АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ВосьмаяГруппа Тогда
		НормаАмортизации   =  1.0;
	ИначеЕсли АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДевятаяГруппа Тогда
		НормаАмортизации   =  0.8;
	ИначеЕсли АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДесятаяГруппа Тогда
		НормаАмортизации   =  0.7;
	КонецЕсли;
	
	Возврат НормаАмортизации;
	
КонецФункции

Процедура СформироватьДвиженияНачислениеАмортизации(ТаблицаЗатрат, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Если Не ЗначениеЗаполнено(ТаблицаЗатрат) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыНачислениеАмортизации(ТаблицаЗатрат, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];

	ОтражатьВНалоговомУчете 		= 	УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаПБУ18					=	УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);
	МетодНачисленияАмортизацииНУ	=	УчетнаяПолитика.МетодНачисленияАмортизацииНУ(Реквизиты.Организация, Реквизиты.Период);

	Если ПустаяСтрока(Реквизиты.Содержание) Тогда
		Содержание = "Амортизация";
	Иначе
		Содержание = Реквизиты.Содержание;
	КонецЕсли;

	// С целью оптимизации производительности напрямую (а не через функции с повторно используемыми значениями) кешируем
	// свойства счетов. При заполнении субконто исключаем лишние проверки на значения субконто (наличие субконто на счете
	// и т.п. существующие в алгоритме как предусловия).
	СвойстваСчетовДтКеш = Новый Соответствие;
	СчетКтПредыдущий = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	СчетКтПредыдущийИспользованиеСубконто = Неопределено;
	ВидСубконтоОсновныеСредства = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства;
	ВидСубконтоНематериальныеАктивы = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы;
	СчетРасходыНаНИОКР = ПланыСчетов.Хозрасчетный.РасходыНаНИОКР;
	СубсчетаСтроительствоОбъектовОсновныхСредств = БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств);   // 08.03
	
	Для каждого СтрокаТаблицы Из Параметры.ТаблицаЗатрат Цикл

		Если СтрокаТаблицы.СуммаБУ = 0
			И СтрокаТаблицы.СуммаНУ = 0
			И СтрокаТаблицы.СуммаПР = 0
			И СтрокаТаблицы.СуммаВР = 0 Тогда

			Продолжить;
		КонецЕсли;

		Проводка = Движения.Хозрасчетный.Добавить();

		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;

		Если СтрокаТаблицы.СчетАмортизации = СчетРасходыНаНИОКР Тогда
			Проводка.Содержание = НСтр("ru = 'Списание стоимости НИОКР'");
		Иначе
			Проводка.Содержание = Содержание;
		КонецЕсли;

		Проводка.СчетДт = СтрокаТаблицы.СчетЗатрат;
		СвойстваСчетаДт = БухгалтерскийУчет.УстановитьСубконтоПоКешуСвойствСчета(Проводка.СчетДт, Проводка.СубконтоДт, СвойстваСчетовДтКеш,
				СтрокаТаблицы.Субконто1, СтрокаТаблицы.Субконто2, СтрокаТаблицы.Субконто3);
		
		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = СтрокаТаблицы.ПодразделениеЗатрат;
		КонецЕсли;
		
		Проводка.СчетКт = СтрокаТаблицы.СчетАмортизации;
		Если Проводка.СчетКт <> СчетКтПредыдущий Тогда   // первое использование счета амортизации	
			
			СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);
			СчетКтПредыдущийИспользованиеСубконто = Неопределено;
			Если ТипЗнч(СтрокаТаблицы.ОбъектУчета) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
				СчетКтПредыдущийИспользованиеСубконто = ВидСубконтоОсновныеСредства;
			ИначеЕсли ТипЗнч(СтрокаТаблицы.ОбъектУчета) = Тип("СправочникСсылка.НематериальныеАктивы") Тогда
				СчетКтПредыдущийИспользованиеСубконто = ВидСубконтоНематериальныеАктивы;
			КонецЕсли;
			СчетКтПредыдущий = Проводка.СчетКт;
			
		КонецЕсли;
		Если СчетКтПредыдущийИспользованиеСубконто = ВидСубконтоОсновныеСредства
		 Или СчетКтПредыдущийИспользованиеСубконто = ВидСубконтоНематериальныеАктивы Тогда
			Проводка.СубконтоКт.Вставить(СчетКтПредыдущийИспользованиеСубконто, СтрокаТаблицы.ОбъектУчета);
		КонецЕсли;
		Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеКт = СтрокаТаблицы.Подразделение;
		КонецЕсли;

		Проводка.Сумма = СтрокаТаблицы.СуммаБУ;

		Если ОтражатьВНалоговомУчете Тогда

			Если СвойстваСчетаДт.НалоговыйУчет Тогда
				Проводка.СуммаНУДт = СтрокаТаблицы.СуммаНУ;
				Если ПоддержкаПБУ18 Тогда
					Проводка.СуммаПРДт = СтрокаТаблицы.СуммаПР;
					Проводка.СуммаВРДт = СтрокаТаблицы.СуммаВР;
				КонецЕсли;
			КонецЕсли;

			Если СвойстваСчетаКт.НалоговыйУчет Тогда
				Проводка.СуммаНУКт = СтрокаТаблицы.СуммаНУ;
				Если ПоддержкаПБУ18 Тогда
					Проводка.СуммаПРКт = СтрокаТаблицы.СуммаПР;
					Проводка.СуммаВРКт = СтрокаТаблицы.СуммаВР;
				КонецЕсли;
			КонецЕсли;

		КонецЕсли;

		// С целью оптимизации производительности проверки выполняем в цикле, а не в вызываемой функции ОпределитьНеПринимаемыеРасходы().
		Если ПоддержкаПБУ18
		   И СвойстваСчетаДт.НалоговыйУчет
		   И СубсчетаСтроительствоОбъектовОсновныхСредств.Найти(СвойстваСчетаДт.Ссылка) = Неопределено
		   И НалоговыйУчет.ОпределитьНеПринимаемыеРасходы(Проводка, Истина) Тогда
			Проводка.СуммаПРДт = Проводка.СуммаПРДт + Проводка.СуммаНУДт;
			Проводка.СуммаНУДт = 0;
		КонецЕсли;
		
	КонецЦикла;

	Движения.Хозрасчетный.Записывать = Истина;

	// Вызов переопределяемой процедуры для выполнения связанных движений в других подсистемах.
	УправлениеВнеоборотнымиАктивамиПереопределяемый.ВыполнитьДополнительныеДействияНачислениеАмортизации(ТаблицаЗатрат, ТаблицаРеквизиты, Движения, Отказ);

КонецПроцедуры

Функция ПодготовитьПараметрыНачислениеАмортизации(ТаблицаЗатрат, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаЗатрат

	СписокОбязательныхКолонок = ""
	+ "ОбъектУчета,"         // <СправочникСсылка.ОсновныеСредства>
	+ "ПодразделениеЗатрат," // <СправочникСсылка.ПодразделенияОрганизации> - подразделение организации, в которое
		// будут отнесены затраты от начисления амортизации
	+ "Подразделение,"       // <СправочникСсылка.ПодразделенияОрганизации> - подразделение организации, в котором
		// учитывается ОС
	+ "Субконто1,"           // <Характеристика.ВидыСубконтоХозрасчетные> - субконто затрат
	+ "Субконто2,"           // <Характеристика.ВидыСубконтоХозрасчетные> - субконто затрат
	+ "Субконто3,"           // <Характеристика.ВидыСубконтоХозрасчетные> - субконто затрат
	+ "СуммаБУ,"             // <Число, 15, 2> - сумма амортизации по данным бухгалтерского учета
	+ "СуммаНУ,"             // <Число, 15, 2> - сумма амортизации по данным налогового учета
	+ "СуммаПР,"             // <Число, 15, 2> - постоянные разницы в оценке амортизации (ПБУ 18/02)
	+ "СуммаВР,"             // <Число, 15, 2> - временные разницы в оценке амортизации (ПБУ 18/02)
	+ "СчетЗатрат,"          // <ПланСчетовСсылка.Хозрасчетный> - счет учета затрат по амортизации ОС
	+ "СчетАмортизации";     // <ПланСчетовСсылка.Хозрасчетный> - счет начисления амортизации ОС

	Параметры.Вставить("ТаблицаЗатрат",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаЗатрат, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "Организация," // <СправочникСсылка.Организации>
	+ "Содержание";  // <Строка, 150>

	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// Позволяет определить есть ли в табличной части документа строки с дублирующимеся
// значениями заданных реквизитов (всех одновременно).
// При нахождении дублей формирует сообщения пользователю.
//
// Параметры
//  Объект            - Объект ссылочного типа
//  ИмяТабличнойЧасти - Имя табличной части, в которой нужно искать дубли
//  ПоляПроверки      - Структура с перечнем реквизитов, по которым нужно искать дубли.
//                      Ключ структуры - имя реквизита, значение - признак необходимости
//                      поиска дублей в том числе по пустым значениям. Истина - искать
//                      дубли по пустым значениям реквизита, любое другое значение - 
//                      игнорировать строки, в которых реквизит не заполнен
//  Отказ             - Признак отказа от дальнейшей обработки. В случае нахождения дублей
//                      выставляется в Истина.
//
// Возвращаемое значение:
//   Булево - Истина - ошибок (дублей) не обнаружено, Ложь - в противном случае.
//
Функция ПроверитьОтсутствиеДублейВТабличнойЧасти(Объект, ИмяТабличнойЧасти, ПоляПроверки, Отказ) Экспорт
	
	СтруктураОтбора = Новый Структура;
	
	ПоляПроверкиСтрокой = "";
	Для Каждого КлючИЗначение Из ПоляПроверки Цикл
		ПоляПроверкиСтрокой = ПоляПроверкиСтрокой + ", " + КлючИЗначение.Ключ;
		СтруктураОтбора.Вставить(КлючИЗначение.Ключ);
	КонецЦикла;
	ПоляПроверкиСтрокой = Сред(ПоляПроверкиСтрокой, 3);
	
	НаборыЗначений = Объект[ИмяТабличнойЧасти].Выгрузить(, ПоляПроверкиСтрокой);
	НаборыЗначений.Колонки.Добавить("__КоличествоВхождений", ОбщегоНазначения.ОписаниеТипаЧисло(10));
	НаборыЗначений.ЗаполнитьЗначения(1, "__КоличествоВхождений");
	НаборыЗначений.Свернуть(ПоляПроверкиСтрокой, "__КоличествоВхождений");
	
	НайденыДубли = Ложь;
	
	Если ПоляПроверки.Количество() > 1 Тогда
		ШаблонСообщенияОбОшибке = НСтр("ru = 'Значения %1 повторяются в строках %2.'");
	Иначе
		ШаблонСообщенияОбОшибке = НСтр("ru = 'Значение %1 повторяется в строках %2.'");
	КонецЕсли;
	ТекстСообщения = "";
	
	Если НаборыЗначений.Количество() <> Объект[ИмяТабличнойЧасти].Количество() Тогда
		// Есть дубли
		Для Каждого НаборЗначений Из НаборыЗначений Цикл
			Если НаборЗначений.__КоличествоВхождений = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			ЗначенияСтрокой = "";
			
			ПропуститьНаборЗначений = Ложь;
			Для Каждого КлючИЗначение Из ПоляПроверки Цикл
				Если КлючИЗначение.Значение <> Истина Тогда
					Если НЕ ЗначениеЗаполнено(НаборЗначений[КлючИЗначение.Ключ]) Тогда
						ПропуститьНаборЗначений = Истина;
						Прервать;
					КонецЕсли;
				КонецЕсли;
				
				ЗначенияСтрокой = ЗначенияСтрокой + ", """ + НаборЗначений[КлючИЗначение.Ключ] + """";
			КонецЦикла;
			Если ПропуститьНаборЗначений Тогда
				Продолжить;
			КонецЕсли;
			
			НайденыДубли = Истина;
			
			ЗначенияСтрокой = Сред(ЗначенияСтрокой, 3);
			
			НомераСтрок = "";
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, НаборЗначений);
			СтрокиДубли = Объект[ИмяТабличнойЧасти].НайтиСтроки(СтруктураОтбора);
			Для Каждого СтрокаДубль Из СтрокиДубли Цикл
				НомераСтрок = НомераСтрок + ", " + Формат(СтрокаДубль.НомерСтроки, "ЧГ=");
			КонецЦикла;
			НомераСтрок = Сред(НомераСтрок, 3);
			
			ТекстСообщения = ТекстСообщения + Символы.ПС + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонСообщенияОбОшибке, ЗначенияСтрокой, НомераСтрок);
		КонецЦикла;
	КонецЕсли;
	
	Если НайденыДубли Тогда
		ПредставленияРеквизитов = "";
		МетаданныеТабличнойЧасти = Объект.Метаданные().ТабличныеЧасти[ИмяТабличнойЧасти];
		Для Каждого КлючИЗначение Из ПоляПроверки Цикл
			ПредставленияРеквизитов = ПредставленияРеквизитов + ", """
				+ МетаданныеТабличнойЧасти.Реквизиты[КлючИЗначение.Ключ].Представление() + """";
		КонецЦикла;
		ПредставленияРеквизитов = Сред(ПредставленияРеквизитов, 3);
		
		Если ПоляПроверки.Количество() > 1 Тогда
			ШаблонСообщения = НСтр("ru = 'Значения в колонках %1 не должны повторяться.'");
		Иначе
			ШаблонСообщения = НСтр("ru = 'Значения в колонке %1 не должны повторяться.'");
		КонецЕсли;
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, ПредставленияРеквизитов)
			+ ТекстСообщения;
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("СПИСОК", "КОРРЕКТНОСТЬ", , ,
			МетаданныеТабличнойЧасти.Представление(), ТекстСообщения);
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ИмяТабличнойЧасти);
		
		Отказ = Истина;
	КонецЕсли;
	
	Возврат НЕ НайденыДубли;
	
КонецФункции // ПроверитьОтсутствиеДублейВТабличнойЧасти()

// Возвращает пустую таблицу значений с заранее созданными колонками
// Нужно для создания пустых таблиц значения для дальнейшей
//   обработки в функциях "ПодготовитьПараметры*"
//
Функция ПолучитьПустуюТаблицуЗначенийСКолонками(СтруктураКолонок) Экспорт

	Таблица = Новый ТаблицаЗначений;

	Для Каждого ТекущаяКолонка Из СтруктураКолонок Цикл
		Если ТипЗнч(ТекущаяКолонка.Значение) = Тип("Тип") Тогда
			НоваяКолонка = Таблица.Колонки.Добавить(ТекущаяКолонка.Ключ, ТекущаяКолонка.Значение);
		Иначе
			НоваяКолонка = Таблица.Колонки.Добавить(ТекущаяКолонка.Ключ);
		КонецЕсли;
	КонецЦикла;

	Возврат Таблица;

КонецФункции

// Определяет коэффициент распределения выручки по видам деятельности 
// (ЕНВД / не ЕНВД) за период.
//
// Параметры:
//  Организация - СправочникСсылка.Организации - организация;
//  НачДата     - Дата - начало периода расчета;
//  КонДата     - Дата - окончание периода расчета.
//
// Возвращаемое значение:
//  Число - коэффициент распределения расходов по видам деятельности.
//
Функция КоэффициентРаспределенияВыручкиПоВидамДеятельности(Организация, Знач НачДата, Знач КонДата) Экспорт
	
	// Массив счетов, по которым рассчитывается выручка организации.
	МассивСчетов = Новый Массив;
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.Выручка);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_НДС);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_Акцизы);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.Продажи_ЭкспортныеПошлины);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",      Организация);
	Запрос.УстановитьПараметр("НачДата",          НачДата);
	Запрос.УстановитьПараметр("КонДата",          КонДата);
	Запрос.УстановитьПараметр("СчетВыручкаЕНВД",  БухгалтерскийУчетПовтИсп.СчетаВыручкиЕНВД());
	Запрос.УстановитьПараметр("МассивСчетов",     МассивСчетов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_МассивСчетов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&МассивСчетов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ХозрасчетныйОбороты.Счет В (&СчетВыручкаЕНВД)
	|					ТОГДА -ХозрасчетныйОбороты.СуммаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК ВыручкаЕНВД,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НЕ ХозрасчетныйОбороты.Счет В (&СчетВыручкаЕНВД)
	|					ТОГДА -ХозрасчетныйОбороты.СуммаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК ВыручкаНеЕНВД
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачДата,
	|			&КонДата,
	|			Период,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_МассивСчетов.Счет
	|				ИЗ
	|					ВТ_МассивСчетов),
	|			,
	|			Организация = &Организация,
	|			НЕ КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибыльУбытокОтПродаж),
	|			) КАК ХозрасчетныйОбороты";
	РезультатЗапроса = Запрос.Выполнить();
	
	// Если результат запроса пустой, то считаем, что все
	// расходы относятся к деятельности, не облагаемой ЕНВД.
	Если РезультатЗапроса.Пустой() Тогда
		
		Коэффициент = 1;
		
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ВыручкаЕНВД   = Макс(Выборка.ВыручкаЕНВД,   0);
		ВыручкаНеЕНВД = Макс(Выборка.ВыручкаНеЕНВД, 0);
		
		Если ВыручкаНеЕНВД + ВыручкаЕНВД = 0 Тогда // нет дохода ни по одному из видов деятельности
			Коэффициент = 1;
		Иначе
			Коэффициент = ВыручкаНеЕНВД / (ВыручкаНеЕНВД + ВыручкаЕНВД);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Коэффициент;
	
КонецФункции // КоэффициентРаспределенияВыручкиПоВидамДеятельности()

// Функция возвращает расшифровку срока полезного использования в годах и 
// месяцах.
//
// Параметры:
//  СрокПолезногоИспользования - срок полезного использования (в месяцах),
//                 подлежащий расшифровке
//
// Возвращаемое значение:
//  Строка       - расшифровка срока полезного использования в годах и 
//                 месяцах
//
Функция РасшифровкаСрокаПолезногоИспользования(СрокПолезногоИспользования) Экспорт
	
	РасшифровкаСрокаПолезногоИспользования = "";
	
	Если ЗначениеЗаполнено(СрокПолезногоИспользования) Тогда
	
		ЧислоЛет     = Цел(СрокПолезногоИспользования / 12);
		ЧислоМесяцев = (СрокПолезногоИспользования % 12);
		
		Если НЕ (ЧислоЛет = 0) Тогда
			
			// Построим строку с числом лет
			Если (СтрДлина(ЧислоЛет) > 1) И (Число(Сред(ЧислоЛет, СтрДлина(ЧислоЛет) - 1, 1)) = 1) Тогда
				СтрокаГод = " лет";
			ИначеЕсли Число(Прав(ЧислоЛет, 1)) = 1 Тогда
				СтрокаГод = " год";
			ИначеЕсли (Число(Прав(ЧислоЛет, 1)) > 1) И (Число(Прав(ЧислоЛет, 1)) < 5) Тогда
				СтрокаГод = " года";
			Иначе
				СтрокаГод = " лет";
			КонецЕсли;
			
			РасшифровкаСрокаПолезногоИспользования = РасшифровкаСрокаПолезногоИспользования + Строка(ЧислоЛет) + СтрокаГод;
			
		КонецЕсли;
		
		Если НЕ (ЧислоМесяцев = 0) Тогда
			
			РасшифровкаСрокаПолезногоИспользования = РасшифровкаСрокаПолезногоИспользования 
				+ ?(НЕ ЗначениеЗаполнено(РасшифровкаСрокаПолезногоИспользования), "", ", ") + Строка(ЧислоМесяцев) + " мес.";
		
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат РасшифровкаСрокаПолезногоИспользования;
	
КонецФункции // РасшифровкаСрокаПолезногоИспользования()

Функция ПустаяСправкаРасчет(ИмяРегистраСведений) Экспорт
	
	СправкаРасчет = РегистрыСведений[ИмяРегистраСведений].СоздатьНаборЗаписей().ВыгрузитьКолонки();
	
	СправкаРасчет.Колонки.Удалить("Регистратор");
	СправкаРасчет.Колонки.Удалить("Активность");
	СправкаРасчет.Колонки.Удалить("НомерСтроки");
	
	Возврат СправкаРасчет;
	
КонецФункции

#КонецОбласти

#Область ЗаполнениеРегламентированнойОтчетности

#Область АвансыИмущество

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаАвансыИмуществоФормаОтчета2011Кв3(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001000", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020016003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011004", Истина, Ложь);

	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетАвансыИмуществоФормаОтчета2011Кв3(ПараметрыОтчета, Контейнер) Экспорт
	
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыОтчета.Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  =  ПараметрыОтчета.КодНалоговогоОргана;
	КПП                  =  ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(ПараметрыОтчета.Организация, КодНалоговогоОргана, КПП);
	
	// Сведения о налоговых льготах в виде уменьшения суммы налога.
	ПроцентУменьшенияСуммыНалога = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПроцентУменьшения, 0) КАК ПроцентУменьшения
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, Организация = &Организация) КАК СтавкиНалогаНаИмуществоСрезПоследних";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ПроцентУменьшенияСуммыНалога = РезультатЗапроса.Выгрузить()[0].ПроцентУменьшения;
	Иначе
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не обнаружена ставка налога на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
			
		Возврат;
		
	КонецЕсли;
	
	Период  = НачалоМесяца(ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	Счетчик = 1;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Признак применения ЕНВД.
	ПрименениеЕНВД = УчетнаяПолитика.ПлательщикЕНВД(ПараметрыОтчета.Организация, ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	
	// Выборка коэффициентов распределения ЕНВД.
	Если ПрименениеЕНВД Тогда
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто2 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто3 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат)), ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)) КАК ОтношениеКЕНВД,
		|	СУММА(СпособыОтраженияРасходовПоАмортизацииСпособы.Коэффициент) КАК Коэффициент
		|ПОМЕСТИТЬ ВТ_ВыборкаКоэффициентов
		|ИЗ
		|	Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СпособыОтраженияРасходовПоАмортизацииСпособы
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто2 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто3 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат)), ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)),
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|ИНДЕКСИРОВАТЬ ПО
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|;
		|	
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка КАК Ссылка,
		|	СУММА(СпособыОтраженияРасходовПоАмортизацииСпособы.Коэффициент) КАК СуммаКоэффициентов
		|ПОМЕСТИТЬ ВыборкаСуммыКоэффициентов
		|ИЗ
		|	Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СпособыОтраженияРасходовПоАмортизацииСпособы
		|СГРУППИРОВАТЬ ПО
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|ИНДЕКСИРОВАТЬ ПО
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВыборкаКоэффициентов.Ссылка КАК Ссылка,
		|	СУММА(ВЫБОР
		|	      	КОГДА ВыборкаКоэффициентов.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
		|	      		ТОГДА ВыборкаКоэффициентов.Коэффициент / ВыборкаСуммыКоэффициентов.СуммаКоэффициентов
		|		  	ИНАЧЕ 0
		|	      КОНЕЦ) КАК НеЕНВД,
		|	СУММА(ВЫБОР
		|			КОГДА ВыборкаКоэффициентов.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
		|				ТОГДА ВыборкаКоэффициентов.Коэффициент / ВыборкаСуммыКоэффициентов.СуммаКоэффициентов
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Распределение
		|
		|ПОМЕСТИТЬ
		|	КоэффициентыЕНВД
		|
		|ИЗ
		|	ВТ_ВыборкаКоэффициентов КАК ВыборкаКоэффициентов
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаСуммыКоэффициентов КАК ВыборкаСуммыКоэффициентов
		|	ПО ВыборкаСуммыКоэффициентов.Ссылка = ВыборкаКоэффициентов.Ссылка
		|ГДЕ
		|	ВыборкаКоэффициентов.ОтношениеКЕНВД <> ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
		|	
		|СГРУППИРОВАТЬ ПО
		|	ВыборкаКоэффициентов.Ссылка
		|";
		Запрос.Выполнить();
	КонецЕсли;
	
	ГоловнаяОрганизация = ПараметрыОтчета.Организация.ГоловнаяОрганизация;
	Если Не ЗначениеЗаполнено(ГоловнаяОрганизация) Тогда
		ГоловнаяОрганизация = ПараметрыОтчета.Организация;
	КонецЕсли;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("КонецПериодаОтчета", КонецГода(Период));
	Запрос.УстановитьПараметр("НалоговыйОрган", ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()));
	
	Если Метаданные.Документы.Найти("АвизоОСВходящее") <> Неопределено Тогда 
		ДопУсловие = " И НЕ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.АвизоОСВходящее";
	Иначе
		ДопУсловие = "";
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОС,
	|	МИНИМУМ(СостоянияОСОрганизаций.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|ГДЕ
	|	СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)" + ДопУсловие + "
	|	И СостоянияОСОрганизаций.Организация В
	|			(ВЫБРАТЬ
	|				Организации.Ссылка КАК Ссылка
	|			ИЗ
	|				Справочник.Организации КАК Организации
	|			ГДЕ
	|				(Организации.Ссылка = &ГоловнаяОрганизация
	|					ИЛИ Организации.ГоловнаяОрганизация = &ГоловнаяОрганизация))
	|	И СостоянияОСОрганизаций.Период <= &КонецПериодаОтчета
	|	И НЕ СостоянияОСОрганизаций.ОсновноеСредство.НедвижимоеИмущество
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний.ОС
	|ПОМЕСТИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013
	|ИЗ
	|	ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний
	|ГДЕ
	|	ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний.ДатаСостояния >= ДАТАВРЕМЯ(2013, 1, 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний";
	Запрос.Выполнить();
	
	ТекстОбъединяющегоЗапроса = "";
	
	Пока Период <= НачалоМесяца(ДобавитьМесяц(ПараметрыОтчета.мДатаКонцаПериодаОтчета, 1)) Цикл
		
		ПрименениеУСН = УчетнаяПолитика.ПрименяетсяУСН( ПараметрыОтчета.Организация, КонецКвартала(Период));
		
		Если НЕ ПрименениеУСН Тогда
			
			Запрос.УстановитьПараметр("Период",          Период);
			
			// Срез последних записей по основному средству в регистре "Ставки налога на имущество по отдельным основным средствам".
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство,
			|	МАКСИМУМ(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период) КАК ПериодСреза
			|ПОМЕСТИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов
			|ИЗ
			|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
			|ГДЕ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период <= &Период
			|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация = &Организация
			|
			|СГРУППИРОВАТЬ ПО
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НалоговыйОрган,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ПорядокНалогообложения
			|ПОМЕСТИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|ИЗ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
			|		ПО СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство
			|			И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов.ПериодСреза = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период
			|";
			Запрос.Выполнить();
			
			Если НЕ ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
				
				// Выборка объектов по основному налоговому органу организации (его нет в справочнике Регистрация в налоговом органе).
				Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ОС.Ссылка КАК ОсновноеСредство
				|ПОМЕСТИТЬ
				|	СписокРазрешенныхОС
				|ИЗ
				|	Справочник.ОсновныеСредства КАК ОС
				|ГДЕ
				|	(НЕ ОС.Ссылка В 
				|		(ВЫБРАТЬ
				|			СостоянияОСОрганизаций.ОсновноеСредство
				|		ИЗ
				|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
				|		ГДЕ
				|			СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
				|			И СостоянияОСОрганизаций.ДатаСостояния < &Период
				|			И СостоянияОСОрганизаций.Организация = &Организация))
				|	И (НЕ ОС.Ссылка В (ВЫБРАТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013.ОС ИЗ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013 КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013))
				|	И (НЕ ОС.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования)))
				|	И (НЕ ОС.Ссылка В
				|		(ВЫБРАТЬ
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
				|		ИЗ
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
				|		ГДЕ
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
				|			ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению)))
				|ИНДЕКСИРОВАТЬ ПО
				|	ОС.Ссылка
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
				|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
				|
				|ПОМЕСТИТЬ
				|	СписокОС
				|
				|ИЗ
				|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
				|			&Период,
				|			Организация = &Организация
				|			И (ОсновноеСредство В (ВЫБРАТЬ РАЗЛИЧНЫЕ СписокРазрешенныхОС.ОсновноеСредство ИЗ СписокРазрешенныхОС КАК СписокРазрешенныхОС))
				|	) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
				|ИНДЕКСИРОВАТЬ ПО
				|	 ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство";
				
			Иначе
				
				Если КодНалоговогоОргана = РеквизитыОрганизации.КодНалоговогоОргана Тогда
					
					// Выборка объектов по основному налоговому органу организации (он есть в справочнике Регистрация налоговом органе).
					Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ОС.Ссылка КАК ОсновноеСредство
					|ПОМЕСТИТЬ
					|	СписокРазрешенныхОС
					|ИЗ
					|	Справочник.ОсновныеСредства КАК ОС
					|ГДЕ
					|	(НЕ ОС.Ссылка В 
					|		(ВЫБРАТЬ
					|			СостоянияОСОрганизаций.ОсновноеСредство
					|		ИЗ
					|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
					|		ГДЕ
					|			СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
					|			И СостоянияОСОрганизаций.ДатаСостояния < &Период
					|			И СостоянияОСОрганизаций.Организация = &Организация))
					|	И (НЕ ОС.Ссылка В (ВЫБРАТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013.ОС ИЗ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013 КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013))
					|	И (НЕ ОС.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования)))
					|	И (НЕ ОС.Ссылка В
					|		(ВЫБРАТЬ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
					|		ИЗ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
					|		ГДЕ
					|			(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
					|			И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган <> &НалоговыйОрган)
					|			ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению)))
					|ИНДЕКСИРОВАТЬ ПО
					|	ОС.Ссылка
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
					|
					|ПОМЕСТИТЬ
					|	СписокОС
					|
					|ИЗ
					|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
					|			&Период,
					|			Организация = &Организация
					|			И (ОсновноеСредство В (ВЫБРАТЬ РАЗЛИЧНЫЕ СписокРазрешенныхОС.ОсновноеСредство ИЗ СписокРазрешенныхОС КАК СписокРазрешенныхОС))
					|	) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
					|ИНДЕКСИРОВАТЬ ПО
					|	 ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство";
					
				Иначе
					
					// Выборка объектов по указанному пользователем налоговому органу.
					Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ОС.Ссылка КАК ОсновноеСредство
					|ПОМЕСТИТЬ
					|	СписокРазрешенныхОС
					|ИЗ
					|	Справочник.ОсновныеСредства КАК ОС
					|ГДЕ
					|	(НЕ ОС.Ссылка В 
					|		(ВЫБРАТЬ
					|			СостоянияОСОрганизаций.ОсновноеСредство
					|		ИЗ
					|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
					|		ГДЕ
					|			СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
					|			И СостоянияОСОрганизаций.ДатаСостояния < &Период
					|			И СостоянияОСОрганизаций.Организация = &Организация))
					|	И (НЕ ОС.Ссылка В (ВЫБРАТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013.ОС ИЗ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013 КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013))
					|	И (НЕ ОС.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования)))
					|	И (ОС.Ссылка В
					|		(ВЫБРАТЬ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
					|		ИЗ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
					|		ГДЕ
					|			(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган = &НалоговыйОрган
					|			И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения <> ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению))))
					|ИНДЕКСИРОВАТЬ ПО
					|	ОС.Ссылка
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
					|
					|ПОМЕСТИТЬ
					|	СписокОС
					|
					|ИЗ
					|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
					|			&Период,
					|			Организация = &Организация
					|			И (ОсновноеСредство В (ВЫБРАТЬ РАЗЛИЧНЫЕ СписокРазрешенныхОС.ОсновноеСредство ИЗ СписокРазрешенныхОС КАК СписокРазрешенныхОС))
					|	) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
					|ИНДЕКСИРОВАТЬ ПО
					|	 ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство";
					
				КонецЕсли;
				
			КонецЕсли;
			
			Запрос.Выполнить();
			
			// Выборка счетов учета ОС
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета,
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации
			|
			|ПОМЕСТИТЬ
			|	СчетаУчетаОС
			|
			|ИЗ
			|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС),
			|	NULL
			|";
			Запрос.Выполнить();
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	МАКСИМУМ(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Период) КАК Период,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство КАК ОсновноеСредство
			|ПОМЕСТИТЬ ВТ_СрезПоследних
			|ИЗ
			|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|СГРУППИРОВАТЬ ПО
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
			|ИНДЕКСИРОВАТЬ ПО
			|	ОсновноеСредство,Период
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СрезПоследних.ОсновноеСредство,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Организация,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство КАК ОсновноеСредство1,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКАТО,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодВидаИмущества,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель
			|ПОМЕСТИТЬ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|ИЗ
			|	ВТ_СрезПоследних КАК СрезПоследних
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|	ПО СрезПоследних.Период = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Период
			|	И СрезПоследних.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.*
			|ПОМЕСТИТЬ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних
			|ИЗ
			|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
			|ИНДЕКСИРОВАТЬ ПО
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПервоначальнаяСтоимостьОС.СуммаОстатокДт,
			|	ПервоначальнаяСтоимостьОС.Субконто1,
			|	ПервоначальнаяСтоимостьОС.Счет
			|ПОМЕСТИТЬ ВТ_ПервоначальнаяСтоимостьОС
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (ВЫБРАТЬ РАЗЛИЧНЫЕ СчетУчета ИЗ СчетаУчетаОС ГДЕ СчетУчета ЕСТЬ НЕ NULL), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства), Организация = &Организация) КАК ПервоначальнаяСтоимостьОС
			|ИНДЕКСИРОВАТЬ ПО
			|	ПервоначальнаяСтоимостьОС.Субконто1
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СтавкиНалогаНаИмуществоСрезПоследних.*
			|ПОМЕСТИТЬ ВТ_СтавкиНалогаНаИмуществоСрезПоследних
			|ИЗ
			|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, Организация = &Организация) КАК СтавкиНалогаНаИмуществоСрезПоследних
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	АмортизацияОС.СуммаОстатокДт,
			|	АмортизацияОС.СуммаОстатокКт,
			|	АмортизацияОС.Субконто1,
			|	АмортизацияОС.Счет
			|ПОМЕСТИТЬ ВТ_АмортизацияОС
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (ВЫБРАТЬ РАЗЛИЧНЫЕ СчетНачисленияАмортизации ИЗ СчетаУчетаОС ГДЕ СчетНачисленияАмортизации ЕСТЬ НЕ NULL), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства), Организация = &Организация) КАК АмортизацияОС
			|ИНДЕКСИРОВАТЬ ПО
			|	АмортизацияОС.Субконто1
			|;
			|";
			
			Запрос.УстановитьПараметр("ДатаПодписи", ПараметрыОтчета.ДатаПодписи);
			
			Если ПрименениеЕНВД Тогда
				
				// Получение коэффициента доли выручки от деятельности, облагаемой ЕНВД.
				ПериодПолученияКоэффициентаЕНВД = ?(Период = ПараметрыОтчета.мДатаНачалаПериодаОтчета, Период, ДобавитьМесяц(Период, -1));
				
				КоэффициентРаспределенияЕНВД = КоэффициентРаспределенияВыручкиПоВидамДеятельности(ПараметрыОтчета.Организация, НачалоКвартала(ПериодПолученияКоэффициентаЕНВД), КонецКвартала(ПериодПолученияКоэффициентаЕНВД));
				
				Запрос.УстановитьПараметр("КоэффициентРаспределенияЕНВД", КоэффициентРаспределенияЕНВД);
				
				Запрос.Текст = Запрос.Текст + 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СписокОС.ОсновноеСредство,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО)
				|		  ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|		ТОГДА 
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКАТО
				|		ИНАЧЕ 
				|			ЕстьNULL(СтавкиНалогаНаИмуществоСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
				|	КОНЕЦ КАК КодПоОКАТО,
				|	ЕСТЬNULL(ВЫБОР
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка
				|			ИНАЧЕ ВЫБОР
				|			      КОГДА СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки
				|			      	ТОГДА СтавкиНалогаНаИмуществоСрезПоследних.УдалитьСниженнаяНалоговаяСтавка
				|			      ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка
				|			      КОНЕЦ
				|			КОНЕЦ, СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка) КАК НалоговаяСтавка,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки, ЛОЖЬ)
				|	КОНЕЦ КАК СнижениеНалоговойСтавки,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ОсвобождениеОтНалогообложения, ЛОЖЬ)
				|	КОНЕЦ КАК ОсвобождениеОтНалогообложения,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|		ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|	КОНЕЦ КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
				|	ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодВидаИмущества, ""03"") КАК КодВидаИмущества,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
				|	" + Счетчик + " КАК Период,
				|	ВЫРАЗИТЬ((ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) - ЕСТЬNULL(ВЫБОР КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса) ИЛИ СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) ТОГДА АмортизацияОС.СуммаОстатокДт ИНАЧЕ АмортизацияОС.СуммаОстатокКт КОНЕЦ, 0)) * КоэффициентыЕНВД.НеЕНВД
				|	       + (ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) - ЕСТЬNULL(ВЫБОР КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса) ИЛИ СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) ТОГДА АмортизацияОС.СуммаОстатокДт ИНАЧЕ АмортизацияОС.СуммаОстатокКт КОНЕЦ, 0)) * КоэффициентыЕНВД.Распределение * &КоэффициентРаспределенияЕНВД КАК ЧИСЛО(15, 2)) КАК ОстаточнаяСтоимость
				|ПОМЕСТИТЬ
				|	Выборка" + Формат(Счетчик, "ЧЦ=2; ЧВН=") + "
				|ИЗ
				|	СписокОС
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальнаяСтоимостьОС КАК ПервоначальнаяСтоимостьОС
				|			ПО (СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета = ПервоначальнаяСтоимостьОС.Счет ИЛИ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС) = ПервоначальнаяСтоимостьОС.Счет)
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = ПервоначальнаяСтоимостьОС.Субконто1
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияОС КАК АмортизацияОС
				|			ПО СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = АмортизацияОС.Субконто1
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации = АмортизацияОС.Счет
				|		ПО СписокОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
				|		ПО СписокОС.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство,
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних
				|			ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыЕНВД
				|			ПО СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.СпособыОтраженияРасходовПоАмортизации = КоэффициентыЕНВД.Ссылка
				|		ПО СписокОС.ОсновноеСредство = СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство,
				|	ВТ_СтавкиНалогаНаИмуществоСрезПоследних КАК СтавкиНалогаНаИмуществоСрезПоследних
				|";
				Запрос.Выполнить();
				
			Иначе
				
				Запрос.Текст = Запрос.Текст + 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СписокОС.ОсновноеСредство,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО)
				|		  ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|		ТОГДА 
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКАТО
				|		ИНАЧЕ 
				|			ЕстьNULL(СтавкиНалогаНаИмуществоСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
				|	КОНЕЦ КАК КодПоОКАТО,
				|	ЕСТЬNULL(ВЫБОР
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка
				|			ИНАЧЕ ВЫБОР
				|			      КОГДА СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки
				|			      	ТОГДА СтавкиНалогаНаИмуществоСрезПоследних.УдалитьСниженнаяНалоговаяСтавка
				|			      ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка
				|			      КОНЕЦ
				|			КОНЕЦ, СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка) КАК НалоговаяСтавка,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки, ЛОЖЬ)
				|	КОНЕЦ КАК СнижениеНалоговойСтавки,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ОсвобождениеОтНалогообложения, ЛОЖЬ)
				|	КОНЕЦ КАК ОсвобождениеОтНалогообложения,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|		ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|	КОНЕЦ КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
				|	ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодВидаИмущества, ""03"") КАК КодВидаИмущества,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
				|	" + Счетчик + " КАК Период,
				|	ВЫРАЗИТЬ(ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) - ЕСТЬNULL(ВЫБОР КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса) ИЛИ СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) ТОГДА АмортизацияОС.СуммаОстатокДт ИНАЧЕ АмортизацияОС.СуммаОстатокКт КОНЕЦ, 0) КАК ЧИСЛО(15, 2)) КАК ОстаточнаяСтоимость
				|ПОМЕСТИТЬ
				|	Выборка" + Формат(Счетчик, "ЧЦ=2; ЧВН=") + "
				|ИЗ
				|	СписокОС
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальнаяСтоимостьОС КАК ПервоначальнаяСтоимостьОС
				|			ПО (СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета = ПервоначальнаяСтоимостьОС.Счет ИЛИ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС) = ПервоначальнаяСтоимостьОС.Счет)
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = ПервоначальнаяСтоимостьОС.Субконто1
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияОС КАК АмортизацияОС
				|			ПО СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = АмортизацияОС.Субконто1
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации = АмортизацияОС.Счет
				|		ПО СписокОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
				|		ПО СписокОС.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство,
				|	ВТ_СтавкиНалогаНаИмуществоСрезПоследних КАК СтавкиНалогаНаИмуществоСрезПоследних
				|";
				Запрос.Выполнить();
				
			КонецЕсли;
			
			Запрос.Текст = 
			"УНИЧТОЖИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов;
			|УНИЧТОЖИТЬ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних;
			|УНИЧТОЖИТЬ ВТ_СрезПоследних;
			|УНИЧТОЖИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних;
			|УНИЧТОЖИТЬ СписокОС;
			|УНИЧТОЖИТЬ СчетаУчетаОС;
			|УНИЧТОЖИТЬ СписокРазрешенныхОС;
			|УНИЧТОЖИТЬ ВТ_ПервоначальнаяСтоимостьОС;
			|УНИЧТОЖИТЬ ВТ_СтавкиНалогаНаИмуществоСрезПоследних;
			|УНИЧТОЖИТЬ ВТ_АмортизацияОС;
			|УНИЧТОЖИТЬ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних";
			Запрос.Выполнить();
			
			ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
									  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
										  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
										  |",
										  "ОБЪЕДИНИТЬ ВСЕ
										  |ВЫБРАТЬ *
										  |")
									  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
										  "ПОМЕСТИТЬ НалоговаяБазаПоНалогуНаИмущество
										  |",
										  "")
									  + "ИЗ Выборка" + Формат(Счетчик, "ЧЦ=2; ЧВН=") + "
										|ГДЕ
										|	ОстаточнаяСтоимость > 0
										|";
									
		КонецЕсли;
		
		Счетчик = Счетчик + 1;
		Период  = ?(Счетчик = 13, КонецМесяца(Период), ДобавитьМесяц(Период, 1));
		
	КонецЦикла;
	
	Если ПустаяСтрока(ТекстОбъединяющегоЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.Текст = ТекстОбъединяющегоЗапроса;
	Запрос.Выполнить();
	
	///////////////////////////////////////////////////////////////////////
	// РАЗДЕЛ 2
	
	// Заполнение раздела 2 по коду вида имущества 1,2,3,4,5 (прочее имущество).
	Раздел2 = Контейнер.Раздел2;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКАТО КАК КодПоОКАТО,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.СнижениеНалоговойСтавки КАК СнижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.Период КАК Период,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимость) КАК ОстаточнаяСтоимость,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьЛьготируемогоИмущества) КАК ОстаточнаяСтоимостьЛьготируемогоИмущества
	|ИЗ
	|(ВЫБРАТЬ
	|	ЕСТЬNULL(КодВидаИмущества, ""03"") КАК КодВидаИмущества,
	|	ЕСТЬNULL(ДоляСтоимостиЧислитель, 0) КАК ДоляСтоимостиЧислитель,
	|	ЕСТЬNULL(ДоляСтоимостиЗнаменатель, 0) КАК ДоляСтоимостиЗнаменатель,
	|	КодПоОКАТО,
	|	ЕСТЬNULL(НалоговаяСтавка, 0) КАК НалоговаяСтавка,
	|	СнижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	Период,
	|	ОстаточнаяСтоимость КАК ОстаточнаяСтоимость,
	|	ВЫБОР КОГДА ОсвобождениеОтНалогообложения = ИСТИНА ТОГДА ОстаточнаяСтоимость ИНАЧЕ 0 КОНЕЦ КАК ОстаточнаяСтоимостьЛьготируемогоИмущества
	|ИЗ
	|	НалоговаяБазаПоНалогуНаИмущество) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	КодВидаИмущества,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКАТО,
	|	НалоговаяСтавка,
	|	СнижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	Период 
	|
	|ИТОГИ
	|	СУММА(ОстаточнаяСтоимость),
	|	СУММА(ОстаточнаяСтоимостьЛьготируемогоИмущества)
	|ПО
	|	КодВидаИмущества,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКАТО,
	|	НалоговаяСтавка,
	|	СнижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	Период
	|";
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	Для Каждого Показатель Из СтраницаРаздел2 Цикл
		СтраницаРаздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Группировка() = "КодНалоговойЛьготыОсвобождениеОтНалогообложения" Тогда
			
			Если Не ПерваяСтраница Тогда
				// Создаем дополнительную страницу в декларации
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из СтраницаРаздел2 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				Раздел2[Раздел2.Количество()-1].Данные.Добавить(СтруктураНовойТаблицы); 
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			СтраницаРаздел2 = Раздел2[Раздел2.Количество()-1].Данные[0].Значение;
			
			СтраницаРаздел2.П000020000100           = ?(Лев(Выборка.КодВидаИмущества, 1) = "0", Прав(Выборка.КодВидаИмущества, 1), Выборка.КодВидаИмущества); 
			СтраницаРаздел2.П000020001000           = Выборка.КодПоОКАТО;
			СтраницаРаздел2.П000020013003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел2.П000020016003_КодЛьготы = ?(Выборка.СнижениеНалоговойСтавки, "2012400", "");
			СтраницаРаздел2.П000020017003           = Выборка.НалоговаяСтавка;
			
			Если Выборка.КодВидаИмущества = "02" Тогда
				ДоляСтоимостиЧислитель =   ?(Выборка.ДоляСтоимостиЧислитель = 0, 1, Выборка.ДоляСтоимостиЧислитель);
				ДоляСтоимостиЗнаменатель = ?(Выборка.ДоляСтоимостиЗнаменатель = 0, 1, Выборка.ДоляСтоимостиЗнаменатель);
				
				СтраницаРаздел2.П000020015003_Числ = ДоляСтоимостиЧислитель;
				СтраницаРаздел2.П000020015003_Знам = ДоляСтоимостиЗнаменатель;
			КонецЕсли;
			
		ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
		
			Если Выборка.Период = 1 Тогда
				
				СтраницаРаздел2.П000020002003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020002004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 2 Тогда

				СтраницаРаздел2.П000020003003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020003004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 3 Тогда

				СтраницаРаздел2.П000020004003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020004004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 4 Тогда

				СтраницаРаздел2.П000020005003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020005004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;
			
			ИначеЕсли Выборка.Период = 5 Тогда
		
				СтраницаРаздел2.П000020006003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020006004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 6 Тогда
				
				СтраницаРаздел2.П000020007003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020007004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 7 Тогда
				
				СтраницаРаздел2.П000020008003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020008004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 8 Тогда
		
				СтраницаРаздел2.П000020009003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020009004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 9 Тогда

				СтраницаРаздел2.П000020010003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020010004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 10 Тогда
				
				СтраницаРаздел2.П000020011003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020011004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(РегистрацияВНалоговомОргане) 
			 ИЛИ (КодНалоговогоОргана = РеквизитыОрганизации.КодНалоговогоОргана) Тогда
			
				СуммаНалога = СтраницаРаздел2.П000020018003;
				
				СуммаЛьготы = СуммаНалога * (ПроцентУменьшенияСуммыНалога / 100);
				
				СтраницаРаздел2.П000020019003_КодЛьготы = ?(СуммаЛьготы = 0, "", "2012500");
				СтраницаРаздел2.П000020020003 = Мин(СуммаНалога, СуммаЛьготы);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаАвансыИмуществоФормаОтчета2013Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003_1", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010003003_1", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000101", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020016003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001401", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001501", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030004003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030006003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030008003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030008003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030010003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030011003", Истина, Истина);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетАвансыИмуществоФормаОтчета2013Кв4(ПараметрыОтчета, Контейнер) Экспорт
	
	Перем ТаблицаРасшифровки;
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	ОрганизацииУплачивающиеАвансы = РасчетИмущественныхНалогов.ОрганизацииУплачивающиеАвансы(Организация, мДатаКонцаПериодаОтчета, "НалогНаИмущество");
	Если ОрганизацииУплачивающиеАвансы.Количество() = 0 Тогда 
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКПорядкуУплатыНалоговНаМестах();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не настроена уплата авансов по налогу на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(мДатаНачалаПериодаОтчета), КонецДня(мДатаКонцаПериодаОтчета),"ФП = Истина")
			,Организация, ПутьКРегистру));
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;	
		
	КонецЕсли;

	// Сведения о налоговых льготах в виде уменьшения суммы налога.
	ПроцентУменьшенияСуммыНалога = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПроцентУменьшения, 0) КАК ПроцентУменьшения,
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2, ЛОЖЬ) КАК ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, ) КАК СтавкиНалогаНаИмуществоСрезПоследних
	|ГДЕ
	|	СтавкиНалогаНаИмуществоСрезПоследних.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтавкиНалогаПоОССрезПоследних.ОсновноеСредство
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазапоНалогуНаИмущество.КадастроваяСтоимость)) КАК СтавкиНалогаПоОССрезПоследних
	|ГДЕ
	|	СтавкиНалогаПоОССрезПоследних.Организация = &Организация";

	Результат = Запрос.ВыполнитьПакет();
	
	Если НЕ Результат[0].Пустой() Тогда
		ДопПараметрыОтчета = Результат[0].Выгрузить()[0];
		ПроцентУменьшенияСуммыНалога = ДопПараметрыОтчета.ПроцентУменьшения;
		ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2 = ДопПараметрыОтчета.ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2;
	ИначеЕсли Результат[1].Пустой() Тогда 
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не обнаружена ставка налога на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(мДатаНачалаПериодаОтчета), КонецДня(мДатаКонцаПериодаОтчета),"ФП = Истина")
			,Организация, ПутьКРегистру));
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;
		
	КонецЕсли;
	
	///////////////////////////////////////////////////////////////////////
	// РАЗДЕЛ 2
	
	// Заполнение раздела 2 по коду вида имущества 1,2,3,4,5 (прочее имущество).
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Раздел2 = Контейнер.Раздел2;
	
	Запрос.УстановитьПараметр("Организация", 			ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",	НачалоДня(мДатаКонцаПериодаОтчета));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетНалогаНаИмущество.КодВидаИмущества КАК КодВидаИмущества,
	|	РасчетНалогаНаИмущество.ИФНС,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0101 КАК ОстаточнаяСтоимостьНа0101,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0102 КАК ОстаточнаяСтоимостьНа0102,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0103 КАК ОстаточнаяСтоимостьНа0103,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0104 КАК ОстаточнаяСтоимостьНа0104,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0105 КАК ОстаточнаяСтоимостьНа0105,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0106 КАК ОстаточнаяСтоимостьНа0106,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0107 КАК ОстаточнаяСтоимостьНа0107,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0108 КАК ОстаточнаяСтоимостьНа0108,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0109 КАК ОстаточнаяСтоимостьНа0109,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0110 КАК ОстаточнаяСтоимостьНа0110,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьОсновныхСредств КАК ОстаточнаяСтоимостьОсновныхСредств,
	|	РасчетНалогаНаИмущество.КадастровыйНомер,
	|	РасчетНалогаНаИмущество.КадастровыйНомерПомещения,
	|	РасчетНалогаНаИмущество.КадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.НеоблагаемаяКадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.СуммаУменьшенияСуммыНалога,
	|	РасчетНалогаНаИмущество.КоличествоМесяцевВладения,
	|	РасчетНалогаНаИмущество.ОсновноеСредство
	|ИЗ
	|	РегистрСведений.РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|ГДЕ
	|	РасчетНалогаНаИмущество.Организация = &Организация
	|	И РасчетНалогаНаИмущество.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоНалогуНаИмущество = Новый ТаблицаЗначений;
	РегламентныеОперацииВыполнены = Ложь;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовПоНалогуНаИмущество = Выборка.Выгрузить();
		РегламентныеОперацииВыполнены = Истина;
	Иначе
		ТаблицаРасчетовПоНалогуНаИмущество = РасчетИмущественныхНалогов.ПолучитьРасчетПоНалогуНаИмущество(Организация, мДатаКонцаПериодаОтчета);
	КонецЕсли;	
	
	Отбор = Новый Структура("ИФНС, ВидНалоговойБазы, КоличествоМесяцевВладения",
		?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()),
		Перечисления.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость,
		0);
		
	НайденныеСтроки = ТаблицаРасчетовПоНалогуНаИмущество.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество();
		
		Для Каждого СтрокаТаблицы Из НайденныеСтроки Цикл
		
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			    НСтр("ru = 'Не заполнена дата регистрации права собственности для объекта %1
				|%2'"),	СтрокаТаблицы.ОсновноеСредство, ПутьКРегистру));
				
		КонецЦикла;
			
		ПоместитьВоВременноеХранилище(Контейнер, ПараметрыОтчета.АдресВоВременномХранилище);
		ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.АдресВременногоХранилищаРасшифровки);
		
		Возврат;
	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовПоНалогуНаИмущество", ТаблицаРасчетовПоНалогуНаИмущество);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	ПОМЕСТИТЬ ВТ_ТаблицаРасчетовПоНалогуНаИмущество
	|	ИЗ &ТаблицаРасчетовПоНалогуНаИмущество КАК ТаблицаРасчетовПоНалогуНаИмущество";
	Запрос.Выполнить();
		
	НалоговыйОрган = ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	Запрос.УстановитьПараметр("НалоговыйОрган", НалоговыйОрган);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения) КАК КоличествоРазличныхЛьгот,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения = """"
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьОблагаемоеИмущество
	|ПОМЕСТИТЬ Льготы
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.КодВидаИмущества,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КодВидаИмущества
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0101) КАК ОстаточнаяСтоимостьНа0101,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0102) КАК ОстаточнаяСтоимостьНа0102,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0103) КАК ОстаточнаяСтоимостьНа0103,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0104) КАК ОстаточнаяСтоимостьНа0104,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0105) КАК ОстаточнаяСтоимостьНа0105,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0106) КАК ОстаточнаяСтоимостьНа0106,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0107) КАК ОстаточнаяСтоимостьНа0107,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0108) КАК ОстаточнаяСтоимостьНа0108,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0109) КАК ОстаточнаяСтоимостьНа0109,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0110) КАК ОстаточнаяСтоимостьНа0110,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьОсновныхСредств) КАК ОстаточнаяСтоимостьОсновныхСредств,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения <> """"
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЛьготируемаяСтоимость,
	|	ВложенныйЗапрос.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	СУММА(ВложенныйЗапрос.СуммаУменьшенияСуммыНалога) КАК СуммаУменьшенияСуммыНалога,
	|	Льготы.КоличествоРазличныхЛьгот КАК КоличествоРазличныхЛьгот,
	|	Льготы.ЕстьОблагаемоеИмущество КАК ЕстьОблагаемоеИмущество
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Льготы КАК Льготы
	|		ПО ВложенныйЗапрос.КодВидаИмущества = Льготы.КодВидаИмущества
	|			И ВложенныйЗапрос.ДоляСтоимостиЧислитель = Льготы.ДоляСтоимостиЧислитель
	|			И ВложенныйЗапрос.ДоляСтоимостиЗнаменатель = Льготы.ДоляСтоимостиЗнаменатель
	|			И ВложенныйЗапрос.КодПоОКТМО = Льготы.КодПоОКТМО
	|			И ВложенныйЗапрос.НалоговаяСтавка = Льготы.НалоговаяСтавка
	|			И ВложенныйЗапрос.ПонижениеНалоговойСтавки = Льготы.ПонижениеНалоговойСтавки
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.КодВидаИмущества,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.ВидНалоговойБазы,
	|	Льготы.КоличествоРазличныхЛьгот,
	|	Льготы.ЕстьОблагаемоеИмущество
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодВидаИмущества,
	|	КодПоОКТМО,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения
	|ИТОГИ
	|	СУММА(ОстаточнаяСтоимостьНа0101),
	|	СУММА(ОстаточнаяСтоимостьНа0102),
	|	СУММА(ОстаточнаяСтоимостьНа0103),
	|	СУММА(ОстаточнаяСтоимостьНа0104),
	|	СУММА(ОстаточнаяСтоимостьНа0105),
	|	СУММА(ОстаточнаяСтоимостьНа0106),
	|	СУММА(ОстаточнаяСтоимостьНа0107),
	|	СУММА(ОстаточнаяСтоимостьНа0108),
	|	СУММА(ОстаточнаяСтоимостьНа0109),
	|	СУММА(ОстаточнаяСтоимостьНа0110),
	|	СУММА(ОстаточнаяСтоимостьОсновныхСредств),
	|	МАКСИМУМ(ЛьготируемаяСтоимость),
	|	СУММА(СуммаУменьшенияСуммыНалога),
	|	МАКСИМУМ(КоличествоРазличныхЛьгот),
	|	МАКСИМУМ(ЕстьОблагаемоеИмущество)
	|ПО
	|	ОБЩИЕ,
	|	КодВидаИмущества,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКТМО,
	|	НалоговаяСтавка,
	|	ПонижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВидНалоговойБазы";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтраницаРаздел2 = Раздел2[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел2 Цикл
		СтраницаРаздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Истина;
	
	КодВидаИмущества = "";
	КодПоОКТМО = "";
	КодНалоговойЛьготыОсвобождениеОтНалогообложения = "";
	ПонижениеНалоговойСтавки = Ложь;
	НалоговаяСтавка = 0;
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0101)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0102)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0103)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0104)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0105)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0106)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0107)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0108)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0109)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0110) Тогда
			
			Продолжить;
		КонецЕсли;
		
		Если Выборка.Группировка() = "ОБЩИЕ" Тогда
			
			ОстаточнаяСтоимостьОсновныхСредств = Выборка.ОстаточнаяСтоимостьОсновныхСредств;
			
		ИначеЕсли Выборка.Группировка() = "КодНалоговойЛьготыОсвобождениеОтНалогообложения" Тогда
			
			Если Не ПерваяСтраница Тогда
				
				Если ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2
				   И КодВидаИмущества = Выборка.КодВидаИмущества 
				   И КодПоОКТМО = Выборка.КодПоОКТМО 
				   И ПонижениеНалоговойСтавки = Выборка.ПонижениеНалоговойСтавки
				   И НалоговаяСтавка = Выборка.НалоговаяСтавка 
				   И Выборка.КоличествоРазличныхЛьгот = 2 
				   И Выборка.ЕстьОблагаемоеИмущество Тогда
					
					ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Ложь;
					
				Иначе
					
					ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Истина;
					
					// Создаем дополнительную страницу в декларации
					СтруктураНовойТаблицы = Новый Структура();
					Для Каждого Показатель Из СтраницаРаздел2 Цикл
						СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЦикла;
					
					НоваяСтраницаРаздела2 = Раздел2.Добавить();
					НоваяСтраницаРаздела2.Данные = СтруктураНовойТаблицы;
					
				КонецЕсли;
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			СтраницаРаздел2 = Раздел2[Раздел2.Количество()-1].Данные;
			
			СтраницаРаздел2.П000020000101           = ?(Лев(Выборка.КодВидаИмущества, 1) = "0", Прав(Выборка.КодВидаИмущества, 1), Выборка.КодВидаИмущества); 
			СтраницаРаздел2.П000020001001           = Выборка.КодПоОКТМО;
			СтраницаРаздел2.П000020013003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел2.П000020016003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
			СтраницаРаздел2.П000020017003           = Выборка.НалоговаяСтавка;
			
			Если Выборка.КодВидаИмущества = "02" Тогда
				ДоляСтоимостиЧислитель =   ?(Выборка.ДоляСтоимостиЧислитель = 0, 1, Выборка.ДоляСтоимостиЧислитель);
				ДоляСтоимостиЗнаменатель = ?(Выборка.ДоляСтоимостиЗнаменатель = 0, 1, Выборка.ДоляСтоимостиЗнаменатель);
				
				СтраницаРаздел2.П000020015003_Числ = ДоляСтоимостиЧислитель;
				СтраницаРаздел2.П000020015003_Знам = ДоляСтоимостиЗнаменатель;
			КонецЕсли;
			
			КодВидаИмущества           = Выборка.КодВидаИмущества; 
			КодПоОКТМО           = Выборка.КодПоОКТМО;
			КодНалоговойЛьготыОсвобождениеОтНалогообложения = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			ПонижениеНалоговойСтавки = Выборка.ПонижениеНалоговойСтавки;
			НалоговаяСтавка           = Выборка.НалоговаяСтавка;
			
		ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			
			ДополнительныеПараметры = Новый Структура;
			
			ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
			Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
			Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
			
			ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
			
			ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
			
			ПолеКомпоновкиДанных_КодВидаИмущества = Новый ПолеКомпоновкиДанных("КодВидаИмущества");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодВидаИмущества , ВидСравненияКомпоновкиДанных.Равно, Выборка.КодВидаИмущества);
			
			Если ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы Тогда
				ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
				ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
			КонецЕсли;
			
			ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
			
			ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
			
			ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
			ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);
			
			СтраницаРаздел2.П000020002003 = Число(СтраницаРаздел2.П000020002003) + Выборка.ОстаточнаяСтоимостьНа0101;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020002003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020002004 = Число(СтраницаРаздел2.П000020002004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0101, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020002004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003003 = Число(СтраницаРаздел2.П000020003003) + Выборка.ОстаточнаяСтоимостьНа0102;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020003003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003004 = Число(СтраницаРаздел2.П000020003004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0102, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020003004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004003 = Число(СтраницаРаздел2.П000020004003) + Выборка.ОстаточнаяСтоимостьНа0103;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020004003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004004 = Число(СтраницаРаздел2.П000020004004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0103, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020004004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005003 = Число(СтраницаРаздел2.П000020005003) + Выборка.ОстаточнаяСтоимостьНа0104;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020005003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005004 = Число(СтраницаРаздел2.П000020005004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0104, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020005004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006003 = Число(СтраницаРаздел2.П000020006003) + Выборка.ОстаточнаяСтоимостьНа0105;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020006003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006004 = Число(СтраницаРаздел2.П000020006004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0105, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020006004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007003 = Число(СтраницаРаздел2.П000020007003) + Выборка.ОстаточнаяСтоимостьНа0106;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020007003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007004 = Число(СтраницаРаздел2.П000020007004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0106, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020007004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008003 = Число(СтраницаРаздел2.П000020008003) + Выборка.ОстаточнаяСтоимостьНа0107;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020008003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008004 = Число(СтраницаРаздел2.П000020008004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0107, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020008004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009003 = Число(СтраницаРаздел2.П000020009003) + Выборка.ОстаточнаяСтоимостьНа0108;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020009003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009004 = Число(СтраницаРаздел2.П000020009004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0108, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020009004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010003 = Число(СтраницаРаздел2.П000020010003) + Выборка.ОстаточнаяСтоимостьНа0109;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020010003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010004 = Число(СтраницаРаздел2.П000020010004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0109, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020010004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011003 = Число(СтраницаРаздел2.П000020011003) + Выборка.ОстаточнаяСтоимостьНа0110;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020011003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011004 = Число(СтраницаРаздел2.П000020011004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0110, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020011004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020021003 = ОстаточнаяСтоимостьОсновныхСредств;
						
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020012003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020012003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020014003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020018003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020018003, "", ДополнительныеПараметры);
						
			Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда 
				
				СтраницаРаздел2.П000020019003_КодЛьготы = "2012500";
				СтраницаРаздел2.П000020020003 = Число(СтраницаРаздел2.П000020020003) + Выборка.СуммаУменьшенияСуммыНалога;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020020003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020020003, "", ДополнительныеПараметры);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Заполнение раздела 3
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.КадастровыйНомер КАК КадастровыйНомерЗдания,
	|	ВложенныйЗапрос.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	ВложенныйЗапрос.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	ВложенныйЗапрос.НеоблагаемаяКадастроваяСтоимость КАК НеоблагаемаяКадастроваяСтоимость,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ВидНалоговойБазы,
	|	ВложенныйЗапрос.СуммаУменьшенияСуммыНалога КАК СуммаУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)";
	
	Раздел3 = Контейнер.Раздел3;
	СтраницаРаздел3 = Раздел3[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел3 Цикл
		СтраницаРаздел3[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел3.Количество()>1 Цикл
		Раздел3.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Если Не ПерваяСтраница Тогда
			// Создаем дополнительную страницу в декларации
			СтруктураНовойТаблицы = Новый Структура();
			Для Каждого Показатель Из СтраницаРаздел3 Цикл
				СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
			КонецЦикла;
			
			НоваяСтаницаРаздела3 = Раздел3.Добавить();
			НоваяСтаницаРаздела3.Данные = СтруктураНовойТаблицы; 
			СтраницаРаздел3 = НоваяСтаницаРаздела3.Данные;
			
		Иначе
			// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
			ПерваяСтраница = Ложь;
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		
		ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
		Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
		Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
		
		ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
		
		ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
		
		ПолеКомпоновкиДанных_КадастровыйНомер = Новый ПолеКомпоновкиДанных("КадастровыйНомер");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомер , ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерЗдания);
		
		ПолеКомпоновкиДанных_КадастровыйНомерПомещения = Новый ПолеКомпоновкиДанных("КадастровыйНомерПомещения");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомерПомещения, ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерПомещения);
		
		ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
		
		ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
		
		ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
		
		ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
		ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);
		
		СтраницаРаздел3.П000030001001 = Выборка.КодПоОКТМО;
		СтраницаРаздел3.П000030001401 = Выборка.КадастровыйНомерЗдания;
		СтраницаРаздел3.П000030001501 = Выборка.КадастровыйНомерПомещения;
		СтраницаРаздел3.П000030002003 = Выборка.КадастроваяСтоимость;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030002003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030002003, "", ДополнительныеПараметры);
		СтраницаРаздел3.П000030003003 = Выборка.НеоблагаемаяКадастроваяСтоимость;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030003003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030003003, "", ДополнительныеПараметры);
		
		СтраницаРаздел3.П000030004003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
		СтраницаРаздел3.П000030006003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
		
		СтраницаРаздел3.П000030005003_Числ = Выборка.ДоляСтоимостиЧислитель;
		СтраницаРаздел3.П000030005003_Знам = Выборка.ДоляСтоимостиЗнаменатель;
		
		СтраницаРаздел3.П000030007003 = Выборка.НалоговаяСтавка;
		
		КоличествоМесяцевВПериоде = ?(Год(мДатаКонцаПериодаОтчета) < 2016, Месяц(мДатаКонцаПериодаОтчета), 3);
		Если Выборка.КоличествоМесяцевВладения > 0 И Выборка.КоличествоМесяцевВладения < КоличествоМесяцевВПериоде Тогда 
			СтраницаРаздел3.П000030008003_Числ = Выборка.КоличествоМесяцевВладения;
			СтраницаРаздел3.П000030008003_Знам = КоличествоМесяцевВПериоде;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030009003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030009003, "", ДополнительныеПараметры);
		
		Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда
			
			СтраницаРаздел3.П000030010003_КодЛьготы = "2012500";
			СтраницаРаздел3.П000030011003 = Выборка.СуммаУменьшенияСуммыНалога;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030011003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030011003, "", ДополнительныеПараметры);
			
		КонецЕсли;
			
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(Контейнер, ПараметрыОтчета.АдресВоВременномХранилище);
	ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.АдресВременногоХранилищаРасшифровки);
	
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаАвансыИмуществоФормаОтчета2017Кв1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000101", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001100", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020016003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001000", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001100", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210002001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210005003", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030000101", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001100", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001401", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001501", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030002503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003503_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003503_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030004003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030006003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030008003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030008003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030010003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030011003", Истина, Истина);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетАвансыИмуществоФормаОтчета2017Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Перем ТаблицаРасшифровки;
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	ОрганизацииУплачивающиеАвансы = РасчетИмущественныхНалогов.ОрганизацииУплачивающиеАвансы(Организация, мДатаКонцаПериодаОтчета, "НалогНаИмущество");
	Если ОрганизацииУплачивающиеАвансы.Количество() = 0 Тогда 
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКПорядкуУплатыНалоговНаМестах();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не настроена уплата авансов по налогу на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(мДатаНачалаПериодаОтчета), КонецДня(мДатаКонцаПериодаОтчета),"ФП = Истина")
			,Организация, ПутьКРегистру));
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;	
		
	КонецЕсли;

	// Сведения о налоговых льготах в виде уменьшения суммы налога.
	ПроцентУменьшенияСуммыНалога = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПроцентУменьшения, 0) КАК ПроцентУменьшения,
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2, ЛОЖЬ) КАК ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, ) КАК СтавкиНалогаНаИмуществоСрезПоследних
	|ГДЕ
	|	СтавкиНалогаНаИмуществоСрезПоследних.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтавкиНалогаПоОССрезПоследних.ОсновноеСредство
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазапоНалогуНаИмущество.КадастроваяСтоимость)) КАК СтавкиНалогаПоОССрезПоследних
	|ГДЕ
	|	СтавкиНалогаПоОССрезПоследних.Организация = &Организация";

	Результат = Запрос.ВыполнитьПакет();
	
	Если НЕ Результат[0].Пустой() Тогда
		ДопПараметрыОтчета = Результат[0].Выгрузить()[0];
		ПроцентУменьшенияСуммыНалога = ДопПараметрыОтчета.ПроцентУменьшения;
		ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2 = ДопПараметрыОтчета.ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2;
	ИначеЕсли Результат[1].Пустой() Тогда 
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не обнаружена ставка налога на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(мДатаНачалаПериодаОтчета), КонецДня(мДатаКонцаПериодаОтчета),"ФП = Истина")
			,Организация, ПутьКРегистру));
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;
		
	КонецЕсли;
	
	///////////////////////////////////////////////////////////////////////
	// РАЗДЕЛ 2
	
	// Заполнение раздела 2 по коду вида имущества 1,2,3,4,5 (прочее имущество).
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Раздел2 = Контейнер.Раздел2;
	
	Запрос.УстановитьПараметр("Организация", 			ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",	НачалоДня(мДатаКонцаПериодаОтчета));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетНалогаНаИмущество.КодВидаИмущества КАК КодВидаИмущества,
	|	РасчетНалогаНаИмущество.ИФНС,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0101 КАК ОстаточнаяСтоимостьНа0101,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0102 КАК ОстаточнаяСтоимостьНа0102,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0103 КАК ОстаточнаяСтоимостьНа0103,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0104 КАК ОстаточнаяСтоимостьНа0104,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0105 КАК ОстаточнаяСтоимостьНа0105,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0106 КАК ОстаточнаяСтоимостьНа0106,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0107 КАК ОстаточнаяСтоимостьНа0107,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0108 КАК ОстаточнаяСтоимостьНа0108,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0109 КАК ОстаточнаяСтоимостьНа0109,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0110 КАК ОстаточнаяСтоимостьНа0110,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьОсновныхСредств КАК ОстаточнаяСтоимостьОсновныхСредств,
	|	РасчетНалогаНаИмущество.КадастровыйНомер,
	|	РасчетНалогаНаИмущество.КадастровыйНомерПомещения,
	|	РасчетНалогаНаИмущество.КадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.НеоблагаемаяКадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.СуммаУменьшенияСуммыНалога,
	|	РасчетНалогаНаИмущество.КоличествоМесяцевВладения,
	|	РасчетНалогаНаИмущество.ОсновноеСредство,
	|	РасчетНалогаНаИмущество.КБК,
	|	РасчетНалогаНаИмущество.ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетНалогаНаИмущество.УсловныйНомер,
	|	РасчетНалогаНаИмущество.ДоляПлощадиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляПлощадиЗнаменатель
	|ИЗ
	|	РегистрСведений.РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|ГДЕ
	|	РасчетНалогаНаИмущество.Организация = &Организация
	|	И РасчетНалогаНаИмущество.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоНалогуНаИмущество = Новый ТаблицаЗначений;
	РегламентныеОперацииВыполнены = Ложь;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовПоНалогуНаИмущество = Выборка.Выгрузить();
		РегламентныеОперацииВыполнены = Истина;
	Иначе
		ТаблицаРасчетовПоНалогуНаИмущество = РасчетИмущественныхНалогов.ПолучитьРасчетПоНалогуНаИмущество(Организация, мДатаКонцаПериодаОтчета);
	КонецЕсли;	
	
	Отбор = Новый Структура("ИФНС, ВидНалоговойБазы, КоличествоМесяцевВладения",
		?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()),
		Перечисления.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость,
		0);
		
	НайденныеСтроки = ТаблицаРасчетовПоНалогуНаИмущество.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество();
		
		Для Каждого СтрокаТаблицы Из НайденныеСтроки Цикл
		
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			    НСтр("ru = 'Не заполнена дата регистрации права собственности для объекта %1
				|%2'"),	СтрокаТаблицы.ОсновноеСредство, ПутьКРегистру));
				
		КонецЦикла;
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;
	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовПоНалогуНаИмущество", ТаблицаРасчетовПоНалогуНаИмущество);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	ПОМЕСТИТЬ ВТ_ТаблицаРасчетовПоНалогуНаИмущество
	|	ИЗ &ТаблицаРасчетовПоНалогуНаИмущество КАК ТаблицаРасчетовПоНалогуНаИмущество";
	Запрос.Выполнить();
		
	НалоговыйОрган = ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	Запрос.УстановитьПараметр("НалоговыйОрган", НалоговыйОрган);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.КБК КАК КБК,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения) КАК КоличествоРазличныхЛьгот,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения = """"
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьОблагаемоеИмущество
	|ПОМЕСТИТЬ Льготы
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.КодВидаИмущества,
	|	ВложенныйЗапрос.КБК,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КодВидаИмущества
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.КБК КАК КБК,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0101) КАК ОстаточнаяСтоимостьНа0101,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0102) КАК ОстаточнаяСтоимостьНа0102,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0103) КАК ОстаточнаяСтоимостьНа0103,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0104) КАК ОстаточнаяСтоимостьНа0104,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0105) КАК ОстаточнаяСтоимостьНа0105,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0106) КАК ОстаточнаяСтоимостьНа0106,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0107) КАК ОстаточнаяСтоимостьНа0107,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0108) КАК ОстаточнаяСтоимостьНа0108,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0109) КАК ОстаточнаяСтоимостьНа0109,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0110) КАК ОстаточнаяСтоимостьНа0110,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьОсновныхСредств) КАК ОстаточнаяСтоимостьОсновныхСредств,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения <> """"
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЛьготируемаяСтоимость,
	|	ВложенныйЗапрос.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	СУММА(ВложенныйЗапрос.СуммаУменьшенияСуммыНалога) КАК СуммаУменьшенияСуммыНалога,
	|	Льготы.КоличествоРазличныхЛьгот КАК КоличествоРазличныхЛьгот,
	|	Льготы.ЕстьОблагаемоеИмущество КАК ЕстьОблагаемоеИмущество
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Льготы КАК Льготы
	|		ПО ВложенныйЗапрос.КодВидаИмущества = Льготы.КодВидаИмущества
	|			И ВложенныйЗапрос.КБК = Льготы.КБК
	|			И ВложенныйЗапрос.ДоляСтоимостиЧислитель = Льготы.ДоляСтоимостиЧислитель
	|			И ВложенныйЗапрос.ДоляСтоимостиЗнаменатель = Льготы.ДоляСтоимостиЗнаменатель
	|			И ВложенныйЗапрос.КодПоОКТМО = Льготы.КодПоОКТМО
	|			И ВложенныйЗапрос.НалоговаяСтавка = Льготы.НалоговаяСтавка
	|			И ВложенныйЗапрос.ПонижениеНалоговойСтавки = Льготы.ПонижениеНалоговойСтавки
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.КодВидаИмущества,
	|	ВложенныйЗапрос.КБК,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.ВидНалоговойБазы,
	|	Льготы.КоличествоРазличныхЛьгот,
	|	Льготы.ЕстьОблагаемоеИмущество
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодВидаИмущества,
	|	КодПоОКТМО,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения
	|ИТОГИ
	|	СУММА(ОстаточнаяСтоимостьНа0101),
	|	СУММА(ОстаточнаяСтоимостьНа0102),
	|	СУММА(ОстаточнаяСтоимостьНа0103),
	|	СУММА(ОстаточнаяСтоимостьНа0104),
	|	СУММА(ОстаточнаяСтоимостьНа0105),
	|	СУММА(ОстаточнаяСтоимостьНа0106),
	|	СУММА(ОстаточнаяСтоимостьНа0107),
	|	СУММА(ОстаточнаяСтоимостьНа0108),
	|	СУММА(ОстаточнаяСтоимостьНа0109),
	|	СУММА(ОстаточнаяСтоимостьНа0110),
	|	СУММА(ОстаточнаяСтоимостьОсновныхСредств),
	|	МАКСИМУМ(ЛьготируемаяСтоимость),
	|	СУММА(СуммаУменьшенияСуммыНалога),
	|	МАКСИМУМ(КоличествоРазличныхЛьгот),
	|	МАКСИМУМ(ЕстьОблагаемоеИмущество)
	|ПО
	|	ОБЩИЕ,
	|	КодВидаИмущества,
	|	КБК,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКТМО,
	|	НалоговаяСтавка,
	|	ПонижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВидНалоговойБазы";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтраницаРаздел2 = Раздел2.Строки[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел2 Цикл
		СтраницаРаздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел2.Строки.Количество()>1 Цикл
		Раздел2.Строки.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Истина;
	
	КодВидаИмущества = "";
	КБК = "";
	КодПоОКТМО = "";
	КодНалоговойЛьготыОсвобождениеОтНалогообложения = "";
	ПонижениеНалоговойСтавки = Ложь;
	НалоговаяСтавка = 0;
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0101)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0102)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0103)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0104)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0105)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0106)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0107)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0108)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0109)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0110) Тогда
			
			Продолжить;
		КонецЕсли;
		
		Если Выборка.Группировка() = "ОБЩИЕ" Тогда
			
			ОстаточнаяСтоимостьОсновныхСредств = Выборка.ОстаточнаяСтоимостьОсновныхСредств;
			
		ИначеЕсли Выборка.Группировка() = "КодНалоговойЛьготыОсвобождениеОтНалогообложения" Тогда
			
			Если Не ПерваяСтраница Тогда
				
				Если ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2
				   И КодВидаИмущества = Выборка.КодВидаИмущества
				   И ?(КодВидаИмущества = "06" ИЛИ КодВидаИмущества = "08" ИЛИ КодВидаИмущества = "10", КБК = Выборка.КБК, Истина)
				   И КодПоОКТМО = Выборка.КодПоОКТМО 
				   И ПонижениеНалоговойСтавки = Выборка.ПонижениеНалоговойСтавки
				   И НалоговаяСтавка = Выборка.НалоговаяСтавка 
				   И Выборка.КоличествоРазличныхЛьгот = 2 
				   И Выборка.ЕстьОблагаемоеИмущество Тогда
					
					ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Ложь;
					
				Иначе
					
					ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Истина;
					
					// Создаем дополнительную страницу в декларации
					СтруктураНовойТаблицы = Новый Структура();
					Для Каждого Показатель Из СтраницаРаздел2 Цикл
						СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЦикла;
					
					НоваяСтраницаРаздела2 = Раздел2.Строки.Добавить();
					
					НоваяСтраницаРаздела2.Данные = СтруктураНовойТаблицы;
					НоваяСтраницаРаздела2.ДанныеМногострочныхЧастей = Новый Структура;
					
				КонецЕсли;
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			СтраницаРаздел2 = Раздел2.Строки[Раздел2.Строки.Количество()-1].Данные;
			
			КодВидаИмущества = Выборка.КодВидаИмущества;
			Если КодВидаИмущества = "06" ИЛИ КодВидаИмущества = "08" ИЛИ КодВидаИмущества = "10" Тогда
				КБК = Выборка.КБК;
			ИначеЕсли КодВидаИмущества = "01" Тогда
				КБК = "18210602020021000110";
			Иначе
				КБК = "18210602010021000110";
			КонецЕсли;
			
			СтраницаРаздел2.П000020000101           = КодВидаИмущества; 
			СтраницаРаздел2.П000020001001           = Выборка.КодПоОКТМО;
			СтраницаРаздел2.П000020001100           = КБК;
			СтраницаРаздел2.П000020013003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел2.П000020016003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
			СтраницаРаздел2.П000020017003           = Выборка.НалоговаяСтавка;
			
			Если КодВидаИмущества = "02" Тогда
				ДоляСтоимостиЧислитель =   ?(Выборка.ДоляСтоимостиЧислитель = 0, 1, Выборка.ДоляСтоимостиЧислитель);
				ДоляСтоимостиЗнаменатель = ?(Выборка.ДоляСтоимостиЗнаменатель = 0, 1, Выборка.ДоляСтоимостиЗнаменатель);
				
				СтраницаРаздел2.П000020015003_Числ = ДоляСтоимостиЧислитель;
				СтраницаРаздел2.П000020015003_Знам = ДоляСтоимостиЗнаменатель;
			КонецЕсли;
			
			КодВидаИмущества           = Выборка.КодВидаИмущества; 
			КодПоОКТМО           = Выборка.КодПоОКТМО;
			КодНалоговойЛьготыОсвобождениеОтНалогообложения = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			ПонижениеНалоговойСтавки = Выборка.ПонижениеНалоговойСтавки;
			НалоговаяСтавка           = Выборка.НалоговаяСтавка;
			
		ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			
			ДополнительныеПараметры = Новый Структура;
			
			ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
			Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
			Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
			
			ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
			
			ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
			
			ПолеКомпоновкиДанных_КодВидаИмущества = Новый ПолеКомпоновкиДанных("КодВидаИмущества");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодВидаИмущества , ВидСравненияКомпоновкиДанных.Равно, Выборка.КодВидаИмущества);
			
			Если ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы Тогда
				ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
				ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
			КонецЕсли;
			
			ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
			
			ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
			
			ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
			ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);
			
			СтраницаРаздел2.П000020002003 = Число(СтраницаРаздел2.П000020002003) + Выборка.ОстаточнаяСтоимостьНа0101;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020002003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020002004 = Число(СтраницаРаздел2.П000020002004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0101, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020002004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003003 = Число(СтраницаРаздел2.П000020003003) + Выборка.ОстаточнаяСтоимостьНа0102;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020003003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003004 = Число(СтраницаРаздел2.П000020003004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0102, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020003004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004003 = Число(СтраницаРаздел2.П000020004003) + Выборка.ОстаточнаяСтоимостьНа0103;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020004003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004004 = Число(СтраницаРаздел2.П000020004004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0103, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020004004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005003 = Число(СтраницаРаздел2.П000020005003) + Выборка.ОстаточнаяСтоимостьНа0104;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020005003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005004 = Число(СтраницаРаздел2.П000020005004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0104, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020005004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006003 = Число(СтраницаРаздел2.П000020006003) + Выборка.ОстаточнаяСтоимостьНа0105;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020006003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006004 = Число(СтраницаРаздел2.П000020006004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0105, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020006004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007003 = Число(СтраницаРаздел2.П000020007003) + Выборка.ОстаточнаяСтоимостьНа0106;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020007003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007004 = Число(СтраницаРаздел2.П000020007004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0106, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020007004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008003 = Число(СтраницаРаздел2.П000020008003) + Выборка.ОстаточнаяСтоимостьНа0107;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020008003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008004 = Число(СтраницаРаздел2.П000020008004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0107, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020008004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009003 = Число(СтраницаРаздел2.П000020009003) + Выборка.ОстаточнаяСтоимостьНа0108;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020009003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009004 = Число(СтраницаРаздел2.П000020009004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0108, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020009004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010003 = Число(СтраницаРаздел2.П000020010003) + Выборка.ОстаточнаяСтоимостьНа0109;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020010003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010004 = Число(СтраницаРаздел2.П000020010004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0109, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020010004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011003 = Число(СтраницаРаздел2.П000020011003) + Выборка.ОстаточнаяСтоимостьНа0110;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020011003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011004 = Число(СтраницаРаздел2.П000020011004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0110, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020011004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020021003 = ОстаточнаяСтоимостьОсновныхСредств;
						
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020012003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020012003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020014003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020018003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020018003, "", ДополнительныеПараметры);
						
			Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда 
				
				СтраницаРаздел2.П000020019003_КодЛьготы = "2012500";
				СтраницаРаздел2.П000020020003 = Число(СтраницаРаздел2.П000020020003) + Выборка.СуммаУменьшенияСуммыНалога;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020020003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020020003, "", ДополнительныеПараметры);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Заполнение раздела 2.1
	
	ПерваяВтораяАмортизационныеГруппы = Новый Массив;
	ПерваяВтораяАмортизационныеГруппы.Добавить(Перечисления.АмортизационныеГруппы.ПерваяГруппа);
	ПерваяВтораяАмортизационныеГруппы.Добавить(Перечисления.АмортизационныеГруппы.ВтораяГруппа);
	
	Запрос.УстановитьПараметр("ПерваяВтораяАмортизационныеГруппы", ПерваяВтораяАмортизационныеГруппы);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(КонецДня(мДатаКонцаПериодаОтчета), ВидГраницы.Включая));
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ВТ_Недвижимость
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|	И ВложенныйЗапрос.ОсновноеСредство.НедвижимоеИмущество
	|	И НЕ ВложенныйЗапрос.ОсновноеСредство.АмортизационнаяГруппа В (&ПерваяВтораяАмортизационныеГруппы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация КАК Организация,
	|	МАКСИМУМ(СостоянияОСОрганизаций.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|ГДЕ
	|	СостоянияОСОрганизаций.ДатаСостояния <= &КонецПериода
	|	И СостоянияОСОрганизаций.Организация = &Организация
	|	И СостоянияОСОрганизаций.ОсновноеСредство В
	|			(ВЫБРАТЬ
	|				СписокОС.ОсновноеСредство
	|			ИЗ
	|				ВТ_Недвижимость КАК СписокОС)
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ПО ДатыПоследнихСостояний.ОсновноеСредство = СостоянияОСОрганизаций.ОсновноеСредство
	|			И ДатыПоследнихСостояний.Организация = СостоянияОСОрганизаций.Организация
	|			И ДатыПоследнихСостояний.ДатаСостояния = СостоянияОСОрганизаций.ДатаСостояния
	|ГДЕ
	|	СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.ИнвентарныйНомер КАК ИнвентарныйНомер
	|ПОМЕСТИТЬ ПервоначальныеСведенияОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&КонецПериодаГраница,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						НеСнятыеСУчета КАК СписокОС)) КАК ПервоначальныеСведенияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НеСнятыеСУчета.ОсновноеСредство КАК ОсновноеСредство,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.КБК КАК КБК,
	|	ВложенныйЗапрос.КадастровыйНомер КАК КадастровыйНомер,
	|	ВложенныйЗапрос.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	ВложенныйЗапрос.УсловныйНомер КАК УсловныйНомер,
	|	ВложенныйЗапрос.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ИнвентарныйНомер, """") КАК ИнвентарныйНомер,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0104) КАК ОстаточнаяСтоимостьНа0104,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0107) КАК ОстаточнаяСтоимостьНа0107,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0110) КАК ОстаточнаяСтоимостьНа0110,
	|	ЕСТЬNULL(ОсновныеСредства.КодПоОКОФ.Код, """") КАК КодПоОКОФ,
	|	ЕСТЬNULL(ОсновныеСредства.ШифрПоЕНАОФ, """") КАК ШифрПоЕНАОФ
	|ИЗ
	|	НеСнятыеСУчета КАК НеСнятыеСУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|		ПО НеСнятыеСУчета.ОсновноеСредство = ВложенныйЗапрос.ОсновноеСредство
	|			И (ВложенныйЗапрос.ИФНС = &НалоговыйОрган)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО НеСнятыеСУчета.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
	|		ПО НеСнятыеСУчета.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	НеСнятыеСУчета.ОсновноеСредство,
	|	ВложенныйЗапрос.КодПоОКТМО,
	|	ВложенныйЗапрос.КодВидаИмущества,
	|	ВложенныйЗапрос.КБК,
	|	ВложенныйЗапрос.КадастровыйНомер,
	|	ВложенныйЗапрос.КадастровыйНомерПомещения,
	|	ВложенныйЗапрос.УсловныйНомер,
	|	ВложенныйЗапрос.ВидНалоговойБазы,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ИнвентарныйНомер, """"),
	|	ЕСТЬNULL(ОсновныеСредства.КодПоОКОФ.Код, """"),
	|	ЕСТЬNULL(ОсновныеСредства.ШифрПоЕНАОФ, """")";
	
	Раздел21 = Контейнер.Раздел21;
	СтраницаРаздел21 = Раздел21.Строки[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел21 Цикл
		СтраницаРаздел21[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел21.Строки.Количество()>1 Цикл
		Раздел21.Строки.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Если Не ПерваяСтраница Тогда
			// Создаем дополнительную страницу в декларации
			СтруктураНовойТаблицы = Новый Структура();
			Для Каждого Показатель Из СтраницаРаздел21 Цикл
				СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
			КонецЦикла;
			
			НоваяСтраницаРаздела21 = Раздел21.Строки.Добавить();
			НоваяСтраницаРаздела21.Данные = СтруктураНовойТаблицы;
			НоваяСтраницаРаздела21.ДанныеМногострочныхЧастей = Новый Структура;
			
			СтраницаРаздел21 = Раздел21.Строки[Раздел21.Строки.Количество()-1].Данные;
			
		Иначе
			// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
			ПерваяСтраница = Ложь;
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		
		ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
		Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
		Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
		
		ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
		
		ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
		
		ПолеКомпоновкиДанных_ОсновноеСредство = Новый ПолеКомпоновкиДанных("ОсновноеСредство");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ОсновноеСредство , ВидСравненияКомпоновкиДанных.Равно, Выборка.ОсновноеСредство);
		
		ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
		
		ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
		ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);
		
		СтраницаРаздел21.П000210001000 = Выборка.КодПоОКТМО;
		
		КодВидаИмущества = Выборка.КодВидаИмущества;
		Если КодВидаИмущества = "06" ИЛИ КодВидаИмущества = "08" ИЛИ КодВидаИмущества = "10" Тогда
			КБК = Выборка.КБК;
		ИначеЕсли КодВидаИмущества = "01" Тогда
			КБК = "18210602020021000110";
		Иначе
			КБК = "18210602010021000110";
		КонецЕсли;
		СтраницаРаздел21.П000210001100 = КБК;
		
		СтраницаРаздел21.П000210001001 = ?(ЗначениеЗаполнено(Выборка.КадастровыйНомерПомещения),
		                                   Выборка.КадастровыйНомерПомещения, Выборка.КадастровыйНомер);
		СтраницаРаздел21.П000210002001 = Выборка.УсловныйНомер;
		Если Не ЗначениеЗаполнено(СтраницаРаздел21.П000210001001) И Не ЗначениеЗаполнено(СтраницаРаздел21.П000210002001) Тогда
			СтраницаРаздел21.П000210003001 = Выборка.ИнвентарныйНомер;
		КонецЕсли;
		
		КодПоОКОФ = СокрЛП(Выборка.КодПоОКОФ);
		Если СтрДлина(КодПоОКОФ) = 10 И Сред(КодПоОКОФ, 3, 1) = " " Тогда
			КодПоОКОФ = СтрЗаменить(КодПоОКОФ, " ", "");
			КодПоОКОФ = Сред(КодПоОКОФ, 1, 3) + "." + Сред(КодПоОКОФ, 4, 2) + "." + Сред(КодПоОКОФ, 6, 2) + "." + Сред(КодПоОКОФ, 8, 2);
		ИначеЕсли ПустаяСтрока(КодПоОКОФ) Тогда
			ШифрПоЕНАОФ = СокрЛП(Выборка.ШифрПоЕНАОФ);
			Если СтрДлина(ШифрПоЕНАОФ) = 6 Тогда
				КодПоОКОФ = Сред(ШифрПоЕНАОФ, 1, 2) + Сред(ШифрПоЕНАОФ, 4, 1) + "." + Сред(ШифрПоЕНАОФ, 5, 2);
			КонецЕсли;
		КонецЕсли;
		СтраницаРаздел21.П000210004003 = КодПоОКОФ;
		
		Если Месяц(мДатаКонцаПериодаОтчета) = 3 Тогда
			СтраницаРаздел21.П000210005003 = Выборка.ОстаточнаяСтоимостьНа0104;
		ИначеЕсли Месяц(мДатаКонцаПериодаОтчета) = 6 Тогда
			СтраницаРаздел21.П000210005003 = Выборка.ОстаточнаяСтоимостьНа0107;
		ИначеЕсли Месяц(мДатаКонцаПериодаОтчета) = 9 Тогда
			СтраницаРаздел21.П000210005003 = Выборка.ОстаточнаяСтоимостьНа0110;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000210005003_" + Раздел21.Строки.Количество(), "", "", "", СтраницаРаздел21.П000210005003, "", ДополнительныеПараметры);
			
	КонецЦикла;
	
	
	// Заполнение раздела 3
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.КадастровыйНомер КАК КадастровыйНомерЗдания,
	|	ВложенныйЗапрос.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	ВложенныйЗапрос.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	ВложенныйЗапрос.НеоблагаемаяКадастроваяСтоимость КАК НеоблагаемаяКадастроваяСтоимость,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ВидНалоговойБазы,
	|	ВложенныйЗапрос.СуммаУменьшенияСуммыНалога КАК СуммаУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ВложенныйЗапрос.ДоляПлощадиЧислитель КАК ДоляПлощадиЧислитель,
	|	ВложенныйЗапрос.ДоляПлощадиЗнаменатель КАК ДоляПлощадиЗнаменатель,
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)";
	
	Раздел3 = Контейнер.Раздел3;
	СтраницаРаздел3 =  Раздел3.Строки[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел3 Цикл
		СтраницаРаздел3[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел3.Строки.Количество()>1 Цикл
		Раздел3.Строки.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Если Не ПерваяСтраница Тогда
			// Создаем дополнительную страницу в декларации
			СтруктураНовойТаблицы = Новый Структура();
			Для Каждого Показатель Из СтраницаРаздел3 Цикл
				СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
			КонецЦикла;
			
			НоваяСтраницаРаздела3 = Раздел3.Строки.Добавить();
			НоваяСтраницаРаздела3.Данные = СтруктураНовойТаблицы;
			НоваяСтраницаРаздела3.ДанныеМногострочныхЧастей = Новый Структура;
			
			СтраницаРаздел3 = Раздел3.Строки[Раздел3.Строки.Количество()-1].Данные;
			
		Иначе
			// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
			ПерваяСтраница = Ложь;
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		
		ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
		Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
		Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
		
		ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
		
		ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
		
		ПолеКомпоновкиДанных_КадастровыйНомер = Новый ПолеКомпоновкиДанных("КадастровыйНомер");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомер , ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерЗдания);
		
		ПолеКомпоновкиДанных_КадастровыйНомерПомещения = Новый ПолеКомпоновкиДанных("КадастровыйНомерПомещения");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомерПомещения, ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерПомещения);
		
		ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
		
		ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
		
		ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
		
		ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
		ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);
		
		СтраницаРаздел3.П000030000101 = Выборка.КодВидаИмущества;
		СтраницаРаздел3.П000030001001 = Выборка.КодПоОКТМО;
		СтраницаРаздел3.П000030001100 = "18210602010021000110";
		СтраницаРаздел3.П000030001401 = Выборка.КадастровыйНомерЗдания;
		СтраницаРаздел3.П000030001501 = Выборка.КадастровыйНомерПомещения;
		СтраницаРаздел3.П000030002003 = Выборка.КадастроваяСтоимость;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030002003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030002003, "", ДополнительныеПараметры);
		СтраницаРаздел3.П000030002503 = Выборка.НеоблагаемаяКадастроваяСтоимость;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030002503_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030002503, "", ДополнительныеПараметры);
		
		СтраницаРаздел3.П000030003003_Числ = Выборка.ДоляВПравеОбщейСобственностиЧислитель;
		СтраницаРаздел3.П000030003003_Знам = Выборка.ДоляВПравеОбщейСобственностиЗнаменатель;
		
		СтраницаРаздел3.П000030003503_Числ = Выборка.ДоляПлощадиЧислитель;
		СтраницаРаздел3.П000030003503_Знам = Выборка.ДоляПлощадиЗнаменатель;
		
		СтраницаРаздел3.П000030004003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
		СтраницаРаздел3.П000030006003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
		
		СтраницаРаздел3.П000030005003_Числ = Выборка.ДоляСтоимостиЧислитель;
		СтраницаРаздел3.П000030005003_Знам = Выборка.ДоляСтоимостиЗнаменатель;
		
		СтраницаРаздел3.П000030007003 = Выборка.НалоговаяСтавка;
		
		КоличествоМесяцевВПериоде = ?(Год(мДатаКонцаПериодаОтчета) < 2016, Месяц(мДатаКонцаПериодаОтчета), 3);
		Если Выборка.КоличествоМесяцевВладения > 0 И Выборка.КоличествоМесяцевВладения < КоличествоМесяцевВПериоде Тогда 
			СтраницаРаздел3.П000030008003_Числ = Строка(Выборка.КоличествоМесяцевВладения);
			СтраницаРаздел3.П000030008003_Знам = Строка(КоличествоМесяцевВПериоде);
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030009003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030009003, "", ДополнительныеПараметры);
		
		Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда
			
			СтраницаРаздел3.П000030010003_КодЛьготы = "2012500";
			СтраницаРаздел3.П000030011003 = Выборка.СуммаУменьшенияСуммыНалога;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030011003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030011003, "", ДополнительныеПараметры);
			
		КонецЕсли;
			
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.АдресВременногоХранилищаРасшифровки);
	ПоместитьВоВременноеХранилище(Контейнер, ПараметрыОтчета.АдресВоВременномХранилище);
	
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаАвансыИмуществоФормаОтчета2019Кв1(ПоказателиОтчета) Экспорт
	
	// Раздел 2
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000101", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001100", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020016003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Истина);
	
	// Раздел 2.1
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001000", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001100", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210002001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003000", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003002", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003005", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003006", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003007", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003008", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003009", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003010", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003011", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003012", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П00021М103013", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П00021М103014", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003015", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003016", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003017", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003018", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210005003", Истина, Истина);
	
	// Раздел 3
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030000101", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001100", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001401", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001501", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030002503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003503_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003503_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030004003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030006003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030008503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030010003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030011003", Истина, Истина);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетАвансыИмуществоФормаОтчета2019Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Перем ТаблицаРасшифровки;
	
	Организация              = ПараметрыОтчета.Организация;
	КодНалоговогоОргана      = ПараметрыОтчета.КодНалоговогоОргана;
	КПП                      = ПараметрыОтчета.КПП;
	мДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	НалоговыйОрган = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	ОрганизацииУплачивающиеАвансы = РасчетИмущественныхНалогов.ОрганизацииУплачивающиеАвансы(Организация, мДатаКонцаПериодаОтчета, "НалогНаИмущество");
	Если ОрганизацииУплачивающиеАвансы.Количество() = 0 Тогда 
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не настроена уплата авансов по налогу на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(мДатаНачалаПериодаОтчета), КонецДня(мДатаКонцаПериодаОтчета),"ФП = Истина")
			,Организация, ОписаниеПутиВИнтерфейсеКПорядкуУплатыНалоговНаМестах()));
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;
		
	КонецЕсли;

	// Сведения о налоговых льготах в виде уменьшения суммы налога.
	ПроцентУменьшенияСуммыНалога = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПроцентУменьшения, 0) КАК ПроцентУменьшения,
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2, ЛОЖЬ) КАК ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, ) КАК СтавкиНалогаНаИмуществоСрезПоследних
	|ГДЕ
	|	СтавкиНалогаНаИмуществоСрезПоследних.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтавкиНалогаПоОССрезПоследних.ОсновноеСредство
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазапоНалогуНаИмущество.КадастроваяСтоимость)) КАК СтавкиНалогаПоОССрезПоследних
	|ГДЕ
	|	СтавкиНалогаПоОССрезПоследних.Организация = &Организация";

	Результат = Запрос.ВыполнитьПакет();
	
	Если НЕ Результат[0].Пустой() Тогда
		ДопПараметрыОтчета = Результат[0].Выгрузить()[0];
		ПроцентУменьшенияСуммыНалога = ДопПараметрыОтчета.ПроцентУменьшения;
		ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2 = ДопПараметрыОтчета.ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2;
	ИначеЕсли Результат[1].Пустой() Тогда 
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не обнаружена ставка налога на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(мДатаНачалаПериодаОтчета), КонецДня(мДатаКонцаПериодаОтчета),"ФП = Истина")
			,Организация, ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество()));
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;
		
	КонецЕсли;
	
	// Заполнение раздела 2.
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Раздел2 = Контейнер.Раздел2;
	
	Запрос.УстановитьПараметр("Организация",         ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета", НачалоДня(мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("НалоговыйОрган",      НалоговыйОрган);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетНалогаНаИмущество.КодВидаИмущества КАК КодВидаИмущества,
	|	РасчетНалогаНаИмущество.ИФНС КАК ИФНС,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0101 КАК ОстаточнаяСтоимостьНа0101,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0102 КАК ОстаточнаяСтоимостьНа0102,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0103 КАК ОстаточнаяСтоимостьНа0103,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0104 КАК ОстаточнаяСтоимостьНа0104,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0105 КАК ОстаточнаяСтоимостьНа0105,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0106 КАК ОстаточнаяСтоимостьНа0106,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0107 КАК ОстаточнаяСтоимостьНа0107,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0108 КАК ОстаточнаяСтоимостьНа0108,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0109 КАК ОстаточнаяСтоимостьНа0109,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0110 КАК ОстаточнаяСтоимостьНа0110,
	|	РасчетНалогаНаИмущество.КадастровыйНомер КАК КадастровыйНомер,
	|	РасчетНалогаНаИмущество.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	РасчетНалогаНаИмущество.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.НеоблагаемаяКадастроваяСтоимость КАК НеоблагаемаяКадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.СуммаУменьшенияСуммыНалога КАК СуммаУменьшенияСуммыНалога,
	|	РасчетНалогаНаИмущество.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	РасчетНалогаНаИмущество.КоличествоМесяцевИспользования КАК КоличествоМесяцевИспользования,
	|	РасчетНалогаНаИмущество.ОсновноеСредство КАК ОсновноеСредство,
	|	РасчетНалогаНаИмущество.КБК КАК КБК,
	|	РасчетНалогаНаИмущество.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетНалогаНаИмущество.УсловныйНомер КАК УсловныйНомер,
	|	РасчетНалогаНаИмущество.ДоляПлощадиЧислитель КАК ДоляПлощадиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляПлощадиЗнаменатель КАК ДоляПлощадиЗнаменатель
	|ПОМЕСТИТЬ ВТ_РасчетНалогаНаИмущество
	|ИЗ
	|	РегистрСведений.РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|ГДЕ
	|	РасчетНалогаНаИмущество.Организация = &Организация
	|	И РасчетНалогаНаИмущество.ПериодРасчета = &ДатаОкончанияОтчета
	|	И РасчетНалогаНаИмущество.ИФНС = &НалоговыйОрган
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетНалогаНаИмущество.КодВидаИмущества КАК КодВидаИмущества,
	|	РасчетНалогаНаИмущество.КБК КАК КБК,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения) КАК КоличествоРазличныхЛьгот,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения = """"
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьОблагаемоеИмущество
	|ПОМЕСТИТЬ Льготы
	|ИЗ
	|	ВТ_РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|ГДЕ
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетНалогаНаИмущество.КодВидаИмущества,
	|	РасчетНалогаНаИмущество.КБК,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодПоОКТМО,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КодВидаИмущества
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетНалогаНаИмущество.КодВидаИмущества КАК КодВидаИмущества,
	|	РасчетНалогаНаИмущество.КБК КАК КБК,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0101) КАК ОстаточнаяСтоимостьНа0101,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0102) КАК ОстаточнаяСтоимостьНа0102,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0103) КАК ОстаточнаяСтоимостьНа0103,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0104) КАК ОстаточнаяСтоимостьНа0104,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0105) КАК ОстаточнаяСтоимостьНа0105,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0106) КАК ОстаточнаяСтоимостьНа0106,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0107) КАК ОстаточнаяСтоимостьНа0107,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0108) КАК ОстаточнаяСтоимостьНа0108,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0109) КАК ОстаточнаяСтоимостьНа0109,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0110) КАК ОстаточнаяСтоимостьНа0110,
	|	ВЫБОР
	|		КОГДА РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения <> """"
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЛьготируемаяСтоимость,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	СУММА(РасчетНалогаНаИмущество.СуммаУменьшенияСуммыНалога) КАК СуммаУменьшенияСуммыНалога,
	|	Льготы.КоличествоРазличныхЛьгот КАК КоличествоРазличныхЛьгот,
	|	Льготы.ЕстьОблагаемоеИмущество КАК ЕстьОблагаемоеИмущество
	|ИЗ
	|	ВТ_РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Льготы КАК Льготы
	|		ПО РасчетНалогаНаИмущество.КодВидаИмущества = Льготы.КодВидаИмущества
	|			И РасчетНалогаНаИмущество.КБК = Льготы.КБК
	|			И РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель = Льготы.ДоляСтоимостиЧислитель
	|			И РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель = Льготы.ДоляСтоимостиЗнаменатель
	|			И РасчетНалогаНаИмущество.КодПоОКТМО = Льготы.КодПоОКТМО
	|			И РасчетНалогаНаИмущество.НалоговаяСтавка = Льготы.НалоговаяСтавка
	|			И РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки = Льготы.ПонижениеНалоговойСтавки
	|ГДЕ
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетНалогаНаИмущество.КодВидаИмущества,
	|	РасчетНалогаНаИмущество.КБК,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодПоОКТМО,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки,
	|	РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы,
	|	Льготы.КоличествоРазличныхЛьгот,
	|	Льготы.ЕстьОблагаемоеИмущество
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодВидаИмущества,
	|	КодПоОКТМО,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения
	|ИТОГИ
	|	СУММА(ОстаточнаяСтоимостьНа0101),
	|	СУММА(ОстаточнаяСтоимостьНа0102),
	|	СУММА(ОстаточнаяСтоимостьНа0103),
	|	СУММА(ОстаточнаяСтоимостьНа0104),
	|	СУММА(ОстаточнаяСтоимостьНа0105),
	|	СУММА(ОстаточнаяСтоимостьНа0106),
	|	СУММА(ОстаточнаяСтоимостьНа0107),
	|	СУММА(ОстаточнаяСтоимостьНа0108),
	|	СУММА(ОстаточнаяСтоимостьНа0109),
	|	СУММА(ОстаточнаяСтоимостьНа0110),
	|	МАКСИМУМ(ЛьготируемаяСтоимость),
	|	СУММА(СуммаУменьшенияСуммыНалога),
	|	МАКСИМУМ(КоличествоРазличныхЛьгот),
	|	МАКСИМУМ(ЕстьОблагаемоеИмущество)
	|ПО
	|	КодВидаИмущества,
	|	КБК,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКТМО,
	|	НалоговаяСтавка,
	|	ПонижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВидНалоговойБазы";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтраницаРаздел2 = Раздел2.Строки[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел2 Цикл
		СтраницаРаздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел2.Строки.Количество()>1 Цикл
		Раздел2.Строки.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Истина;
	
	КодВидаИмущества = "";
	КБК = "";
	КодПоОКТМО = "";
	КодНалоговойЛьготыОсвобождениеОтНалогообложения = "";
	ПонижениеНалоговойСтавки = Ложь;
	НалоговаяСтавка = 0;
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0101)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0102)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0103)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0104)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0105)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0106)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0107)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0108)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0109)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0110) Тогда
			
			Продолжить;
		КонецЕсли;
		
		Если Выборка.Группировка() = "КодНалоговойЛьготыОсвобождениеОтНалогообложения" Тогда
			
			Если Не ПерваяСтраница Тогда
				
				Если ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2
				   И КодВидаИмущества = Выборка.КодВидаИмущества
				   И ?(КодВидаИмущества = "06" ИЛИ КодВидаИмущества = "08" ИЛИ КодВидаИмущества = "10", КБК = Выборка.КБК, Истина)
				   И КодПоОКТМО = Выборка.КодПоОКТМО 
				   И ПонижениеНалоговойСтавки = Выборка.ПонижениеНалоговойСтавки
				   И НалоговаяСтавка = Выборка.НалоговаяСтавка 
				   И Выборка.КоличествоРазличныхЛьгот = 2 
				   И Выборка.ЕстьОблагаемоеИмущество Тогда
					
					ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Ложь;
					
				Иначе
					
					ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Истина;
					
					// Создаем дополнительную страницу в декларации
					СтруктураНовойТаблицы = Новый Структура();
					Для Каждого Показатель Из СтраницаРаздел2 Цикл
						СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЦикла;
					
					НоваяСтраницаРаздела2 = Раздел2.Строки.Добавить();
					
					НоваяСтраницаРаздела2.Данные = СтруктураНовойТаблицы;
					НоваяСтраницаРаздела2.ДанныеМногострочныхЧастей = Новый Структура;
					
				КонецЕсли;
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			СтраницаРаздел2 = Раздел2.Строки[Раздел2.Строки.Количество()-1].Данные;
			
			КодВидаИмущества = Выборка.КодВидаИмущества;
			Если КодВидаИмущества = "06" ИЛИ КодВидаИмущества = "08" ИЛИ КодВидаИмущества = "10" Тогда
				КБК = Выборка.КБК;
			ИначеЕсли КодВидаИмущества = "01" Тогда
				КБК = "18210602020021000110";
			Иначе
				КБК = "18210602010021000110";
			КонецЕсли;
			
			СтраницаРаздел2.П000020000101           = КодВидаИмущества; 
			СтраницаРаздел2.П000020001001           = Выборка.КодПоОКТМО;
			СтраницаРаздел2.П000020001100           = КБК;
			СтраницаРаздел2.П000020013003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел2.П000020016003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
			СтраницаРаздел2.П000020017003           = Выборка.НалоговаяСтавка;
			
			Если КодВидаИмущества = "02" Тогда
				ДоляСтоимостиЧислитель =   ?(Выборка.ДоляСтоимостиЧислитель = 0, 1, Выборка.ДоляСтоимостиЧислитель);
				ДоляСтоимостиЗнаменатель = ?(Выборка.ДоляСтоимостиЗнаменатель = 0, 1, Выборка.ДоляСтоимостиЗнаменатель);
				
				СтраницаРаздел2.П000020015003_Числ = ДоляСтоимостиЧислитель;
				СтраницаРаздел2.П000020015003_Знам = ДоляСтоимостиЗнаменатель;
			КонецЕсли;
			
			КодВидаИмущества           = Выборка.КодВидаИмущества; 
			КодПоОКТМО           = Выборка.КодПоОКТМО;
			КодНалоговойЛьготыОсвобождениеОтНалогообложения = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			ПонижениеНалоговойСтавки = Выборка.ПонижениеНалоговойСтавки;
			НалоговаяСтавка           = Выборка.НалоговаяСтавка;
			
		ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			
			ДополнительныеПараметры = Новый Структура;
			
			ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
			Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
			Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
			
			ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
			
			ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
			
			ПолеКомпоновкиДанных_КодВидаИмущества = Новый ПолеКомпоновкиДанных("КодВидаИмущества");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодВидаИмущества , ВидСравненияКомпоновкиДанных.Равно, Выборка.КодВидаИмущества);
			
			Если ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы Тогда
				ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
				ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
			КонецЕсли;
			
			ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
			
			ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
			
			ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
			ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", Истина);
			
			СтраницаРаздел2.П000020002003 = Число(СтраницаРаздел2.П000020002003) + Выборка.ОстаточнаяСтоимостьНа0101;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020002003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020002004 = Число(СтраницаРаздел2.П000020002004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0101, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020002004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003003 = Число(СтраницаРаздел2.П000020003003) + Выборка.ОстаточнаяСтоимостьНа0102;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020003003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003004 = Число(СтраницаРаздел2.П000020003004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0102, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020003004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004003 = Число(СтраницаРаздел2.П000020004003) + Выборка.ОстаточнаяСтоимостьНа0103;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020004003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004004 = Число(СтраницаРаздел2.П000020004004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0103, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020004004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005003 = Число(СтраницаРаздел2.П000020005003) + Выборка.ОстаточнаяСтоимостьНа0104;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020005003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005004 = Число(СтраницаРаздел2.П000020005004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0104, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020005004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006003 = Число(СтраницаРаздел2.П000020006003) + Выборка.ОстаточнаяСтоимостьНа0105;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020006003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006004 = Число(СтраницаРаздел2.П000020006004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0105, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020006004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007003 = Число(СтраницаРаздел2.П000020007003) + Выборка.ОстаточнаяСтоимостьНа0106;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020007003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007004 = Число(СтраницаРаздел2.П000020007004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0106, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020007004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008003 = Число(СтраницаРаздел2.П000020008003) + Выборка.ОстаточнаяСтоимостьНа0107;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020008003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008004 = Число(СтраницаРаздел2.П000020008004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0107, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020008004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009003 = Число(СтраницаРаздел2.П000020009003) + Выборка.ОстаточнаяСтоимостьНа0108;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020009003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009004 = Число(СтраницаРаздел2.П000020009004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0108, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020009004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010003 = Число(СтраницаРаздел2.П000020010003) + Выборка.ОстаточнаяСтоимостьНа0109;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020010003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010004 = Число(СтраницаРаздел2.П000020010004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0109, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020010004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011003 = Число(СтраницаРаздел2.П000020011003) + Выборка.ОстаточнаяСтоимостьНа0110;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020011003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011004 = Число(СтраницаРаздел2.П000020011004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0110, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020011004, "", ДополнительныеПараметры);
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020012003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020012003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020014003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020018003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020018003, "", ДополнительныеПараметры);
						
			Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда 
				
				СтраницаРаздел2.П000020019003_КодЛьготы = "2012500";
				СтраницаРаздел2.П000020020003 = Число(СтраницаРаздел2.П000020020003) + Выборка.СуммаУменьшенияСуммыНалога;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020020003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020020003, "", ДополнительныеПараметры);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Заполнение раздела 2.1
	Запрос.УстановитьПараметр("КонецПериода",        КонецДня(мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(КонецДня(мДатаКонцаПериодаОтчета), ВидГраницы.Включая));
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетНалогаНаИмущество.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ВТ_Недвижимость
	|ИЗ
	|	ВТ_РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|ГДЕ
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация КАК Организация,
	|	МАКСИМУМ(СостоянияОСОрганизаций.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|ГДЕ
	|	СостоянияОСОрганизаций.ДатаСостояния <= &КонецПериода
	|	И СостоянияОСОрганизаций.Организация = &Организация
	|	И СостоянияОСОрганизаций.ОсновноеСредство В
	|			(ВЫБРАТЬ
	|				СписокОС.ОсновноеСредство
	|			ИЗ
	|				ВТ_Недвижимость КАК СписокОС)
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ПО ДатыПоследнихСостояний.ОсновноеСредство = СостоянияОСОрганизаций.ОсновноеСредство
	|			И ДатыПоследнихСостояний.Организация = СостоянияОСОрганизаций.Организация
	|			И ДатыПоследнихСостояний.ДатаСостояния = СостоянияОСОрганизаций.ДатаСостояния
	|ГДЕ
	|	СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.ИнвентарныйНомер КАК ИнвентарныйНомер
	|ПОМЕСТИТЬ ПервоначальныеСведенияОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&КонецПериодаГраница,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						НеСнятыеСУчета КАК СписокОС)) КАК ПервоначальныеСведенияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НеСнятыеСУчета.ОсновноеСредство КАК ОсновноеСредство,
	|	РасчетНалогаНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетНалогаНаИмущество.КодВидаИмущества КАК КодВидаИмущества,
	|	РасчетНалогаНаИмущество.КБК КАК КБК,
	|	РасчетНалогаНаИмущество.КадастровыйНомер КАК КадастровыйНомер,
	|	РасчетНалогаНаИмущество.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	РасчетНалогаНаИмущество.УсловныйНомер КАК УсловныйНомер,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ИнвентарныйНомер, """") КАК ИнвентарныйНомер,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0104) КАК ОстаточнаяСтоимостьНа0104,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0107) КАК ОстаточнаяСтоимостьНа0107,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0110) КАК ОстаточнаяСтоимостьНа0110,
	|	ЕСТЬNULL(ОсновныеСредства.КодПоОКОФ.Код, """") КАК КодПоОКОФ,
	|	ЕСТЬNULL(ОсновныеСредства.ШифрПоЕНАОФ, """") КАК ШифрПоЕНАОФ
	|ИЗ
	|	НеСнятыеСУчета КАК НеСнятыеСУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|		ПО НеСнятыеСУчета.ОсновноеСредство = РасчетНалогаНаИмущество.ОсновноеСредство
	|			И (РасчетНалогаНаИмущество.ИФНС = &НалоговыйОрган)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО НеСнятыеСУчета.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
	|		ПО НеСнятыеСУчета.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	НеСнятыеСУчета.ОсновноеСредство,
	|	РасчетНалогаНаИмущество.КодПоОКТМО,
	|	РасчетНалогаНаИмущество.КодВидаИмущества,
	|	РасчетНалогаНаИмущество.КБК,
	|	РасчетНалогаНаИмущество.КадастровыйНомер,
	|	РасчетНалогаНаИмущество.КадастровыйНомерПомещения,
	|	РасчетНалогаНаИмущество.УсловныйНомер,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ИнвентарныйНомер, """"),
	|	ЕСТЬNULL(ОсновныеСредства.КодПоОКОФ.Код, """"),
	|	ЕСТЬNULL(ОсновныеСредства.ШифрПоЕНАОФ, """")";
	
	Раздел21 = Контейнер.Раздел21;
	СтраницаРаздел21 = Раздел21.Строки[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел21 Цикл
		СтраницаРаздел21[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	СтраницаРаздел21Здание = Раздел21.Строки[0].ДанныеМногострочныхЧастей.П00021М1.Строки[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел21Здание Цикл
		СтраницаРаздел21Здание[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел21.Строки.Количество()>1 Цикл
		Раздел21.Строки.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	ДанныеОбъектов = Запрос.Выполнить().Выгрузить();
	
	Если ДанныеОбъектов.Количество() > 0 Тогда
		ДанныеАдресов = УправлениеКонтактнойИнформациейБП.КонтактнаяИнформацияОбъектовНаДату(ДанныеОбъектов.ВыгрузитьКолонку("ОсновноеСредство"));
		ДанныеАдресов.Индексы.Добавить("Объект");
	КонецЕсли;
	
	Для каждого ДанныеОбъекта Из ДанныеОбъектов Цикл
	
		Если Не ПерваяСтраница Тогда
			// Создаем дополнительную страницу в декларации
			СтруктураНовойТаблицы = Новый Структура();
			СтруктураДанныхМногострочныхЧастей = Новый Структура();
			Для Каждого Показатель Из СтраницаРаздел21 Цикл
				СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
			КонецЦикла;
			Для Каждого Показатель Из СтраницаРаздел21Здание Цикл
				СтруктураДанныхМногострочныхЧастей.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
			КонецЦикла;
			
			НоваяСтраницаРаздела21 = Раздел21.Строки.Добавить();
			НоваяСтраницаРаздела21.Данные = СтруктураНовойТаблицы;
			НоваяСтраницаРаздела21.ДанныеМногострочныхЧастей = Новый Структура("П00021М1", ДеревоЗначенийРегОтчет());
			
			СтраницаРаздел21 = Раздел21.Строки[Раздел21.Строки.Количество()-1].Данные;
			
			НоваяСтрокаРаздел21Здание = НоваяСтраницаРаздела21.ДанныеМногострочныхЧастей.П00021М1.Строки.Добавить();
			НоваяСтрокаРаздел21Здание.Данные = СтруктураДанныхМногострочныхЧастей;
			НоваяСтрокаРаздел21Здание.ДанныеМногострочныхЧастей = Новый Структура;
			
			СтраницаРаздел21Здание = Раздел21.Строки[Раздел21.Строки.Количество()-1].ДанныеМногострочныхЧастей.П00021М1.Строки[0].Данные;
			
		Иначе
			// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
			ПерваяСтраница = Ложь;
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		
		ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
		Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
		Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
		
		ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
		
		ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, ДанныеОбъекта.КодПоОКТМО);
		
		ПолеКомпоновкиДанных_ОсновноеСредство = Новый ПолеКомпоновкиДанных("ОсновноеСредство");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ОсновноеСредство , ВидСравненияКомпоновкиДанных.Равно, ДанныеОбъекта.ОсновноеСредство);
		
		ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, ДанныеОбъекта.ВидНалоговойБазы);
		
		ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
		ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", Истина);
		
		СтраницаРаздел21.П000210001000 = ДанныеОбъекта.КодПоОКТМО;
		
		КодВидаИмущества = ДанныеОбъекта.КодВидаИмущества;
		Если КодВидаИмущества = "06" ИЛИ КодВидаИмущества = "08" ИЛИ КодВидаИмущества = "10" Тогда
			КБК = ДанныеОбъекта.КБК;
		ИначеЕсли КодВидаИмущества = "01" Тогда
			КБК = "18210602020021000110";
		Иначе
			КБК = "18210602010021000110";
		КонецЕсли;
		СтраницаРаздел21.П000210001100 = КБК;
		
		АдресМестонахождения = ДанныеАдресов.Найти(ДанныеОбъекта.ОсновноеСредство, "Объект");
		
		Если ЗначениеЗаполнено(ДанныеОбъекта.КадастровыйНомерПомещения) Тогда
			СтраницаРаздел21.П000210001001 = "1";
			СтраницаРаздел21.П000210002001 = ДанныеОбъекта.КадастровыйНомерПомещения;
		ИначеЕсли ЗначениеЗаполнено(ДанныеОбъекта.КадастровыйНомер) Тогда
			СтраницаРаздел21.П000210001001 = "1";
			СтраницаРаздел21.П000210002001 = ДанныеОбъекта.КадастровыйНомер;
		ИначеЕсли ЗначениеЗаполнено(ДанныеОбъекта.УсловныйНомер) Тогда
			СтраницаРаздел21.П000210001001 = "2";
			СтраницаРаздел21.П000210002001 = ДанныеОбъекта.УсловныйНомер;
		ИначеЕсли АдресМестонахождения <> Неопределено И НЕ ПустаяСтрока(АдресМестонахождения.Значение) Тогда
			СтраницаРаздел21.П000210001001 = "3";
			СтраницаРаздел21.П000210002001 = ДанныеОбъекта.ИнвентарныйНомер;
		Иначе
			СтраницаРаздел21.П000210001001 = "4";
			СтраницаРаздел21.П000210002001 = ДанныеОбъекта.ИнвентарныйНомер;
		КонецЕсли;
		
		Если СтраницаРаздел21.П000210001001 = "3" Тогда
			
			Если АдресМестонахождения <> Неопределено И НЕ ПустаяСтрока(АдресМестонахождения.Значение) Тогда
			
				ПоляАдреса = ИнтерфейсыВзаимодействияБРО.АдресВФорматеФИАС(АдресМестонахождения.Значение);
				
				СтраницаРаздел21.П00021УИД3000 = ПоляАдреса.ИдентификаторАдресногоОбъекта;
				СтраницаРаздел21.П000210003000 = ПоляАдреса.Индекс;
				СтраницаРаздел21.П000210003001 = ПоляАдреса.КодРегиона;
				СтраницаРаздел21.ПС00210003001 = ПоляАдреса.РегионСокращение;
				СтраницаРаздел21.П000210003002 = ПоляАдреса.МуниципальныйРайонВид;
				СтраницаРаздел21.ПС00210003002 = ПоляАдреса.МуниципальныйРайонСокращение;
				СтраницаРаздел21.П000210003003 = ПоляАдреса.МуниципальныйРайон;
				СтраницаРаздел21.П000210003004 = ПоляАдреса.ПоселениеВид;
				СтраницаРаздел21.ПС00210003004 = ПоляАдреса.ПоселениеСокращение;
				СтраницаРаздел21.П000210003005 = ПоляАдреса.Поселение;
				СтраницаРаздел21.П000210003006 = ПоляАдреса.НаселенныйПунктВид;
				СтраницаРаздел21.ПС00210003006 = ПоляАдреса.НаселенныйПунктСокращение;
				СтраницаРаздел21.П000210003007 = ПоляАдреса.НаселенныйПункт;
				СтраницаРаздел21.П000210003008 = ПоляАдреса.ТерриторияТип;
				СтраницаРаздел21.ПС00210003008 = ПоляАдреса.ТерриторияСокращение;
				СтраницаРаздел21.П000210003009 = ПоляАдреса.Территория;
				СтраницаРаздел21.П000210003010 = ПоляАдреса.УлицаТип;
				СтраницаРаздел21.ПС00210003010 = ПоляАдреса.УлицаСокращение;
				СтраницаРаздел21.П000210003011 = ПоляАдреса.Улица;
				СтраницаРаздел21.П000210003015 = ПоляАдреса.ПомещениеВЗданииТип;
				СтраницаРаздел21.П000210003016 = ПоляАдреса.ПомещениеВЗданииНомер;
				СтраницаРаздел21.П000210003017 = ПоляАдреса.ПомещениеВКвартиреТип;
				СтраницаРаздел21.П000210003018 = ПоляАдреса.ПомещениеВКвартиреНомер;
				
				ПервоеЗдание = Истина;
				Для Каждого Здание Из ПоляАдреса.Здания Цикл
					
					Если Не ПервоеЗдание Тогда
						СтруктураДанныхМногострочныхЧастей = Новый Структура();
						Для Каждого Показатель Из СтраницаРаздел21Здание Цикл
							СтруктураДанныхМногострочныхЧастей.Вставить(
								Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
						КонецЦикла;
						
						НоваяСтрокаРаздел21Здание = 
							Раздел21.Строки[Раздел21.Строки.Количество()-1].ДанныеМногострочныхЧастей.П00021М1.Строки.Добавить();
						НоваяСтрокаРаздел21Здание.Данные = СтруктураДанныхМногострочныхЧастей;
						НоваяСтрокаРаздел21Здание.ДанныеМногострочныхЧастей = Новый Структура;
						
						СтраницаРаздел21Здание = НоваяСтрокаРаздел21Здание.Данные;
					Иначе
						ПервоеЗдание = Ложь;
					КонецЕсли;
					
					СтраницаРаздел21Здание.П00021М103013 = Здание.ЗданиеТип;
					СтраницаРаздел21Здание.П00021М103014 = Здание.ЗданиеНомер;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
		КодПоОКОФ = СокрЛП(ДанныеОбъекта.КодПоОКОФ);
		Если СтрДлина(КодПоОКОФ) = 10 И Сред(КодПоОКОФ, 3, 1) = " " Тогда
			КодПоОКОФ = СтрЗаменить(КодПоОКОФ, " ", "");
			КодПоОКОФ = Сред(КодПоОКОФ, 1, 3) + "." + Сред(КодПоОКОФ, 4, 2) + "." + Сред(КодПоОКОФ, 6, 2) + "." + Сред(КодПоОКОФ, 8, 2);
		ИначеЕсли ПустаяСтрока(КодПоОКОФ) Тогда
			ШифрПоЕНАОФ = СокрЛП(ДанныеОбъекта.ШифрПоЕНАОФ);
			Если СтрДлина(ШифрПоЕНАОФ) = 6 Тогда
				КодПоОКОФ = Сред(ШифрПоЕНАОФ, 1, 2) + Сред(ШифрПоЕНАОФ, 4, 1) + "." + Сред(ШифрПоЕНАОФ, 5, 2);
			КонецЕсли;
		КонецЕсли;
		СтраницаРаздел21.П000210004003 = КодПоОКОФ;
		
		Если Месяц(мДатаКонцаПериодаОтчета) = 3 Тогда
			СтраницаРаздел21.П000210005003 = ДанныеОбъекта.ОстаточнаяСтоимостьНа0104;
		ИначеЕсли Месяц(мДатаКонцаПериодаОтчета) = 6 Тогда
			СтраницаРаздел21.П000210005003 = ДанныеОбъекта.ОстаточнаяСтоимостьНа0107;
		ИначеЕсли Месяц(мДатаКонцаПериодаОтчета) = 9 Тогда
			СтраницаРаздел21.П000210005003 = ДанныеОбъекта.ОстаточнаяСтоимостьНа0110;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000210005003_" + Раздел21.Строки.Количество(), "", "", "", СтраницаРаздел21.П000210005003, "", ДополнительныеПараметры);
			
	КонецЦикла;
	
	
	// Заполнение раздела 3
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетНалогаНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетНалогаНаИмущество.КадастровыйНомер КАК КадастровыйНомерЗдания,
	|	РасчетНалогаНаИмущество.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	РасчетНалогаНаИмущество.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.НеоблагаемаяКадастроваяСтоимость КАК НеоблагаемаяКадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	РасчетНалогаНаИмущество.СуммаУменьшенияСуммыНалога КАК СуммаУменьшенияСуммыНалога,
	|	РасчетНалогаНаИмущество.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	РасчетНалогаНаИмущество.КоличествоМесяцевИспользования КАК КоличествоМесяцевИспользования,
	|	РасчетНалогаНаИмущество.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетНалогаНаИмущество.ДоляПлощадиЧислитель КАК ДоляПлощадиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляПлощадиЗнаменатель КАК ДоляПлощадиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодВидаИмущества КАК КодВидаИмущества
	|ИЗ
	|	ВТ_РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|ГДЕ
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)";
	
	Раздел3 = Контейнер.Раздел3;
	СтраницаРаздел3 =  Раздел3.Строки[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел3 Цикл
		СтраницаРаздел3[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел3.Строки.Количество()>1 Цикл
		Раздел3.Строки.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Если Не ПерваяСтраница Тогда
			// Создаем дополнительную страницу в декларации
			СтруктураНовойТаблицы = Новый Структура();
			Для Каждого Показатель Из СтраницаРаздел3 Цикл
				СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
			КонецЦикла;
			
			НоваяСтраницаРаздела3 = Раздел3.Строки.Добавить();
			НоваяСтраницаРаздела3.Данные = СтруктураНовойТаблицы;
			НоваяСтраницаРаздела3.ДанныеМногострочныхЧастей = Новый Структура;
			
			СтраницаРаздел3 = Раздел3.Строки[Раздел3.Строки.Количество()-1].Данные;
			
		Иначе
			// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
			ПерваяСтраница = Ложь;
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		
		ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
		Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
		Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
		
		ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
		
		ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
		
		ПолеКомпоновкиДанных_КадастровыйНомер = Новый ПолеКомпоновкиДанных("КадастровыйНомер");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомер , ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерЗдания);
		
		ПолеКомпоновкиДанных_КадастровыйНомерПомещения = Новый ПолеКомпоновкиДанных("КадастровыйНомерПомещения");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомерПомещения, ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерПомещения);
		
		ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
		
		ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
		
		ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
		
		ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
		ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", Истина);
		
		СтраницаРаздел3.П000030000101 = Выборка.КодВидаИмущества;
		СтраницаРаздел3.П000030001001 = Выборка.КодПоОКТМО;
		СтраницаРаздел3.П000030001100 = "18210602010021000110";
		
		Если ЗначениеЗаполнено(Выборка.КадастровыйНомерПомещения) Тогда
			СтраницаРаздел3.П000030001401 = "2";
			СтраницаРаздел3.П000030001501 = Выборка.КадастровыйНомерПомещения;
		Иначе
			СтраницаРаздел3.П000030001401 = "1";
			СтраницаРаздел3.П000030001501 = Выборка.КадастровыйНомерЗдания;
		КонецЕсли;
		
		СтраницаРаздел3.П000030002003 = Выборка.КадастроваяСтоимость;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030002003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030002003, "", ДополнительныеПараметры);
		СтраницаРаздел3.П000030002503 = Выборка.НеоблагаемаяКадастроваяСтоимость;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030002503_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030002503, "", ДополнительныеПараметры);
		
		СтраницаРаздел3.П000030003003_Числ = Выборка.ДоляВПравеОбщейСобственностиЧислитель;
		СтраницаРаздел3.П000030003003_Знам = Выборка.ДоляВПравеОбщейСобственностиЗнаменатель;
		
		СтраницаРаздел3.П000030003503_Числ = Выборка.ДоляПлощадиЧислитель;
		СтраницаРаздел3.П000030003503_Знам = Выборка.ДоляПлощадиЗнаменатель;
		
		СтраницаРаздел3.П000030004003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
		СтраницаРаздел3.П000030006003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
		
		СтраницаРаздел3.П000030005003_Числ = Выборка.ДоляСтоимостиЧислитель;
		СтраницаРаздел3.П000030005003_Знам = Выборка.ДоляСтоимостиЗнаменатель;
		
		СтраницаРаздел3.П000030007003 = Выборка.НалоговаяСтавка;
		СтраницаРаздел3.П000030008003 = Окр(Выборка.КоличествоМесяцевВладения / 3, 4);
		
		Если Выборка.КоличествоМесяцевИспользования > 0 И Выборка.КоличествоМесяцевИспользования < Выборка.КоличествоМесяцевВладения Тогда 
			СтраницаРаздел3.П000030008503 = Окр(Выборка.КоличествоМесяцевИспользования / Выборка.КоличествоМесяцевВладения, 4);
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030009003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030009003, "", ДополнительныеПараметры);
		
		Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда
			
			СтраницаРаздел3.П000030010003_КодЛьготы = "2012500";
			СтраницаРаздел3.П000030011003 = Выборка.СуммаУменьшенияСуммыНалога;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030011003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030011003, "", ДополнительныеПараметры);
			
		КонецЕсли;
			
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.АдресВременногоХранилищаРасшифровки);
	ПоместитьВоВременноеХранилище(Контейнер, ПараметрыОтчета.АдресВоВременномХранилище);
	
КонецПроцедуры

#КонецОбласти

#Область Имущество

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаИмуществоФормаОтчета2011Кв3(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014104", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетИмуществоФормаОтчета2011Кв3(ПараметрыОтчета, Контейнер) Экспорт

	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ПараметрыОтчета.КодНалоговогоОргана;
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	мДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	// Сведения о налоговых льготах в виде уменьшения суммы налога.
	ПроцентУменьшенияСуммыНалога = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПроцентУменьшения, 0) КАК ПроцентУменьшения
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период) КАК СтавкиНалогаНаИмуществоСрезПоследних
	|ГДЕ
	|	СтавкиНалогаНаИмуществоСрезПоследних.Организация = &Организация";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ПроцентУменьшенияСуммыНалога = РезультатЗапроса.Выгрузить()[0].ПроцентУменьшения;
	Иначе
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не обнаружена ставка налога на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
			
		Возврат;
		
	КонецЕсли;

	Период  = НачалоМесяца(ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	Счетчик = 1;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Признак применения ЕНВД.
	ПрименениеЕНВД = УчетнаяПолитика.ПлательщикЕНВД(ПараметрыОтчета.Организация, ПараметрыОтчета.мДатаКонцаПериодаОтчета);

	Если ПрименениеЕНВД Тогда 
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто2 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто3 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат)), ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)) КАК ОтношениеКЕНВД,
		|	СУММА(СпособыОтраженияРасходовПоАмортизацииСпособы.Коэффициент) КАК Коэффициент
		|ПОМЕСТИТЬ ВТ_ВыборкаКоэффициентов
		|ИЗ
		|	Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СпособыОтраженияРасходовПоАмортизацииСпособы
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто2 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто3 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат)), ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)),
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|ИНДЕКСИРОВАТЬ ПО
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка КАК Ссылка,
		|	СУММА(СпособыОтраженияРасходовПоАмортизацииСпособы.Коэффициент) КАК СуммаКоэффициентов
		|ПОМЕСТИТЬ ВТ_ВыборкаСуммыКоэффициентов
		|ИЗ
		|	Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СпособыОтраженияРасходовПоАмортизацииСпособы
		|СГРУППИРОВАТЬ ПО
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|ИНДЕКСИРОВАТЬ ПО
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВыборкаКоэффициентов.Ссылка КАК Ссылка,
		|	СУММА(ВЫБОР
		|	      	КОГДА ВыборкаКоэффициентов.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
		|	      		ТОГДА ВыборкаКоэффициентов.Коэффициент / ВыборкаСуммыКоэффициентов.СуммаКоэффициентов
		|		  	ИНАЧЕ 0
		|	      КОНЕЦ) КАК НеЕНВД,
		|	СУММА(ВЫБОР
		|			КОГДА ВыборкаКоэффициентов.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
		|				ТОГДА ВыборкаКоэффициентов.Коэффициент / ВыборкаСуммыКоэффициентов.СуммаКоэффициентов
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Распределение
		|
		|ПОМЕСТИТЬ
		|	КоэффициентыЕНВД
		|
		|ИЗ
		|	ВТ_ВыборкаКоэффициентов КАК ВыборкаКоэффициентов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВыборкаСуммыКоэффициентов КАК ВыборкаСуммыКоэффициентов
		|		ПО ВыборкаСуммыКоэффициентов.Ссылка = ВыборкаКоэффициентов.Ссылка
		|ГДЕ
		|	ВыборкаКоэффициентов.ОтношениеКЕНВД <> ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
		|	
		|СГРУППИРОВАТЬ ПО
		|	ВыборкаКоэффициентов.Ссылка
		|";
		Запрос.Выполнить();
	КонецЕсли;

	ГоловнаяОрганизация = ПараметрыОтчета.Организация.ГоловнаяОрганизация;
	Если Не ЗначениеЗаполнено(ГоловнаяОрганизация) Тогда
		ГоловнаяОрганизация = ПараметрыОтчета.Организация;
	КонецЕсли;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("КонецПериодаОтчета", КонецГода(Период));
	Запрос.УстановитьПараметр("НалоговыйОрган", ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()));
	
	Если Метаданные.Документы.Найти("АвизоОСВходящее") <> Неопределено Тогда 
		ДопУсловие = " И НЕ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.АвизоОСВходящее";
	Иначе
		ДопУсловие = "";
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОС,
	|	МИНИМУМ(СостоянияОСОрганизаций.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|ГДЕ
	|	СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)" + ДопУсловие + "
	|	И СостоянияОСОрганизаций.Организация В
	|			(ВЫБРАТЬ
	|				Организации.Ссылка КАК Ссылка
	|			ИЗ
	|				Справочник.Организации КАК Организации
	|			ГДЕ
	|				(Организации.Ссылка = &ГоловнаяОрганизация
	|					ИЛИ Организации.ГоловнаяОрганизация = &ГоловнаяОрганизация))
	|	И СостоянияОСОрганизаций.Период <= &КонецПериодаОтчета
	|	И НЕ СостоянияОСОрганизаций.ОсновноеСредство.НедвижимоеИмущество
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний.ОС
	|ПОМЕСТИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013
	|ИЗ
	|	ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний
	|ГДЕ
	|	ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний.ДатаСостояния >= ДАТАВРЕМЯ(2013, 1, 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний";
	Запрос.Выполнить();
	
	ТекстОбъединяющегоЗапроса = "";
	
	Пока Период <= НачалоМесяца(ДобавитьМесяц(ПараметрыОтчета.мДатаКонцаПериодаОтчета, 1)) Цикл
		
		ПрименениеУСН = УчетнаяПолитика.ПрименяетсяУСН(ПараметрыОтчета.Организация,
			?(Год(Период) = Год(мДатаКонцаПериодаОтчета), КонецКвартала(Период), мДатаКонцаПериодаОтчета));
		
		Если НЕ ПрименениеУСН Тогда
			
			Запрос.УстановитьПараметр("Период",          Период);
			Запрос.УстановитьПараметр("ПериодБухИтогов", ?(Счетчик = 13, Новый Граница(Период), Период));
			
			// Срез последних записей по основному средству в регистре "Ставки налога на имущество по отдельным основным средствам".
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство,
			|	МАКСИМУМ(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период) КАК ПериодСреза
			|ПОМЕСТИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов
			|ИЗ
			|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
			|ГДЕ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период <= &Период
			|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация = &Организация
            |
			|СГРУППИРОВАТЬ ПО
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство
			|;
            |
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НалоговыйОрган,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ПорядокНалогообложения
			|ПОМЕСТИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|ИЗ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
			|		ПО СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство
			|			И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов.ПериодСреза = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период
			|";
			Запрос.Выполнить();
			
			
			Если НЕ ЗначениеЗаполнено(КодНалоговогоОргана) Тогда
				
				// Выборка объектов по основному налоговому органу организации (его нет в справочнике Регистрация в налоговом органе).
				Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ОС.Ссылка КАК ОсновноеСредство
				|ПОМЕСТИТЬ
				|	СписокРазрешенныхОС
				|ИЗ
				|	Справочник.ОсновныеСредства КАК ОС
				|ГДЕ
				|	(НЕ ОС.Ссылка В 
				|		(ВЫБРАТЬ
				|			СостоянияОСОрганизаций.ОсновноеСредство
				|		ИЗ
				|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
				|		ГДЕ
				|			СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
				|			И СостоянияОСОрганизаций.ДатаСостояния < &Период
				|			И СостоянияОСОрганизаций.Организация = &Организация))
				|	И (НЕ ОС.Ссылка В (ВЫБРАТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013.ОС ИЗ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013 КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013))
				|	И (НЕ ОС.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования)))
				|	И (НЕ ОС.Ссылка В
				|		(ВЫБРАТЬ
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
				|		ИЗ
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
				|		ГДЕ
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
				|			ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению)))
				|ИНДЕКСИРОВАТЬ ПО
				|	ОС.Ссылка
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
				|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
				|
				|ПОМЕСТИТЬ
				|	СписокОС
				|
				|ИЗ
				|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
				|			&Период,
				|			Организация = &Организация
				|			И (ОсновноеСредство В (ВЫБРАТЬ РАЗЛИЧНЫЕ СписокРазрешенныхОС.ОсновноеСредство ИЗ СписокРазрешенныхОС КАК СписокРазрешенныхОС))
				|	) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
				|ИНДЕКСИРОВАТЬ ПО
				|	 ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство";
				
			Иначе
				
				Если КодНалоговогоОргана = РеквизитыОрганизации.КодНалоговогоОргана Тогда
					
					// Выборка объектов по основному налоговому органу организации (он есть в справочнике Регистрация налоговом органе).
					Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ОС.Ссылка КАК ОсновноеСредство
					|ПОМЕСТИТЬ
					|	СписокРазрешенныхОС
					|ИЗ
					|	Справочник.ОсновныеСредства КАК ОС
					|ГДЕ
					|	(НЕ ОС.Ссылка В 
					|		(ВЫБРАТЬ
					|			СостоянияОСОрганизаций.ОсновноеСредство
					|		ИЗ
					|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
					|		ГДЕ
					|			СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
					|			И СостоянияОСОрганизаций.ДатаСостояния < &Период
					|			И СостоянияОСОрганизаций.Организация = &Организация))
					|	И (НЕ ОС.Ссылка В (ВЫБРАТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013.ОС ИЗ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013 КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013))
					|	И (НЕ ОС.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования)))
					|	И (НЕ ОС.Ссылка В
					|		(ВЫБРАТЬ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
					|		ИЗ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
					|		ГДЕ
					|			(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
					|			И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган <> &НалоговыйОрган)
					|			ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению)))
					|ИНДЕКСИРОВАТЬ ПО
					|	ОС.Ссылка
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
					|
					|ПОМЕСТИТЬ
					|	СписокОС
					|
					|ИЗ
					|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
					|			&Период,
					|			Организация = &Организация
					|			И (ОсновноеСредство В (ВЫБРАТЬ РАЗЛИЧНЫЕ СписокРазрешенныхОС.ОсновноеСредство ИЗ СписокРазрешенныхОС КАК СписокРазрешенныхОС))
					|	) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
					|ИНДЕКСИРОВАТЬ ПО
					|	 ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство";
					
				Иначе
					
					// Выборка объектов по указанному пользователем налоговому органу.
					Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ОС.Ссылка КАК ОсновноеСредство
					|ПОМЕСТИТЬ
					|	СписокРазрешенныхОС
					|ИЗ
					|	Справочник.ОсновныеСредства КАК ОС
					|ГДЕ
					|	(НЕ ОС.Ссылка В 
					|		(ВЫБРАТЬ
					|			СостоянияОСОрганизаций.ОсновноеСредство
					|		ИЗ
					|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
					|		ГДЕ
					|			СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
					|			И СостоянияОСОрганизаций.ДатаСостояния < &Период
					|			И СостоянияОСОрганизаций.Организация = &Организация))
					|	И (НЕ ОС.Ссылка В (ВЫБРАТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013.ОС ИЗ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013 КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013))
					|	И (НЕ ОС.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования)))
					|	И (ОС.Ссылка В
					|		(ВЫБРАТЬ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
					|		ИЗ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
					|		ГДЕ
					|			(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган = &НалоговыйОрган
					|			И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения <> ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению))))
					|ИНДЕКСИРОВАТЬ ПО
					|	ОС.Ссылка
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
					|
					|ПОМЕСТИТЬ
					|	СписокОС
					|
					|ИЗ
					|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
					|			&Период,
					|			Организация = &Организация
					|			И (ОсновноеСредство В (ВЫБРАТЬ РАЗЛИЧНЫЕ СписокРазрешенныхОС.ОсновноеСредство ИЗ СписокРазрешенныхОС КАК СписокРазрешенныхОС))
					|	) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
					|ИНДЕКСИРОВАТЬ ПО
					|	 ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство";
					
				КонецЕсли;
				
			КонецЕсли;
			
			Запрос.Выполнить();
			
			// Выборка счетов учета ОС
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета,
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации
			|
			|ПОМЕСТИТЬ
			|	СчетаУчетаОС
			|
			|ИЗ
			|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС),
			|	NULL
			|";
			Запрос.Выполнить();
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	МАКСИМУМ(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Период) КАК Период,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство КАК ОсновноеСредство
			|ПОМЕСТИТЬ ВТ_СрезПоследних
			|ИЗ
			|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|СГРУППИРОВАТЬ ПО
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
			|ИНДЕКСИРОВАТЬ ПО
			|	ОсновноеСредство,Период
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СрезПоследних.ОсновноеСредство,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Организация,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство КАК ОсновноеСредство1,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКАТО,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодВидаИмущества,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель
			|ПОМЕСТИТЬ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|ИЗ
			|	ВТ_СрезПоследних КАК СрезПоследних
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|	ПО СрезПоследних.Период = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Период
			|	И СрезПоследних.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.*
			|ПОМЕСТИТЬ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних
			|ИЗ
			|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
			|ИНДЕКСИРОВАТЬ ПО
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПервоначальнаяСтоимостьОС.СуммаОстатокДт,
			|	ПервоначальнаяСтоимостьОС.Субконто1,
			|	ПервоначальнаяСтоимостьОС.Счет
			|ПОМЕСТИТЬ ВТ_ПервоначальнаяСтоимостьОС
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (ВЫБРАТЬ РАЗЛИЧНЫЕ СчетУчета ИЗ СчетаУчетаОС ГДЕ СчетУчета ЕСТЬ НЕ NULL), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства), Организация = &Организация) КАК ПервоначальнаяСтоимостьОС
			|ИНДЕКСИРОВАТЬ ПО
			|	ПервоначальнаяСтоимостьОС.Субконто1
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СтавкиНалогаНаИмуществоСрезПоследних.*
			|ПОМЕСТИТЬ ВТ_СтавкиНалогаНаИмуществоСрезПоследних
			|ИЗ
			|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, Организация = &Организация) КАК СтавкиНалогаНаИмуществоСрезПоследних
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	АмортизацияОС.СуммаОстатокДт,
			|	АмортизацияОС.СуммаОстатокКт,
			|	АмортизацияОС.Субконто1,
			|	АмортизацияОС.Счет
			|ПОМЕСТИТЬ ВТ_АмортизацияОС
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (ВЫБРАТЬ РАЗЛИЧНЫЕ СчетНачисленияАмортизации ИЗ СчетаУчетаОС ГДЕ СчетНачисленияАмортизации ЕСТЬ НЕ NULL), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства), Организация = &Организация) КАК АмортизацияОС
			|ИНДЕКСИРОВАТЬ ПО
			|	АмортизацияОС.Субконто1
			|;
			|";
			
			Запрос.УстановитьПараметр("ДатаПодписи", ПараметрыОтчета.ДатаПодписи);
			
			Если ПрименениеЕНВД Тогда
				
				// Получение коэффициента доли выручки от деятельности, облагаемой ЕНВД.
				ПериодПолученияКоэффициентаЕНВД = ?(Период = ПараметрыОтчета.мДатаНачалаПериодаОтчета, Период, ДобавитьМесяц(Период, -1));
				КоэффициентРаспределенияЕНВД = КоэффициентРаспределенияВыручкиПоВидамДеятельности(ПараметрыОтчета.Организация, НачалоКвартала(ПериодПолученияКоэффициентаЕНВД), КонецКвартала(ПериодПолученияКоэффициентаЕНВД));
				Запрос.УстановитьПараметр("КоэффициентРаспределенияЕНВД", КоэффициентРаспределенияЕНВД);
				
				Запрос.Текст = Запрос.Текст +
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СписокОС.ОсновноеСредство,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО)
				|		  ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|		ТОГДА 
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКАТО
				|		ИНАЧЕ 
				|			ЕстьNULL(СтавкиНалогаНаИмуществоСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
				|	КОНЕЦ КАК КодПоОКАТО,
				|	ЕСТЬNULL(ВЫБОР
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка
				|			ИНАЧЕ ВЫБОР
				|			      КОГДА СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки
				|			      	ТОГДА СтавкиНалогаНаИмуществоСрезПоследних.УдалитьСниженнаяНалоговаяСтавка
				|			      ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка
				|			      КОНЕЦ
				|			КОНЕЦ, СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка) КАК НалоговаяСтавка,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки, ЛОЖЬ)
				|	КОНЕЦ КАК СнижениеНалоговойСтавки,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ОсвобождениеОтНалогообложения, ЛОЖЬ)
				|	КОНЕЦ КАК ОсвобождениеОтНалогообложения,
				|	СписокОС.ОсновноеСредство.НедвижимоеИмущество КАК ЭтоНедвижимость,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|		ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|	КОНЕЦ КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
				|	ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодВидаИмущества, ""03"") КАК КодВидаИмущества,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
				|	" + Счетчик + " КАК Период,
				|	ВЫРАЗИТЬ((ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) - ЕСТЬNULL(ВЫБОР КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса) ИЛИ СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) ТОГДА АмортизацияОС.СуммаОстатокДт ИНАЧЕ АмортизацияОС.СуммаОстатокКт КОНЕЦ, 0)) * КоэффициентыЕНВД.НеЕНВД
				|		+ (ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) - ЕСТЬNULL(ВЫБОР КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса) ИЛИ СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) ТОГДА АмортизацияОС.СуммаОстатокДт ИНАЧЕ АмортизацияОС.СуммаОстатокКт КОНЕЦ, 0)) * КоэффициентыЕНВД.Распределение * &КоэффициентРаспределенияЕНВД КАК ЧИСЛО(15, 2)) КАК ОстаточнаяСтоимость
				|ПОМЕСТИТЬ
				|	Выборка" + Формат(Счетчик, "ЧЦ=2; ЧВН=") + "
				|ИЗ
				|	СписокОС
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальнаяСтоимостьОС КАК ПервоначальнаяСтоимостьОС
				|			ПО (СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета = ПервоначальнаяСтоимостьОС.Счет ИЛИ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС) = ПервоначальнаяСтоимостьОС.Счет)
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = ПервоначальнаяСтоимостьОС.Субконто1
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияОС КАК АмортизацияОС
				|			ПО СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = АмортизацияОС.Субконто1
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации = АмортизацияОС.Счет
				|		ПО СписокОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
				|		ПО СписокОС.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство,
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних
				|			ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыЕНВД
				|			ПО СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.СпособыОтраженияРасходовПоАмортизации = КоэффициентыЕНВД.Ссылка
				|		ПО СписокОС.ОсновноеСредство = СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство,
				|	ВТ_СтавкиНалогаНаИмуществоСрезПоследних КАК СтавкиНалогаНаИмуществоСрезПоследних
				|";
				Запрос.Выполнить();
				
			Иначе
				
				Запрос.Текст = Запрос.Текст +
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СписокОС.ОсновноеСредство,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО)
				|		  ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|		ТОГДА 
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКАТО
				|		ИНАЧЕ 
				|			ЕстьNULL(СтавкиНалогаНаИмуществоСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
				|	КОНЕЦ КАК КодПоОКАТО,
				|	ЕСТЬNULL(ВЫБОР
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка
				|			ИНАЧЕ ВЫБОР
				|			      КОГДА СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки
				|			      	ТОГДА СтавкиНалогаНаИмуществоСрезПоследних.УдалитьСниженнаяНалоговаяСтавка
				|			      ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка
				|			      КОНЕЦ
				|			КОНЕЦ, СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка) КАК НалоговаяСтавка,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки, ЛОЖЬ)
				|	КОНЕЦ КАК СнижениеНалоговойСтавки,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ОсвобождениеОтНалогообложения, ЛОЖЬ)
				|	КОНЕЦ КАК ОсвобождениеОтНалогообложения,
				|	СписокОС.ОсновноеСредство.НедвижимоеИмущество КАК ЭтоНедвижимость,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|		ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|	КОНЕЦ КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
				|	ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодВидаИмущества, ""03"") КАК КодВидаИмущества,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
				|	" + Счетчик + " КАК Период,
				|	ВЫРАЗИТЬ(ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) - ЕСТЬNULL(ВЫБОР КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса) ИЛИ СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) ТОГДА АмортизацияОС.СуммаОстатокДт ИНАЧЕ АмортизацияОС.СуммаОстатокКт КОНЕЦ, 0) КАК ЧИСЛО(15, 2)) КАК ОстаточнаяСтоимость
				|ПОМЕСТИТЬ
				|	Выборка" + Формат(Счетчик, "ЧЦ=2; ЧВН=") + "
				|ИЗ
				|	СписокОС
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальнаяСтоимостьОС КАК ПервоначальнаяСтоимостьОС
				|			ПО (СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета = ПервоначальнаяСтоимостьОС.Счет ИЛИ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС) = ПервоначальнаяСтоимостьОС.Счет)
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = ПервоначальнаяСтоимостьОС.Субконто1
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияОС КАК АмортизацияОС
				|			ПО СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = АмортизацияОС.Субконто1
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации = АмортизацияОС.Счет
				|		ПО СписокОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
				|		ПО СписокОС.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство,
				|	ВТ_СтавкиНалогаНаИмуществоСрезПоследних КАК СтавкиНалогаНаИмуществоСрезПоследних
				|";
				Запрос.Выполнить();
				
			КонецЕсли;
			
			Запрос.Текст = 
			"УНИЧТОЖИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов;
			|УНИЧТОЖИТЬ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних;
			|УНИЧТОЖИТЬ ВТ_СрезПоследних;
			|УНИЧТОЖИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних;
			|УНИЧТОЖИТЬ СписокОС;
			|УНИЧТОЖИТЬ СчетаУчетаОС;
			|УНИЧТОЖИТЬ ВТ_ПервоначальнаяСтоимостьОС;
			|УНИЧТОЖИТЬ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних;
			|УНИЧТОЖИТЬ ВТ_СтавкиНалогаНаИмуществоСрезПоследних;
			|УНИЧТОЖИТЬ ВТ_АмортизацияОС;
			|УНИЧТОЖИТЬ СписокРазрешенныхОС";
			Запрос.Выполнить();
			
			ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
									  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
										  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
			                              |",
										  "ОБЪЕДИНИТЬ ВСЕ
										  |ВЫБРАТЬ *
			                              |")
									  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
										  "ПОМЕСТИТЬ НалоговаяБазаПоНалогуНаИмущество
										  |",
										  "")
									  + "ИЗ Выборка" + Формат(Счетчик, "ЧЦ=2; ЧВН=") + "
			                            |ГДЕ
			                            |	ОстаточнаяСтоимость > 0
										|";
			
		КонецЕсли;
		
		Счетчик = Счетчик + 1;
		Период  = ДобавитьМесяц(Период, 1);
	КонецЦикла;
	
	Если ПустаяСтрока(ТекстОбъединяющегоЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.Текст = ТекстОбъединяющегоЗапроса;
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКАТО КАК КодПоОКАТО,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.СнижениеНалоговойСтавки КАК СнижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.Период КАК Период,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимость) КАК ОстаточнаяСтоимость,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьЛьготируемогоИмущества) КАК ОстаточнаяСтоимостьЛьготируемогоИмущества,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНедвижимости) КАК ОстаточнаяСтоимостьНедвижимости,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНедвижимостиЛьготируемогоИмущества) КАК ОстаточнаяСтоимостьНедвижимостиЛьготируемогоИмущества
	|ИЗ
	|(ВЫБРАТЬ
	|	ЕСТЬNULL(КодВидаИмущества, ""03"") КАК КодВидаИмущества,
	|	ЕСТЬNULL(ДоляСтоимостиЧислитель, 0) КАК ДоляСтоимостиЧислитель,
	|	ЕСТЬNULL(ДоляСтоимостиЗнаменатель, 0) КАК ДоляСтоимостиЗнаменатель,
	|	КодПоОКАТО,
	|	ЕСТЬNULL(НалоговаяСтавка, 0) КАК НалоговаяСтавка,
	|	СнижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	Период,
	|	ОстаточнаяСтоимость КАК ОстаточнаяСтоимость,
	|	ВЫБОР КОГДА ОсвобождениеОтНалогообложения = ИСТИНА ТОГДА ОстаточнаяСтоимость ИНАЧЕ 0 КОНЕЦ КАК ОстаточнаяСтоимостьЛьготируемогоИмущества,
	|	ВЫБОР КОГДА ЭтоНедвижимость = ИСТИНА ТОГДА ОстаточнаяСтоимость ИНАЧЕ 0 КОНЕЦ КАК ОстаточнаяСтоимостьНедвижимости,
	|	ВЫБОР КОГДА ЭтоНедвижимость = ИСТИНА И ОсвобождениеОтНалогообложения = ИСТИНА ТОГДА ОстаточнаяСтоимость ИНАЧЕ 0 КОНЕЦ КАК ОстаточнаяСтоимостьНедвижимостиЛьготируемогоИмущества
    |ИЗ
	|	НалоговаяБазаПоНалогуНаИмущество ) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	КодВидаИмущества,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКАТО,
	|	НалоговаяСтавка,
	|	СнижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	Период
	|ИТОГИ
	|	СУММА(ОстаточнаяСтоимость),
	|	СУММА(ОстаточнаяСтоимостьЛьготируемогоИмущества),
	|	СУММА(ОстаточнаяСтоимостьНедвижимости),
	|	СУММА(ОстаточнаяСтоимостьНедвижимостиЛьготируемогоИмущества)
	|ПО
	|	КодВидаИмущества,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКАТО,
	|	НалоговаяСтавка,
	|	СнижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения
	|";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	Для Каждого Показатель Из СтраницаРаздел2 Цикл
		СтраницаРаздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Группировка() = "КодНалоговойЛьготыОсвобождениеОтНалогообложения" Тогда
			
			Если Не ПерваяСтраница Тогда
				// Создаем дополнительную страницу в декларации
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из СтраницаРаздел2 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				Раздел2[Раздел2.Количество()-1].Данные.Добавить(СтруктураНовойТаблицы); 
				СтраницаРаздел2 =  Раздел2[Раздел2.Количество()-1].Данные[0].Значение;
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			
			СтраницаРаздел2.П000020000100 = ?(Лев(Выборка.КодВидаИмущества, 1) = "0", Прав(Выборка.КодВидаИмущества, 1), Выборка.КодВидаИмущества);
			СтраницаРаздел2.П000020001000 = Выборка.КодПоОКАТО;
			СтраницаРаздел2.П000020016003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел2.П000020020003_КодЛьготы = ?(Выборка.СнижениеНалоговойСтавки, "2012400", "");
			СтраницаРаздел2.П000020021003 = Выборка.НалоговаяСтавка;
			
			Если Выборка.КодВидаИмущества = "02" Тогда
				ДоляСтоимостиЧислитель =   ?(Выборка.ДоляСтоимостиЧислитель = 0, 1, Выборка.ДоляСтоимостиЧислитель);
				ДоляСтоимостиЗнаменатель = ?(Выборка.ДоляСтоимостиЗнаменатель = 0, 1, Выборка.ДоляСтоимостиЗнаменатель);
				
				СтраницаРаздел2.П000020018003_Числ = ДоляСтоимостиЧислитель;
				СтраницаРаздел2.П000020018003_Знам = ДоляСтоимостиЗнаменатель;
			КонецЕсли;
			
		ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
		
			Если Выборка.Период = 1 Тогда
				
				СтраницаРаздел2.П000020002003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020002004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 2 Тогда

				СтраницаРаздел2.П000020003003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020003004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 3 Тогда

				СтраницаРаздел2.П000020004003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020004004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 4 Тогда

				СтраницаРаздел2.П000020005003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020005004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;
			
			ИначеЕсли Выборка.Период = 5 Тогда
		
				СтраницаРаздел2.П000020006003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020006004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 6 Тогда
				
				СтраницаРаздел2.П000020007003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020007004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 7 Тогда
				
				СтраницаРаздел2.П000020008003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020008004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 8 Тогда
		
				СтраницаРаздел2.П000020009003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020009004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 9 Тогда

				СтраницаРаздел2.П000020010003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020010004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 10 Тогда
				
				СтраницаРаздел2.П000020011003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020011004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 11 Тогда
				
				СтраницаРаздел2.П000020012003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020012004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 12 Тогда
				
				СтраницаРаздел2.П000020013003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020013004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 13 Тогда
				
				СтраницаРаздел2.П000020014003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020014004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;
				СтраницаРаздел2.П000020014103 = Выборка.ОстаточнаяСтоимостьНедвижимости;
				СтраницаРаздел2.П000020014104 = Выборка.ОстаточнаяСтоимостьНедвижимостиЛьготируемогоИмущества;

			КонецЕсли;
			
			
			Если НЕ ЗначениеЗаполнено(РегистрацияВНалоговомОргане) 
			 ИЛИ (КодНалоговогоОргана = ПараметрыОтчета.Организация.КодНалоговогоОргана) Тогда
			
				СуммаНалога = СтраницаРаздел2.П000020022003;
								
				СуммаЛьготы = СуммаНалога * (ПроцентУменьшенияСуммыНалога / 100);
							  
				СтраницаРаздел2.П000020024003_КодЛьготы = ?(СуммаЛьготы = 0, "", "2012500");
				СтраницаРаздел2.П000020025003 = Мин(СуммаНалога, СуммаЛьготы);
				
			КонецЕсли;

		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаИмуществоФормаОтчета2013Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003_1", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010003003_1", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010004003_1", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000101", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020016003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014104", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020027003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020025003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001401", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001501", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030002503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030004003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030007003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030009003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030009003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030012003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030013003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030011003", Истина, Истина);

КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетИмуществоФормаОтчета2013Кв4(ПараметрыОтчета, Контейнер) Экспорт

	Перем ТаблицаРасшифровки; // Таблица для сбора сведений о расшифровке
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	// Сведения о налоговых льготах в виде уменьшения суммы налога.
	ПроцентУменьшенияСуммыНалога = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПроцентУменьшения, 0) КАК ПроцентУменьшения,
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2, ЛОЖЬ) КАК ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, ) КАК СтавкиНалогаНаИмуществоСрезПоследних
	|ГДЕ
	|	СтавкиНалогаНаИмуществоСрезПоследних.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтавкиНалогаПоОССрезПоследних.ОсновноеСредство
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазапоНалогуНаИмущество.КадастроваяСтоимость)) КАК СтавкиНалогаПоОССрезПоследних
	|ГДЕ
	|	СтавкиНалогаПоОССрезПоследних.Организация = &Организация";

	Результат = Запрос.ВыполнитьПакет();
	
	Если НЕ Результат[0].Пустой() Тогда
		ДопПараметрыОтчета = Результат[0].Выгрузить()[0];
		ПроцентУменьшенияСуммыНалога = ДопПараметрыОтчета.ПроцентУменьшения;
		ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2 = ДопПараметрыОтчета.ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2;
	ИначеЕсли Результат[1].Пустой() Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не обнаружена ставка налога на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,Организация, ПутьКРегистру));
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел2 Цикл
		СтраницаРаздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("Организация", 			ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",	НачалоДня(мДатаКонцаПериодаОтчета));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетНалогаНаИмущество.КодВидаИмущества КАК КодВидаИмущества,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ИФНС,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0101 КАК ОстаточнаяСтоимостьНа0101,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0102 КАК ОстаточнаяСтоимостьНа0102,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0103 КАК ОстаточнаяСтоимостьНа0103,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0104 КАК ОстаточнаяСтоимостьНа0104,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0105 КАК ОстаточнаяСтоимостьНа0105,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0106 КАК ОстаточнаяСтоимостьНа0106,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0107 КАК ОстаточнаяСтоимостьНа0107,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0108 КАК ОстаточнаяСтоимостьНа0108,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0109 КАК ОстаточнаяСтоимостьНа0109,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0110 КАК ОстаточнаяСтоимостьНа0110,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0111 КАК ОстаточнаяСтоимостьНа0111,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0112 КАК ОстаточнаяСтоимостьНа0112,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа3112 КАК ОстаточнаяСтоимостьНа3112,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНедвижимости КАК ОстаточнаяСтоимостьНедвижимости,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьОсновныхСредств КАК ОстаточнаяСтоимостьОсновныхСредств,
	|	РасчетНалогаНаИмущество.КадастровыйНомер,
	|	РасчетНалогаНаИмущество.КадастровыйНомерПомещения,
	|	РасчетНалогаНаИмущество.КадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.НеоблагаемаяКадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.СуммаАвансовыхПлатежей,
	|	РасчетНалогаНаИмущество.СуммаУменьшенияСуммыНалога,
	|	РасчетНалогаНаИмущество.КоличествоМесяцевВладения,
	|	РасчетНалогаНаИмущество.ОсновноеСредство
	|ИЗ
	|	РегистрСведений.РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|ГДЕ
	|	РасчетНалогаНаИмущество.Организация = &Организация
	|	И РасчетНалогаНаИмущество.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоНалогуНаИмущество = Новый ТаблицаЗначений;
	РегламентныеОперацииВыполнены = Ложь;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовПоНалогуНаИмущество = Выборка.Выгрузить();
		РегламентныеОперацииВыполнены = Истина;
	Иначе
		ТаблицаРасчетовПоНалогуНаИмущество = РасчетИмущественныхНалогов.ПолучитьРасчетПоНалогуНаИмущество(Организация, мДатаКонцаПериодаОтчета);
	КонецЕсли;
	
	Отбор = Новый Структура("ИФНС, ВидНалоговойБазы, КоличествоМесяцевВладения",
		?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()),
		Перечисления.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость,
		0);
		
	НайденныеСтроки = ТаблицаРасчетовПоНалогуНаИмущество.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество();
		
		Для Каждого СтрокаТаблицы Из НайденныеСтроки Цикл
		
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			    НСтр("ru = 'Не заполнена дата регистрации права собственности для объекта %1
				|%2'"),	СтрокаТаблицы.ОсновноеСредство, ПутьКРегистру));
				
		КонецЦикла;
			
		ПоместитьВоВременноеХранилище(Контейнер, ПараметрыОтчета.АдресВоВременномХранилище);
		ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.АдресВременногоХранилищаРасшифровки);
		
		Возврат;
	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовПоНалогуНаИмущество", ТаблицаРасчетовПоНалогуНаИмущество);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	ПОМЕСТИТЬ ВТ_ТаблицаРасчетовПоНалогуНаИмущество
	|	ИЗ &ТаблицаРасчетовПоНалогуНаИмущество КАК ТаблицаРасчетовПоНалогуНаИмущество";
	Запрос.Выполнить();
	
	НалоговыйОрган = ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	Запрос.УстановитьПараметр("НалоговыйОрган", НалоговыйОрган);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения) КАК КоличествоРазличныхЛьгот,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения = """"
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьОблагаемоеИмущество
	|ПОМЕСТИТЬ Льготы
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.КодВидаИмущества,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КодВидаИмущества
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0101) КАК ОстаточнаяСтоимостьНа0101,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0102) КАК ОстаточнаяСтоимостьНа0102,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0103) КАК ОстаточнаяСтоимостьНа0103,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0104) КАК ОстаточнаяСтоимостьНа0104,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0105) КАК ОстаточнаяСтоимостьНа0105,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0106) КАК ОстаточнаяСтоимостьНа0106,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0107) КАК ОстаточнаяСтоимостьНа0107,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0108) КАК ОстаточнаяСтоимостьНа0108,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0109) КАК ОстаточнаяСтоимостьНа0109,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0110) КАК ОстаточнаяСтоимостьНа0110,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0111) КАК ОстаточнаяСтоимостьНа0111,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0112) КАК ОстаточнаяСтоимостьНа0112,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа3112) КАК ОстаточнаяСтоимостьНа3112,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНедвижимости) КАК ОстаточнаяСтоимостьНедвижимости,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьОсновныхСредств) КАК ОстаточнаяСтоимостьОсновныхСредств,
	|	СУММА(ВложенныйЗапрос.СуммаАвансовыхПлатежей) КАК СуммаАвансовыхПлатежей,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения <> """"
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЛьготируемаяСтоимость,
	|	ВложенныйЗапрос.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	СУММА(ВложенныйЗапрос.СуммаУменьшенияСуммыНалога) КАК СуммаУменьшенияСуммыНалога,
	|	Льготы.КоличествоРазличныхЛьгот КАК КоличествоРазличныхЛьгот,
	|	Льготы.ЕстьОблагаемоеИмущество КАК ЕстьОблагаемоеИмущество
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Льготы КАК Льготы
	|		ПО ВложенныйЗапрос.КодВидаИмущества = Льготы.КодВидаИмущества
	|			И ВложенныйЗапрос.ДоляСтоимостиЧислитель = Льготы.ДоляСтоимостиЧислитель
	|			И ВложенныйЗапрос.ДоляСтоимостиЗнаменатель = Льготы.ДоляСтоимостиЗнаменатель
	|			И ВложенныйЗапрос.КодПоОКТМО = Льготы.КодПоОКТМО
	|			И ВложенныйЗапрос.НалоговаяСтавка = Льготы.НалоговаяСтавка
	|			И ВложенныйЗапрос.ПонижениеНалоговойСтавки = Льготы.ПонижениеНалоговойСтавки
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.КодВидаИмущества,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.ВидНалоговойБазы,
	|	Льготы.КоличествоРазличныхЛьгот,
	|	Льготы.ЕстьОблагаемоеИмущество
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодВидаИмущества,
	|	КодПоОКТМО,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения
	|ИТОГИ
	|	СУММА(ОстаточнаяСтоимостьНа0101),
	|	СУММА(ОстаточнаяСтоимостьНа0102),
	|	СУММА(ОстаточнаяСтоимостьНа0103),
	|	СУММА(ОстаточнаяСтоимостьНа0104),
	|	СУММА(ОстаточнаяСтоимостьНа0105),
	|	СУММА(ОстаточнаяСтоимостьНа0106),
	|	СУММА(ОстаточнаяСтоимостьНа0107),
	|	СУММА(ОстаточнаяСтоимостьНа0108),
	|	СУММА(ОстаточнаяСтоимостьНа0109),
	|	СУММА(ОстаточнаяСтоимостьНа0110),
	|	СУММА(ОстаточнаяСтоимостьНа0111),
	|	СУММА(ОстаточнаяСтоимостьНа0112),
	|	СУММА(ОстаточнаяСтоимостьНа3112),
	|	СУММА(ОстаточнаяСтоимостьНедвижимости),
	|	СУММА(ОстаточнаяСтоимостьОсновныхСредств),
	|	СУММА(СуммаАвансовыхПлатежей),
	|	МАКСИМУМ(ЛьготируемаяСтоимость),
	|	СУММА(СуммаУменьшенияСуммыНалога),
	|	МАКСИМУМ(КоличествоРазличныхЛьгот),
	|	МАКСИМУМ(ЕстьОблагаемоеИмущество)
	|ПО
	|	ОБЩИЕ,
	|	КодВидаИмущества,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКТМО,
	|	НалоговаяСтавка,
	|	ПонижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВидНалоговойБазы";
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	ПерваяСтраница = Истина;
	ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Истина;
	
	КодВидаИмущества = "";
	КодПоОКТМО = "";
	КодНалоговойЛьготыОсвобождениеОтНалогообложения = "";
	ПонижениеНалоговойСтавки = Ложь;
	НалоговаяСтавка = 0;
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0101)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0102)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0103)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0104)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0105)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0106)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0107)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0108)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0109)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0110)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0111)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0112)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа3112) Тогда
			
			Продолжить;
		КонецЕсли;
		
		Если Выборка.Группировка() = "ОБЩИЕ" Тогда
			
			ОстаточнаяСтоимостьОсновныхСредств = Выборка.ОстаточнаяСтоимостьОсновныхСредств;
		
		ИначеЕсли Выборка.Группировка() = "КодНалоговойЛьготыОсвобождениеОтНалогообложения" Тогда
			
			Если Не ПерваяСтраница Тогда
				
				Если ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2
				   И КодВидаИмущества = Выборка.КодВидаИмущества 
				   И КодПоОКТМО = Выборка.КодПоОКТМО 
				   И ПонижениеНалоговойСтавки = Выборка.ПонижениеНалоговойСтавки
				   И НалоговаяСтавка = Выборка.НалоговаяСтавка 
				   И Выборка.КоличествоРазличныхЛьгот = 2 
				   И Выборка.ЕстьОблагаемоеИмущество Тогда
				
					ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Ложь;
				
				Иначе
					
					ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Истина;
					
					// Создаем дополнительную страницу в декларации
					СтруктураНовойТаблицы = Новый Структура();
					Для Каждого Показатель Из СтраницаРаздел2 Цикл
						СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЦикла;
					
					Раздел2.Добавить().Данные = СтруктураНовойТаблицы;
					СтраницаРаздел2 = Раздел2[Раздел2.Количество()-1].Данные;
					
				КонецЕсли;
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			
			СтраницаРаздел2.П000020000101 = ?(Лев(Выборка.КодВидаИмущества, 1) = "0", Прав(Выборка.КодВидаИмущества, 1), Выборка.КодВидаИмущества);
			СтраницаРаздел2.П000020001001 = Выборка.КодПоОКТМО;
			СтраницаРаздел2.П000020016003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел2.П000020020003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
			СтраницаРаздел2.П000020021003 = Выборка.НалоговаяСтавка;
			
			Если Выборка.КодВидаИмущества = "02" Тогда
				ДоляСтоимостиЧислитель =   ?(Выборка.ДоляСтоимостиЧислитель = 0, 1, Выборка.ДоляСтоимостиЧислитель);
				ДоляСтоимостиЗнаменатель = ?(Выборка.ДоляСтоимостиЗнаменатель = 0, 1, Выборка.ДоляСтоимостиЗнаменатель);
				
				СтраницаРаздел2.П000020018003_Числ = ДоляСтоимостиЧислитель;
				СтраницаРаздел2.П000020018003_Знам = ДоляСтоимостиЗнаменатель;
			КонецЕсли;
			
			КодВидаИмущества           = Выборка.КодВидаИмущества; 
			КодПоОКТМО           = Выборка.КодПоОКТМО;
			КодНалоговойЛьготыОсвобождениеОтНалогообложения = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			ПонижениеНалоговойСтавки = Выборка.ПонижениеНалоговойСтавки;
			НалоговаяСтавка           = Выборка.НалоговаяСтавка;
			
		ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			
			ДополнительныеПараметры = Новый Структура;
			
			ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
			Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
			Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
			
			ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
			
			ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
			
			ПолеКомпоновкиДанных_КодВидаИмущества = Новый ПолеКомпоновкиДанных("КодВидаИмущества");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодВидаИмущества , ВидСравненияКомпоновкиДанных.Равно, Выборка.КодВидаИмущества);
			
			Если ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы Тогда
				ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
				ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
			КонецЕсли;
			
			ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
			
			ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
			
			ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
			ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);
					
			СтраницаРаздел2.П000020002003 = Число(СтраницаРаздел2.П000020002003) + Выборка.ОстаточнаяСтоимостьНа0101;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020002003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020002004 = Число(СтраницаРаздел2.П000020002004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0101, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020002004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003003 = Число(СтраницаРаздел2.П000020003003) + Выборка.ОстаточнаяСтоимостьНа0102;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020003003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003004 = Число(СтраницаРаздел2.П000020003004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0102, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020003004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004003 = Число(СтраницаРаздел2.П000020004003) + Выборка.ОстаточнаяСтоимостьНа0103;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020004003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004004 = Число(СтраницаРаздел2.П000020004004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0103, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020004004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005003 = Число(СтраницаРаздел2.П000020005003) + Выборка.ОстаточнаяСтоимостьНа0104;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020005003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005004 = Число(СтраницаРаздел2.П000020005004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0104, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020005004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006003 = Число(СтраницаРаздел2.П000020006003) + Выборка.ОстаточнаяСтоимостьНа0105;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020006003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006004 = Число(СтраницаРаздел2.П000020006004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0105, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020006004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007003 = Число(СтраницаРаздел2.П000020007003) + Выборка.ОстаточнаяСтоимостьНа0106;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020007003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007004 = Число(СтраницаРаздел2.П000020007004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0106, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020007004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008003 = Число(СтраницаРаздел2.П000020008003) + Выборка.ОстаточнаяСтоимостьНа0107;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020008003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008004 = Число(СтраницаРаздел2.П000020008004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0107, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020008004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009003 = Число(СтраницаРаздел2.П000020009003) + Выборка.ОстаточнаяСтоимостьНа0108;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020009003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009004 = Число(СтраницаРаздел2.П000020009004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0108, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020009004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010003 = Число(СтраницаРаздел2.П000020010003) + Выборка.ОстаточнаяСтоимостьНа0109;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020010003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010004 = Число(СтраницаРаздел2.П000020010004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0109, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020010004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011003 = Число(СтраницаРаздел2.П000020011003) + Выборка.ОстаточнаяСтоимостьНа0110;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020011003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011004 = Число(СтраницаРаздел2.П000020011004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0110, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020011004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020012003 = Число(СтраницаРаздел2.П000020012003) + Выборка.ОстаточнаяСтоимостьНа0111;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020012003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020012003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020012004 = Число(СтраницаРаздел2.П000020012004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0111, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020012004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020012004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020013003 = Число(СтраницаРаздел2.П000020013003) + Выборка.ОстаточнаяСтоимостьНа0112;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020013003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020013003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020013004 = Число(СтраницаРаздел2.П000020013004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0112, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020013004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020013004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014003 = Число(СтраницаРаздел2.П000020014003) + Выборка.ОстаточнаяСтоимостьНа3112;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020014003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014004 = Число(СтраницаРаздел2.П000020014004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа3112, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020014004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014103 = Число(СтраницаРаздел2.П000020014103) + Выборка.ОстаточнаяСтоимостьНедвижимости;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014103_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020014103, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014104 = Число(СтраницаРаздел2.П000020014104) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНедвижимости, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014104_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020014104, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020023003 = Число(СтраницаРаздел2.П000020023003) + Выборка.СуммаАвансовыхПлатежей;
						
			СтраницаРаздел2.П000020027003 = ОстаточнаяСтоимостьОсновныхСредств;
						
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014103_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020014103, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014104_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020014104, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020015003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020015003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020017003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020017003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020019003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020019003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020022003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020022003, "", ДополнительныеПараметры);
									
			Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда
			
				СтраницаРаздел2.П000020024003_КодЛьготы = "2012500";
				СтраницаРаздел2.П000020025003 = Число(СтраницаРаздел2.П000020025003) + Выборка.СуммаУменьшенияСуммыНалога;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020025003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020025003, "", ДополнительныеПараметры);
				
			КонецЕсли;

		КонецЕсли;
		
	КонецЦикла;
	
	// Заполнение раздела 3
		
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.КадастровыйНомер КАК КадастровыйНомерЗдания,
	|	ВложенныйЗапрос.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	ВложенныйЗапрос.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	ВложенныйЗапрос.НеоблагаемаяКадастроваяСтоимость КАК НеоблагаемаяКадастроваяСтоимость,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей КАК СуммаАвансовыхПлатежей,
	|	ВложенныйЗапрос.СуммаУменьшенияСуммыНалога КАК СуммаУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)";
	
	Раздел3 = Контейнер.Раздел3;
	СтраницаРаздел3 =  Раздел3[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел3 Цикл
		СтраницаРаздел3[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел3.Количество()>1 Цикл
		Раздел3.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
			Если Не ПерваяСтраница Тогда
				// Создаем дополнительную страницу в декларации
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из СтраницаРаздел3 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				Раздел3.Добавить().Данные = СтруктураНовойТаблицы;
				СтраницаРаздел3 = Раздел3[Раздел3.Количество()-1].Данные;
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			
			ДополнительныеПараметры = Новый Структура;
			
			ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
			Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
			Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
			
			ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
			
			ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
			
			ПолеКомпоновкиДанных_КадастровыйНомер = Новый ПолеКомпоновкиДанных("КадастровыйНомер");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомер , ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерЗдания);
			
			ПолеКомпоновкиДанных_КадастровыйНомерПомещения = Новый ПолеКомпоновкиДанных("КадастровыйНомерПомещения");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомерПомещения, ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерПомещения);
			
			ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
			
			ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
			
			ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
			
			ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
			ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);

			
			СтраницаРаздел3.П000030001001 = Выборка.КодПоОКТМО;
			СтраницаРаздел3.П000030001401 = Выборка.КадастровыйНомерЗдания;
			СтраницаРаздел3.П000030001501 = Выборка.КадастровыйНомерПомещения;
			СтраницаРаздел3.П000030002003 = Выборка.КадастроваяСтоимость;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030002003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030002003, "", ДополнительныеПараметры);
			СтраницаРаздел3.П000030002503 = Выборка.НеоблагаемаяКадастроваяСтоимость;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030002503_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030002503, "", ДополнительныеПараметры);
			
			СтраницаРаздел3.П000030011003 = Выборка.СуммаАвансовыхПлатежей;
									
			СтраницаРаздел3.П000030004003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел3.П000030007003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
			
			СтраницаРаздел3.П000030005003_Числ = Выборка.ДоляСтоимостиЧислитель;
			СтраницаРаздел3.П000030005003_Знам = Выборка.ДоляСтоимостиЗнаменатель;
			
			СтраницаРаздел3.П000030008003 = Выборка.НалоговаяСтавка;
			
			Если Выборка.КоличествоМесяцевВладения > 0 И Выборка.КоличествоМесяцевВладения < 12 Тогда
				СтраницаРаздел3.П000030009003_Числ = Выборка.КоличествоМесяцевВладения;
				СтраницаРаздел3.П000030009003_Знам = 12;
			КонецЕсли;
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030010003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030010003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030006003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030006003, "", ДополнительныеПараметры);
			
			Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда
				
				СтраницаРаздел3.П000030012003_КодЛьготы = "2012500";
				СтраницаРаздел3.П000030013003 = Выборка.СуммаУменьшенияСуммыНалога;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030013003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030013003, "", ДополнительныеПараметры);
				
			КонецЕсли;
			
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(Контейнер, ПараметрыОтчета.АдресВоВременномХранилище);
	ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.АдресВременногоХранилищаРасшифровки);
	
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаИмуществоФормаОтчета2017Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003_1", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010003003_1", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010004003_1", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000101", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001100", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020016003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014104", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020027003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020025003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001000", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001100", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210002001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210005003", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030000101", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001100", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001401", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001501", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030002503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003503_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003503_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030004003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030007003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030009003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030009003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030012003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030013003", Истина, Истина);

КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетИмуществоФормаОтчета2017Кв4(ПараметрыОтчета, Контейнер) Экспорт

	Перем ТаблицаРасшифровки; // Таблица для сбора сведений о расшифровке
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	// Сведения о налоговых льготах в виде уменьшения суммы налога.
	ПроцентУменьшенияСуммыНалога = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПроцентУменьшения, 0) КАК ПроцентУменьшения,
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2, ЛОЖЬ) КАК ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, ) КАК СтавкиНалогаНаИмуществоСрезПоследних
	|ГДЕ
	|	СтавкиНалогаНаИмуществоСрезПоследних.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтавкиНалогаПоОССрезПоследних.ОсновноеСредство
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазапоНалогуНаИмущество.КадастроваяСтоимость)) КАК СтавкиНалогаПоОССрезПоследних
	|ГДЕ
	|	СтавкиНалогаПоОССрезПоследних.Организация = &Организация";

	Результат = Запрос.ВыполнитьПакет();
	
	Если НЕ Результат[0].Пустой() Тогда
		ДопПараметрыОтчета = Результат[0].Выгрузить()[0];
		ПроцентУменьшенияСуммыНалога = ДопПараметрыОтчета.ПроцентУменьшения;
		ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2 = ДопПараметрыОтчета.ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2;
	ИначеЕсли Результат[1].Пустой() Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не обнаружена ставка налога на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,Организация, ПутьКРегистру));
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 = Раздел2.Строки[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел2 Цикл
		СтраницаРаздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел2.Строки.Количество()>1 Цикл
		Раздел2.Строки.Удалить(1);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("Организация", 			ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",	НачалоДня(мДатаКонцаПериодаОтчета));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетНалогаНаИмущество.КодВидаИмущества КАК КодВидаИмущества,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ИФНС,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0101 КАК ОстаточнаяСтоимостьНа0101,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0102 КАК ОстаточнаяСтоимостьНа0102,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0103 КАК ОстаточнаяСтоимостьНа0103,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0104 КАК ОстаточнаяСтоимостьНа0104,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0105 КАК ОстаточнаяСтоимостьНа0105,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0106 КАК ОстаточнаяСтоимостьНа0106,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0107 КАК ОстаточнаяСтоимостьНа0107,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0108 КАК ОстаточнаяСтоимостьНа0108,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0109 КАК ОстаточнаяСтоимостьНа0109,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0110 КАК ОстаточнаяСтоимостьНа0110,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0111 КАК ОстаточнаяСтоимостьНа0111,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0112 КАК ОстаточнаяСтоимостьНа0112,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа3112 КАК ОстаточнаяСтоимостьНа3112,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНедвижимости КАК ОстаточнаяСтоимостьНедвижимости,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьОсновныхСредств КАК ОстаточнаяСтоимостьОсновныхСредств,
	|	РасчетНалогаНаИмущество.КадастровыйНомер,
	|	РасчетНалогаНаИмущество.КадастровыйНомерПомещения,
	|	РасчетНалогаНаИмущество.КадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.НеоблагаемаяКадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.СуммаАвансовыхПлатежей,
	|	РасчетНалогаНаИмущество.СуммаУменьшенияСуммыНалога,
	|	РасчетНалогаНаИмущество.КоличествоМесяцевВладения,
	|	РасчетНалогаНаИмущество.ОсновноеСредство,
	|	РасчетНалогаНаИмущество.КБК,
	|	РасчетНалогаНаИмущество.ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетНалогаНаИмущество.УсловныйНомер,
	|	РасчетНалогаНаИмущество.ДоляПлощадиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляПлощадиЗнаменатель
	|ИЗ
	|	РегистрСведений.РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|ГДЕ
	|	РасчетНалогаНаИмущество.Организация = &Организация
	|	И РасчетНалогаНаИмущество.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоНалогуНаИмущество = Новый ТаблицаЗначений;
	РегламентныеОперацииВыполнены = Ложь;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовПоНалогуНаИмущество = Выборка.Выгрузить();
		РегламентныеОперацииВыполнены = Истина;
	Иначе
		ТаблицаРасчетовПоНалогуНаИмущество = РасчетИмущественныхНалогов.ПолучитьРасчетПоНалогуНаИмущество(Организация, мДатаКонцаПериодаОтчета);
	КонецЕсли;
	
	Отбор = Новый Структура("ИФНС, ВидНалоговойБазы, КоличествоМесяцевВладения",
		?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()),
		Перечисления.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость,
		0);
		
	НайденныеСтроки = ТаблицаРасчетовПоНалогуНаИмущество.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество();
		
		Для Каждого СтрокаТаблицы Из НайденныеСтроки Цикл
		
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			    НСтр("ru = 'Не заполнена дата регистрации права собственности для объекта %1
				|%2'"),	СтрокаТаблицы.ОсновноеСредство, ПутьКРегистру));
				
		КонецЦикла;
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;
	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовПоНалогуНаИмущество", ТаблицаРасчетовПоНалогуНаИмущество);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	ПОМЕСТИТЬ ВТ_ТаблицаРасчетовПоНалогуНаИмущество
	|	ИЗ &ТаблицаРасчетовПоНалогуНаИмущество КАК ТаблицаРасчетовПоНалогуНаИмущество";
	Запрос.Выполнить();
	
	НалоговыйОрган = ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	Запрос.УстановитьПараметр("НалоговыйОрган", НалоговыйОрган);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.КБК КАК КБК,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения) КАК КоличествоРазличныхЛьгот,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения = """"
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьОблагаемоеИмущество
	|ПОМЕСТИТЬ Льготы
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.КодВидаИмущества,
	|	ВложенныйЗапрос.КБК,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КодВидаИмущества
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.КБК КАК КБК,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0101) КАК ОстаточнаяСтоимостьНа0101,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0102) КАК ОстаточнаяСтоимостьНа0102,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0103) КАК ОстаточнаяСтоимостьНа0103,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0104) КАК ОстаточнаяСтоимостьНа0104,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0105) КАК ОстаточнаяСтоимостьНа0105,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0106) КАК ОстаточнаяСтоимостьНа0106,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0107) КАК ОстаточнаяСтоимостьНа0107,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0108) КАК ОстаточнаяСтоимостьНа0108,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0109) КАК ОстаточнаяСтоимостьНа0109,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0110) КАК ОстаточнаяСтоимостьНа0110,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0111) КАК ОстаточнаяСтоимостьНа0111,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0112) КАК ОстаточнаяСтоимостьНа0112,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа3112) КАК ОстаточнаяСтоимостьНа3112,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНедвижимости) КАК ОстаточнаяСтоимостьНедвижимости,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьОсновныхСредств) КАК ОстаточнаяСтоимостьОсновныхСредств,
	|	СУММА(ВложенныйЗапрос.СуммаАвансовыхПлатежей) КАК СуммаАвансовыхПлатежей,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения <> """"
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЛьготируемаяСтоимость,
	|	ВложенныйЗапрос.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	СУММА(ВложенныйЗапрос.СуммаУменьшенияСуммыНалога) КАК СуммаУменьшенияСуммыНалога,
	|	Льготы.КоличествоРазличныхЛьгот КАК КоличествоРазличныхЛьгот,
	|	Льготы.ЕстьОблагаемоеИмущество КАК ЕстьОблагаемоеИмущество
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Льготы КАК Льготы
	|		ПО ВложенныйЗапрос.КодВидаИмущества = Льготы.КодВидаИмущества
	|			И ВложенныйЗапрос.КБК = Льготы.КБК
	|			И ВложенныйЗапрос.ДоляСтоимостиЧислитель = Льготы.ДоляСтоимостиЧислитель
	|			И ВложенныйЗапрос.ДоляСтоимостиЗнаменатель = Льготы.ДоляСтоимостиЗнаменатель
	|			И ВложенныйЗапрос.КодПоОКТМО = Льготы.КодПоОКТМО
	|			И ВложенныйЗапрос.НалоговаяСтавка = Льготы.НалоговаяСтавка
	|			И ВложенныйЗапрос.ПонижениеНалоговойСтавки = Льготы.ПонижениеНалоговойСтавки
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.КодВидаИмущества,
	|	ВложенныйЗапрос.КБК,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.ВидНалоговойБазы,
	|	Льготы.КоличествоРазличныхЛьгот,
	|	Льготы.ЕстьОблагаемоеИмущество
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодВидаИмущества,
	|	КодПоОКТМО,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения
	|ИТОГИ
	|	СУММА(ОстаточнаяСтоимостьНа0101),
	|	СУММА(ОстаточнаяСтоимостьНа0102),
	|	СУММА(ОстаточнаяСтоимостьНа0103),
	|	СУММА(ОстаточнаяСтоимостьНа0104),
	|	СУММА(ОстаточнаяСтоимостьНа0105),
	|	СУММА(ОстаточнаяСтоимостьНа0106),
	|	СУММА(ОстаточнаяСтоимостьНа0107),
	|	СУММА(ОстаточнаяСтоимостьНа0108),
	|	СУММА(ОстаточнаяСтоимостьНа0109),
	|	СУММА(ОстаточнаяСтоимостьНа0110),
	|	СУММА(ОстаточнаяСтоимостьНа0111),
	|	СУММА(ОстаточнаяСтоимостьНа0112),
	|	СУММА(ОстаточнаяСтоимостьНа3112),
	|	СУММА(ОстаточнаяСтоимостьНедвижимости),
	|	СУММА(ОстаточнаяСтоимостьОсновныхСредств),
	|	СУММА(СуммаАвансовыхПлатежей),
	|	МАКСИМУМ(ЛьготируемаяСтоимость),
	|	СУММА(СуммаУменьшенияСуммыНалога),
	|	МАКСИМУМ(КоличествоРазличныхЛьгот),
	|	МАКСИМУМ(ЕстьОблагаемоеИмущество)
	|ПО
	|	ОБЩИЕ,
	|	КодВидаИмущества,
	|	КБК,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКТМО,
	|	НалоговаяСтавка,
	|	ПонижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВидНалоговойБазы";
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	ПерваяСтраница = Истина;
	ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Истина;
	
	КодВидаИмущества = "";
	КБК = "";
	КодПоОКТМО = "";
	КодНалоговойЛьготыОсвобождениеОтНалогообложения = "";
	ПонижениеНалоговойСтавки = Ложь;
	НалоговаяСтавка = 0;
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0101)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0102)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0103)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0104)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0105)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0106)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0107)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0108)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0109)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0110)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0111)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0112)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа3112) Тогда
			
			Продолжить;
		КонецЕсли;
		
		Если Выборка.Группировка() = "ОБЩИЕ" Тогда
			
			ОстаточнаяСтоимостьОсновныхСредств = Выборка.ОстаточнаяСтоимостьОсновныхСредств;
		
		ИначеЕсли Выборка.Группировка() = "КодНалоговойЛьготыОсвобождениеОтНалогообложения" Тогда
			
			Если Не ПерваяСтраница Тогда
				
				Если ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2
				   И КодВидаИмущества = Выборка.КодВидаИмущества
				   И ?(КодВидаИмущества = "06" ИЛИ КодВидаИмущества = "08" ИЛИ КодВидаИмущества = "10", КБК = Выборка.КБК, Истина)
				   И КодПоОКТМО = Выборка.КодПоОКТМО 
				   И ПонижениеНалоговойСтавки = Выборка.ПонижениеНалоговойСтавки
				   И НалоговаяСтавка = Выборка.НалоговаяСтавка 
				   И Выборка.КоличествоРазличныхЛьгот = 2 
				   И Выборка.ЕстьОблагаемоеИмущество Тогда
				
					ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Ложь;
				
				Иначе
					
					ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Истина;
					
					// Создаем дополнительную страницу в декларации
					СтруктураНовойТаблицы = Новый Структура();
					Для Каждого Показатель Из СтраницаРаздел2 Цикл
						СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЦикла;
					
					НоваяСтраницаРаздела2 = Раздел2.Строки.Добавить();
					
					НоваяСтраницаРаздела2.Данные = СтруктураНовойТаблицы;
					НоваяСтраницаРаздела2.ДанныеМногострочныхЧастей = Новый Структура;
					
				КонецЕсли;
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			СтраницаРаздел2 = Раздел2.Строки[Раздел2.Строки.Количество()-1].Данные;
			
			
			КодВидаИмущества = Выборка.КодВидаИмущества;
			Если КодВидаИмущества = "06" ИЛИ КодВидаИмущества = "08" ИЛИ КодВидаИмущества = "10" Тогда
				КБК = Выборка.КБК;
			ИначеЕсли КодВидаИмущества = "01" Тогда
				КБК = "18210602020021000110";
			Иначе
				КБК = "18210602010021000110";
			КонецЕсли;
			
			СтраницаРаздел2.П000020000101 = КодВидаИмущества;
			СтраницаРаздел2.П000020001001 = Выборка.КодПоОКТМО;
			СтраницаРаздел2.П000020001100 = КБК;
			СтраницаРаздел2.П000020016003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел2.П000020020003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
			СтраницаРаздел2.П000020021003 = Выборка.НалоговаяСтавка;
			
			Если КодВидаИмущества = "02" Тогда
				ДоляСтоимостиЧислитель =   ?(Выборка.ДоляСтоимостиЧислитель = 0, 1, Выборка.ДоляСтоимостиЧислитель);
				ДоляСтоимостиЗнаменатель = ?(Выборка.ДоляСтоимостиЗнаменатель = 0, 1, Выборка.ДоляСтоимостиЗнаменатель);
				
				СтраницаРаздел2.П000020018003_Числ = ДоляСтоимостиЧислитель;
				СтраницаРаздел2.П000020018003_Знам = ДоляСтоимостиЗнаменатель;
			КонецЕсли;
			
			КодВидаИмущества           = Выборка.КодВидаИмущества; 
			КодПоОКТМО           = Выборка.КодПоОКТМО;
			КодНалоговойЛьготыОсвобождениеОтНалогообложения = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			ПонижениеНалоговойСтавки = Выборка.ПонижениеНалоговойСтавки;
			НалоговаяСтавка           = Выборка.НалоговаяСтавка;
			
		ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			
			ДополнительныеПараметры = Новый Структура;
			
			ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
			Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
			Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
			
			ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
			
			ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
			
			ПолеКомпоновкиДанных_КодВидаИмущества = Новый ПолеКомпоновкиДанных("КодВидаИмущества");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодВидаИмущества , ВидСравненияКомпоновкиДанных.Равно, Выборка.КодВидаИмущества);
			
			Если ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы Тогда
				ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
				ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
			КонецЕсли;
			
			ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
			
			ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
			
			ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
			ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);
					
			СтраницаРаздел2.П000020002003 = Число(СтраницаРаздел2.П000020002003) + Выборка.ОстаточнаяСтоимостьНа0101;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020002003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020002004 = Число(СтраницаРаздел2.П000020002004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0101, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020002004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003003 = Число(СтраницаРаздел2.П000020003003) + Выборка.ОстаточнаяСтоимостьНа0102;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020003003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003004 = Число(СтраницаРаздел2.П000020003004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0102, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020003004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004003 = Число(СтраницаРаздел2.П000020004003) + Выборка.ОстаточнаяСтоимостьНа0103;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020004003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004004 = Число(СтраницаРаздел2.П000020004004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0103, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020004004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005003 = Число(СтраницаРаздел2.П000020005003) + Выборка.ОстаточнаяСтоимостьНа0104;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020005003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005004 = Число(СтраницаРаздел2.П000020005004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0104, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020005004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006003 = Число(СтраницаРаздел2.П000020006003) + Выборка.ОстаточнаяСтоимостьНа0105;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020006003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006004 = Число(СтраницаРаздел2.П000020006004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0105, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020006004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007003 = Число(СтраницаРаздел2.П000020007003) + Выборка.ОстаточнаяСтоимостьНа0106;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020007003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007004 = Число(СтраницаРаздел2.П000020007004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0106, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020007004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008003 = Число(СтраницаРаздел2.П000020008003) + Выборка.ОстаточнаяСтоимостьНа0107;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020008003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008004 = Число(СтраницаРаздел2.П000020008004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0107, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020008004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009003 = Число(СтраницаРаздел2.П000020009003) + Выборка.ОстаточнаяСтоимостьНа0108;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020009003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009004 = Число(СтраницаРаздел2.П000020009004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0108, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020009004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010003 = Число(СтраницаРаздел2.П000020010003) + Выборка.ОстаточнаяСтоимостьНа0109;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020010003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010004 = Число(СтраницаРаздел2.П000020010004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0109, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020010004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011003 = Число(СтраницаРаздел2.П000020011003) + Выборка.ОстаточнаяСтоимостьНа0110;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020011003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011004 = Число(СтраницаРаздел2.П000020011004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0110, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020011004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020012003 = Число(СтраницаРаздел2.П000020012003) + Выборка.ОстаточнаяСтоимостьНа0111;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020012003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020012003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020012004 = Число(СтраницаРаздел2.П000020012004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0111, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020012004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020012004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020013003 = Число(СтраницаРаздел2.П000020013003) + Выборка.ОстаточнаяСтоимостьНа0112;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020013003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020013003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020013004 = Число(СтраницаРаздел2.П000020013004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0112, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020013004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020013004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014003 = Число(СтраницаРаздел2.П000020014003) + Выборка.ОстаточнаяСтоимостьНа3112;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020014003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014004 = Число(СтраницаРаздел2.П000020014004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа3112, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020014004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014103 = Число(СтраницаРаздел2.П000020014103) + Выборка.ОстаточнаяСтоимостьНедвижимости;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014103_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020014103, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014104 = Число(СтраницаРаздел2.П000020014104) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНедвижимости, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014104_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020014104, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020023003 = Число(СтраницаРаздел2.П000020023003) + Выборка.СуммаАвансовыхПлатежей;
						
			СтраницаРаздел2.П000020027003 = ОстаточнаяСтоимостьОсновныхСредств;
						
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014103_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020014103, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014104_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020014104, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020015003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020015003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020017003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020017003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020019003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020019003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020022003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020022003, "", ДополнительныеПараметры);
									
			Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда
			
				СтраницаРаздел2.П000020024003_КодЛьготы = "2012500";
				СтраницаРаздел2.П000020025003 = Число(СтраницаРаздел2.П000020025003) + Выборка.СуммаУменьшенияСуммыНалога;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020025003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020025003, "", ДополнительныеПараметры);
				
			КонецЕсли;

		КонецЕсли;
		
	КонецЦикла;
	
	// Заполнение раздела 2.1
	
	ПерваяВтораяАмортизационныеГруппы = Новый Массив;
	ПерваяВтораяАмортизационныеГруппы.Добавить(Перечисления.АмортизационныеГруппы.ПерваяГруппа);
	ПерваяВтораяАмортизационныеГруппы.Добавить(Перечисления.АмортизационныеГруппы.ВтораяГруппа);
	
	Запрос.УстановитьПараметр("ПерваяВтораяАмортизационныеГруппы", ПерваяВтораяАмортизационныеГруппы);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(КонецДня(мДатаКонцаПериодаОтчета), ВидГраницы.Включая));
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ВТ_Недвижимость
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|	И ВложенныйЗапрос.ОсновноеСредство.НедвижимоеИмущество
	|	И НЕ ВложенныйЗапрос.ОсновноеСредство.АмортизационнаяГруппа В (&ПерваяВтораяАмортизационныеГруппы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация КАК Организация,
	|	МАКСИМУМ(СостоянияОСОрганизаций.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|ГДЕ
	|	СостоянияОСОрганизаций.ДатаСостояния <= &КонецПериода
	|	И СостоянияОСОрганизаций.Организация = &Организация
	|	И СостоянияОСОрганизаций.ОсновноеСредство В
	|			(ВЫБРАТЬ
	|				СписокОС.ОсновноеСредство
	|			ИЗ
	|				ВТ_Недвижимость КАК СписокОС)
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ПО ДатыПоследнихСостояний.ОсновноеСредство = СостоянияОСОрганизаций.ОсновноеСредство
	|			И ДатыПоследнихСостояний.Организация = СостоянияОСОрганизаций.Организация
	|			И ДатыПоследнихСостояний.ДатаСостояния = СостоянияОСОрганизаций.ДатаСостояния
	|ГДЕ
	|	СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.ИнвентарныйНомер КАК ИнвентарныйНомер
	|ПОМЕСТИТЬ ПервоначальныеСведенияОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&КонецПериодаГраница,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						НеСнятыеСУчета КАК СписокОС)) КАК ПервоначальныеСведенияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НеСнятыеСУчета.ОсновноеСредство КАК ОсновноеСредство,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.КБК КАК КБК,
	|	ВложенныйЗапрос.КадастровыйНомер КАК КадастровыйНомер,
	|	ВложенныйЗапрос.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	ВложенныйЗапрос.УсловныйНомер КАК УсловныйНомер,
	|	ВложенныйЗапрос.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ИнвентарныйНомер, """") КАК ИнвентарныйНомер,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа3112) КАК ОстаточнаяСтоимостьНа3112,
	|	ЕСТЬNULL(ОсновныеСредства.КодПоОКОФ.Код, """") КАК КодПоОКОФ,
	|	ЕСТЬNULL(ОсновныеСредства.ШифрПоЕНАОФ, """") КАК ШифрПоЕНАОФ
	|ИЗ
	|	НеСнятыеСУчета КАК НеСнятыеСУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|		ПО НеСнятыеСУчета.ОсновноеСредство = ВложенныйЗапрос.ОсновноеСредство
	|			И (ВложенныйЗапрос.ИФНС = &НалоговыйОрган)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО НеСнятыеСУчета.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
	|		ПО НеСнятыеСУчета.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	НеСнятыеСУчета.ОсновноеСредство,
	|	ВложенныйЗапрос.КодПоОКТМО,
	|	ВложенныйЗапрос.КодВидаИмущества,
	|	ВложенныйЗапрос.КБК,
	|	ВложенныйЗапрос.КадастровыйНомер,
	|	ВложенныйЗапрос.КадастровыйНомерПомещения,
	|	ВложенныйЗапрос.УсловныйНомер,
	|	ВложенныйЗапрос.ВидНалоговойБазы,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ИнвентарныйНомер, """"),
	|	ЕСТЬNULL(ОсновныеСредства.КодПоОКОФ.Код, """"),
	|	ЕСТЬNULL(ОсновныеСредства.ШифрПоЕНАОФ, """")";
	
	Раздел21 = Контейнер.Раздел21;
	СтраницаРаздел21 = Раздел21.Строки[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел21 Цикл
		СтраницаРаздел21[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел21.Строки.Количество()>1 Цикл
		Раздел21.Строки.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Если Не ПерваяСтраница Тогда
			// Создаем дополнительную страницу в декларации
			СтруктураНовойТаблицы = Новый Структура();
			Для Каждого Показатель Из СтраницаРаздел21 Цикл
				СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
			КонецЦикла;
			
			НоваяСтраницаРаздела21 = Раздел21.Строки.Добавить();
			НоваяСтраницаРаздела21.Данные = СтруктураНовойТаблицы;
			НоваяСтраницаРаздела21.ДанныеМногострочныхЧастей = Новый Структура;
			
			СтраницаРаздел21 = Раздел21.Строки[Раздел21.Строки.Количество()-1].Данные;
			
		Иначе
			// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
			ПерваяСтраница = Ложь;
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		
		ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
		Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
		Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
		
		ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
		
		ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
		
		ПолеКомпоновкиДанных_ОсновноеСредство = Новый ПолеКомпоновкиДанных("ОсновноеСредство");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ОсновноеСредство , ВидСравненияКомпоновкиДанных.Равно, Выборка.ОсновноеСредство);
		
		ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
		
		ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
		ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);
		
		СтраницаРаздел21.П000210001000 = Выборка.КодПоОКТМО;
		
		КодВидаИмущества = Выборка.КодВидаИмущества;
		Если КодВидаИмущества = "06" ИЛИ КодВидаИмущества = "08" ИЛИ КодВидаИмущества = "10" Тогда
			КБК = Выборка.КБК;
		ИначеЕсли КодВидаИмущества = "01" Тогда
			КБК = "18210602020021000110";
		Иначе
			КБК = "18210602010021000110";
		КонецЕсли;
		СтраницаРаздел21.П000210001100 = КБК;
		
		СтраницаРаздел21.П000210001001 = ?(ЗначениеЗаполнено(Выборка.КадастровыйНомерПомещения),
		                                   Выборка.КадастровыйНомерПомещения, Выборка.КадастровыйНомер);
		СтраницаРаздел21.П000210002001 = Выборка.УсловныйНомер;
		Если Не ЗначениеЗаполнено(СтраницаРаздел21.П000210001001) И Не ЗначениеЗаполнено(СтраницаРаздел21.П000210002001) Тогда
			СтраницаРаздел21.П000210003001 = Выборка.ИнвентарныйНомер;
		КонецЕсли;
		
		КодПоОКОФ = СокрЛП(Выборка.КодПоОКОФ);
		Если СтрДлина(КодПоОКОФ) = 10 И Сред(КодПоОКОФ, 3, 1) = " " Тогда
			КодПоОКОФ = СтрЗаменить(КодПоОКОФ, " ", "");
			КодПоОКОФ = Сред(КодПоОКОФ, 1, 3) + "." + Сред(КодПоОКОФ, 4, 2) + "." + Сред(КодПоОКОФ, 6, 2) + "." + Сред(КодПоОКОФ, 8, 2);
		ИначеЕсли ПустаяСтрока(КодПоОКОФ) Тогда
			ШифрПоЕНАОФ = СокрЛП(Выборка.ШифрПоЕНАОФ);
			Если СтрДлина(ШифрПоЕНАОФ) = 6 Тогда
				КодПоОКОФ = Сред(ШифрПоЕНАОФ, 1, 2) + Сред(ШифрПоЕНАОФ, 4, 1) + "." + Сред(ШифрПоЕНАОФ, 5, 2);
			КонецЕсли;
		КонецЕсли;
		СтраницаРаздел21.П000210004003 = КодПоОКОФ;
		
		СтраницаРаздел21.П000210005003 = Выборка.ОстаточнаяСтоимостьНа3112;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000210005003_" + Раздел21.Строки.Количество(), "", "", "", СтраницаРаздел21.П000210005003, "", ДополнительныеПараметры);
			
	КонецЦикла;
	
	// Заполнение раздела 3
		
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.КадастровыйНомер КАК КадастровыйНомерЗдания,
	|	ВложенныйЗапрос.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	ВложенныйЗапрос.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	ВложенныйЗапрос.НеоблагаемаяКадастроваяСтоимость КАК НеоблагаемаяКадастроваяСтоимость,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей КАК СуммаАвансовыхПлатежей,
	|	ВложенныйЗапрос.СуммаУменьшенияСуммыНалога КАК СуммаУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ВложенныйЗапрос.ДоляПлощадиЧислитель КАК ДоляПлощадиЧислитель,
	|	ВложенныйЗапрос.ДоляПлощадиЗнаменатель КАК ДоляПлощадиЗнаменатель,
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)";
	
	Раздел3 = Контейнер.Раздел3;
	СтраницаРаздел3 = Раздел3.Строки[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел3 Цикл
		СтраницаРаздел3[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел3.Строки.Количество()>1 Цикл
		Раздел3.Строки.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
			Если Не ПерваяСтраница Тогда
				// Создаем дополнительную страницу в декларации
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из СтраницаРаздел3 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				НоваяСтраницаРаздела3 = Раздел3.Строки.Добавить();
				НоваяСтраницаРаздела3.Данные = СтруктураНовойТаблицы;
				НоваяСтраницаРаздела3.ДанныеМногострочныхЧастей = Новый Структура;
				
				СтраницаРаздел3 = Раздел3.Строки[Раздел3.Строки.Количество()-1].Данные;
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			
			ДополнительныеПараметры = Новый Структура;
			
			ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
			Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
			Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
			
			ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
			
			ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
			
			ПолеКомпоновкиДанных_КадастровыйНомер = Новый ПолеКомпоновкиДанных("КадастровыйНомер");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомер , ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерЗдания);
			
			ПолеКомпоновкиДанных_КадастровыйНомерПомещения = Новый ПолеКомпоновкиДанных("КадастровыйНомерПомещения");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомерПомещения, ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерПомещения);
			
			ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
			
			ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
			
			ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
			
			ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
			ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);

			СтраницаРаздел3.П000030000101 = Выборка.КодВидаИмущества;
			СтраницаРаздел3.П000030001001 = Выборка.КодПоОКТМО;
			СтраницаРаздел3.П000030001100 = "18210602010021000110";
			СтраницаРаздел3.П000030001401 = Выборка.КадастровыйНомерЗдания;
			СтраницаРаздел3.П000030001501 = Выборка.КадастровыйНомерПомещения;
			СтраницаРаздел3.П000030002003 = Выборка.КадастроваяСтоимость;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030002003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030002003, "", ДополнительныеПараметры);
			СтраницаРаздел3.П000030002503 = Выборка.НеоблагаемаяКадастроваяСтоимость;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030002503_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030002503, "", ДополнительныеПараметры);
			
			СтраницаРаздел3.П000030003003_Числ = Выборка.ДоляВПравеОбщейСобственностиЧислитель;
			СтраницаРаздел3.П000030003003_Знам = Выборка.ДоляВПравеОбщейСобственностиЗнаменатель;
			
			СтраницаРаздел3.П000030003503_Числ = Выборка.ДоляПлощадиЧислитель;
			СтраницаРаздел3.П000030003503_Знам = Выборка.ДоляПлощадиЗнаменатель;
			
			СтраницаРаздел3.П000030011003 = Выборка.СуммаАвансовыхПлатежей;
									
			СтраницаРаздел3.П000030004003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел3.П000030007003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
			
			СтраницаРаздел3.П000030005003_Числ = Выборка.ДоляСтоимостиЧислитель;
			СтраницаРаздел3.П000030005003_Знам = Выборка.ДоляСтоимостиЗнаменатель;
			
			СтраницаРаздел3.П000030008003 = Выборка.НалоговаяСтавка;
			
			Если Выборка.КоличествоМесяцевВладения > 0 И Выборка.КоличествоМесяцевВладения < 12 Тогда
				СтраницаРаздел3.П000030009003_Числ = Строка(Выборка.КоличествоМесяцевВладения);
				СтраницаРаздел3.П000030009003_Знам = "12";
			КонецЕсли;
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030010003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030010003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030006003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030006003, "", ДополнительныеПараметры);
			
			Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда        
				
				СтраницаРаздел3.П000030012003_КодЛьготы = "2012500";
				СтраницаРаздел3.П000030013003 = Выборка.СуммаУменьшенияСуммыНалога;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030013003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030013003, "", ДополнительныеПараметры);
				
			КонецЕсли;
			
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.АдресВременногоХранилищаРасшифровки);
	ПоместитьВоВременноеХранилище(Контейнер, ПараметрыОтчета.АдресВоВременномХранилище);
	
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаИмуществоФормаОтчета2019_2020(ПоказателиОтчета, ИДРедакцииОтчета) Экспорт
	
	// Раздел 1
	Если ИДРедакцииОтчета = "ФормаОтчета2020Кв4" Или ИДРедакцииОтчета = "ФормаОтчета2020Кв4_1" Тогда
		// Признак налогоплательщика
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000503", Истина, Ложь);
	КонецЕсли;	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003", Истина, Ложь);
	Если ИДРедакцииОтчета = "ФормаОтчета2019Кв4" 
		 Или ИДРедакцииОтчета = "ФормаОтчета2020Кв4" 
		 Или ИДРедакцииОтчета = "ФормаОтчета2020Кв4_1" Тогда
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103", Истина, Истина);
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303", Истина, Истина);
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503", Истина, Истина);
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703", Истина, Истина);
	КонецЕсли;	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010004003", Истина, Ложь);
	
	// Раздел 2
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000101", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001100", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020016003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003", Истина, Ложь);
	// При отключенном авторасчете ячеек будет взято значение, переданное в контейнере 
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Истина);
	Если ИДРедакцииОтчета = "ФормаОтчета2019Кв4" 
		 Или ИДРедакцииОтчета = "ФормаОтчета2020Кв4" 
		 Или ИДРедакцииОтчета = "ФормаОтчета2020Кв4_1" Тогда
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003_КодЛьготы", Истина, Ложь);
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003", Истина, Истина);
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003", Истина, Истина);
	Иначе
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003", Истина, Истина);
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_КодЛьготы", Истина, Ложь);
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020025003", Истина, Истина);
	КонецЕсли;
	
	// Раздел 2.1
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001000", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001100", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210002001", Истина, Ложь);
	Если ИДРедакцииОтчета = "ФормаОтчета2019Кв1" Тогда
		// Индекс
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003000", Истина, Ложь);
	КонецЕсли;		
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003002", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003005", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003006", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003007", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003008", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003009", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003010", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003011", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003012", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П00021М103013", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П00021М103014", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003015", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003016", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003017", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003018", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210005003", Истина, Истина);
	
	// Раздел 3
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030000101", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001100", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001401", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001501", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030002503", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003503_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003503_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030004003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030007003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030009503", Истина, Ложь);
	// При отключенном авторасчете ячеек будет взято значение, переданное в контейнере 
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030010003", Истина, Истина);
	Если ИДРедакцииОтчета = "ФормаОтчета2019Кв4" 
		 Или ИДРедакцииОтчета = "ФормаОтчета2020Кв4" 
		 Или ИДРедакцииОтчета = "ФормаОтчета2020Кв4_1" Тогда
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030011003_КодЛьготы", Истина, Ложь);
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030012003", Истина, Истина);
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030013003", Истина, Истина);
	Иначе
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030011003", Истина, Ложь);
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030012003_КодЛьготы", Истина, Ложь);
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030013003", Истина, Истина);
	КонецЕсли;
	
	// Раздел 4
	Если ИДРедакцииОтчета = "ФормаОтчета2020Кв4_1" Тогда
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П00004М100001", Истина, Истина);
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П00004М100002", Истина, Истина);
	КонецЕсли;	
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетИмуществоФормаОтчета2019_2020(ПараметрыОтчета, Контейнер, ИДРедакцииОтчета) Экспорт

	Перем ТаблицаРасшифровки; // Таблица для сбора сведений о расшифровке
	
	Организация              = ПараметрыОтчета.Организация;
	КодНалоговогоОргана      = ПараметрыОтчета.КодНалоговогоОргана;
	КПП                      = ПараметрыОтчета.КПП;
	мДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	НалоговыйОрган = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
		
	// Сведения о налоговых льготах в виде уменьшения суммы налога.
	ПроцентУменьшенияСуммыНалога = 0;
			
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПроцентУменьшения, 0) КАК ПроцентУменьшения,
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2, ЛОЖЬ) КАК ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, Организация = &Организация) КАК СтавкиНалогаНаИмуществоСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтавкиНалогаПоОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазапоНалогуНаИмущество.КадастроваяСтоимость)) КАК СтавкиНалогаПоОССрезПоследних";

	Результат = Запрос.ВыполнитьПакет();
	
	Если НЕ Результат[0].Пустой() Тогда
		ДопПараметрыОтчета = Результат[0].Выгрузить()[0];
		ПроцентУменьшенияСуммыНалога = ДопПараметрыОтчета.ПроцентУменьшения;
		ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2 = ДопПараметрыОтчета.ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2;
	ИначеЕсли Результат[1].Пустой() Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не обнаружена ставка налога на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(мДатаНачалаПериодаОтчета), КонецДня(мДатаКонцаПериодаОтчета),"ФП = Истина")
			,Организация, ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество()));
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;
		
	КонецЕсли;
	
	// В 2020 году некоторые организации освобождены от уплаты имущественных налогов (за 2-й квартал).
	// Федеральный закон № 172-ФЗ от 08.06.2020.
	ПрименяетсяОсвобождениеОтНалога = Ложь;
	Если НалоговыйУчет.ДеятельностьОтнесенаКПострадавшимОтКоронавируса(Организация) Тогда
		ПериодОсвобожденияОтНалогов = НалоговыйУчет.ПериодОсвобожденияОтНалоговПострадавшимОтКоронавируса();
		ПрименяетсяОсвобождениеОтНалога = (Год(ПериодОсвобожденияОтНалогов.Конец) = Год(мДатаКонцаПериодаОтчета));
	КонецЕсли;	
	
	Если ИДРедакцииОтчета = "ФормаОтчета2020Кв4" Или ИДРедакцииОтчета = "ФормаОтчета2020Кв4_1" Тогда
		// В 2020 году для некоторых организаций применяется отсрочка по уплате налога.
		// Если организация вправе воспользоваться отсрочкой, то Признак налогоплательщика устанавливается в значение
		// (п. 4.2 Порядка заполнения декларации согласно Приказу ФНС России от 14.08.2019 N СА-7-21/405@ (ред. от 28.07.2020)):
		//  1 - в случае, если действует федеральная отсрочка
		//  2 - в случае, если действует региональная отсрочка
		// Если отсрочка не применяется, то устанавливается значение 3.
		ПериодПереносаСроков = РегистрыСведений.НастройкиПродленияСроковНалоговОтчетов.ПериодПереносаСроковНалоговОтчетов();
		ВозможенПереносСроковУплатыАвансов = (мДатаКонцаПериодаОтчета >= ПериодПереносаСроков.Начало 
			И мДатаКонцаПериодаОтчета <= КонецДня(ПериодПереносаСроков.Окончание));
		
		Если ВозможенПереносСроковУплатыАвансов Тогда
			Если РегистрыСведений.ПорядокУплатыНалоговНаМестах.ПродленыРегиональныеСрокиУплатыНалога(
				 Организация, 
				 "НалогНаИмущество", 
				 НалоговыйОрган, 
				 мДатаКонцаПериодаОтчета) Тогда
				Контейнер.Раздел1.Строки[0].Данные.П000010000503 = "2";
			ИначеЕсли РегистрыСведений.НастройкиПродленияСроковНалоговОтчетов.ПродленыСрокиУплатыНалоговПредставленияОтчетов(Организация) Тогда
				// Применяется Постановление правительства №409 от 02.04.2020
				Контейнер.Раздел1.Строки[0].Данные.П000010000503 = "1";
			Иначе
				Контейнер.Раздел1.Строки[0].Данные.П000010000503 = "3";
			КонецЕсли;	
		Иначе
			Контейнер.Раздел1.Строки[0].Данные.П000010000503 = "3";	
		КонецЕсли;
		
	КонецЕсли;
	
	// Заполнение раздела 1.
	Если ИДРедакцииОтчета = "ФормаОтчета2019Кв4" 
		 Или ИДРедакцииОтчета = "ФормаОтчета2020Кв4" 
		 Или ИДРедакцииОтчета = "ФормаОтчета2020Кв4_1" Тогда
		// Здесь заполняем только данные по авансовым платежам.
		// Остальные суммы рассчитываются на стороне БРО.
		Запрос = Новый Запрос;
					
		Запрос.УстановитьПараметр("Организация",      ПараметрыОтчета.Организация);
		Запрос.УстановитьПараметр("ДатаОкончанияКв1", Дата(Год(мДатаКонцаПериодаОтчета), 3, 31));
		Запрос.УстановитьПараметр("ДатаОкончанияКв2", Дата(Год(мДатаКонцаПериодаОтчета), 6, 30));
		Запрос.УстановитьПараметр("ДатаОкончанияКв3", Дата(Год(мДатаКонцаПериодаОтчета), 9, 30));
		Запрос.УстановитьПараметр("НалоговыйОрган",   НалоговыйОрган);
		Запрос.УстановитьПараметр("ПрименяетсяОсвобождениеОтНалога", ПрименяетсяОсвобождениеОтНалога);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Авансы.КодПоОКТМО КАК КодПоОКТМО,
		|	Авансы.КБК КАК КБК,
		|	Авансы.КодВидаИмущества КАК КодВидаИмущества,
		|	ЕСТЬNULL(СУММА(Авансы.СуммаАвансаКв1), 0) КАК СуммаАвансаКв1,
		|	ЕСТЬNULL(СУММА(Авансы.СуммаАвансаКв2), 0) КАК СуммаАвансаКв2,
		|	ЕСТЬNULL(СУММА(Авансы.СуммаАвансаКв3), 0) КАК СуммаАвансаКв3
		|ИЗ
		|	(ВЫБРАТЬ
		|		РасчетНалогаНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
		|		РасчетНалогаНаИмущество.КБК КАК КБК,
		|		РасчетНалогаНаИмущество.КодВидаИмущества КАК КодВидаИмущества,
		|		РасчетНалогаНаИмущество.СуммаНалогаКУплате КАК СуммаАвансаКв1,
		|		0 КАК СуммаАвансаКв2,
		|		0 КАК СуммаАвансаКв3
		|	ИЗ
		|		РегистрСведений.РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
		|	ГДЕ
		|		РасчетНалогаНаИмущество.Организация = &Организация
		|		И РасчетНалогаНаИмущество.ПериодРасчета = &ДатаОкончанияКв1
		|		И РасчетНалогаНаИмущество.ИФНС = &НалоговыйОрган
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		РасчетНалогаНаИмущество.КодПоОКТМО,
		|		РасчетНалогаНаИмущество.КБК,
		|		РасчетНалогаНаИмущество.КодВидаИмущества,
		|		0,
		|		ВЫБОР
		|			КОГДА &ПрименяетсяОсвобождениеОтНалога
		|				ТОГДА 0
		|			ИНАЧЕ РасчетНалогаНаИмущество.СуммаНалогаКУплате
		|		КОНЕЦ,
		|		0
		|	ИЗ
		|		РегистрСведений.РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
		|	ГДЕ
		|		РасчетНалогаНаИмущество.Организация = &Организация
		|		И РасчетНалогаНаИмущество.ПериодРасчета = &ДатаОкончанияКв2
		|		И РасчетНалогаНаИмущество.ИФНС = &НалоговыйОрган
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		РасчетНалогаНаИмущество.КодПоОКТМО,
		|		РасчетНалогаНаИмущество.КБК,
		|		РасчетНалогаНаИмущество.КодВидаИмущества,
		|		0,
		|		0,
		|		РасчетНалогаНаИмущество.СуммаНалогаКУплате
		|	ИЗ
		|		РегистрСведений.РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
		|	ГДЕ
		|		РасчетНалогаНаИмущество.Организация = &Организация
		|		И РасчетНалогаНаИмущество.ПериодРасчета = &ДатаОкончанияКв3
		|		И РасчетНалогаНаИмущество.ИФНС = &НалоговыйОрган) КАК Авансы
		|
		|СГРУППИРОВАТЬ ПО
		|	Авансы.КодПоОКТМО,
		|	Авансы.КБК,
		|	Авансы.КодВидаИмущества";
		Результат = Запрос.Выполнить();
		
		// В разделе 1 строки 007(010)-040 повторяются столько раз, сколько есть различных сочетаний кода по ОКТМО и КБК
		ГруппыСтрокРаздела1 = Контейнер.Раздел1.Строки[0].ДанныеМногострочныхЧастей.П0000100.Строки;
		
		// Устанавливаем пустые значения показателей в 1-й группе строк 010-040...
		Для Каждого Показатель Из ГруппыСтрокРаздела1[0].Данные Цикл
			ГруппыСтрокРаздела1[0].Данные[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
		КонецЦикла;
		// ... а остальные группы удаляем
		Пока ГруппыСтрокРаздела1.Количество()>1 Цикл
			ГруппыСтрокРаздела1.Удалить(1);
		КонецЦикла;
		
		Если Не Результат.Пустой() Тогда
						
			Авансы = Результат.Выгрузить();
			
			Для Каждого СтрокаАванса Из Авансы Цикл 
				КБК = "";
				КодВидаИмущества = СокрЛП(СтрокаАванса.КодВидаИмущества);
				
				// КБК для уплаты налога на имущество организаций
				//	182 1 06 02010 02 1000 110 - по имуществу, не входящему в Единую систему газоснабжения;
				//	182 1 06 02020 02 1000 110 - по имуществу, входящему в Единую систему газоснабжения.
				// (см. Приложение 2 к Приказу Минфина России от 08.06.2018 N 132н (ред. от 04.09.2019)
				Если КодВидаИмущества = "08" ИЛИ КодВидаИмущества = "10" Тогда
					// Оставляем КБК - он получен из РС СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам 
					СтрокаАванса.КБК = СокрЛП(СтрокаАванса.КБК);
				ИначеЕсли КодВидаИмущества = "01" Тогда
					СтрокаАванса.КБК = "18210602020021000110";
				Иначе
					СтрокаАванса.КБК = "18210602010021000110";
				КонецЕсли;
				
				СтрокаАванса.КодПоОКТМО = СокрЛП(СтрокаАванса.КодПоОКТМО);
			КонецЦикла;	
			
			ИтогиПоГруппам = Авансы.Скопировать();
			ИтогиПоГруппам.Свернуть("КодПоОКТМО, КБК", "СуммаАвансаКв1, СуммаАвансаКв2, СуммаАвансаКв3");
			
			Авансы.Индексы.Добавить("КодПоОКТМО, КБК");
						
			ПерваяГруппаСтрок = Истина;
			ОтборСтрок = Новый Структура("КодПоОКТМО, КБК");
			
			Для Каждого ИтогПоГруппе Из ИтогиПоГруппам Цикл 
				
				Если ПерваяГруппаСтрок Тогда
					ГруппаСтрокРаздела1 = ГруппыСтрокРаздела1[0];
				Иначе	
					// Создаем дополнительную группу строк 010-040 в разделе 1
					ДанныеГруппыСтрокРаздела1 = Новый Структура;
					Для Каждого Показатель Из ГруппаСтрокРаздела1.Данные Цикл
						ДанныеГруппыСтрокРаздела1.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЦикла;
					ГруппаСтрокРаздела1 = ГруппыСтрокРаздела1.Добавить();   
					ГруппаСтрокРаздела1.Данные = ДанныеГруппыСтрокРаздела1;
					ГруппаСтрокРаздела1.ДанныеМногострочныхЧастей = Новый Структура;
				КонецЕсли;
				
				ПерваяГруппаСтрок = Ложь;
				
				ГруппаСтрокРаздела1.Данные.П000010001003 = СокрЛП(ИтогПоГруппе.КодПоОКТМО);
				ГруппаСтрокРаздела1.Данные.П000010002003 = СокрЛП(ИтогПоГруппе.КБК);  
				ГруппаСтрокРаздела1.Данные.П000010002303 = ИтогПоГруппе.СуммаАвансаКв1;
				ГруппаСтрокРаздела1.Данные.П000010002503 = ИтогПоГруппе.СуммаАвансаКв2;
				ГруппаСтрокРаздела1.Данные.П000010002703 = ИтогПоГруппе.СуммаАвансаКв3;
				
				// Подготовим параметры отчета расшифровки - справки-расчета налога на имущество
				ДополнительныеПараметры = Новый Структура;
				ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
				Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
				Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
				
				ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
				ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
				
				ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
				ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, ИтогПоГруппе.КодПоОКТМО);
				
				// В данных расчета КБК может быть пустой, а КодВидаИмущества заполнен.
				// Поэтому отбираем записи в расшифровке по КодВидаИмущества.
				ЗаполнитьЗначенияСвойств(ОтборСтрок, ИтогПоГруппе);
				ИсходныеСтроки = Авансы.НайтиСтроки(ОтборСтрок);
				
				ОтборПоКодуВидаИмущества = Новый СписокЗначений;
				Для каждого ИсходнаяСтрока Из ИсходныеСтроки Цикл
					ОтборПоКодуВидаИмущества.Добавить(ИсходнаяСтрока.КодВидаИмущества);
				КонецЦикла; 
				
				ПолеКомпоновкиДанных_КодВидаИмущества = Новый ПолеКомпоновкиДанных("КодВидаИмущества");
				ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодВидаИмущества , ВидСравненияКомпоновкиДанных.ВСписке, ОтборПоКодуВидаИмущества);
												
				ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
				ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", Истина);
				
				НомерГруппы = ГруппыСтрокРаздела1.Количество();
				ОтчетныйГод = Год(мДатаКонцаПериодаОтчета);
				
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000010002103_" + НомерГруппы, "", "", "", ГруппаСтрокРаздела1.Данные.П000010002103, "", ДополнительныеПараметры);
				
				ДополнительныеПараметрыКв1 = ОбщегоНазначения.СкопироватьРекурсивно(ДополнительныеПараметры);
				ДополнительныеПараметрыКв1.Вставить("КонецПериода", Дата(ОтчетныйГод, 3, 31));
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000010002303_" + НомерГруппы, "", "", "", ГруппаСтрокРаздела1.Данные.П000010002303, "", ДополнительныеПараметрыКв1);
				
				ДополнительныеПараметрыКв2 = ОбщегоНазначения.СкопироватьРекурсивно(ДополнительныеПараметры);
				ДополнительныеПараметрыКв2.Вставить("КонецПериода", Дата(ОтчетныйГод, 6, 30));
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000010002503_" + НомерГруппы, "", "", "", ГруппаСтрокРаздела1.Данные.П000010002503, "", ДополнительныеПараметрыКв2);
				
				ДополнительныеПараметрыКв3 = ОбщегоНазначения.СкопироватьРекурсивно(ДополнительныеПараметры);
				ДополнительныеПараметрыКв3.Вставить("КонецПериода", Дата(ОтчетныйГод, 9, 30));
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000010002703_" + НомерГруппы, "", "", "", ГруппаСтрокРаздела1.Данные.П000010002703, "", ДополнительныеПараметрыКв3);
				
			КонецЦикла; 
			
		КонецЕсли;
	КонецЕсли;	
	
	// Заполнение раздела 2.
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
	Раздел2 = Контейнер.Раздел2;
	
	Запрос.УстановитьПараметр("Организация",         ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета", НачалоДня(мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("НалоговыйОрган",      НалоговыйОрган);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетНалогаНаИмущество.КодВидаИмущества КАК КодВидаИмущества,
	|	РасчетНалогаНаИмущество.ИФНС КАК ИФНС,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0101 КАК ОстаточнаяСтоимостьНа0101,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0102 КАК ОстаточнаяСтоимостьНа0102,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0103 КАК ОстаточнаяСтоимостьНа0103,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0104 КАК ОстаточнаяСтоимостьНа0104,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0105 КАК ОстаточнаяСтоимостьНа0105,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0106 КАК ОстаточнаяСтоимостьНа0106,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0107 КАК ОстаточнаяСтоимостьНа0107,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0108 КАК ОстаточнаяСтоимостьНа0108,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0109 КАК ОстаточнаяСтоимостьНа0109,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0110 КАК ОстаточнаяСтоимостьНа0110,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0111 КАК ОстаточнаяСтоимостьНа0111,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0112 КАК ОстаточнаяСтоимостьНа0112,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа3112 КАК ОстаточнаяСтоимостьНа3112,
	|	РасчетНалогаНаИмущество.КадастровыйНомер КАК КадастровыйНомер,
	|	РасчетНалогаНаИмущество.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	РасчетНалогаНаИмущество.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.НеоблагаемаяКадастроваяСтоимость КАК НеоблагаемаяКадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.СуммаНалога КАК СуммаНалога,
	|	РасчетНалогаНаИмущество.СуммаАвансовыхПлатежей КАК СуммаАвансовыхПлатежей,
	|	РасчетНалогаНаИмущество.СуммаНалогаКУплате КАК СуммаНалогаКУплате,
	|	РасчетНалогаНаИмущество.СуммаУменьшенияСуммыНалога КАК СуммаУменьшенияСуммыНалога,
	|	РасчетНалогаНаИмущество.СуммаОсвобожденияОтУплатыНалога КАК СуммаОсвобожденияОтУплатыНалога,
	|	РасчетНалогаНаИмущество.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	РасчетНалогаНаИмущество.КоличествоМесяцевИспользования КАК КоличествоМесяцевИспользования,
	|	РасчетНалогаНаИмущество.ОсновноеСредство КАК ОсновноеСредство,
	|	РасчетНалогаНаИмущество.КБК КАК КБК,
	|	РасчетНалогаНаИмущество.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетНалогаНаИмущество.УсловныйНомер КАК УсловныйНомер,
	|	РасчетНалогаНаИмущество.ДоляПлощадиЧислитель КАК ДоляПлощадиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляПлощадиЗнаменатель КАК ДоляПлощадиЗнаменатель
	|ПОМЕСТИТЬ ВТ_РасчетНалогаНаИмущество
	|ИЗ
	|	РегистрСведений.РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|ГДЕ
	|	РасчетНалогаНаИмущество.Организация = &Организация
	|	И РасчетНалогаНаИмущество.ПериодРасчета = &ДатаОкончанияОтчета
	|	И РасчетНалогаНаИмущество.ИФНС = &НалоговыйОрган
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетНалогаНаИмущество.КодВидаИмущества КАК КодВидаИмущества,
	|	РасчетНалогаНаИмущество.КБК КАК КБК,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения) КАК КоличествоРазличныхЛьгот,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения = """"
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьОблагаемоеИмущество
	|ПОМЕСТИТЬ Льготы
	|ИЗ
	|	ВТ_РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|ГДЕ
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетНалогаНаИмущество.КодВидаИмущества,
	|	РасчетНалогаНаИмущество.КБК,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодПоОКТМО,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КодВидаИмущества
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетНалогаНаИмущество.КодВидаИмущества КАК КодВидаИмущества,
	|	РасчетНалогаНаИмущество.КБК КАК КБК,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0101) КАК ОстаточнаяСтоимостьНа0101,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0102) КАК ОстаточнаяСтоимостьНа0102,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0103) КАК ОстаточнаяСтоимостьНа0103,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0104) КАК ОстаточнаяСтоимостьНа0104,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0105) КАК ОстаточнаяСтоимостьНа0105,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0106) КАК ОстаточнаяСтоимостьНа0106,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0107) КАК ОстаточнаяСтоимостьНа0107,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0108) КАК ОстаточнаяСтоимостьНа0108,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0109) КАК ОстаточнаяСтоимостьНа0109,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0110) КАК ОстаточнаяСтоимостьНа0110,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0111) КАК ОстаточнаяСтоимостьНа0111,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0112) КАК ОстаточнаяСтоимостьНа0112,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа3112) КАК ОстаточнаяСтоимостьНа3112,
	|	СУММА(РасчетНалогаНаИмущество.СуммаНалога) КАК СуммаНалога,
	|	СУММА(РасчетНалогаНаИмущество.СуммаАвансовыхПлатежей) КАК СуммаАвансовыхПлатежей,
	|	СУММА(РасчетНалогаНаИмущество.СуммаНалогаКУплате) КАК СуммаНалогаКУплате,
	|	ВЫБОР
	|		КОГДА РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения <> """"
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЛьготируемаяСтоимость,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	СУММА(РасчетНалогаНаИмущество.СуммаУменьшенияСуммыНалога) КАК СуммаУменьшенияСуммыНалога,
	|	СУММА(РасчетНалогаНаИмущество.СуммаОсвобожденияОтУплатыНалога) КАК СуммаОсвобожденияОтУплатыНалога,
	|	Льготы.КоличествоРазличныхЛьгот КАК КоличествоРазличныхЛьгот,
	|	Льготы.ЕстьОблагаемоеИмущество КАК ЕстьОблагаемоеИмущество
	|ИЗ
	|	ВТ_РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Льготы КАК Льготы
	|		ПО РасчетНалогаНаИмущество.КодВидаИмущества = Льготы.КодВидаИмущества
	|			И РасчетНалогаНаИмущество.КБК = Льготы.КБК
	|			И РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель = Льготы.ДоляСтоимостиЧислитель
	|			И РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель = Льготы.ДоляСтоимостиЗнаменатель
	|			И РасчетНалогаНаИмущество.КодПоОКТМО = Льготы.КодПоОКТМО
	|			И РасчетНалогаНаИмущество.НалоговаяСтавка = Льготы.НалоговаяСтавка
	|			И РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки = Льготы.ПонижениеНалоговойСтавки
	|ГДЕ
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетНалогаНаИмущество.КодВидаИмущества,
	|	РасчетНалогаНаИмущество.КБК,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодПоОКТМО,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки,
	|	РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы,
	|	Льготы.КоличествоРазличныхЛьгот,
	|	Льготы.ЕстьОблагаемоеИмущество
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодВидаИмущества,
	|	КодПоОКТМО,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения
	|ИТОГИ
	|	СУММА(ОстаточнаяСтоимостьНа0101),
	|	СУММА(ОстаточнаяСтоимостьНа0102),
	|	СУММА(ОстаточнаяСтоимостьНа0103),
	|	СУММА(ОстаточнаяСтоимостьНа0104),
	|	СУММА(ОстаточнаяСтоимостьНа0105),
	|	СУММА(ОстаточнаяСтоимостьНа0106),
	|	СУММА(ОстаточнаяСтоимостьНа0107),
	|	СУММА(ОстаточнаяСтоимостьНа0108),
	|	СУММА(ОстаточнаяСтоимостьНа0109),
	|	СУММА(ОстаточнаяСтоимостьНа0110),
	|	СУММА(ОстаточнаяСтоимостьНа0111),
	|	СУММА(ОстаточнаяСтоимостьНа0112),
	|	СУММА(ОстаточнаяСтоимостьНа3112),
	|	СУММА(СуммаНалога),
	|	СУММА(СуммаАвансовыхПлатежей),
	|	СУММА(СуммаНалогаКУплате),
	|	МАКСИМУМ(ЛьготируемаяСтоимость),
	|	СУММА(СуммаУменьшенияСуммыНалога),
	|	СУММА(СуммаОсвобожденияОтУплатыНалога),
	|	МАКСИМУМ(КоличествоРазличныхЛьгот),
	|	МАКСИМУМ(ЕстьОблагаемоеИмущество)
	|ПО
	|	КодВидаИмущества,
	|	КБК,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКТМО,
	|	НалоговаяСтавка,
	|	ПонижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВидНалоговойБазы";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтраницаРаздел2 = Раздел2.Строки[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел2 Цикл
		СтраницаРаздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел2.Строки.Количество()>1 Цикл
		Раздел2.Строки.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Истина;
	
	КодВидаИмущества = "";
	КБК = "";
	КодПоОКТМО = "";
	КодНалоговойЛьготыОсвобождениеОтНалогообложения = "";
	ПонижениеНалоговойСтавки = Ложь;
	НалоговаяСтавка = 0;
	// В 2020 году для некоторых НКО предусмотрены особые коды льгот
	ЭтоНекоммерческаяОрганизация = Справочники.Организации.ЭтоНекоммерческаяОрганизация(Организация);
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0101)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0102)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0103)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0104)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0105)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0106)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0107)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0108)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0109)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0110)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0111)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0112)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа3112) Тогда
			
			Продолжить;
		КонецЕсли;
		
		Если Выборка.Группировка() = "КодНалоговойЛьготыОсвобождениеОтНалогообложения" Тогда
			
			Если Не ПерваяСтраница Тогда
				
				Если ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2
				   И КодВидаИмущества = Выборка.КодВидаИмущества
				   И ?(КодВидаИмущества = "06" ИЛИ КодВидаИмущества = "08" ИЛИ КодВидаИмущества = "10", КБК = Выборка.КБК, Истина)
				   И КодПоОКТМО = Выборка.КодПоОКТМО 
				   И ПонижениеНалоговойСтавки = Выборка.ПонижениеНалоговойСтавки
				   И НалоговаяСтавка = Выборка.НалоговаяСтавка 
				   И Выборка.КоличествоРазличныхЛьгот = 2 
				   И Выборка.ЕстьОблагаемоеИмущество Тогда
				
					ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Ложь;
				
				Иначе
					
					ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Истина;
					
					// Создаем дополнительную страницу в декларации
					СтруктураНовойТаблицы = Новый Структура();
					Для Каждого Показатель Из СтраницаРаздел2 Цикл
						СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЦикла;
					
					НоваяСтраницаРаздела2 = Раздел2.Строки.Добавить();
					
					НоваяСтраницаРаздела2.Данные = СтруктураНовойТаблицы;
					НоваяСтраницаРаздела2.ДанныеМногострочныхЧастей = Новый Структура;
					
				КонецЕсли;
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			СтраницаРаздел2 = Раздел2.Строки[Раздел2.Строки.Количество()-1].Данные;
			
			КодВидаИмущества = Выборка.КодВидаИмущества;
			Если КодВидаИмущества = "06" ИЛИ КодВидаИмущества = "08" ИЛИ КодВидаИмущества = "10" Тогда
				КБК = Выборка.КБК;
			ИначеЕсли КодВидаИмущества = "01" Тогда
				КБК = "18210602020021000110";
			Иначе
				КБК = "18210602010021000110";
			КонецЕсли;
			
			СтраницаРаздел2.П000020000101 = КодВидаИмущества;
			СтраницаРаздел2.П000020001001 = Выборка.КодПоОКТМО;
			СтраницаРаздел2.П000020001100 = КБК;
			СтраницаРаздел2.П000020016003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел2.П000020020003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
			СтраницаРаздел2.П000020021003 = Выборка.НалоговаяСтавка;
			
			Если КодВидаИмущества = "02" Тогда
				ДоляСтоимостиЧислитель =   ?(Выборка.ДоляСтоимостиЧислитель = 0, 1, Выборка.ДоляСтоимостиЧислитель);
				ДоляСтоимостиЗнаменатель = ?(Выборка.ДоляСтоимостиЗнаменатель = 0, 1, Выборка.ДоляСтоимостиЗнаменатель);
				
				СтраницаРаздел2.П000020018003_Числ = ДоляСтоимостиЧислитель;
				СтраницаРаздел2.П000020018003_Знам = ДоляСтоимостиЗнаменатель;
			КонецЕсли;
			
			КодВидаИмущества                                = Выборка.КодВидаИмущества; 
			КодПоОКТМО                                      = Выборка.КодПоОКТМО;
			КодНалоговойЛьготыОсвобождениеОтНалогообложения = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			ПонижениеНалоговойСтавки                        = Выборка.ПонижениеНалоговойСтавки;
			НалоговаяСтавка                                 = Выборка.НалоговаяСтавка;
			
		ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			
			ДополнительныеПараметры = Новый Структура;
			
			ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
			Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
			Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
			
			ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
			
			ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
			
			ПолеКомпоновкиДанных_КодВидаИмущества = Новый ПолеКомпоновкиДанных("КодВидаИмущества");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодВидаИмущества , ВидСравненияКомпоновкиДанных.Равно, Выборка.КодВидаИмущества);
			
			Если ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы Тогда
				ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
				ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
			КонецЕсли;
			
			ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
			
			ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
			
			ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
			ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", Истина);
					
			СтраницаРаздел2.П000020002003 = Число(СтраницаРаздел2.П000020002003) + Выборка.ОстаточнаяСтоимостьНа0101;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020002003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020002004 = Число(СтраницаРаздел2.П000020002004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0101, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020002004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003003 = Число(СтраницаРаздел2.П000020003003) + Выборка.ОстаточнаяСтоимостьНа0102;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020003003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003004 = Число(СтраницаРаздел2.П000020003004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0102, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020003004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004003 = Число(СтраницаРаздел2.П000020004003) + Выборка.ОстаточнаяСтоимостьНа0103;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020004003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004004 = Число(СтраницаРаздел2.П000020004004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0103, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020004004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005003 = Число(СтраницаРаздел2.П000020005003) + Выборка.ОстаточнаяСтоимостьНа0104;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020005003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005004 = Число(СтраницаРаздел2.П000020005004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0104, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020005004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006003 = Число(СтраницаРаздел2.П000020006003) + Выборка.ОстаточнаяСтоимостьНа0105;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020006003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006004 = Число(СтраницаРаздел2.П000020006004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0105, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020006004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007003 = Число(СтраницаРаздел2.П000020007003) + Выборка.ОстаточнаяСтоимостьНа0106;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020007003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007004 = Число(СтраницаРаздел2.П000020007004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0106, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020007004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008003 = Число(СтраницаРаздел2.П000020008003) + Выборка.ОстаточнаяСтоимостьНа0107;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020008003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008004 = Число(СтраницаРаздел2.П000020008004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0107, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020008004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009003 = Число(СтраницаРаздел2.П000020009003) + Выборка.ОстаточнаяСтоимостьНа0108;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020009003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009004 = Число(СтраницаРаздел2.П000020009004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0108, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020009004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010003 = Число(СтраницаРаздел2.П000020010003) + Выборка.ОстаточнаяСтоимостьНа0109;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020010003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010004 = Число(СтраницаРаздел2.П000020010004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0109, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020010004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011003 = Число(СтраницаРаздел2.П000020011003) + Выборка.ОстаточнаяСтоимостьНа0110;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020011003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011004 = Число(СтраницаРаздел2.П000020011004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0110, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020011004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020012003 = Число(СтраницаРаздел2.П000020012003) + Выборка.ОстаточнаяСтоимостьНа0111;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020012003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020012003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020012004 = Число(СтраницаРаздел2.П000020012004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0111, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020012004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020012004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020013003 = Число(СтраницаРаздел2.П000020013003) + Выборка.ОстаточнаяСтоимостьНа0112;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020013003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020013003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020013004 = Число(СтраницаРаздел2.П000020013004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0112, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020013004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020013004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014003 = Число(СтраницаРаздел2.П000020014003) + Выборка.ОстаточнаяСтоимостьНа3112;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020014003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014004 = Число(СтраницаРаздел2.П000020014004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа3112, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020014004, "", ДополнительныеПараметры);
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020015003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020015003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020017003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020017003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020019003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020019003, "", ДополнительныеПараметры);
			СтраницаРаздел2.П000020022003 = СтраницаРаздел2.П000020022003 + Выборка.СуммаНалога;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020022003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020022003, "", ДополнительныеПараметры);
			
			Если ИДРедакцииОтчета = "ФормаОтчета2019Кв4" 
				 Или ИДРедакцииОтчета = "ФормаОтчета2020Кв4" 
				 Или ИДРедакцииОтчета = "ФормаОтчета2020Кв4_1" Тогда
				// При освобождении организации от уплаты налога за 2-й квартал 2020 года необходимо использовать особые коды льгот
				// ( см. письмо ФНС от 10.06.2020 № БС-4-21/9576@ - далее Письмо) 
				Если ПрименяетсяОсвобождениеОтНалога И Выборка.СуммаОсвобожденияОтУплатыНалога > 0 И Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда
					// Абз. 4-5 п.3 Письма: "Если организация освобождается от [уплаты налога за 2-й квартал 2020 года] ... 
					// и законом субъекта Российской Федерации [для организации]... установлена налоговая льгота по налогу на имущество организаций
					// в виде уменьшения подлежащей уплате в бюджет суммы исчисленного налога, то...
					// в первой части строки с кодом 230 ... указывается [код]..."
					Если ЭтоНекоммерческаяОрганизация Тогда
						// ... 2010506 (код льготы для социально-ориентированных НКО - на данный момент опубликован только реестр таких НКО)
						СтраницаРаздел2.П000020023003_КодЛьготы = "2010506";
					Иначе
						// ... 2010505 (если организация не является НКО)
						СтраницаРаздел2.П000020023003_КодЛьготы = "2010505";
					КонецЕсли;	
					// "...по строке с кодом 240 ... указывается исчисленная сумма налоговой льготы (в том числе с учетом суммы авансового платежа 
					// за период владения объектом налогообложения с 1 апреля по 30 июня 2020 года)"
					СтраницаРаздел2.П000020024003 = Число(СтраницаРаздел2.П000020024003) + Выборка.СуммаОсвобожденияОтУплатыНалога + Выборка.СуммаУменьшенияСуммыНалога;
				ИначеЕсли ПрименяетсяОсвобождениеОтНалога И Выборка.СуммаОсвобожденияОтУплатыНалога > 0 Тогда
					// Абз. 1-2 п.3 Письма: "Если организация освобождается от [уплаты налога за 2-й квартал 2020 года] ..., то...
					// в первой части строки с кодом 230 ... указывается [код]..."
					Если ЭтоНекоммерческаяОрганизация Тогда
						// ... 2010502 (код льготы для социально-ориентированных НКО - на данный момент опубликован только реестр таких НКО)
						СтраницаРаздел2.П000020023003_КодЛьготы = "2010502";
					Иначе
						// ... 2010501 (если организация не является НКО)
						СтраницаРаздел2.П000020023003_КодЛьготы = "2010501";
					КонецЕсли;	
					// "...по строке с кодом 240 ... указывается исчисленная сумма авансового платежа по налогу 
					// за период владения объектом налогообложения с 1 апреля по 30 июня 2020 года"
					СтраницаРаздел2.П000020024003 = Число(СтраницаРаздел2.П000020024003) + Выборка.СуммаОсвобожденияОтУплатыНалога;
				ИначеЕсли Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда
					СтраницаРаздел2.П000020023003_КодЛьготы = "2012500";
					СтраницаРаздел2.П000020024003 = Число(СтраницаРаздел2.П000020024003) + Выборка.СуммаУменьшенияСуммыНалога;
				КонецЕсли;	
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020024003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020024003, "", ДополнительныеПараметры);
				// В строке 260 указывается исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период, т.е. без учета авансовых платежей.
				// Сумма к уплате не уменьшена на сумму освобождения, поэтому учитываем ее здесь.
				// Заполнение этой строки имеет смысл на случай отключения автоматического расчета вычисляемых ячеек.
				СтраницаРаздел2.П000020026003 = Число(СтраницаРаздел2.П000020026003) + Выборка.СуммаНалогаКУплате + Выборка.СуммаАвансовыхПлатежей - Выборка.СуммаОсвобожденияОтУплатыНалога;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020026003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020026003, "", ДополнительныеПараметры);
			Иначе
				СтраницаРаздел2.П000020023003 = Число(СтраницаРаздел2.П000020023003) + Выборка.СуммаАвансовыхПлатежей;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020023003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020023003, "", ДополнительныеПараметры);
				Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда
					СтраницаРаздел2.П000020024003_КодЛьготы = "2012500";
					СтраницаРаздел2.П000020025003 = Число(СтраницаРаздел2.П000020025003) + Выборка.СуммаУменьшенияСуммыНалога;
					ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020025003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020025003, "", ДополнительныеПараметры);
				КонецЕсли;	
			КонецЕсли;

		КонецЕсли;
		
	КонецЦикла;
	
	// Заполнение раздела 2.1
	Запрос.УстановитьПараметр("КонецПериода",        КонецДня(мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(КонецДня(мДатаКонцаПериодаОтчета), ВидГраницы.Включая));
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетНалогаНаИмущество.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ВТ_Недвижимость
	|ИЗ
	|	ВТ_РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|ГДЕ
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация КАК Организация,
	|	МАКСИМУМ(СостоянияОСОрганизаций.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|ГДЕ
	|	СостоянияОСОрганизаций.ДатаСостояния <= &КонецПериода
	|	И СостоянияОСОрганизаций.Организация = &Организация
	|	И СостоянияОСОрганизаций.ОсновноеСредство В
	|			(ВЫБРАТЬ
	|				СписокОС.ОсновноеСредство
	|			ИЗ
	|				ВТ_Недвижимость КАК СписокОС)
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ПО ДатыПоследнихСостояний.ОсновноеСредство = СостоянияОСОрганизаций.ОсновноеСредство
	|			И ДатыПоследнихСостояний.Организация = СостоянияОСОрганизаций.Организация
	|			И ДатыПоследнихСостояний.ДатаСостояния = СостоянияОСОрганизаций.ДатаСостояния
	|ГДЕ
	|	СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.ИнвентарныйНомер КАК ИнвентарныйНомер
	|ПОМЕСТИТЬ ПервоначальныеСведенияОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&КонецПериодаГраница,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						НеСнятыеСУчета КАК СписокОС)) КАК ПервоначальныеСведенияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НеСнятыеСУчета.ОсновноеСредство КАК ОсновноеСредство,
	|	РасчетНалогаНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетНалогаНаИмущество.КодВидаИмущества КАК КодВидаИмущества,
	|	РасчетНалогаНаИмущество.КБК КАК КБК,
	|	РасчетНалогаНаИмущество.КадастровыйНомер КАК КадастровыйНомер,
	|	РасчетНалогаНаИмущество.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	РасчетНалогаНаИмущество.УсловныйНомер КАК УсловныйНомер,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ИнвентарныйНомер, """") КАК ИнвентарныйНомер,
	|	СУММА(РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа3112) КАК ОстаточнаяСтоимостьНа3112,
	|	ЕСТЬNULL(ОсновныеСредства.КодПоОКОФ.Код, """") КАК КодПоОКОФ,
	|	ЕСТЬNULL(ОсновныеСредства.ШифрПоЕНАОФ, """") КАК ШифрПоЕНАОФ
	|ИЗ
	|	НеСнятыеСУчета КАК НеСнятыеСУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|		ПО НеСнятыеСУчета.ОсновноеСредство = РасчетНалогаНаИмущество.ОсновноеСредство
	|			И (РасчетНалогаНаИмущество.ИФНС = &НалоговыйОрган)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО НеСнятыеСУчета.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
	|		ПО НеСнятыеСУчета.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	НеСнятыеСУчета.ОсновноеСредство,
	|	РасчетНалогаНаИмущество.КодПоОКТМО,
	|	РасчетНалогаНаИмущество.КодВидаИмущества,
	|	РасчетНалогаНаИмущество.КБК,
	|	РасчетНалогаНаИмущество.КадастровыйНомер,
	|	РасчетНалогаНаИмущество.КадастровыйНомерПомещения,
	|	РасчетНалогаНаИмущество.УсловныйНомер,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ИнвентарныйНомер, """"),
	|	ЕСТЬNULL(ОсновныеСредства.КодПоОКОФ.Код, """"),
	|	ЕСТЬNULL(ОсновныеСредства.ШифрПоЕНАОФ, """")";
	
	Раздел21 = Контейнер.Раздел21;
	СтраницаРаздел21 = Раздел21.Строки[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел21 Цикл
		СтраницаРаздел21[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	СтраницаРаздел21Здание = Раздел21.Строки[0].ДанныеМногострочныхЧастей.П00021М1.Строки[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел21Здание Цикл
		СтраницаРаздел21Здание[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел21.Строки.Количество()>1 Цикл
		Раздел21.Строки.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	ДанныеОбъектов = Запрос.Выполнить().Выгрузить();
	
	Если ДанныеОбъектов.Количество() > 0 Тогда
		ДанныеАдресов = УправлениеКонтактнойИнформациейБП.КонтактнаяИнформацияОбъектовНаДату(ДанныеОбъектов.ВыгрузитьКолонку("ОсновноеСредство"));
		ДанныеАдресов.Индексы.Добавить("Объект");
	КонецЕсли;
	
	ДополнительныеПараметрыАдреса = Новый Структура;
	Если ИДРедакцииОтчета = "ФормаОтчета2019Кв4" 
		 Или ИДРедакцииОтчета = "ФормаОтчета2020Кв4"
		 Или ИДРедакцииОтчета = "ФормаОтчета2020Кв4_1" Тогда
		ДополнительныеПараметрыАдреса.Вставить("ВерсияАдреса", 2);
	КонецЕсли;	
	
	Для каждого ДанныеОбъекта Из ДанныеОбъектов Цикл
	
		Если Не ПерваяСтраница Тогда
			
			// Создаем дополнительную страницу в декларации
			СтруктураНовойТаблицы = Новый Структура();
			СтруктураДанныхМногострочныхЧастей = Новый Структура();
			Для Каждого Показатель Из СтраницаРаздел21 Цикл
				СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
			КонецЦикла;
			Для Каждого Показатель Из СтраницаРаздел21Здание Цикл
				СтруктураДанныхМногострочныхЧастей.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
			КонецЦикла;
			
			НоваяСтраницаРаздела21 = Раздел21.Строки.Добавить();
			НоваяСтраницаРаздела21.Данные = СтруктураНовойТаблицы;
			НоваяСтраницаРаздела21.ДанныеМногострочныхЧастей = Новый Структура("П00021М1", ДеревоЗначенийРегОтчет());
			
			СтраницаРаздел21 = Раздел21.Строки[Раздел21.Строки.Количество()-1].Данные;
			
			НоваяСтрокаРаздел21Здание = НоваяСтраницаРаздела21.ДанныеМногострочныхЧастей.П00021М1.Строки.Добавить();
			НоваяСтрокаРаздел21Здание.Данные = СтруктураДанныхМногострочныхЧастей;
			НоваяСтрокаРаздел21Здание.ДанныеМногострочныхЧастей = Новый Структура;
			
			СтраницаРаздел21Здание = Раздел21.Строки[Раздел21.Строки.Количество()-1].ДанныеМногострочныхЧастей.П00021М1.Строки[0].Данные;
			
		Иначе
			// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
			ПерваяСтраница = Ложь;
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		
		ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
		Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
		Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
		
		ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
		
		ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, ДанныеОбъекта.КодПоОКТМО);
		
		ПолеКомпоновкиДанных_ОсновноеСредство = Новый ПолеКомпоновкиДанных("ОсновноеСредство");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ОсновноеСредство , ВидСравненияКомпоновкиДанных.Равно, ДанныеОбъекта.ОсновноеСредство);
		
		ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, ДанныеОбъекта.ВидНалоговойБазы);
		
		ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
		ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", Истина);
		
		СтраницаРаздел21.П000210001000 = ДанныеОбъекта.КодПоОКТМО;
		
		КодВидаИмущества = ДанныеОбъекта.КодВидаИмущества;
		Если КодВидаИмущества = "06" ИЛИ КодВидаИмущества = "08" ИЛИ КодВидаИмущества = "10" Тогда
			КБК = ДанныеОбъекта.КБК;
		ИначеЕсли КодВидаИмущества = "01" Тогда
			КБК = "18210602020021000110";
		Иначе
			КБК = "18210602010021000110";
		КонецЕсли;
		СтраницаРаздел21.П000210001100 = КБК;
		
		АдресМестонахождения = ДанныеАдресов.Найти(ДанныеОбъекта.ОсновноеСредство, "Объект");
		
		Если ЗначениеЗаполнено(ДанныеОбъекта.КадастровыйНомерПомещения) Тогда
			СтраницаРаздел21.П000210001001 = "1";
			СтраницаРаздел21.П000210002001 = ДанныеОбъекта.КадастровыйНомерПомещения;
		ИначеЕсли ЗначениеЗаполнено(ДанныеОбъекта.КадастровыйНомер) Тогда
			СтраницаРаздел21.П000210001001 = "1";
			СтраницаРаздел21.П000210002001 = ДанныеОбъекта.КадастровыйНомер;
		ИначеЕсли ЗначениеЗаполнено(ДанныеОбъекта.УсловныйНомер) Тогда
			СтраницаРаздел21.П000210001001 = "2";
			СтраницаРаздел21.П000210002001 = ДанныеОбъекта.УсловныйНомер;
		ИначеЕсли АдресМестонахождения <> Неопределено И НЕ ПустаяСтрока(АдресМестонахождения.Значение) Тогда
			СтраницаРаздел21.П000210001001 = "3";
			СтраницаРаздел21.П000210002001 = ДанныеОбъекта.ИнвентарныйНомер;
		Иначе
			СтраницаРаздел21.П000210001001 = "4";
			СтраницаРаздел21.П000210002001 = ДанныеОбъекта.ИнвентарныйНомер;
		КонецЕсли;
		
		Если СтраницаРаздел21.П000210001001 = "3" Тогда
			
			Если АдресМестонахождения <> Неопределено И НЕ ПустаяСтрока(АдресМестонахождения.Значение) Тогда
				
				ПоляАдреса = ИнтерфейсыВзаимодействияБРО.АдресВФорматеФИАС(АдресМестонахождения.Значение, ДополнительныеПараметрыАдреса);
				
				СтраницаРаздел21.П00021УИД3000 = ПоляАдреса.ИдентификаторАдресногоОбъекта;
				Если ИДРедакцииОтчета = "ФормаОтчета2019Кв1" Тогда
					СтраницаРаздел21.П000210003000 = ПоляАдреса.Индекс;
				КонецЕсли;		
				СтраницаРаздел21.П000210003001 = ПоляАдреса.КодРегиона;
				СтраницаРаздел21.ПС00210003001 = ПоляАдреса.РегионСокращение;
				СтраницаРаздел21.П000210003002 = ПоляАдреса.МуниципальныйРайонВид;
				СтраницаРаздел21.ПС00210003002 = ПоляАдреса.МуниципальныйРайонСокращение;
				СтраницаРаздел21.П000210003003 = ПоляАдреса.МуниципальныйРайон;
				СтраницаРаздел21.П000210003004 = ПоляАдреса.ПоселениеВид;
				СтраницаРаздел21.ПС00210003004 = ПоляАдреса.ПоселениеСокращение;
				СтраницаРаздел21.П000210003005 = ПоляАдреса.Поселение;
				СтраницаРаздел21.П000210003006 = ПоляАдреса.НаселенныйПунктВид;
				СтраницаРаздел21.ПС00210003006 = ПоляАдреса.НаселенныйПунктСокращение;
				СтраницаРаздел21.П000210003007 = ПоляАдреса.НаселенныйПункт;
				СтраницаРаздел21.П000210003008 = ПоляАдреса.ТерриторияТип;
				СтраницаРаздел21.ПС00210003008 = ПоляАдреса.ТерриторияСокращение;
				СтраницаРаздел21.П000210003009 = ПоляАдреса.Территория;
				СтраницаРаздел21.П000210003010 = ПоляАдреса.УлицаТип;
				СтраницаРаздел21.ПС00210003010 = ПоляАдреса.УлицаСокращение;
				СтраницаРаздел21.П000210003011 = ПоляАдреса.Улица;
				СтраницаРаздел21.П000210003015 = ПоляАдреса.ПомещениеВЗданииТип;
				СтраницаРаздел21.П000210003016 = ПоляАдреса.ПомещениеВЗданииНомер;
				СтраницаРаздел21.П000210003017 = ПоляАдреса.ПомещениеВКвартиреТип;
				СтраницаРаздел21.П000210003018 = ПоляАдреса.ПомещениеВКвартиреНомер;
				
				ПервоеЗдание = Истина;
				Для Каждого Здание Из ПоляАдреса.Здания Цикл
					
					Если Не ПервоеЗдание Тогда
						СтруктураДанныхМногострочныхЧастей = Новый Структура();
						Для Каждого Показатель Из СтраницаРаздел21Здание Цикл
							СтруктураДанныхМногострочныхЧастей.Вставить(
								Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
						КонецЦикла;
						
						НоваяСтрокаРаздел21Здание = 
							Раздел21.Строки[Раздел21.Строки.Количество()-1].ДанныеМногострочныхЧастей.П00021М1.Строки.Добавить();
						НоваяСтрокаРаздел21Здание.Данные = СтруктураДанныхМногострочныхЧастей;
						НоваяСтрокаРаздел21Здание.ДанныеМногострочныхЧастей = Новый Структура;
						
						СтраницаРаздел21Здание = НоваяСтрокаРаздел21Здание.Данные;
					Иначе
						ПервоеЗдание = Ложь;
					КонецЕсли;
					
					СтраницаРаздел21Здание.П00021М103013 = Здание.ЗданиеТип;
					СтраницаРаздел21Здание.П00021М103014 = Здание.ЗданиеНомер;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
		КодПоОКОФ = СокрЛП(ДанныеОбъекта.КодПоОКОФ);
		Если СтрДлина(КодПоОКОФ) = 10 И Сред(КодПоОКОФ, 3, 1) = " " Тогда
			КодПоОКОФ = СтрЗаменить(КодПоОКОФ, " ", "");
			КодПоОКОФ = Сред(КодПоОКОФ, 1, 3) + "." + Сред(КодПоОКОФ, 4, 2) + "." + Сред(КодПоОКОФ, 6, 2) + "." + Сред(КодПоОКОФ, 8, 2);
		ИначеЕсли ПустаяСтрока(КодПоОКОФ) Тогда
			ШифрПоЕНАОФ = СокрЛП(ДанныеОбъекта.ШифрПоЕНАОФ);
			Если СтрДлина(ШифрПоЕНАОФ) = 6 Тогда
				КодПоОКОФ = Сред(ШифрПоЕНАОФ, 1, 2) + Сред(ШифрПоЕНАОФ, 4, 1) + "." + Сред(ШифрПоЕНАОФ, 5, 2);
			КонецЕсли;
		КонецЕсли;
		СтраницаРаздел21.П000210004003 = КодПоОКОФ;
		
		СтраницаРаздел21.П000210005003 = ДанныеОбъекта.ОстаточнаяСтоимостьНа3112;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000210005003_" + Раздел21.Строки.Количество(), "", "", "", СтраницаРаздел21.П000210005003, "", ДополнительныеПараметры);
			
	КонецЦикла;
	
	// Заполнение раздела 3
		
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетНалогаНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетНалогаНаИмущество.КадастровыйНомер КАК КадастровыйНомерЗдания,
	|	РасчетНалогаНаИмущество.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	РасчетНалогаНаИмущество.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.НеоблагаемаяКадастроваяСтоимость КАК НеоблагаемаяКадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	РасчетНалогаНаИмущество.СуммаНалога КАК СуммаНалога,
	|	РасчетНалогаНаИмущество.СуммаАвансовыхПлатежей КАК СуммаАвансовыхПлатежей,
	|	РасчетНалогаНаИмущество.СуммаНалогаКУплате КАК СуммаНалогаКУплате,
	|	РасчетНалогаНаИмущество.СуммаУменьшенияСуммыНалога КАК СуммаУменьшенияСуммыНалога,
	|	РасчетНалогаНаИмущество.СуммаОсвобожденияОтУплатыНалога КАК СуммаОсвобожденияОтУплатыНалога,
	|	РасчетНалогаНаИмущество.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	РасчетНалогаНаИмущество.КоличествоМесяцевИспользования КАК КоличествоМесяцевИспользования,
	|	РасчетНалогаНаИмущество.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетНалогаНаИмущество.ДоляПлощадиЧислитель КАК ДоляПлощадиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляПлощадиЗнаменатель КАК ДоляПлощадиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодВидаИмущества КАК КодВидаИмущества
	|ИЗ
	|	ВТ_РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|ГДЕ
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)";
	
	Раздел3 = Контейнер.Раздел3;
	СтраницаРаздел3 = Раздел3.Строки[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел3 Цикл
		СтраницаРаздел3[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел3.Строки.Количество()>1 Цикл
		Раздел3.Строки.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Если Не ПерваяСтраница Тогда
			// Создаем дополнительную страницу в декларации
			СтруктураНовойТаблицы = Новый Структура();
			Для Каждого Показатель Из СтраницаРаздел3 Цикл
				СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
			КонецЦикла;
			
			НоваяСтраницаРаздела3 = Раздел3.Строки.Добавить();
			НоваяСтраницаРаздела3.Данные = СтруктураНовойТаблицы;
			НоваяСтраницаРаздела3.ДанныеМногострочныхЧастей = Новый Структура;
			
			СтраницаРаздел3 = Раздел3.Строки[Раздел3.Строки.Количество()-1].Данные;
			
		Иначе
			// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
			ПерваяСтраница = Ложь;
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		
		ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
		Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
		Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
		
		ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
		
		ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
		
		ПолеКомпоновкиДанных_КадастровыйНомер = Новый ПолеКомпоновкиДанных("КадастровыйНомер");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомер , ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерЗдания);
		
		ПолеКомпоновкиДанных_КадастровыйНомерПомещения = Новый ПолеКомпоновкиДанных("КадастровыйНомерПомещения");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомерПомещения, ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерПомещения);
		
		ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
		
		ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
		
		ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
		
		ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
		ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", Истина);

		СтраницаРаздел3.П000030000101 = Выборка.КодВидаИмущества;
		СтраницаРаздел3.П000030001001 = Выборка.КодПоОКТМО;
		СтраницаРаздел3.П000030001100 = "18210602010021000110";
		
		Если ЗначениеЗаполнено(Выборка.КадастровыйНомерПомещения) Тогда
			СтраницаРаздел3.П000030001401 = "2";
			СтраницаРаздел3.П000030001501 = Выборка.КадастровыйНомерПомещения;
		Иначе
			СтраницаРаздел3.П000030001401 = "1";
			СтраницаРаздел3.П000030001501 = Выборка.КадастровыйНомерЗдания;
		КонецЕсли;
		
		СтраницаРаздел3.П000030002003 = Выборка.КадастроваяСтоимость;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030002003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030002003, "", ДополнительныеПараметры);
		СтраницаРаздел3.П000030002503 = Выборка.НеоблагаемаяКадастроваяСтоимость;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030002503_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030002503, "", ДополнительныеПараметры);
		
		СтраницаРаздел3.П000030003003_Числ = Выборка.ДоляВПравеОбщейСобственностиЧислитель;
		СтраницаРаздел3.П000030003003_Знам = Выборка.ДоляВПравеОбщейСобственностиЗнаменатель;
		
		СтраницаРаздел3.П000030003503_Числ = Выборка.ДоляПлощадиЧислитель;
		СтраницаРаздел3.П000030003503_Знам = Выборка.ДоляПлощадиЗнаменатель;
				
		СтраницаРаздел3.П000030004003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
		СтраницаРаздел3.П000030007003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
		
		СтраницаРаздел3.П000030005003_Числ = Выборка.ДоляСтоимостиЧислитель;
		СтраницаРаздел3.П000030005003_Знам = Выборка.ДоляСтоимостиЗнаменатель;
		
		СтраницаРаздел3.П000030008003 = Выборка.НалоговаяСтавка;
		СтраницаРаздел3.П000030009003 = Окр(Выборка.КоличествоМесяцевВладения / 12, 4);
		
		Если Выборка.КоличествоМесяцевИспользования > 0 И Выборка.КоличествоМесяцевИспользования < Выборка.КоличествоМесяцевВладения Тогда 
			СтраницаРаздел3.П000030009503 = Окр(Выборка.КоличествоМесяцевИспользования / Выборка.КоличествоМесяцевВладения, 4);
		КонецЕсли;
		
		СтраницаРаздел3.П000030010003 = Выборка.СуммаНалога;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030010003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030010003, "", ДополнительныеПараметры);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030006003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030006003, "", ДополнительныеПараметры);
				
		Если ИДРедакцииОтчета = "ФормаОтчета2019Кв4" 
			 Или ИДРедакцииОтчета = "ФормаОтчета2020Кв4" 
			 Или ИДРедакцииОтчета = "ФормаОтчета2020Кв4_1" Тогда
			// При освобождении организации от уплаты налога за 2-й квартал 2020 года необходимо использовать особые коды льгот
			// ( см. письмо ФНС от 10.06.2020 № БС-4-21/9576@ - далее Письмо) 
			Если ПрименяетсяОсвобождениеОтНалога И Выборка.СуммаОсвобожденияОтУплатыНалога > 0 И Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда
				// Абз. 4 и 6 п.3 Письма: "Если организация освобождается от [уплаты налога за 2-й квартал 2020 года] ... 
				// и законом субъекта Российской Федерации [для организации]... установлена налоговая льгота по налогу на имущество организаций
				// в виде уменьшения подлежащей уплате в бюджет суммы исчисленного налога, то...
				// в первой части строки с кодом 110 ... указывается [код]..."
				Если ЭтоНекоммерческаяОрганизация Тогда
					// ... 2010506 (код льготы для социально-ориентированных НКО - на данный момент опубликован только реестр таких НКО)
					СтраницаРаздел3.П000030011003_КодЛьготы = "2010506";
				Иначе
					// ... 2010505 (если организация не является НКО)
					СтраницаРаздел3.П000030011003_КодЛьготы = "2010505";
				КонецЕсли;	
				// "...по строке с кодом 120 ... указывается исчисленная сумма налоговой льготы (в том числе с учетом суммы авансового платежа 
				// за период владения объектом налогообложения с 1 апреля по 30 июня 2020 года)"
				СтраницаРаздел3.П000030012003 = Выборка.СуммаОсвобожденияОтУплатыНалога + Выборка.СуммаУменьшенияСуммыНалога;
			ИначеЕсли ПрименяетсяОсвобождениеОтНалога И Выборка.СуммаОсвобожденияОтУплатыНалога > 0 Тогда
				// Абз. 1 и 3 п.3 Письма: "Если организация освобождается от [уплаты налога за 2-й квартал 2020 года] ..., то...
				// в первой части строки с кодом 110 ... указывается [код]..."
				Если ЭтоНекоммерческаяОрганизация Тогда
					// ... 2010502 (код льготы для социально-ориентированных НКО - на данный момент опубликован только реестр таких НКО)
					СтраницаРаздел3.П000030011003_КодЛьготы = "2010502";
				Иначе
					// ... 2010501 (если организация не является НКО)
					СтраницаРаздел3.П000030011003_КодЛьготы = "2010501";
				КонецЕсли;	
				// "...по строке с кодом 120 ... указывается исчисленная сумма авансового платежа по налогу 
				// за период владения объектом налогообложения с 1 апреля по 30 июня 2020 года"
				СтраницаРаздел3.П000030012003 = Выборка.СуммаОсвобожденияОтУплатыНалога;
			ИначеЕсли Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда
				СтраницаРаздел3.П000030011003_КодЛьготы = "2012500";
				СтраницаРаздел3.П000030012003 = Выборка.СуммаУменьшенияСуммыНалога;
			КонецЕсли;	
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030012003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030012003, "", ДополнительныеПараметры);
			// В строке 130 указывается исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период, т.е. без учета авансовых платежей.
			// Сумма к уплате не уменьшена на сумму освобождения, поэтому учитываем ее здесь.
			// Заполнение этой строки имеет смысл на случай отключения автоматического расчета вычисляемых ячеек.
			СтраницаРаздел3.П000030013003 = Выборка.СуммаНалогаКУплате + Выборка.СуммаАвансовыхПлатежей - Выборка.СуммаОсвобожденияОтУплатыНалога;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030013003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030013003, "", ДополнительныеПараметры);
		Иначе
			СтраницаРаздел3.П000030011003 = Выборка.СуммаАвансовыхПлатежей;
			Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда
				СтраницаРаздел3.П000030012003_КодЛьготы = "2012500";
				СтраницаРаздел3.П000030013003 = Выборка.СуммаУменьшенияСуммыНалога;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030013003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030013003, "", ДополнительныеПараметры);
			КонецЕсли;	
		КонецЕсли;
		
	КонецЦикла;
	
	// Заполнение раздела 4
	Если ИДРедакцииОтчета = "ФормаОтчета2020Кв4_1" Тогда
		
		Раздел4 = Контейнер.Раздел4;
		ТаблицаРаздел4 = Раздел4.Строки[0].ДанныеМногострочныхЧастей.П00004М1;
		СтрокаРаздела4 = ТаблицаРаздел4.Строки[0].Данные;
				
		Для Каждого Показатель Из СтрокаРаздела4 Цикл
			СтрокаРаздела4[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
		КонецЦикла;
		
		Пока ТаблицаРаздел4.Строки.Количество()>1 Цикл
			ТаблицаРаздел4.Строки.Удалить(1);
		КонецЦикла;
		
		// Раздел 4 заполняем только в декларации по головной организации:
		// "Раздел 4 заполняется организацией один раз в одной из представляемых ею 
		// Деклараций за соответствующий налоговый период" (п. 8.1 Порядка заполнения)
		ГоловнаяОрганизация = ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Организация);
		Организации = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсяОрганизация(ГоловнаяОрганизация);
		НалоговыйОрганГО = Справочники.Организации.РегистрацияВНалоговомОрганеНаДату(ГоловнаяОрганизация, мДатаКонцаПериодаОтчета);
		
		Если НалоговыйОрган = НалоговыйОрганГО Тогда
			
			ДанныеПоДвижимомуИмуществу = РасчетИмущественныхНалогов.ДанныеПоСреднейСтоимостиДвижимогоИмущества(
				Организации,
				мДатаНачалаПериодаОтчета,
				мДатаКонцаПериодаОтчета);
								
			Если ТипЗнч(ДанныеПоДвижимомуИмуществу) = Тип("ТаблицаЗначений") Тогда
				
				ДанныеПоДвижимомуИмуществу.Индексы.Добавить("Регион");
				
				ОграничитьДанныеПоДвижимомуИмуществу(ДанныеПоДвижимомуИмуществу);
				
				ДанныеПоРегионам = ДанныеПоДвижимомуИмуществу.Скопировать();
				ДанныеПоРегионам.Свернуть("Регион", "СреднегодоваяСтоимость");
				ДанныеПоРегионам.Сортировать("Регион");
				
				ПерваяСтрока = Истина;
				
				Для Каждого ДанныеПоРегиону Из ДанныеПоРегионам Цикл
					
					Если Не ПерваяСтрока Тогда
						// Создаем дополнительную строку в разделе
						ДанныеНовойСтроки = Новый Структура;
						Для Каждого Показатель Из СтрокаРаздела4 Цикл
							ДанныеНовойСтроки.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
						КонецЦикла;
						
						НоваяСтрокаРаздела4 = ТаблицаРаздел4.Строки.Добавить();
						НоваяСтрокаРаздела4.Данные = ДанныеНовойСтроки;
						НоваяСтрокаРаздела4.ДанныеМногострочныхЧастей = Новый Структура;
						
						СтрокаРаздела4 = ТаблицаРаздел4.Строки[ТаблицаРаздел4.Строки.Количество()-1].Данные;
					Иначе
						ПерваяСтрока = Ложь;
					КонецЕсли;	
					
					СтрокаРаздела4.П00004М100001 = Формат(ДанныеПоРегиону.Регион, "ЧЦ=2; ЧВН=; ЧФ=Ч");
					СтрокаРаздела4.П00004М100002 = ДанныеПоРегиону.СреднегодоваяСтоимость;
					
					НомерСтрокиРаздела4 = ТаблицаРаздел4.Строки.Количество();
					
					ДополнительныеПараметры = Новый Структура;
					// Каждая строка по региону может быть расшифрована до отдельных основных средств
					ДетальныеЗаписи = ЗаполнениеРасшифровкаРегламентированнойОтчетности.НовыйДетальныеЗаписиРасчета();
					// В расшифровочном отчете каждая строка ОС может быть далее расшифрована до исходных показателей по месяцам.
					// Для этого здесь готовим таблицу расшифровки по каждому отдельному региону - она используется на 2-м уровне расшифровки.
					ДетальныеЗаписиТаблицаРасшифровки = ЗаполнениеРасшифровкаРегламентированнойОтчетности.НовыйРасшифровка();
					
					СтрокиПоРегиону = ДанныеПоДвижимомуИмуществу.НайтиСтроки(Новый Структура("Регион", ДанныеПоРегиону.Регион));
					
					Сч = 0;
					
					Для Каждого СтрокаОС Из СтрокиПоРегиону Цикл
						
						Сч = Сч + 1;
						
						ДетальнаяЗапись = ДетальныеЗаписи.Добавить();
						ДетальнаяЗапись.Организация = СтрокаОС.Организация;
						ДетальнаяЗапись.Аналитика = СтрокаОС.ПредставлениеОС; 
						ДетальнаяЗапись.Сумма = СтрокаОС.СреднегодоваяСтоимость;
						ДетальнаяЗапись.Ссылка = СтрокаОС.ОсновноеСредство;
						ДетальнаяЗапись.ИмяПоказателя = СтрШаблон("%1_%2_%3",
							"П00004М100002",
							НомерСтрокиРаздела4,
							Сч);

						// Заполним расшифровку расчета среднегодовой стоимости по каждому ОС (остаточная стоимость по месяцам) 	
						ДетальныеЗаписиПоОС = ЗаполнениеРасшифровкаРегламентированнойОтчетности.НовыйДетальныеЗаписиРасчета();
						
						Для Месяц = 0 По 12 Цикл
							
							НомерМесяца = Месяц + 1;
														
							Если НомерМесяца = 13 Тогда
								Суффикс = "3112";
								ПериодРасчета = Дата(Год(мДатаКонцаПериодаОтчета), 12, 31);
							Иначе
								Суффикс = "01" + Формат(НомерМесяца, "ЧЦ=2; ЧВН=; ЧФ=Ч");
								ПериодРасчета = Дата(Год(мДатаКонцаПериодаОтчета), НомерМесяца, 1);
							КонецЕсли;
							
							ИмяКолонки = "ОстаточнаяСтоимостьНа" + Суффикс;
							
							ДетальнаяЗаписьПоОС = ДетальныеЗаписиПоОС.Добавить();
							ДетальнаяЗаписьПоОС.Организация = СтрокаОС.Организация;
							ДетальнаяЗаписьПоОС.Аналитика = СтрШаблон(НСтр("ru='Остаточная стоимость на %1'"), Формат(ПериодРасчета, "ДЛФ=DD"));
							ДетальнаяЗаписьПоОС.Сумма = СтрокаОС["ОстаточнаяСтоимостьНа" + Суффикс];
							
						КонецЦикла;	
						
						НаименованиеПоказателя = СтрШаблон(НСтр("ru='Расчет среднегодовой стоимости: %1'"), ДетальнаяЗапись.Аналитика);
						ДобавитьСтрокуРасшифровки(
							ДетальныеЗаписиТаблицаРасшифровки,
							ДетальнаяЗапись.ИмяПоказателя,
							НаименованиеПоказателя,
							"",
							"",
							ДетальнаяЗапись.Сумма,
							"",
							Новый Структура("ДетальныеЗаписи", ДетальныеЗаписиПоОС));
						
					КонецЦикла;	
					
					НаименованиеПоказателя = СтрШаблон(НСтр("ru='Среднегодовая стоимость объектов движимого имущества: Код региона %1'"), СтрокаРаздела4.П00004М100001);
					ДополнительныеПараметры.Вставить("ДетальныеЗаписи", ДетальныеЗаписи);
					ДополнительныеПараметры.Вставить("ДетальныеЗаписиТаблицаРасшифровки", ДетальныеЗаписиТаблицаРасшифровки);
					
					ДобавитьСтрокуРасшифровки(
						ТаблицаРасшифровки, 
						"П00004М100002_" + НомерСтрокиРаздела4,
						НаименованиеПоказателя,
						"", 
						"", 
						СтрокаРаздела4.П00004М100002, 
						"", 
						ДополнительныеПараметры);
						
				КонецЦикла;	
								
			КонецЕсли;	
			
		КонецЕсли;	
		
	КонецЕсли;	
	
	ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.АдресВременногоХранилищаРасшифровки);
	ПоместитьВоВременноеХранилище(Контейнер, ПараметрыОтчета.АдресВоВременномХранилище);
	
КонецПроцедуры

Процедура ОграничитьДанныеПоДвижимомуИмуществу(ДанныеПоДвижимомуИмуществу)
	
	// Экспериментальным путем установлено, что при превышении некоторого количества записей в таблице данных 
	// о среднегодовой стоимости движимого имущества (примерно 250 тыс), таблица расшифровки становится слишком велика, 
	// и СУБД не может сохранить данные регл отчета (например, в PostgreSQL возникает ошибка out of memory). 
	// Поэтому при превышении некоторого предельного количества модифицируем таблицу данных таким образом, 
	// чтобы полученную на ее основании таблицу расшифровки можно было потом сохранить (в данных регл отчета).  
	// "Лишние" записи по ОС сворачиваем в одну - "Другие объекты движимого имущества".
	// Так как регионов и организаций может быть несколько, то "отрезаем" записи по каждому региону и организации пропорционально 
	// (см. КоэффициентОграничения). 
	ПредельноеКоличествоЗаписейРасшифровки = ПредельноеКоличествоЗаписейРасшифровкиДвижимогоИмущества();
	
	Если ДанныеПоДвижимомуИмуществу.Количество() <= ПредельноеКоличествоЗаписейРасшифровки Тогда
		Возврат;
	КонецЕсли;	
							
	КоэффициентОграничения = ПредельноеКоличествоЗаписейРасшифровки / ДанныеПоДвижимомуИмуществу.Количество();
	
	АналитикаСвернутыхСтрок = Справочники.ОсновныеСредства.ПустаяСсылка();
	АналитикаСвернутыхСтрокТекст = НСтр("ru='Другие объекты движимого имущества'");
	
	КлючевыеПоля = Новый Массив; // поля, в разрезе которых устанавливаем ограничения
	КлючевыеПоля.Добавить("Регион");
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПодразделениям") Тогда
		// Если есть филиалы на выделенном балансе (несколько организаций), то также пропорционально 
		// ограничиваем количество записей по каждому такому филиалу (организации).
		Организации = ДанныеПоДвижимомуИмуществу.Скопировать(, "Организация");
		Организации.Свернуть("Организация");
		Если Организации.Количество() > 1 Тогда
			КлючевыеПоля.Добавить("Организация");
		КонецЕсли;
	КонецЕсли;	
	
	КлючевыеПоляСтрокой = СтрСоединить(КлючевыеПоля, ",");
	
	// Посчитаем, сколько всего записей по ключевым полям
	Ограничения = ДанныеПоДвижимомуИмуществу.Скопировать(,КлючевыеПоляСтрокой);
	Ограничения.Колонки.Добавить("Количество", ОбщегоНазначения.ОписаниеТипаЧисло(15, 0, ДопустимыйЗнак.Неотрицательный));
	Ограничения.ЗаполнитьЗначения(1, "Количество");
	Ограничения.Свернуть(КлючевыеПоляСтрокой, "Количество");
	
	Если КлючевыеПоляСтрокой <> "Регион" Тогда
		ДанныеПоДвижимомуИмуществу.Индексы.Добавить(КлючевыеПоляСтрокой);
	КонецЕсли;	
	
	Отбор = Новый Структура(КлючевыеПоляСтрокой);
	
	
	Для Каждого Ограничение Из Ограничения Цикл
		
		ЗаполнитьЗначенияСвойств(Отбор, Ограничение);
		СтрокиПоОграничению = ДанныеПоДвижимомуИмуществу.НайтиСтроки(Отбор);
		Предел = Цел(Ограничение.Количество * КоэффициентОграничения); // предельное количество строк по указанным ключевым полям
		
		// Обходим строки начиная с первой после достижения предела (индекс = Предел) до конца массива найденных строк.
		Для Инд = Предел По СтрокиПоОграничению.ВГраница() Цикл 
			СтрокаОС = СтрокиПоОграничению[Инд];
			СтрокаОС.ОсновноеСредство = АналитикаСвернутыхСтрок;
			СтрокаОС.ПредставлениеОС = АналитикаСвернутыхСтрокТекст;
		КонецЦикла;	
		
	КонецЦикла;	
	
	КолонкиСуммирования = Новый Массив;
	КолонкиСуммирования.Добавить("СреднегодоваяСтоимость");
	
	Для Месяц = 0 По 12 Цикл
		
		НомерМесяца = Месяц + 1;
									
		Если НомерМесяца = 13 Тогда
			Суффикс = "3112";
		Иначе
			Суффикс = "01" + Формат(НомерМесяца, "ЧЦ=2; ЧВН=; ЧФ=Ч");
		КонецЕсли;
		
		КолонкиСуммирования.Добавить("ОстаточнаяСтоимостьНа" + Суффикс);
				
	КонецЦикла;	

	ДанныеПоДвижимомуИмуществу.Свернуть("Организация, ОсновноеСредство, ПредставлениеОС, Регион", СтрСоединить(КолонкиСуммирования, ","));
	
КонецПроцедуры	

Функция ПредельноеКоличествоЗаписейРасшифровкиДвижимогоИмущества()

	Возврат 50000;

КонецФункции
 
#КонецОбласти

#Область ЗемельныйНалог

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаЗемельныйНалогФормаОтчета2011Кв1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_1", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020025003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020027003", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетЗемельныйНалогФормаОтчета2011Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	мДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	СтрокаСведений = "КППЮЛ,КодНО";
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация,,СтрокаСведений);
	КПП = СведенияОбОрганизации.КППЮЛ;
	КодНО = СведенияОбОрганизации.КодНО;
	
	КодНалоговогоОргана =  ПараметрыОтчета.КодНалоговогоОргана;
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	МассивНО = Новый Массив;
	Если НЕ ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	ИначеЕсли КодНалоговогоОргана = Организация.КодНалоговогоОргана Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	Иначе
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	КонецЕсли;
	
	
	// Выборка земельных участков и числа полных месяцев владения ими.
	// При этом если возникновение (прекращение) у налогоплательщика в течение налогового периода 
	// права собственности (постоянного (бессрочного) пользования, пожизненного наследуемого владения) 
	// на земельный участок (его долю) произошло до 15-го числа соответствующего месяца включительно, 
	// за полный месяц принимается месяц возникновения указанных прав. Если возникновение (прекращение)
	// указанных прав произошло после 15-го числа соответствующего месяца, за полный месяц принимается 
	// месяц прекращения указанных прав.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("НалоговыйОрган", МассивНО);
	
	Период = НачалоГода(мДатаНачалаПериодаОтчета);
	
	ТекстОбъединяющегоЗапроса = "";
	
	Пока Период <= мДатаКонцаПериодаОтчета Цикл
		
		Запрос.УстановитьПараметр("Период", Период);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫРАЗИТЬ(" + Формат(Период, "ДФ=MM") + " КАК ЧИСЛО) КАК НомерМесяца,
		|	РегистрацияЗемельныхУчастковСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	РегистрацияЗемельныхУчастковСрезПоследних.Период КАК ДатаРегистрацииЗемли,
		|	NULL КАК НалоговаяЛьготаПоНалоговойБазе,
		|	1 КАК КоличествоМесяцев,
		|	0 КАК КоличествоМесяцевПримененияЛьготы
		|ПОМЕСТИТЬ
		|	ВладениеЗемельнымиУчастками" + Формат(Период, "ДФ=MM") + "
		|ИЗ
		|	(ВЫБРАТЬ
		|		РегистрацияЗемельныхУчастковСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|		РегистрацияЗемельныхУчастковСрезПоследних.Период КАК Период
		|	ИЗ
		|		РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(
		|				ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ), ДЕНЬ, 14),
		|				Организация = &Организация) КАК РегистрацияЗемельныхУчастковСрезПоследних
		|	ГДЕ
		|		РегистрацияЗемельныхУчастковСрезПоследних.ВключатьВНалоговуюБазу = ИСТИНА
		|		И НалоговыйОрган В (&НалоговыйОрган)
		|
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		РегистрацияЗемельныхУчастков.ОсновноеСредство,
		|		РегистрацияЗемельныхУчастков.Период
		|	ИЗ
		|		РегистрСведений.РегистрацияЗемельныхУчастков КАК РегистрацияЗемельныхУчастков
		|	ГДЕ
		|		РегистрацияЗемельныхУчастков.Организация = &Организация
		|		И РегистрацияЗемельныхУчастков.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ), ДЕНЬ, 14)
		|		И РегистрацияЗемельныхУчастков.ВключатьВНалоговуюБазу = ИСТИНА
		|		И РегистрацияЗемельныхУчастков.НалоговыйОрган В (&НалоговыйОрган)
		|	) КАК РегистрацияЗемельныхУчастковСрезПоследних
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(" + Формат(Период, "ДФ=MM") + " КАК ЧИСЛО) КАК НомерМесяца,
		|	РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.ОсновноеСредство КАК ОсновноеСредство,
		|	РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.Период КАК ДатаРегистрацииЗемли,
		|	РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.НалоговаяЛьготаПоНалоговойБазе,
		|	0 КАК КоличествоМесяцев,
		|	1 КАК КоличествоМесяцевПримененияЛьготы
		|	ИЗ
		|		(ВЫБРАТЬ
		|			РегистрацияЗемельныхУчастковСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|			РегистрацияЗемельныхУчастковСрезПоследних.Период КАК Период,
		|			РегистрацияЗемельныхУчастковСрезПоследних.НалоговаяЛьготаПоНалоговойБазе
		|		ИЗ
		|			РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, -1), МЕСЯЦ),
		|					Организация = &Организация
		|						И НалоговыйОрган В (&НалоговыйОрган)) КАК РегистрацияЗемельныхУчастковСрезПоследних
		|		ГДЕ
		|			РегистрацияЗемельныхУчастковСрезПоследних.ВключатьВНалоговуюБазу = ИСТИНА
		|			И РегистрацияЗемельныхУчастковСрезПоследних.НалоговаяЛьготаПоНалоговойБазе <> ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеПрименяется)
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			РегистрацияЗемельныхУчастков.ОсновноеСредство,
		|			РегистрацияЗемельныхУчастков.Период,
		|			РегистрацияЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе
		|		ИЗ
		|			РегистрСведений.РегистрацияЗемельныхУчастков КАК РегистрацияЗемельныхУчастков
		|		ГДЕ
		|			РегистрацияЗемельныхУчастков.Организация = &Организация
		|			И РегистрацияЗемельныхУчастков.НалоговыйОрган В (&НалоговыйОрган)
		|			И РегистрацияЗемельныхУчастков.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
		|			И РегистрацияЗемельныхУчастков.ВключатьВНалоговуюБазу = ИСТИНА
		|			И РегистрацияЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе <> ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеПрименяется)
		|		) КАК РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам
		|";
		Запрос.Выполнить();
		
		ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
		                              |",
									  "ОБЪЕДИНИТЬ ВСЕ
									  |ВЫБРАТЬ *
		                              |")
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ПОМЕСТИТЬ ВладениеЗемельнымиУчастками
									  |",
									  "")
								  + "ИЗ ВладениеЗемельнымиУчастками" + Формат(Период, "ДФ=MM") + "
									|";
		
		Период = ДобавитьМесяц(Период, 1);
		
	КонецЦикла;
	
	Запрос.Текст = ТекстОбъединяющегоЗапроса;
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("Период", КонецГода(мДатаНачалаПериодаОтчета));
	Запрос.УстановитьПараметр("ДатаПодписи", ПараметрыОтчета.ДатаПодписи);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	|	МАКСИМУМ(НомерМесяца) КАК НомерМесяца, 
	|	ОсновноеСредство
	|ПОМЕСТИТЬ ВТ_НомераПоследнихМесяцев
	|ИЗ 
	|	ВладениеЗемельнымиУчастками 
	|ГДЕ 
	|	НЕ (НалоговаяЛьготаПоНалоговойБазе ЕСТЬ NULL) 
	|СГРУППИРОВАТЬ ПО 
	|	ОсновноеСредство
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОсновноеСредство,
	|	НомерМесяца,
	|	НалоговаяЛьготаПоНалоговойБазе
	|ПОМЕСТИТЬ ВТ_ВидыЛьгот
	|ИЗ 
	|	ВладениеЗемельнымиУчастками 
	|ГДЕ 
	|	НЕ (НалоговаяЛьготаПоНалоговойБазе ЕСТЬ NULL)
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВладениеЗемельнымиУчастками.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ВладениеЗемельнымиУчастками.КоличествоМесяцевПримененияЛьготы) КАК КоличествоМесяцевПримененияЛьготы
	|ПОМЕСТИТЬ ВТ_ПрименениеЛьготы
	|ИЗ
	|	ВладениеЗемельнымиУчастками
	|ГДЕ 
	|	НЕ (НалоговаяЛьготаПоНалоговойБазе ЕСТЬ NULL)
	|СГРУППИРОВАТЬ ПО
	|	ВладениеЗемельнымиУчастками.ОсновноеСредство,
	|	ВладениеЗемельнымиУчастками.НалоговаяЛьготаПоНалоговойБазе
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПрименениеЛьготы.ОсновноеСредство,
	|	ПрименениеЛьготы.КоличествоМесяцевПримененияЛьготы
	|ПОМЕСТИТЬ ВТ_Льготы
	|ИЗ
	|	ВТ_НомераПоследнихМесяцев КАК НомераПоследнихМесяцев
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВидыЛьгот КАК ВидыЛьгот
	|	ПО НомераПоследнихМесяцев.ОсновноеСредство = ВидыЛьгот.ОсновноеСредство
	|	И НомераПоследнихМесяцев.НомерМесяца = ВидыЛьгот.НомерМесяца
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПрименениеЛьготы КАК ПрименениеЛьготы
	|	ПО ВидыЛьгот.ОсновноеСредство = ПрименениеЛьготы.ОсновноеСредство
	|ИНДЕКСИРОВАТЬ ПО
	|	ПрименениеЛьготы.ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВладениеЗемельнымиУчастками.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(ВладениеЗемельнымиУчастками.ДатаРегистрацииЗемли) КАК ДатаРегистрацииЗемли,
	|	СУММА(ВладениеЗемельнымиУчастками.КоличествоМесяцев) КАК КоличествоМесяцевВладения
	|ПОМЕСТИТЬ ВТ_ВладениеУчастками
	|ИЗ
	|	ВладениеЗемельнымиУчастками
	|СГРУППИРОВАТЬ ПО
	|	ВладениеЗемельнымиУчастками.ОсновноеСредство
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВладениеУчастками.ОсновноеСредство,
	|	ВладениеУчастками.ДатаРегистрацииЗемли,
	|	ЕСТЬNULL(ВладениеУчастками.КоличествоМесяцевВладения, 0) КАК КоличествоМесяцевВладения,
	|	РегистрацияЗемельныхУчастковСрезПоследних.КодКатегорииЗемель,
	|	РегистрацияЗемельныхУчастковСрезПоследних.КадастровыйНомер,
	|	РегистрацияЗемельныхУчастковСрезПоследних.КБК КАК КБК,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.КадастроваяСтоимость, 0) КАК КадастроваяСтоимость,
	|	ВЫБОР
	|		КОГДА РегистрацияЗемельныхУчастковСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|		  ИЛИ РегистрацияЗемельныхУчастковСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО)
	|		ТОГДА 
	|			РегистрацияЗемельныхУчастковСрезПоследних.КодПоОКАТО
	|		ИНАЧЕ 
	|			ЕстьNULL(РегистрацияЗемельныхУчастковСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
	|	КОНЕЦ КАК КодПоОКАТО,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.ОбщаяСобственность, ЛОЖЬ) КАК ОбщаяСобственность,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.ДоляВПравеОбщейСобственностиЧислитель, 0) КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.ДоляВПравеОбщейСобственностиЗнаменатель, 0) КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.ЖилищноеСтроительство, ЛОЖЬ) КАК ЖилищноеСтроительство,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.ДатаНачалаПроектирования, ДАТАВРЕМЯ(1,1,1)) КАК ДатаНачалаПроектирования,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.ДатаРегистрацииПравНаОбъектНедвижимости, ДАТАВРЕМЯ(1,1,1)) КАК ДатаРегистрацииПравНаОбъектНедвижимости,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.НалоговаяСтавка, 0) КАК НалоговаяСтавка,
	|	РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.НалоговаяЛьготаПоНалоговойБазе,
	|	ЕСТЬNULL(Льготы.КоличествоМесяцевПримененияЛьготы, 0) КАК КоличествоМесяцевПримененияЛьготы,
	|	РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.ДоляНеОблагаемойНалогомПлощадиЧислитель, 0) КАК ДоляНеОблагаемойНалогомПлощадиЧислитель,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.ДоляНеОблагаемойНалогомПлощадиЗнаменатель, 0) КАК ДоляНеОблагаемойНалогомПлощадиЗнаменатель,
	|	РегистрацияЗемельныхУчастковСрезПоследних.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.УменьшениеНалоговойБазыПоСтатье391, ЛОЖЬ) КАК УменьшениеНалоговойБазыПоСтатье391,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.УменьшениеНалоговойБазыНаСумму, ЛОЖЬ) КАК УменьшениеНалоговойБазыНаСумму,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.НеОблагаемаяНалогомСумма, 0) КАК НеОблагаемаяНалогомСумма,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.СниженнаяНалоговаяСтавка, 0) КАК СниженнаяНалоговаяСтавка,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.ПроцентУменьшенияСуммыНалога, 0) КАК ПроцентУменьшенияСуммыНалога,
	|	ЕСТЬNULL(РегистрацияЗемельныхУчастковСрезПоследних.СуммаУменьшенияСуммыНалога, 0) КАК СуммаУменьшенияСуммыНалога
	|ИЗ
	|	ВТ_ВладениеУчастками КАК ВладениеУчастками
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Льготы КАК Льготы
	|	ПО ВладениеУчастками.ОсновноеСредство = Льготы.ОсновноеСредство
	|   ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(&Период, Организация = &Организация И ВключатьВНалоговуюБазу = ИСТИНА) КАК РегистрацияЗемельныхУчастковСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(&Период, Организация = &Организация И ВключатьВНалоговуюБазу = ИСТИНА И НалоговаяЛьготаПоНалоговойБазе <> ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеПрименяется)) КАК РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам
	|		ПО РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.ОсновноеСредство = РегистрацияЗемельныхУчастковСрезПоследних.ОсновноеСредство
	|		 И РегистрацияЗемельныхУчастковСрезПоследнихПоЛьготам.НалоговыйОрган В (&НалоговыйОрган)
	|	ПО РегистрацияЗемельныхУчастковСрезПоследних.ОсновноеСредство = ВладениеУчастками.ОсновноеСредство
	|	И РегистрацияЗемельныхУчастковСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
	|";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииЗемельныхУчастков();
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Отсутствуют данные о регистрации земельных участков в налоговом органе - ""%1"" на %2 для %3
			|%4'"), 
			?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане),РегистрацияВНалоговомОргане.Наименование,""),
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
 		Возврат;
		
	КонецЕсли;
	
	ВыборкаЗемельныхУчастков = РезультатЗапроса.Выбрать();
	
	
	Раздел2 = Контейнер.Раздел2[0].Данные[0].Значение;
	Для Каждого Показатель Из Раздел2 Цикл
		Раздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел2.Количество()>1 Цикл
		Контейнер.Раздел2.Удалить(1);
	КонецЦикла;
	
	ПериодОтчета = НачалоГода(мДатаНачалаПериодаОтчета);

	Количество = 0;
	Пока ВыборкаЗемельныхУчастков.Следующий() Цикл
		
		Если НЕ (ВыборкаЗемельныхУчастков.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись) Тогда
			Продолжить;
		КонецЕсли;
		
		Количество = Количество + 1;
		Если Количество > 1 Тогда
			
			СтруктураНовойТаблицы = Новый Структура();
			Для Каждого Показатель Из Раздел2 Цикл
				СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
			КонецЦикла;
			
			Контейнер.Раздел2.Добавить().Данные = Новый СписокЗначений();
			Контейнер.Раздел2[Количество-1].Данные.Добавить(СтруктураНовойТаблицы);
			Раздел2 = Контейнер.Раздел2[Количество-1].Данные[0].Значение;
				
		КонецЕсли;
		
		// Кадастровый номер.
		Раздел2.П000020000100 = ВыборкаЗемельныхУчастков.КадастровыйНомер;

		// КБК.
		Раздел2.П000020001003 = ВыборкаЗемельныхУчастков.КБК;
		
		// Код по ОКАТО.
		Раздел2.П000020002003 = ВыборкаЗемельныхУчастков.КодПоОКАТО;
		
		// Код категории земель.
		Раздел2.П000020003003 = ВыборкаЗемельныхУчастков.КодКатегорииЗемель;
		
		Если ВыборкаЗемельныхУчастков.ЖилищноеСтроительство Тогда
			
			Если ВыборкаЗемельныхУчастков.ДатаРегистрацииЗемли >= Дата(2008,1,1) Тогда
				
				Если ВыборкаЗемельныхУчастков.ДатаРегистрацииПравНаОбъектНедвижимости = Дата(1,1,1)
					ИЛИ ВыборкаЗемельныхУчастков.ДатаРегистрацииПравНаОбъектНедвижимости > ПериодОтчета Тогда
					
					ПериодПроектированияИСтроительства = ОпределитьФактическийСрокИспользования(ВыборкаЗемельныхУчастков.ДатаРегистрацииЗемли, ПериодОтчета) / 12;
					
					Если ПериодПроектированияИСтроительства > 3 Тогда
						// Период проектирования и строительства - свыше 3-х лет.
						Раздел2.П000020004003 = "2";
					Иначе
						// Период проектирования и строительства - 3 года.
						Раздел2.П000020004003 = "1";
					КонецЕсли;
					
				КонецЕсли;
				
			ИначеЕсли ВыборкаЗемельныхУчастков.ДатаНачалаПроектирования <> Дата(1,1,1) Тогда 
				
				Если ВыборкаЗемельныхУчастков.ДатаРегистрацииПравНаОбъектНедвижимости = Дата(1,1,1)
				   ИЛИ (НЕ (ВыборкаЗемельныхУчастков.ДатаРегистрацииПравНаОбъектНедвижимости = Дата(1,1,1))
						И НЕ (ВыборкаЗемельныхУчастков.ДатаРегистрацииПравНаОбъектНедвижимости < ПериодОтчета)) Тогда
					
					ПериодПроектированияИСтроительства = ОпределитьФактическийСрокИспользования(ВыборкаЗемельныхУчастков.ДатаНачалаПроектирования, ПериодОтчета) / 12;
					
					Если ПериодПроектированияИСтроительства > 3 Тогда
						// Период проектирования и строительства - свыше 3-х лет.
						Раздел2.П000020004003 = "2";
					Иначе
						// Период проектирования и строительства - 3 года.
						Раздел2.П000020004003 = "1";
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		// Кадастровая стоимость.
		Раздел2.П000020005003 = ВыборкаЗемельныхУчастков.КадастроваяСтоимость;
	
		// Доля в праве на земельный участок.
		Если ВыборкаЗемельныхУчастков.ОбщаяСобственность Тогда
			
			// Числитель.
			Раздел2.П000020006003_Числ = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЧислитель;
			
			// Знаменатель.
			Раздел2.П000020006003_Знам = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЗнаменатель;
		
		КонецЕсли;
		
		Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.УменьшениеНалоговойБазы Тогда

		
			Если ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыНаСумму Тогда
			
				// Код налоговой льготы - не облагаемая налогом сумма.
				Раздел2.П000020007003_КодЛьготы = "3022100";
				Раздел2П000020007003_Основание = "000000000000";
				
				// Не облагаемая налогом сумма.
				Раздел2.П000020008003 = ВыборкаЗемельныхУчастков.НеОблагаемаяНалогомСумма;
				
			КонецЕсли;
			
			Если ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыПоСтатье391 Тогда
			
				// Код налоговой льготы - не облагаемая налогом сумма на федеральном уровне.
				Раздел2П000020009003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391;
				
				// Не облагаемая налогом сумма на федеральном уровне (10 000 руб.).
				Раздел2.П000020010003 = 10000;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеОблагаемаяНалогомПлощадь Тогда
		
			// Код налоговой льготы - не облагаемая налогом площадь.
			Раздел2.П000020011003_КодЛьготы = "3022300";
			Раздел2.П000020011003_Основание = "000000000000";
			
			// Доля не облагаемой площади (простая дробь).
			
			// Числитель.
			Раздел2.П000020012003_Числ = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойНалогомПлощадиЧислитель;
			
			// Знаменатель.
			Раздел2.П000020012003_Знам = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойНалогомПлощадиЗнаменатель;
			
			// Количество полных месяцев пользования льготой.
			Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
			
		КонецЕсли;
		
		Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ОсвобождениеОтНалогообложенияМестное Тогда
		
			// Код налоговой льготы - освобождение от налогообложения.
			Раздел2.П000020020003_КодЛьготы = "3022400";
			Раздел2.П000020020003_Основание = "000000000000";
			
			// Количество полных месяцев пользования льготой.
			Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
			
		КонецЕсли;

		Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ОсвобождениеОтНалогообложенияПоСтатье395 Тогда
			
			// Код налоговой льготы - освобождение от налогообложения на федеральном уровне.
			Раздел2.П000020022003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395;
			
			// Количество полных месяцев пользования льготой.
			Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
			
		КонецЕсли;
		
		// Налоговая ставка.
		НалоговаяСтавка = ВыборкаЗемельныхУчастков.НалоговаяСтавка;
		
		Раздел2.П000020014003 = НалоговаяСтавка;
		
		// Количество полных месяцев владения земельным участком в течение налогового периода.
		Раздел2.П000020015003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения;
		
		
		КодНалоговойЛьготыВОтношенииСуммыНалога   = "";
		СуммаНалоговойЛьготыВОтношенииСуммыНалога = 0;
		
		ОсноваДляРасчетаНалоговойБазы = ВыборкаЗемельныхУчастков.КадастроваяСтоимость
			* ?(ВыборкаЗемельныхУчастков.ОбщаяСобственность, 
				ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЧислитель / ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЗнаменатель, 1);
		Строка080 = ?(ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.УменьшениеНалоговойБазы И ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыНаСумму,
						ВыборкаЗемельныхУчастков.НеОблагаемаяНалогомСумма, 0);
		Строка100 = ?(ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.УменьшениеНалоговойБазы И ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыПоСтатье391,
						10000, 0);
		Строка120 = ?(ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеОблагаемаяНалогомПлощадь И ВыборкаЗемельныхУчастков.ДоляНеОблагаемойНалогомПлощадиЧислитель <> 0,
						ВыборкаЗемельныхУчастков.ДоляНеОблагаемойНалогомПлощадиЧислитель/ВыборкаЗемельныхУчастков.ДоляНеОблагаемойНалогомПлощадиЗнаменатель, 0);
		Строка150 = ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения;
		Строка180 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
		ЧислоМесяцевВОтчетномПериоде = 12;
		Если Строка180 = 0 Тогда
			Строка190 = 1;
		Иначе
			ЧислоМесяцевИспользованияЛьготы = Строка150 - Строка180;
			Строка190 = Макс(ЧислоМесяцевИспользованияЛьготы / ЧислоМесяцевВОтчетномПериоде, 0);
			Строка190 = Окр(Строка190, 4);
		КонецЕсли;
		Если Строка080 <> 0 ИЛИ Строка100 <> 0 Тогда
			Строка130= Макс(ОсноваДляРасчетаНалоговойБазы - (Строка080 + Строка100), 0);
		ИначеЕсли Строка120 > 0 Тогда
			Строка130 = Макс((ОсноваДляРасчетаНалоговойБазы - (ОсноваДляРасчетаНалоговойБазы * Строка120 * (1 - Строка190))), 0);
		Иначе
			Строка130 = Макс(ОсноваДляРасчетаНалоговойБазы, 0);
		КонецЕсли;
		Строка140 = НалоговаяСтавка;
		Строка040 = Раздел2.П000020004003;
		Строка160 = Окр(Строка150 / ЧислоМесяцевВОтчетномПериоде, 4);
		ОсноваДляРасчетаСтроки170 = Окр(Строка130) * Строка140 * Строка160 / 100;
		Если Строка040 = "1" Тогда
			Строка170 = ОсноваДляРасчетаСтроки170 * 2;
		ИначеЕсли Строка040 = "2" Тогда
			Строка170 = ОсноваДляРасчетаСтроки170 * 4;
		Иначе
			Строка170 = ОсноваДляРасчетаСтроки170;
		КонецЕсли;
		Строка170 = Окр(Строка170, 2);
		
		КоэффициентК2 = Строка150 / ЧислоМесяцевВОтчетномПериоде;//160
		НалоговаяБаза = Строка130;//130
		СуммаНалога   = Строка170;//170

		Если ЗначениеЗаполнено(ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка) Тогда
			
			// Код налоговой льготы в виде снижения налоговой ставки.
			Раздел2.П000020026003_КодЛьготы = "3022500";
			Раздел2.П000020026003_Основание = "000000000000";
			
			Раздел2.П000020027003 = СуммаНалога - НалоговаяБаза * КоэффициентК2 * (ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка / 100);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога) 
		 ИЛИ ЗначениеЗаполнено(ВыборкаЗемельныхУчастков.СуммаУменьшенияСуммыНалога) Тогда
			
			// Код налоговой льготы в виде уменьшения суммы налога.
			Раздел2.П000020024003_КодЛьготы = "3022200";
			Раздел2.П000020024003_Основание = "000000000000";
			
			СуммаУменьшения = СуммаНалога * ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога / 100 // уменьшение в процентах.
			                + ВыборкаЗемельныхУчастков.СуммаУменьшенияСуммыНалога;                      // уменьшение на сумму.
			
			// Сумма налоговой льготы в виде уменьшения суммы налога и (или) снижения налоговой ставки.
			Раздел2.П000020025003 = СуммаУменьшения;
			
			
		КонецЕсли;
		
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаЗемельныйНалогФормаОтчета2013Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_2", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020025003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020027003", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетЗемельныйНалогФормаОтчета2013Кв4(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", 			ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",	НачалоДня(мДатаКонцаПериодаОтчета));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетЗемельногоНалога.ОсновноеСредство,
	|	РасчетЗемельногоНалога.ИФНС,
	|	РасчетЗемельногоНалога.КоличествоМесяцевВладения,
	|	РасчетЗемельногоНалога.КодКатегорииЗемель,
	|	РасчетЗемельногоНалога.СуммаНалогаКУплате,
	|	РасчетЗемельногоНалога.КадастровыйНомер,
	|	РасчетЗемельногоНалога.КБК,
	|	РасчетЗемельногоНалога.КадастроваяСтоимость,
	|	РасчетЗемельногоНалога.КодПоОКТМО,
	|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетЗемельногоНалога.ПериодСтроительства,
	|	РасчетЗемельногоНалога.НалоговаяСтавка,
	|	РасчетЗемельногоНалога.НалоговаяЛьготаПоНалоговойБазе,
	|	РасчетЗемельногоНалога.КоличествоМесяцевПримененияЛьготы,
	|	РасчетЗемельногоНалога.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	РасчетЗемельногоНалога.ДоляНеОблагаемойПлощадиЧислитель,
	|	РасчетЗемельногоНалога.ДоляНеОблагаемойПлощадиЗнаменатель,
	|	РасчетЗемельногоНалога.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	РасчетЗемельногоНалога.УменьшениеНалоговойБазыПоСтатье391,
	|	РасчетЗемельногоНалога.УменьшениеНалоговойБазыНаСумму,
	|	РасчетЗемельногоНалога.НеОблагаемаяНалогомСумма,
	|	РасчетЗемельногоНалога.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога,
	|	РасчетЗемельногоНалога.СуммаНалоговойЛьготыВВидеСниженияНалоговойСтавки,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей1Кв,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей2Кв,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей3Кв
	|ИЗ
	|	РегистрСведений.РасчетЗемельногоНалога КАК РасчетЗемельногоНалога
	|ГДЕ
	|	РасчетЗемельногоНалога.Организация = &Организация
	|	И РасчетЗемельногоНалога.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоЗемельномуНалогу = Новый ТаблицаЗначений;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовПоЗемельномуНалогу = Выборка.Выгрузить();
	Иначе
		ТаблицаРасчетовПоЗемельномуНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоЗемельномуНалогу(Организация, мДатаКонцаПериодаОтчета);
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовПоЗемельномуНалогу", ТаблицаРасчетовПоЗемельномуНалогу);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	ПОМЕСТИТЬ ВТ_ТаблицаРасчетовПоЗемельномуНалогу
	|	ИЗ &ТаблицаРасчетовПоЗемельномуНалогу КАК ТаблицаРасчетовПоЗемельномуНалогу";
	Запрос.Выполнить();
		
	НалоговыйОрган = ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	Запрос.УстановитьПараметр("НалоговыйОрган", НалоговыйОрган);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.ОсновноеСредство,
	|	ВложенныйЗапрос.КоличествоМесяцевВладения,
	|	ВложенныйЗапрос.КодКатегорииЗемель,
	|	ВложенныйЗапрос.КадастровыйНомер,
	|	ВложенныйЗапрос.КБК КАК КБК,
	|	ВложенныйЗапрос.КадастроваяСтоимость,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЧислитель,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ВложенныйЗапрос.ПериодСтроительства,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.НалоговаяЛьготаПоНалоговойБазе,
	|	ВложенныйЗапрос.КоличествоМесяцевПримененияЛьготы,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	ВложенныйЗапрос.ДоляНеОблагаемойПлощадиЧислитель,
	|	ВложенныйЗапрос.ДоляНеОблагаемойПлощадиЗнаменатель,
	|	ВложенныйЗапрос.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	ВложенныйЗапрос.УменьшениеНалоговойБазыПоСтатье391,
	|	ВложенныйЗапрос.УменьшениеНалоговойБазыНаСумму,
	|	ВложенныйЗапрос.НеОблагаемаяНалогомСумма,
	|	ВложенныйЗапрос.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.СуммаНалоговойЛьготыВВидеСниженияНалоговойСтавки,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	ВложенныйЗапрос.СуммаНалогаКУплате + ВложенныйЗапрос.СуммаАвансовыхПлатежей1Кв + ВложенныйЗапрос.СуммаАвансовыхПлатежей2Кв + ВложенныйЗапрос.СуммаАвансовыхПлатежей3Кв КАК СуммаИсчисленнаяКУплате
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоЗемельномуНалогу КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|ИТОГИ
	|	СУММА(СуммаАвансовыхПлатежей1Кв),
	|	СУММА(СуммаАвансовыхПлатежей2Кв),
	|	СУММА(СуммаАвансовыхПлатежей3Кв),
	|	СУММА(СуммаИсчисленнаяКУплате)
	|ПО
	|	КБК,
	|	КодПоОКТМО";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииЗемельныхУчастков();
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Отсутствуют данные о регистрации земельных участков в налоговом органе - ""%1"" на %2 для %3
			|%4'"), 
			?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане),РегистрацияВНалоговомОргане.Наименование,""),
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
 		Возврат;
		
	КонецЕсли;
	
	Раздел2 = Контейнер.Раздел2[0].Данные[0].Значение;
	Для Каждого Показатель Из Раздел2 Цикл
		Раздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел2.Количество()>1 Цикл
		Контейнер.Раздел2.Удалить(1);
	КонецЦикла;
	
	Раздел1 = Контейнер.Раздел1[0].Данные[0].Значение;
	Для Каждого Показатель Из Раздел1 Цикл
		Раздел1[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел1.Количество()>1 Цикл
		Контейнер.Раздел1.Удалить(1);
	КонецЦикла;
	           	
	ВыборкаЗемельныхУчастковКБК = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	НомерБлокаРаздела1			= 0;
	КоличествоБлоковРаздела1 	= 2;
	КоличествоРаздел2 = 0;
	
	Пока ВыборкаЗемельныхУчастковКБК.Следующий() Цикл
		
		ВыборкаЗемельныхУчастковОКАТО = ВыборкаЗемельныхУчастковКБК.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаЗемельныхУчастковОКАТО.Следующий() Цикл
			// Авансовые платежи по разделу 1
			Если НомерБлокаРаздела1 % КоличествоБлоковРаздела1 = 0 
				И НомерБлокаРаздела1 <> 0 Тогда
				
				Контейнер.Раздел1.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницыРаздел1 = Контейнер.Раздел1.Количество()-1;
			
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из Раздел1 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				Контейнер.Раздел1[НомерТекущейСтраницыРаздел1].Данные.Добавить(СтруктураНовойТаблицы);
				Раздел1 = Контейнер.Раздел1[НомерТекущейСтраницыРаздел1].Данные[0].Значение;

				НомерБлокаРаздела1 = 0;
				
			КонецЕсли;
			
			ИндексПараметраРаздела = НомерБлокаРаздела1 + 1;
			
			Раздел1["П000010001003" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.КБК;
			Раздел1["П000010002003" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.КодПоОКТМО;
			Раздел1["П000010002103" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаИсчисленнаяКУплате;
			
			Раздел1["П000010002303" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей1Кв;
			Раздел1["П000010002503" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей2Кв;
			Раздел1["П000010002703" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей3Кв;
			
			НомерБлокаРаздела1 = НомерБлокаРаздела1 + 1;
					
			ВыборкаЗемельныхУчастков = ВыборкаЗемельныхУчастковОКАТО.Выбрать();
			Пока ВыборкаЗемельныхУчастков.Следующий() Цикл
				
				КоличествоРаздел2 = КоличествоРаздел2 + 1;
				Если КоличествоРаздел2 > 1 Тогда
					
					СтруктураНовойТаблицы = Новый Структура();
					Для Каждого Показатель Из Раздел2 Цикл
						СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЦикла;
					
					Контейнер.Раздел2.Добавить().Данные = Новый СписокЗначений();
					Контейнер.Раздел2[КоличествоРаздел2-1].Данные.Добавить(СтруктураНовойТаблицы);
					Раздел2 = Контейнер.Раздел2[КоличествоРаздел2-1].Данные[0].Значение;
					
				КонецЕсли;
				
				// Кадастровый номер.
				Раздел2.П000020000100 = ВыборкаЗемельныхУчастков.КадастровыйНомер;
				
				// КБК.
				Раздел2.П000020001003 = ВыборкаЗемельныхУчастков.КБК;
				
				// Код по ОКТМО.
				Раздел2.П000020002003 = ВыборкаЗемельныхУчастков.КодПоОКТМО;
				
				// Код категории земель.
				Раздел2.П000020003003 = ВыборкаЗемельныхУчастков.КодКатегорииЗемель;
				
				Раздел2.П000020004003 = ВыборкаЗемельныхУчастков.ПериодСтроительства;
				
				// Кадастровая стоимость.
				Раздел2.П000020005003 = ВыборкаЗемельныхУчастков.КадастроваяСтоимость;
				
				// Доля в праве на земельный участок.
				
				// Числитель.
				Раздел2.П000020006003_Числ = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЧислитель;
				
				// Знаменатель.
				Раздел2.П000020006003_Знам = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЗнаменатель;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.УменьшениеНалоговойБазы Тогда
					
					
					Если ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыНаСумму Тогда
						
						// Код налоговой льготы - не облагаемая налогом сумма.
						Раздел2.П000020007003_КодЛьготы = "3022100";
						Раздел2П000020007003_Основание = "000000000000";
						
						// Не облагаемая налогом сумма.
						Раздел2.П000020008003 = ВыборкаЗемельныхУчастков.НеОблагаемаяНалогомСумма;
						
					КонецЕсли;
					
					Если ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыПоСтатье391 Тогда
						
						// Код налоговой льготы - не облагаемая налогом сумма на федеральном уровне.
						Раздел2П000020009003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391;
						
						// Не облагаемая налогом сумма на федеральном уровне (10 000 руб.).
						Раздел2.П000020010003 = 10000;
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеОблагаемаяНалогомПлощадь Тогда
					
					// Код налоговой льготы - не облагаемая налогом площадь.
					Раздел2.П000020011003_КодЛьготы = "3022300";
					Раздел2.П000020011003_Основание = "000000000000";
					
					// Доля не облагаемой площади (простая дробь).
					
					// Числитель.
					Раздел2.П000020012003_Числ = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойПлощадиЧислитель;
					
					// Знаменатель.
					Раздел2.П000020012003_Знам = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойПлощадиЗнаменатель;
					
					// Количество полных месяцев пользования льготой.
					Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ОсвобождениеОтНалогообложенияМестное Тогда
					
					// Код налоговой льготы - освобождение от налогообложения.
					Раздел2.П000020020003_КодЛьготы = "3022400";
					Раздел2.П000020020003_Основание = "000000000000";
					
					// Количество полных месяцев пользования льготой.
					Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ОсвобождениеОтНалогообложенияПоСтатье395 Тогда
					
					// Код налоговой льготы - освобождение от налогообложения на федеральном уровне.
					Раздел2.П000020022003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395;
					
					// Количество полных месяцев пользования льготой.
					Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				// Налоговая ставка.
				НалоговаяСтавка = ВыборкаЗемельныхУчастков.НалоговаяСтавка;
				
				Раздел2.П000020014003 = НалоговаяСтавка;
				
				// Количество полных месяцев владения земельным участком в течение налогового периода.
				Раздел2.П000020015003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения;
				
				Раздел2.П000020027003 = ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеСниженияНалоговойСтавки;
				
				Раздел2.П000020025003 = ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога;
			КонецЦикла;	
		КонецЦикла;
	КонецЦикла;	
	 	
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаЗемельныйНалогФормаОтчета2014Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_2", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_Процент", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_Сумма", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_Ставка", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетЗемельныйНалогФормаОтчета2014Кв4(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", 			ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",	НачалоДня(мДатаКонцаПериодаОтчета));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетЗемельногоНалога.ОсновноеСредство,
	|	РасчетЗемельногоНалога.ИФНС,
	|	РасчетЗемельногоНалога.КоличествоМесяцевВладения,
	|	РасчетЗемельногоНалога.КодКатегорииЗемель,
	|	РасчетЗемельногоНалога.СуммаНалогаКУплате,
	|	РасчетЗемельногоНалога.КадастровыйНомер,
	|	РасчетЗемельногоНалога.КБК,
	|	РасчетЗемельногоНалога.КадастроваяСтоимость,
	|	РасчетЗемельногоНалога.КодПоОКТМО,
	|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетЗемельногоНалога.ПериодСтроительства,
	|	РасчетЗемельногоНалога.НалоговаяСтавка,
	|	РасчетЗемельногоНалога.НалоговаяЛьготаПоНалоговойБазе,
	|	РасчетЗемельногоНалога.КоличествоМесяцевПримененияЛьготы,
	|	РасчетЗемельногоНалога.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	РасчетЗемельногоНалога.ДоляНеОблагаемойПлощадиЧислитель,
	|	РасчетЗемельногоНалога.ДоляНеОблагаемойПлощадиЗнаменатель,
	|	РасчетЗемельногоНалога.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	РасчетЗемельногоНалога.УменьшениеНалоговойБазыПоСтатье391,
	|	РасчетЗемельногоНалога.УменьшениеНалоговойБазыНаСумму,
	|	РасчетЗемельногоНалога.НеОблагаемаяНалогомСумма,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей1Кв,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей2Кв,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей3Кв,
	|	РасчетЗемельногоНалога.СниженнаяНалоговаяСтавка,
	|	РасчетЗемельногоНалога.ПроцентУменьшенияСуммыНалога,
	|	РасчетЗемельногоНалога.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога
	|ИЗ
	|	РегистрСведений.РасчетЗемельногоНалога КАК РасчетЗемельногоНалога
	|ГДЕ
	|	РасчетЗемельногоНалога.Организация = &Организация
	|	И РасчетЗемельногоНалога.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоЗемельномуНалогу = Новый ТаблицаЗначений;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовПоЗемельномуНалогу = Выборка.Выгрузить();
	Иначе
		ТаблицаРасчетовПоЗемельномуНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоЗемельномуНалогу(Организация, мДатаКонцаПериодаОтчета);
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовПоЗемельномуНалогу", ТаблицаРасчетовПоЗемельномуНалогу);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	ПОМЕСТИТЬ ВТ_ТаблицаРасчетовПоЗемельномуНалогу
	|	ИЗ &ТаблицаРасчетовПоЗемельномуНалогу КАК ТаблицаРасчетовПоЗемельномуНалогу";
	Запрос.Выполнить();
		
	НалоговыйОрган = ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	Запрос.УстановитьПараметр("НалоговыйОрган", НалоговыйОрган);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.ОсновноеСредство,
	|	ВложенныйЗапрос.КоличествоМесяцевВладения,
	|	ВложенныйЗапрос.КодКатегорииЗемель,
	|	ВложенныйЗапрос.КадастровыйНомер,
	|	ВложенныйЗапрос.КБК КАК КБК,
	|	ВложенныйЗапрос.КадастроваяСтоимость,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЧислитель,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ВложенныйЗапрос.ПериодСтроительства,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.НалоговаяЛьготаПоНалоговойБазе,
	|	ВложенныйЗапрос.КоличествоМесяцевПримененияЛьготы,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	ВложенныйЗапрос.ДоляНеОблагаемойПлощадиЧислитель,
	|	ВложенныйЗапрос.ДоляНеОблагаемойПлощадиЗнаменатель,
	|	ВложенныйЗапрос.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	ВложенныйЗапрос.УменьшениеНалоговойБазыПоСтатье391,
	|	ВложенныйЗапрос.УменьшениеНалоговойБазыНаСумму,
	|	ВложенныйЗапрос.НеОблагаемаяНалогомСумма,
	|	ВложенныйЗапрос.СниженнаяНалоговаяСтавка,
	|	ВложенныйЗапрос.ПроцентУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	ВложенныйЗапрос.СуммаНалогаКУплате + ВложенныйЗапрос.СуммаАвансовыхПлатежей1Кв + ВложенныйЗапрос.СуммаАвансовыхПлатежей2Кв + ВложенныйЗапрос.СуммаАвансовыхПлатежей3Кв КАК СуммаИсчисленнаяКУплате
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоЗемельномуНалогу КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|ИТОГИ
	|	СУММА(СуммаАвансовыхПлатежей1Кв),
	|	СУММА(СуммаАвансовыхПлатежей2Кв),
	|	СУММА(СуммаАвансовыхПлатежей3Кв),
	|	СУММА(СуммаИсчисленнаяКУплате)
	|ПО
	|	КБК,
	|	КодПоОКТМО";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииЗемельныхУчастков();
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Отсутствуют данные о регистрации земельных участков в налоговом органе - ""%1"" на %2 для %3
			|%4'"), 
			?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане),РегистрацияВНалоговомОргане.Наименование,""),
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
 		Возврат;
		
	КонецЕсли;
	
	Раздел2 = Контейнер.Раздел2[0].Данные[0].Значение;
	Для Каждого Показатель Из Раздел2 Цикл
		Раздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел2.Количество()>1 Цикл
		Контейнер.Раздел2.Удалить(1);
	КонецЦикла;
	
	Раздел1 = Контейнер.Раздел1[0].Данные[0].Значение;
	Для Каждого Показатель Из Раздел1 Цикл
		Раздел1[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел1.Количество()>1 Цикл
		Контейнер.Раздел1.Удалить(1);
	КонецЦикла;
	
	ВыборкаЗемельныхУчастковКБК = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	НомерБлокаРаздела1       = 0;
	КоличествоБлоковРаздела1 = 2;
	КоличествоРаздел2        = 0;
	
	Пока ВыборкаЗемельныхУчастковКБК.Следующий() Цикл
		
		ВыборкаЗемельныхУчастковОКАТО = ВыборкаЗемельныхУчастковКБК.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаЗемельныхУчастковОКАТО.Следующий() Цикл
			// Авансовые платежи по разделу 1
			Если НомерБлокаРаздела1 % КоличествоБлоковРаздела1 = 0
				И НомерБлокаРаздела1 <> 0 Тогда
				
				Контейнер.Раздел1.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницыРаздел1 = Контейнер.Раздел1.Количество()-1;
			
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из Раздел1 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				Контейнер.Раздел1[НомерТекущейСтраницыРаздел1].Данные.Добавить(СтруктураНовойТаблицы);
				Раздел1 = Контейнер.Раздел1[НомерТекущейСтраницыРаздел1].Данные[0].Значение;
				НомерБлокаРаздела1 = 0;
				
			КонецЕсли;
			
			ИндексПараметраРаздела = НомерБлокаРаздела1 + 1;
			
			Раздел1["П000010001003" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.КБК;
			Раздел1["П000010002003" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.КодПоОКТМО;
			Раздел1["П000010002103" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаИсчисленнаяКУплате;
			
			Раздел1["П000010002303" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей1Кв;
			Раздел1["П000010002503" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей2Кв;
			Раздел1["П000010002703" + "_" + ИндексПараметраРаздела] = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей3Кв;
			
			НомерБлокаРаздела1 = НомерБлокаРаздела1 + 1;
					
			ВыборкаЗемельныхУчастков = ВыборкаЗемельныхУчастковОКАТО.Выбрать();
			Пока ВыборкаЗемельныхУчастков.Следующий() Цикл
				
				КоличествоРаздел2 = КоличествоРаздел2 + 1;
				Если КоличествоРаздел2 > 1 Тогда
					
					СтруктураНовойТаблицы = Новый Структура();
					Для Каждого Показатель Из Раздел2 Цикл
						СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЦикла;
					
					Контейнер.Раздел2.Добавить().Данные = Новый СписокЗначений();
					Контейнер.Раздел2[КоличествоРаздел2-1].Данные.Добавить(СтруктураНовойТаблицы);
					Раздел2 = Контейнер.Раздел2[КоличествоРаздел2-1].Данные[0].Значение;
					
				КонецЕсли;
				
				// Кадастровый номер.
				Раздел2.П000020000100 = ВыборкаЗемельныхУчастков.КадастровыйНомер;
				
				// КБК.
				Раздел2.П000020001003 = ВыборкаЗемельныхУчастков.КБК;
				
				// Код по ОКТМО.
				Раздел2.П000020002003 = ВыборкаЗемельныхУчастков.КодПоОКТМО;
				
				// Код категории земель.
				Раздел2.П000020003003 = ВыборкаЗемельныхУчастков.КодКатегорииЗемель;
				
				Раздел2.П000020004003 = ВыборкаЗемельныхУчастков.ПериодСтроительства;
				
				// Кадастровая стоимость.
				Раздел2.П000020005003 = ВыборкаЗемельныхУчастков.КадастроваяСтоимость;
				
				// Доля в праве на земельный участок.
				
				// Числитель.
				Раздел2.П000020006003_Числ = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЧислитель;
				
				// Знаменатель.
				Раздел2.П000020006003_Знам = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЗнаменатель;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.УменьшениеНалоговойБазы Тогда
					
					
					Если ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыНаСумму Тогда
						
						// Код налоговой льготы - не облагаемая налогом сумма.
						Раздел2.П000020007003_КодЛьготы = "3022100";
						Раздел2.П000020007003_Основание = "000000000000";
						
						// Не облагаемая налогом сумма.
						Раздел2.П000020008003 = ВыборкаЗемельныхУчастков.НеОблагаемаяНалогомСумма;
						
					КонецЕсли;
					
					Если ВыборкаЗемельныхУчастков.УменьшениеНалоговойБазыПоСтатье391 Тогда
						
						// Код налоговой льготы - не облагаемая налогом сумма на федеральном уровне.
						Раздел2.П000020009003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391;
						
						// Не облагаемая налогом сумма на федеральном уровне (10 000 руб.).
						Раздел2.П000020010003 = 10000;
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеОблагаемаяНалогомПлощадь Тогда
					
					// Код налоговой льготы - не облагаемая налогом площадь.
					Раздел2.П000020011003_КодЛьготы = "3022300";
					Раздел2.П000020011003_Основание = "000000000000";
					
					// Доля не облагаемой площади (простая дробь).
					
					// Числитель.
					Раздел2.П000020012003_Числ = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойПлощадиЧислитель;
					
					// Знаменатель.
					Раздел2.П000020012003_Знам = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойПлощадиЗнаменатель;
					
					// Количество полных месяцев пользования льготой.
					Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ОсвобождениеОтНалогообложенияМестное Тогда
					
					// Код налоговой льготы - освобождение от налогообложения.
					Раздел2.П000020020003_КодЛьготы = "3022400";
					Раздел2.П000020020003_Основание = "000000000000";
					
					// Количество полных месяцев пользования льготой.
					Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ОсвобождениеОтНалогообложенияПоСтатье395 Тогда
					
					// Код налоговой льготы - освобождение от налогообложения на федеральном уровне.
					Раздел2.П000020022003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395;
					
					// Количество полных месяцев пользования льготой.
					Раздел2.П000020018003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				// Налоговая ставка.
				НалоговаяСтавка = ВыборкаЗемельныхУчастков.НалоговаяСтавка;
				
				Раздел2.П000020014003 = НалоговаяСтавка;
				
				// Количество полных месяцев владения земельным участком в течение налогового периода.
				Раздел2.П000020015003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения;
				
				Если ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога > 0 
					ИЛИ ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога > 0 Тогда
					
					Раздел2.П000020024003_КодЛьготы = "3022200";
					Раздел2.П000020024003_Основание = "000000000000";
					
					Если ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога > 0 Тогда
						Раздел2.П000020024003_Процент = ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога;
					Иначе
						Раздел2.П000020024003_Сумма = ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога;
					КонецЕсли;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка > 0 Тогда
					
					Раздел2.П000020026003_КодЛьготы = "3022500";
					Раздел2.П000020026003_Основание = "000000000000";
					
					Раздел2.П000020026003_Ставка = ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка;
					
				КонецЕсли;
				
			КонецЦикла;	
		КонецЦикла;
	КонецЦикла;	
	 	
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаЗемельныйНалогФормаОтчета2017Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020016003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003_Процент", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_КодЛьготы", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетЗемельныйНалогФормаОтчета2017Кв4(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", 			ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",	НачалоДня(мДатаКонцаПериодаОтчета));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетЗемельногоНалога.ОсновноеСредство,
	|	РасчетЗемельногоНалога.ИФНС,
	|	РасчетЗемельногоНалога.КоличествоМесяцевВладения,
	|	РасчетЗемельногоНалога.КодКатегорииЗемель,
	|	РасчетЗемельногоНалога.СуммаНалогаКУплате,
	|	РасчетЗемельногоНалога.КадастровыйНомер,
	|	РасчетЗемельногоНалога.КБК,
	|	РасчетЗемельногоНалога.КадастроваяСтоимость,
	|	РасчетЗемельногоНалога.КодПоОКТМО,
	|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетЗемельногоНалога.ПериодСтроительства,
	|	РасчетЗемельногоНалога.НалоговаяСтавка,
	|	РасчетЗемельногоНалога.НалоговаяЛьготаПоНалоговойБазе,
	|	РасчетЗемельногоНалога.КоличествоМесяцевПримененияЛьготы,
	|	РасчетЗемельногоНалога.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	РасчетЗемельногоНалога.ДоляНеОблагаемойПлощадиЧислитель,
	|	РасчетЗемельногоНалога.ДоляНеОблагаемойПлощадиЗнаменатель,
	|	РасчетЗемельногоНалога.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	РасчетЗемельногоНалога.НеОблагаемаяНалогомСумма,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей1Кв,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей2Кв,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей3Кв,
	|	РасчетЗемельногоНалога.СниженнаяНалоговаяСтавка,
	|	РасчетЗемельногоНалога.ПроцентУменьшенияСуммыНалога,
	|	РасчетЗемельногоНалога.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога
	|ИЗ
	|	РегистрСведений.РасчетЗемельногоНалога КАК РасчетЗемельногоНалога
	|ГДЕ
	|	РасчетЗемельногоНалога.Организация = &Организация
	|	И РасчетЗемельногоНалога.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоЗемельномуНалогу = Новый ТаблицаЗначений;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовПоЗемельномуНалогу = Выборка.Выгрузить();
	Иначе
		ТаблицаРасчетовПоЗемельномуНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоЗемельномуНалогу(Организация, мДатаКонцаПериодаОтчета);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовПоЗемельномуНалогу", ТаблицаРасчетовПоЗемельномуНалогу);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	ПОМЕСТИТЬ ВТ_ТаблицаРасчетовПоЗемельномуНалогу
	|	ИЗ &ТаблицаРасчетовПоЗемельномуНалогу КАК ТаблицаРасчетовПоЗемельномуНалогу";
	Запрос.Выполнить();
		
	НалоговыйОрган = ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	Запрос.УстановитьПараметр("НалоговыйОрган", НалоговыйОрган);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.ОсновноеСредство,
	|	ВложенныйЗапрос.КоличествоМесяцевВладения,
	|	ВложенныйЗапрос.КодКатегорииЗемель,
	|	ВложенныйЗапрос.КадастровыйНомер,
	|	ВложенныйЗапрос.КБК КАК КБК,
	|	ВложенныйЗапрос.КадастроваяСтоимость,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЧислитель,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ВложенныйЗапрос.ПериодСтроительства,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.НалоговаяЛьготаПоНалоговойБазе,
	|	ВложенныйЗапрос.КоличествоМесяцевПримененияЛьготы,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	ВложенныйЗапрос.ДоляНеОблагаемойПлощадиЧислитель,
	|	ВложенныйЗапрос.ДоляНеОблагаемойПлощадиЗнаменатель,
	|	ВложенныйЗапрос.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	ВложенныйЗапрос.НеОблагаемаяНалогомСумма,
	|	ВложенныйЗапрос.СниженнаяНалоговаяСтавка,
	|	ВложенныйЗапрос.ПроцентУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	ВложенныйЗапрос.СуммаНалогаКУплате + ВложенныйЗапрос.СуммаАвансовыхПлатежей1Кв + ВложенныйЗапрос.СуммаАвансовыхПлатежей2Кв + ВложенныйЗапрос.СуммаАвансовыхПлатежей3Кв КАК СуммаИсчисленнаяКУплате
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоЗемельномуНалогу КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|ИТОГИ
	|	СУММА(СуммаАвансовыхПлатежей1Кв),
	|	СУММА(СуммаАвансовыхПлатежей2Кв),
	|	СУММА(СуммаАвансовыхПлатежей3Кв),
	|	СУММА(СуммаИсчисленнаяКУплате)
	|ПО
	|	КБК,
	|	КодПоОКТМО";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииЗемельныхУчастков();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Отсутствуют данные о регистрации земельных участков в налоговом органе - ""%1"" на %2 для %3
			|%4'"), 
			?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане),РегистрацияВНалоговомОргане.Наименование,""),
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета),
			КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина"),
			ПараметрыОтчета.Организация, ПутьКРегистру));
		Возврат;
		
	КонецЕсли;
	
	Раздел2 = Контейнер.Раздел2.Строки[0].Данные;
	Для Каждого Показатель Из Раздел2 Цикл
		Раздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел2.Строки.Количество() > 1 Цикл
		Контейнер.Раздел2.Строки.Удалить(1);
	КонецЦикла;
	
	Раздел1 = Контейнер.Раздел1.Строки[0].ДанныеМногострочныхЧастей.П0000100.Строки[0].Данные;
	Для Каждого Показатель Из Раздел1 Цикл
		Раздел1[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел1.Строки[0].ДанныеМногострочныхЧастей.П0000100.Строки.Количество() > 1 Цикл
		Контейнер.Раздел1.Строки[0].ДанныеМногострочныхЧастей.П0000100.Строки.Удалить(1);
	КонецЦикла;
	
	ВыборкаЗемельныхУчастковКБК = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйБлокРаздела1 = Истина;
	КоличествоРаздел2  = 0;
	
	Пока ВыборкаЗемельныхУчастковКБК.Следующий() Цикл
		
		ВыборкаЗемельныхУчастковОКАТО = ВыборкаЗемельныхУчастковКБК.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаЗемельныхУчастковОКАТО.Следующий() Цикл
			
			Если Не ПервыйБлокРаздела1 Тогда
				
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из Раздел1 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				НовыйБлокРаздела1 = Контейнер.Раздел1.Строки[0].ДанныеМногострочныхЧастей.П0000100.Строки.Добавить();
				НовыйБлокРаздела1.Данные = СтруктураНовойТаблицы;
				НовыйБлокРаздела1.ДанныеМногострочныхЧастей = Новый Структура;
				
				Раздел1 = НовыйБлокРаздела1.Данные;
				
			КонецЕсли;
			
			ПервыйБлокРаздела1 = Ложь;
			
			Раздел1.П000010001003 = ВыборкаЗемельныхУчастковОКАТО.КБК;
			Раздел1.П000010002003 = ВыборкаЗемельныхУчастковОКАТО.КодПоОКТМО;
			Раздел1.П000010002103 = ВыборкаЗемельныхУчастковОКАТО.СуммаИсчисленнаяКУплате;
			Раздел1.П000010002303 = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей1Кв;
			Раздел1.П000010002503 = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей2Кв;
			Раздел1.П000010002703 = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей3Кв;
			
			ВыборкаЗемельныхУчастков = ВыборкаЗемельныхУчастковОКАТО.Выбрать();
			Пока ВыборкаЗемельныхУчастков.Следующий() Цикл
				
				КоличествоРаздел2 = КоличествоРаздел2 + 1;
				Если КоличествоРаздел2 > 1 Тогда
					
					СтруктураНовойТаблицы = Новый Структура();
					Для Каждого Показатель Из Раздел2 Цикл
						СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЦикла;
					
					НоваяСтраницаРаздела2 = Контейнер.Раздел2.Строки.Добавить();
					
					НоваяСтраницаРаздела2.Данные = СтруктураНовойТаблицы;
					НоваяСтраницаРаздела2.ДанныеМногострочныхЧастей = Новый Структура;
					
					Раздел2 = НоваяСтраницаРаздела2.Данные;
					
				КонецЕсли;
				
				Раздел2.П000020000100 = ВыборкаЗемельныхУчастков.КадастровыйНомер;
				Раздел2.П000020001003 = ВыборкаЗемельныхУчастков.КБК;
				Раздел2.П000020002003 = ВыборкаЗемельныхУчастков.КодПоОКТМО;
				Раздел2.П000020003003 = ВыборкаЗемельныхУчастков.КодКатегорииЗемель;
				Раздел2.П000020004003 = ВыборкаЗемельныхУчастков.ПериодСтроительства;
				Раздел2.П000020005003 = ВыборкаЗемельныхУчастков.КадастроваяСтоимость;
				Раздел2.П000020006003_Числ = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЧислитель;
				Раздел2.П000020006003_Знам = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЗнаменатель;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = 
				     Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ОсвобождениеОтНалогообложенияПоСтатье395 Тогда
					
					Раздел2.П000020020003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395;
					Раздел2.П000020016003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				ИначеЕсли ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = 
				          Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ОсвобождениеОтНалогообложенияМестное Тогда
					
					Раздел2.П000020018003_КодЛьготы = "3022400";
					Раздел2.П000020016003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				ИначеЕсли ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = 
				          Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.УменьшениеНалоговойБазы Тогда
					
					Раздел2.П000020007003_КодЛьготы = "3022100";
					Раздел2.П000020008003 = ВыборкаЗемельныхУчастков.НеОблагаемаяНалогомСумма;
					
				ИначеЕсли ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = 
				          Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеОблагаемаяНалогомПлощадь Тогда
					
					Раздел2.П000020009003_КодЛьготы = "3022300";
					Раздел2.П000020010003_Числ = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойПлощадиЧислитель;
					Раздел2.П000020010003_Знам = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойПлощадиЗнаменатель;
					Раздел2.П000020016003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				Если ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка > 0 Тогда
					Раздел2.П000020012003 = ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка;
					Раздел2.П000020024003_КодЛьготы = "3022500";
				Иначе
					Раздел2.П000020012003 = ВыборкаЗемельныхУчастков.НалоговаяСтавка;
				КонецЕсли;
				
				Раздел2.П000020013003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения;
				
				Если ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога > 0 
					ИЛИ ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога > 0 Тогда
					
					Раздел2.П000020022003_КодЛьготы = "3022200";
					
					Если ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога > 0 Тогда
						Раздел2.П000020022003_Процент = ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога;
					Иначе
						Раздел2.П000020023003 = ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(Контейнер, ПараметрыОтчета.АдресВоВременномХранилище);
	
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаЗемельныйНалогФормаОтчета2018(ПоказателиОтчета, ИДРедакцииОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014503", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020016003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003_Процент", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_КодЛьготы", Истина, Ложь);
	Если ИДРедакцииОтчета = "ФормаОтчета2018Кв3" Тогда
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_ПониженнаяСтавка", Истина, Ложь);
	КонецЕсли;
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетЗемельныйНалогФормаОтчета2018(ПараметрыОтчета, Контейнер, ИДРедакцииОтчета) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	
	КодНалоговогоОргана = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана),
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП = ПараметрыОтчета.КПП;
	
	НалоговыйОрган = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = ПараметрыОтчета.мДатаКонцаПериодаОтчета;

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",         ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета", НачалоДня(мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("НалоговыйОрган",      НалоговыйОрган);
	
	// СуммаНалогаКУплате не уменьшена на сумму освобождения, поэтому при расчете СуммаИсчисленнаяКУплате вычитаем сумму освобождения.
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетЗемельногоНалога.ОсновноеСредство КАК ОсновноеСредство,
	|	РасчетЗемельногоНалога.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	РасчетЗемельногоНалога.КоличествоМесяцевИспользования КАК КоличествоМесяцевИспользования,
	|	РасчетЗемельногоНалога.КодКатегорииЗемель КАК КодКатегорииЗемель,
	|	РасчетЗемельногоНалога.КадастровыйНомер КАК КадастровыйНомер,
	|	РасчетЗемельногоНалога.КБК КАК КБК,
	|	РасчетЗемельногоНалога.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	РасчетЗемельногоНалога.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетЗемельногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетЗемельногоНалога.ПериодСтроительства КАК ПериодСтроительства,
	|	РасчетЗемельногоНалога.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетЗемельногоНалога.НалоговаяЛьготаПоНалоговойБазе КАК НалоговаяЛьготаПоНалоговойБазе,
	|	РасчетЗемельногоНалога.КоличествоМесяцевПримененияЛьготы КАК КоличествоМесяцевПримененияЛьготы,
	|	РасчетЗемельногоНалога.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395 КАК КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	РасчетЗемельногоНалога.ДоляНеоблагаемойПлощадиЧислитель КАК ДоляНеоблагаемойПлощадиЧислитель,
	|	РасчетЗемельногоНалога.ДоляНеоблагаемойПлощадиЗнаменатель КАК ДоляНеоблагаемойПлощадиЗнаменатель,
	|	РасчетЗемельногоНалога.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391 КАК КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	РасчетЗемельногоНалога.НеОблагаемаяНалогомСумма КАК НеОблагаемаяНалогомСумма,
	|	РасчетЗемельногоНалога.СниженнаяНалоговаяСтавка КАК СниженнаяНалоговаяСтавка,
	|	РасчетЗемельногоНалога.ПроцентУменьшенияСуммыНалога КАК ПроцентУменьшенияСуммыНалога,
	|	РасчетЗемельногоНалога.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога КАК СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога,
	|	РасчетЗемельногоНалога.СуммаОсвобожденияОтУплатыНалога КАК СуммаОсвобожденияОтУплатыНалога,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	РасчетЗемельногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	РасчетЗемельногоНалога.СуммаНалогаКУплате + РасчетЗемельногоНалога.СуммаАвансовыхПлатежей1Кв + РасчетЗемельногоНалога.СуммаАвансовыхПлатежей2Кв 
	|	+ РасчетЗемельногоНалога.СуммаАвансовыхПлатежей3Кв - РасчетЗемельногоНалога.СуммаОсвобожденияОтУплатыНалога КАК СуммаИсчисленнаяКУплате
	|ИЗ
	|	РегистрСведений.РасчетЗемельногоНалога КАК РасчетЗемельногоНалога
	|ГДЕ
	|	РасчетЗемельногоНалога.Организация = &Организация
	|	И РасчетЗемельногоНалога.ПериодРасчета = &ДатаОкончанияОтчета
	|	И РасчетЗемельногоНалога.ИФНС = &НалоговыйОрган
	|ИТОГИ
	|	СУММА(СуммаАвансовыхПлатежей1Кв),
	|	СУММА(СуммаАвансовыхПлатежей2Кв),
	|	СУММА(СуммаАвансовыхПлатежей3Кв),
	|	СУММА(СуммаИсчисленнаяКУплате)
	|ПО
	|	КБК,
	|	КодПоОКТМО";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииЗемельныхУчастков();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Проверьте данные о регистрации земельных участков %1
			| и выполнение регламентной операции Расчет земельного налога за %2'"),
			ПутьКРегистру, Формат(ПараметрыОтчета.мДатаКонцаПериодаОтчета, "ДФ='MMMM yyyy'")));
		Возврат;
		
	КонецЕсли;
	
	Раздел2 = Контейнер.Раздел2.Строки[0].Данные;
	Для Каждого Показатель Из Раздел2 Цикл
		Раздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел2.Строки.Количество() > 1 Цикл
		Контейнер.Раздел2.Строки.Удалить(1);
	КонецЦикла;
	
	Раздел1 = Контейнер.Раздел1.Строки[0].ДанныеМногострочныхЧастей.П0000100.Строки[0].Данные;
	Для Каждого Показатель Из Раздел1 Цикл
		Раздел1[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Контейнер.Раздел1.Строки[0].ДанныеМногострочныхЧастей.П0000100.Строки.Количество() > 1 Цикл
		Контейнер.Раздел1.Строки[0].ДанныеМногострочныхЧастей.П0000100.Строки.Удалить(1);
	КонецЦикла;
	
	ВыборкаЗемельныхУчастковКБК = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйБлокРаздела1 = Истина;
	КоличествоРаздел2  = 0;
	
	ПрименяетсяОсвобождениеОтНалога = Ложь;
	Если НалоговыйУчет.ДеятельностьОтнесенаКПострадавшимОтКоронавируса(Организация) Тогда
		ПериодОсвобожденияОтНалогов = НалоговыйУчет.ПериодОсвобожденияОтНалоговПострадавшимОтКоронавируса();
		ПрименяетсяОсвобождениеОтНалога = (Год(ПериодОсвобожденияОтНалогов.Конец) = Год(мДатаКонцаПериодаОтчета));
	КонецЕсли;	
	
	// В 2020 году для некоторых НКО предусмотрены особые коды льгот
	ЭтоНекоммерческаяОрганизация = Справочники.Организации.ЭтоНекоммерческаяОрганизация(Организация);
	
	Пока ВыборкаЗемельныхУчастковКБК.Следующий() Цикл
		
		ВыборкаЗемельныхУчастковОКАТО = ВыборкаЗемельныхУчастковКБК.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаЗемельныхУчастковОКАТО.Следующий() Цикл
			
			Если Не ПервыйБлокРаздела1 Тогда
				
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из Раздел1 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				НовыйБлокРаздела1 = Контейнер.Раздел1.Строки[0].ДанныеМногострочныхЧастей.П0000100.Строки.Добавить();
				НовыйБлокРаздела1.Данные = СтруктураНовойТаблицы;
				НовыйБлокРаздела1.ДанныеМногострочныхЧастей = Новый Структура;
				
				Раздел1 = НовыйБлокРаздела1.Данные;
				
			КонецЕсли;
			
			ПервыйБлокРаздела1 = Ложь;
			
			Раздел1.П000010001003 = ВыборкаЗемельныхУчастковОКАТО.КБК;
			Раздел1.П000010002003 = ВыборкаЗемельныхУчастковОКАТО.КодПоОКТМО;
			Раздел1.П000010002103 = ВыборкаЗемельныхУчастковОКАТО.СуммаИсчисленнаяКУплате;
			Раздел1.П000010002303 = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей1Кв;
			Раздел1.П000010002503 = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей2Кв;
			Раздел1.П000010002703 = ВыборкаЗемельныхУчастковОКАТО.СуммаАвансовыхПлатежей3Кв;
			
			ВыборкаЗемельныхУчастков = ВыборкаЗемельныхУчастковОКАТО.Выбрать();
			Пока ВыборкаЗемельныхУчастков.Следующий() Цикл
				
				КоличествоРаздел2 = КоличествоРаздел2 + 1;
				Если КоличествоРаздел2 > 1 Тогда
					
					СтруктураНовойТаблицы = Новый Структура();
					Для Каждого Показатель Из Раздел2 Цикл
						СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЦикла;
					
					НоваяСтраницаРаздела2 = Контейнер.Раздел2.Строки.Добавить();
					
					НоваяСтраницаРаздела2.Данные = СтруктураНовойТаблицы;
					НоваяСтраницаРаздела2.ДанныеМногострочныхЧастей = Новый Структура;
					
					Раздел2 = НоваяСтраницаРаздела2.Данные;
					
				КонецЕсли;
				
				Раздел2.П000020000100 = ВыборкаЗемельныхУчастков.КадастровыйНомер;
				Раздел2.П000020001003 = ВыборкаЗемельныхУчастков.КБК;
				Раздел2.П000020002003 = ВыборкаЗемельныхУчастков.КодПоОКТМО;
				Раздел2.П000020003003 = ВыборкаЗемельныхУчастков.КодКатегорииЗемель;
				Раздел2.П000020004003 = ВыборкаЗемельныхУчастков.ПериодСтроительства;
				Раздел2.П000020005003 = ВыборкаЗемельныхУчастков.КадастроваяСтоимость;
				Раздел2.П000020006003_Числ = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЧислитель;
				Раздел2.П000020006003_Знам = ВыборкаЗемельныхУчастков.ДоляВПравеОбщейСобственностиЗнаменатель;
				
				Если ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = 
				     Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ОсвобождениеОтНалогообложенияПоСтатье395 Тогда
					
					Раздел2.П000020020003 = ВыборкаЗемельныхУчастков.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395;
					Раздел2.П000020016003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				ИначеЕсли ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = 
				          Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ОсвобождениеОтНалогообложенияМестное Тогда
					
					Раздел2.П000020018003_КодЛьготы = "3022400";
					Раздел2.П000020016003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				ИначеЕсли ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = 
				          Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.УменьшениеНалоговойБазы Тогда
					
					Раздел2.П000020007003_КодЛьготы = "3022100";
					Раздел2.П000020008003 = ВыборкаЗемельныхУчастков.НеОблагаемаяНалогомСумма;
					
				ИначеЕсли ВыборкаЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазе = 
				          Перечисления.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеОблагаемаяНалогомПлощадь Тогда
					
					Раздел2.П000020009003_КодЛьготы = "3022300";
					Раздел2.П000020010003_Числ = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойПлощадиЧислитель;
					Раздел2.П000020010003_Знам = ВыборкаЗемельныхУчастков.ДоляНеОблагаемойПлощадиЗнаменатель;
					Раздел2.П000020016003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевПримененияЛьготы;
					
				КонецЕсли;
				
				Раздел2.П000020012003 = ВыборкаЗемельныхУчастков.НалоговаяСтавка;
				
				Если ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка > 0 Тогда
					Если ИДРедакцииОтчета = "ФормаОтчета2018Кв1" Тогда
						Раздел2.П000020012003 = ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка;
					ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2018Кв3" Тогда
						Раздел2.П000020024003_ПониженнаяСтавка = ВыборкаЗемельныхУчастков.СниженнаяНалоговаяСтавка;
					КонецЕсли;
					Раздел2.П000020024003_КодЛьготы = "3022500";
				КонецЕсли;
				
				Раздел2.П000020013003 = ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения;
				
				Если ВыборкаЗемельныхУчастков.КоличествоМесяцевИспользования <> ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения
				   И ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения <> 0 Тогда
					Раздел2.П000020014503 = Окр(ВыборкаЗемельныхУчастков.КоличествоМесяцевИспользования / ВыборкаЗемельныхУчастков.КоличествоМесяцевВладения, 4);
				КонецЕсли;
				
				// При освобождении организации от уплаты налога за 2-й квартал 2020 года необходимо использовать особые коды льгот
				// ( см. письмо ФНС от 10.06.2020 № БС-4-21/9576@ - далее Письмо)				
				Если ПрименяетсяОсвобождениеОтНалога И 
					(ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога > 0 
					ИЛИ ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога > 0) Тогда
					// Абз. 2 п.2 Письма: "Если организация освобождается от [уплаты налога за 2-й квартал 2020 года] ... 
					// и [для организации]... нормативным правовым актом представительного органа муниципального образования ... 
					// установлена налоговая льгота в виде уменьшения суммы земельного налога, подлежащей уплате в бюджет, то
					// в первой части показателя по строке с кодом 220 ... указывается [код]..."
					Если ЭтоНекоммерческаяОрганизация Тогда
						// ... 3021506 (код льготы для социально-ориентированных НКО - на данный момент опубликован только реестр таких НКО)
						Раздел2.П000020022003_КодЛьготы = "3021506";
					Иначе
						// ... 3021505 (если организация не является НКО)
						Раздел2.П000020022003_КодЛьготы = "3021505";
					КонецЕсли;	
					// "...по строке с кодом 230 ... указывается сумма налоговой льготы в рублях (в том числе с учетом суммы авансового платежа
					// за период владения объектом налогообложения с 1 апреля по 30 июня 2020 года)"
					Раздел2.П000020023003 = ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога + ВыборкаЗемельныхУчастков.СуммаОсвобожденияОтУплатыНалога;
				ИначеЕсли ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога > 0 
					ИЛИ ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога > 0 Тогда
					Раздел2.П000020022003_КодЛьготы = "3022200";
					Если ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога > 0 Тогда
						Раздел2.П000020022003_Процент = ВыборкаЗемельныхУчастков.ПроцентУменьшенияСуммыНалога;
					Иначе
						Раздел2.П000020023003 = ВыборкаЗемельныхУчастков.СуммаНалоговойЛьготыВВидеУменьшенияСуммыНалога;
					КонецЕсли;
				ИначеЕсли ПрименяетсяОсвобождениеОтНалога Тогда
					// Абз. 1 п.2 Письма: "Если организация освобождается от [уплаты налога за 2-й квартал 2020 года] ..., то
					// в первой части показателя по строке с кодом 220 ... указывается [код]..."
					Если ЭтоНекоммерческаяОрганизация Тогда
						// ... 3021502 (код льготы для социально-ориентированных НКО - на данный момент опубликован только реестр таких НКО)
						Раздел2.П000020022003_КодЛьготы = "3021502";
					Иначе
						// ... 3021501 (если организация не является НКО)
						Раздел2.П000020022003_КодЛьготы = "3021501";
					КонецЕсли;	
					// "...по строке с кодом 230 ... указывается сумма налоговой льготы в рублях"
					Раздел2.П000020023003 = ВыборкаЗемельныхУчастков.СуммаОсвобожденияОтУплатыНалога;
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(Контейнер, ПараметрыОтчета.АдресВоВременномХранилище);
	
КонецПроцедуры

#КонецОбласти

#Область ТранспортныйНалог

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2007Кв1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетТранспортныйНалогФормаОтчета2007Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыОтчета.Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана =  ПараметрыОтчета.КодНалоговогоОргана;
	КПП                 = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	мДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	МассивНО = Новый Массив;
	Если НЕ ЗначениеЗаполнено(КодНалоговогоОргана) Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	ИначеЕсли КодНалоговогоОргана = Организация.РегистрацияВНалоговомОргане.Код Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	Иначе
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("НалоговыйОрган", МассивНО);
	
	ТекстОбъединяющегоЗапроса = "";
	
	Период = мДатаНачалаПериодаОтчета;
	
	Пока Период <= мДатаКонцаПериодаОтчета Цикл
		
		Запрос.УстановитьПараметр("Период", Период);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	СУММА(РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу) КАК ВключатьВНалоговуюБазу
		|ПОМЕСТИТЬ ВТ_СписокОсновныхСредств
		|	ИЗ
		|		(ВЫБРАТЬ
		|			РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|				ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ КАК ВключатьВНалоговуюБазу
		|		ИЗ
		|			РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, -1), МЕСЯЦ), Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ГДЕ
		|			РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЗ
		|			РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ГДЕ
		|			РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЗ
		|			РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), Организация = &Организация 
		|                                                                                                          И ВключатьВНалоговуюБазу = ИСТИНА И Период >= НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ГДЕ
		|			РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		
		|	СГРУППИРОВАТЬ ПО
		|		РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство
		|ИНДЕКСИРОВАТЬ ПО
		|	РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	1 КАК КоличествоМесяцев,
		|	СписокОсновныхСредств.ОсновноеСредство КАК ОсновноеСредство,
		|	РегистрацияТранспортныхСредствСрезПоследних.РегистрационныйЗнак КАК РегистрационныйЗнак,
		|	РегистрацияТранспортныхСредствСрезПоследних.Марка КАК Марка,
		|	РегистрацияТранспортныхСредствСрезПоследних.ИдентификационныйНомер КАК ИдентификационныйНомер,
		|	ВЫБОР КОГДА РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
		|		ТОГДА ЕстьNULL(РегистрацияТранспортныхСредствСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
		|		ИНАЧЕ РегистрацияТранспортныхСредствСрезПоследних.КодПоОКАТО
		|	КОНЕЦ КодПоОКАТО,
		|	РегистрацияТранспортныхСредствСрезПоследних.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
		|	РегистрацияТранспортныхСредствСрезПоследних.НалоговаяБаза КАК НалоговаяБаза,
		|	РегистрацияТранспортныхСредствСрезПоследних.ЕдиницаИзмеренияНалоговойБазы КАК ЕдиницаИзмеренияНалоговойБазы,
		|	РегистрацияТранспортныхСредствСрезПоследних.НалоговаяСтавка КАК НалоговаяСтавка,
		|	РегистрацияТранспортныхСредствСрезПоследних.НалоговаяЛьгота КАК НалоговаяЛьгота,
		|	РегистрацияТранспортныхСредствСрезПоследних.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
		|	РегистрацияТранспортныхСредствСрезПоследних.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
		|	РегистрацияТранспортныхСредствСрезПоследних.ПроцентУменьшения КАК ПроцентУменьшения,
		|	РегистрацияТранспортныхСредствСрезПоследних.СуммаУменьшения КАК СуммаУменьшения,
		|	РегистрацияТранспортныхСредствСрезПоследних.Период КАК ДатаРегистрации
		|ПОМЕСТИТЬ
		|	РегистрацияТранспортныхСредств" + Формат(Период, "ДФ=MM") + "
		|ИЗ
		|	ВТ_СписокОсновныхСредств КАК СписокОсновныхСредств
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), ВключатьВНалоговуюБазу = ИСТИНА И Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ПО СписокОсновныхСредств.ОсновноеСредство = РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство
		|ГДЕ
		|	СписокОсновныхСредств.ВключатьВНалоговуюБазу > 0
		|	И РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|";
		Запрос.Выполнить();
		
		ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
		                              |",
									  "ОБЪЕДИНИТЬ ВСЕ
									  |ВЫБРАТЬ *
		                              |")
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ПОМЕСТИТЬ РегистрацияТранспортныхСредств
									  |",
									  "")
								  + "ИЗ РегистрацияТранспортныхСредств" + Формат(Период, "ДФ=MM") + "
									|";
									
		Запрос.Текст = "УНИЧТОЖИТЬ ВТ_СписокОсновныхСредств";
		Запрос.Выполнить();
		Период = ДобавитьМесяц(Период, 1);	
		
	КонецЦикла;
	
	Запрос.Текст = ТекстОбъединяющегоЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(РегистрацияТранспортныхСредств.КоличествоМесяцев) КАК КоличествоМесяцев,
	|	РегистрацияТранспортныхСредств.ОсновноеСредство КАК ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО КАК КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавка,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения,
	|	МАКСИМУМ(РегистрацияТранспортныхСредств.ДатаРегистрации) КАК ДатаРегистрации
	|ИЗ
	|    РегистрацияТранспортныхСредств
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацияТранспортныхСредств.ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавка,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения
	|ИТОГИ
	|	КОЛИЧЕСТВО(ОсновноеСредство)
	|ПО
	|	КодПоОКАТО";
	ВыборкаОКАТО = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	Пока Раздел2[0].ДанныеДопСтрок[0].Значение.Количество()>1 Цикл
		Раздел2[0].ДанныеДопСтрок[0].Значение.Удалить(1);
	КонецЦикла;
	
	Если ВыборкаОКАТО.Количество() = 0 Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств();
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Отсутствуют данные о регистрации транспортных средств  на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
		Возврат;		
		
	КонецЕсли;
	
	ПерваяСтраница = Истина;
	Раздел2Текущий = Раздел2[0];
	
	ДанныеФормыЭлементКоллекции = Раздел2[0].ДанныеДопСтрок[0].Значение[0];
	
	Пока ВыборкаОКАТО.Следующий() Цикл
			
		Если Не ПерваяСтраница Тогда
			
			Раздел2.Добавить().Данные = Новый СписокЗначений();
			НомерТекущейСтраницы = Раздел2.Количество()-1;
			
			СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
			Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
				Если Неопределено = Показатель.Значение Тогда 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
				Иначе 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЕсли;
			КонецЦикла;
			
			Раздел2[НомерТекущейСтраницы].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
			Раздел2Текущий = Раздел2[НомерТекущейСтраницы];
			СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
			
			Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок = Новый СписокЗначений();
			Контейнер.Раздел2_ДанныеДопСтрок.Очистить();
			Контейнер.Раздел2_ХранилищеДанныхДопСтрок.Добавить();
			ИндексПоследнего = Контейнер.Раздел2_ХранилищеДанныхДопСтрок.Количество()-1;
			Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок.Добавить(Контейнер.Раздел2_ХранилищеДанныхДопСтрок[ИндексПоследнего].Таблица);
			Раздел2Текущий.ДанныеДопСтрок[0].Значение.Добавить();
			Раздел2Текущий.ДанныеДопСтрок[0].Представление = "ДанныеФормыКоллекцияТаблицаДопСтрокРаздела";
			
		Иначе
			// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
			ПерваяСтраница = Ложь;
		КонецЕсли;
	

		// Вставим код ОКАТО в раздел 2, для которого будем выводить всю информацию о ТС.
		СтраницаРаздел2.ОКАТОРаздел2 = ВыборкаОКАТО.КодПоОКАТО;

		// Отберем все объекты с необходимым кодом ОКАТО
		ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО = 1;
		
		ВыборкаТранспортныхСредств = ВыборкаОКАТО.Выбрать();
		Пока ВыборкаТранспортныхСредств.Следующий() Цикл
			
			Если ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО > 11 Тогда 
				Если Не ПерваяСтраница Тогда
					
					// Больше 11 строк на страницу не помещается
					Раздел2.Добавить().Данные = Новый СписокЗначений();
					НомерТекущейСтраницы = Раздел2.Количество()-1;
					
					СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
					Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
						Если Неопределено = Показатель.Значение Тогда 
							СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
						Иначе 
							СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
						КонецЕсли;
					КонецЦикла;
					
					Раздел2[НомерТекущейСтраницы].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
					Раздел2Текущий = Раздел2[НомерТекущейСтраницы];
					СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
					
					Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок = Новый СписокЗначений();
					Контейнер.Раздел2_ДанныеДопСтрок.Очистить();
					Контейнер.Раздел2_ХранилищеДанныхДопСтрок.Добавить();
					ИндексПоследнего = Контейнер.Раздел2_ХранилищеДанныхДопСтрок.Количество()-1;
					Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок.Добавить(Контейнер.Раздел2_ХранилищеДанныхДопСтрок[ИндексПоследнего].Таблица);
					Раздел2Текущий.ДанныеДопСтрок[0].Значение.Добавить();
					Раздел2Текущий.ДанныеДопСтрок[0].Представление = "ДанныеФормыКоллекцияТаблицаДопСтрокРаздела";
					
					СтраницаРаздел2.ОКАТОРаздел2 = ВыборкаОКАТО.КодПоОКАТО;
					
				Иначе
					// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
					ПерваяСтраница = Ложь;
				КонецЕсли;
				
				ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО = 1;
			КонецЕсли;

			Если ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО > 1 Тогда 
				
				Раздел2Текущий.ДанныеДопСтрок[0].Значение.Добавить();
				
			КонецЕсли;
			
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002002 = ВыборкаТранспортныхСредств.КодВидаТранспортногоСредства;

			// Идентификационный номер ТС
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002003 = ВыборкаТранспортныхСредств.ИдентификационныйНомер;

			// Марка ТС
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002004 = ВыборкаТранспортныхСредств.Марка;

			// Регистрационный знак
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002005 = ВыборкаТранспортныхСредств.РегистрационныйЗнак;

			// Налоговая база
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002006 = ВыборкаТранспортныхСредств.НалоговаяБаза;

			// Ед. изм.
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002007 = ВыборкаТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы;
			
			// Коэффициент
			Коэффициент = Окр(ВыборкаТранспортныхСредств.КоличествоМесяцев
							  / (Месяц(мДатаКонцаПериодаОтчета) - Месяц(мДатаНачалаПериодаОтчета) + 1), 2);	
							  
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002009 = Коэффициент;
			
			// Ставка
			Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002010 = ВыборкаТранспортныхСредств.НалоговаяСтавка;
			
			Если НЕ (ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется) Тогда
				
				// Код налоговой льготы
				Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002012 = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				
				Если ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.ОсвобождениеОтНалогообложения Тогда
					
					СуммаЛьготы = ВыборкаТранспортныхСредств.НалоговаяБаза * Коэффициент * ВыборкаТранспортныхСредств.НалоговаяСтавка;
					
				ИначеЕсли ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.СнижениеНалоговойСтавки Тогда
					
					СуммаЛьготы = (ВыборкаТранспортныхСредств.НалоговаяБаза * Коэффициент * ВыборкаТранспортныхСредств.НалоговаяСтавка)
								- (ВыборкаТранспортныхСредств.НалоговаяБаза * Коэффициент * ВыборкаТранспортныхСредств.ЛьготнаяСтавка);
					
				ИначеЕсли ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаВПроцентах Тогда
					
					СуммаЛьготы = (ВыборкаТранспортныхСредств.НалоговаяБаза * Коэффициент * ВыборкаТранспортныхСредств.НалоговаяСтавка)
								* ВыборкаТранспортныхСредств.ПроцентУменьшения / 100;
					
				ИначеЕсли ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаНаСумму Тогда
					
					СуммаЛьготы = ВыборкаТранспортныхСредств.СуммаУменьшения;
					
				КонецЕсли;
				
				// Сумма налоговой льготы
				Раздел2Текущий.ДанныеДопСтрок[0].Значение[ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО - 1].П000020002013 = СуммаЛьготы;
				
			КонецЕсли;
			
			ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО = ИндексСтрокиМногострочнойЧастиДляЛистаОКАТО + 1;

		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2012Кв1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_КодЛьготы", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетТранспортныйНалогФормаОтчета2012Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыОтчета.Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана =  ПараметрыОтчета.КодНалоговогоОргана;
	КПП                 = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	мДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	МассивНО = Новый Массив;
	Если НЕ ЗначениеЗаполнено(КодНалоговогоОргана) Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	ИначеЕсли КодНалоговогоОргана = Организация.РегистрацияВНалоговомОргане.Код Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	Иначе
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("НалоговыйОрган", МассивНО);
	
	ТекстОбъединяющегоЗапроса = "";
	
	Период = мДатаНачалаПериодаОтчета;
	
	Пока Период <= мДатаКонцаПериодаОтчета Цикл
		
		Запрос.УстановитьПараметр("Период", Период);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	СУММА(РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу) КАК ВключатьВНалоговуюБазу
		|ПОМЕСТИТЬ ВТ_СписокОсновныхСредств
		|ИЗ
		|	(ВЫБРАТЬ
		|		РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|		ВЫБОР
		|			КОГДА РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|				ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ КАК ВключатьВНалоговуюБазу
		|		ИЗ
		|			РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, -1), МЕСЯЦ), Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ГДЕ
		|			РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЗ
		|			РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ГДЕ
		|			РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЗ
		|			РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), Организация = &Организация 
		|					И ВключатьВНалоговуюБазу = ИСТИНА И Период >= НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ГДЕ
		|			РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		
		|	СГРУППИРОВАТЬ ПО
		|		РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство
		|ИНДЕКСИРОВАТЬ ПО
		|	РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	1 КАК КоличествоМесяцев,
		|	СписокОсновныхСредств.ОсновноеСредство КАК ОсновноеСредство,
		|	РегистрацияТранспортныхСредствСрезПоследних.РегистрационныйЗнак КАК РегистрационныйЗнак,
		|	РегистрацияТранспортныхСредствСрезПоследних.Марка КАК Марка,
		|	РегистрацияТранспортныхСредствСрезПоследних.ИдентификационныйНомер КАК ИдентификационныйНомер,
		|	ВЫБОР КОГДА РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
		|		ТОГДА ЕстьNULL(РегистрацияТранспортныхСредствСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
		|		ИНАЧЕ РегистрацияТранспортныхСредствСрезПоследних.КодПоОКАТО
		|	КОНЕЦ КодПоОКАТО,
		|	РегистрацияТранспортныхСредствСрезПоследних.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
		|	РегистрацияТранспортныхСредствСрезПоследних.НалоговаяБаза КАК НалоговаяБаза,
		|	РегистрацияТранспортныхСредствСрезПоследних.ЕдиницаИзмеренияНалоговойБазы КАК ЕдиницаИзмеренияНалоговойБазы,
		|	РегистрацияТранспортныхСредствСрезПоследних.НалоговаяСтавка КАК НалоговаяСтавка,
		|	РегистрацияТранспортныхСредствСрезПоследних.НалоговаяЛьгота КАК НалоговаяЛьгота,
		|	РегистрацияТранспортныхСредствСрезПоследних.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
		|	РегистрацияТранспортныхСредствСрезПоследних.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
		|	РегистрацияТранспортныхСредствСрезПоследних.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
		|	РегистрацияТранспортныхСредствСрезПоследних.ПроцентУменьшения КАК ПроцентУменьшения,
		|	РегистрацияТранспортныхСредствСрезПоследних.СуммаУменьшения КАК СуммаУменьшения,
		|	РегистрацияТранспортныхСредствСрезПоследних.ЭкологическийКласс КАК ЭкологическийКласс,
		|	РегистрацияТранспортныхСредствСрезПоследних.Период КАК ДатаРегистрации
		|ПОМЕСТИТЬ
		|	РегистрацияТранспортныхСредств" + Формат(Период, "ДФ=MM") + "
		|ИЗ
		|	ВТ_СписокОсновныхСредств КАК СписокОсновныхСредств
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), ВключатьВНалоговуюБазу = ИСТИНА И Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ПО СписокОсновныхСредств.ОсновноеСредство = РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство
		|ГДЕ
		|	СписокОсновныхСредств.ВключатьВНалоговуюБазу > 0
		|	И РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|";
		Запрос.Выполнить();
		
		ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
		                              |",
									  "ОБЪЕДИНИТЬ ВСЕ
									  |ВЫБРАТЬ *
		                              |")
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ПОМЕСТИТЬ РегистрацияТранспортныхСредств
									  |",
									  "")
								  + "ИЗ РегистрацияТранспортныхСредств" + Формат(Период, "ДФ=MM") + "
									|";
									
		Запрос.Текст = "УНИЧТОЖИТЬ ВТ_СписокОсновныхСредств";
		Запрос.Выполнить();
		Период = ДобавитьМесяц(Период, 1);	
		
	КонецЦикла;
	
	Запрос.Текст = ТекстОбъединяющегоЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(РегистрацияТранспортныхСредств.КоличествоМесяцев) КАК КоличествоМесяцев,
	|	РегистрацияТранспортныхСредств.ОсновноеСредство КАК ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО КАК КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавка,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.РегиональныйКодЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения,
	|	РегистрацияТранспортныхСредств.ЭкологическийКласс,
	|	МАКСИМУМ(РегистрацияТранспортныхСредств.ДатаРегистрации) КАК ДатаРегистрации
	|ИЗ
	|    РегистрацияТранспортныхСредств
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацияТранспортныхСредств.ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавка,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.РегиональныйКодЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения,
	|	РегистрацияТранспортныхСредств.ЭкологическийКласс
	|ИТОГИ
	|	КОЛИЧЕСТВО(ОсновноеСредство)
	|ПО
	|	КодПоОКАТО";
	
	ВыборкаОКАТО = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	Если ВыборкаОКАТО.Количество() = 0 Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств();
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Отсутствуют данные о регистрации транспортных средств  на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
		Возврат;		
		
	КонецЕсли;
	
	ПерваяСтраница = Истина;
	Раздел2Текущий = Раздел2[0];
	
	Пока ВыборкаОКАТО.Следующий() Цикл
		ВыборкаТранспортныхСредств = ВыборкаОКАТО.Выбрать();
		Пока ВыборкаТранспортныхСредств.Следующий() Цикл
			Если Не ПерваяСтраница Тогда
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницы = Раздел2.Количество()-1;
				
				СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
				Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
					Если Неопределено = Показатель.Значение Тогда 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
					Иначе 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЕсли;
				КонецЦикла;
				
				Раздел2[НомерТекущейСтраницы].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
				Раздел2Текущий = Раздел2[НомерТекущейСтраницы];
				СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
			
			Иначе
				ПерваяСтраница = Ложь;
			КонецЕсли;
			
			ДатаВыпуска = ВыборкаТранспортныхСредств.ОсновноеСредство.ДатаВыпуска;
			
			СтраницаРаздел2.П000020002003 = ВыборкаТранспортныхСредств.КодПоОКАТО;
			СтраницаРаздел2.П000020003003 = ВыборкаТранспортныхСредств.КодВидаТранспортногоСредства;
			СтраницаРаздел2.П000020004003 = ВыборкаТранспортныхСредств.ИдентификационныйНомер;
			СтраницаРаздел2.П000020005003 = ВыборкаТранспортныхСредств.Марка;
			СтраницаРаздел2.П000020006003 = ВыборкаТранспортныхСредств.РегистрационныйЗнак;
			СтраницаРаздел2.П000020007003 = ВыборкаТранспортныхСредств.НалоговаяБаза;
			СтраницаРаздел2.П000020008003 = ВыборкаТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы;
			СтраницаРаздел2.П000020009003 = ВыборкаТранспортныхСредств.ЭкологическийКласс;
			СтраницаРаздел2.П000020010003 = ?(ЗначениеЗаполнено(ДатаВыпуска),Год(мДатаКонцаПериодаОтчета) - Год(ДатаВыпуска),"");
			СтраницаРаздел2.П000020011003 = ВыборкаТранспортныхСредств.КоличествоМесяцев;
			СтраницаРаздел2.П000020013003 = ВыборкаТранспортныхСредств.НалоговаяСтавка;
			
			НалоговаяЛьгота = ВыборкаТранспортныхСредств.НалоговаяЛьгота;
			
			Если НалоговаяЛьгота <> Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется Тогда 
				СтраницаРаздел2.П000020015003 = ВыборкаТранспортныхСредств.КоличествоМесяцев;
			КонецЕсли;
			
			СтраницаРаздел2.П000020017003_КодЛьготы = "";
			СтраницаРаздел2.П000020017003_Основание = "";
			СтраницаРаздел2.П000020018003 = 0;
			СтраницаРаздел2.П000020019003_КодЛьготы = "";
			СтраницаРаздел2.П000020019003_Основание = "";
			СтраницаРаздел2.П000020020003 = 0;
			СтраницаРаздел2.П000020021003_КодЛьготы = "";
			СтраницаРаздел2.П000020021003_Основание = "";
			СтраницаРаздел2.П000020022003 = 0;
						
			Если НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаВПроцентах Тогда 
				СтраницаРаздел2.П000020019003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020019003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ПроцентУменьшения > 0 И ВыборкаТранспортныхСредств.ПроцентУменьшения < 100 Тогда 
					СуммаЛьготы = ВыборкаТранспортныхСредств.НалоговаяБаза * ВыборкаТранспортныхСредств.НалоговаяСтавка
						* (ВыборкаТранспортныхСредств.КоличествоМесяцев/12) * (ВыборкаТранспортныхСредств.ПроцентУменьшения/100);
					СтраницаРаздел2.П000020020003 = СуммаЛьготы;
				КонецЕсли;
			ИначеЕсли НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаНаСумму Тогда
				СтраницаРаздел2.П000020019003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020019003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				СуммаЛьготы = ВыборкаТранспортныхСредств.СуммаУменьшения;
				СтраницаРаздел2.П000020020003 = СуммаЛьготы;
			ИначеЕсли НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.ОсвобождениеОтНалогообложения Тогда 
				СтраницаРаздел2.П000020017003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020017003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
			ИначеЕсли НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.СнижениеНалоговойСтавки Тогда 
				СтраницаРаздел2.П000020021003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020021003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ЛьготнаяСтавка < ВыборкаТранспортныхСредств.НалоговаяСтавка Тогда 
					СуммаЛьготы = (ВыборкаТранспортныхСредств.НалоговаяБаза
						* (ВыборкаТранспортныхСредств.НалоговаяСтавка - ВыборкаТранспортныхСредств.ЛьготнаяСтавка))
						* (ВыборкаТранспортныхСредств.КоличествоМесяцев / 12);
					СтраницаРаздел2.П000020022003 = СуммаЛьготы;
				КонецЕсли;
			КонецЕсли;

		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2012Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_3", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_Процент", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_Ставка", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетТранспортныйНалогФормаОтчета2012Кв4(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыОтчета.Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана =  ПараметрыОтчета.КодНалоговогоОргана;
	КПП                 = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	мДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	МассивНО = Новый Массив;
	Если НЕ ЗначениеЗаполнено(КодНалоговогоОргана) Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	ИначеЕсли КодНалоговогоОргана = Организация.РегистрацияВНалоговомОргане.Код Тогда
		МассивНО.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	Иначе
		МассивНО.Добавить(РегистрацияВНалоговомОргане);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("НалоговыйОрган", МассивНО);
	Запрос.УстановитьПараметр("ДатаПодписи", ПараметрыОтчета.ДатаПодписи);
	
	ТекстОбъединяющегоЗапроса = "";
	
	Период = мДатаНачалаПериодаОтчета;
	
	Пока Период <= мДатаКонцаПериодаОтчета Цикл
		
		Запрос.УстановитьПараметр("Период", Период);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	СУММА(РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу) КАК ВключатьВНалоговуюБазу
		|ПОМЕСТИТЬ ВТ_СписокОсновныхСредств
		|ИЗ
		|	(ВЫБРАТЬ
		|		РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|		ВЫБОР
		|			КОГДА РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|				ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ КАК ВключатьВНалоговуюБазу
		|		ИЗ
		|			РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, -1), МЕСЯЦ), Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ГДЕ
		|			РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЗ
		|			РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ГДЕ
		|			РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство,
		|			ВЫБОР
		|				КОГДА РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЗ
		|			РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), Организация = &Организация 
		|					И ВключатьВНалоговуюБазу = ИСТИНА И Период >= НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ГДЕ
		|			РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		
		|	СГРУППИРОВАТЬ ПО
		|		РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство
		|ИНДЕКСИРОВАТЬ ПО
		|	РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	1 КАК КоличествоМесяцев,
		|	СписокОсновныхСредств.ОсновноеСредство КАК ОсновноеСредство,
		|	РегистрацияТранспортныхСредствСрезПоследних.РегистрационныйЗнак КАК РегистрационныйЗнак,
		|	РегистрацияТранспортныхСредствСрезПоследних.Марка КАК Марка,
		|	РегистрацияТранспортныхСредствСрезПоследних.ИдентификационныйНомер КАК ИдентификационныйНомер,
		|	ВЫБОР КОГДА РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
		|		ТОГДА 
		|			ЕстьNULL(РегистрацияТранспортныхСредствСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
		|		ИНАЧЕ 
		|			РегистрацияТранспортныхСредствСрезПоследних.КодПоОКАТО
		|	КОНЕЦ КодПоОКАТО,
		|	РегистрацияТранспортныхСредствСрезПоследних.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
		|	РегистрацияТранспортныхСредствСрезПоследних.НалоговаяБаза КАК НалоговаяБаза,
		|	РегистрацияТранспортныхСредствСрезПоследних.ЕдиницаИзмеренияНалоговойБазы КАК ЕдиницаИзмеренияНалоговойБазы,
		|	РегистрацияТранспортныхСредствСрезПоследних.НалоговаяСтавка КАК НалоговаяСтавка,
		|	РегистрацияТранспортныхСредствСрезПоследних.НалоговаяЛьгота КАК НалоговаяЛьгота,
		|	РегистрацияТранспортныхСредствСрезПоследних.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
		|	РегистрацияТранспортныхСредствСрезПоследних.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
		|	РегистрацияТранспортныхСредствСрезПоследних.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
		|	РегистрацияТранспортныхСредствСрезПоследних.ПроцентУменьшения КАК ПроцентУменьшения,
		|	РегистрацияТранспортныхСредствСрезПоследних.СуммаУменьшения КАК СуммаУменьшения,
		|	РегистрацияТранспортныхСредствСрезПоследних.ЭкологическийКласс КАК ЭкологическийКласс
		|ПОМЕСТИТЬ
		|	РегистрацияТранспортныхСредств" + Формат(Период, "ДФ=MM") + "
		|ИЗ
		|	ВТ_СписокОсновныхСредств КАК СписокОсновныхСредств
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), ВключатьВНалоговуюБазу = ИСТИНА И Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		|		ПО СписокОсновныхСредств.ОсновноеСредство = РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство
		|ГДЕ
		|	СписокОсновныхСредств.ВключатьВНалоговуюБазу > 0
		|	И РегистрацияТранспортныхСредствСрезПоследних.НалоговыйОрган В (&НалоговыйОрган)
		|";
		Запрос.Выполнить();
		
		ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
		                              |",
									  "ОБЪЕДИНИТЬ ВСЕ
									  |ВЫБРАТЬ *
		                              |")
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ПОМЕСТИТЬ РегистрацияТранспортныхСредств
									  |",
									  "")
								  + "ИЗ РегистрацияТранспортныхСредств" + Формат(Период, "ДФ=MM") + "
									|";
									
		Запрос.Текст = "УНИЧТОЖИТЬ ВТ_СписокОсновныхСредств";
		Запрос.Выполнить();
		Период = ДобавитьМесяц(Период, 1);	
		
	КонецЦикла;
	
	Запрос.Текст = ТекстОбъединяющегоЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(РегистрацияТранспортныхСредств.КоличествоМесяцев) КАК КоличествоМесяцев,
	|	РегистрацияТранспортныхСредств.ОсновноеСредство КАК ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО КАК КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавка,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.РегиональныйКодЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения,
	|	РегистрацияТранспортныхСредств.ЭкологическийКласс
	|ПОМЕСТИТЬ ВТ_РазличныеЗаписи
	|ИЗ
	|	РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацияТранспортныхСредств.ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавка,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.РегиональныйКодЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения,
	|	РегистрацияТранспортныхСредств.ЭкологическийКласс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВТ_РазличныеЗаписи.КоличествоМесяцев) КАК КоличествоМесяцев,
	|	ВТ_РазличныеЗаписи.ОсновноеСредство,
	|	ВТ_РазличныеЗаписи.РегистрационныйЗнак,
	|	ВТ_РазличныеЗаписи.Марка,
	|	ВТ_РазличныеЗаписи.ИдентификационныйНомер,
	|	ВТ_РазличныеЗаписи.КодПоОКАТО КАК КодПоОКАТО,
	|	ВТ_РазличныеЗаписи.КодВидаТранспортногоСредства,
	|	ВТ_РазличныеЗаписи.НалоговаяБаза,
	|	ВТ_РазличныеЗаписи.ЕдиницаИзмеренияНалоговойБазы,
	|	ВТ_РазличныеЗаписи.НалоговаяСтавка,
	|	ВТ_РазличныеЗаписи.ЭкологическийКласс,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_РазличныеЗаписи.НалоговаяЛьгота <> ЗНАЧЕНИЕ(Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоЗаписейЛьгот
	|ПОМЕСТИТЬ ВТ_ЗаписиБезУчетаЛьгот
	|ИЗ
	|	ВТ_РазличныеЗаписи КАК ВТ_РазличныеЗаписи
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_РазличныеЗаписи.ОсновноеСредство,
	|	ВТ_РазличныеЗаписи.РегистрационныйЗнак,
	|	ВТ_РазличныеЗаписи.Марка,
	|	ВТ_РазличныеЗаписи.ИдентификационныйНомер,
	|	ВТ_РазличныеЗаписи.КодПоОКАТО,
	|	ВТ_РазличныеЗаписи.КодВидаТранспортногоСредства,
	|	ВТ_РазличныеЗаписи.НалоговаяБаза,
	|	ВТ_РазличныеЗаписи.ЕдиницаИзмеренияНалоговойБазы,
	|	ВТ_РазличныеЗаписи.НалоговаяСтавка,
	|	ВТ_РазличныеЗаписи.ЭкологическийКласс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(РегистрацияТранспортныхСредств.КоличествоМесяцев) КАК КоличествоМесяцевЛьготы,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_ЗаписиБезУчетаЛьгот.КоличествоМесяцев, 0) = 0
	|			ТОГДА СУММА(РегистрацияТранспортныхСредств.КоличествоМесяцев)
	|		ИНАЧЕ ВТ_ЗаписиБезУчетаЛьгот.КоличествоМесяцев
	|	КОНЕЦ КАК КоличествоМесяцевВладения,
	|	РегистрацияТранспортныхСредств.ОсновноеСредство КАК ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО КАК КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавка,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.РегиональныйКодЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения,
	|	РегистрацияТранспортныхСредств.ЭкологическийКласс,
	|	ЕСТЬNULL(ВТ_ЗаписиБезУчетаЛьгот.КоличествоЗаписейЛьгот, 0) КАК КоличествоЗаписейЛьгот
	|ИЗ
	|	РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаписиБезУчетаЛьгот КАК ВТ_ЗаписиБезУчетаЛьгот
	|		ПО РегистрацияТранспортныхСредств.ОсновноеСредство = ВТ_ЗаписиБезУчетаЛьгот.ОсновноеСредство
	|			И РегистрацияТранспортныхСредств.РегистрационныйЗнак = ВТ_ЗаписиБезУчетаЛьгот.РегистрационныйЗнак
	|			И РегистрацияТранспортныхСредств.Марка = ВТ_ЗаписиБезУчетаЛьгот.Марка
	|			И РегистрацияТранспортныхСредств.ИдентификационныйНомер = ВТ_ЗаписиБезУчетаЛьгот.ИдентификационныйНомер
	|			И РегистрацияТранспортныхСредств.КодПоОКАТО = ВТ_ЗаписиБезУчетаЛьгот.КодПоОКАТО
	|			И РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства = ВТ_ЗаписиБезУчетаЛьгот.КодВидаТранспортногоСредства
	|			И РегистрацияТранспортныхСредств.НалоговаяБаза = ВТ_ЗаписиБезУчетаЛьгот.НалоговаяБаза
	|			И РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы = ВТ_ЗаписиБезУчетаЛьгот.ЕдиницаИзмеренияНалоговойБазы
	|			И РегистрацияТранспортныхСредств.НалоговаяСтавка = ВТ_ЗаписиБезУчетаЛьгот.НалоговаяСтавка
	|			И РегистрацияТранспортныхСредств.ЭкологическийКласс = ВТ_ЗаписиБезУчетаЛьгот.ЭкологическийКласс
	|			И (ВТ_ЗаписиБезУчетаЛьгот.КоличествоЗаписейЛьгот = 1)
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацияТранспортныхСредств.ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавка,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.РегиональныйКодЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения,
	|	РегистрацияТранспортныхСредств.ЭкологическийКласс,
	|	ВТ_ЗаписиБезУчетаЛьгот.КоличествоМесяцев,
	|	ЕСТЬNULL(ВТ_ЗаписиБезУчетаЛьгот.КоличествоЗаписейЛьгот, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодПоОКАТО,
	|	ОсновноеСредство
	|ИТОГИ
	|	КОЛИЧЕСТВО(ОсновноеСредство)
	|ПО
	|	КодПоОКАТО";
	
	ВыборкаОКАТО = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;

	ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств();
	
	Если ВыборкаОКАТО.Количество() = 0 Тогда
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Отсутствуют данные о регистрации транспортных средств  на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
		Возврат;		
		
	КонецЕсли;
	
	ПерваяСтраница = Истина;
	Раздел2Текущий = Раздел2[0];
	
	Пока ВыборкаОКАТО.Следующий() Цикл
		ВыборкаТранспортныхСредств = ВыборкаОКАТО.Выбрать();
		Пока ВыборкаТранспортныхСредств.Следующий() Цикл

			Если ВыборкаТранспортныхСредств.КоличествоЗаписейЛьгот = 1
				И (ВыборкаТранспортныхСредств.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется) Тогда
				// В декларацию выводится та строка, в которой содержится информация о льготе.
				Продолжить;
			КонецЕсли;
		
			Если Не ПерваяСтраница Тогда
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницы = Раздел2.Количество()-1;
				
				СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
				Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
					Если Неопределено = Показатель.Значение Тогда 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
					Иначе 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЕсли;
				КонецЦикла;
				
				Раздел2[НомерТекущейСтраницы].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
				Раздел2Текущий = Раздел2[НомерТекущейСтраницы];
				СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
			
			Иначе
				ПерваяСтраница = Ложь;
			КонецЕсли;
			
			СтраницаРаздел2.П000020002003 = ВыборкаТранспортныхСредств.КодПоОКАТО;
			СтраницаРаздел2.П000020003003 = ВыборкаТранспортныхСредств.КодВидаТранспортногоСредства;
			СтраницаРаздел2.П000020004003 = ВыборкаТранспортныхСредств.ИдентификационныйНомер;
			СтраницаРаздел2.П000020005003 = ВыборкаТранспортныхСредств.Марка;
			СтраницаРаздел2.П000020006003 = ВыборкаТранспортныхСредств.РегистрационныйЗнак;
			СтраницаРаздел2.П000020007003 = ВыборкаТранспортныхСредств.НалоговаяБаза;
			СтраницаРаздел2.П000020008003 = ВыборкаТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы;
			СтраницаРаздел2.П000020009003 = ВыборкаТранспортныхСредств.ЭкологическийКласс;
			СтраницаРаздел2.П000020011003 = ВыборкаТранспортныхСредств.КоличествоМесяцевВладения;
			СтраницаРаздел2.П000020013003 = ВыборкаТранспортныхСредств.НалоговаяСтавка;
			
			НалоговаяЛьгота = ВыборкаТранспортныхСредств.НалоговаяЛьгота;
			
			Если НалоговаяЛьгота <> Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется Тогда 
				СтраницаРаздел2.П000020015003 = ВыборкаТранспортныхСредств.КоличествоМесяцевЛьготы;
			КонецЕсли;
			
			СтраницаРаздел2.П000020017003_КодЛьготы = "";
			СтраницаРаздел2.П000020017003_Основание = "";			
			СтраницаРаздел2.П000020018003 = 0;
			СтраницаРаздел2.П000020019003_КодЛьготы = "";
			СтраницаРаздел2.П000020019003_Основание = "";
			СтраницаРаздел2.П000020019003_Процент 	= 0;
			СтраницаРаздел2.П000020020003 = 0;
			СтраницаРаздел2.П000020021003_КодЛьготы = "";
			СтраницаРаздел2.П000020021003_Основание = "";
			СтраницаРаздел2.П000020021003_Ставка 	= 0;
			СтраницаРаздел2.П000020022003 = 0;
						
			Если НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаВПроцентах Тогда 
				СтраницаРаздел2.П000020019003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020019003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ПроцентУменьшения > 0 И ВыборкаТранспортныхСредств.ПроцентУменьшения < 100 Тогда 
					СтраницаРаздел2.П000020019003_Процент = ВыборкаТранспортныхСредств.ПроцентУменьшения;
				КонецЕсли;
			ИначеЕсли НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаНаСумму Тогда
				СуммаЛьготы = ВыборкаТранспортныхСредств.СуммаУменьшения;
				СтраницаРаздел2.П000020015003 = 0;
				ТекстСообщения = НСтр("ru = 'Для основного средства ""%1"" (регистрационный знак ""%2"") установлена 
					|налоговая льгота в виде уменьшения суммы налога на %3 руб., которая не применяется с 2012 года.
					|Проверьте и при необходимости измените параметры расчета налога %4.'");
					
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, 
					ВыборкаТранспортныхСредств.ОсновноеСредство, 
					ВыборкаТранспортныхСредств.РегистрационныйЗнак,
                    СуммаЛьготы,
                    ПутьКРегистру);
					
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ВыборкаТранспортныхСредств.ОсновноеСредство);
			ИначеЕсли НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.ОсвобождениеОтНалогообложения Тогда 
				СтраницаРаздел2.П000020017003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020017003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
			ИначеЕсли НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.СнижениеНалоговойСтавки Тогда 
				СтраницаРаздел2.П000020021003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020021003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ЛьготнаяСтавка < ВыборкаТранспортныхСредств.НалоговаяСтавка Тогда 
					СтраницаРаздел2.П000020021003_Ставка = ВыборкаТранспортныхСредств.ЛьготнаяСтавка;
				КонецЕсли;
			КонецЕсли;

		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2013Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_3", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_Процент", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_Ставка", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетТранспортныйНалогФормаОтчета2013Кв4(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	Раздел1 = Контейнер.Раздел1;
	СтраницаРаздел1 =  Раздел1[0].Данные[0].Значение;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    		Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",    НачалоДня(мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("НалоговыйОрган", ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетТранспортногоНалога.ОсновноеСредство,
	|	РасчетТранспортногоНалога.СуммаНалогаКУплате КАК СуммаНалогаКУплате,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	РасчетТранспортногоНалога.РегистрационныйЗнак,
	|	РасчетТранспортногоНалога.Марка,
	|	РасчетТранспортногоНалога.ИдентификационныйНомер,
	|	РасчетТранспортногоНалога.ИФНС,
	|	РасчетТранспортногоНалога.КодПоОКТМО,
	|	РасчетТранспортногоНалога.КодВидаТранспортногоСредства,
	|	РасчетТранспортногоНалога.НалоговаяБаза,
	|	РасчетТранспортногоНалога.ЕдиницаИзмерения,
	|	РасчетТранспортногоНалога.НалоговаяСтавка,
	|	РасчетТранспортногоНалога.КодНалоговойЛьготы,
	|	РасчетТранспортногоНалога.РегиональныйКодЛьготы,
	|	РасчетТранспортногоНалога.ЛьготнаяСтавка,
	|	РасчетТранспортногоНалога.КоличествоМесяцевВладения,
	|	РасчетТранспортногоНалога.КоличествоМесяцевЛьготы,
	|	РасчетТранспортногоНалога.ПроцентУменьшения,
	|	РасчетТранспортногоНалога.СуммаНалоговойЛьготы,
	|	РасчетТранспортногоНалога.ЭкологическийКласс
	|ИЗ
	|	РегистрСведений.РасчетТранспортногоНалога КАК РасчетТранспортногоНалога
	|ГДЕ
	|	РасчетТранспортногоНалога.Организация = &Организация
	|	И РасчетТранспортногоНалога.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоНалогуНаИмущество = Новый ТаблицаЗначений;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовТранспортногоНалога = Выборка.Выгрузить();
	Иначе
		РасчетНалога = РасчетИмущественныхНалогов.ПолучитьРасчетПоТранспортномуНалогу(Организация, мДатаКонцаПериодаОтчета);
		ТаблицаРасчетовТранспортногоНалога = РасчетНалога.Налог;
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовТранспортногоНалога", ТаблицаРасчетовТранспортногоНалога);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	ПОМЕСТИТЬ ВТ_ТаблицаРасчетовТранспортногоНалога
	|	ИЗ &ТаблицаРасчетовТранспортногоНалога КАК ТаблицаРасчетовТранспортногоНалога";
	Запрос.Выполнить();
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаРасчетовТранспортногоНалога.КоличествоМесяцевЛьготы КАК КоличествоМесяцевЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	ТаблицаРасчетовТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаНалогаКУплате + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей1Кв + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей2Кв + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаИсчисленногоНалога,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	ТаблицаРасчетовТранспортногоНалога.РегистрационныйЗнак,
	|	ТаблицаРасчетовТранспортногоНалога.Марка,
	|	ТаблицаРасчетовТранспортногоНалога.ИдентификационныйНомер,
	|	ТаблицаРасчетовТранспортногоНалога.КодПоОКТМО КАК КодПоОКТМО,
	|	ТаблицаРасчетовТранспортногоНалога.КодВидаТранспортногоСредства,
	|	ТаблицаРасчетовТранспортногоНалога.НалоговаяБаза,
	|	ТаблицаРасчетовТранспортногоНалога.ЕдиницаИзмерения КАК ЕдиницаИзмеренияНалоговойБазы,
	|	ТаблицаРасчетовТранспортногоНалога.НалоговаяСтавка,
	|	ТаблицаРасчетовТранспортногоНалога.КодНалоговойЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.РегиональныйКодЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.ЛьготнаяСтавка,
	|	ТаблицаРасчетовТранспортногоНалога.ПроцентУменьшения,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаНалоговойЛьготы КАК СуммаУменьшения,
	|	ТаблицаРасчетовТранспортногоНалога.ЭкологическийКласс
	|ИЗ
	|	ВТ_ТаблицаРасчетовТранспортногоНалога КАК ТаблицаРасчетовТранспортногоНалога
	|ГДЕ
	|	ТаблицаРасчетовТранспортногоНалога.ИФНС = &НалоговыйОрган
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодПоОКТМО,
	|	ОсновноеСредство
	|ИТОГИ
	|	КОЛИЧЕСТВО(ОсновноеСредство),
	|	СУММА(СуммаИсчисленногоНалога),
	|	СУММА(СуммаАвансовыхПлатежей1Кв),
	|	СУММА(СуммаАвансовыхПлатежей2Кв),
	|	СУММА(СуммаАвансовыхПлатежей3Кв)
	|ПО
	|	КодПоОКТМО";
	
	ВыборкаОКТМО = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	Пока Раздел1.Количество()>1 Цикл
		Раздел1.Удалить(1);
	КонецЦикла;

	ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств();
	
	Если ВыборкаОКТМО.Количество() = 0 Тогда
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Отсутствуют данные о регистрации транспортных средств  на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
		Возврат;		
		
	КонецЕсли;
	
	НомерБлокаРаздела1			= 0;
	КоличествоБлоковРаздела1 	= 3;
	ПерваяСтраницаРаздел2	= Истина;
	
	Раздел2Текущий = Раздел2[0];
	Раздел1Текущий = Раздел1[0];
	
	Пока ВыборкаОКТМО.Следующий() Цикл
		
		// Авансовые платежи по разделу 1
		Если НомерБлокаРаздела1 % КоличествоБлоковРаздела1 = 0 
			И НомерБлокаРаздела1 <> 0 Тогда
			Раздел1.Добавить().Данные = Новый СписокЗначений();
			НомерТекущейСтраницыРаздел1 = Раздел1.Количество()-1;
			
			СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
			Для Каждого Показатель Из Раздел1[0].Данные[0].Значение Цикл
				Если Показатель.Значение = Неопределено Тогда 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
				Иначе 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЕсли;
			КонецЦикла;
			
			Раздел1[НомерТекущейСтраницыРаздел1].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
			Раздел1Текущий = Раздел1[НомерТекущейСтраницыРаздел1];
			СтраницаРаздел1 =  Раздел1Текущий.Данные[0].Значение;
			
			НомерБлокаРаздела1 = 0;
		КонецЕсли;
		
		ИндексПараметраРаздела = НомерБлокаРаздела1 + 1;
		
		СтраницаРаздел1["П000010002003" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.КодПоОКТМО;
		СтраницаРаздел1["П000010002103" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаИсчисленногоНалога;
						
		СтраницаРаздел1["П000010002303" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей1Кв;
		СтраницаРаздел1["П000010002503" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей2Кв;
		СтраницаРаздел1["П000010002703" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей3Кв;
		
		НомерБлокаРаздела1 = НомерБлокаРаздела1 + 1;
		
		ВыборкаТранспортныхСредств = ВыборкаОКТМО.Выбрать();
		Пока ВыборкаТранспортныхСредств.Следующий() Цикл

			Если Не ПерваяСтраницаРаздел2 Тогда
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницыРаздел2 = Раздел2.Количество()-1;
				
				СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
				Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
					Если Неопределено = Показатель.Значение Тогда 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
					Иначе 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЕсли;
				КонецЦикла;
				
				Раздел2[НомерТекущейСтраницыРаздел2].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
				Раздел2Текущий = Раздел2[НомерТекущейСтраницыРаздел2];
				СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
			
			Иначе
				ПерваяСтраницаРаздел2 = Ложь;
			КонецЕсли;
			
			СтраницаРаздел2.П000020002003 = ВыборкаТранспортныхСредств.КодПоОКТМО;
			СтраницаРаздел2.П000020003003 = ВыборкаТранспортныхСредств.КодВидаТранспортногоСредства;
			СтраницаРаздел2.П000020004003 = ВыборкаТранспортныхСредств.ИдентификационныйНомер;
			СтраницаРаздел2.П000020005003 = ВыборкаТранспортныхСредств.Марка;
			СтраницаРаздел2.П000020006003 = ВыборкаТранспортныхСредств.РегистрационныйЗнак;
			СтраницаРаздел2.П000020007003 = ВыборкаТранспортныхСредств.НалоговаяБаза;
			СтраницаРаздел2.П000020008003 = ВыборкаТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы;
			СтраницаРаздел2.П000020009003 = ВыборкаТранспортныхСредств.ЭкологическийКласс;
			СтраницаРаздел2.П000020011003 = ВыборкаТранспортныхСредств.КоличествоМесяцевВладения;
			СтраницаРаздел2.П000020013003 = ВыборкаТранспортныхСредств.НалоговаяСтавка;
			СтраницаРаздел2.П000020015003 = ВыборкаТранспортныхСредств.КоличествоМесяцевЛьготы;
						
			СтраницаРаздел2.П000020017003_КодЛьготы = "";
			СтраницаРаздел2.П000020017003_Основание = "";			
			СтраницаРаздел2.П000020018003 = 0;
			СтраницаРаздел2.П000020019003_КодЛьготы = "";
			СтраницаРаздел2.П000020019003_Основание = "";
			СтраницаРаздел2.П000020019003_Процент 	= 0;
			СтраницаРаздел2.П000020020003 = 0;
			СтраницаРаздел2.П000020021003_КодЛьготы = "";
			СтраницаРаздел2.П000020021003_Основание = "";
			СтраницаРаздел2.П000020021003_Ставка 	= 0;
			СтраницаРаздел2.П000020022003 = 0;
						
			Если ВыборкаТранспортныхСредств.КодНалоговойЛьготы  = "20230" Тогда
				СтраницаРаздел2.П000020021003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020021003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ЛьготнаяСтавка < ВыборкаТранспортныхСредств.НалоговаяСтавка Тогда 
					СтраницаРаздел2.П000020021003_Ставка = ВыборкаТранспортныхСредств.ЛьготнаяСтавка;
				КонецЕсли;
			ИначеЕсли ВыборкаТранспортныхСредств.КодНалоговойЛьготы  = "20220" Тогда 
				СтраницаРаздел2.П000020019003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020019003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ПроцентУменьшения > 0 И ВыборкаТранспортныхСредств.ПроцентУменьшения < 100 Тогда 
					СтраницаРаздел2.П000020019003_Процент = ВыборкаТранспортныхСредств.ПроцентУменьшения;
				КонецЕсли;
			Иначе
				СтраницаРаздел2.П000020017003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020017003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;	
			КонецЕсли;
				
		КонецЦикла;
		
	КонецЦикла;
			
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2014Кв1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_3", Истина, Ложь);
	
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_Основание", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_Основание", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003_Процент", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003_Основание", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003_Ставка", Истина, Ложь);
	


КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетТранспортныйНалогФормаОтчета2014Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	Раздел1 = Контейнер.Раздел1;
	СтраницаРаздел1 =  Раздел1[0].Данные[0].Значение;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    		Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",    НачалоДня(мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("НалоговыйОрган", ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетТранспортногоНалога.ОсновноеСредство,
	|	РасчетТранспортногоНалога.СуммаНалогаКУплате КАК СуммаНалогаКУплате,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	РасчетТранспортногоНалога.РегистрационныйЗнак,
	|	РасчетТранспортногоНалога.Марка,
	|	РасчетТранспортногоНалога.ИдентификационныйНомер,
	|	РасчетТранспортногоНалога.ИФНС,
	|	РасчетТранспортногоНалога.КодПоОКТМО,
	|	РасчетТранспортногоНалога.КодВидаТранспортногоСредства,
	|	РасчетТранспортногоНалога.НалоговаяБаза,
	|	РасчетТранспортногоНалога.ЕдиницаИзмерения,
	|	РасчетТранспортногоНалога.НалоговаяСтавка,
	|	РасчетТранспортногоНалога.КодНалоговойЛьготы,
	|	РасчетТранспортногоНалога.РегиональныйКодЛьготы,
	|	РасчетТранспортногоНалога.ЛьготнаяСтавка,
	|	РасчетТранспортногоНалога.КоличествоМесяцевВладения,
	|	РасчетТранспортногоНалога.КоличествоМесяцевЛьготы,
	|	РасчетТранспортногоНалога.ПроцентУменьшения,
	|	РасчетТранспортногоНалога.СуммаНалоговойЛьготы,
	|	РасчетТранспортногоНалога.ЭкологическийКласс,
	|	РасчетТранспортногоНалога.КоличествоЛетПрошедшихСГодаВыпускаТС,
	|	РасчетТранспортногоНалога.ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетТранспортногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетТранспортногоНалога.ПовышающийКоэффициент

	|ИЗ
	|	РегистрСведений.РасчетТранспортногоНалога КАК РасчетТранспортногоНалога
	|ГДЕ
	|	РасчетТранспортногоНалога.Организация = &Организация
	|	И РасчетТранспортногоНалога.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовТранспортногоНалога = Новый ТаблицаЗначений;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовТранспортногоНалога = Выборка.Выгрузить();
	Иначе
		РасчетНалога = РасчетИмущественныхНалогов.ПолучитьРасчетПоТранспортномуНалогу(Организация, мДатаКонцаПериодаОтчета);
		ТаблицаРасчетовТранспортногоНалога = РасчетНалога.Налог;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовТранспортногоНалога", ТаблицаРасчетовТранспортногоНалога);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	ПОМЕСТИТЬ ВТ_ТаблицаРасчетовТранспортногоНалога
	|	ИЗ &ТаблицаРасчетовТранспортногоНалога КАК ТаблицаРасчетовТранспортногоНалога";
	Запрос.Выполнить();
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаРасчетовТранспортногоНалога.КоличествоМесяцевЛьготы КАК КоличествоМесяцевЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	ТаблицаРасчетовТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаНалогаКУплате + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей1Кв + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей2Кв + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаИсчисленногоНалога,

	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	ТаблицаРасчетовТранспортногоНалога.РегистрационныйЗнак,
	|	ТаблицаРасчетовТранспортногоНалога.Марка,
	|	ТаблицаРасчетовТранспортногоНалога.ИдентификационныйНомер,
	|	ТаблицаРасчетовТранспортногоНалога.КодПоОКТМО КАК КодПоОКТМО,
	|	ТаблицаРасчетовТранспортногоНалога.КодВидаТранспортногоСредства,
	|	ТаблицаРасчетовТранспортногоНалога.НалоговаяБаза,
	|	ТаблицаРасчетовТранспортногоНалога.ЕдиницаИзмерения КАК ЕдиницаИзмеренияНалоговойБазы,
	|	ТаблицаРасчетовТранспортногоНалога.НалоговаяСтавка,
	|	ТаблицаРасчетовТранспортногоНалога.КодНалоговойЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.РегиональныйКодЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.ЛьготнаяСтавка,
	|	ТаблицаРасчетовТранспортногоНалога.ПроцентУменьшения,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаНалоговойЛьготы КАК СуммаУменьшения,
	|	ТаблицаРасчетовТранспортногоНалога.ЭкологическийКласс,
	|	ТаблицаРасчетовТранспортногоНалога.КоличествоЛетПрошедшихСГодаВыпускаТС,
	|	ТаблицаРасчетовТранспортногоНалога.ДоляВПравеОбщейСобственностиЧислитель,
	|	ТаблицаРасчетовТранспортногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ТаблицаРасчетовТранспортногоНалога.ПовышающийКоэффициент

	|ИЗ
	|	ВТ_ТаблицаРасчетовТранспортногоНалога КАК ТаблицаРасчетовТранспортногоНалога
	|ГДЕ
	|	ТаблицаРасчетовТранспортногоНалога.ИФНС = &НалоговыйОрган
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодПоОКТМО,
	|	ОсновноеСредство
	|ИТОГИ
	|	КОЛИЧЕСТВО(ОсновноеСредство),
	|	СУММА(СуммаИсчисленногоНалога),

	|	СУММА(СуммаАвансовыхПлатежей1Кв),
	|	СУММА(СуммаАвансовыхПлатежей2Кв),
	|	СУММА(СуммаАвансовыхПлатежей3Кв)

	|ПО
	|	КодПоОКТМО";
	
	ВыборкаОКТМО = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	Пока Раздел1.Количество()>1 Цикл
		Раздел1.Удалить(1);
	КонецЦикла;

	ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств();
	
	Если ВыборкаОКТМО.Количество() = 0 Тогда
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Отсутствуют данные о регистрации транспортных средств  на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
		Возврат;
		
	КонецЕсли;
	
	НомерБлокаРаздела1			= 0;
	КоличествоБлоковРаздела1 	= 3;
	ПерваяСтраницаРаздел2	= Истина;
	
	Раздел2Текущий = Раздел2[0];
	Раздел1Текущий = Раздел1[0];
	
	Пока ВыборкаОКТМО.Следующий() Цикл
		
		// Авансовые платежи по разделу 1
		Если НомерБлокаРаздела1 % КоличествоБлоковРаздела1 = 0 
			И НомерБлокаРаздела1 <> 0 Тогда
			Раздел1.Добавить().Данные = Новый СписокЗначений();
			НомерТекущейСтраницыРаздел1 = Раздел1.Количество()-1;
			
			СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
			Для Каждого Показатель Из Раздел1[0].Данные[0].Значение Цикл
				Если Показатель.Значение = Неопределено Тогда 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
				Иначе 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЕсли;
			КонецЦикла;
			
			Раздел1[НомерТекущейСтраницыРаздел1].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
			Раздел1Текущий = Раздел1[НомерТекущейСтраницыРаздел1];
			СтраницаРаздел1 =  Раздел1Текущий.Данные[0].Значение;
			
			НомерБлокаРаздела1 = 0;
		КонецЕсли;
		
		ИндексПараметраРаздела = НомерБлокаРаздела1 + 1;
		
		СтраницаРаздел1["П000010002003" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.КодПоОКТМО;
		СтраницаРаздел1["П000010002103" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаИсчисленногоНалога;
						





		СтраницаРаздел1["П000010002303" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей1Кв;
		СтраницаРаздел1["П000010002503" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей2Кв;
		СтраницаРаздел1["П000010002703" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей3Кв;
		
		НомерБлокаРаздела1 = НомерБлокаРаздела1 + 1;
		
		ВыборкаТранспортныхСредств = ВыборкаОКТМО.Выбрать();
		Пока ВыборкаТранспортныхСредств.Следующий() Цикл

			Если Не ПерваяСтраницаРаздел2 Тогда
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницыРаздел2 = Раздел2.Количество()-1;
				
				СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
				Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
					Если Неопределено = Показатель.Значение Тогда 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
					Иначе 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЕсли;
				КонецЦикла;
				
				Раздел2[НомерТекущейСтраницыРаздел2].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
				Раздел2Текущий = Раздел2[НомерТекущейСтраницыРаздел2];
				СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
			
			Иначе
				ПерваяСтраницаРаздел2 = Ложь;
			КонецЕсли;
			
			СтраницаРаздел2.П000020002003 = ВыборкаТранспортныхСредств.КодПоОКТМО;
			СтраницаРаздел2.П000020003003 = ВыборкаТранспортныхСредств.КодВидаТранспортногоСредства;
			СтраницаРаздел2.П000020004003 = ВыборкаТранспортныхСредств.ИдентификационныйНомер;
			СтраницаРаздел2.П000020005003 = ВыборкаТранспортныхСредств.Марка;
			СтраницаРаздел2.П000020006003 = ВыборкаТранспортныхСредств.РегистрационныйЗнак;
			СтраницаРаздел2.П000020007003 = ВыборкаТранспортныхСредств.НалоговаяБаза;
			СтраницаРаздел2.П000020008003 = ВыборкаТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы;
			СтраницаРаздел2.П000020009003 = ВыборкаТранспортныхСредств.ЭкологическийКласс;
			СтраницаРаздел2.П000020010003 = ВыборкаТранспортныхСредств.КоличествоЛетПрошедшихСГодаВыпускаТС;
			СтраницаРаздел2.П000020011003 = ВыборкаТранспортныхСредств.КоличествоМесяцевВладения;
			СтраницаРаздел2.П000020012003_Числ = ВыборкаТранспортныхСредств.ДоляВПравеОбщейСобственностиЧислитель;
			СтраницаРаздел2.П000020012003_Знам = ВыборкаТранспортныхСредств.ДоляВПравеОбщейСобственностиЗнаменатель;
			СтраницаРаздел2.П000020014003 = ВыборкаТранспортныхСредств.НалоговаяСтавка;
			СтраницаРаздел2.П000020015003 = ВыборкаТранспортныхСредств.ПовышающийКоэффициент;
			СтраницаРаздел2.П000020017003 = ВыборкаТранспортныхСредств.КоличествоМесяцевЛьготы;
						
			СтраницаРаздел2.П000020019003_КодЛьготы = "";
			СтраницаРаздел2.П000020019003_Основание = "";
			СтраницаРаздел2.П000020020003 = 0;
			СтраницаРаздел2.П000020021003_КодЛьготы = "";
			СтраницаРаздел2.П000020021003_Основание = "";
			СтраницаРаздел2.П000020021003_Процент 	= 0;
			СтраницаРаздел2.П000020022003 = 0;
			СтраницаРаздел2.П000020023003_КодЛьготы = "";
			СтраницаРаздел2.П000020023003_Основание = "";
			СтраницаРаздел2.П000020023003_Ставка 	= 0;
			СтраницаРаздел2.П000020025003 = 0;
						
			Если ВыборкаТранспортныхСредств.КодНалоговойЛьготы  = "20230" Тогда
				СтраницаРаздел2.П000020023003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020023003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ЛьготнаяСтавка < ВыборкаТранспортныхСредств.НалоговаяСтавка Тогда 
					СтраницаРаздел2.П000020023003_Ставка = ВыборкаТранспортныхСредств.ЛьготнаяСтавка;
				КонецЕсли;
			ИначеЕсли ВыборкаТранспортныхСредств.КодНалоговойЛьготы  = "20220" Тогда 
				СтраницаРаздел2.П000020021003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020021003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ПроцентУменьшения > 0 И ВыборкаТранспортныхСредств.ПроцентУменьшения < 100 Тогда 
					СтраницаРаздел2.П000020021003_Процент = ВыборкаТранспортныхСредств.ПроцентУменьшения;
				КонецЕсли;
			Иначе
				СтраницаРаздел2.П000020019003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020019003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;	
			КонецЕсли;
				




		КонецЦикла;
		
	КонецЦикла;
			
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2016Кв1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_3", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003_Основание", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_Основание", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_Процент", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020025003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_Основание", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_Ставка", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020028003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020029003", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетТранспортныйНалогФормаОтчета2016Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	Раздел1 = Контейнер.Раздел1;
	СтраницаРаздел1 =  Раздел1[0].Данные[0].Значение;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",    		Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",    НачалоДня(мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("НалоговыйОрган", ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
	|	РасчетТранспортногоНалога.СуммаНалогаКУплате КАК СуммаНалогаКУплате,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	РасчетТранспортногоНалога.РегистрационныйЗнак КАК РегистрационныйЗнак,
	|	РасчетТранспортногоНалога.Марка КАК Марка,
	|	РасчетТранспортногоНалога.ИдентификационныйНомер КАК ИдентификационныйНомер,
	|	РасчетТранспортногоНалога.ИФНС КАК ИФНС,
	|	РасчетТранспортногоНалога.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетТранспортногоНалога.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
	|	РасчетТранспортногоНалога.НалоговаяБаза КАК НалоговаяБаза,
	|	РасчетТранспортногоНалога.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РасчетТранспортногоНалога.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетТранспортногоНалога.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
	|	РасчетТранспортногоНалога.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
	|	РасчетТранспортногоНалога.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
	|	РасчетТранспортногоНалога.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	РасчетТранспортногоНалога.КоличествоМесяцевЛьготы КАК КоличествоМесяцевЛьготы,
	|	РасчетТранспортногоНалога.ПроцентУменьшения КАК ПроцентУменьшения,
	|	РасчетТранспортногоНалога.СуммаНалоговойЛьготы КАК СуммаНалоговойЛьготы,
	|	РасчетТранспортногоНалога.ЭкологическийКласс КАК ЭкологическийКласс,
	|	РасчетТранспортногоНалога.КоличествоЛетПрошедшихСГодаВыпускаТС КАК КоличествоЛетПрошедшихСГодаВыпускаТС,
	|	РасчетТранспортногоНалога.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетТранспортногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетТранспортногоНалога.ПовышающийКоэффициент КАК ПовышающийКоэффициент,
	|	РасчетТранспортногоНалога.СуммаНалоговогоВычета КАК СуммаНалоговогоВычета,
	|	РасчетТранспортногоНалога.ДатаРегистрационныхДанных КАК ДатаРегистрационныхДанных,
	|	РасчетТранспортногоНалога.ДатаРегистрации КАК ДатаРегистрации,
	|	РасчетТранспортногоНалога.ДатаПрекращенияРегистрации КАК ДатаПрекращенияРегистрации
	|ИЗ
	|	РегистрСведений.РасчетТранспортногоНалога КАК РасчетТранспортногоНалога
	|ГДЕ
	|	РасчетТранспортногоНалога.Организация = &Организация
	|	И РасчетТранспортногоНалога.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовТранспортногоНалога = Новый ТаблицаЗначений;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовТранспортногоНалога = Выборка.Выгрузить();
	Иначе
		РасчетНалога = РасчетИмущественныхНалогов.ПолучитьРасчетПоТранспортномуНалогу(Организация, мДатаКонцаПериодаОтчета);
		ТаблицаРасчетовТранспортногоНалога = РасчетНалога.Налог;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовТранспортногоНалога", ТаблицаРасчетовТранспортногоНалога);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	ПОМЕСТИТЬ ВТ_ТаблицаРасчетовТранспортногоНалога
	|	ИЗ &ТаблицаРасчетовТранспортногоНалога КАК ТаблицаРасчетовТранспортногоНалога";
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаРасчетовТранспортногоНалога.КоличествоМесяцевЛьготы КАК КоличествоМесяцевЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	ТаблицаРасчетовТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаНалогаКУплате + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей1Кв + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей2Кв + ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей3Кв - ТаблицаРасчетовТранспортногоНалога.СуммаНалоговогоВычета КАК СуммаИсчисленногоНалога,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	ТаблицаРасчетовТранспортногоНалога.РегистрационныйЗнак КАК РегистрационныйЗнак,
	|	ТаблицаРасчетовТранспортногоНалога.Марка КАК Марка,
	|	ТаблицаРасчетовТранспортногоНалога.ИдентификационныйНомер КАК ИдентификационныйНомер,
	|	ТаблицаРасчетовТранспортногоНалога.КодПоОКТМО КАК КодПоОКТМО,
	|	ТаблицаРасчетовТранспортногоНалога.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
	|	ТаблицаРасчетовТранспортногоНалога.НалоговаяБаза КАК НалоговаяБаза,
	|	ТаблицаРасчетовТранспортногоНалога.ЕдиницаИзмерения КАК ЕдиницаИзмеренияНалоговойБазы,
	|	ТаблицаРасчетовТранспортногоНалога.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ТаблицаРасчетовТранспортногоНалога.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
	|	ТаблицаРасчетовТранспортногоНалога.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
	|	ТаблицаРасчетовТранспортногоНалога.ПроцентУменьшения КАК ПроцентУменьшения,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаНалоговойЛьготы КАК СуммаУменьшения,
	|	ТаблицаРасчетовТранспортногоНалога.ЭкологическийКласс КАК ЭкологическийКласс,
	|	ТаблицаРасчетовТранспортногоНалога.КоличествоЛетПрошедшихСГодаВыпускаТС КАК КоличествоЛетПрошедшихСГодаВыпускаТС,
	|	ТаблицаРасчетовТранспортногоНалога.ОсновноеСредство.ДатаВыпуска КАК ДатаВыпуска,
	|	ТаблицаРасчетовТранспортногоНалога.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	ТаблицаРасчетовТранспортногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ТаблицаРасчетовТранспортногоНалога.ПовышающийКоэффициент КАК ПовышающийКоэффициент,
	|	ТаблицаРасчетовТранспортногоНалога.СуммаНалоговогоВычета КАК СуммаНалоговогоВычета,
	|	ТаблицаРасчетовТранспортногоНалога.ДатаРегистрации КАК ДатаРегистрации,
	|	ТаблицаРасчетовТранспортногоНалога.ДатаПрекращенияРегистрации КАК ДатаПрекращенияРегистрации
	|ИЗ
	|	ВТ_ТаблицаРасчетовТранспортногоНалога КАК ТаблицаРасчетовТранспортногоНалога
	|ГДЕ
	|	ТаблицаРасчетовТранспортногоНалога.ИФНС = &НалоговыйОрган
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодПоОКТМО,
	|	ОсновноеСредство
	|ИТОГИ
	|	КОЛИЧЕСТВО(ОсновноеСредство),
	|	СУММА(СуммаИсчисленногоНалога),
	|	СУММА(СуммаАвансовыхПлатежей1Кв),
	|	СУММА(СуммаАвансовыхПлатежей2Кв),
	|	СУММА(СуммаАвансовыхПлатежей3Кв),
	|	СУММА(СуммаНалоговогоВычета)
	|ПО
	|	КодПоОКТМО";
	
	ВыборкаОКТМО = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	Пока Раздел1.Количество()>1 Цикл
		Раздел1.Удалить(1);
	КонецЦикла;

	ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств();
	
	Если ВыборкаОКТМО.Количество() = 0 Тогда
  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Отсутствуют данные о регистрации транспортных средств на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
				 
		Возврат;
		
	КонецЕсли;
	
	НомерБлокаРаздела1       = 0;
	КоличествоБлоковРаздела1 = 3;
	ПерваяСтраницаРаздел2    = Истина;
	
	Раздел2Текущий = Раздел2[0];
	Раздел1Текущий = Раздел1[0];
	
	Пока ВыборкаОКТМО.Следующий() Цикл
		
		// Авансовые платежи по разделу 1
		Если НомерБлокаРаздела1 % КоличествоБлоковРаздела1 = 0 
			И НомерБлокаРаздела1 <> 0 Тогда
			Раздел1.Добавить().Данные = Новый СписокЗначений();
			НомерТекущейСтраницыРаздел1 = Раздел1.Количество()-1;
			
			СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
			Для Каждого Показатель Из Раздел1[0].Данные[0].Значение Цикл
				Если Показатель.Значение = Неопределено Тогда 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
				Иначе 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЕсли;
			КонецЦикла;
			
			Раздел1[НомерТекущейСтраницыРаздел1].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
			Раздел1Текущий = Раздел1[НомерТекущейСтраницыРаздел1];
			СтраницаРаздел1 =  Раздел1Текущий.Данные[0].Значение;
			
			НомерБлокаРаздела1 = 0;
		КонецЕсли;
		
		ИндексПараметраРаздела = НомерБлокаРаздела1 + 1;
		
		СтраницаРаздел1["П000010002003" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.КодПоОКТМО;
		СтраницаРаздел1["П000010002103" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаИсчисленногоНалога;
		СтраницаРаздел1["П000010002303" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей1Кв;
		СтраницаРаздел1["П000010002503" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей2Кв;
		СтраницаРаздел1["П000010002703" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей3Кв;
		
		НомерБлокаРаздела1 = НомерБлокаРаздела1 + 1;
		
		ВыборкаТранспортныхСредств = ВыборкаОКТМО.Выбрать();
		Пока ВыборкаТранспортныхСредств.Следующий() Цикл

			Если Не ПерваяСтраницаРаздел2 Тогда
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницыРаздел2 = Раздел2.Количество()-1;
				
				СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
				Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
					Если Неопределено = Показатель.Значение Тогда 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
					Иначе 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЕсли;
				КонецЦикла;
				
				Раздел2[НомерТекущейСтраницыРаздел2].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
				Раздел2Текущий = Раздел2[НомерТекущейСтраницыРаздел2];
				СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
			
			Иначе
				ПерваяСтраницаРаздел2 = Ложь;
			КонецЕсли;
			
			СтраницаРаздел2.П000020002003 = ВыборкаТранспортныхСредств.КодПоОКТМО;
			СтраницаРаздел2.П000020003003 = ВыборкаТранспортныхСредств.КодВидаТранспортногоСредства;
			СтраницаРаздел2.П000020004003 = ВыборкаТранспортныхСредств.ИдентификационныйНомер;
			СтраницаРаздел2.П000020005003 = ВыборкаТранспортныхСредств.Марка;
			СтраницаРаздел2.П000020006003 = ВыборкаТранспортныхСредств.РегистрационныйЗнак;
			СтраницаРаздел2.П000020007003 = ВыборкаТранспортныхСредств.ДатаРегистрации;
			СтраницаРаздел2.П000020008003 = ВыборкаТранспортныхСредств.ДатаПрекращенияРегистрации;
			СтраницаРаздел2.П000020009003 = ВыборкаТранспортныхСредств.НалоговаяБаза;
			СтраницаРаздел2.П000020010003 = ВыборкаТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы;
			СтраницаРаздел2.П000020011003 = ВыборкаТранспортныхСредств.ЭкологическийКласс;
			СтраницаРаздел2.П000020012003 = ВыборкаТранспортныхСредств.КоличествоЛетПрошедшихСГодаВыпускаТС;
			
			Если ЗначениеЗаполнено(ВыборкаТранспортныхСредств.ДатаВыпуска) Тогда
				СтраницаРаздел2.П000020013003 = Формат(ВыборкаТранспортныхСредств.ДатаВыпуска, "ДФ=гггг");
			КонецЕсли;
			
			СтраницаРаздел2.П000020014003 = ВыборкаТранспортныхСредств.КоличествоМесяцевВладения;
			СтраницаРаздел2.П000020015003_Числ = ВыборкаТранспортныхСредств.ДоляВПравеОбщейСобственностиЧислитель;
			СтраницаРаздел2.П000020015003_Знам = ВыборкаТранспортныхСредств.ДоляВПравеОбщейСобственностиЗнаменатель;
			СтраницаРаздел2.П000020017003 = ВыборкаТранспортныхСредств.НалоговаяСтавка;
			СтраницаРаздел2.П000020018003 = ВыборкаТранспортныхСредств.ПовышающийКоэффициент;
			СтраницаРаздел2.П000020020003 = ВыборкаТранспортныхСредств.КоличествоМесяцевЛьготы;
			
			СтраницаРаздел2.П000020022003_КодЛьготы = "";
			СтраницаРаздел2.П000020022003_Основание = "";
			СтраницаРаздел2.П000020023003 = 0;
			СтраницаРаздел2.П000020024003_КодЛьготы = "";
			СтраницаРаздел2.П000020024003_Основание = "";
			СтраницаРаздел2.П000020024003_Процент 	= 0;
			СтраницаРаздел2.П000020025003 = 0;
			СтраницаРаздел2.П000020026003_КодЛьготы = "";
			СтраницаРаздел2.П000020026003_Основание = "";
			СтраницаРаздел2.П000020026003_Ставка 	= 0;
			СтраницаРаздел2.П000020030003 = 0;
			
			Если ВыборкаТранспортныхСредств.КодНалоговойЛьготы  = "20230" Тогда
				СтраницаРаздел2.П000020026003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020026003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ЛьготнаяСтавка < ВыборкаТранспортныхСредств.НалоговаяСтавка Тогда 
					СтраницаРаздел2.П000020026003_Ставка = ВыборкаТранспортныхСредств.ЛьготнаяСтавка;
				КонецЕсли;
			ИначеЕсли ВыборкаТранспортныхСредств.КодНалоговойЛьготы  = "20220" Тогда 
				СтраницаРаздел2.П000020024003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020024003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ПроцентУменьшения > 0 И ВыборкаТранспортныхСредств.ПроцентУменьшения < 100 Тогда 
					СтраницаРаздел2.П000020024003_Процент = ВыборкаТранспортныхСредств.ПроцентУменьшения;
				КонецЕсли;
			Иначе
				СтраницаРаздел2.П000020022003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020022003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
			КонецЕсли;
			
			СтраницаРаздел2.П000020028003 = "";
			СтраницаРаздел2.П000020029003 = 0;
			
			Если ВыборкаТранспортныхСредств.СуммаНалоговогоВычета > 0 Тогда
				СтраницаРаздел2.П000020028003 = "40200";
				СтраницаРаздел2.П000020029003 = ВыборкаТранспортныхСредств.СуммаНалоговогоВычета;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
			
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2019Кв1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002103_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002303_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002503_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002703_3", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003_Основание", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_Основание", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_Процент", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020025003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_Основание", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020026003_Ставка", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020028003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020029003", Истина, Ложь);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетТранспортныйНалогФормаОтчета2019Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	
	НалоговыйОрган = ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
		
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",         Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета", НачалоДня(мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("НалоговыйОрган",      НалоговыйОрган);
	
	// СуммаНалогаКУплате не уменьшена на сумму освобождения, поэтому при расчете СуммаИсчисленногоНалога вычитаем сумму освобождения.
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
	|	РасчетТранспортногоНалога.ОсновноеСредство.ДатаВыпуска КАК ДатаВыпуска,
	|	РасчетТранспортногоНалога.РегистрационныйЗнак КАК РегистрационныйЗнак,
	|	РасчетТранспортногоНалога.Марка КАК Марка,
	|	РасчетТранспортногоНалога.ИдентификационныйНомер КАК ИдентификационныйНомер,
	|	РасчетТранспортногоНалога.ИФНС КАК ИФНС,
	|	РасчетТранспортногоНалога.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетТранспортногоНалога.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
	|	РасчетТранспортногоНалога.НалоговаяБаза КАК НалоговаяБаза,
	|	РасчетТранспортногоНалога.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РасчетТранспортногоНалога.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетТранспортногоНалога.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
	|	РасчетТранспортногоНалога.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
	|	РасчетТранспортногоНалога.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
	|	РасчетТранспортногоНалога.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	РасчетТранспортногоНалога.КоличествоМесяцевЛьготы КАК КоличествоМесяцевЛьготы,
	|	РасчетТранспортногоНалога.ПроцентУменьшения КАК ПроцентУменьшения,
	|	РасчетТранспортногоНалога.СуммаНалоговойЛьготы КАК СуммаНалоговойЛьготы,
	|	РасчетТранспортногоНалога.СуммаОсвобожденияОтУплатыНалога КАК СуммаОсвобожденияОтУплатыНалога,
	|	РасчетТранспортногоНалога.ЭкологическийКласс КАК ЭкологическийКласс,
	|	РасчетТранспортногоНалога.КоличествоЛетПрошедшихСГодаВыпускаТС КАК КоличествоЛетПрошедшихСГодаВыпускаТС,
	|	РасчетТранспортногоНалога.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетТранспортногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетТранспортногоНалога.ПовышающийКоэффициент КАК ПовышающийКоэффициент,
	|	РасчетТранспортногоНалога.ДатаРегистрационныхДанных КАК ДатаРегистрационныхДанных,
	|	РасчетТранспортногоНалога.ДатаРегистрации КАК ДатаРегистрации,
	|	РасчетТранспортногоНалога.ДатаПрекращенияРегистрации КАК ДатаПрекращенияРегистрации,
	|	РасчетТранспортногоНалога.СуммаНалоговогоВычета КАК СуммаНалоговогоВычета,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	РасчетТранспортногоНалога.СуммаНалогаКУплате + РасчетТранспортногоНалога.СуммаАвансовыхПлатежей1Кв + РасчетТранспортногоНалога.СуммаАвансовыхПлатежей2Кв + РасчетТранспортногоНалога.СуммаАвансовыхПлатежей3Кв 
	|	- РасчетТранспортногоНалога.СуммаНалоговогоВычета - РасчетТранспортногоНалога.СуммаОсвобожденияОтУплатыНалога КАК СуммаИсчисленногоНалога
	|ИЗ
	|	РегистрСведений.РасчетТранспортногоНалога КАК РасчетТранспортногоНалога
	|ГДЕ
	|	РасчетТранспортногоНалога.Организация = &Организация
	|	И РасчетТранспортногоНалога.ПериодРасчета = &ДатаОкончанияОтчета
	|	И РасчетТранспортногоНалога.ИФНС = &НалоговыйОрган
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодПоОКТМО,
	|	КодВидаТранспортногоСредства
	|ИТОГИ
	|	КОЛИЧЕСТВО(ОсновноеСредство),
	|	СУММА(СуммаНалоговогоВычета),
	|	СУММА(СуммаАвансовыхПлатежей1Кв),
	|	СУММА(СуммаАвансовыхПлатежей2Кв),
	|	СУММА(СуммаАвансовыхПлатежей3Кв),
	|	СУММА(СуммаИсчисленногоНалога)
	|ПО
	|	КодПоОКТМО";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Проверьте данные о регистрации транспортных средств %1
			| и выполнение регламентной операции Расчет транспортного налога за %2'"),
			ПутьКРегистру, Формат(ПараметрыОтчета.мДатаКонцаПериодаОтчета, "ДФ='MMMM yyyy'")));
		Возврат;
		
	КонецЕсли;
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	Раздел1 = Контейнер.Раздел1;
	СтраницаРаздел1 =  Раздел1[0].Данные[0].Значение;
	
	Пока Раздел2.Количество() > 1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	Пока Раздел1.Количество() > 1 Цикл
		Раздел1.Удалить(1);
	КонецЦикла;
	
	НомерБлокаРаздела1       = 0;
	КоличествоБлоковРаздела1 = 3;
	ПерваяСтраницаРаздел2    = Истина;
	
	ВыборкаОКТМО = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Раздел2Текущий = Раздел2[0];
	Раздел1Текущий = Раздел1[0];
	
	ПрименяетсяОсвобождениеОтНалога = Ложь;
	Если НалоговыйУчет.ДеятельностьОтнесенаКПострадавшимОтКоронавируса(Организация) Тогда
		ПериодОсвобожденияОтНалогов = НалоговыйУчет.ПериодОсвобожденияОтНалоговПострадавшимОтКоронавируса();
		ПрименяетсяОсвобождениеОтНалога = (Год(ПериодОсвобожденияОтНалогов.Конец) = Год(мДатаКонцаПериодаОтчета));
	КонецЕсли;	
	
	// В 2020 году для некоторых НКО предусмотрены особые коды льгот
	ЭтоНекоммерческаяОрганизация = Справочники.Организации.ЭтоНекоммерческаяОрганизация(Организация);
	
	Пока ВыборкаОКТМО.Следующий() Цикл
		
		// Авансовые платежи по разделу 1
		Если НомерБлокаРаздела1 % КоличествоБлоковРаздела1 = 0 
			И НомерБлокаРаздела1 <> 0 Тогда
			Раздел1.Добавить().Данные = Новый СписокЗначений();
			НомерТекущейСтраницыРаздел1 = Раздел1.Количество()-1;
			
			СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
			Для Каждого Показатель Из Раздел1[0].Данные[0].Значение Цикл
				Если Показатель.Значение = Неопределено Тогда 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
				Иначе 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЕсли;
			КонецЦикла;
			
			Раздел1[НомерТекущейСтраницыРаздел1].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
			Раздел1Текущий = Раздел1[НомерТекущейСтраницыРаздел1];
			СтраницаРаздел1 =  Раздел1Текущий.Данные[0].Значение;
			
			НомерБлокаРаздела1 = 0;
		КонецЕсли;
		
		ИндексПараметраРаздела = НомерБлокаРаздела1 + 1;
		
		СтраницаРаздел1["П000010002003" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.КодПоОКТМО;
		СтраницаРаздел1["П000010002103" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаИсчисленногоНалога;
		СтраницаРаздел1["П000010002303" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей1Кв;
		СтраницаРаздел1["П000010002503" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей2Кв;
		СтраницаРаздел1["П000010002703" + "_" + ИндексПараметраРаздела] = ВыборкаОКТМО.СуммаАвансовыхПлатежей3Кв;
		
		НомерБлокаРаздела1 = НомерБлокаРаздела1 + 1;
		
		ВыборкаТранспортныхСредств = ВыборкаОКТМО.Выбрать();
		Пока ВыборкаТранспортныхСредств.Следующий() Цикл

			Если Не ПерваяСтраницаРаздел2 Тогда
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				НомерТекущейСтраницыРаздел2 = Раздел2.Количество()-1;
				
				СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
				Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
					Если Неопределено = Показатель.Значение Тогда 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
					Иначе 
						СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЕсли;
				КонецЦикла;
				
				Раздел2[НомерТекущейСтраницыРаздел2].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
				Раздел2Текущий = Раздел2[НомерТекущейСтраницыРаздел2];
				СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;
			
			Иначе
				ПерваяСтраницаРаздел2 = Ложь;
			КонецЕсли;
			
			СтраницаРаздел2.П000020002003 = ВыборкаТранспортныхСредств.КодПоОКТМО;
			СтраницаРаздел2.П000020003003 = ВыборкаТранспортныхСредств.КодВидаТранспортногоСредства;
			СтраницаРаздел2.П000020004003 = ВыборкаТранспортныхСредств.ИдентификационныйНомер;
			СтраницаРаздел2.П000020005003 = ВыборкаТранспортныхСредств.Марка;
			СтраницаРаздел2.П000020006003 = ВыборкаТранспортныхСредств.РегистрационныйЗнак;
			СтраницаРаздел2.П000020007003 = ВыборкаТранспортныхСредств.ДатаРегистрации;
			СтраницаРаздел2.П000020008003 = ВыборкаТранспортныхСредств.ДатаПрекращенияРегистрации;
			СтраницаРаздел2.П000020009003 = ВыборкаТранспортныхСредств.НалоговаяБаза;
			СтраницаРаздел2.П000020010003 = ВыборкаТранспортныхСредств.ЕдиницаИзмерения;
			СтраницаРаздел2.П000020011003 = ВыборкаТранспортныхСредств.ЭкологическийКласс;
			СтраницаРаздел2.П000020012003 = ВыборкаТранспортныхСредств.КоличествоЛетПрошедшихСГодаВыпускаТС;
			
			Если ЗначениеЗаполнено(ВыборкаТранспортныхСредств.ДатаВыпуска) Тогда
				СтраницаРаздел2.П000020013003 = Формат(ВыборкаТранспортныхСредств.ДатаВыпуска, "ДФ=гггг");
			КонецЕсли;
			
			СтраницаРаздел2.П000020014003 = ВыборкаТранспортныхСредств.КоличествоМесяцевВладения;
			СтраницаРаздел2.П000020015003_Числ = ВыборкаТранспортныхСредств.ДоляВПравеОбщейСобственностиЧислитель;
			СтраницаРаздел2.П000020015003_Знам = ВыборкаТранспортныхСредств.ДоляВПравеОбщейСобственностиЗнаменатель;
			СтраницаРаздел2.П000020017003 = ВыборкаТранспортныхСредств.НалоговаяСтавка;
			СтраницаРаздел2.П000020018003 = ВыборкаТранспортныхСредств.ПовышающийКоэффициент;
			СтраницаРаздел2.П000020020003 = ВыборкаТранспортныхСредств.КоличествоМесяцевЛьготы;
			
			СтраницаРаздел2.П000020022003_КодЛьготы = "";
			СтраницаРаздел2.П000020022003_Основание = "";
			СтраницаРаздел2.П000020023003 = 0;
			СтраницаРаздел2.П000020024003_КодЛьготы = "";
			СтраницаРаздел2.П000020024003_Основание = "";
			СтраницаРаздел2.П000020024003_Процент 	= 0;
			СтраницаРаздел2.П000020025003 = 0;
			СтраницаРаздел2.П000020026003_КодЛьготы = "";
			СтраницаРаздел2.П000020026003_Основание = "";
			СтраницаРаздел2.П000020026003_Ставка 	= 0;
			СтраницаРаздел2.П000020030003 = 0;
			
			// При освобождении организации от уплаты налога за 2-й квартал 2020 года необходимо использовать особые коды льгот
			// ( см. письмо ФНС от 10.06.2020 № БС-4-21/9576@ - далее Письмо) 
			Если ВыборкаТранспортныхСредств.КодНалоговойЛьготы  = "20230" Тогда
				// Льгота в виде снижения налоговой ставки
				СтраницаРаздел2.П000020026003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020026003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
				Если ВыборкаТранспортныхСредств.ЛьготнаяСтавка < ВыборкаТранспортныхСредств.НалоговаяСтавка Тогда 
					СтраницаРаздел2.П000020026003_Ставка = ВыборкаТранспортныхСредств.ЛьготнаяСтавка;
				КонецЕсли;
			ИначеЕсли ВыборкаТранспортныхСредств.КодНалоговойЛьготы  = "20220" Тогда 
				// Льгота в виде уменьшения суммы налога на процент
				Если ПрименяетсяОсвобождениеОтНалога Тогда
					// Абз. 2 п.1 Письма: "Если организация освобождается от [уплаты налога за 2-й квартал 2020 года] ... 
					// и [для организации]... законом субъекта Российской Федерации также установлена налоговая льгота 
					// в виде уменьшения суммы транспортного налога, подлежащей уплате в бюджет, то
					// в первой части показателя по строке с кодом 240 ... указывается [код]..."
					Если ЭтоНекоммерческаяОрганизация Тогда
						// ... 10206 (код льготы для социально-ориентированных НКО - на данный момент опубликован только реестр таких НКО)
						СтраницаРаздел2.П000020024003_КодЛьготы = "10206";
					Иначе
						// ... 10205 (если организация не является НКО)
						СтраницаРаздел2.П000020024003_КодЛьготы = "10205";
					КонецЕсли;	
					// "...по строке с кодом 250 ... указывается сумма налоговой льготы в рублях (в том числе с учетом суммы авансового платежа
					// за период владения объектом налогообложения с 1 апреля по 30 июня 2020 года)"
					СтраницаРаздел2.П000020025003 = ВыборкаТранспортныхСредств.СуммаНалоговойЛьготы + ВыборкаТранспортныхСредств.СуммаОсвобожденияОтУплатыНалога;
				Иначе	
					СтраницаРаздел2.П000020024003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
					Если ВыборкаТранспортныхСредств.ПроцентУменьшения > 0 И ВыборкаТранспортныхСредств.ПроцентУменьшения < 100 Тогда 
						СтраницаРаздел2.П000020024003_Процент = ВыборкаТранспортныхСредств.ПроцентУменьшения;
					КонецЕсли;
				КонецЕсли;	
				СтраницаРаздел2.П000020024003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
			Иначе
				// Льгота в виде освобождения от налога
				СтраницаРаздел2.П000020022003_КодЛьготы = ВыборкаТранспортныхСредств.КодНалоговойЛьготы;
				СтраницаРаздел2.П000020022003_Основание = ВыборкаТранспортныхСредств.РегиональныйКодЛьготы;
			КонецЕсли;
			
			// Если нет "обычной" льготы в виде уменьшения суммы налога, то освобождение от налога за 2-й квартал отражается особым образом.
			// Абз. 1 п.1 Письма: "Если организация освобождается от [уплаты налога за 2-й квартал 2020 года] ..., то
			// в первой части показателя по строке с кодом 240 ... указывается [код]..."
			Если ПрименяетсяОсвобождениеОтНалога И ВыборкаТранспортныхСредств.КодНалоговойЛьготы <> "20220" Тогда
				Если ЭтоНекоммерческаяОрганизация Тогда
					// ... 10202 (код льготы для социально-ориентированных НКО - на данный момент опубликован только реестр таких НКО)
					СтраницаРаздел2.П000020024003_КодЛьготы = "10202";
				Иначе
					// ... 10201 (если организация не является НКО)
					СтраницаРаздел2.П000020024003_КодЛьготы = "10201";
				КонецЕсли;	
				// "...по строке с кодом 250 ... указывается сумма налоговой льготы в рублях"
				СтраницаРаздел2.П000020025003 = ВыборкаТранспортныхСредств.СуммаОсвобожденияОтУплатыНалога;
			КонецЕсли;
			
			СтраницаРаздел2.П000020028003 = "";
			СтраницаРаздел2.П000020029003 = 0;
			
			Если ВыборкаТранспортныхСредств.СуммаНалоговогоВычета > 0 Тогда
				СтраницаРаздел2.П000020028003 = "40200";
				СтраницаРаздел2.П000020029003 = ВыборкаТранспортныхСредств.СуммаНалоговогоВычета;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
			
КонецПроцедуры

#КонецОбласти

#Область ЗаявлениеОЛьготеПоТранспортномуЗемельномуНалогу

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхЗаявленияОЛьготеПоТранспортномуЗемельномуНалогу(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "ВидТС", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "МаркаТС", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "РегЗнакТС", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "КодНалЛьготТр", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "СтруктЕдЗакон", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "НомКадастрЗУ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "КодНалЛьготЗем", Истина, Ложь);
		
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьЗаявлениеОЛьготеПоТранспортномуЗемельномуНалогу(ПараметрыОтчета, Контейнер) Экспорт
	
	#Область ЛьготыПоТранспортнымСредствам
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РегистрацияТССрезПоследних.КодВидаТранспортногоСредства КАК КодВидаТС,
	|	РегистрацияТССрезПоследних.Марка КАК Марка,
	|	РегистрацияТССрезПоследних.РегистрационныйЗнак КАК РегистрационныйЗнак,
	|	РегистрацияТССрезПоследних.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
	|	РегистрацияТССрезПоследних.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы
	|ИЗ
	|	РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(&Период, Организация = &Организация) КАК РегистрацияТССрезПоследних
	|ГДЕ
	|	РегистрацияТССрезПоследних.ВключатьВНалоговуюБазу
	|	И НЕ РегистрацияТССрезПоследних.НалоговаяЛьгота В (ЗНАЧЕНИЕ(Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.ПустаяССылка), ЗНАЧЕНИЕ(Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется))";
	
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("Период", 	?(ЗначениеЗаполнено(ПараметрыОтчета.ДатаПодписи), ПараметрыОтчета.ДатаПодписи, ОбщегоНазначения.ТекущаяДатаПользователя()));
	
	ВыборкаТС = Запрос.Выполнить().Выбрать();
	
	// Подготовим таблицу соответствия кодов видов ТС, используемых в декларации по транспортному налогу,
	// и номеров категорий ТС, используемых в заявлении на льготу 
	Макет = РегистрыСведений.РегистрацияТранспортныхСредств.ПолучитьМакет("КодыВидовИКатегорииТС");
	КодыВидовИКатегорииТС = ОбщегоНазначения.ПрочитатьXMLВТаблицу(Макет.ПолучитьТекст()).Данные;
		
	Пока ВыборкаТС.Следующий() Цикл
		
		// Контейнер приходит с пустой таблицей раздела 5 (Транспорт) 
		ДанныеСтраницы = Контейнер.Транспорт.Добавить();
		ДанныеСтраницы.УИД = Новый УникальныйИдентификатор;
		
		НайденнаяСтрока = КодыВидовИКатегорииТС.Найти(ВыборкаТС.КодВидаТС, "КодВида");
		Если НайденнаяСтрока <> Неопределено Тогда
			ДанныеСтраницы.ВидТС = НайденнаяСтрока.НомерКатегории;
		КонецЕсли;
		
		ДанныеСтраницы.МаркаТС = ВыборкаТС.Марка;
		ДанныеСтраницы.РегЗнакТС = ВыборкаТС.РегистрационныйЗнак;
		ДанныеСтраницы.КодНалЛьготТр = ВыборкаТС.КодНалоговойЛьготы;
		ДанныеСтраницы.СтруктЕдЗакон = ВыборкаТС.РегиональныйКодЛьготы;
		
	КонецЦикла;
	
	#КонецОбласти
	
	#Область ЛьготыПоЗемельнымУчасткам
	
	// Коды льгот указаны в приложении №2 к порядку заполнения формы заявления о льготе (Приказ ФНС России от 25.07.2019 N ММВ-7-21/377@) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РегистрацияЗемельныхУчастковСрезПоследних.КадастровыйНомер КАК КадастровыйНомер,
	|	ВЫБОР
	|		КОГДА РегистрацияЗемельныхУчастковСрезПоследних.НалоговаяЛьготаПоНалоговойБазе = ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.УменьшениеНалоговойБазы)
	|			ИЛИ РегистрацияЗемельныхУчастковСрезПоследних.НеОблагаемаяНалогомСумма > 0
	|			ТОГДА ""3022100""
	|		КОГДА РегистрацияЗемельныхУчастковСрезПоследних.СуммаУменьшенияСуммыНалога > 0 ИЛИ РегистрацияЗемельныхУчастковСрезПоследних.ПроцентУменьшенияСуммыНалога > 0
	|			ТОГДА ""3022200""
	|		КОГДА РегистрацияЗемельныхУчастковСрезПоследних.НалоговаяЛьготаПоНалоговойБазе = ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеОблагаемаяНалогомПлощадь)
	|			ТОГДА ""3022300""
	|		КОГДА РегистрацияЗемельныхУчастковСрезПоследних.НалоговаяЛьготаПоНалоговойБазе = ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ОсвобождениеОтНалогообложенияМестное)
	|			ТОГДА ""3022400""
	|		КОГДА РегистрацияЗемельныхУчастковСрезПоследних.СниженнаяНалоговаяСтавка > 0
	|			ТОГДА ""3022500""
	|		ИНАЧЕ РегистрацияЗемельныхУчастковСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395
	|	КОНЕЦ КАК КодНалоговойЛьготы
	|ИЗ
	|	РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(&Период, Организация = &Организация) КАК РегистрацияЗемельныхУчастковСрезПоследних
	|ГДЕ
	|	РегистрацияЗемельныхУчастковСрезПоследних.ВключатьВНалоговуюБазу
	|	И (НЕ РегистрацияЗемельныхУчастковСрезПоследних.НалоговаяЛьготаПоНалоговойБазе В (ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ПустаяССылка), ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеПрименяется))
	|			ИЛИ РегистрацияЗемельныхУчастковСрезПоследних.НеОблагаемаяНалогомСумма > 0
	|			ИЛИ РегистрацияЗемельныхУчастковСрезПоследних.СниженнаяНалоговаяСтавка > 0
	|			ИЛИ РегистрацияЗемельныхУчастковСрезПоследних.ПроцентУменьшенияСуммыНалога > 0
	|			ИЛИ РегистрацияЗемельныхУчастковСрезПоследних.СуммаУменьшенияСуммыНалога > 0)";
	
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("Период", 	?(ЗначениеЗаполнено(ПараметрыОтчета.ДатаПодписи), ПараметрыОтчета.ДатаПодписи, ОбщегоНазначения.ТекущаяДатаПользователя()));
	
	ВыборкаЗУ = Запрос.Выполнить().Выбрать();
				
	Пока ВыборкаЗУ.Следующий() Цикл
		
		// Контейнер приходит с пустой таблицей раздела 6 (Земля) 
		ДанныеСтраницы = Контейнер.Земля.Добавить();
		ДанныеСтраницы.УИД = Новый УникальныйИдентификатор;
				
		ДанныеСтраницы.НомКадастрЗУ = ВыборкаЗУ.КадастровыйНомер;
		ДанныеСтраницы.КодНалЛьготЗем = ВыборкаЗУ.КодНалоговойЛьготы;
		
	КонецЦикла;
	
	#КонецОбласти
	
КонецПроцедуры

#КонецОбласти

#Область БаннерОтменаДекларацииПоТранспортномуЗемельномуНалогу

// Возвращает текст для баннера с сообщением об отмене деклараций по транспортному или земельному налогу
//
// Параметры:
//   КодЗадачи   - Строка - код задачи по уплате налога
//
// Возвращаемое значение:
//   ФорматированнаяСтрока
//
Функция ТекстБаннераОтменаДекларацииПоНалогу(КодЗадачи) Экспорт
	
	СоставСтроки = Новый Массив;
	
	ПредставлениеВидНалога = "";
	СсылкаНаПорядокУплаты = "";

	Если КодЗадачи = ЗадачиБухгалтераКлиентСервер.КодЗадачиТранспортныйНалог() Тогда
		ПредставлениеВидНалога = НСтр("ru = 'транспортному налогу'");
	ИначеЕсли КодЗадачи = ЗадачиБухгалтераКлиентСервер.КодЗадачиЗемельныйНалог() Тогда
		ПредставлениеВидНалога = НСтр("ru = 'земельному налогу'");
	Иначе	
		Возврат Новый ФорматированнаяСтрока(СоставСтроки);
	КонецЕсли;	
		
	// Переводы строки для читаемости при разработке. Перед выводом будут удалены
	ТекстПодсказки = СтрШаблон(НСтр("ru = 'С 1 января 2021 года отменяется декларация по %1
		|(см. Приказ ФНС России от 04.09.2019 № ММВ-7-21/440@).
		|Таким образом, начиная с отчетности за 2020 год декларация не подается.'"), ПредставлениеВидНалога);
	СоставСтроки.Добавить(СтрЗаменить(ТекстПодсказки, Символы.ПС, " "));
	
	СоставСтроки.Добавить(Символы.ПС);
	СоставСтроки.Добавить(Символы.ПС);
	
	СоставСтроки.Добавить(СтроковыеФункции.ФорматированнаяСтрока(
		СтрШаблон("<a href='https://its.1c.ru/db/newsclar#content:465489:hdoc'>%1</a>", НСтр("ru = 'Подробнее на ИТС'"))));
			
	Возврат Новый ФорматированнаяСтрока(СоставСтроки);
	
КонецФункции

// Возвращает текст для баннера с сообщением об изменении сроков уплаты транспортного или земельного налога и авансовых платежей
//
// Параметры:
//   КодЗадачи   - Строка - код задачи по уплате налога
//
// Возвращаемое значение:
//   ФорматированнаяСтрока
//
Функция ТекстБаннераИзменениеСроковУплатыНалога(КодЗадачи) Экспорт
	
	СоставСтроки = Новый Массив;
	
	ПредставлениеВидНалога = "";
	СсылкаНаПорядокУплаты = "";

	Если КодЗадачи = ЗадачиБухгалтераКлиентСервер.КодЗадачиТранспортныйНалог() Тогда
		СсылкаНаПорядокУплаты = "https://its.1c.ru/db/taxtrans#content:33:hdoc";
	ИначеЕсли КодЗадачи = ЗадачиБухгалтераКлиентСервер.КодЗадачиЗемельныйНалог() Тогда
		СсылкаНаПорядокУплаты = "https://its.1c.ru/db/taxland#content:35:hdoc";
	Иначе	
		Возврат Новый ФорматированнаяСтрока(СоставСтроки);
	КонецЕсли;	
			
	// Переводы строки для читаемости при разработке. Перед выводом будут удалены
	ТекстПодсказки = СтрШаблон(НСтр("ru = 'С 2021 года налог уплачивается в срок не позднее <b>1 марта</b> года,
		|следующего за истекшим налоговым периодом.
		|Это положение действует начиная с уплаты налога за 2020 год.'"));
	
	ТекстПодсказки = СтрЗаменить(ТекстПодсказки, Символы.ПС, " ");
	СоставСтроки.Добавить(СтроковыеФункции.ФорматированнаяСтрока(ТекстПодсказки));
	
	СоставСтроки.Добавить(Символы.ПС);
	
	ТекстПодсказки = СтрШаблон(НСтр("ru = 'Авансовые платежи уплачиваются не позднее <b>30 апреля</b>, <b>31 июля</b> и <b>31 октября</b>.'"));
	СоставСтроки.Добавить(СтроковыеФункции.ФорматированнаяСтрока(ТекстПодсказки));
	
	СоставСтроки.Добавить(Символы.ПС);
	
	СоставСтроки.Добавить(НСтр("ru = 'См. 325-ФЗ от 29.09.2019.'"));
	
	СоставСтроки.Добавить(Символы.ПС);
	СоставСтроки.Добавить(Символы.ПС);
	
	СоставСтроки.Добавить(СтроковыеФункции.ФорматированнаяСтрока(
		СтрШаблон("<a href='%1'>%2</a>", СсылкаНаПорядокУплаты, НСтр("ru = 'Подробнее на ИТС'"))));
	
	Возврат Новый ФорматированнаяСтрока(СоставСтроки);
	
КонецФункции

// Возвращает признак видимости баннера с сообщением об отмене декларации по налогу
//
// Параметры:
//   КодЗадачи   - Строка - код задачи по уплате налога
//   Период      - Дата - период, для которого требуется проверить видимость баннера, 
//				   Неопределено - если проверка периода не требуется
//
// Возвращаемое значение:
//   Булево
//
Функция ВидимостьБаннераОтменаДекларацииПоНалогу(КодЗадачи, Период = Неопределено) Экспорт
	
	Если КодЗадачи <> ЗадачиБухгалтераКлиентСервер.КодЗадачиТранспортныйНалог() 
		 И КодЗадачи <> ЗадачиБухгалтераКлиентСервер.КодЗадачиЗемельныйНалог() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Баннер выводим только в задачах по уплате налога по результатм года, но не ранее периода 2020 года.
	// Так как задачи по представлению декларации в указанный период уже не формируются,
	// то здесь не требуется проверять вид задачи (отчет или уплата).
	Если Период <> Неопределено И (Период < '20201231' Или КонецДня(Период) <> КонецГода(Период)) Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	Возврат ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ВидимостьБаннераОтменаДекларацииПоТранспортномуЗемельномуНалогу",
		КодЗадачи,
		Истина);
		
КонецФункции

// Возвращает признак видимости баннера с сообщением об изменении сроков уплаты налога
//
// Параметры:
//   КодЗадачи   - Строка - код задачи по уплате налога
//   Период      - Дата - период, для которого требуется проверить видимость баннера, 
//				   Неопределено - если проверка периода не требуется
//
// Возвращаемое значение:
//   Булево
//
Функция ВидимостьБаннераИзменениеСроковУплатыНалога(КодЗадачи, Период = Неопределено) Экспорт
	
	Если КодЗадачи <> ЗадачиБухгалтераКлиентСервер.КодЗадачиТранспортныйНалог()
		 И КодЗадачи <> ЗадачиБухгалтераКлиентСервер.КодЗадачиЗемельныйНалог() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Баннер выводим в задачах по уплате налога (авансовых платежей) не ранее периода за 2020 год.
	// Так как задачи по представлению декларации в указанный период уже не формируются,
	// то здесь не требуется проверять вид задачи (отчет или уплата).
	Если Период <> Неопределено И Период < '20201231' Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	Возврат ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ВидимостьБаннераИзменениеСроковУплатыНалога",
		КодЗадачи,
		Истина);
	
КонецФункции

// Сохраняет признак видимости баннера с сообщением об отмене декларации по налогу
//
// Параметры:
//   КодЗадачи   - Строка - код задачи по уплате налога
//   ЗначениеНастройки - Булево - сохраняемый признак видимости баннера
//
Процедура СохранитьНастройкуБаннераОтменаДекларацииПоНалогу(КодЗадачи, ЗначениеНастройки) Экспорт
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		"ВидимостьБаннераОтменаДекларацииПоТранспортномуЗемельномуНалогу",
		КодЗадачи,
		ЗначениеНастройки);
		
КонецПроцедуры

// Сохраняет признак видимости баннера с сообщением об изменении сроков уплаты налога
//
// Параметры:
//   КодЗадачи   - Строка - код задачи по уплате налога
//   ЗначениеНастройки - Булево - сохраняемый признак видимости баннера
//
Процедура СохранитьНастройкуБаннераИзменениеСроковУплатыНалога(КодЗадачи, ЗначениеНастройки) Экспорт
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		"ВидимостьБаннераИзменениеСроковУплатыНалога",
		КодЗадачи,
		ЗначениеНастройки);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана = Неопределено, КПП = Неопределено)
	
	НалоговыйОрган = Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка();
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		КодыРегистрацииОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "КодНалоговогоОргана, КПП");
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Код", ?(ЗначениеЗаполнено(КодНалоговогоОргана), КодНалоговогоОргана, КодыРегистрацииОрганизации.КодНалоговогоОргана));
		Запрос.УстановитьПараметр("КПП", ?(ЗначениеЗаполнено(КПП), КПП, КодыРегистрацииОрганизации.КПП));
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫБОР
		|		КОГДА Организации.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
		|				И Организации.ОбособленноеПодразделение
		|			ТОГДА Организации.ГоловнаяОрганизация
		|		ИНАЧЕ Организации.Ссылка
		|	КОНЕЦ КАК Организация
		|ПОМЕСТИТЬ ВТ_Организации
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка = &Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегистрацииВНалоговомОргане.Ссылка,
		|	РегистрацииВНалоговомОргане.Владелец
		|ПОМЕСТИТЬ ВТ_РегистрацииВНалоговомОргане
		|ИЗ
		|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
		|ГДЕ
		|	РегистрацииВНалоговомОргане.ПометкаУдаления = ЛОЖЬ
		|	И РегистрацииВНалоговомОргане.Код = &Код
		|	И РегистрацииВНалоговомОргане.КПП = &КПП
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_РегистрацииВНалоговомОргане.Ссылка
		|ИЗ
		|	ВТ_Организации КАК ВТ_Организации
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РегистрацииВНалоговомОргане КАК ВТ_РегистрацииВНалоговомОргане
		|		ПО ВТ_Организации.Организация = ВТ_РегистрацииВНалоговомОргане.Владелец";
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
		
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			НалоговыйОрган = Выборка.Ссылка;
		
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат НалоговыйОрган;
	
КонецФункции // ПолучитьРегистрациюВНалоговомОрганеПоОрганизации()

Процедура ДобавитьСтрокуРасшифровки(ТаблицаРасшифровок, ИмяПоказателя, НаименованиеПоказателя, ЗнакОперации, НаименованиеСлагаемого, Сумма, ИмяРаздела, ДополнительныеПараметры = Неопределено)
	ЗаполнениеРасшифровкаРегламентированнойОтчетности.ДобавитьСтрокуРасшифровки(ТаблицаРасшифровок, ИмяПоказателя, НаименованиеПоказателя, ЗнакОперации, НаименованиеСлагаемого, Сумма, ИмяРаздела, ДополнительныеПараметры);
КонецПроцедуры

Процедура ДобавитьЗначениеВОтбор(Отбор, ЛевоеЗначение, ВидСравнения, ПравоеЗначение)
		  
	ЭлементОтбора = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ЭлементОтбора.ЛевоеЗначение 	= ЛевоеЗначение;
	ЭлементОтбора.ВидСравнения 		= ВидСравнения;
	ЭлементОтбора.ПравоеЗначение 	= ПравоеЗначение;
	ЭлементОтбора.Использование 	= Истина;
	ЭлементОтбора.РежимОтображения 	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	
КонецПроцедуры  

// Функция возвращает строку с описание для пользователя ссылки в интерфейсе, 
// где расположен регистр сведений "Регистрация транспортных средств".
// 
// Возвращаемое значение:
//	 Строка 
//
Функция ОписаниеПутиВИнтерфейсеКРегистрацииТранспортныхСредств()

	Возврат НСтр("ru = '(меню ""Главное"" - ""Налоги и отчеты"" - ""Транспортный налог"" - ""Регистрация транспортных средств"")'");

КонецФункции // ПолучитьОписаниеПутиКОбъектуВИнтерфейсе()

// Функция возвращает строку с описание для пользователя ссылки в интерфейсе, 
// где расположена форма регистров сведений "Ставки налога на имущество"
// и "Ставки налога на имущество по отдельным основным средствам".
// 
// Возвращаемое значение:
//	 Строка 
//
Функция ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество()

	Возврат НСтр("ru = '(меню ""Главное"" - ""Налоги и отчеты"" - ""Налог на имущество"")'");

КонецФункции // ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество()

// Функция возвращает строку с описание для пользователя ссылки в интерфейсе, 
// где расположена регистр сведений "Порядок уплаты налогов на местах".
// 
// Возвращаемое значение:
//	 Строка 
//
Функция ОписаниеПутиВИнтерфейсеКПорядкуУплатыНалоговНаМестах()
	
	Возврат НСтр("ru = '(меню ""Главное"" - ""Налоги и отчеты"" - ""Налог на имущество"" - "" - ""Порядок уплаты"")'");

КонецФункции // ОписаниеПутиВИнтерфейсеКПорядкуУплатыНалоговНаМестах()

// Функция возвращает строку с описание для пользователя ссылки в интерфейсе, 
// где расположен регистр сведений "Регистрация земельных участков".
// 
// Возвращаемое значение:
//	 Строка 
//
Функция ОписаниеПутиВИнтерфейсеКРегистрацииЗемельныхУчастков()

	Возврат НСтр("ru = '(меню ""Главное"" - ""Налоги и отчеты"" - ""Земельный налог"" - ""Регистрация земельных участков"")'");

КонецФункции // ПолучитьОписаниеПутиКОбъектуВИнтерфейсе()

Функция ДеревоЗначенийРегОтчет()
	
	НовоеДеревоЗначений = Новый ДеревоЗначений();
	НовоеДеревоЗначений.Колонки.Добавить("Данные");
	НовоеДеревоЗначений.Колонки.Добавить("ДанныеМногострочныхЧастей");
	
	Возврат НовоеДеревоЗначений;
	
КонецФункции

#КонецОбласти
