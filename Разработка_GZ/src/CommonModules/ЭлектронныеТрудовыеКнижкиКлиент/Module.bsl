#Область СлужебныйПрограммныйИнтерфейс

Процедура НаименованиеДокументаПриИзменении(Организация, ВидДокумента, НаименованиеДокумента) Экспорт
	
	ЭлектронныеТрудовыеКнижкиВызовСервера.НаименованиеДокументаПриИзмененииНаСервере(
		Организация, ВидДокумента, НаименованиеДокумента);
	
КонецПроцедуры

Процедура НаименованиеДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	ЗарплатаКадрыКлиент.ОткрытьФормуСпискаЗначенийСтроковогоРеквизита(Элемент,
		СтандартнаяОбработка, "НаименованиеДокументаТК", НСтр("ru = 'Наименования документов'"),
		НСтр("ru = 'Наименование документа'"));
	
КонецПроцедуры

Процедура НаименованиеДокументаОбработкаВыбора(Реквизит, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Строка") Тогда
		Реквизит = ВыбранноеЗначение;
	КонецЕсли;
	
КонецПроцедуры

Процедура НаименованиеДокументаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка) Экспорт
	
	ЗарплатаКадрыКлиент.ПодборЗначенияСтроковогоРеквизита(Текст, ДанныеВыбора, СтандартнаяОбработка, "НаименованиеДокументаТК");
	
КонецПроцедуры

Процедура ДопуститьИзменениеДокумента(УправляемаяФорма) Экспорт
	
	УправляемаяФорма.ТолькоПросмотр = Ложь;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		УправляемаяФорма.Элементы,
		"КнопкаИзменитьДокументЭТК",
		"Видимость",
		Ложь);
	
КонецПроцедуры

Процедура ОткрытьФормуВыбораОтправленныхСобытийФизическогоЛицаОрганизации(Владелец, ФизическоеЛицо, Организация, ДатаДокумента, ОписаниеОповещения = Неопределено) Экспорт
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Организация", Организация);
	ПараметрыОткрытия.Вставить("ФизическоеЛицо", ФизическоеЛицо);
	ПараметрыОткрытия.Вставить("ДатаДокумента", ДатаДокумента);
	
	ОткрытьФорму("РегистрСведений.МероприятияТрудовойДеятельности.Форма.ФормаВыбораСобытий",
		ПараметрыОткрытия, Владелец, Истина, , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

Процедура СохранитьСТДРНаДиск(СсылкаНаДокумент, ДополнительныеПараметрыСохранения) Экспорт
	
	ДанныеФайлаСТДР = ЭлектронныеТрудовыеКнижкиВызовСервера.ДанныеФайлаСТДР(СсылкаНаДокумент);
	
	Если ЗначениеЗаполнено(ДанныеФайлаСТДР.Ссылка) Тогда
		СохранитьПрисоединенныйФайлСТДРНаДиск(ДанныеФайлаСТДР.Ссылка, ДополнительныеПараметрыСохранения.Форма.УникальныйИдентификатор);
		Возврат;
	КонецЕсли;
	
	ИспользоватьЭлектронныеПодписи = Ложь;
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ЭлектроннаяПодпись") Тогда
		МодульЭлектроннаяПодписьКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ЭлектроннаяПодписьКлиент");
		ИспользоватьЭлектронныеПодписи = МодульЭлектроннаяПодписьКлиент.ИспользоватьЭлектронныеПодписи();
	КонецЕсли;
	
	Хранение = ЭлектронныеТрудовыеКнижкиВызовСервера.АдресДанныхФайлаСТДР(ДанныеФайлаСТДР.Данные,
		ДополнительныеПараметрыСохранения.Форма.УникальныйИдентификатор);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("СсылкаНаДокумент", СсылкаНаДокумент);
	ДополнительныеПараметры.Вставить("ИмяФайла", ДанныеФайлаСТДР.ИмяФайла);
	ДополнительныеПараметры.Вставить("Хранение", Хранение);
	ДополнительныеПараметры.Вставить("Ссылка", ДанныеФайлаСТДР.Ссылка);
	ДополнительныеПараметры.Вставить("Организация", ДополнительныеПараметрыСохранения.Источник.Организация);
	ДополнительныеПараметры.Вставить("ИдентификаторФормы", ДополнительныеПараметрыСохранения.Форма.УникальныйИдентификатор);
	
	Если Не ИспользоватьЭлектронныеПодписи Тогда
		
		ТекстВопроса = НСтр("ru = 'Согласно порядку заполнения форма СТД-Р в электронном виде должна быть подписана усиленной квалифицированной электронной подписью.
			|На компьютере не используются средства для подписания файлов.
			|Сохранить не подписанный файл СТД-Р?'");
		
		Оповещение = Новый ОписаниеОповещения("СохранитьСТДРНаДискБезИспользованияЭлектроннойПодписи",
			ЭлектронныеТрудовыеКнижкиКлиент, ДополнительныеПараметры);
		
		ПоказатьВопрос(Оповещение , ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	Иначе
		
		ТекстВопроса = НСтр("ru = 'Согласно порядку заполнения форма СТД-Р в электронном виде должна быть подписана усиленной квалифицированной электронной подписью.
			|Подписать файл СТД-Р?'");
		
		Оповещение = Новый ОписаниеОповещения("СохранитьСТДРНаДискСИспользованиемЭлектроннойПодписи",
			ЭлектронныеТрудовыеКнижкиКлиент, ДополнительныеПараметры);
		
		ПоказатьВопрос(Оповещение , ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СохранитьСТДРНаДискБезИспользованияЭлектроннойПодписи(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Или Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьФайлСТДРНаДиск(ДополнительныеПараметры.Хранение, ДополнительныеПараметры.ИмяФайла);
	
КонецПроцедуры

Процедура СохранитьСТДРНаДискСИспользованиемЭлектроннойПодписи(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Или Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Состояние(НСтр("ru = 'Выполняется подписание файла СТД-Р.'"));
		
		Оповещение = Новый ОписаниеОповещения("СохранитьПодписанныйСТДР", ЭлектронныеТрудовыеКнижкиКлиент, ДополнительныеПараметры);
		
		ИнтерфейсыВзаимодействияБРОКлиент.ПодписатьФайлXMLDSig(
			Оповещение, ДополнительныеПараметры.Организация, ДополнительныеПараметры.Хранение);
		
	Иначе
		СохранитьФайлСТДРНаДиск(ДополнительныеПараметры.Хранение, ДополнительныеПараметры.ИмяФайла);
	КонецЕсли;
	
КонецПроцедуры

Процедура СохранитьПодписанныйСТДР(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		
		ЭлектронныеТрудовыеКнижкиВызовСервера.ОбновитьФайлСТДР(
			ДополнительныеПараметры.СсылкаНаДокумент,
			Результат,
			ДополнительныеПараметры.ИмяФайла,
			ДополнительныеПараметры.Ссылка);
		
		Оповестить("ЗаписьФайлаСТДР", ДополнительныеПараметры.Ссылка, ДополнительныеПараметры.ИдентификаторФормы);
		СохранитьПрисоединенныйФайлСТДРНаДиск(ДополнительныеПараметры.Ссылка, ДополнительныеПараметры.ИдентификаторФормы);
		
	Иначе
		
		ПоказатьПредупреждение(, НСтр("ru = 'Не удалось подписать файл СТД-Р'"));
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРегистрациюОтменыМероприятий(Организация, ДанныеОтменяемыхМероприятий, ОписаниеОповещения = Неопределено) Экспорт
	
	Если ДанныеОтменяемыхМероприятий <> Неопределено
		И ДанныеОтменяемыхМероприятий.Количество() > 0 Тогда
		
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("Организация", Организация);
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ОтменяемыеМероприятия", ДанныеОтменяемыхМероприятий);
		ПараметрыОткрытия.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
		ОткрытьФорму("Документ.РегистрацияТрудовойДеятельности.ФормаОбъекта", ПараметрыОткрытия, ЭтотОбъект,
			Истина, , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРегистраторМероприятия(ДанныеРегистраторов, ОписаниеОповещения = Неопределено) Экспорт
	
	Если ДанныеРегистраторов <> Неопределено
		И ДанныеРегистраторов.Количество() > 0 Тогда
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("Ключ", ДанныеРегистраторов[0].Регистратор);
		
		ИмяФормыДокумента = СтрШаблон(
			"Документ.%1.ФормаОбъекта",
			ЭлектронныеТрудовыеКнижкиВызовСервера.ИмяОбъектаМетаданных(ПараметрыОткрытия.Ключ));
		
		ОткрытьФорму(ИмяФормыДокумента, ПараметрыОткрытия, ЭтотОбъект, Истина, , ,
			ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СохранитьФайлСТДРНаДиск(Хранение, ИмяФайла)
	
	ПараметрыСохранения = ФайловаяСистемаКлиент.ПараметрыСохраненияФайла();
	ПараметрыСохранения.Диалог.Заголовок = НСтр("ru = 'Сохранить файл СТД-Р'");
	
	ФайловаяСистемаКлиент.СохранитьФайл(Неопределено, Хранение, ИмяФайла + ".XML", ПараметрыСохранения);
	
КонецПроцедуры

Процедура СохранитьПрисоединенныйФайлСТДРНаДиск(СсылкаНаПрисоединенныйФайл, ИдентификаторФормы)
	
	РаботаСФайламиКлиент.СохранитьФайлКак(
		РаботаСФайламиКлиент.ДанныеФайла(
			СсылкаНаПрисоединенныйФайл, ИдентификаторФормы));
	
КонецПроцедуры

#КонецОбласти
