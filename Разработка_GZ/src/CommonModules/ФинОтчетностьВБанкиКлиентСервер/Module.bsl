#Область ПрограммныйИнтерфейс

// Определяет, подходит ли сертификат для выполнения указанной операции для организации.
//
// Параметры:
//	Сертификат - СертификатКриптографии - Сертификат, для которого выполняется проверка.
//	ПараметрыОтбора - Структура - см. УниверсальныйОбменСБанкамиКлиентСервер.ПараметрыОтбораСертификата().
//	Результат - Структура - см. УниверсальныйОбменСБанкамиКлиентСервер.РезультатФункцийСоответствияОтбору().
//	
Процедура СертификатСоответствуетОтбору(Сертификат, ПараметрыОтбора, Результат) Экспорт

	ДанныеСубъекта = УниверсальныйОбменСБанкамиКлиентСервер.ДанныеСубъектаСертификата(Сертификат);

	ЮридическоеФизическоеЛицо = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыОтбора, "ЮридическоеФизическоеЛицо");
	ЭтоЮрЛицо = (ЮридическоеФизическоеЛицо <> ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо"));
	
	УниверсальныйОбменСБанкамиКлиентСервер.СертификатСоответствуетОтборуПоИНН(ДанныеСубъекта, ЭтоЮрЛицо, ПараметрыОтбора, Результат);

КонецПроцедуры

Функция ЭтоБанкУниверсальногоОбмена(Банк) Экспорт
	
	Возврат ЗначениеЗаполнено(Банк) И ТипЗнч(Банк) = Тип("СправочникСсылка.БанкиУниверсальногоОбмена");
	
КонецФункции

Функция СобытиеЖурналаРегистрации(ВариантСобытия = "") Экспорт
	
	ИмяСобытия = НСтр("ru = '1С:ФинОтчетность'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	Если Не ПустаяСтрока(ВариантСобытия) Тогда
		ИмяСобытия = ИмяСобытия + "." + ВариантСобытия;
	КонецЕсли;

	Возврат ИмяСобытия;
	
КонецФункции

Функция ИмяПараметраДатыПоследнегоОбмена() Экспорт
	
	Возврат "ДатаОбменаССервером";
	
КонецФункции

#Область СтатусыОтчета

Функция СтатусОшибка() Экспорт
	
	Возврат ПредопределенноеЗначение("Перечисление.СтатусыОтправкиФинОтчетностиВБанки.Ошибка");
	
КонецФункции

Функция СтатусДоставлено() Экспорт
	
	Возврат ПредопределенноеЗначение("Перечисление.СтатусыОтправкиФинОтчетностиВБанки.Доставлено");
	
КонецФункции

Функция СтатусОтклонено() Экспорт
	
	Возврат ПредопределенноеЗначение("Перечисление.СтатусыОтправкиФинОтчетностиВБанки.Отклонено");
	
КонецФункции

Функция СтатусОтправлено() Экспорт
	
	Возврат ПредопределенноеЗначение("Перечисление.СтатусыОтправкиФинОтчетностиВБанки.Отправлено");
	
КонецФункции

Функция СтатусСдано() Экспорт
	
	Возврат ПредопределенноеЗначение("Перечисление.СтатусыОтправкиФинОтчетностиВБанки.Сдано");
	
КонецФункции

Функция СтатусНеОтправлено() Экспорт
	
	Возврат ПредопределенноеЗначение("Перечисление.СтатусыОтправкиФинОтчетностиВБанки.НеОтправлено");
	
КонецФункции

Функция ГруппаЗавершенныеОтправки() Экспорт
	
	Возврат "ФинансоваяОтчетностьЗавершенныеОтправки";
	
КонецФункции

Функция ГруппаНеЗавершенныеОтправки() Экспорт
	
	Возврат "ФинансоваяОтчетностьНеЗавершенныеОтправки";
	
КонецФункции

Функция НовыеПараметрыОбработчикаОжиданияВходящихСообщений() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ДатаПоследнегоПолученногоСообщения", Дата(1,1,1));
	Результат.Вставить("ПоказыватьФормуСоСтарымиСообщениями", Истина);
	Результат.Вставить("ЦикловОжиданияДоПоказаФормы", 1);
	Результат.Вставить("ЦикловОжиданияДоПоказаФормыНачальноеЗначение", 6);
	Результат.Вставить("Интервал", 5 * 60); // интервал вызова обработчика 5 минут.
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

Функция ИмяСобытияПометкаПредметаПрочтенным() Экспорт
	
	Возврат "ПометкаОтчетаВБанкПрочтенным";
	
КонецФункции

#КонецОбласти