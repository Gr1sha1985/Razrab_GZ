
////////////////////////////////////////////////////////////////////////////////
// Универсальные методы для справочника Организации
//
// Серверные методы форм справочника Организации
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс



#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПрочитатьДанныеФизическогоЛица(Форма, ФизическоеЛицо, ИменаРеквизитов) Экспорт

	Если НЕ ЗначениеЗаполнено(ФизическоеЛицо) Тогда
		Возврат;
	КонецЕсли;
	
	Если ИменаРеквизитов.Свойство("ФизическоеЛицо") Тогда
		ФизическоеЛицоОбъект = ФизическоеЛицо.ПолучитьОбъект();
		Форма.ЗначениеВРеквизитФормы(ФизическоеЛицоОбъект, ИменаРеквизитов.ФизическоеЛицо);
		Если ИменаРеквизитов.Свойство("ГруппаКонтактныеДанные") Тогда
			// СтандартныеПодсистемы.КонтактнаяИнформация
			УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(
				Форма, ФизическоеЛицоОбъект, ИменаРеквизитов.ГруппаКонтактныеДанные);
			// Конец СтандартныеПодсистемы.КонтактнаяИнформация
		КонецЕсли;
	КонецЕсли;
	
	Если ИменаРеквизитов.Свойство("Гражданство") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ГражданствоФизическихЛицСрезПоследних.Страна.Код КАК СтранаКод
			|ИЗ
			|	РегистрСведений.ГражданствоФизическихЛиц.СрезПоследних КАК ГражданствоФизическихЛицСрезПоследних
			|ГДЕ
			|	ГражданствоФизическихЛицСрезПоследних.ФизическоеЛицо = &ФизическоеЛицо";
		
		Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Форма[ИменаРеквизитов.Гражданство] = ?(
				ЗначениеЗаполнено(Выборка.СтранаКод),
				Выборка.СтранаКод,
				РегистрацияОрганизацииКлиентСервер.КодПустогоЗначенияВСпискеВыбораГражданства());
		КонецЕсли;
	КонецЕсли;
	
	ДокументыФизЛица = КадровыйУчет.ДокументыФизическихЛиц(ФизическоеЛицо, Истина);
	
	КодыФНСДокументов = ДокументыФизическихЛицБП.КодыФНСВидовДокументов();
	ПаспортРФ = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыДокументовФизическихЛиц.ПаспортРФ");
	ВидыПаспортов = Новый Массив;
	ВидыПаспортов.Добавить(ПаспортРФ);
	ВидыПаспортов.Добавить(ДокументыФизическихЛицБП.ВидДокументаПоКодуФНС(
		КодыФНСДокументов.ИностранныйПаспорт));
	
	ДействующийПаспорт = ДокументыФизическихЛицБП.ДанныеДействующегоДокумента(
		ДокументыФизЛица, ВидыПаспортов, , , Истина);
	
	Если ДействующийПаспорт <> Неопределено И ИменаРеквизитов.Свойство("ПаспортныеДанные") Тогда
		ЗаполнитьЗначенияСвойств(Форма[ИменаРеквизитов.ПаспортныеДанные], ДействующийПаспорт);
		Если ДействующийПаспорт.ВидДокумента = ПаспортРФ И ИменаРеквизитов.Свойство("СерияНомерПаспорта") Тогда
			Форма[ИменаРеквизитов.СерияНомерПаспорта] = СтрШаблон("%1 %2", ДействующийПаспорт.Серия, ДействующийПаспорт.Номер);
		ИначеЕсли ИменаРеквизитов.Свойство("ИностранныйПаспортСерияНомер") Тогда
			Форма[ИменаРеквизитов.ИностранныйПаспортСерияНомер] = ?(ЗначениеЗаполнено(ДействующийПаспорт.Серия),
				СтрШаблон("%1 %2", ДействующийПаспорт.Серия, ДействующийПаспорт.Номер), ДействующийПаспорт.Номер);
		КонецЕсли;
	Иначе
		Если ИменаРеквизитов.Свойство("ПаспортныеДанные") Тогда
			НоваяЗаписьДокументыФизЛиц = РегистрыСведений.ДокументыФизическихЛиц.СоздатьМенеджерЗаписи();
			Форма.ЗначениеВРеквизитФормы(НоваяЗаписьДокументыФизЛиц, ИменаРеквизитов.ПаспортныеДанные);
		КонецЕсли;
		Если ИменаРеквизитов.Свойство("СерияНомерПаспорта") Тогда
			Форма[ИменаРеквизитов.СерияНомерПаспорта] = "";
		КонецЕсли;
		Если ИменаРеквизитов.Свойство("ИностранныйПаспортСерияНомер") Тогда
			Форма[ИменаРеквизитов.ИностранныйПаспортСерияНомер] = "";
		КонецЕсли;
	КонецЕсли;
	
	ВидыДокументовОснованияДляПроживанияВРФ = Новый Массив;
	ВидыДокументовОснованияДляПроживанияВРФ.Добавить(ДокументыФизическихЛицБП.ВидДокументаПоКодуФНС(
		КодыФНСДокументов.ВидНаЖительство));
	ВидыДокументовОснованияДляПроживанияВРФ.Добавить(ДокументыФизическихЛицБП.ВидДокументаПоКодуФНС(
		КодыФНСДокументов.РазрешениеНаВременноеПроживание));
	
	ДействующееОснованиеДляПроживанияВРФ = ДокументыФизическихЛицБП.ДанныеДействующегоДокумента(
		ДокументыФизЛица, ВидыДокументовОснованияДляПроживанияВРФ);
	
	Если ДействующееОснованиеДляПроживанияВРФ <> Неопределено
		И ИменаРеквизитов.Свойство("ДанныеОснованияДляПроживанияВРФ") Тогда
		ЗаполнитьЗначенияСвойств(Форма[ИменаРеквизитов.ДанныеОснованияДляПроживанияВРФ],
			ДействующееОснованиеДляПроживанияВРФ);
		Если ИменаРеквизитов.Свойство("СерияНомерОснованияДляПроживания") Тогда
			Форма[ИменаРеквизитов.СерияНомерОснованияДляПроживания] = СтрШаблон(
				"%1 %2", ДействующееОснованиеДляПроживанияВРФ.Серия, ДействующееОснованиеДляПроживанияВРФ.Номер);
		КонецЕсли;
		Если ИменаРеквизитов.Свойство("ВидОснованияДляПроживанияВРФ") Тогда
			КодМВД = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДействующееОснованиеДляПроживанияВРФ.ВидДокумента, "КодМВД");
			Если КодМВД = КодыФНСДокументов.РазрешениеНаВременноеПроживание Тогда
				Форма[ИменаРеквизитов.ВидОснованияДляПроживанияВРФ] =
					РегистрацияОрганизацииКлиентСервер.ЗначениеРазрешенияНаВременноеПроживаниеВСпискеВыбора();
			ИначеЕсли КодМВД = КодыФНСДокументов.ВидНаЖительство Тогда
				Форма[ИменаРеквизитов.ВидОснованияДляПроживанияВРФ] =
					РегистрацияОрганизацииКлиентСервер.ЗначениеВидаНаЖительствоВСпискеВыбора();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПрочитатьУчетнуюПолитику(Форма, Организация) Экспорт
	
	Если УчетнаяПолитика.Существует(Организация, ТекущаяДатаСеанса()) Тогда
		Форма.СтруктураУчетнойПолитики = ОрганизацииФормыВызовСервера.ПараметрыСистемыНалогообложенияПоОрганизации(
			Организация);
	Иначе
		Форма.СтруктураУчетнойПолитики = НастройкиУчета.ОписаниеСтруктурыУчетнойПолитики();
	КонецЕсли;

КонецПроцедуры

Процедура ПодготовитьДанныеФизическогоЛицаПередЗаписью(Форма, ФизическоеЛицо, ПараметрыЗаписи) Экспорт
	
	ИменаРеквизитов = ПараметрыЗаписи.ИменаРеквизитов;
	ФизическоеЛицо.ФИО = СокрП(ФизическоеЛицо.Фамилия + " " + ФизическоеЛицо.Имя + " " + ФизическоеЛицо.Отчество);
	ФизическоеЛицо.Наименование = ФизическоеЛицо.ФИО;
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(Форма, ФизическоеЛицо);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	ФизическоеЛицо.ДополнительныеСвойства.Вставить("ФИОУстановлены");
	Если ИменаРеквизитов.Свойство("ФизическоеЛицо") Тогда
		ПараметрыЗаписи.Вставить("ФизическоеЛицо", ФизическоеЛицо);
	КонецЕсли;
	
	Если ИменаРеквизитов.Свойство("Гражданство") Тогда
		СтранаГражданства = УправлениеКонтактнойИнформацией.СтранаМираПоКодуИлиНаименованию(Форма.Гражданство);
		ПараметрыЗаписи.Вставить("СтранаГражданства", СтранаГражданства);
	Иначе
		СтранаГражданства = Неопределено;
	КонецЕсли;
	ГражданинРФ = СтранаГражданства = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.СтраныМира.Россия");
	ЛицоБезГражданства = СтранаГражданства = Справочники.СтраныМира.ПустаяСсылка();
	КодыВидовДокументов = ДокументыФизическихЛицБП.КодыФНСВидовДокументов();
	Если ИменаРеквизитов.Свойство("ПаспортныеДанные") И Не ЛицоБезГражданства Тогда
		ПаспортныеДанные = Форма[ИменаРеквизитов.ПаспортныеДанные];
		ПаспортныеДанные.Период = ?(ЗначениеЗаполнено(ПаспортныеДанные.ДатаВыдачи), 
			ПаспортныеДанные.ДатаВыдачи, ТекущаяДатаСеанса());
		Если ГражданинРФ Или СтранаГражданства = Неопределено Тогда
			ПаспортныеДанные.ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПаспортРФ;
			Если ИменаРеквизитов.Свойство("СерияНомерПаспорта") Тогда
				СерияНомерПаспорта = Форма[ИменаРеквизитов.СерияНомерПаспорта];
				ЗаполнитьЗначенияСвойств(ПаспортныеДанные, СерияНомерПаспортаРаздельно(СерияНомерПаспорта));
			КонецЕсли;
		Иначе
			ПаспортныеДанные.ВидДокумента = ДокументыФизическихЛицБП.ВидДокументаПоКодуФНС(
				КодыВидовДокументов.ИностранныйПаспорт);
			Если ИменаРеквизитов.Свойство("ИностранныйПаспортСерияНомер") Тогда
				ПаспортныеДанные.Номер = Форма[ИменаРеквизитов.ИностранныйПаспортСерияНомер];
			КонецЕсли;
		КонецЕсли;
		ПаспортныеДанные.ЯвляетсяДокументомУдостоверяющимЛичность = Истина;
		ПаспортныеДанные.СтранаВыдачи = СтранаГражданства;
	КонецЕсли;
	Если ИменаРеквизитов.Свойство("ДанныеОснованияДляПроживанияВРФ") И Не ГражданинРФ
		И ЗначениеЗаполнено(Форма.СерияНомерОснованияДляПроживания) Тогда
		ДанныеОснованияДляПроживанияВРФ = Форма[ИменаРеквизитов.ДанныеОснованияДляПроживанияВРФ];
		ДанныеОснованияДляПроживанияВРФ.Период = ?(ЗначениеЗаполнено(ДанныеОснованияДляПроживанияВРФ.ДатаВыдачи),
			ДанныеОснованияДляПроживанияВРФ.ДатаВыдачи, ТекущаяДатаСеанса());
		ОснованиеРазрешениеНаВременноеПроживание =
			Форма.ВидДокумента = РегистрацияОрганизацииКлиентСервер.ЗначениеРазрешенияНаВременноеПроживаниеВСпискеВыбора();
		ДанныеОснованияДляПроживанияВРФ.ВидДокумента = ?(ОснованиеРазрешениеНаВременноеПроживание,
			ДокументыФизическихЛицБП.ВидДокументаПоКодуФНС(КодыВидовДокументов.РазрешениеНаВременноеПроживание),
			ДокументыФизическихЛицБП.ВидДокументаПоКодуФНС(КодыВидовДокументов.ВидНаЖительство));
		Если ИменаРеквизитов.Свойство("СерияНомерОснованияДляПроживания") Тогда
			СерияИНомерОснованияДляПроживания = Форма[ИменаРеквизитов.СерияНомерОснованияДляПроживания];
			ЗаполнитьЗначенияСвойств(ДанныеОснованияДляПроживанияВРФ,
				ДокументыФизическихЛицБП.СерияНомерДокументаРаздельно(СерияИНомерОснованияДляПроживания));
		КонецЕсли;
		ДанныеОснованияДляПроживанияВРФ.ЯвляетсяДокументомУдостоверяющимЛичность = ЛицоБезГражданства;
	КонецЕсли;
	
КонецПроцедуры

Функция СерияНомерПаспортаРаздельно(СерияНомерПаспорта) Экспорт
	
	СтруктураНомера = Новый Структура();
	СтруктураНомера.Вставить("Серия", Лев(СерияНомерПаспорта, 5));
	СтруктураНомера.Вставить("Номер", Сред(СерияНомерПаспорта, 7));
	Возврат СтруктураНомера;
	
КонецФункции

Процедура ЗаписатьДанныеФизическогоЛица(Форма, ФизическоеЛицо, ПараметрыЗаписи) Экспорт

	ИменаРеквизитов = ПараметрыЗаписи.ИменаРеквизитов;
	Если ИменаРеквизитов.Свойство("ФизическоеЛицо") Тогда
		ФизическоеЛицо.Записать();
		// СтандартныеПодсистемы.КонтактнаяИнформация
		УправлениеКонтактнойИнформацией.ПослеЗаписиНаСервере(Форма, ФизическоеЛицо);
		// Конец СтандартныеПодсистемы.КонтактнаяИнформация
		Форма.ЗначениеВРеквизитФормы(ФизическоеЛицо, ИменаРеквизитов.ФизическоеЛицо);
		ФизическоеЛицоСсылка = ФизическоеЛицо.Ссылка;
		Если ПараметрыЗаписи.Свойство("ФизическоеЛицо") Тогда
			ПараметрыЗаписи.Удалить("ФизическоеЛицо");
		КонецЕсли;
	Иначе
		ФизическоеЛицоСсылка = ФизическоеЛицо.Ссылка;
	КонецЕсли;
	
	СтранаГражданства = ?(ПараметрыЗаписи.Свойство("СтранаГражданства"), ПараметрыЗаписи.СтранаГражданства,
			ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.СтраныМира.Россия"));
	
	ПаспортныеДанные = Форма[ИменаРеквизитов.ПаспортныеДанные];
	Если ЗначениеЗаполнено(ПаспортныеДанные.Номер) Тогда
		ДокументыФизическихЛицБП.ДобавитьСведенияОДокументеФизЛица(ПаспортныеДанные.ВидДокумента, ФизическоеЛицоСсылка,
			ПаспортныеДанные, Истина, СтранаГражданства);
	КонецЕсли;
	
	Если ИменаРеквизитов.Свойство("ДанныеОснованияДляПроживанияВРФ") Тогда
		ДанныеОснованияДляПроживания = Форма[ИменаРеквизитов.ДанныеОснованияДляПроживанияВРФ];
		Если ЗначениеЗаполнено(ДанныеОснованияДляПроживания.Номер) Тогда
			ДокументыФизическихЛицБП.ДобавитьСведенияОДокументеФизЛица(
				ДанныеОснованияДляПроживания.ВидДокумента, ФизическоеЛицоСсылка, ДанныеОснованияДляПроживания,
				Не ЗначениеЗаполнено(СтранаГражданства));
		КонецЕсли;
	КонецЕсли;
	
	ГражданствоНаборЗаписей = РегистрыСведений.ГражданствоФизическихЛиц.СоздатьНаборЗаписей();
	ГражданствоНаборЗаписей.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицоСсылка);
	ГражданствоНаборЗаписей.Прочитать();
	Если ГражданствоНаборЗаписей.Количество() = 0 Тогда
		ЗаписьГражданство = ГражданствоНаборЗаписей.Добавить();
		ЗаписьГражданство.Период = ЗарплатаКадрыКлиентСервер.ДатаОтсчетаПериодическихСведений();
		ЗаписьГражданство.ФизическоеЛицо = ФизическоеЛицоСсылка;
		ЗаписьГражданство.Страна = ПараметрыЗаписи.СтранаГражданства;
		ЗаписьГражданство.ИНН = ФизическоеЛицо.ИНН;
	Иначе
		Для Каждого ЗаписьГражданство Из ГражданствоНаборЗаписей Цикл
			Если ЗаписьГражданство.Период = ЗарплатаКадрыКлиентСервер.ДатаОтсчетаПериодическихСведений() Тогда
				ЗаписьГражданство.Страна = ПараметрыЗаписи.СтранаГражданства;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	ГражданствоНаборЗаписей.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
	ГражданствоНаборЗаписей.Записать();
	
	ФИОФизическихЛицНаборЗаписей = РегистрыСведений.ФИОФизическихЛиц.СоздатьНаборЗаписей();
	ФИОФизическихЛицНаборЗаписей.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицоСсылка);
	НоваяЗапись = ФИОФизическихЛицНаборЗаписей.Добавить();
	НоваяЗапись.Период = ?(ЗначениеЗаполнено(ПаспортныеДанные.Период), ПаспортныеДанные.Период,
		ДанныеОснованияДляПроживания.Период);
	НоваяЗапись.ФизическоеЛицо = ФизическоеЛицоСсылка;
	ЗаполнитьЗначенияСвойств(НоваяЗапись, ФизическоеЛицо);
	ФИОФизическихЛицНаборЗаписей.Записать();
	
КонецПроцедуры

#КонецОбласти
