
////////////////////////////////////////////////////////////////////////////////
//
// ИнтеграцияГИСМБП: имплементация в БП переопределяемых серверных процедур и функций подсистемы "Интеграция с ГИСМ"
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Вызывается из процедуры УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа
Процедура ПриЗаполненииСписковСОграничениемДоступа(Списки) Экспорт
	
	Списки.Вставить(Метаданные.Документы.УведомлениеОбИмпортеМаркированныхТоваровГИСМ, Истина);
	Списки.Вставить(Метаданные.Документы.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ, Истина);
	Списки.Вставить(Метаданные.Документы.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ, Истина);
	Списки.Вставить(Метаданные.Документы.УведомлениеОПоступленииМаркированныхТоваровГИСМ, Истина);
	Списки.Вставить(Метаданные.Документы.УведомлениеОСписанииКиЗГИСМ, Истина);
	
КонецПроцедуры

#Область ПодпискиНаСобытия

// См. описание процедуры ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусУведомленияОбОтгрузке
//
Процедура РассчитатьСтатусУведомленияОбОтгрузке(Источник, Отказ) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьКонтрольныеЗнакиГИСМ") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ВозвратТоваровПоставщику") Тогда
		
		РассчитатьСтатусУведомленияОбОтгрузкеПоВозвратуТоваровПоставщику(Источник);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
		
		РассчитатьСтатусУведомленияОбОтгрузкеПоРеализацииТоваровУслуг(Источник);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ") Тогда
		
		РассчитатьСтатусУведомленияОбОтгрузкеПоУведомлениюОбОтгрузке(Источник);
		
	КонецЕсли;
	
КонецПроцедуры

// См. описание процедуры ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусИнформированияГИСМ
//
Процедура РассчитатьСтатусИнформированияГИСМ(Источник, Отказ) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьКонтрольныеЗнакиГИСМ") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.СписаниеТоваров") Тогда
		
		ЗаписьТребуется = Источник.ЕстьМаркируемаяПродукцияГИСМ;
		РассчитатьСтатусИнформированияГИСМДляДокументаРаспоряжения(Источник, ЗаписьТребуется);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") Тогда
		
		ЭтоИмпорт = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник.Ссылка, "Контрагент.СтранаРегистрации")
			<> Справочники.СтраныМира.Россия;
			
		ЗаписьТребуется = Источник.ЕстьМаркируемаяПродукцияГИСМ  И ЭтоИмпорт;
		РассчитатьСтатусИнформированияГИСМДляДокументаРаспоряжения(Источник, ЗаписьТребуется);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.УведомлениеОСписанииКиЗГИСМ")
		  Или ТипЗнч(Источник) = Тип("ДокументОбъект.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ")
		  Или ТипЗнч(Источник) = Тип("ДокументОбъект.УведомлениеОбИмпортеМаркированныхТоваровГИСМ") Тогда
		
		РассчитатьСтатусИнформированияГИСМДляДокументаСРаспоряжением(Источник);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ВозвратТоваровОтПокупателя") Тогда
		
		ЭтоФизЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник.Ссылка, "Контрагент.ЮридическоеФизическоеЛицо")
			= Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
		ЗаписьТребуется = Источник.ЕстьМаркируемаяПродукцияГИСМ И ЭтоФизЛицо;
		РассчитатьСтатусИнформированияГИСМДляДокумента(Источник, ЗаписьТребуется);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ОтчетОРозничныхПродажах") Тогда
		
		ЗаписьТребуется = Источник.ЕстьМаркируемаяПродукцияГИСМ;
		РассчитатьСтатусИнформированияГИСМДляДокумента(Источник, ЗаписьТребуется);
		
	КонецЕсли;
	
КонецПроцедуры

// См. описание процедуры ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусУведомленияОПоступлении
//
Процедура РассчитатьСтатусУведомленияОПоступлении(Источник, Отказ) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьКонтрольныеЗнакиГИСМ") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.УведомлениеОПоступленииМаркированныхТоваровГИСМ") Тогда
		
		РассчитатьСтатусУведомленияОПоступленииПоУведомлениюОПоступлении(Источник);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеНаОсновании

// См. описание процедуры ИнтеграцияГИСМПереопределяемый.ОбработкаЗаполненияУведомленияОбОтгрузкеГИСМ
//
Процедура ЗаполнитьУведомлениеОбОтгрузкеГИСМНаОснованииРеализации(УведомлениеОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	УведомлениеОбъект.Ответственный = Пользователи.ТекущийПользователь();
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Организация КАК Организация,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.Контрагент.СтранаРегистрации КАК СтранаРегистрации,
	|	РеализацияТоваровУслуг.Ссылка КАК Основание,
	|	РеализацияТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	РеализацияТоваровУслуг.Проведен КАК Проведен,
	|	РеализацияТоваровУслуг.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора
	|ПОМЕСТИТЬ ВТ_ШапкаДокумента
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ШАПКАДОКУМЕНТА.Организация КАК Организация,
	|	ВТ_ШАПКАДОКУМЕНТА.Контрагент КАК Контрагент,
	|	ВТ_ШАПКАДОКУМЕНТА.Основание КАК Основание,
	|	ВЫБОР
	|		КОГДА ВТ_ШАПКАДОКУМЕНТА.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентом)
	|				ИЛИ ВТ_ШАПКАДОКУМЕНТА.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидОборотаТовараГИСМ.Комиссия)
	|		КОГДА ВТ_ШАПКАДОКУМЕНТА.СтранаРегистрации <> ЗНАЧЕНИЕ(Справочник.СтраныМира.РОССИЯ)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидОборотаТовараГИСМ.ЭкспортВСтраныЕАЭС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидОборотаТовараГИСМ.Продажа)
	|	КОНЕЦ КАК ВидОборотаТовара,
	|	НЕ ВТ_ШАПКАДОКУМЕНТА.Проведен КАК ЕстьОшибкиПроведен,
	|	ЕСТЬNULL(СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ТекущееУведомлениеОбОтгрузке, ЗНАЧЕНИЕ(Документ.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.ПустаяСсылка)) КАК АктуальноеУведомлениеОбОтгрузкеГИСМ,
	|	ЕСТЬNULL(СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ПустаяСсылка)) КАК Статус
	|ИЗ
	|	ВТ_ШапкаДокумента КАК ВТ_ШАПКАДОКУМЕНТА
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ КАК СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ
	|		ПО (СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ = ВТ_ШАПКАДОКУМЕНТА.Основание)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РублевыеСуммыДокументовВВалюте.Всего,
	|	РублевыеСуммыДокументовВВалюте.НДС КАК СуммаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ШапкаДокумента КАК ТаблицаПоШапкеДокумента
	|		ПО РублевыеСуммыДокументовВВалюте.Регистратор = ТаблицаПоШапкеДокумента.Основание
	|ГДЕ
	|	РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтрольныеЗнакиГИСМ.Код КАК НомерКиЗ,
	|	КонтрольныеЗнакиГИСМ.RFIDTID      КАК RFIDTID,
	|	КонтрольныеЗнакиГИСМ.RFIDEPC      КАК RFIDEPC,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, ВЫБОР
	|			КОГДА ТаблицаПоШапкеДокумента.СуммаВключаетНДС
	|				ТОГДА Товары.Сумма
	|			ИНАЧЕ Товары.Сумма + Товары.СуммаНДС
	|		КОНЕЦ) КАК Стоимость,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаНДС, Товары.СуммаНДС) КАК СуммаНДС
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ШапкаДокумента КАК ТаблицаПоШапкеДокумента
	|		ПО Товары.Ссылка = ТаблицаПоШапкеДокумента.Основание
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтрольныеЗнакиГИСМ КАК КонтрольныеЗнакиГИСМ
	|		ПО (КонтрольныеЗнакиГИСМ.Ссылка = Товары.КиЗ_ГИСМ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО Товары.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыОснования = РезультатЗапроса[1].Выбрать();
	РеквизитыОснования.Следующий();
	
	Если РеквизитыОснования.ЕстьОшибкиПроведен Тогда
		
		ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	Если Не РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ЭтоСтатусНеАктуальногоУведомления(РеквизитыОснования.Статус) Тогда
		
		ТекстОшибки = НСтр("ru='Для %Документ% уже существует актуальное уведомление об отгрузке ГИСМ - %Уведомление%.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Уведомление%", РеквизитыОснования.АктуальноеУведомлениеОбОтгрузкеГИСМ);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	Если РезультатЗапроса[3].Пустой() Тогда
		
		ТекстОшибки = НСтр("ru='В %Документ% отсутствуют товары, маркированные контрольными (идентификационными) знаками.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(УведомлениеОбъект, РеквизитыОснования);
	УведомлениеОбъект.НомераКиЗ.Загрузить(РезультатЗапроса[3].Выгрузить());
	
КонецПроцедуры

// См. описание процедуры ИнтеграцияГИСМПереопределяемый.ОбработкаЗаполненияУведомленияОбОтгрузкеГИСМ
//
Процедура ЗаполнитьУведомлениеОбОтгрузкеГИСМНаОснованииВозвратаТоваровПоставщику(УведомлениеОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	УведомлениеОбъект.Ответственный = Пользователи.ТекущийПользователь();
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВозвратТоваровПоставщику.Организация КАК Организация,
	|	ВозвратТоваровПоставщику.Контрагент КАК Контрагент,
	|	ВозвратТоваровПоставщику.Контрагент.СтранаРегистрации КАК СтранаРегистрации,
	|	ВозвратТоваровПоставщику.Ссылка КАК Основание,
	|	ВозвратТоваровПоставщику.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ВозвратТоваровПоставщику.Проведен КАК Проведен,
	|	ВозвратТоваровПоставщику.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора
	|ПОМЕСТИТЬ ВТ_ШапкаДокумента
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|ГДЕ
	|	ВозвратТоваровПоставщику.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ШАПКАДОКУМЕНТА.Организация КАК Организация,
	|	ВТ_ШАПКАДОКУМЕНТА.Контрагент КАК Контрагент,
	|	ВТ_ШАПКАДОКУМЕНТА.Основание КАК Основание,
	|	ВЫБОР
	|		КОГДА ВТ_ШАПКАДОКУМЕНТА.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентом)
	|				ИЛИ ВТ_ШАПКАДОКУМЕНТА.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидОборотаТовараГИСМ.Комиссия)
	|		КОГДА ВТ_ШАПКАДОКУМЕНТА.СтранаРегистрации <> ЗНАЧЕНИЕ(Справочник.СтраныМира.РОССИЯ)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидОборотаТовараГИСМ.ЭкспортВСтраныЕАЭС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидОборотаТовараГИСМ.Продажа)
	|	КОНЕЦ КАК ВидОборотаТовара,
	|	НЕ ВТ_ШАПКАДОКУМЕНТА.Проведен КАК ЕстьОшибкиПроведен,
	|	ЕСТЬNULL(СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ТекущееУведомлениеОбОтгрузке, ЗНАЧЕНИЕ(Документ.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.ПустаяСсылка)) КАК АктуальноеУведомлениеОбОтгрузкеГИСМ,
	|	ЕСТЬNULL(СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ПустаяСсылка)) КАК Статус
	|ИЗ
	|	ВТ_ШапкаДокумента КАК ВТ_ШАПКАДОКУМЕНТА
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ КАК СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ
	|		ПО (СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ = ВТ_ШАПКАДОКУМЕНТА.Основание)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РублевыеСуммыДокументовВВалюте.Всего,
	|	РублевыеСуммыДокументовВВалюте.НДС КАК СуммаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ШапкаДокумента КАК ТаблицаПоШапкеДокумента
	|		ПО РублевыеСуммыДокументовВВалюте.Регистратор = ТаблицаПоШапкеДокумента.Основание
	|ГДЕ
	|	РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтрольныеЗнакиГИСМ.Код КАК НомерКиЗ,
	|	КонтрольныеЗнакиГИСМ.RFIDTID      КАК RFIDTID,
	|	КонтрольныеЗнакиГИСМ.RFIDEPC      КАК RFIDEPC,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, ВЫБОР
	|			КОГДА ТаблицаПоШапкеДокумента.СуммаВключаетНДС
	|				ТОГДА Товары.Сумма
	|			ИНАЧЕ Товары.Сумма + Товары.СуммаНДС
	|		КОНЕЦ) КАК Стоимость,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаНДС, Товары.СуммаНДС) КАК СуммаНДС
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ШапкаДокумента КАК ТаблицаПоШапкеДокумента
	|		ПО Товары.Ссылка = ТаблицаПоШапкеДокумента.Основание
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтрольныеЗнакиГИСМ КАК КонтрольныеЗнакиГИСМ
	|		ПО (КонтрольныеЗнакиГИСМ.Ссылка = Товары.КиЗ_ГИСМ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО Товары.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыОснования = РезультатЗапроса[1].Выбрать();
	РеквизитыОснования.Следующий();
	
	Если РеквизитыОснования.ЕстьОшибкиПроведен Тогда
		
		ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	Если Не РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ЭтоСтатусНеАктуальногоУведомления(РеквизитыОснования.Статус) Тогда
		
		ТекстОшибки = НСтр("ru='Для %Документ% уже существует актуальное уведомление об отгрузке ГИСМ - %Уведомление%.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Уведомление%", РеквизитыОснования.АктуальноеУведомлениеОбОтгрузкеГИСМ);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	Если РезультатЗапроса[3].Пустой() Тогда
		
		ТекстОшибки = НСтр("ru='В %Документ% отсутствуют товары, маркированные контрольными (идентификационными) знаками.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(УведомлениеОбъект, РеквизитыОснования);
	УведомлениеОбъект.НомераКиЗ.Загрузить(РезультатЗапроса[3].Выгрузить());
	
КонецПроцедуры

// См. описание процедуры ИнтеграцияГИСМПереопределяемый.ЗаполнитьУведомлениеОбИмпортеГИСМНаОснованииПоступления
//
Процедура ЗаполнитьУведомлениеОбИмпортеГИСМНаОснованииПоступления(УведомлениеОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	УведомлениеОбъект.Ответственный = Пользователи.ТекущийПользователь();
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Организация КАК Организация,
	|	ПоступлениеТоваровУслуг.Контрагент КАК Контрагент,
	|	ПоступлениеТоваровУслуг.Ссылка КАК Основание,
	|	НЕ ПоступлениеТоваровУслуг.Проведен КАК ЕстьОшибкиПроведен,
	|	ЕСТЬNULL(СтатусыИнформированияГИСМ.Статус,
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка)) КАК Статус
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|		ПО (СтатусыИнформированияГИСМ.Документ = ПоступлениеТоваровУслуг.Ссылка)
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка = &ДокументОснование
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Номенклатура.НаименованиеПолное КАК НоменклатураОписание,
	|	ПоступлениеТоваровУслугТовары.Номенклатура.КодТНВЭД КАК КодТНВЭД,
	|	КонтрольныеЗнакиГИСМ.Код КАК НомерКиЗ,
	|	ПоступлениеТоваровУслугТовары.Количество КАК Количество
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Справочник.КонтрольныеЗнакиГИСМ КАК КонтрольныеЗнакиГИСМ
	|ПО
	|	ПоступлениеТоваровУслугТовары.КИЗ_ГИСМ = КонтрольныеЗнакиГИСМ.Ссылка
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ПО
	|	ПоступлениеТоваровУслугТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	СправочникНоменклатура.ПродукцияМаркируемаяДляГИСМ
	|	И ПоступлениеТоваровУслугТовары.Ссылка = &ДокументОснование
	|";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыОснования = РезультатЗапроса[0].Выбрать();
	РеквизитыОснования.Следующий();
	
	Если РеквизитыОснования.ЕстьОшибкиПроведен Тогда
		
		ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	Если Не РегистрыСведений.СтатусыИнформированияГИСМ.ЭтоСтатусНеАктуальногоУведомления(РеквизитыОснования.Статус) Тогда
		
		ТекстОшибки = НСтр("ru='Для %Документ% уже существует актуальное уведомление об импорте маркированных товаров ГИСМ - %Уведомление%.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Уведомление%", РеквизитыОснования.АктуальноеУведомлениеОбОтгрузкеГИСМ);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	Если РезультатЗапроса[1].Пустой() Тогда
		
		ТекстОшибки = НСтр("ru='В %Документ% отсутствуют товары, маркированные контрольными (идентификационными) знаками.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(УведомлениеОбъект, РеквизитыОснования);
	
	Выборка = РезультатЗапроса[1].Выбрать();
	
	Индекс = 0;
	Пока Выборка.Следующий() Цикл
		СтрокаТовары = УведомлениеОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТовары, Выборка);
		СтрокаНомерКиЗ = УведомлениеОбъект.НомераКиЗ.Добавить();
		СтрокаНомерКиЗ.НомерКиЗ = Выборка.НомерКиЗ;
		Индекс = Индекс + 1;
		СтрокаТовары.КлючСвязи = Индекс;
		СтрокаНомерКиЗ.КлючСвязи = Индекс;
	КонецЦикла;
	
КонецПроцедуры

// См. описание процедуры ИнтеграцияГИСМПереопределяемый.ЗаполнитьУведомлениеОВвозеИзЕАЭСГИСМНаОснованииПоступления
//
Процедура ЗаполнитьУведомлениеОВвозеИзЕАЭСГИСМНаОснованииПоступления(УведомлениеОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	УведомлениеОбъект.Ответственный = Пользователи.ТекущийПользователь();
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Организация КАК Организация,
	|	ПоступлениеТоваровУслуг.Контрагент КАК Контрагент,
	|	ПоступлениеТоваровУслуг.Контрагент.СтранаРегистрации КАК СтранаРегистрации,
	|	ПоступлениеТоваровУслуг.Ссылка КАК Основание,
	|	ПоступлениеТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ПоступлениеТоваровУслуг.Проведен КАК Проведен
	|ПОМЕСТИТЬ ВТ_ШапкаДокумента
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ШАПКАДОКУМЕНТА.Организация КАК Организация,
	|	ВТ_ШАПКАДОКУМЕНТА.Контрагент КАК Контрагент,
	|	ВТ_ШАПКАДОКУМЕНТА.Основание КАК Основание,
	|	НЕ ВТ_ШАПКАДОКУМЕНТА.Проведен КАК ЕстьОшибкиПроведен,
	|	ЕСТЬNULL(СтатусыИнформированияГИСМ.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка)) КАК Статус
	|ИЗ
	|	ВТ_ШапкаДокумента КАК ВТ_ШАПКАДОКУМЕНТА
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|		ПО (СтатусыИнформированияГИСМ.Документ = ВТ_ШАПКАДОКУМЕНТА.Основание)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РублевыеСуммыДокументовВВалюте.Всего,
	|	РублевыеСуммыДокументовВВалюте.НДС КАК СуммаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ШапкаДокумента КАК ТаблицаПоШапкеДокумента
	|		ПО РублевыеСуммыДокументовВВалюте.Регистратор = ТаблицаПоШапкеДокумента.Основание
	|ГДЕ
	|	РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтрольныеЗнакиГИСМ.Код КАК НомерКиЗ,
	|	КонтрольныеЗнакиГИСМ.RFIDTID КАК RFIDTID,
	|	КонтрольныеЗнакиГИСМ.RFIDEPC КАК RFIDEPC,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, ВЫБОР
	|			КОГДА ТаблицаПоШапкеДокумента.СуммаВключаетНДС
	|				ТОГДА Товары.Сумма
	|			ИНАЧЕ Товары.Сумма + Товары.СуммаНДС
	|		КОНЕЦ) КАК Стоимость,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаНДС, Товары.СуммаНДС) КАК СуммаНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ШапкаДокумента КАК ТаблицаПоШапкеДокумента
	|		ПО Товары.Ссылка = ТаблицаПоШапкеДокумента.Основание
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтрольныеЗнакиГИСМ КАК КонтрольныеЗнакиГИСМ
	|		ПО (КонтрольныеЗнакиГИСМ.Ссылка = Товары.КиЗ_ГИСМ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО Товары.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыОснования = РезультатЗапроса[1].Выбрать();
	РеквизитыОснования.Следующий();
	
	Если РеквизитыОснования.ЕстьОшибкиПроведен Тогда
		
		ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	Если Не РегистрыСведений.СтатусыИнформированияГИСМ.ЭтоСтатусНеАктуальногоУведомления(РеквизитыОснования.Статус) Тогда
		
		ТекстОшибки = НСтр("ru='Для %Документ% уже существует актуальное уведомление о ввозе маркированных товаров ГИСМ - %Уведомление%.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Уведомление%", РеквизитыОснования.АктуальноеУведомлениеОбОтгрузкеГИСМ);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	Если РезультатЗапроса[3].Пустой() Тогда
		
		ТекстОшибки = НСтр("ru='В %Документ% отсутствуют товары, маркированные контрольными (идентификационными) знаками.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(УведомлениеОбъект, РеквизитыОснования);
	УведомлениеОбъект.НомераКиЗ.Загрузить(РезультатЗапроса[3].Выгрузить());
	
КонецПроцедуры

// См. описание процедуры ИнтеграцияГИСМПереопределяемый.ЗаполнитьУведомлениеОСписанииКиЗНаОснованииВнутреннегоПотребления
//
Процедура ЗаполнитьУведомлениеОСписанииКиЗНаОснованииСписаниеТоваров(УведомлениеОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	УведомлениеОбъект.Ответственный = Пользователи.ТекущийПользователь();
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписаниеТоваров.Ссылка КАК Основание,
	|	НЕ СписаниеТоваров.Проведен КАК ЕстьОшибкиПроведен,
	|	СписаниеТоваров.Организация,
	|	ЕСТЬNULL(СтатусыИнформированияГИСМ.ТекущееУведомление, ЗНАЧЕНИЕ(Документ.УведомлениеОСписанииКизГИСМ.ПустаяСсылка)) КАК ТекущееУведомление,
	|	ЕСТЬNULL(СтатусыИнформированияГИСМ.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка)) КАК Статус
	|ИЗ
	|	Документ.СписаниеТоваров КАК СписаниеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|		ПО СписаниеТоваров.Ссылка = СтатусыИнформированияГИСМ.Документ
	|ГДЕ
	|	СписаниеТоваров.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КонтрольныеЗнакиГИСМ.Код КАК НомерКиЗ
	|ИЗ
	|	Документ.СписаниеТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтрольныеЗнакиГИСМ КАК КонтрольныеЗнакиГИСМ
	|		ПО Товары.КиЗ_ГИСМ = КонтрольныеЗнакиГИСМ.Ссылка
	|	ГДЕ Товары.Ссылка = &ДокументОснование";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыОснования = РезультатЗапроса[0].Выбрать();
	РеквизитыОснования.Следующий();
	
	Если РеквизитыОснования.ЕстьОшибкиПроведен Тогда
		
		ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
		
	Если Не РегистрыСведений.СтатусыИнформированияГИСМ.ЭтоСтатусНеАктуальногоУведомления(РеквизитыОснования.Статус) Тогда
		
		ТекстОшибки = НСтр("ru='Для %Документ% уже существует актуальное уведомление об списании КиЗ - %Уведомление%.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Уведомление%", РеквизитыОснования.ТекущееУведомление);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	Если РезультатЗапроса[1].Пустой() Тогда
		
		ТекстОшибки = НСтр("ru='В %Документ% отсутствуют товары, маркированные контрольными (идентификационными) знаками и контрольные (идентификационные) знаки.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;

	ЗаполнитьЗначенияСвойств(УведомлениеОбъект, РеквизитыОснования);
	УведомлениеОбъект.НомераКиЗ.Загрузить(РезультатЗапроса[1].Выгрузить());
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// См. описание процедуры ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусУведомленияОбОтгрузкеПоУведомлениюОбОтгрузке
//
Процедура РассчитатьСтатусУведомленияОбОтгрузкеПоУведомлениюОбОтгрузке(Источник)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗаписьНового = Источник.ДополнительныеСвойства.Свойство("ЗаписьНового")
	             И Источник.ДополнительныеСвойства.ЗаписьНового;
	
	ВыполнятьЗаписьВРегистр = Ложь;
	ДанныеЗаписи = РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ЗначенияПоУмолчанию();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Статусы.Документ,
	|	Статусы.ТекущееУведомлениеОбОтгрузке,
	|	Статусы.Статус,
	|	Статусы.ДальнейшееДействие
	|ИЗ
	|	РегистрСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ КАК Статусы
	|ГДЕ
	|	    Статусы.Документ = &Основание
	|	ИЛИ Статусы.Документ = &Уведомление");
	
	Запрос.УстановитьПараметр("Основание", Источник.Основание);
	Запрос.УстановитьПараметр("Уведомление", Источник.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если ЗаписьНового Тогда
			
			Если НЕ ЗначениеЗаполнено(Выборка.ТекущееУведомлениеОбОтгрузке) Тогда
				
				ВыполнятьЗаписьВРегистр = Истина;
				
			ИначеЕсли РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ЭтоСтатусНеАктуальногоУведомления(Выборка.Статус) Тогда
				
				ВыполнятьЗаписьВРегистр = Истина;
				
			КонецЕсли;
			
			ДанныеЗаписи.Документ                     = Выборка.Документ;
			ДанныеЗаписи.ТекущееУведомлениеОбОтгрузке = Источник.Ссылка;
			ДанныеЗаписи.Статус                       = Перечисления.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Черновик;
			ДанныеЗаписи.ДальнейшееДействие           = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные;
			
		КонецЕсли;
		
	Иначе
		
		Если ЗаписьНового Тогда
			
			ВыполнятьЗаписьВРегистр = Истина;
			
			ДанныеЗаписи.Документ                     = Источник.Основание;
			ДанныеЗаписи.ТекущееУведомлениеОбОтгрузке = Источник.Ссылка;
			ДанныеЗаписи.Статус                       = Перечисления.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Черновик;
			ДанныеЗаписи.ДальнейшееДействие           = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВыполнятьЗаписьВРегистр Тогда
		РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ВыполнитьЗаписьВРегистрПоДаннымСтруктура(ДанныеЗаписи);
	КонецЕсли;
	
КонецПроцедуры

// См. описание процедуры ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусУведомленияОбОтгрузкеПоРеализацииТоваровУслуг
//
Процедура РассчитатьСтатусУведомленияОбОтгрузкеПоРеализацииТоваровУслуг(Источник)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВыполнятьЗаписьВРегистр = Ложь;
	ДанныеЗаписи = РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ЗначенияПоУмолчанию();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Статусы.Документ,
	|	Статусы.ТекущееУведомлениеОбОтгрузке,
	|	Статусы.Статус,
	|	Статусы.ДальнейшееДействие
	|ИЗ
	|	РегистрСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ КАК Статусы
	|ГДЕ
	|	Статусы.Документ = &Реализация
	|");
	
	Запрос.УстановитьПараметр("Реализация", Источник.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если (Не Источник.Проведен Или Не Источник.ЕстьМаркируемаяПродукцияГИСМ)
			И Не ЗначениеЗаполнено(Выборка.ТекущееУведомлениеОбОтгрузке) Тогда
			РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.УдалитьЗаписьИзРегистра(Источник.Ссылка);
			Возврат;
		КонецЕсли;
		
	ИначеЕсли Источник.ЕстьМаркируемаяПродукцияГИСМ Тогда
		
		ВыполнятьЗаписьВРегистр = Истина;
		
		ДанныеЗаписи.Документ           = Источник.Ссылка;
		ДанныеЗаписи.ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется;
		ДанныеЗаписи.Статус             = Перечисления.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Отсутствует;
		
	КонецЕсли;
	
	Если ВыполнятьЗаписьВРегистр Тогда
		РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ВыполнитьЗаписьВРегистрПоДаннымСтруктура(ДанныеЗаписи);
	КонецЕсли;
	
КонецПроцедуры

// См. описание процедуры ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусУведомленияОбОтгрузкеПоВозвратуТоваровПоставщику
//
Процедура РассчитатьСтатусУведомленияОбОтгрузкеПоВозвратуТоваровПоставщику(Источник)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВыполнятьЗаписьВРегистр = Ложь;
	ДанныеЗаписи = РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ЗначенияПоУмолчанию();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Статусы.Документ,
	|	Статусы.ТекущееУведомлениеОбОтгрузке,
	|	Статусы.Статус,
	|	Статусы.ДальнейшееДействие
	|ИЗ
	|	РегистрСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ КАК Статусы
	|ГДЕ
	|	Статусы.Документ = &ВозвратПоставщику
	|");
	
	Запрос.УстановитьПараметр("ВозвратПоставщику", Источник.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если (Не Источник.Проведен Или Не Источник.ЕстьМаркируемаяПродукцияГИСМ)
			И Не ЗначениеЗаполнено(Выборка.ТекущееУведомлениеОбОтгрузке) Тогда
			РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.УдалитьЗаписьИзРегистра(Источник.Ссылка);
			Возврат;
		КонецЕсли;
		
	ИначеЕсли Источник.ЕстьМаркируемаяПродукцияГИСМ Тогда
		
		ВыполнятьЗаписьВРегистр = Истина;
		
		ДанныеЗаписи.Документ           = Источник.Ссылка;
		ДанныеЗаписи.ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется;
		ДанныеЗаписи.Статус             = Перечисления.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Отсутствует;
		
	КонецЕсли;
	
	Если ВыполнятьЗаписьВРегистр Тогда
		РегистрыСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ВыполнитьЗаписьВРегистрПоДаннымСтруктура(ДанныеЗаписи);
	КонецЕсли;
	
КонецПроцедуры

// См. описание процедуры ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусУведомленияОПоступленииПоУведомлениюОПоступлении
//
Процедура РассчитатьСтатусУведомленияОПоступленииПоУведомлениюОПоступлении(Источник)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗаписьНового = Источник.ДополнительныеСвойства.Свойство("ЗаписьНового")
	             И Источник.ДополнительныеСвойства.ЗаписьНового;
	
	ВыполнятьЗаписьВРегистр = Ложь;
	ДанныеЗаписи = РегистрыСведений.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ.ЗначенияПоУмолчанию();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Статусы.Документ,
	|	Статусы.Статус,
	|	Статусы.ДальнейшееДействие,
	|	Статусы.ПоступлениеТоваров,
	|	Статусы.КоличествоПоступленийТоваров,
	|	Статусы.СтатусПоступления
	|ИЗ
	|	РегистрСведений.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ КАК Статусы
	|ГДЕ
	|	Статусы.Документ = &УведомлениеОПоступлении");
	
	Запрос.УстановитьПараметр("УведомлениеОПоступлении", Источник.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(ДанныеЗаписи, Выборка);
		
		Регистр = РегистрыСведений.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ;
		Если Регистр.СтатусТребуетРасчетаПоступления(ДанныеЗаписи.Статус) Тогда
			
			ВыполнятьЗаписьВРегистр = Истина;
			РассчитатьСтатусПоступленияПоДокументу(Источник, ДанныеЗаписи);
			
		КонецЕсли;
		
	Иначе
		
		Если ЗаписьНового Тогда
			
			ВыполнятьЗаписьВРегистр = Истина;
			
			ДанныеЗаписи.Документ           = Источник.Ссылка;
			ДанныеЗаписи.Статус             = Перечисления.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ.Получено;
			ДанныеЗаписи.ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПоступлениеТоваров;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВыполнятьЗаписьВРегистр Тогда
		РегистрыСведений.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ.ВыполнитьЗаписьВРегистрПоДаннымСтруктура(ДанныеЗаписи);
	КонецЕсли;
	
КонецПроцедуры

// См. описание процедуры ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусПоступленияПоДокументу
//
Процедура РассчитатьСтатусПоступленияПоДокументу(Источник, ДанныеЗаписи)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДокументСсылка      = ДанныеЗаписи.Документ;
	ЗначенияПоУмолчанию = РегистрыСведений.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ.ЗначенияПоУмолчанию();
	
	Текст = 
	"ВЫБРАТЬ
	|	НомераКиЗ.НомерКиЗ               КАК НомерКиЗ,
	|	НомераКиЗ.СостояниеПодтверждения КАК СостояниеПодтверждения,
	|	НомераКиЗ.ДокументПоступления    КАК ДокументПоступления
	|ПОМЕСТИТЬ НомераКиЗ
	|ИЗ
	|	Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ.НомераКиЗ КАК НомераКиЗ
	|ГДЕ
	|	НомераКиЗ.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	
	ЗаполнитьЗначенияСвойств(
		ДанныеЗаписи,
		ЗначенияПоУмолчанию,
		"ПоступлениеТоваров, КоличествоПоступленийТоваров, СтатусПоступления, КПередачеПодтверждения, ПроцентПодтвержденныхКиЗ");
	
	Подтверждено = 0;
	КПередаче    = 0;
	Передано     = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = Текст +
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НомераКиЗ.НомерКиЗ) КАК ВсегоСтрок,
	|	СУММА(ВЫБОР
	|			КОГДА НомераКиЗ.ДокументПоступления = ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Поступило,
	|	СУММА(ВЫБОР
	|			КОГДА НомераКиЗ.СостояниеПодтверждения В (ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ПринятоГИСМ))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Подтверждено,
	|	СУММА(ВЫБОР
	|			КОГДА НомераКиЗ.СостояниеПодтверждения В (ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.КПередаче))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КПередаче,
	|	СУММА(ВЫБОР
	|			КОГДА НомераКиЗ.СостояниеПодтверждения В (ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.Передано))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Передано
	|ИЗ
	|	НомераКиЗ КАК НомераКиЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НомераКиЗ.ДокументПоступления
	|ИЗ
	|	НомераКиЗ КАК НомераКиЗ
	|ГДЕ
	|	НЕ НомераКиЗ.ДокументПоступления В (&МассивПустыхЗначенийДокументовПоступления)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НомераКиЗ.НомерКиЗ
	|ПОМЕСТИТЬ НеподтвержденныеКиЗ
	|ИЗ
	|	НомераКиЗ КАК НомераКиЗ
	|ГДЕ
	|	НомераКиЗ.СостояниеПодтверждения В (ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.Подтвердить), ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОжидаетсяПоступление), ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ВыбратьПоступление), ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОтклоненоГИСМ))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДокументыПоступленияКиЗ
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Организация = &Организация
	|	И ПоступлениеТоваровУслуг.Контрагент = &Контрагент
	|	И ПоступлениеТоваровУслуг.ЕстьМаркируемаяПродукцияГИСМ = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровПоставщику.Ссылка
	|ПОМЕСТИТЬ ДокументыВозвратаКиЗ
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|ГДЕ
	|	ВозвратТоваровПоставщику.Организация = &Организация
	|	И ВозвратТоваровПоставщику.Контрагент = &Контрагент
	|	И ВозвратТоваровПоставщику.ЕстьМаркируемаяПродукцияГИСМ = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтрольныеЗнакиГИСМ.Код КАК НомерКиЗ
	|ПОМЕСТИТЬ ДокументыПоступленияПоНеподтвержденнымКиЗ
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК Поступление
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыПоступленияКиЗ КАК ДокументыПоступленияКиЗ
	|		ПО Поступление.Ссылка = ДокументыПоступленияКиЗ.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтрольныеЗнакиГИСМ КАК КонтрольныеЗнакиГИСМ
	|		ПО Поступление.КиЗ_ГИСМ = КонтрольныеЗнакиГИСМ.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ
	|		ПО (КонтрольныеЗнакиГИСМ.Код = НеподтвержденныеКиЗ.НомерКиЗ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КонтрольныеЗнакиГИСМ.Код
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя.Товары КАК Возврат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыВозвратаКиЗ КАК ДокументыВозвратаКиЗ
	|		ПО Возврат.Ссылка = ДокументыВозвратаКиЗ.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтрольныеЗнакиГИСМ КАК КонтрольныеЗнакиГИСМ
	|		ПО Возврат.КиЗ_ГИСМ = КонтрольныеЗнакиГИСМ.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ
	|		ПО (КонтрольныеЗнакиГИСМ.Код = НеподтвержденныеКиЗ.НомерКиЗ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	НеподтвержденныеКиЗ.НомерКиЗ КАК НомерКиЗ
	|ИЗ
	|	НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыПоступленияПоНеподтвержденнымКиЗ КАК ДокументыПоступленияПоНеподтвержденнымКиЗ
	|		ПО НеподтвержденныеКиЗ.НомерКиЗ = ДокументыПоступленияПоНеподтвержденнымКиЗ.НомерКиЗ";
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация",    Источник.Организация);
	Запрос.УстановитьПараметр("Контрагент",     Источник.Контрагент);
	Запрос.УстановитьПараметр("МассивПустыхЗначенийДокументовПоступления", ИнтеграцияГИСМ.МассивПустыхЗначенийДокументовПоступленияМаркированнойПродукции());
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаПоступилоПодтверждено = Результат[1].Выбрать();
	
	Если ВыборкаПоступилоПодтверждено.Следующий() Тогда
		
		ВсегоСтрок   = ВыборкаПоступилоПодтверждено.ВсегоСтрок;
		Поступило    = ?(ВыборкаПоступилоПодтверждено.Поступило = NULL, 0, ВыборкаПоступилоПодтверждено.Поступило);
		Подтверждено = ?(ВыборкаПоступилоПодтверждено.Подтверждено = NULL, 0, ВыборкаПоступилоПодтверждено.Подтверждено);
		КПередаче    = ?(ВыборкаПоступилоПодтверждено.КПередаче = NULL, 0, ВыборкаПоступилоПодтверждено.КПередаче);
		Передано     = ?(ВыборкаПоступилоПодтверждено.Передано = NULL, 0, ВыборкаПоступилоПодтверждено.Передано);
		
		Если ВсегоСтрок <> 0 Тогда
		
			Если Поступило = ВсегоСтрок Тогда
				ДанныеЗаписи.СтатусПоступления = Перечисления.СтатусыПоступленийГИСМ.Поступило;
			ИначеЕсли Поступило > 0 Тогда
				ДанныеЗаписи.СтатусПоступления = Перечисления.СтатусыПоступленийГИСМ.ПоступилоЧастично;
			Иначе
				ДанныеЗаписи.СтатусПоступления = Перечисления.СтатусыПоступленийГИСМ.ОжидаетсяПоступление;
			КонецЕсли;
			
			ДанныеЗаписи.ПроцентПодтвержденныхКиЗ = Окр(Подтверждено / ВсегоСтрок, 2) * 100;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ВыборкаДокументыПоступления = Результат[2].Выбрать();
	
	КоличествоДокументовПоступления = ВыборкаДокументыПоступления.Количество();
	Если ВыборкаДокументыПоступления.Количество() = 1 Тогда
		Если ВыборкаДокументыПоступления.Следующий() Тогда
			ДанныеЗаписи.ПоступлениеТоваров = ВыборкаДокументыПоступления.ДокументПоступления;
		КонецЕсли;
	КонецЕсли;
	
	ДанныеЗаписи.КоличествоПоступленийТоваров = КоличествоДокументовПоступления;
	
	ВыборкаДокументыЕстьЧтоПодтверждать = Результат[7].Выбрать();
	Если ВыборкаДокументыЕстьЧтоПодтверждать.Следующий() Тогда
		
		ДанныеЗаписи.КПередачеПодтверждения  = Истина;
		ДанныеЗаписи.ДальнейшееДействие      = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПодтвердитеПолучение;
		
		Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ЗаявкаНаВыпускКиЗГИСМ") Тогда
			ДанныеЗаписи.СтатусЗаявкиНаВыпускКиЗ = Перечисления.СтатусыЗаявокНаВыпускКиЗГИСМ.ОбрабатываетсяПоступление;
		ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.УведомлениеОПоступленииМаркированныхТоваровГИСМ") Тогда
			ДанныеЗаписи.Статус = Перечисления.СтатусыУведомленийОПоступленииМаркированныхТоваровГИСМ.ОбрабатываетсяПоступление;
		КонецЕсли;
		
	Иначе
		
		ДанныеЗаписи.КПередачеПодтверждения = Ложь;
		
		Если КПередаче > 0 Тогда
			
			ДанныеЗаписи.ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПодтвердитеПолучение;
			
		ИначеЕсли Передано > 0 Тогда
			
			ДанныеЗаписи.ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПолучениеКвитанцииОФиксации;
			
		Иначе
			
			Если Подтверждено = ВсегоСтрок И Подтверждено > 0 Тогда
				ДанныеЗаписи.ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ЗакройтеЗаявку;
			Иначе
				ДанныеЗаписи.ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПоступлениеТоваров;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// См. описание функции ИнтеграцияГИСМПереопределяемый.ЗапросПоПоступившимКиЗ
//
Функция ЗапросПоПоступившимКиЗ(Объект) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	НомераКиЗ.НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления,
	|	НомераКиЗ.СостояниеПодтверждения,
	|	НомераКиЗ.НомерСтроки
	|ПОМЕСТИТЬ НомераКиЗ
	|ИЗ
	|	&НомераКиЗ КАК НомераКиЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НомераКиЗ.НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления,
	|	НомераКиЗ.СостояниеПодтверждения,
	|	НомераКиЗ.НомерСтроки
	|ПОМЕСТИТЬ НеподтвержденныеКиЗ
	|ИЗ
	|	НомераКиЗ КАК НомераКиЗ
	|ГДЕ
	|	НомераКиЗ.СостояниеПодтверждения В (ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОтклоненоГИСМ), ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОжидаетсяПоступление), ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ВыбратьПоступление), ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.Подтвердить), ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.КПередаче))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомераКиЗ.НомерКиЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДокументыПоступленияКиЗ
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Организация = &Организация
	|	И ПоступлениеТоваровУслуг.Контрагент = &Контрагент
	|	И ПоступлениеТоваровУслуг.ЕстьМаркируемаяПродукцияГИСМ = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателя.Ссылка
	|ПОМЕСТИТЬ ДокументыВозвратаКиЗ
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|ГДЕ
	|	ВозвратТоваровОтПокупателя.Организация = &Организация
	|	И ВозвратТоваровОтПокупателя.Контрагент = &Контрагент
	|	И ВозвратТоваровОтПокупателя.ЕстьМаркируемаяПродукцияГИСМ = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Поступление.Ссылка КАК ДокументПоступления,
	|	КонтрольныеЗнакиГИСМ.Код КАК НомерКиЗ
	|ПОМЕСТИТЬ ДокументыПоступленияПоНеподтвержденнымКиЗ
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК Поступление
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыПоступленияКиЗ КАК ДокументыПоступленияКиЗ
	|		ПО Поступление.Ссылка = ДокументыПоступленияКиЗ.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтрольныеЗнакиГИСМ КАК КонтрольныеЗнакиГИСМ
	|		ПО Поступление.КиЗ_ГИСМ = КонтрольныеЗнакиГИСМ.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ
	|		ПО (КонтрольныеЗнакиГИСМ.Код = НеподтвержденныеКиЗ.НомерКиЗ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Возврат.Ссылка,
	|	КонтрольныеЗнакиГИСМ.Код
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя.Товары КАК Возврат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыВозвратаКиЗ КАК ДокументыВозвратаКиЗ
	|		ПО Возврат.Ссылка = ДокументыВозвратаКиЗ.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтрольныеЗнакиГИСМ КАК КонтрольныеЗнакиГИСМ
	|		ПО Возврат.КиЗ_ГИСМ = КонтрольныеЗнакиГИСМ.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ
	|		ПО (КонтрольныеЗнакиГИСМ.Код = НеподтвержденныеКиЗ.НомерКиЗ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерКиЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НеподтвержденныеКиЗ.НомерКиЗ КАК НомерКиЗ,
	|	НеподтвержденныеКиЗ.ДокументПоступления,
	|	НеподтвержденныеКиЗ.НомерСтроки,
	|	НеподтвержденныеКиЗ.СостояниеПодтверждения,
	|	ЕСТЬNULL(ДокументыПоступленияПоНеподтвержденнымКиЗ.ДокументПоступления, ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)) КАК ДокументПоступленияКандидат
	|ИЗ
	|	НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыПоступленияПоНеподтвержденнымКиЗ КАК ДокументыПоступленияПоНеподтвержденнымКиЗ
	|		ПО НеподтвержденныеКиЗ.НомерКиЗ = ДокументыПоступленияПоНеподтвержденнымКиЗ.НомерКиЗ
	|ИТОГИ ПО
	|	НомерКиЗ");

	Запрос.УстановитьПараметр("НомераКиЗ", Объект.НомераКиЗ.Выгрузить());
	
	Запрос.УстановитьПараметр("ДокументСсылка",                      Объект.Ссылка);
	Запрос.УстановитьПараметр("Организация",                         Объект.Организация);
	Запрос.УстановитьПараметр("Контрагент",                          Объект.Контрагент);
	
	Возврат Запрос;
	
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ДанныеПоУведомлениямОПоступлении
//
Функция ДанныеПоУведомлениямОПоступлении(ДокументыКПодтверждению) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	НомераКиЗ.НомерКиЗ,
	|	СУММА(1) КАК Количество
	|ПОМЕСТИТЬ ДублирующиесяНомераКиЗ
	|ИЗ
	|	Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ.НомераКиЗ КАК НомераКиЗ
	|ГДЕ
	|	НомераКиЗ.Ссылка В(&ДокументыКПодтверждению)
	|
	|СГРУППИРОВАТЬ ПО
	|	НомераКиЗ.НомерКиЗ
	|
	|ИМЕЮЩИЕ
	|	СУММА(1) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаНомераКиЗ.Ссылка КАК Документ,
	|	ТаблицаНомераКиЗ.НомерКиЗ КАК НомерКиЗ,
	|	ТаблицаНомераКиЗ.ДокументПоступления КАК ДокументПоступления,
	|	ТаблицаНомераКиЗ.СостояниеПодтверждения КАК СостояниеПодтверждения,
	|	Документы.Организация КАК Организация,
	|	Документы.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ НеподтвержденныеКиЗ
	|ИЗ
	|	Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ.НомераКиЗ КАК ТаблицаНомераКиЗ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ КАК Документы
	|		ПО ТаблицаНомераКиЗ.Ссылка = Документы.Ссылка
	|ГДЕ
	|	ТаблицаНомераКиЗ.Ссылка В(&ДокументыКПодтверждению)
	|	И ТаблицаНомераКиЗ.СостояниеПодтверждения В (ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОтклоненоГИСМ), ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ОжидаетсяПоступление), ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ВыбратьПоступление), ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.Подтвердить), ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.КПередаче))
	|	И НЕ ТаблицаНомераКиЗ.НомерКиЗ В
	|				(ВЫБРАТЬ
	|					ДублирующиесяНомераКиЗ.НомерКиЗ
	|				ИЗ
	|					ДублирующиесяНомераКиЗ КАК ДублирующиесяНомераКиЗ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПоступлениеТоваровУслуг.Ссылка КАК ДокументПоступления,
	|	КонтрольныеЗнакиГИСМ.Код КАК НомерКиЗ,
	|	ПоступлениеТоваровУслуг.Ссылка.Контрагент КАК Контрагент,
	|	ПоступлениеТоваровУслуг.Ссылка.Организация КАК Организация
	|ПОМЕСТИТЬ ВсеДокументыПоступленияПоКиЗ
	|ИЗ
	|	НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтрольныеЗнакиГИСМ КАК КонтрольныеЗнакиГИСМ
	|		ПО НеподтвержденныеКиЗ.НомерКиЗ = КонтрольныеЗнакиГИСМ.Код
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслуг
	|		ПО (КонтрольныеЗнакиГИСМ.Ссылка = ПоступлениеТоваровУслуг.КиЗ_ГИСМ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателя.Ссылка,
	|	КонтрольныеЗнакиГИСМ.Код,
	|	ВозвратТоваровОтПокупателя.Ссылка.Контрагент,
	|	ВозвратТоваровОтПокупателя.Ссылка.Организация
	|ИЗ
	|	НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтрольныеЗнакиГИСМ КАК КонтрольныеЗнакиГИСМ
	|		ПО НеподтвержденныеКиЗ.НомерКиЗ = КонтрольныеЗнакиГИСМ.Код
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателя
	|		ПО (КонтрольныеЗнакиГИСМ.Ссылка = ВозвратТоваровОтПокупателя.КиЗ_ГИСМ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаНомераКиЗ.НомерКиЗ,
	|	ТаблицаНомераКиЗ.ДокументПоступления,
	|	ТаблицаНомераКиЗ.Ссылка,
	|	Документы.Организация,
	|	Документы.Контрагент
	|ПОМЕСТИТЬ РанееСопоставленныеПоступления
	|ИЗ
	|	Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ.НомераКиЗ КАК ТаблицаНомераКиЗ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ КАК Документы
	|		ПО ТаблицаНомераКиЗ.Ссылка = Документы.Ссылка
	|ГДЕ
	|	ТаблицаНомераКиЗ.ДокументПоступления В(&ПустыеЗначенияДокументовПоступления)
	|	И ТаблицаНомераКиЗ.НомерКиЗ В
	|			(ВЫБРАТЬ
	|				НеподтвержденныеКиЗ.НомерКиЗ
	|			ИЗ
	|				НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НеподтвержденныеКиЗ.Документ КАК Документ,
	|	НеподтвержденныеКиЗ.НомерКиЗ КАК НомерКиЗ,
	|	НеподтвержденныеКиЗ.ДокументПоступления КАК ДокументПоступления,
	|	НеподтвержденныеКиЗ.СостояниеПодтверждения КАК СостояниеПодтверждения,
	|	ЕСТЬNULL(ВсеДокументыПоступленияПоКиЗ.ДокументПоступления, ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)) КАК ДокументПоступленияКандидат,
	|	ЕСТЬNULL(РанееСопоставленныеПоступления.ДокументПоступления, ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)) КАК ДокументПоступленияУжеСопоставлено
	|ИЗ
	|	НеподтвержденныеКиЗ КАК НеподтвержденныеКиЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РанееСопоставленныеПоступления КАК РанееСопоставленныеПоступления
	|		ПО НеподтвержденныеКиЗ.НомерКиЗ = РанееСопоставленныеПоступления.НомерКиЗ
	|			И НеподтвержденныеКиЗ.Организация = РанееСопоставленныеПоступления.Организация
	|			И НеподтвержденныеКиЗ.НомерКиЗ = РанееСопоставленныеПоступления.НомерКиЗ
	|			И НеподтвержденныеКиЗ.Документ <> РанееСопоставленныеПоступления.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсеДокументыПоступленияПоКиЗ КАК ВсеДокументыПоступленияПоКиЗ
	|		ПО НеподтвержденныеКиЗ.НомерКиЗ = ВсеДокументыПоступленияПоКиЗ.НомерКиЗ
	|			И НеподтвержденныеКиЗ.Контрагент = ВсеДокументыПоступленияПоКиЗ.Контрагент
	|			И НеподтвержденныеКиЗ.Организация = ВсеДокументыПоступленияПоКиЗ.Организация
	|ИТОГИ ПО
	|	Документ,
	|	НомерКиЗ,
	|	ДокументПоступления,
	|	СостояниеПодтверждения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДублирующиесяНомераКиЗ.НомерКиЗ
	|ИЗ
	|	ДублирующиесяНомераКиЗ КАК ДублирующиесяНомераКиЗ";
	
	Если ДокументыКПодтверждению.Количество() > 0 Тогда
		
		Запрос.УстановитьПараметр("ДокументыКПодтверждению", ДокументыКПодтверждению);
		
	Иначе
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ДокументыКПодтверждению", Обработки.ПодтверждениеПоступившихКиЗГИСМ.ТекстУсловияПоУведомлениямОПоступленииМаркированныхТоваровГИСМ());
		
	КонецЕсли;
	
	ПустыеЗначенияДокументовПоступления = ИнтеграцияГИСМ.МассивПустыхЗначенийДокументовПоступленияМаркированнойПродукции();
	Запрос.УстановитьПараметр("ПустыеЗначенияДокументовПоступления", ПустыеЗначенияДокументовПоступления);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("НомераКиЗКПодтверждению", РезультатЗапроса[4]);
	ВозвращаемоеЗначение.Вставить("ПроблемыДублиКиЗ",        РезультатЗапроса[5]);
	ВозвращаемоеЗначение.Вставить("ПроблемыСопоставления",   Неопределено);
	
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#Область РасчетСостоянийИнформированияГИСМ

// См. описание процедуры ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусИнформированияГИСМДляДокументаРаспоряжения
//
Процедура РассчитатьСтатусИнформированияГИСМДляДокументаРаспоряжения(Источник, ЗаписьТребуется)

	ВыполнятьЗаписьВРегистр = Ложь;
	ДанныеЗаписи = РегистрыСведений.СтатусыИнформированияГИСМ.ЗначенияПоУмолчанию();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатусыИнформированияГИСМ.Документ,
	|	СтатусыИнформированияГИСМ.ТекущееУведомление,
	|	СтатусыИнформированияГИСМ.Статус,
	|	СтатусыИнформированияГИСМ.ДальнейшееДействие
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ГДЕ
	|	СтатусыИнформированияГИСМ.Документ = &Основание";
	
	Запрос.УстановитьПараметр("Основание", Источник.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если (Не Источник.Проведен Или Не ЗаписьТребуется)
			И Не ЗначениеЗаполнено(Выборка.ТекущееУведомление) Тогда
			
			РегистрыСведений.СтатусыИнформированияГИСМ.УдалитьЗаписьИзРегистра(Источник.Ссылка);
			Возврат;
			
		КонецЕсли;
		
	ИначеЕсли Источник.Проведен И ЗаписьТребуется Тогда
		
		ВыполнятьЗаписьВРегистр = Истина;
		
		ДанныеЗаписи.Документ            = Источник.Ссылка;
		ДанныеЗаписи.ДальнейшееДействие  = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется;
		ДанныеЗаписи.Статус              = Перечисления.СтатусыИнформированияГИСМ.Отсутствует;
		
	КонецЕсли;
	
	Если ВыполнятьЗаписьВРегистр Тогда
		РегистрыСведений.СтатусыИнформированияГИСМ.ВыполнитьЗаписьВРегистрПоДаннымСтруктура(ДанныеЗаписи);
	КонецЕсли;
	
КонецПроцедуры

// См. описание процедуры ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусИнформированияГИСМДляДокументаСРаспоряжением
//
Процедура РассчитатьСтатусИнформированияГИСМДляДокументаСРаспоряжением(Источник)

	ЗаписьНового = Источник.ДополнительныеСвойства.Свойство("ЗаписьНового")
	             И Источник.ДополнительныеСвойства.ЗаписьНового;
	
	Если Не ЗаписьНового Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнятьЗаписьВРегистр = Ложь;
	ДанныеЗаписи = РегистрыСведений.СтатусыИнформированияГИСМ.ЗначенияПоУмолчанию();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатусыИнформированияГИСМ.Документ,
	|	СтатусыИнформированияГИСМ.ТекущееУведомление,
	|	СтатусыИнформированияГИСМ.Статус,
	|	СтатусыИнформированияГИСМ.ДальнейшееДействие
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ГДЕ
	|	СтатусыИнформированияГИСМ.Документ = &Документ";
	
	Запрос.УстановитьПараметр("Документ", Источник.Основание);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ВыполнятьЗаписьВРегистр         = Истина;
		ДанныеЗаписи.Документ           = Выборка.Документ;
		ДанныеЗаписи.ТекущееУведомление = Источник.Ссылка;
		ДанныеЗаписи.Статус             = Перечисления.СтатусыИнформированияГИСМ.Черновик;
		ДанныеЗаписи.ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные;
		
	КонецЕсли;
	
	Если ВыполнятьЗаписьВРегистр Тогда
		РегистрыСведений.СтатусыИнформированияГИСМ.ВыполнитьЗаписьВРегистрПоДаннымСтруктура(ДанныеЗаписи);
	КонецЕсли;
	
КонецПроцедуры

// См. описание процедуры ИнтеграцияГИСМПереопределяемый.РассчитатьСтатусИнформированияГИСМДляДокумента
//
Процедура РассчитатьСтатусИнформированияГИСМДляДокумента(Источник, ЗаписьТребуется)

	ВыполнятьЗаписьВРегистр = Ложь;
	ДанныеЗаписи = РегистрыСведений.СтатусыИнформированияГИСМ.ЗначенияПоУмолчанию();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатусыИнформированияГИСМ.Документ,
	|	СтатусыИнформированияГИСМ.ТекущееУведомление,
	|	СтатусыИнформированияГИСМ.Статус,
	|	СтатусыИнформированияГИСМ.ДальнейшееДействие
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ГДЕ
	|	СтатусыИнформированияГИСМ.Документ = &Основание";
	
	Запрос.УстановитьПараметр("Основание", Источник.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если (Не Источник.Проведен Или Не ЗаписьТребуется) Тогда
			РегистрыСведений.СтатусыИнформированияГИСМ.УдалитьЗаписьИзРегистра(Источник.Ссылка);
			Возврат;
		КонецЕсли;
		
	Иначе
		
		Если Источник.Проведен И ЗаписьТребуется Тогда
			
			ВыполнятьЗаписьВРегистр = Истина;
			
			ДанныеЗаписи.Документ            = Источник.Ссылка;
			ДанныеЗаписи.ДальнейшееДействие  = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные;
			ДанныеЗаписи.Статус              = Перечисления.СтатусыИнформированияГИСМ.Черновик;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВыполнятьЗаписьВРегистр Тогда
		РегистрыСведений.СтатусыИнформированияГИСМ.ВыполнитьЗаписьВРегистрПоДаннымСтруктура(ДанныеЗаписи);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область РаботаСПрикладнымиДокументами

// См. описание функции ИнтеграцияГИСМПереопределяемый.ЕстьМаркируемаяПродукцияГИСМ
//
Функция ЕстьМаркируемаяПродукцияГИСМ(ТабличнаяЧасть) Экспорт

	ПустыеКиЗ = ТабличнаяЧасть.НайтиСтроки(Новый Структура("КИЗ_ГИСМ", Справочники.КонтрольныеЗнакиГИСМ.ПустаяСсылка()));
	Возврат ПустыеКиЗ.Количество() <> ТабличнаяЧасть.Количество();

КонецФункции

// См. описание процедуры ИнтеграцияГИСМПереопределяемый.ЗаполнитьПредставлениеТоваровУведомленияПоНомерамКиЗОснования
//
Процедура ЗаполнитьПредставлениеТоваровУведомленияПоНомерамКиЗОснования(Основание, НомераКиЗ) Экспорт
	
	Если Не ЗначениеЗаполнено(Основание) Тогда
		Возврат;
	КонецЕсли;
	
		Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	НомераКиЗ.НомерСтроки КАК НомерСтроки,
	|	НомераКиЗ.НомерКиЗ КАК НомерКиЗ
	|ПОМЕСТИТЬ втНомераКиЗ
	|ИЗ
	|	&НомераКиЗ КАК НомераКиЗ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерКиЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(Товары.Номенклатура) КАК НоменклатураПредставление,
	|	Товары.Номенклатура КАК Номенклатура,
	|	втНомераКиЗ.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	втНомераКиЗ КАК втНомераКиЗ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтрольныеЗнакиГИСМ КАК КонтрольныеЗнакиГИСМ
	|		ПО втНомераКиЗ.НомерКиЗ = КонтрольныеЗнакиГИСМ.Код
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК Товары
	|		ПО (Товары.Ссылка = &Основание)
	|			И (КонтрольныеЗнакиГИСМ.Ссылка = Товары.КиЗ_ГИСМ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки");

	Запрос.УстановитьПараметр("НомераКиЗ", НомераКиЗ.Выгрузить(, "НомерСтроки,НомерКиЗ"));
	Запрос.УстановитьПараметр("Основание", Основание);
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "РеализацияТоваровУслуг", "ВозвратТоваровПоставщику");
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "РеализацияТоваровУслуг", "ПоступлениеТоваровУслуг");
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.СписаниеТоваров") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "РеализацияТоваровУслуг", "СписаниеТоваров");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Для Каждого ТекСтрока Из НомераКиЗ Цикл
		
		Если Выборка.НайтиСледующий(ТекСтрока.НомерСтроки, "НомерСтроки") Тогда
			
			ТекСтрока.Номенклатура              = Выборка.Номенклатура;
			ТекСтрока.НоменклатураПредставление = Выборка.НоменклатураПредставление;
			
		Иначе
			
			ТекСтрока.Номенклатура   = Неопределено;
			ТекСтрока.НоменклатураПредставление = Неопределено;
			
		КонецЕсли;
		
		Выборка.Сбросить();
		
	КонецЦикла;
	
КонецПроцедуры

// См. описание процедуры ИнтеграцияГИСМПереопределяемый.ЗаполнитьПредставлениеТоваровУведомленияОПоступлении
//
Процедура ЗаполнитьПредставлениеТоваровУведомленияОПоступлении(НомераКиЗ) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	НомераКиЗ.НомерСтроки КАК НомерСтроки,
	|	НомераКиЗ.НомерКиЗ КАК НомерКиЗ,
	|	НомераКиЗ.ДокументПоступления КАК ДокументПоступления
	|ПОМЕСТИТЬ втНомераКиЗ
	|ИЗ
	|	&НомераКиЗ КАК НомераКиЗ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерКиЗ,
	|	ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(ЕСТЬNULL(Поступление.Номенклатура, Возврат.Номенклатура)) КАК НоменклатураПредставление,
	|	ЕСТЬNULL(Поступление.Номенклатура, Возврат.Номенклатура) КАК Номенклатура,
	|	втНомераКиЗ.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	втНомераКиЗ КАК втНомераКиЗ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтрольныеЗнакиГИСМ КАК КонтрольныеЗнакиГИСМ
	|		ПО втНомераКиЗ.НомерКиЗ = КонтрольныеЗнакиГИСМ.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК Поступление
	|		ПО (Поступление.Ссылка = втНомераКиЗ.ДокументПоступления)
	|			И (КонтрольныеЗнакиГИСМ.Ссылка = Поступление.КиЗ_ГИСМ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.Товары КАК Возврат
	|		ПО (Возврат.Ссылка = втНомераКиЗ.ДокументПоступления)
	|			И (КонтрольныеЗнакиГИСМ.Ссылка = Возврат.КиЗ_ГИСМ)
	|ГДЕ
	|	(НЕ Поступление.Ссылка ЕСТЬ NULL 
	|			ИЛИ НЕ Возврат.Ссылка ЕСТЬ NULL )
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки");
	
	Запрос.УстановитьПараметр("НомераКиЗ", НомераКиЗ.Выгрузить(, "НомерСтроки, НомерКиЗ, ДокументПоступления"));
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Для Каждого ТекСтрока Из НомераКиЗ Цикл
		
		Если Выборка.НайтиСледующий(ТекСтрока.НомерСтроки, "НомерСтроки") Тогда
			
			ТекСтрока.НоменклатураПредставление = Выборка.НоменклатураПредставление;
			ТекСтрока.Номенклатура              = Выборка.Номенклатура;
			
		Иначе
			
			ТекСтрока.НоменклатураПредставление = Неопределено;
			ТекСтрока.Номенклатура              = Неопределено;
			
		КонецЕсли;
		
		Выборка.Сбросить();
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТекстЗапросаПоПроблемнымПоступлениям(ИмяНабораДанных, ОтборОрганизация, ОтборКонтрагент) Экспорт
	
	ИмяТабличнойЧастиДокументаГИСМ = "Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ.НомераКиЗ";
	ТекстОтбораПоНоменклатуре      = "Товары.Номенклатура.ПродукцияМаркируемаяДляГИСМ";
	
	ТекстОтбораДокументыПоступления = "";
	ТекстОтбораДокументыГИСМ        = "";
	Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
		ТекстОтбораДокументыПоступления = ТекстОтбораДокументыПоступления + " И Товары.Ссылка.Организация = &Организация ";
		ТекстОтбораДокументыГИСМ        = ТекстОтбораДокументыГИСМ + " И ТабличнаяЧастьДокументаГИСМ.Ссылка.Организация = &Организация ";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборКонтрагент) Тогда
		ТекстОтбораДокументыПоступления = ТекстОтбораДокументыПоступления + " И Товары.Ссылка.Контрагент = &Контрагент ";
		ТекстОтбораДокументыГИСМ        = ТекстОтбораДокументыГИСМ + " И ТабличнаяЧастьДокументаГИСМ.Ссылка.Контрагент = &Контрагент ";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка.Организация КАК Организация,
	|	Товары.Ссылка.Контрагент КАК Контрагент,
	|	КонтрольныеЗнакиГИСМ.Код КАК НомерКИЗ,
	|	СУММА(1) КАК КоличествоВДокументахПоступления
	|ПОМЕСТИТЬ НеСопоставленныеПоступления
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтрольныеЗнакиГИСМ КАК КонтрольныеЗнакиГИСМ
	|		ПО (КонтрольныеЗнакиГИСМ.Ссылка = Товары.КиЗ_ГИСМ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИмяТабличнойЧастиДокументаГИСМ КАК ТабличнаяЧастьДокументаГИСМ
	|		ПО (КонтрольныеЗнакиГИСМ.Код = ТабличнаяЧастьДокументаГИСМ.НомерКиЗ)
	|			И Товары.Ссылка = ТабличнаяЧастьДокументаГИСМ.ДокументПоступления
	|ГДЕ
	|	ТабличнаяЧастьДокументаГИСМ.Ссылка ЕСТЬ NULL 
	|	И &ТекстОтбораПоНоменклатуре
	|	И &ТекстОтбораДокументыПоступления
	|
	|СГРУППИРОВАТЬ ПО
	|	КонтрольныеЗнакиГИСМ.Код,
	|	Товары.Ссылка.Организация,
	|	Товары.Ссылка.Контрагент
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Контрагент,
	|	НомерКИЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТабличнаяЧастьДокументаГИСМ.НомерКиЗ КАК НомерКиЗ,
	|	ТабличнаяЧастьДокументаГИСМ.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧастьДокументаГИСМ.Ссылка.Контрагент КАК Контрагент,
	|	СУММА(1) КАК КоличествоВДокументахГИСМ
	|ПОМЕСТИТЬ НеСопоставленныеДокументыГИСМ
	|ИЗ
	|	ИмяТабличнойЧастиДокументаГИСМ КАК ТабличнаяЧастьДокументаГИСМ
	|ГДЕ
	|	НЕ ТабличнаяЧастьДокументаГИСМ.Ссылка.ПометкаУдаления
	|	И ТабличнаяЧастьДокументаГИСМ.ДокументПоступления В (ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка), ЗНАЧЕНИЕ(Документ.ВозвратТоваровОтПокупателя.ПустаяСсылка), НЕОПРЕДЕЛЕНО)
	|	И &ТекстОтбораДокументыГИСМ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧастьДокументаГИСМ.НомерКиЗ,
	|	ТабличнаяЧастьДокументаГИСМ.Ссылка.Организация,
	|	ТабличнаяЧастьДокументаГИСМ.Ссылка.Контрагент
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Контрагент,
	|	НомерКиЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НеСопоставленныеПоступления.НомерКИЗ КАК НомерКИЗ,
	|	НеСопоставленныеПоступления.Организация КАК Организация,
	|	НеСопоставленныеПоступления.Контрагент КАК Контрагент,
	|	ЕСТЬNULL(НеСопоставленныеДокументыГИСМ.КоличествоВДокументахГИСМ, 0) КАК КоличествоВДокументахГИСМ,
	|	НеСопоставленныеПоступления.КоличествоВДокументахПоступления
	|ПОМЕСТИТЬ ПроблемныеНомераКиЗ
	|ИЗ
	|	НеСопоставленныеПоступления КАК НеСопоставленныеПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ НеСопоставленныеДокументыГИСМ КАК НеСопоставленныеДокументыГИСМ
	|		ПО НеСопоставленныеПоступления.Организация = НеСопоставленныеДокументыГИСМ.Организация
	|			И НеСопоставленныеПоступления.Контрагент = НеСопоставленныеДокументыГИСМ.Контрагент
	|			И НеСопоставленныеПоступления.НомерКИЗ = НеСопоставленныеДокументыГИСМ.НомерКиЗ
	|ГДЕ
	|	НеСопоставленныеПоступления.КоличествоВДокументахПоступления > ЕСТЬNULL(НеСопоставленныеДокументыГИСМ.КоличествоВДокументахГИСМ, 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерКИЗ,
	|	Организация,
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПроблемныеНомераКиЗ.НомерКИЗ,
	|	ПроблемныеНомераКиЗ.Организация КАК Организация,
	|	ПроблемныеНомераКиЗ.Контрагент КАК Контрагент,
	|	ПроблемныеНомераКиЗ.КоличествоВДокументахГИСМ,
	|	ПроблемныеНомераКиЗ.КоличествоВДокументахПоступления
	|ИЗ
	|	ПроблемныеНомераКиЗ КАК ПроблемныеНомераКиЗ
	|ИТОГИ ПО
	|	Контрагент,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка КАК ДокументПоступления,
	|	Товары.Ссылка.Организация КАК Организация,
	|	Товары.Ссылка.Контрагент КАК Контрагент,
	|	КонтрольныеЗнакиГИСМ.Код КАК НомерКИЗ
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтрольныеЗнакиГИСМ КАК КонтрольныеЗнакиГИСМ
	|		ПО (КонтрольныеЗнакиГИСМ.Ссылка = Товары.КиЗ_ГИСМ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИмяТабличнойЧастиДокументаГИСМ КАК ТабличнаяЧастьДокументаГИСМ
	|		ПО (КонтрольныеЗнакиГИСМ.Код = ТабличнаяЧастьДокументаГИСМ.НомерКиЗ)
	|			И Товары.Ссылка = ТабличнаяЧастьДокументаГИСМ.ДокументПоступления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПроблемныеНомераКиЗ КАК ПроблемныеНомераКиЗ
	|		ПО Товары.Ссылка.Организация = ПроблемныеНомераКиЗ.Организация
	|			И Товары.Ссылка.Контрагент = ПроблемныеНомераКиЗ.Контрагент
	|			И (КонтрольныеЗнакиГИСМ.Код = ПроблемныеНомераКиЗ.НомерКИЗ)
	|ГДЕ
	|	Товары.Ссылка ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|	И ТабличнаяЧастьДокументаГИСМ.Ссылка ЕСТЬ NULL 
	|	И &ТекстОтбораПоНоменклатуре
	|	И &ТекстОтбораДокументыПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТабличнаяЧастьДокументаГИСМ.Ссылка КАК ДокументГИСМ,
	|	ТабличнаяЧастьДокументаГИСМ.НомерКиЗ КАК НомерКиЗ,
	|	ТабличнаяЧастьДокументаГИСМ.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧастьДокументаГИСМ.Ссылка.Контрагент КАК Контрагент
	|ИЗ
	|	ИмяТабличнойЧастиДокументаГИСМ КАК ТабличнаяЧастьДокументаГИСМ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПроблемныеНомераКиЗ КАК ПроблемныеНомераКиЗ
	|		ПО ТабличнаяЧастьДокументаГИСМ.Ссылка.Организация = ПроблемныеНомераКиЗ.Организация
	|			И ТабличнаяЧастьДокументаГИСМ.Ссылка.Контрагент = ПроблемныеНомераКиЗ.Контрагент
	|			И ТабличнаяЧастьДокументаГИСМ.НомерКиЗ = ПроблемныеНомераКиЗ.НомерКИЗ
	|ГДЕ
	|	НЕ ТабличнаяЧастьДокументаГИСМ.Ссылка.ПометкаУдаления
	|	И ТабличнаяЧастьДокументаГИСМ.ДокументПоступления В (ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка), ЗНАЧЕНИЕ(Документ.ВозвратТоваровОтПокупателя.ПустаяСсылка), НЕОПРЕДЕЛЕНО)
	|	И &ТекстОтбораДокументыГИСМ";
	
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяТабличнойЧастиДокументаГИСМ",     ИмяТабличнойЧастиДокументаГИСМ);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстОтбораПоНоменклатуре",         ТекстОтбораПоНоменклатуре);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &ТекстОтбораДокументыГИСМ",        ТекстОтбораДокументыГИСМ);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &ТекстОтбораДокументыПоступления", ТекстОтбораДокументыПоступления);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПризнакЕстьМаркируемаяПродукцияГИСМ(Объект) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьКонтрольныеЗнакиГИСМ") Тогда
		Возврат ;
	КонецЕсли;
	
	Объект.ЕстьМаркируемаяПродукцияГИСМ = ЕстьМаркируемаяПродукцияГИСМ(Объект.Товары)
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// См. описание функции ИнтеграцияГИСМПереопределяемый.КонтрагентПоИННКПП
//
Функция КонтрагентПоИННКПП(ИНН, КПП) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.ИНН = &ИНН
	|	И (Контрагенты.ЮридическоеФизическоеЛицо = &ЮридическоеФизическоеЛицо
	|			ИЛИ Контрагенты.КПП = &КПП)");
	
	Запрос.УстановитьПараметр("ИНН", ИНН);
	Запрос.УстановитьПараметр("КПП", КПП);
	Запрос.УстановитьПараметр("ЮридическоеФизическоеЛицо", Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо);

	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ИННКПППоКонтрагенту
//
Функция ИННКПППоКонтрагенту(Контрагент) Экспорт
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Контрагент, "ИНН, КПП");
	
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ИННКППGLNОрганизации
//
Функция ИННКППGLNОрганизации(Организация, Подразделение) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ИНН", "");
	ВозвращаемоеЗначение.Вставить("КПП", "");
	ВозвращаемоеЗначение.Вставить("GLN", "");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ОрганизацииДляОбменаГИСМ.GLN, """") КАК GLN
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОрганизацииДляОбменаГИСМ КАК ОрганизацииДляОбменаГИСМ
	|			ПО Организации.Ссылка = ОрганизацииДляОбменаГИСМ.Организация
	|ГДЕ
	|	Организации.Ссылка = &Организация
	|");
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ВозвращаемоеЗначение, Выборка);
	КонецЕсли;
	
	ДанныеОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Организация);
	ЗаполнитьЗначенияСвойств(ВозвращаемоеЗначение, ДанныеОрганизации, "ИНН, КПП");
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.РеквизитыКонтрагента
//
Функция РеквизитыКонтрагента(Контрагент) Экспорт
	
	Реквизиты = Новый Структура();
	
	ДанныеКонтрагента = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Контрагент);
	
	ЭтоФизическоеЛицо = ДанныеКонтрагента.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
	Если ЗначениеЗаполнено(ДанныеКонтрагента.СтранаРегистрации) Тогда
		СтранаРегистрации = ВРЕГ(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеКонтрагента.СтранаРегистрации, "КодАльфа2"));
	Иначе
		СтранаРегистрации = "";
	КонецЕсли;
	
	Реквизиты.Вставить("ЭтоФизическоеЛицо",    ЭтоФизическоеЛицо);
	Реквизиты.Вставить("НаименованиеПолное",   ДанныеКонтрагента.ПолноеНаименование);
	Реквизиты.Вставить("Наименование",         ДанныеКонтрагента.СокращенноеНаименование);
	// Адреса и контактная информация
	Реквизиты.Вставить("ЮридическийАдрес",     ДанныеКонтрагента.ЮридическийАдрес);
	Реквизиты.Вставить("ИНН",                  ДанныеКонтрагента.ИНН);
	Реквизиты.Вставить("КПП",                  ДанныеКонтрагента.КПП);
	Реквизиты.Вставить("Страна",               СтранаРегистрации);
	Реквизиты.Вставить("РегистрационныйНомер", ДанныеКонтрагента.НалоговыйНомерВСтранеРегистрации);
	
	Возврат Реквизиты;
	
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ВалютаРегламентированногоУчета
//
Функция ВалютаРегламентированногоУчета() Экспорт
	
	Возврат ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
КонецФункции

// См. функцию ИнтеграцияГИСМПереопределяемый.ОрганизацияПодразделениеДокумента
//
Функция ОрганизацияПодразделениеДокумента(ДокументСсылка) Экспорт
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Организация");
	
КонецФункции
#КонецОбласти

#Область Панель1СМаркировка

// См. описание функции ИнтеграцияГИСМПереопределяемый.ДоступенОтчетОРозничныхПродажах
//
Функция ДоступенОтчетОРозничныхПродажах() Экспорт
	
	Возврат ПолучитьФункциональнуюОпцию("ВедетсяРозничнаяТорговля")
		И ПравоДоступа("Чтение", Метаданные.Документы.ОтчетОРозничныхПродажах);
	
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ДоступенВозвратТоваровОтРозничногоКлиента
//
Функция ДоступенВозвратТоваровОтРозничногоКлиента() Экспорт
	
	Возврат ПолучитьФункциональнуюОпцию("ВедетсяРозничнаяТорговля")
		И ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровОтПокупателя);
	
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ТекстЗапросаОтчетыОРозничныхПродажах
//
Функция ТекстЗапросаОтчетыОРозничныхПродажах() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ОтчетОРозничныхПродажах.Ссылка
	|ГДЕ
	|	СтатусыИнформированияГИСМ.ДальнейшееДействие <> ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется)
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|	И (ОтчетОРозничныхПродажах.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ТекстЗапросаОтчетыОРозничныхПродажахОтработайте
//
Функция ТекстЗапросаОтчетыОРозничныхПродажахОтработайте() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ОтчетОРозничныхПродажах.Ссылка
	|ГДЕ
	|	СтатусыИнформированияГИСМ.ДальнейшееДействие В 
	|		(ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные),
	|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен))
	|	И (ОтчетОРозничныхПродажах.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ТекстЗапросаОтчетыОРозничныхПродажахОжидайте
//
Функция ТекстЗапросаОтчетыОРозничныхПродажахОжидайте() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ОтчетОРозничныхПродажах.Ссылка
	|ГДЕ
	|	СтатусыИнформированияГИСМ.ДальнейшееДействие В 
	|		(ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием),
	|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПолучениеКвитанцииОФиксации))
	|	И (ОтчетОРозничныхПродажах.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ТекстЗапросаВозвратыТоваровОтРозничныхКлиентов
//
Функция ТекстЗапросаВозвратыТоваровОтРозничныхКлиентов() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ВозвратТоваровОтПокупателя.Ссылка
	|ГДЕ
	|	СтатусыИнформированияГИСМ.ДальнейшееДействие <> ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется)
	|	И (ВозвратТоваровОтПокупателя.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ТекстЗапросаВозвратыТоваровОтРозничныхКлиентовОтработайте
//
Функция ТекстЗапросаВозвратыТоваровОтРозничныхКлиентовОтработайте() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ВозвратТоваровОтПокупателя.Ссылка
	|ГДЕ
	|	СтатусыИнформированияГИСМ.ДальнейшееДействие В 
	|		(ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные),
	|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен))
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|	И (ВозвратТоваровОтПокупателя.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ТекстЗапросаВозвратыТоваровОтРозничныхКлиентовОжидайте
//
Функция ТекстЗапросаВозвратыТоваровОтРозничныхКлиентовОжидайте() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ВозвратТоваровОтПокупателя.Ссылка
	|ГДЕ
	|	СтатусыИнформированияГИСМ.ДальнейшееДействие В 
	|		(ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием),
	|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПолучениеКвитанцииОФиксации))
	|	И (ВозвратТоваровОтПокупателя.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ТекстЗапросаУведомленияОСписанииКиЗГИСМ
//
Функция ТекстЗапросаУведомленияОСписанииКиЗГИСМ() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.УведомлениеОСписанииКиЗГИСМ КАК УведомлениеОСписанииКиЗГИСМ
	|ПО
	|	СтатусыИнформированияГИСМ.ТекущееУведомление = УведомлениеОСписанииКиЗГИСМ.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.СписаниеТоваров КАК СписаниеТоваров
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = СписаниеТоваров.Ссылка
	|ГДЕ
	|	СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.СписаниеТоваров
	|	И (СписаниеТоваров.Ссылка ЕСТЬ НЕ NULL
	|	И (СтатусыИнформированияГИСМ.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка))
	|	И (СписаниеТоваров.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО))
	|	ИЛИ
	|	(УведомлениеОСписанииКиЗГИСМ.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.ДальнейшееДействие <> ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется)
	|	И (УведомлениеОСписанииКиЗГИСМ.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)))
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ТекстЗапросаУведомленияОСписанииКиЗГИСМОформите
//
Функция ТекстЗапросаУведомленияОСписанииКиЗГИСМОформите() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Документ.СписаниеТоваров КАК СписаниеТоваров
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = СписаниеТоваров.Ссылка
	|ГДЕ
	|	СтатусыИнформированияГИСМ.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка))
	|	И (СписаниеТоваров.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
		
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ТекстЗапросаУведомленияОбОтгрузке
//
Функция ТекстЗапросаУведомленияОбОтгрузке() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ КАК СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ КАК УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ
	|ПО
	|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ТекущееУведомлениеОбОтгрузке = УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.Ссылка
	|%ЛевоеСоединение%
	|ГДЕ
	|	(%УсловиеСсылка%
	|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ОтклоненоКлиентом),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ПустаяСсылка))
	|	И (%УсловиеОрганизация%
	|		&Организация = НЕОПРЕДЕЛЕНО))
	|	ИЛИ
	|	(УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ДальнейшееДействие <>
	|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется)
	|	И (УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО))
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ПравоДоступаРеализацияТоваровУслуг = ПравоДоступа("Чтение", Метаданные.Документы.РеализацияТоваровУслуг);
	ПравоДоступаВозвратТоваровПоставщику = ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровПоставщику);
	
	ЛевоеСоединение = "";
	Если ПравоДоступаРеализацияТоваровУслуг Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ПО
		|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ = РеализацияТоваровУслуг.Ссылка
		|";
	КонецЕсли;
	
	Если ПравоДоступаВозвратТоваровПоставщику Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
		|ПО
		|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ = ВозвратТоваровПоставщику.Ссылка
		|";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ЛевоеСоединение%", ЛевоеСоединение);
	
	УсловиеСсылка = "";
	УсловиеОрганизация = "";
	
	Если ПравоДоступаРеализацияТоваровУслуг
		И ПравоДоступаВозвратТоваровПоставщику Тогда

		УсловиеСсылка = "(РеализацияТоваровУслуг.Ссылка ЕСТЬ НЕ NULL ИЛИ ВозвратТоваровПоставщику.Ссылка ЕСТЬ НЕ NULL) И";
		УсловиеОрганизация = "РеализацияТоваровУслуг.Организация = &Организация ИЛИ ВозвратТоваровПоставщику.Организация = &Организация ИЛИ";
		
	ИначеЕсли ПравоДоступаРеализацияТоваровУслуг Тогда
		
		УсловиеСсылка = "РеализацияТоваровУслуг.Ссылка ЕСТЬ НЕ NULL И";
		УсловиеОрганизация = "РеализацияТоваровУслуг.Организация = &Организация ИЛИ";
		
	ИначеЕсли ПравоДоступаВозвратТоваровПоставщику Тогда
		
		УсловиеСсылка = "ВозвратТоваровПоставщику.Ссылка ЕСТЬ НЕ NULL И";
		УсловиеОрганизация = "ВозвратТоваровПоставщику.Организация = &Организация ИЛИ";
		
	КонецЕсли;
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", УсловиеСсылка);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", УсловиеОрганизация);
	
	Возврат ТекстЗапроса;
	
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ТекстЗапросаУведомленияОбОтгрузкеОформите
//
Функция ТекстЗапросаУведомленияОбОтгрузкеОформите() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ КАК СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ
	|%ЛевоеСоединение%
	|ГДЕ
	|	%УсловиеСсылка%
	|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ОтклоненоКлиентом),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ПустаяСсылка)
	|	)
	|	И (%УсловиеОрганизация% &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ПравоДоступаРеализацияТоваровУслуг = ПравоДоступа("Чтение", Метаданные.Документы.РеализацияТоваровУслуг);
	ПравоДоступаВозвратТоваровПоставщику = ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровПоставщику);
	
	ЛевоеСоединение = "";
	Если ПравоДоступаРеализацияТоваровУслуг Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ПО
		|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ = РеализацияТоваровУслуг.Ссылка
		|";
	КонецЕсли;
	
	Если ПравоДоступаВозвратТоваровПоставщику Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
		|ПО
		|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ = ВозвратТоваровПоставщику.Ссылка
		|";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ЛевоеСоединение%", ЛевоеСоединение);
	
	УсловиеСсылка = "";
	УсловиеОрганизация = "";
	
	Если ПравоДоступаРеализацияТоваровУслуг
		И ПравоДоступаВозвратТоваровПоставщику Тогда

		УсловиеСсылка = "(РеализацияТоваровУслуг.Ссылка ЕСТЬ НЕ NULL ИЛИ ВозвратТоваровПоставщику.Ссылка ЕСТЬ НЕ NULL) И";
		УсловиеОрганизация = "РеализацияТоваровУслуг.Организация = &Организация ИЛИ ВозвратТоваровПоставщику.Организация = &Организация ИЛИ";
		
	ИначеЕсли ПравоДоступаРеализацияТоваровУслуг Тогда
		
		УсловиеСсылка = "РеализацияТоваровУслуг.Ссылка ЕСТЬ НЕ NULL И";
		УсловиеОрганизация = "РеализацияТоваровУслуг.Организация = &Организация ИЛИ";
		
	ИначеЕсли ПравоДоступаВозвратТоваровПоставщику Тогда
		
		УсловиеСсылка = "ВозвратТоваровПоставщику.Ссылка ЕСТЬ НЕ NULL И";
		УсловиеОрганизация = "ВозвратТоваровПоставщику.Организация = &Организация ИЛИ";
		
	КонецЕсли;
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", УсловиеСсылка);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", УсловиеОрганизация);
	
	Возврат ТекстЗапроса;
		
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ТекстЗапросаУведомленияОВвозеИзЕАЭС
//
Функция ТекстЗапросаУведомленияОВвозеИзЕАЭС() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ КАК УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ
	|ПО
	|	СтатусыИнформированияГИСМ.ТекущееУведомление = УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ПоступлениеТоваровУслуг.Ссылка
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|	И ((СтатусыИнформированияГИСМ.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка))
	|	И (ПоступлениеТоваровУслуг.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО))
	|	ИЛИ
	|	(УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.ДальнейшееДействие <> ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется)
	|	И (УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)))
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ТекстЗапросаУведомленияОВвозеИзЕАЭСОформите
//
Функция ТекстЗапросаУведомленияОВвозеИзЕАЭСОформите() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ПоступлениеТоваровУслуг.Ссылка
	|ГДЕ
	|	СтатусыИнформированияГИСМ.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка))
	|	И (ПоступлениеТоваровУслуг.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
		
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ТекстЗапросаУведомленияОбИмпорте
//
Функция ТекстЗапросаУведомленияОбИмпорте() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.УведомлениеОбИмпортеМаркированныхТоваровГИСМ КАК УведомлениеОбИмпортеМаркированныхТоваровГИСМ
	|ПО
	|	СтатусыИнформированияГИСМ.ТекущееУведомление = УведомлениеОбИмпортеМаркированныхТоваровГИСМ.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ПоступлениеТоваровУслуг.Ссылка
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|	И ((СтатусыИнформированияГИСМ.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка))
	|	И (ПоступлениеТоваровУслуг.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО))
	|	ИЛИ
	|	(УведомлениеОбИмпортеМаркированныхТоваровГИСМ.Ссылка ЕСТЬ НЕ NULL
	|	И СтатусыИнформированияГИСМ.ДальнейшееДействие <> ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется)
	|	И (УведомлениеОбИмпортеМаркированныхТоваровГИСМ.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)))
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ТекстЗапросаУведомленияОбИмпортеОформите
//
Функция ТекстЗапросаУведомленияОбИмпортеОформите() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ                         
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ПО
	|	СтатусыИнформированияГИСМ.Документ = ПоступлениеТоваровУслуг.Ссылка
	|ГДЕ
	|	СтатусыИнформированияГИСМ.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка))
	|	И (ПоступлениеТоваровУслуг.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
		
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ТекстЗапросаКоличествоОтчетовОРозничныхПродажах
//
Функция ТекстЗапросаКоличествоОтчетовОРозничныхПродажахОжидающиеОтправки() Экспорт
	
	Возврат 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ПО
	|	СтатусыИнформированияГИСМ.ТекущееУведомление = ОтчетОРозничныхПродажах.Ссылка
	|ГДЕ
	|	(СтатусыИнформированияГИСМ.ДальнейшееДействие В (
	|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен),
	|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием)
	|	)
	|	И (ОтчетОРозничныхПродажах.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО))"
	+ "
	|/////////////////////////////////////////////////////////////////////////////
	|ОБЪЕДИНИТЬ ВСЕ";
	
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ТекстЗапросаКоличествоВозвратовОтРозничныхКлиентов
//
Функция ТекстЗапросаКоличествоВозвратовОтРозничныхКлиентовОжидающиеОтправки() Экспорт
	
	Возврат "
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыИнформированияГИСМ.Документ) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|ПО
	|	СтатусыИнформированияГИСМ.ТекущееУведомление = ВозвратТоваровОтПокупателя.Ссылка
	|ГДЕ
	|	СтатусыИнформированияГИСМ.ДальнейшееДействие В (
	|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен),
	|		ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием))
	|	И (ВозвратТоваровОтПокупателя.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)"
	+ "
	|/////////////////////////////////////////////////////////////////////////////
	|ОБЪЕДИНИТЬ ВСЕ";
	
КонецФункции

#КонецОбласти

#Область ЗапросыДинамическихСписковРаспоряжений

// См. описание функции ИнтеграцияГИСМПереопределяемый.ТекстЗапросаДинамическогоСпискаРаспоряженийУведомлениеОбИмпорте
//
Функция ТекстЗапросаДинамическогоСпискаРаспоряженийУведомлениеОбИмпорте() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтатусыИнформированияГИСМ.Документ КАК Документ,
	|	СтатусыИнформированияГИСМ.ТекущееУведомление КАК ТекущееУведомление,
	|	ВЫБОР
	|		КОГДА СтатусыИнформированияГИСМ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует)
	|		ИНАЧЕ СтатусыИнформированияГИСМ.Статус
	|	КОНЕЦ КАК СтатусГИСМУведомленияКОформлению,
	|	СтатусыИнформированияГИСМ.Документ.Дата КАК Дата,
	|	СтатусыИнформированияГИСМ.Документ.Номер КАК Номер,
	|	СтатусыИнформированияГИСМ.Документ.Организация КАК Организация,
	|	ИСТИНА КАК Картинка
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ГДЕ
	|	СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|	И СтатусыИнформированияГИСМ.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует), ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ))
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ТекстЗапросаДинамическогоСпискаРаспоряженийУведомлениеОВвозеИзЕАЭС
//
Функция ТекстЗапросаДинамическогоСпискаРаспоряженийУведомлениеОВвозеИзЕАЭС() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтатусыИнформированияГИСМ.Документ КАК Документ,
	|	СтатусыИнформированияГИСМ.ТекущееУведомление КАК ТекущееУведомление,
	|	ВЫБОР
	|		КОГДА СтатусыИнформированияГИСМ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует)
	|		ИНАЧЕ СтатусыИнформированияГИСМ.Статус
	|	КОНЕЦ КАК СтатусГИСМУведомленияКОформлению,
	|	СтатусыИнформированияГИСМ.Документ.Дата КАК Дата,
	|	СтатусыИнформированияГИСМ.Документ.Номер КАК Номер,
	|	СтатусыИнформированияГИСМ.Документ.Организация КАК Организация,
	|	СтатусыИнформированияГИСМ.Документ.Контрагент КАК Контрагент,
	|	ИСТИНА КАК Картинка
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ГДЕ
	|	СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|	И СтатусыИнформированияГИСМ.Статус В
	|		(ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ))
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ТекстЗапросаДинамическогоСпискаРаспоряженийУведомлениеОСписании
//
Функция ТекстЗапросаДинамическогоСпискаРаспоряженийУведомлениеОСписании() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтатусыИнформированияГИСМ.Документ КАК Документ,
	|	СтатусыИнформированияГИСМ.ТекущееУведомление КАК ТекущееУведомление,
	|	ВЫБОР
	|		КОГДА СтатусыИнформированияГИСМ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует)
	|		ИНАЧЕ СтатусыИнформированияГИСМ.Статус
	|	КОНЕЦ КАК СтатусГИСМКОформлению,
	|	СтатусыИнформированияГИСМ.Документ.Дата КАК Дата,
	|	СтатусыИнформированияГИСМ.Документ.Номер КАК Номер,
	|	СтатусыИнформированияГИСМ.Документ.Организация КАК Организация,
	|	ИСТИНА КАК Картинка
	|ИЗ
	|	РегистрСведений.СтатусыИнформированияГИСМ КАК СтатусыИнформированияГИСМ
	|ГДЕ
	|	СтатусыИнформированияГИСМ.Документ ССЫЛКА Документ.СписаниеТоваров
	|	И СтатусыИнформированияГИСМ.Статус В
	|		(ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияГИСМ.ОтклоненоГИСМ))
	|	И НЕ СтатусыИнформированияГИСМ.Документ.Ссылка ЕСТЬ NULL 
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// См. описание функции ИнтеграцияГИСМПереопределяемый.ТекстЗапросаДинамическогоСпискаРаспоряженийУведомлениеОбОтгрузке
//
Функция ТекстЗапросаДинамическогоСпискаРаспоряженийУведомлениеОбОтгрузке() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.Дата КАК ДатаУведомления,
	|	УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.НомерГИСМ КАК НомерГИСМ,
	|	УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.Контрагент КАК Контрагент,
	|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ КАК Документ,
	|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ.Организация КАК Организация,
	|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ТекущееУведомлениеОбОтгрузке КАК ТекущееУведомлениеОбОтгрузке,
	|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Статус КАК СтатусГИСМУведомленияКОформлению,
	|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ.Дата КАК Дата,
	|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ.Номер КАК Номер,
	|	ИСТИНА КАК Картинка
	|ИЗ
	|	РегистрСведений.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ КАК СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ КАК УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ
	|		ПО СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ТекущееУведомлениеОбОтгрузке = УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ.Ссылка
	|ГДЕ
	|	СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Статус В 
	|		(ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ОтклоненоКлиентом),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Отсутствует),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ОтклоненоГИСМ),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.ПустаяСсылка))
	|	И НЕ СтатусыУведомленийОбОтгрузкеМаркированныхТоваровГИСМ.Документ.Ссылка ЕСТЬ NULL 
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ПраваДоступа

// Конструктор перечня прикладных областей, поддерживаемых ГИСМ, к которым в программе может быть ограничен доступ.
//
// Параметры:
//  ОбластиДоступны	 - Булево - значение права доступа по умолчанию.
// 
// Возвращаемое значение:
//  Структура - Ключ - имя области; Значение - Булево, право на прикладную область.
//
Функция НовыйОписаниеОбластейДоступа(ОбластиДоступны) Экспорт
	
	ОбластиДоступа = Новый Структура;
	ОбластиДоступа.Вставить("Закупки",     ОбластиДоступны);
	ОбластиДоступа.Вставить("Отгрузки",    ОбластиДоступны);
	ОбластиДоступа.Вставить("Поступления", ОбластиДоступны);
	ОбластиДоступа.Вставить("Списания",    ОбластиДоступны);
	
	Возврат ОбластиДоступа;
	
КонецФункции

// Настраивает в профиле групп доступа роли, предоставляющие право настройки подсистемы ИнтеграцияГИСМ.
// Описывает соответствующие роли подсистемы.
//
// Параметры:
//  ОписаниеПрофиля	 - см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа() - описание профиля
//
Процедура РазрешитьНастройку(ОписаниеПрофиля) Экспорт
	
	// Следует использовать совместно с РазрешитьИнтеграциюГИСМ() или РазрешитьПросмотрДанныхГИСМ()
	
	ОписаниеПрофиля.Роли.Добавить("НастройкиОбменаГИСМ");
	
КонецПроцедуры

// Настраивает в профиле групп доступа роли, предоставляющие право интеграции с ГИСМ.
// Описывает соответствующие роли подсистемы.
//
// Параметры:
//  ОписаниеПрофиля	 - см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа() - описание профиля
//  ОбластиДоступа   - см. НовыйОписаниеОбластейДоступа() - перечень прикладных областей, 
//                     в соответствии с которым пользователю будет предоставлен доступ к документам ГИСМ
//
Процедура РазрешитьИнтеграцию(ОписаниеПрофиля, ОбластиДоступа) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваГИСМ");
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеОбработкиПанель1СМаркировка");
	
	//Следует использовать совместно с правом доступа к Документ.ПоступлениеТоваровУслуг
	Если ОбластиДоступа.Закупки Тогда 
		ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеДокументовЗакупкиГИСМ");
	КонецЕсли;
	
	//Следует использовать совместно с правом доступа к Документ.РеализацияТоваровУслуг; Документ.ВозвратТоваровПостащику
	Если ОбластиДоступа.Отгрузки Тогда 
		ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеУведомленийОбОтгрузкеМаркированныхТоваровГИСМ");
	КонецЕсли;
	
	//Следует использовать совместно с правом доступа к Документ.ВозвратТоваровОтПокупателя; Документ.ПоступлениеТоваровУслуг
	Если ОбластиДоступа.Поступления Тогда 
		ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеУведомленийОПоступленииМаркированныхТоваровГИСМ");
	КонецЕсли;
	
	//Следует использовать совместно с правом доступа к Документ.СписаниеТоваров
	Если ОбластиДоступа.Списания Тогда 
		ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеУведомленийОСписанииКиЗГИСМ");
	КонецЕсли;
	
КонецПроцедуры

// Настраивает в профиле групп доступа роли, предоставляющие право просмотра данных подсистемы ИнтеграцияГИСМ.
// Описывает соответствующие роли подсистемы.
//
// Параметры:
//  ОписаниеПрофиля	 - см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа() - описание профиля
//  ОбластиДоступа   - см. НовыйОписаниеОбластейДоступа() - перечень прикладных областей, 
//                     в соответствии с которым пользователю будет предоставлен доступ к документам ГИСМ
//
Процедура РазрешитьПросмотрДанных(ОписаниеПрофиля, ОбластиДоступа) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваГИСМ");
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеОбработкиПанель1СМаркировка");
	
	//Следует использовать совместно с правом доступа к Документ.ПоступлениеТоваровУслуг
	Если ОбластиДоступа.Закупки Тогда 
		ОписаниеПрофиля.Роли.Добавить("ЧтениеДокументовЗакупкиГИСМ");
	КонецЕсли;
	
	//Следует использовать совместно с правом доступа к Документ.РеализацияТоваровУслуг; Документ.ВозвратТоваровПостащику
	Если ОбластиДоступа.Отгрузки Тогда 
		ОписаниеПрофиля.Роли.Добавить("ЧтениеУведомленийОбОтгрузкеМаркированныхТоваровГИСМ");
	КонецЕсли;	
	
	//Следует использовать совместно с правом доступа к Документ.ВозвратТоваровОтПокупателя; Документ.ПоступлениеТоваровУслуг
	Если ОбластиДоступа.Поступления Тогда 
		ОписаниеПрофиля.Роли.Добавить("ЧтениеУведомленийОПоступленииМаркированныхТоваровГИСМ");
	КонецЕсли;
	
	//Следует использовать совместно с правом доступа к Документ.СписаниеТоваров
	Если ОбластиДоступа.Списания Тогда 
		ОписаниеПрофиля.Роли.Добавить("ЧтениеУведомленийОСписанииКиЗГИСМ");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти