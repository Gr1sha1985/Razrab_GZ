#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытийДополнительногоПоказателя

Процедура ОбработкаНавигационнойСсылкиДополнительногоПоказателя(Форма, Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка) Экспорт
	
	Если НЕ СтрНачинаетсяС(НавигационнаяСсылкаФорматированнойСтроки, "ПолучателиОтчета:") Тогда
		Возврат;
	КонецЕсли;
		
	СтандартнаяОбработка = Ложь;
	
	СтрокаПолучателей = СтрЗаменить(НавигационнаяСсылкаФорматированнойСтроки, "ПолучателиОтчета:", "");
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ПолучателиОтчета", СтрРазделить(СтрокаПолучателей,
		УниверсальныйОбменСБанкамиФормыКлиентСервер.РазделительЭлементовСтроки(), Ложь));
	
	ОткрытьФорму("Документ.ЗаявкаНаКредит.Форма.ПолучателиОтчета", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийПоляПеречисления

Процедура НачалоВыбораПеречисления(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок", Элемент.Заголовок);
	ПараметрыФормы.Вставить("АдресХранилищаЗначений", Форма[УниверсальныйОбменСБанкамиФормыКлиентСервер.ИмяАдресаЗначений(Элемент.Имя)]);
	ПараметрыФормы.Вставить("ВыбранноеЗначение", Форма[Элемент.Имя]);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Элемент", Элемент);
	
	ОткрытьФорму(
		"ОбщаяФорма.ВыборЗначенияПеречисления",
		ПараметрыФормы,
		Форма,,,,
		Новый ОписаниеОповещения("Подключаемый_ВыборПеречисления", Форма, ДополнительныеПараметры)
	);
	
КонецПроцедуры

Процедура ВыборПеречисления(Форма, ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Элемент = ДополнительныеПараметры.Элемент;
	
	Форма[Элемент.Имя] = ВыбранноеЗначение.Идентификатор;
	Форма[УниверсальныйОбменСБанкамиФормыКлиентСервер.ИмяПредставления(Элемент.Имя)] = ВыбранноеЗначение.КраткоеПредставление;
	
	ОбновитьПереключательДополнительногоПоказателя(Элемент, Форма);
	
	Форма.Модифицированность = Истина;
	
КонецПроцедуры

Процедура АвтоПодборПеречисления(Форма, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка) Экспорт
	
	Если Ожидание = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Текст) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = ПолучитьДанныеВыбораДополнительногоПоказателя(Форма, Элемент, Текст);
	
КонецПроцедуры

Процедура ОкончаниеВводаТекстаПеречисления(Форма, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка) Экспорт
	
	Если ПустаяСтрока(Текст) Тогда
		Форма[Элемент.Имя] = Неопределено;
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = ПолучитьДанныеВыбораДополнительногоПоказателя(Форма, Элемент, Текст);
	
КонецПроцедуры

Процедура ОбработкаВыбораПеречисления(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Форма[Элемент.Имя] = ВыбранноеЗначение.Идентификатор;
	Форма[УниверсальныйОбменСБанкамиФормыКлиентСервер.ИмяПредставления(Элемент.Имя)] = ВыбранноеЗначение.КраткоеПредставление;
	
	ОбновитьПереключательДополнительногоПоказателя(Элемент, Форма);
	
	Форма.Модифицированность = Истина;
	
КонецПроцедуры

Процедура ОчисткаПеречисления(Форма, Элемент, СтандартнаяОбработка) Экспорт
	
	Форма[Элемент.Имя] = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийПереключателяДополнительногоПоказателя

Процедура ПриИзмененииПереключателяДополнительногоПоказателя(Элемент, Форма) Экспорт
	
	ИмяСвязанногоЭлемента = УниверсальныйОбменСБанкамиФормыКлиентСервер.ИмяСвязанногоЭлементаПереключателя(Элемент.Имя);
	
	СвязанныйЭлемент = Форма.Элементы[ИмяСвязанногоЭлемента];
	СвязанныйЭлемент.Видимость = Форма[Элемент.Имя];
	
КонецПроцедуры

Процедура ОбновитьПереключательДополнительногоПоказателя(Элемент, Форма) Экспорт
	
	ИмяПереключателя = УниверсальныйОбменСБанкамиФормыКлиентСервер.ИмяПереключателя(Элемент.Имя);
	
	Переключатель = Форма.Элементы.Найти(ИмяПереключателя);
	
	Если Переключатель = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма[Элемент.Имя]) Тогда
		Форма[Переключатель.Имя] = 1;
		Элемент.АвтоОтметкаНезаполненного = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДанныеВыбораДополнительногоПоказателя(Форма, Элемент, Текст)
	
	ДанныеВыбора = Новый СписокЗначений;
	
	АдресХранилищаЗначений = Форма[УниверсальныйОбменСБанкамиФормыКлиентСервер.ИмяАдресаЗначений(Элемент.Имя)];
	
	Для каждого Значение Из ПолучитьИзВременногоХранилища(АдресХранилищаЗначений) Цикл
		Если СтрНачинаетсяС(Нрег(Значение.КраткоеПредставление), Нрег(Текст)) Тогда
			ДанныеВыбора.Добавить(
				Значение,
				Новый ФорматированнаяСтрока(
					Новый ФорматированнаяСтрока(
						Лев(Значение.КраткоеПредставление, СтрДлина(Текст)),
						Новый Шрифт(,, Истина),
						Новый Цвет(0, 150, 70) // Цвет акцентирования.
					),
					Сред(Значение.КраткоеПредставление, СтрДлина(Текст) + 1)
				)
			);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДанныеВыбора;
	
КонецФункции

#КонецОбласти