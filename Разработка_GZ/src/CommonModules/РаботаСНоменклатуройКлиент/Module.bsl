////////////////////////////////////////////////////////////////////////////////
// Работа с номенклатурой.
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

#Область СозданиеНовыхОбъектовПриВводе

Процедура НоменклатураАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка) Экспорт
	
	Если НЕ ПустаяСтрока(Текст) 
		И (НЕ ЗначениеЗаполнено(Элемент.ОграничениеТипа)
		ИЛИ Элемент.ОграничениеТипа.СодержитТип(Тип("СправочникСсылка.Номенклатура"))) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСНоменклатуройВызовСервера.ДанныеВыбораНоменклатуры(ПараметрыПолученияДанных, Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура НоменклатураОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка) Экспорт
	
	Если НЕ ПустаяСтрока(Текст) 
		И (НЕ ЗначениеЗаполнено(Элемент.ОграничениеТипа)
		ИЛИ Элемент.ОграничениеТипа.СодержитТип(Тип("СправочникСсылка.Номенклатура"))) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСНоменклатуройВызовСервера.ДанныеВыбораНоменклатуры(ПараметрыПолученияДанных, Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура НоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ВидыНоменклатуры") Тогда
		
		ВыбранноеЗначение = СоздатьНоменклатуруПоВиду(Элемент, ВыбранноеЗначение);
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("Структура") И ВыбранноеЗначение.Свойство("ВидНоменклатуры") Тогда
		
		КодЕдиницыИзмерения = Неопределено;
		ВыбранноеЗначение.Свойство("КодЕдиницыИзмерения", КодЕдиницыИзмерения);
		ВыбранноеЗначение = СоздатьНоменклатуруПоВиду(Элемент, ВыбранноеЗначение.ВидНоменклатуры, КодЕдиницыИзмерения);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ЗначенияЗаполненияПоПараметрамВыбора(ПараметрыВыбора)
	
	ВременнаяСтруктура = Новый Структура;
	ДобавитьПараметрыВыбораВСтруктуру(ВременнаяСтруктура, ПараметрыВыбора);
	
	ЗначенияЗаполнения = Новый Структура;
	Для каждого КлючИЗначение Из ВременнаяСтруктура.Отбор Цикл
		ЗначенияЗаполнения.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	Возврат ЗначенияЗаполнения;
	
КонецФункции

Процедура ДобавитьПараметрыВыбораВСтруктуру(Структура, ПараметрыВыбора)
	
	Если НЕ Структура.Свойство("Отбор") Тогда
		Структура.Вставить("Отбор", Новый Структура);
	КонецЕсли;
	
	Для каждого ПараметрВыбора Из ПараметрыВыбора Цикл
		Если Найти(ПараметрВыбора.Имя, "Отбор.") <> 0 Тогда
			Структура.Отбор.Вставить(СтрЗаменить(ПараметрВыбора.Имя, "Отбор.", ""), ПараметрВыбора.Значение);
		ИначеЕсли Найти(ПараметрВыбора.Имя, ".") = 0 Тогда
			Структура.Вставить(ПараметрВыбора.Имя, ПараметрВыбора.Значение);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция СоздатьНоменклатуруПоВиду(Элемент, ВидНоменклатуры, КодЕдиницыИзмерения = Неопределено)
	
	Наименование = Элемент.ТекстРедактирования;
	
	ПараметрыСоздания = Новый Структура;
	ПараметрыСоздания.Вставить("ЗначенияЗаполнения", ЗначенияЗаполненияПоПараметрамВыбора(Элемент.ПараметрыВыбора));
	
	ДополнительныеПараметрыСоздания = Новый Структура;
	ДополнительныеПараметрыСоздания.Вставить("Наименование", Наименование);
	Если ЗначениеЗаполнено(КодЕдиницыИзмерения) Тогда
		ДополнительныеПараметрыСоздания.Вставить("КодЕдиницыИзмерения", КодЕдиницыИзмерения);
	КонецЕсли;
	ПараметрыСоздания.Вставить("ДополнительныеПараметрыСоздания", ДополнительныеПараметрыСоздания);
	
	Возврат РаботаСНоменклатуройВызовСервера.СоздатьНоменклатуруБыстро(ВидНоменклатуры, ПараметрыСоздания);
	
КонецФункции

#КонецОбласти

#Область ПериодичностьУслуг

// Процедура предлагает установить периодичность для номенклатуры
// 
// Параметры:
//    ТекущиеДанные - ДанныеФормыЭлементКоллекции - Строка в которой есть поля:
//                                                  Номенклатура
//                                                  Содержание
//    Дата - Дата - Дата для формирования нового содержания.
//
Процедура СодержаниеПриИзменении(ТекущиеДанные, Дата) Экспорт
	
	Если НЕ ТекущиеДанные.Свойство("Номенклатура") ИЛИ НЕ ТекущиеДанные.Свойство("Содержание")
		ИЛИ НЕ ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) ИЛИ НЕ ЗначениеЗаполнено(ТекущиеДанные.Содержание) Тогда
		Возврат;
	КонецЕсли;
	
	ПериодичностьУслуги = Неопределено;
	ТекстТекущегоМесяца = НРег(Формат(Дата, "Л=ru_RU; ДФ=MMMM"));
	ТекстТекущийКвартал = НРег(Формат(Дата, "Л=ru_RU; ДФ='к ""квартал""'"));
	
	Содержание = ТекущиеДанные.Содержание;
	Если СтрНайти(НРег(Содержание), ТекстТекущегоМесяца) Тогда
		ПериодичностьУслуги = ПредопределенноеЗначение("Перечисление.Периодичность.Месяц");
	ИначеЕсли СтрНайти(НРег(Содержание), ТекстТекущийКвартал) Тогда
		ПериодичностьУслуги = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал");
	КонецЕсли;
	
	// Не нашли в содержании услуг ключевые слова
	Если НЕ ЗначениеЗаполнено(ПериодичностьУслуги) Тогда
		Возврат;
	КонецЕсли;
	
	Номенклатура = ТекущиеДанные.Номенклатура;
	// Проверим, нужно ли предлагать включение периодичности.
	Если НЕ РаботаСНоменклатуройВызовСервера.ПредложитьВключитьПериодичностьУслуги(
		Номенклатура, Содержание, ПериодичностьУслуги, Дата) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыНоменклатуры = Новый Структура;
	ПараметрыНоменклатуры.Вставить("Номенклатура",        Номенклатура);
	ПараметрыНоменклатуры.Вставить("ПериодичностьУслуги", ПериодичностьУслуги);
	ПараметрыНоменклатуры.Вставить("Дата",                Дата);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТекущиеДанные", ТекущиеДанные);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СодержаниеПриИзмененииЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаПериодичностьОказанияУслуги",
		ПараметрыНоменклатуры,
		ЭтотОбъект,
		,
		,
		,
		ОписаниеОповещения);
	
КонецПроцедуры

Процедура СодержаниеПриИзмененииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ДополнительныеПараметры.ТекущиеДанные, Результат);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти