
#Область ПрограммныйИнтерфейс

#Область Локализация

// Выполняет переопределяемую команду
//
// Параметры:
//  Форма                   - ФормаКлиентскогоПриложения - форма, в которой расположена команда
//  Команда                 - КомандаФормы     - команда формы
//  ДополнительныеПараметры - Структура        - дополнительные параметры.
//
Процедура ВыполнитьПереопределяемуюКоманду(Форма, Команда, ДополнительныеПараметры) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Обрабатывает нажатие на гиперссылку со статусом обработки документа в ЕГАИС.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма документа, в которой произошло нажатие на гиперссылку,
//  НавигационнаяСсылкаФорматированнойСтроки - Строка - значение гиперссылки форматированной строки,
//  СтандартнаяОбработка - Булево - признак стандартной (системной) обработки события.
//
Процедура ОбработкаНавигационнойСсылки(Форма, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка) Экспорт
	
	Если НЕ ЭтоНавигационнаяСсылкаГИСМ(НавигационнаяСсылкаФорматированнойСтроки) Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаНавигационнойСсылкиГИСМ(Форма, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник, ДополнительныеПараметры) Экспорт
	
	Перем ТребуетсяОбработатьОбновлениеСтатуса;
	
	Если НЕ ЭтоНавигационнаяСсылкаГИСМ(ИмяСобытия) Тогда
		Возврат;
	КонецЕсли;
	
	СобытияФормГИСМКлиентПереопределяемый.ОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник, ДополнительныеПараметры);
	
	ИмяСобытияБезПрефикса = Сред(ИмяСобытия, СтрДлина("#ГИСМ#")+1);
	
	ПараметрыИнтеграции = Форма.ПараметрыИнтеграцииГосИС.Получить("ГИСМ.ДокументОснование");
	
	ИмяРеквизитаФормыОбъект = Форма.ПараметрыИнтеграцииГосИС.Получить("ГИСМ").ИмяРеквизитаФормыОбъект;
	Объект  = Форма[ИмяРеквизитаФормыОбъект];
	
	Если ПараметрыИнтеграции = Неопределено Тогда
		ТребуетсяОбработатьОбновлениеСтатуса = Ложь;
	ИначеЕсли НЕ ЗначениеЗаполнено(ПараметрыИнтеграции.ИмяРеквизитаФормы) Тогда
		ТребуетсяОбработатьОбновлениеСтатуса = Ложь;
	ИначеЕсли ИмяСобытияБезПрефикса = "#ГИСМ#ВыполненОбменГИСМ" Тогда
		ТребуетсяОбработатьОбновлениеСтатуса = (Параметр = Неопределено
			Или (ТипЗнч(Параметр) = Тип("Структура") И Параметр.ОбновлятьСтатусВФормахДокументов));
	ИначеЕсли ТипЗнч(Параметр) <> Тип("Структура") Тогда
		ТребуетсяОбработатьОбновлениеСтатуса = Параметр = Объект.Ссылка;
	ИначеЕсли (Параметр.Свойство("Основание") И Параметр.Основание = Объект.Ссылка) Тогда
		ТребуетсяОбработатьОбновлениеСтатуса = Истина;
	ИначеЕсли (Параметр.Свойство("Ссылка") И Параметр.Ссылка = Объект.Ссылка) Тогда
		ТребуетсяОбработатьОбновлениеСтатуса = Истина;
	ИначеЕсли НЕ Параметр.Свойство("Основание") И НЕ Параметр.Свойство("Ссылка") Тогда
		ТребуетсяОбработатьОбновлениеСтатуса = Истина;
	Иначе
		ТребуетсяОбработатьОбновлениеСтатуса = Ложь;
	КонецЕсли;
	
	Если ТребуетсяОбработатьОбновлениеСтатуса Тогда
		
		ТипНадписи   = "";
		ТекстНадписи = "";
		СобытияФормГИСМКлиентПереопределяемый.ПриОпределенииТипаНадписиПоФорме(Форма, ТипНадписи);
		Если ЗначениеЗаполнено(ТипНадписи) Тогда
			ТекстНадписи = ИнтеграцияГИСМВызовСервера.ТекстГиперссылкиВДокументеОсновании(Объект.Ссылка, ТипНадписи);
		КонецЕсли;
		Форма[ПараметрыИнтеграции.ИмяРеквизитаФормы] = ТекстНадписи;
		Форма.Элементы[ПараметрыИнтеграции.ИмяЭлементаФормы].Видимость = ЗначениеЗаполнено(ТекстНадписи);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписи(Форма, ПараметрыЗаписи) Экспорт
	
	СобытияФормГИСМКлиентПереопределяемый.ПослеЗаписи(Форма, ПараметрыЗаписи);
	
КонецПроцедуры

#Область СобытияЭлементовФорм

// Переопределяемая процедура, вызываемая из одноименного обработчика события элемента.
//
// Параметры:
//   Форма                   - ФормаКлиентскогоПриложения - форма, из которой происходит вызов процедуры.
//   Элемент                 - ЭлементФормы     - элемент-источник события "При изменении"
//   ДополнительныеПараметры - Структура        - значения дополнительных параметров влияющих на обработку.
//
Процедура ПриИзмененииЭлемента(Форма, Элемент, ДополнительныеПараметры) Экспорт
	
	СобытияФормГИСМКлиентПереопределяемый.ПриИзмененииЭлемента(Форма, Элемент, ДополнительныеПараметры);
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события элемента.
//
Процедура ПриВыбореЭлемента(Форма, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка, ДополнительныеПараметры = Неопределено) Экспорт
	
	СобытияФормГИСМКлиентПереопределяемый.ПриВыбореЭлемента(Форма, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка, ДополнительныеПараметры);
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события элемента.
//
Процедура ПриАктивизацииЯчейки(Форма, Элемент, ДополнительныеПараметры) Экспорт
	
	СобытияФормГИСМКлиентПереопределяемый.ПриАктивизацииЯчейки(Форма, Элемент, ДополнительныеПараметры);
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события элемента.
//
Процедура ПриНачалеРедактирования(Форма, Элемент, НоваяСтрока, Копирование, ДополнительныеПараметры) Экспорт
	
	СобытияФормГИСМКлиентПереопределяемый.ПриНачалеРедактирования(Форма, Элемент, НоваяСтрока, Копирование, ДополнительныеПараметры);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЭтоНавигационнаяСсылкаГИСМ(НавигационнаяСсылка)
	
	Возврат СтрНачинаетсяС(НавигационнаяСсылка, "#ГИСМ#");
	
КонецФункции

Процедура ОбработкаНавигационнойСсылкиГИСМ(Форма, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	НавигационнаяСсылкаБезПрефикса = Сред(НавигационнаяСсылкаФорматированнойСтроки, СтрДлина("#ГИСМ#")+1);
	
	ПараметрыИнтеграции = Форма.ПараметрыИнтеграцииГосИС.Получить("ГИСМ");
	Объект  = Форма[ПараметрыИнтеграции.ИмяРеквизитаФормыОбъект];
	
	Если НавигационнаяСсылкаБезПрефикса = "ОткрытьПротоколОбмена" Тогда
		
		ИнтеграцияГИСМКлиент.ОткрытьПротоколОбмена(Объект.Ссылка, Форма);
		
	ИначеЕсли НавигационнаяСсылкаБезПрефикса = "ПередатьДанные" Тогда
		
		ДействиеПередатьДанные = Новый ОписаниеОповещения(
			"ПодготовитьСообщениеКПередаче",
			ЭтотОбъект,
			Новый Структура("Форма", Форма));
		
		СобытияФормИСКлиент.ВыполнитьДействиеСЗаписьюОбъекта(Форма, Объект, ДействиеПередатьДанные);
		
	Иначе
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Основание", Объект.Ссылка);
		ОткрытьФорму(СтрШаблон("Документ.%1.Форма.ФормаДокумента", НавигационнаяСсылкаБезПрефикса), ПараметрыФормы, Форма);
		
	КонецЕсли;

КонецПроцедуры

Процедура ПодготовитьСообщениеКПередаче(Результат, ДополнительныеПараметры) Экспорт
	
	ИнтеграцияГИСМКлиент.ПодготовитьСообщениеКПередаче(
		ДополнительныеПараметры.Форма.Объект.Ссылка,
		ПредопределенноеЗначение("Перечисление.ОперацииОбменаГИСМ.ПередачаДанных"));
	
КонецПроцедуры

#КонецОбласти

