
#Область СлужебныйПрограммныйИнтерфейс

#Область Взаиморасчеты

// Функция создает ведомость в кассу из прошлого учета (для ввода начальных данных).
//
// Параметры:
//	ВидМестаВыплаты - перечисление ВидыМестВыплатыЗарплаты.
//	МестоВыплаты - ссылка на место выплаты (необязательно).
//	Организация - справочник-ссылка;
//	Номер	- номер ведомости, строка 11;
//	Дата	- дата документа, дата;
//	Период	- период регистрации, дата;
//	Зарплата- таблица значений вида:
//		Сотрудник						- СправочникСсылка.Сотрудники
//		КВыплате						- число 15.2
//		КомпенсацияЗаЗадержкуЗарплаты	- число 15.2.
//
//
// Возвращаемое значение:
//	ДокументОбъект.ВедомостьНаВыплатуЗарплатыВКассу
//
Функция НоваяВедомостьНаВыплатуЗарплаты(ВидМестаВыплаты, МестоВыплаты = Неопределено, Организация, Номер, Дата, Период, Зарплата = Неопределено) Экспорт
	
	Ведомость = Неопределено;
	
	Если ВидМестаВыплаты = Перечисления.ВидыМестВыплатыЗарплаты.Касса Тогда
		Ведомость = Документы.ВедомостьНаВыплатуЗарплатыВКассу.СоздатьДокумент();
	ИначеЕсли ВидМестаВыплаты = Перечисления.ВидыМестВыплатыЗарплаты.ЗарплатныйПроект Тогда
		Ведомость = Документы.ВедомостьНаВыплатуЗарплатыВБанк.СоздатьДокумент();
		Ведомость.ЗарплатныйПроект = ?(ЗначениеЗаполнено(МестоВыплаты) И ТипЗнч(МестоВыплаты) = Тип("СправочникСсылка.ЗарплатныеПроекты"), МестоВыплаты, Справочники.ЗарплатныеПроекты.ПустаяСсылка());
	КонецЕсли;	
	
	Если Ведомость <> Неопределено Тогда
		
		Ведомость.Организация		= Организация;
		Ведомость.Номер				= Номер;
		Ведомость.Дата				= Дата;
		Ведомость.ПериодРегистрации	= Период;
		
		Если Зарплата <> Неопределено Тогда
			Для Каждого СтрокаЗарплаты Из Зарплата Цикл
				СтрокаТЧ = Ведомость.Зарплата.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаЗарплаты) 
			КонецЦикла;	
		КонецЕсли;
		
		Ведомость.ВводНачальныхДанных = Истина;
		
	КонецЕсли;	

	Возврат Ведомость;
	
КонецФункции

#КонецОбласти

#КонецОбласти
