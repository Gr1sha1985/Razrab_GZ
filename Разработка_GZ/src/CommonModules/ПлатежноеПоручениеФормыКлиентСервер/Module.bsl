#Область ПлатежныеРеквизиты

Функция УстановитьНадписьРеквизитыПлательщика(Форма) Экспорт
	
	Объект = Форма.Объект;
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ПоказатьКПП   = Форма.АвтоЗначенияРеквизитов.ВсегдаУказыватьКПППлательщика ИЛИ НЕ ПустаяСтрока(Объект.КПППлательщика);
		ШаблонНадписи = НСтр("ru = 'ИНН %1%2%3, %4'");
		
		ИндивидуальныйПредприниматель =
			Форма.ОрганизацияЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо");
		КППНетребуется = НЕ ПоказатьКПП И ПустаяСтрока(Объект.КПППлательщика);
		ТекстКПП       = ?(ИндивидуальныйПредприниматель, "", НСтр("ru = ', КПП <не требуется>'"));
		ТекстНадписи   = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонНадписи,
			?(ПустаяСтрока(Объект.ИННПлательщика), НСтр("ru = '<не указан>'"), СокрЛП(Объект.ИННПлательщика)),
			?(КППНетребуется, "", НСтр("ru = ', КПП '")),
			?(КППНетребуется, ТекстКПП, СокрЛП(Объект.КПППлательщика)),
			СокрЛП(Объект.ТекстПлательщика));
	Иначе
		ТекстНадписи = "";
	КонецЕсли;
	
	Возврат ТекстНадписи;
	
КонецФункции

Функция УстановитьНадписьРеквизитыПолучателя(Форма) Экспорт
	
	Объект = Форма.Объект;
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		ПоказатьКПП    = Форма.АвтоЗначенияРеквизитов.ВсегдаУказыватьКПППолучателя ИЛИ НЕ ПустаяСтрока(Объект.КПППолучателя);
		ШаблонНадписи  = НСтр("ru = 'ИНН %1%2%3, %4'");
		
		ФизЛицо = Форма.КонтрагентЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо");
		КППНетребуется = НЕ ПоказатьКПП И ПустаяСтрока(Объект.КПППолучателя);
		ТекстКПП       = ?(ФизЛицо, "", НСтр("ru = ', КПП <не требуется>'"));
		ТекстНадписи   = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонНадписи,
			?(ПустаяСтрока(Объект.ИННПолучателя), НСтр("ru = '<не указан>'"), СокрЛП(Объект.ИННПолучателя)),
			?(КППНетребуется, "", НСтр("ru = ', КПП '")),
			?(КППНетребуется, ТекстКПП, СокрЛП(Объект.КПППолучателя)),
			СокрЛП(Объект.ТекстПолучателя));
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПереводНаДругойСчет") Тогда
		ТекстНадписи = УстановитьНадписьРеквизитыПлательщика(Форма);
	Иначе
		ТекстНадписи = "";
	КонецЕсли;
	
	Возврат ТекстНадписи;
	
КонецФункции

Функция НадписьРеквизитыПлатежейВБюджет(Форма) Экспорт
	
	Объект = Форма.Объект;
	
	Если НЕ Объект.ПеречислениеВБюджет Тогда
		Возврат НСтр("ru = '<КБК> и <ОКТМО> не требуются'");
	КонецЕсли;
	
	Возврат ПлатежиВБюджетКлиентСерверПереопределяемый.НадписьРеквизитыПлатежейВБюджет(Объект);
	
КонецФункции

Процедура СброситьПризнакПлатежаВБюджет(Форма) Экспорт
	
	Объект = Форма.Объект;
	
	Если НЕ ПустаяСтрока(Объект.СтатусСоставителя) Тогда
		Объект.СтатусСоставителя = "";
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьОчередностьПлатежаПо345ФЗДляПеречисленияВБюджет(Форма) Экспорт
	
	Объект = Форма.Объект;
	
	РеквизитыДокумента           = ПлатежиВБюджетКлиентСерверПереопределяемый.РеквизитыДокумента_ПлатежноеПоручение();
	ИмяРеквизитаОснованиеПлатежа = РеквизитыДокумента["ОснованиеПлатежа"];
	КодОснованияПлатежа          = Объект[ИмяРеквизитаОснованиеПлатежа];
	
	Если ПлатежиВБюджетКлиентСервер.ЭтоПлатежПоИсполнительномуЛисту(Объект.СтатусСоставителя, КодОснованияПлатежа) Тогда
		
		Если Объект.ОчередностьПлатежа > УчетДенежныхСредствКлиентСервер.ОчередностьПлатежаПоИсполнительномуЛисту() Тогда
			Объект.ОчередностьПлатежа = УчетДенежныхСредствКлиентСервер.ОчередностьПлатежаПоИсполнительномуЛисту();
		КонецЕсли;
		
	Иначе // Не по исполнительному листу
		
		Если Объект.ОчередностьПлатежа < УчетДенежныхСредствКлиентСервер.ОчередностьПлатежаНалогиВзносы() Тогда
			Объект.ОчередностьПлатежа = УчетДенежныхСредствКлиентСервер.ОчередностьПлатежаНалогиВзносы();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция РеквизитыОбъектаДляФормированияНазначенияПлатежа(Форма) Экспорт
	
	Объект = Форма.Объект;
	
	РеквизитыОбъекта = Новый Структура("КодБК, Налог, ВидНалоговогоОбязательства, Организация, Дата, ПоказательПериода");
	ЗаполнитьЗначенияСвойств(РеквизитыОбъекта, Объект);
	
	РеквизитыОбъекта.Вставить("ШаблонНазначенияПлатежаВБюджет", СокрЛП(Форма.ШаблонНазначенияПлатежаВБюджет));
	
	Возврат РеквизитыОбъекта;
	
КонецФункции

Функция КодВидаДоходаПоУмолчанию(Форма) Экспорт
	
	Объект = Форма.Объект;
	
	КодВидаДохода = "";
	Если Не ВозможноВзысканиеСПеречисленияФизлицу(Объект.Дата, Объект.ВидОперации, Форма.КонтрагентЮрФизЛицо) Тогда
		Возврат КодВидаДохода;
	КонецЕсли;
	
	ЭтоПеречислениеПодотчет =
		Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеПодотчетномуЛицу");
	
	Если УчетДенежныхСредствКлиентСервер.ПеречислениеЗарплаты(Объект.ВидОперации)
		И Форма.ПеречислениеНаЛичныйСчет Тогда
		КодВидаДохода = "1";
	ИначеЕсли ЭтоПеречислениеПодотчет Тогда
		КодВидаДохода = "2";
	КонецЕсли;
	
	Возврат КодВидаДохода;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура НастроитьСписокВыбораКодВидаДохода(СписокВыбора, ВидОперации, ПеречислениеНаЛичныйСчет) Экспорт
	
	СписокВыбора.Очистить();
	
	ПеречислениеСотруднику = ЭтоПеречислениеСотруднику(ВидОперации);
	
	ПрочиеВыплатыКонтрагентам = ЭтоПрочиеВыплатыКонтрагентам(ВидОперации);
	
	ПеречислениеПодотчетномуЛицу =
		ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеПодотчетномуЛицу");
	
	ВыплатаВБанкПоВедомости =
		ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеЗП");
	
	Если ПрочиеВыплатыКонтрагентам Или ПеречислениеПодотчетномуЛицу Тогда
		СписокВыбора.Добавить("", НСтр("ru = 'разрешено, без ограничения по сумме'"));
	ИначеЕсли ВыплатаВБанкПоВедомости
		Или ПеречислениеСотруднику И Не ПеречислениеНаЛичныйСчет Тогда
		СписокВыбора.Добавить("", НСтр("ru = '(указывается в реестре)'"));
	КонецЕсли;
	
	СписокВыбора.Добавить("1",
		НСтр("ru = '1 - разрешено, с ограничением по сумме'"));
	СписокВыбора.Добавить("2",
		НСтр("ru = '2 - запрещено (без оговорок)'"));
	СписокВыбора.Добавить("3",
		НСтр("ru = '3 - запрещено (с оговорками для алиментов)'"));
	
КонецПроцедуры

Функция ВозможноВзысканиеСПеречисленияФизлицу(Дата, ВидОперации, КонтрагентЮрФизЛицо) Экспорт
	
	Результат = Ложь;
	Если Не УчетДенежныхСредствКлиентСервер.ДействуетУказаниеБанкаРоссии5286У(Дата) Тогда
		Возврат Результат;
	КонецЕсли;
	
	ПрочиеВыплатыКонтрагентам = ЭтоПрочиеВыплатыКонтрагентам(ВидОперации);
	
	ПеречислениеСотруднику = ЭтоПеречислениеСотруднику(ВидОперации);
	
	ВыплатаВБанкПоВедомости =
		ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеЗП");
	
	ПеречислениеПодотчетномуЛицу =
		ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеПодотчетномуЛицу");
	
	КонтрагентФизическоеЛицо =
		КонтрагентЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо");
	
	Результат = ПеречислениеСотруднику
		Или ВыплатаВБанкПоВедомости
		Или ПрочиеВыплатыКонтрагентам И КонтрагентФизическоеЛицо
		Или ПеречислениеПодотчетномуЛицу;
	
	Возврат Результат;
	
КонецФункции

Функция ЭтоПрочиеВыплатыКонтрагентам(ВидОперации) Экспорт
	
	ПрочиеВыплатыКонтрагентам = ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеДивидендов")
		Или ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ВозвратЗайма")
		Или ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПрочиеРасчетыСКонтрагентами")
		Или ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПрочееСписание");
	
	Возврат ПрочиеВыплатыКонтрагентам;
	
КонецФункции

Функция ЭтоПеречислениеСотруднику(ВидОперации) Экспорт
	
	ПеречислениеСотруднику =
		ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеСотрудникуПоДоговоруПодряда")
		Или ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеЗаработнойПлатыРаботнику")
		Или ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеДепонентов");
	
	Возврат ПеречислениеСотруднику;
	
КонецФункции

#КонецОбласти
