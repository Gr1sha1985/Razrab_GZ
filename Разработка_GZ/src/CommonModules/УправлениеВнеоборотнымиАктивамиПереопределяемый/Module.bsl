////////////////////////////////////////////////////////////////////////////////
// ОТРАЖЕНИЕ АМОРТИЗАЦИИ ОС И НМА

// Процедура ВыполнитьДополнительныеДействияНачислениеАмортизации выполняет 
// отражение начисленной амортизации по ОС и НМА в дополнительных объектах 
// конфигурации. Процедура вызывается из 
// УправлениеВнеоборотнымиАктивами.СформироватьДвиженияНачислениеАмортизации() при 
// проведении документов:
//      - ПередачаНМА
//      - ПередачаОС
//      - ПередачаОС
//      - ПеремещениеОС
//		- ПодготовкаКПередачеОС
//		- ПринятиеКУчетуОС (при включении в расходы НУ стоимости объекта ОС)
//		- РегламентнаяОперация (с видом операции "АмортизацияИИзносОС")
//		- РегламентнаяОперация (с видом операции "АмортизацияНМАИсписаниеРасходовПоНИОКР")
// При добавлении новых регистров необходимо для них назначать в качестве регистраторов указанные 
// документы.
//
// 
// Параметры:
//  ТаблицаЗатрат - таблица значений. Колонки таблицы, формируемые по умолчанию, описаны ниже.
//						Дополнительные данные могут быть добавлены в таблицу при переопределении
//						процедуры ПодготовитьТаблицуРаспределениеАмортизацииПоНаправлениямРегл() этого модуля.
//		ОбъектУчета			- СправочникСсылка.ОсновныеСредства, СправочникСсылка.НематериальныеАктивы;
//		Подразделение 		- Ссылка на справочник подразделений, подразделение счета учета ОС и НМА;
//		ПодразделениеЗатрат	- Ссылка на справочник подразделений, подразделение, на которое
//								относятся затраты по амортизации (ПодразделениеДт);
//		Субконто1			- Значение 1-ого субконто счета затрат (счет Дт);
//		Субконто2			- Значение 2-ого субконто счета затрат (счет Дт);
//		Субконто3			- Значение 3-ого субконто счета затрат (счет Дт);
//		СуммаБУ				- Число, сумма начисленной амортизации по БУ;
//		СчетАмортизации		- ПланСчетовСсылка.Хозрасчетный, счет начисленной амортизации (Счет Кт проводки),
//								например, 02.01;
//		СчетЗатрат			- ПланСчетовСсылка.Хозрасчетный, счет отнесения затрат по амортизации, например, 20.
//		
//  ТаблицаРеквизиты - таблица значений с реквизитами из шапки документа, состав граф 
//						таблицы не переопределяется:
//		Организация			- СправочникСсылка.Организации;
//		Период				- Дата проведения;
//		Регистратор			- Ссылка на документ - регистратор.
//
//  Движения - коллекция наборов записей регистров.
//  Отказ - Булево, признак отказа от проведения.
//
Процедура ВыполнитьДополнительныеДействияНачислениеАмортизации(ТаблицаЗатрат, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	// РегламентированныйУчетОСиНМА
	
	// Учет доходов и расходов ИП
	ТаблицаНачисленияАмортизацииИП	= УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуНачисленияАмортизацииОС(
		ТаблицаЗатрат,
		ТаблицаРеквизиты, Отказ);
		
	ТаблицаНачисленияАмортизацииНМАИП	= УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуНачисленияАмортизацииНМА(
		ТаблицаЗатрат,
		ТаблицаРеквизиты, Отказ);
		
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаНачисленияАмортизацииНМАИП, ТаблицаНачисленияАмортизацииИП);
		
	ТаблицаРаспределенияАмортизацииИП = ПодготовитьТаблицуРаспределениеАмортизацииПоНаправлениямРегл(
		ТаблицаНачисленияАмортизацииИП,
		ТаблицаРеквизиты, Отказ);
	
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияНачислениеАмортизации(
		ТаблицаРаспределенияАмортизацииИП,
		ТаблицаРеквизиты, Движения, Отказ);
		
	// Конец РегламентированныйУчетОСиНМА

КонецПроцедуры

// РАСПРЕДЕЛЕНИЕ АМОРТИЗАЦИИ ПО НАПРАВЛЕНИЯМ ЗАТРАТ

// Функция ПодготовитьТаблицуРаспределениеАмортизацииПоНаправлениямРегл возвращает таблицу затрат
// по амортизации.
//
//
// Параметры:
//  ТаблицаАмортизации - таблица значений с рассчитанной амортизацией со следующими колонками:
//		НаправлениеАмортизации - СправочникСсылка.СпособыОтраженияРасходовПоАмортизации
//		НомерСтроки - Число
//		ОбъектУчета	- СправочникСсылка.ОсновныеСредства, СправочникСсылка.НематериальныеАктивы
//		Подразделение - Ссылка на справочник подразделений
//		СуммаАмортизацииБУ - Число
//		СуммаАмортизацииВР - Число
//		СуммаАмортизацииНУ - Число
//		СуммаАмортизацииПР - Число
//		СуммаКапитальныхВложенийВключаемыхВРасходы - Число
//		СчетНачисленияАмортизации - ПланСчетовСсылка.Хозрасчетный
//		СчетУчета - ПланСчетовСсылка.Хозрасчетный
//
//	ТаблицаРеквизитов - таблица значений с данными из шапки документа - регистратора
//		Организация	- СправочникСсылка.Организации
//		Период - Дата
//		Регистратор	- документ регламентной операции
//
// Возвращаемое значение:
//  Таблица значений с данными по распределению амортизации по направлениям.
//	В таблице обязательно должны содержаться колонки, определенные по тексту функции для 
//	переменной ТаблицаЗатрат, возможно добавление дополнительных колонок для последующего 
//	использования в процедуре ВыполнитьДополнительныеДействияНачислениеАмортизации(). 
//
Функция ПодготовитьТаблицуРаспределениеАмортизацииПоНаправлениямРегл(ТаблицаАмортизации, ТаблицаРеквизиты, Отказ) Экспорт

	ДокументОбъект = Неопределено;
	
	Если НЕ ТаблицаАмортизации = Неопределено Тогда
		Если ТаблицаАмортизации.Колонки.Найти("РасчетныйДокумент") = Неопределено Тогда
			ТаблицаАмортизации.Колонки.Добавить("РасчетныйДокумент", Документы.ТипВсеСсылки());
		КонецЕсли;
		Если ТаблицаАмортизации.Колонки.Найти("ДокументОплаты") = Неопределено Тогда
			ТаблицаАмортизации.Колонки.Добавить("ДокументОплаты", Документы.ТипВсеСсылки());
		КонецЕсли;
		Если ТаблицаАмортизации.Колонки.Найти("СпособПоступления") = Неопределено Тогда
			ТаблицаАмортизации.Колонки.Добавить("СпособПоступления", Новый ОписаниеТипов("ПеречислениеСсылка.СпособыПоступленияАктивов"));
		КонецЕсли;
		Если ТаблицаАмортизации.Колонки.Найти("Контрагент") = Неопределено Тогда
			ТаблицаАмортизации.Колонки.Добавить("Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		КонецЕсли;
		Если ТаблицаАмортизации.Колонки.Найти("ДоговорКонтрагента") = Неопределено Тогда
			ТаблицаАмортизации.Колонки.Добавить("ДоговорКонтрагента", Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов"));
		КонецЕсли;
	КонецЕсли;

	Параметры = ПодготовитьПараметрыРаспределениеАмортизацииПоНаправлениямРегл(ТаблицаАмортизации, ТаблицаРеквизиты);

	Реквизиты = Параметры.Реквизиты[0];

	// определим структуру выходной таблицы
	ТаблицаЗатрат = Новый ТаблицаЗначений;
	ТаблицаЗатрат.Колонки.Добавить("СуммаБУ",				ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаЗатрат.Колонки.Добавить("СуммаНУ",				ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаЗатрат.Колонки.Добавить("СуммаВР",				ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаЗатрат.Колонки.Добавить("СуммаПР",				ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаЗатрат.Колонки.Добавить("СуммаМЦПР",				ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаЗатрат.Колонки.Добавить("СуммаМЦВР",				ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаЗатрат.Колонки.Добавить("СчетЗатрат",			Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаЗатрат.Колонки.Добавить("СчетАмортизации",		Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаЗатрат.Колонки.Добавить("ОбъектУчета",			Справочники.ТипВсеСсылки());
	ТаблицаЗатрат.Колонки.Добавить("Субконто1",				Метаданные.ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Тип);
	ТаблицаЗатрат.Колонки.Добавить("Субконто2",				Метаданные.ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Тип);
	ТаблицаЗатрат.Колонки.Добавить("Субконто3",				Метаданные.ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Тип);
	ТаблицаЗатрат.Колонки.Добавить("РасчетныйДокумент",		Документы.ТипВсеСсылки());
	ТаблицаЗатрат.Колонки.Добавить("ДокументОплаты",		Документы.ТипВсеСсылки());
	ТаблицаЗатрат.Колонки.Добавить("Подразделение",			БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
	ТаблицаЗатрат.Колонки.Добавить("ПодразделениеЗатрат",	БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
	ТаблицаЗатрат.Колонки.Добавить("СпособПоступления",		Новый ОписаниеТипов("ПеречислениеСсылка.СпособыПоступленияАктивов"));
	ТаблицаЗатрат.Колонки.Добавить("Контрагент",			Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаЗатрат.Колонки.Добавить("ДоговорКонтрагента",	Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов"));

	// РегламентированныйУчетОСиНМА

	ТаблицаСпособов = Параметры.ТаблицаАмортизации.Скопировать(, "НаправлениеАмортизации");
	ТаблицаСпособов.Свернуть("НаправлениеАмортизации");
	
	// Проверим корректность настроек отражения в учете
	Справочники.СпособыОтраженияРасходовПоАмортизации.ПроверитьПриВыполненииРегламентнойОперации(
		Реквизиты.Регистратор, 
		Отказ, 
		ТаблицаСпособов.ВыгрузитьКолонку("НаправлениеАмортизации"));
	
	// Заранее считаем информацию о способах отражения расходов
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпособыОтраженияРасходов.НаправлениеАмортизации КАК Способы
	|ПОМЕСТИТЬ СпособыОтраженияРасходов
	|ИЗ
	|	&Способы КАК СпособыОтраженияРасходов
	|ГДЕ
	|	СпособыОтраженияРасходов.НаправлениеАмортизации <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияРасходовПоАмортизации.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Способы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпособыОтраженияРасходов.Способы КАК Ссылка,
	|	Направления.НомерСтроки КАК НомерСтроки,
	|	Направления.СчетЗатрат,
	|	Направления.ПодразделениеОрганизации КАК Подразделение,
	|	Направления.Субконто1,
	|	Направления.Субконто2,
	|	Направления.Субконто3,
	|	Направления.Коэффициент
	|ИЗ
	|	СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК Направления
	|		ПО СпособыОтраженияРасходов.Способы = Направления.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	Запрос.УстановитьПараметр("Способы", ТаблицаСпособов);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();

	ПараметрыСпособов = Новый Соответствие;

	ТекущийСпособ = Неопределено;
	Пока Выборка.Следующий() Цикл
		Если Выборка.Ссылка <> ТекущийСпособ Тогда
			ТекущийСпособ = Выборка.Ссылка;

			ПараметрыСпособа = Новый Структура;

			Коэффициенты = Новый Массив;

			ПараметрыСпособа.Вставить("Коэффициенты", Коэффициенты);

			ТаблицаНаправлений = Новый ТаблицаЗначений;
			ТаблицаНаправлений.Колонки.Добавить("НомерСтроки");
			ТаблицаНаправлений.Колонки.Добавить("СчетЗатрат");
			ТаблицаНаправлений.Колонки.Добавить("Подразделение");
			ТаблицаНаправлений.Колонки.Добавить("Субконто1");
			ТаблицаНаправлений.Колонки.Добавить("Субконто2");
			ТаблицаНаправлений.Колонки.Добавить("Субконто3");
			ТаблицаНаправлений.Колонки.Добавить("Коэффициент", ОбщегоНазначения.ОписаниеТипаЧисло(6, 3));

			ПараметрыСпособа.Вставить("Направления", ТаблицаНаправлений);

			ПараметрыСпособов.Вставить(ТекущийСпособ, ПараметрыСпособа);
		КонецЕсли;

		Если Выборка.НомерСтроки = Null Тогда
			Продолжить;
		КонецЕсли;

		СтрокаНаправления = ТаблицаНаправлений.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаНаправления, Выборка);

		Если Выборка.Коэффициент > 0 Тогда
			Коэффициенты.Добавить(Выборка.Коэффициент);
		КонецЕсли;
	КонецЦикла;

	// Проверим корректность заполнения коэффициентов
	Для каждого КлючИЗначение Из ПараметрыСпособов Цикл
		ПараметрыСпособа = КлючИЗначение.Значение;

		Если ПараметрыСпособа.Направления.Количество() = 0 Тогда
			ШаблонСообщения = НСтр("ru = 'В способах отражения расходов по амортизации ""%1"" отсутствуют записи отнесения затрат.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, КлючИЗначение.Ключ);

			БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстСообщения, КлючИЗначение.Ключ, Отказ, Реквизиты.Регистратор);
			Продолжить;
		КонецЕсли;

		Если ПараметрыСпособа.Коэффициенты.Количество() = 0 Тогда
			ШаблонСообщения = НСтр("ru = 'В способах отражения расходов по амортизации ""%1"" не проставлены коэффициенты.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, КлючИЗначение.Ключ);

			БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстСообщения, КлючИЗначение.Ключ, Отказ, Реквизиты.Регистратор);
			Продолжить;
		КонецЕсли;

		Если ПараметрыСпособа.Коэффициенты.Количество() < ПараметрыСпособа.Направления.Количество() Тогда
			ШаблонСообщения = НСтр("ru = 'В способах отражения расходов по амортизации ""%1"" есть нулевые коэффициенты.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, КлючИЗначение.Ключ);

			БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстСообщения, КлючИЗначение.Ключ, Отказ, Реквизиты.Регистратор);
		КонецЕсли;
	КонецЦикла;

	Если Отказ Тогда
		Возврат ТаблицаЗатрат;
	КонецЕсли;

	// цикл по Объектам из ТаблицаАмортизации
	Для каждого СтрокаТЗ Из ТаблицаАмортизации Цикл

		Если СтрокаТЗ.СуммаАмортизацииБУ = 0
			И СтрокаТЗ.СуммаАмортизацииНУ = 0
			И СтрокаТЗ.СуммаАмортизацииПР = 0
			И СтрокаТЗ.СуммаАмортизацииВР = 0 Тогда
			//Распределять амортизацию не надо, так как распределять нечего.
			Продолжить;
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(СтрокаТЗ.НаправлениеАмортизации) Тогда
			ШаблонСообщения = НСтр("ru = 'Не указаны способы отражения расходов по амортизации для объекта ""%1"".
				|Укажите эти данные в документах принятия к учету и изменения параметров начисления амортизации.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, СтрокаТЗ.ОбъектУчета);
			Если НЕ ПустаяСтрока(Реквизиты.ИмяСписка) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
					+ Формат(СтрокаТЗ.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство", "Объект", Отказ);
			Иначе
				Если ТипЗнч(СтрокаТЗ.ОбъектУчета) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
					СсылкаДляПерехода = БухгалтерскийУчетКлиентСерверПереопределяемый.ПолучитьНавигационнуюСсылкуНаЖурналДокументыПоОС();
				ИначеЕсли ТипЗнч(СтрокаТЗ.ОбъектУчета) = Тип("СправочникСсылка.НематериальныеАктивы") Тогда
					СсылкаДляПерехода = БухгалтерскийУчетКлиентСерверПереопределяемый.ПолучитьНавигационнуюСсылкуНаЖурналДокументыПоНМА();
				Иначе
					СсылкаДляПерехода = Неопределено;	
				КонецЕсли;
				
				БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстСообщения, СсылкаДляПерехода, Отказ,
					Реквизиты.Регистратор);
			КонецЕсли;
			Продолжить;
		КонецЕсли;

		ПараметрыСпособа = ПараметрыСпособов[СтрокаТЗ.НаправлениеАмортизации];
		Коэффициенты = ПараметрыСпособа.Коэффициенты;
		Направления = ПараметрыСпособа.Направления;

		Если Направления.Количество() = 1 Тогда  // амортизация идет на один счет.

			СтрокаНапр = Направления[0];

			НоваяСтрока = ТаблицаЗатрат.Добавить();
			НоваяСтрока.СчетЗатрат               = СтрокаНапр.СчетЗатрат;
			НоваяСтрока.ОбъектУчета              = СтрокаТЗ.ОбъектУчета;
			НоваяСтрока.СчетАмортизации          = СтрокаТЗ.СчетНачисленияАмортизации;
			НоваяСтрока.Субконто1                = СтрокаНапр.Субконто1;
			НоваяСтрока.Субконто2                = СтрокаНапр.Субконто2;
			НоваяСтрока.Субконто3                = СтрокаНапр.Субконто3;
			НоваяСтрока.СуммаБУ                  = СтрокаТЗ.СуммаАмортизацииБУ;
			НоваяСтрока.Подразделение = СтрокаТЗ.Подразделение;
			НоваяСтрока.ПодразделениеЗатрат      = СтрокаНапр.Подразделение;
			НоваяСтрока.СуммаНУ                  = СтрокаТЗ.СуммаАмортизацииНУ;
			НоваяСтрока.СуммаВР                  = СтрокаТЗ.СуммаАмортизацииВР;
			НоваяСтрока.СуммаПР                  = СтрокаТЗ.СуммаАмортизацииПР;
			НоваяСтрока.РасчетныйДокумент        = СтрокаТЗ.РасчетныйДокумент;
			НоваяСтрока.ДокументОплаты           = СтрокаТЗ.ДокументОплаты;
			НоваяСтрока.СпособПоступления        = СтрокаТЗ.СпособПоступления;
			НоваяСтрока.Контрагент			     = СтрокаТЗ.Контрагент;
			НоваяСтрока.ДоговорКонтрагента	     = СтрокаТЗ.ДоговорКонтрагента;
			
		Иначе // амортизация распределяется по весовым коэффициентам.

			МассивСумм = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СтрокаТЗ.СуммаАмортизацииБУ, Коэффициенты, 2);
			МассивСуммНУ = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СтрокаТЗ.СуммаАмортизацииНУ, Коэффициенты, 2);
			Если СтрокаТЗ.СуммаАмортизацииВР <> 0 Тогда
				МассивСуммПР = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СтрокаТЗ.СуммаАмортизацииПР, Коэффициенты, 2);
			КонецЕсли;

			Для каждого СтрокаНапр Из Направления Цикл
				
				НоваяСтрока = ТаблицаЗатрат.Добавить();
				НоваяСтрока.СчетЗатрат               = СтрокаНапр.СчетЗатрат;
				НоваяСтрока.ОбъектУчета              = СтрокаТЗ.ОбъектУчета;
				НоваяСтрока.СчетАмортизации          = СтрокаТЗ.СчетНачисленияАмортизации;
				НоваяСтрока.Субконто1                = СтрокаНапр.Субконто1;
				НоваяСтрока.Субконто2                = СтрокаНапр.Субконто2;
				НоваяСтрока.Субконто3                = СтрокаНапр.Субконто3;
				НоваяСтрока.СуммаБУ                  = ?(ЗначениеЗаполнено(МассивСумм), МассивСумм[СтрокаНапр.НомерСтроки - 1], 0);
				НоваяСтрока.Подразделение = СтрокаТЗ.Подразделение;
				НоваяСтрока.ПодразделениеЗатрат      = СтрокаНапр.Подразделение;
				НоваяСтрока.СуммаНУ                  = ?(ЗначениеЗаполнено(МассивСуммНУ), МассивСуммНУ[СтрокаНапр.НомерСтроки - 1], 0);
				НоваяСтрока.РасчетныйДокумент        = СтрокаТЗ.РасчетныйДокумент;
				НоваяСтрока.ДокументОплаты           = СтрокаТЗ.ДокументОплаты;
				НоваяСтрока.СпособПоступления        = СтрокаТЗ.СпособПоступления;
				НоваяСтрока.Контрагент			     = СтрокаТЗ.Контрагент;
				НоваяСтрока.ДоговорКонтрагента	     = СтрокаТЗ.ДоговорКонтрагента;

				Если СтрокаТЗ.СуммаАмортизацииВР = 0 Тогда
					Если СтрокаТЗ.СуммаАмортизацииПР <> 0 Тогда
						НоваяСтрока.СуммаПР = НоваяСтрока.СуммаБУ - НоваяСтрока.СуммаНУ;
					Иначе
						НоваяСтрока.СуммаПР = 0;
					КонецЕсли;
					
					НоваяСтрока.СуммаВР = 0;
				Иначе
					НоваяСтрока.СуммаПР = ?(ЗначениеЗаполнено(МассивСуммПР), МассивСуммПР[СтрокаНапр.НомерСтроки - 1], 0);
					НоваяСтрока.СуммаВР = НоваяСтрока.СуммаБУ - НоваяСтрока.СуммаНУ - НоваяСтрока.СуммаПР;
				КонецЕсли;
				
			КонецЦикла;

		КонецЕсли;

	КонецЦикла;

	// Конец РегламентированныйУчетОСиНМА

	Возврат ТаблицаЗатрат;

КонецФункции

Функция ПодготовитьПараметрыРаспределениеАмортизацииПоНаправлениямРегл(ТаблицаАмортизации, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаАмортизации

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"               // <Число, 5, 0>
	+ "НаправлениеАмортизации,"    // <СправочникСсылка.СпособыОтраженияРасходовПоАмортизации> - способ отражения
		// расходов по амортизации ОС
	+ "ОбъектУчета,"               // <СправочникСсылка.ОсновныеСредства>
	+ "Подразделение,"             // <Ссылка на справочник подразделений>
	+ "СуммаАмортизацииБУ,"        // <Число, 15, 2> - сумма амортизации по данным бухгалтерского учета
	+ "СуммаАмортизацииНУ,"        // <Число, 15, 2> - сумма амортизации по данным налогового учета
	+ "СуммаАмортизацииПР,"        // <Число, 15, 2> - постоянные разницы в оценке амортизации (ПБУ 18/02)
	+ "СуммаАмортизацииВР,"        // <Число, 15, 2> - временные разницы в оценке амортизации (ПБУ 18/02)
	+ "СчетНачисленияАмортизации," // <ПланСчетовСсылка.Хозрасчетный> - счет начисления амортизации ОС
	+ "РасчетныйДокумент,"         // <ДокументСсылка.*>
	+ "ДокументОплаты,"            // <ДокументСсылка.*>
	+ "СпособПоступления,"         // <ПеречислениеСсылка.СпособыПоступленияАктивов>
	+ "Контрагент,"        	   	   // <СправочникСсылка.Контрагенты>
	+ "ДоговорКонтрагента";        // <СправочникСсылка.ДоговорыКонтрагентов>
	
	Параметры.Вставить("ТаблицаАмортизации",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаАмортизации, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "ИмяСписка,"   // <Строка, 0>
	+ "Организация," // <СправочникСсылка.Организации>
	+ "Регистратор"; // <ДокументСсылка.*>

	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции


////////////////////////////////////////////////////////////////////////////////
// АМОРТИЗАЦИОННАЯ ПРЕМИЯ
 
// Процедура ВыполнитьДополнительныеДействияНачислениеАмортизационнойПремии
// вызывается из УчетОС.СформироватьДвиженияНачислениеАмортизационнойПремии() 
// после формирования проводок в регламентированном учете для отражения
// затрат НУ, связанных с амортизационной премией, в дополнительных регистрах.
// Получает те же параметры, что и УчетОС.СформироватьДвиженияНачислениеАмортизационнойПремии().
// 
// 
// Параметры:
//  ТаблицаНачисленияАмортизационнойПремии - таблица значений с графами:
//		ДокументАмортизационнойПремии 	- документ, которым была отражена амортизационная премия (Дт КВ)
//		ОсновноеСредство				- объект ОС
//		Подразделение					- подразделение, на котором отражена амортизационная премия на счете КВ
//		ПодразделениеПоАмортизационнойПремии - подразделение, по которому отражены расходы по амортизационной премии (Счет Дт)
//		СубконтоПоАмортизационнойПремии1 - значение 1-го субконто счета Дт
//		СубконтоПоАмортизационнойПремии2 - значение 2-го субконто счета Дт
//		СубконтоПоАмортизационнойПремии3 - значение 3-го субконто счета Дт
//		СуммаВР
//		СуммаНУ
//		СуммаПР
//		СчетУчета						- ПланСчетов.Хозрасчетный, счет учета 
//		СчетУчетаЗатратПоАмортизационнойПремии - ПланСчетов.Хозрасчетный, счет отражения затрат по аморт.премии
//
//	ТаблицаРеквизиты - таблица значений с графами:
//		Организация	- СправочникСсылка.Организации
//		Период - Дата
//		Регистратор	- Документ-регистратор
//
//  Движения - коллекция наборов записей регистров.
//  Отказ - Булево, признак отказа от проведения.
//
Процедура ВыполнитьДополнительныеДействияНачислениеАмортизационнойПремии(ТаблицаНачисленияАмортизационнойПремии, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	// РегламентированныйУчетОСиНМА
	

	// Конец РегламентированныйУчетОСиНМА
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ВЫБЫТИЕ ОБЪЕКТОВ ОС И НМА

// Процедура ВыполнитьДополнительныеДействияСписаниеОС вызывается из 
// УчетОС.СформироватьДвиженияСписаниеОстаточнойСтоимостиОС() после определения
// остаточной стоимости объекта ОС для возможности отражения дополнительных движений
// при проведении документов:
//		- ПередачаОС
//		- СписаниеОС
// При добавлении новых регистров необходимо для них назначать в качестве регистраторов 
// указанные документы.
// 
// 
// Параметры:
//  ТаблицаСтоимости - таблица значений с графами:
//		ОсновноеСредство 	- СправочникСсылка.ОсновныеСредства
//		СтоимостьБУ			- Число, остаточная стоимость объект ОС по БУ
//		Субконто			- Значение субконто СчетаСписания
//		СчетСписания		- Счет, на который списан объект ОС 
//
//	ТаблицаРеквизиты - таблица значений с графами:
//		Номер				- Строка, номер документа-регистратора
//		Организация			- Справочник.Организации
//		Период				- Дата документа - регистратора
//		Подразделение		- подразделение, где числится ОС
//		Регистратор			- Документ - регистратор
//
Процедура ВыполнитьДополнительныеДействияСписаниеОС(ТаблицаСтоимости, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	// РегламентированныйУчетОСиНМА
	

	// Конец РегламентированныйУчетОСиНМА

КонецПроцедуры

// Процедура ВыполнитьДополнительныеДействияСписаниеНМА вызывается из 
// УчетНМА.СформироватьДвиженияВыбытиеНМА() после определения
// остаточной стоимости объекта НМА для возможности отражения дополнительных движений
// при проведении документов:
//		- ПередачаНМА
//		- СписаниеНМА
// При добавлении новых регистров необходимо для них назначать в качестве регистраторов 
// указанные документы.
// 
// 
// Параметры:
//  ТаблицаПараметрыСписания - таблица значений с графами:
//		АмортизацияНМАБУ 	- Число, накопленная амортизация по объекту
//		НематериальныйАктив	- Справочник.НематериальныеАктивы, списываемый объект
//		СтоимостьНМАБУ		- Число, первоначальная стоимость объекта НМА.
//								Разница (СтоимостьНМАБУ - АмортизацияНМАБУ) дает остаточную
//								стоимость, которая списывается на расходы по БУ.
//		СчетНачисленияАмортизации - ПланСчетов.Хозрасчетный, счет учета амортизации (например, 05)
//		СчетУчета			- ПланСчетов.Хозрасчетный, счет учета объекта НМА (например, 04)
//
//	ТаблицаРеквизиты - таблица значений с графами:
//		Организация			- Справочник.Организации
//		Период				- Дата документа - регистратора
//		Подразделение		- подразделение, в котором числился объект НМА и на расходы 
//								которого списывается его остаточная стоимость
//		Регистратор			- Документ - регистратор
//		СубконтоСписания	- Значение субконто счета списания
//		СчетСписания		- ПланСчетов.Хозрасчетный, счет списания (например, 91.02)
//
Процедура ВыполнитьДополнительныеДействияСписаниеНМА(ТаблицаПараметрыСписания, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	// РегламентированныйУчетОСиНМА
	

	// Конец РегламентированныйУчетОСиНМА

КонецПроцедуры
