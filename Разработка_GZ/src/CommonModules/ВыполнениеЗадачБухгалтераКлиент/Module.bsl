
#Область ПрограммныйИнтерфейс

Процедура ВыполнитьДействие(ОписаниеДействия) Экспорт
	
	Если ОписаниеДействия.Свойство("ИмяФормы") Тогда
		Если ОписаниеДействия.Свойство("ИдентификаторФормы") Тогда
			ИдентификаторФормы = ОписаниеДействия.ИдентификаторФормы;
		Иначе
			ИдентификаторФормы = Новый УникальныйИдентификатор;
		КонецЕсли;
		ОткрытьФорму(ОписаниеДействия.ИмяФормы, ОписаниеДействия.ПараметрыФормы,,ИдентификаторФормы);
		ЗарегистрироватьВЖурналеОткрытиеФормы(ОписаниеДействия.ИмяФормы);
		
	ИначеЕсли ОписаниеДействия.Свойство("Предупреждение") Тогда
		
		ПоказатьПредупреждение( , ОписаниеДействия.Предупреждение);
		ВыполнениеЗадачБухгалтераВызовСервера.ЗарегистрироватьВЖурналеПоказПредупреждения(ОписаниеДействия.Предупреждение);
		
	ИначеЕсли ОписаниеДействия.Свойство("Вопрос") Тогда
		
		Оповещение = Новый ОписаниеОповещения("ВопросЗавершение", ЭтотОбъект, ОписаниеДействия);
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить("Да",  ОписаниеДействия.ВариантДа);
		Кнопки.Добавить("Нет", ОписаниеДействия.ВариантНет);
		Кнопки.Добавить("Отмена");
		ПоказатьВопрос(Оповещение, ОписаниеДействия.Вопрос, Кнопки, , "Да");
		
	ИначеЕсли ОписаниеДействия.Свойство("Подключение1СОтчетности") Тогда
		
		ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ПоказатьФормуПредложениеОформитьЗаявлениеНаПодключение(
			ОписаниеДействия.Организация);
		ЗарегистрироватьВЖурналеОткрытиеФормы("Подключение1СОтчетности");
		
	ИначеЕсли ОписаниеДействия.Свойство("Подключение1СЭДО") Тогда
		
		ОбменСКонтрагентамиСлужебныйКлиент.ПодключитьКЭДО(ОписаниеДействия.Организация);
		ЗарегистрироватьВЖурналеОткрытиеФормы("Подключение1СЭДО");
		
	ИначеЕсли ОписаниеДействия.Свойство("ФинОтчетность") Тогда
		
		ДлительнаяОперация = ЗаполнениеФинОтчетностиВБанкиВызовСервера.НачатьОбновлениеФинОтчетности(Новый УникальныйИдентификатор);
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
		ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Обновление данных сервиса 1С:ФинОтчетность'");
		
		ОбработчикОповещения = Новый ОписаниеОповещения("ОбновлениеФинОтчетностиЗавершение", ЗаполнениеФинОтчетностиВБанкиКлиент,
			ОписаниеДействия.ПараметрыФормы);
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОбработчикОповещения, ПараметрыОжидания);
		
	ИначеЕсли ОписаниеДействия.Свойство("Переход") Тогда
		
		ПерейтиПоНавигационнойСсылке(ОписаниеДействия.Переход);
		ВыполнениеЗадачБухгалтераВызовСервера.ЗарегистрироватьВЖурналеПереходПоСсылке(ОписаниеДействия.Переход);
		
	КонецЕсли;

КонецПроцедуры

Процедура ВопросЗавершение(Ответ, ОписаниеДействия) Экспорт
	
	ИмяФормы = "";

	Если Ответ = "Да" Тогда
		ОткрытьФорму(ОписаниеДействия.ДействиеДа.ИмяФормы, ОписаниеДействия.ДействиеДа.ПараметрыФормы);
		ИмяФормы = ОписаниеДействия.ДействиеДа.ИмяФормы;
	ИначеЕсли Ответ = "Нет" Тогда
		ОткрытьФорму(ОписаниеДействия.ДействиеНет.ИмяФормы, ОписаниеДействия.ДействиеНет.ПараметрыФормы);
		ИмяФормы = ОписаниеДействия.ДействиеНет.ИмяФормы;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИмяФормы) Тогда
		ЗарегистрироватьВЖурналеОткрытиеФормы(ИмяФормы);
	КонецЕсли;
	
КонецПроцедуры

// Помечает задачу как выполненную
//
// Параметры:
//  ПараметрыКоманды - Структура - см. ВыполнениеЗадачБухгалтераКлиентСервер.НовыеПараметрыКомандЗадачи(),
//                     для регулярных платежей дополнительно содержит элемент с ключом "Оплачено"
//
Процедура ОтметитьЗадачуКакВыполненную(ПараметрыКоманды, Форма) Экспорт
	
	Если ТипЗнч(ПараметрыКоманды.Правило) = Тип("СправочникСсылка.ПравилаРегулярныхПлатежей")
		И НЕ ПараметрыКоманды.Оплачено Тогда
		
		//Дополнительно спросим убрать ли все напоминания об этом платеже.
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ПараметрыКоманды", ПараметрыКоманды);
		ДополнительныеПараметры.Вставить("Форма",            Форма);
		
		Оповещение = Новый ОписаниеОповещения("ВопросПродолжатьНапоминатьЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		ТекстВопроса = НСтр("ru = 'Продолжать напоминать об этом платеже?'");
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		
	Иначе
		ЗавершитьЗадачу(ПараметрыКоманды, Форма);
	КонецЕсли;
	
КонецПроцедуры

// Записывает в журнал регистрации факт открытия формы.
//
Процедура ЗарегистрироватьВЖурналеОткрытиеФормы(ИмяФормы) Экспорт

	Если СтрНайти(ВРег(ИмяФормы), ВРег("ПомощникУплатыНалога")) > 0 Тогда
		// Открытие самой формы помощника не регистрируем, 
		// интересует открытие отчета из помощника.
		Возврат;
	КонецЕсли;

	ВыполнениеЗадачБухгалтераВызовСервера.ЗарегистрироватьВЖурналеОткрытиеФормы(ИмяФормы);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВопросПродолжатьНапоминатьЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	// Завершаем задачу только после ответа на вопрос,
	// чтобы было понятно о какой задаче продолжать или не продолжать напоминать.
	ЗавершитьЗадачу(ДополнительныеПараметры.ПараметрыКоманды, ДополнительныеПараметры.Форма);
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		ПрекратитьВыполнение(ДополнительныеПараметры.ПараметрыКоманды);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗавершитьЗадачу(ПараметрыКоманды, Форма)
	
	КлючЗаписи = ВыполнениеЗадачБухгалтераВызовСервера.ПеренестиВАрхив(ПараметрыКоманды);
	
	Если ТипЗнч(КлючЗаписи) = Тип("РегистрСведенийКлючЗаписи.ЗадачиБухгалтера") Тогда
		
		ТипПравила = ТипЗнч(ПараметрыКоманды.Правило);
		
		Если ТипПравила = Тип("СправочникСсылка.ПравилаПредставленияОтчетовУплатыНалогов") Тогда
			
			ПоказатьОповещениеПользователя(
				, // Без заголовка
				"e1cib/app/РегистрСведений.ЗадачиБухгалтера.Форма.ЗадачиВАрхиве",
				НСтр("ru = 'Задача помещена в архив'"));
			
		КонецЕсли;
		
		ОповеститьОбИзменении(КлючЗаписи);
		Оповестить("СписокЗадачБухгалтера_Изменение");
		
	КонецЕсли;
	
	Если ПоказыватьНовости(Форма) Тогда
		ИдентификаторыСобытий = "ПриОтметкеЗадачиКакВыполненной";
		ОбработкаНовостейКлиент.КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриПроизвольномСобытии(
			Форма,
			ИдентификаторыСобытий);
	ИначеЕсли Форма.Элементы.Найти("Результат") <> Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Форма.Элементы.Результат, "НеАктуальность");
	КонецЕсли;
	
КонецПроцедуры

Функция ПоказыватьНовости(Форма)
	
	Если СтрНайти(Форма.ИмяФормы, "ПлатежныйКалендарь") = 0 Тогда // В Платежный календарь новости не встроены
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Новости");
	
КонецФункции

Процедура ПрекратитьВыполнение(ПараметрыКоманды)
	
	Организация = ПараметрыКоманды.Организация;
	Правило     = ПараметрыКоманды.Правило;
	
	Если ВыполнениеЗадачБухгалтераВызовСервера.ПрекратитьВыполнение(Организация, Правило) Тогда
		ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.ЗадачиБухгалтера"));
		Оповестить("СписокЗадачБухгалтера_Изменение");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
