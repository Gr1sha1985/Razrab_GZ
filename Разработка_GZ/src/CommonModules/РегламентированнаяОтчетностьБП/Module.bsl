#Область ПрограммныйИнтерфейс

Функция ПолучитьСведенияОбОрганизации(Знач Организация, Знач ДатаЗначения = Неопределено, Знач СписокПоказателей = Неопределено) Экспорт
	
	Перем ОргСведения;
	Перем Значение;
	
	// Структура, в которой будут возвращаться найденные значения
	ОргСведения = Новый Структура;
	
	Если ДатаЗначения = Неопределено Тогда
		ДатаЗначения = ТекущаяДатаСеанса();
	КонецЕсли;
	ДатаЗначения = КонецДня(ДатаЗначения);
	
	ПустаяДата = '00010101000000';
	ПустойАдрес = ",,,,,,,,,";
	
	Организация = Организация.ПолучитьОбъект();
	Организация.Прочитать();
	
	Кэш = Новый Структура;
	Кэш.Вставить("Организация", Организация);
	Кэш.Вставить("ДатаЗначения", ДатаЗначения);
	
	ПБОЮЛ = Организация.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
	
	Кэш.Вставить("ПБОЮЛ", ПБОЮЛ);
	
	ТелефонФизЛица = Справочники.ВидыКонтактнойИнформации.ТелефонРабочийФизическиеЛица;
	
	Если СписокПоказателей = Неопределено Тогда
		
		СписокПоказателей = Новый Массив;
		СписокПоказателей.Добавить("СтавкаПрибФед");
		СписокПоказателей.Добавить("СтавкаПрибРесп");
		СписокПоказателей.Добавить("СтавкаПрибМест");
		СписокПоказателей.Добавить("ТипНП");
		СписокПоказателей.Добавить("КатНП");
		СписокПоказателей.Добавить("НаимНО");
		СписокПоказателей.Добавить("КодНО");
		СписокПоказателей.Добавить("ОснВидДеят");
		СписокПоказателей.Добавить("ОснВидДеят2");
		СписокПоказателей.Добавить("ОКВЭД");
		СписокПоказателей.Добавить("ОКВЭД2");
		СписокПоказателей.Добавить("ДополнительныеКодыОКВЭД2");
		СписокПоказателей.Добавить("ОГРН");
		СписокПоказателей.Добавить("ОКАТО");
		СписокПоказателей.Добавить("ОКТМО");
		СписокПоказателей.Добавить("РегНомПФР");
		СписокПоказателей.Добавить("ИПРегНомПФР");
		СписокПоказателей.Добавить("РегНомПФРЗаСебя");
		СписокПоказателей.Добавить("НаимОргПФР");
		СписокПоказателей.Добавить("ОКПО");
		СписокПоказателей.Добавить("ОргПравФорм");
		СписокПоказателей.Добавить("ОКОПФ");
		СписокПоказателей.Добавить("ФормСобств");
		СписокПоказателей.Добавить("ОКФС");
		СписокПоказателей.Добавить("ДатаРегистрации");
		СписокПоказателей.Добавить("АдрПочт");
		СписокПоказателей.Добавить("АдрПочт_XML");
		СписокПоказателей.Добавить("АдрПочт_JSON");
		СписокПоказателей.Добавить("ПолныйАдрПочт");
		СписокПоказателей.Добавить("СвидСН");
		СписокПоказателей.Добавить("СвидДВ");
		СписокПоказателей.Добавить("СвидНО");
		СписокПоказателей.Добавить("СвидНОКод");
		СписокПоказателей.Добавить("НаимЮЛПол");
		СписокПоказателей.Добавить("НаимЮЛСокр");
		СписокПоказателей.Добавить("ИННЮЛ");
		СписокПоказателей.Добавить("КППЮЛ");
		СписокПоказателей.Добавить("АдрЮР");
		СписокПоказателей.Добавить("АдрЮР_XML");
		СписокПоказателей.Добавить("АдрЮР_JSON");
		СписокПоказателей.Добавить("ПолныйАдрЮР");
		СписокПоказателей.Добавить("АдрФакт");
		СписокПоказателей.Добавить("АдрФакт_XML");
		СписокПоказателей.Добавить("АдрФакт_JSON");
		СписокПоказателей.Добавить("ОргИндекс");
		СписокПоказателей.Добавить("ОргСубъект");
		СписокПоказателей.Добавить("ОргКодСубъект");
		СписокПоказателей.Добавить("ОргРайон");
		СписокПоказателей.Добавить("ОргГород");
		СписокПоказателей.Добавить("ОргНПункт");
		СписокПоказателей.Добавить("ОргУлица");
		СписокПоказателей.Добавить("ОргДом");
		СписокПоказателей.Добавить("ОргКорпус");
		СписокПоказателей.Добавить("ОргКвартира");
		СписокПоказателей.Добавить("НаимОППол");
		СписокПоказателей.Добавить("КППОП");
		СписокПоказателей.Добавить("АдрОП");
		СписокПоказателей.Добавить("АдрОП_XML");
		СписокПоказателей.Добавить("АдрОП_JSON");
		СписокПоказателей.Добавить("ИндексОП");
		СписокПоказателей.Добавить("СубъектОП");
		СписокПоказателей.Добавить("КодСубъектОП");
		СписокПоказателей.Добавить("РайонОП");
		СписокПоказателей.Добавить("ГородОП");
		СписокПоказателей.Добавить("НПунктОП");
		СписокПоказателей.Добавить("УлицаОП");
		СписокПоказателей.Добавить("ДомОП");
		СписокПоказателей.Добавить("КорпусОП");
		СписокПоказателей.Добавить("КвартираОП");
		СписокПоказателей.Добавить("ТелАдрОП");
		СписокПоказателей.Добавить("НаимОИОПол");
		СписокПоказателей.Добавить("ИННИО");
		СписокПоказателей.Добавить("КППИО");
		СписокПоказателей.Добавить("АдрОтдИОРФ");
		СписокПоказателей.Добавить("АдрОтдИОРФ_XML");
		СписокПоказателей.Добавить("АдрОтдИОРФ_JSON");
		СписокПоказателей.Добавить("ИндексОИО");
		СписокПоказателей.Добавить("СубъектОИО");
		СписокПоказателей.Добавить("КодСубъектОИО");
		СписокПоказателей.Добавить("РайонОИО");
		СписокПоказателей.Добавить("ГородОИО");
		СписокПоказателей.Добавить("НПунктОИО");
		СписокПоказателей.Добавить("УлицаОИО");
		СписокПоказателей.Добавить("ДомОИО");
		СписокПоказателей.Добавить("КорпусОИО");
		СписокПоказателей.Добавить("КвартираОИО");
		СписокПоказателей.Добавить("КодИОСтрРег");
		СписокПоказателей.Добавить("НаимИОПол");
		СписокПоказателей.Добавить("СтрИО");
		СписокПоказателей.Добавить("КодСтрИО");
		СписокПоказателей.Добавить("СтрПостИО");
		СписокПоказателей.Добавить("КодСтрПостИО");
		СписокПоказателей.Добавить("АдрИО");
		СписокПоказателей.Добавить("АдрИО_XML");
		СписокПоказателей.Добавить("АдрИО_JSON");
		СписокПоказателей.Добавить("ФИО");
		СписокПоказателей.Добавить("ФИООтпрФЛ");
		СписокПоказателей.Добавить("ФамилияИП");
		СписокПоказателей.Добавить("ИмяИП");
		СписокПоказателей.Добавить("ОтчествоИП");
		СписокПоказателей.Добавить("ИННФЛ");
		СписокПоказателей.Добавить("СНИЛС");
		СписокПоказателей.Добавить("ДатаРожд");
		СписокПоказателей.Добавить("МестоРожд");
		СписокПоказателей.Добавить("МестоРождИП");
		СписокПоказателей.Добавить("АдресЭлПочтыИП");
		СписокПоказателей.Добавить("Пол");
		СписокПоказателей.Добавить("Гражд");
		СписокПоказателей.Добавить("ГраждСтрана");
		СписокПоказателей.Добавить("КодУдЛичн");
		СписокПоказателей.Добавить("ВидУдЛичн");
		СписокПоказателей.Добавить("ОрганВыданУдЛичн");
		СписокПоказателей.Добавить("КодПодрУдЛичн");
		СписокПоказателей.Добавить("СерияУдЛичн");
		СписокПоказателей.Добавить("НомерУдЛичн");
		СписокПоказателей.Добавить("ДатаУдЛичн");
		СписокПоказателей.Добавить("АдрПрописки");
		СписокПоказателей.Добавить("АдрПрописки_XML");
		СписокПоказателей.Добавить("АдрПрописки_JSON");
		СписокПоказателей.Добавить("АдрМЖ");
		СписокПоказателей.Добавить("АдрМЖ_XML");
		СписокПоказателей.Добавить("АдрМЖ_JSON");
		СписокПоказателей.Добавить("ИндексМЖ");
		СписокПоказателей.Добавить("СубъектМЖ");
		СписокПоказателей.Добавить("КодСубъектМЖ");
		СписокПоказателей.Добавить("РайонМЖ");
		СписокПоказателей.Добавить("ГородМЖ");
		СписокПоказателей.Добавить("НПунктМЖ");
		СписокПоказателей.Добавить("УлицаМЖ");
		СписокПоказателей.Добавить("ДомМЖ");
		СписокПоказателей.Добавить("КорпусМЖ");
		СписокПоказателей.Добавить("КвартираМЖ");
		СписокПоказателей.Добавить("ТелСлуж");
		СписокПоказателей.Добавить("ТелДом");
		СписокПоказателей.Добавить("ФИОРук");
		СписокПоказателей.Добавить("ДолжнРук");
		СписокПоказателей.Добавить("ФамилияРук");
		СписокПоказателей.Добавить("ИмяРук");
		СписокПоказателей.Добавить("ОтчествоРук");
		СписокПоказателей.Добавить("ИННРук");
		СписокПоказателей.Добавить("ДатаРождРук");
		СписокПоказателей.Добавить("МестоРождРук");
		СписокПоказателей.Добавить("ПолРук");
		СписокПоказателей.Добавить("ГраждРук");
		СписокПоказателей.Добавить("ГраждСтранаРук");
		СписокПоказателей.Добавить("ТелРук");
		СписокПоказателей.Добавить("КодУдЛичнРук");
		СписокПоказателей.Добавить("ВидУдЛичнРук");
		СписокПоказателей.Добавить("ОрганВыданУдЛичнРук");
		СписокПоказателей.Добавить("КодПодрУдЛичнРук");
		СписокПоказателей.Добавить("СерияУдЛичнРук");
		СписокПоказателей.Добавить("НомерУдЛичнРук");
		СписокПоказателей.Добавить("ДатаУдЛичнРук");
		СписокПоказателей.Добавить("АдрМЖРукРФ");
		СписокПоказателей.Добавить("АдрМЖРукРФ_XML");
		СписокПоказателей.Добавить("АдрМЖРукРФ_JSON");
		СписокПоказателей.Добавить("ИндексМЖРук");
		СписокПоказателей.Добавить("СубъектМЖРук");
		СписокПоказателей.Добавить("КодСубъектМЖРук");
		СписокПоказателей.Добавить("РайонМЖРук");
		СписокПоказателей.Добавить("ГородМЖРук");
		СписокПоказателей.Добавить("НПунктМЖРук");
		СписокПоказателей.Добавить("УлицаМЖРук");
		СписокПоказателей.Добавить("ДомМЖРук");
		СписокПоказателей.Добавить("КорпусМЖРук");
		СписокПоказателей.Добавить("КвартираМЖРук");
		СписокПоказателей.Добавить("АдресЭлПочтыРук");
		СписокПоказателей.Добавить("ФИОБух");
		СписокПоказателей.Добавить("ФИООтпр");
		СписокПоказателей.Добавить("ФамилияБух");
		СписокПоказателей.Добавить("ИмяБух");
		СписокПоказателей.Добавить("ОтчествоБух");
		СписокПоказателей.Добавить("ИННБух");
		СписокПоказателей.Добавить("ДатаРождБух");
		СписокПоказателей.Добавить("МестоРождБух");
		СписокПоказателей.Добавить("ПолБух");
		СписокПоказателей.Добавить("ПолУпПред");
		СписокПоказателей.Добавить("ГраждБух");
		СписокПоказателей.Добавить("ГраждУпПред");
		СписокПоказателей.Добавить("ГраждСтранаБух");
		СписокПоказателей.Добавить("ГраждСтранаУпПред");
		СписокПоказателей.Добавить("ТелБух");
		СписокПоказателей.Добавить("ТелОтпр");
		СписокПоказателей.Добавить("КодУдЛичнБух");
		СписокПоказателей.Добавить("ВидУдЛичнБух");
		СписокПоказателей.Добавить("ОрганВыданУдЛичнБух");
		СписокПоказателей.Добавить("КодПодрУдЛичнБух");
		СписокПоказателей.Добавить("СерияУдЛичнБух");
		СписокПоказателей.Добавить("НомерУдЛичнБух");
		СписокПоказателей.Добавить("ДатаУдЛичнБух");
		СписокПоказателей.Добавить("АдрМЖБухРФ");
		СписокПоказателей.Добавить("АдрМЖБухРФ_XML");
		СписокПоказателей.Добавить("АдрМЖБухРФ_JSON");
		СписокПоказателей.Добавить("ИндексМЖБух");
		СписокПоказателей.Добавить("СубъектМЖБух");
		СписокПоказателей.Добавить("КодСубъектМЖБух");
		СписокПоказателей.Добавить("РайонМЖБух");
		СписокПоказателей.Добавить("ГородМЖБух");
		СписокПоказателей.Добавить("НПунктМЖБух");
		СписокПоказателей.Добавить("УлицаМЖБух");
		СписокПоказателей.Добавить("ДомМЖБух");
		СписокПоказателей.Добавить("КорпусМЖБух");
		СписокПоказателей.Добавить("КвартираМЖБух");
		СписокПоказателей.Добавить("АдресЭлПочтыБух");
		СписокПоказателей.Добавить("ФИОУпПред");
		СписокПоказателей.Добавить("ИННУпПред");
		СписокПоказателей.Добавить("ТелУпПред");
		СписокПоказателей.Добавить("КодУдЛичнУпПред");
		СписокПоказателей.Добавить("ВидУдЛичнУпПред");
		СписокПоказателей.Добавить("ОрганВыданУдЛичнУпПред");
		СписокПоказателей.Добавить("КодПодрУдЛичнУпПред");
		СписокПоказателей.Добавить("СерияУдЛичнУпПред");
		СписокПоказателей.Добавить("НомерУдЛичнУпПред");
		СписокПоказателей.Добавить("ДатаУдЛичнУпПред");
		СписокПоказателей.Добавить("ДатаРождУпПред");
		СписокПоказателей.Добавить("АдрМЖУпПредРФ");
		СписокПоказателей.Добавить("АдрМЖУпПредРФ_XML");
		СписокПоказателей.Добавить("АдрМЖУпПредРФ_JSON");
		СписокПоказателей.Добавить("МестоРождУпПред");
		СписокПоказателей.Добавить("ИндексМЖУпПред");
		СписокПоказателей.Добавить("СубъектМЖУпПред");
		СписокПоказателей.Добавить("КодСубъектМЖУпПред");
		СписокПоказателей.Добавить("РайонМЖУпПред");
		СписокПоказателей.Добавить("ГородМЖУпПред");
		СписокПоказателей.Добавить("НПунктМЖУпПред");
		СписокПоказателей.Добавить("УлицаМЖУпПред");
		СписокПоказателей.Добавить("ДомМЖУпПред");
		СписокПоказателей.Добавить("КорпусМЖУпПред");
		СписокПоказателей.Добавить("КвартираМЖУпПред");
		СписокПоказателей.Добавить("ФаксИсп");
		СписокПоказателей.Добавить("АдресЭлПочтыИсп");
		СписокПоказателей.Добавить("ДолжнОтпр");
		СписокПоказателей.Добавить("ФИООтвСтатистика");
		СписокПоказателей.Добавить("ДолжнОтвСтатистика");
		СписокПоказателей.Добавить("ТелОтвСтатистика");
		СписокПоказателей.Добавить("АдресЭлПочтыОтвСтатистика");
		СписокПоказателей.Добавить("ДатаПереходаНаУСН");
		СписокПоказателей.Добавить("БанкСчетНомер");
		СписокПоказателей.Добавить("БанкСчетНаимБанка");
		СписокПоказателей.Добавить("БанкСчетКоррСчетБанка");
		СписокПоказателей.Добавить("БанкСчетБИКБанка");
		СписокПоказателей.Добавить("РегистрационныйНомерФСС");
		СписокПоказателей.Добавить("РегистрационныйНомерФССДобрСтрах");
		СписокПоказателей.Добавить("НаименованиеТерриториальногоОрганаФСС");
		СписокПоказателей.Добавить("КодПодчиненностиФСС");
		СписокПоказателей.Добавить("КодОКОНХ");
		СписокПоказателей.Добавить("СтраховойТариф");
		СписокПоказателей.Добавить("ТелОрганизации");
		СписокПоказателей.Добавить("ФаксОрганизации");
		СписокПоказателей.Добавить("ОбъектНалогообложенияУСН");
		СписокПоказателей.Добавить("СтавкаНалогаУСН");
		СписокПоказателей.Добавить("НаимГоловнОрг");
		СписокПоказателей.Добавить("КППГоловнОрг");
		СписокПоказателей.Добавить("ФИОИсп");
		СписокПоказателей.Добавить("ДолжнИсп");
		СписокПоказателей.Добавить("ТелИсп");
		СписокПоказателей.Добавить("КодОрганаПФР");
		СписокПоказателей.Добавить("АдресЭлектроннойПочтыОрганизации");
		СписокПоказателей.Добавить("РегНомТФОМС");
		СписокПоказателей.Добавить("КодПодчФССДобрСтрах");
		СписокПоказателей.Добавить("КодОрганаФСГС");
		СписокПоказателей.Добавить("ШифрСтрахователяФСС");
		СписокПоказателей.Добавить("КодТарифаПлательщикаПоУмолчаниюДляРСВ");
		СписокПоказателей.Добавить("СистемыНалогообложения");
		СписокПоказателей.Добавить("ВидПлательщикаСтраховыхВзносов");
		СписокПоказателей.Добавить("КодОснВидаДеятельностиНФО");
		СписокПоказателей.Добавить("КодыИныхВидовДеятельностиНФО");
		СписокПоказателей.Добавить("НекоммерческаяОрганизация");
		
	КонецЕсли;
	
	РоссийскийАдрес = Новый Соответствие;
	РоссийскийАдрес.Вставить("Индекс",          "");
	РоссийскийАдрес.Вставить("Регион",          "");
	РоссийскийАдрес.Вставить("КодРегиона",      "");
	РоссийскийАдрес.Вставить("Район",           "");
	РоссийскийАдрес.Вставить("Город",           "");
	РоссийскийАдрес.Вставить("НаселенныйПункт", "");
	РоссийскийАдрес.Вставить("Улица",           "");
	РоссийскийАдрес.Вставить("Дом",             "");
	РоссийскийАдрес.Вставить("Корпус",          "");
	РоссийскийАдрес.Вставить("Квартира",        "");
	
	ЭтоМассив = (ТипЗнч(СписокПоказателей) = Тип("Массив"));
	
	ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Кэш.Организация.Ссылка, Кэш.ДатаЗначения);
	
	Для Каждого Показатель Из СписокПоказателей Цикл

		ИмяПоказателя = ?(ЭтоМассив, Показатель, Показатель.Представление);
		
		Если ИмяПоказателя = "СтавкаПрибФед" Тогда
			
			Ставки = ПолучитьСУчетомКэша(Кэш, "СтавкаНалогаНаПрибыль");
			Если Ставки <> Неопределено И Ставки.Количество() > 0 Тогда
				Значение = Ставки.СтавкаФБ;
			Иначе
				Значение = 0;
			КонецЕсли;

		ИначеЕсли ИмяПоказателя = "СтавкаПрибРесп" Тогда
			Ставки = ПолучитьСУчетомКэша(Кэш, "СтавкаНалогаНаПрибыль");
			Если Ставки <> Неопределено И Ставки.Количество() > 0 Тогда
				Значение = Ставки.СтавкаСубъектРФ;
			Иначе
				Значение = 0;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СтавкаПрибМест" Тогда
			Ставки = ПолучитьСУчетомКэша(Кэш, "СтавкаНалогаНаПрибыль");
			Если Ставки <> Неопределено И Ставки.Количество() > 0 Тогда
				Значение = Ставки.СтавкаМестный;
			Иначе
				Значение = 0;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ТипНП" Тогда
			
			Если Организация.ИностраннаяОрганизация Тогда
				Значение = 5;
			Иначе
				Если Организация.ГоловнаяОрганизация = Организация.Ссылка Тогда
					Если ПБОЮЛ Тогда
						Значение = 3;
					Иначе
						Значение = 1;
					КонецЕсли;
				Иначе
					Значение = 2;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КатНП" Тогда
			
			Значение = "01";
			
		ИначеЕсли Имяпоказателя = "НаимНО" Тогда
			
			Значение = "";
			Если НЕ Организация.РегистрацияВНалоговомОргане.Пустая() Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация.Ссылка, "РегистрацияВНалоговомОргане.НаименованиеИФНС");
			КонецЕсли;
			
		ИначеЕсли Имяпоказателя = "КодНО" Тогда
			
			Значение = ДанныеГосударственныхОрганов.КодГосударственногоОрганаОрганизации(
				Организация.Ссылка,
				Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган);
			
		ИначеЕсли Имяпоказателя = "ОснВидДеят" Тогда
			
			Значение = Организация.НаименованиеОКВЭД;
			
		ИначеЕсли Имяпоказателя = "ОснВидДеят2" Тогда
			
			Значение = Организация.НаименованиеОКВЭД2;
			
		ИначеЕсли Имяпоказателя = "ОКВЭД" Тогда
			
			Значение = Организация.КодОКВЭД;
			
		ИначеЕсли Имяпоказателя = "ОКВЭД2" Тогда
			
			Значение = Организация.КодОКВЭД2;
			
		ИначеЕсли Имяпоказателя = "ДополнительныеКодыОКВЭД2" Тогда
			
			Значение = Организация.ДополнительныеКодыОКВЭД2;
			
		ИначеЕсли ИмяПоказателя	= "ОГРН" Тогда
			
			Значение = Организация.ОГРН;
			
		ИначеЕсли ИмяПоказателя = "ОКАТО" Или ИмяПоказателя = "ОКТМО" Тогда
			
			Значение = Справочники.РегистрацииВНалоговомОргане.КодТерритории(Организация.РегистрацияВНалоговомОргане, ИмяПоказателя);
			
		ИначеЕсли ИмяПоказателя = "РегНомТФОМС" Тогда
			
			Значение = СокрЛП(Организация.РегистрационныйНомерТФОМС);
			
		ИначеЕсли ИмяПоказателя = "РегНомТФОМСЗаСебя" Тогда
			
			Если ПБОЮЛ Тогда
				Значение = СокрЛП(Организация.ИПРегистрационныйНомерТФОМС); 
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "РегНомПФР" Тогда
			
			Значение = УчетЗарплаты.РегистрационныйНомерПФР(Организация.Ссылка, ДатаЗначения);
			
		ИначеЕсли ИмяПоказателя = "ИПРегНомПФР" Тогда
			
			Значение = Организация.ИПРегистрационныйНомерПФР;
			
		ИначеЕсли ИмяПоказателя = "НаимОргПФР" Тогда
			
			Значение = Организация.НаименованиеТерриториальногоОрганаПФР;
			
		ИначеЕсли ИмяПоказателя = "РегНомПФРЗаСебя" Тогда	
			
			Если ПБОЮЛ Тогда
				Значение = СокрЛП(Организация.ИПРегистрационныйНомерПФР); 
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодОрганаПФР" Тогда
			
			Значение = ДанныеГосударственныхОрганов.КодГосударственногоОрганаОрганизации(
				Организация.Ссылка,
				Перечисления.ВидыГосударственныхОрганов.ОрганПФР);
			
		ИначеЕсли ИмяПоказателя = "ОКПО" Тогда
			
			Значение = Организация.КодПоОКПО;
			
		ИначеЕсли ИмяПоказателя = "ОргПравФорм" Тогда
			
			Значение = Организация.НаименованиеОКОПФ;
			
		ИначеЕсли ИмяПоказателя = "ОКОПФ" Тогда
			
			Значение  = Организация.КодОКОПФ;
			
		ИначеЕсли ИмяПоказателя = "ФормСобств" Тогда
			
			Значение = Организация.НаименованиеОКФС;
			
		ИначеЕсли ИмяПоказателя = "ОКФС" Тогда
			
			Значение = Организация.КодОКФС;
			
		ИначеЕсли ИмяПоказателя = "РегистрационныйНомерФСС" Тогда
			
			Значение = Организация.РегистрационныйНомерФСС;
			
		ИначеЕсли ИмяПоказателя = "РегистрационныйНомерФССДобрСтрах" Тогда	
			
			Если ПБОЮЛ Тогда
				Значение = СокрЛП(Организация.ИПРегистрационныйНомерФСС);
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодПодчиненностиФСС" Тогда
			
			Значение = ДанныеГосударственныхОрганов.КодГосударственногоОрганаОрганизации(
				Организация.Ссылка,
				Перечисления.ВидыГосударственныхОрганов.ОрганФСС);
			
		ИначеЕсли ИмяПоказателя = "КодПодчФССДобрСтрах" Тогда	
			
			Если ПБОЮЛ Тогда
				Значение = СокрЛП(Организация.КодПодчиненностиФСС);
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "НаименованиеТерриториальногоОрганаФСС" Тогда
			
			Значение = Организация.НаименованиеТерриториальногоОрганаФСС;
			
		ИначеЕсли ИмяПоказателя = "КодОКОНХ" Тогда
			
			Значение = Организация.КодОКОНХ;
			
		ИначеЕсли ИмяПоказателя = "КодОрганаФСГС" Тогда
			
			Значение = СокрЛП(Организация.КодОрганаФСГС);
			
		ИначеЕсли ИмяПоказателя = "ДатаРегистрации" Тогда
			
			Значение = Организация.ДатаРегистрации;
			
		ИначеЕсли ИмяПоказателя = "НаименованиеРегистрирующегоОргана" Тогда
			
			Если ПБОЮЛ Тогда
				Значение = "";
			Иначе
				Значение = Организация.НаименованиеРегистрирующегоОргана;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "Сервис_УказываетсяНаименованиеРегистрирующегоОргана" Тогда
			
			Значение = Истина;

		ИначеЕсли ИмяПоказателя = "СтраховойТариф" Тогда
			
			Результат = РегистрыСведений.СтавкаВзносаНаСтрахованиеОтНесчастныхСлучаев.СрезПоследних(ДатаЗначения, Новый Структура("Организация", Организация.Ссылка));
			Если Результат.Количество() > 0 Тогда
				Значение = Результат[0].Ставка;
			Иначе
				Значение = 0;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрПочт" Тогда
			
			ИмяПредопределенного = Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации;
			
			Данные = Новый Структура("Тип, Вид", Перечисления.ТипыКонтактнойИнформации.Адрес, ИмяПредопределенного);
			
			Результат = Организация.КонтактнаяИнформация.НайтиСтроки(Данные);
			
			Если Результат.Количество() > 0 Тогда
				Значение = РегламентированнаяОтчетность.АдресВФормате9Запятых(Результат[0]);
			Иначе
				Значение = ПустойАдрес;
			КонецЕсли;
			
			Если ПустаяСтрока(Значение) Тогда
				Значение = ПустойАдрес;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрПочт_XML" Тогда
			
			Значение = АдресВXML(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации);
			
		ИначеЕсли ИмяПоказателя = "АдрПочт_JSON" Тогда
			
			Значение = АдресВJSON(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации);
			
		ИначеЕсли ИмяПоказателя = "ПолныйАдрПочт" Тогда
			
			ИмяПредопределенного = Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации;
			Данные = Новый Структура("Тип, Вид", Перечисления.ТипыКонтактнойИнформации.Адрес, ИмяПредопределенного);
			
			Результат = Организация.КонтактнаяИнформация.НайтиСтроки(Данные);
			
			Если Результат.Количество() > 0 Тогда
				Значение = Результат[0].Представление;
			Иначе
				Значение = ПустойАдрес;
			КонецЕсли;
			
			Если ПустаяСтрока(Значение) Тогда
				Значение = ПустойАдрес;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдресЭлектроннойПочтыОрганизации" Тогда
			
			Данные = Новый Структура("Тип, Вид", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
	
			Результат = Организация.КонтактнаяИнформация.НайтиСтроки(Данные);
			
			Если Результат.Количество() > 0 Тогда
				Значение = Результат[0].Представление;
			Иначе
				Значение = "";
			КонецЕсли;	
			
		ИначеЕсли ИмяПоказателя = "СвидСН" Тогда
			
			Значение = Организация.СвидетельствоСерияНомер;
			
		ИначеЕсли ИмяПоказателя = "СвидДВ" Тогда
			
			Значение = Организация.СвидетельствоДатаВыдачи;
			
		ИначеЕсли ИмяПоказателя = "СвидНО" Тогда
			
			Значение = Организация.СвидетельствоНаименованиеОргана;
			
		ИначеЕсли ИмяПоказателя = "СвидНОКод" Тогда
			
			Значение = Организация.СвидетельствоКодОргана;
			
		ИначеЕсли ИмяПоказателя = "НаимЮЛПол" Тогда
			
			Значение = Справочники.Организации.НаименованияНаДату(Организация.Ссылка, ДатаЗначения).ПолноеНаименование;
			
		ИначеЕсли ИмяПоказателя = "НаимЮЛСокр" Тогда
			
			Значение = Справочники.Организации.НаименованияНаДату(Организация.Ссылка, ДатаЗначения).СокращенноеНаименование;
			
		ИначеЕсли ИмяПоказателя = "ИННЮЛ" Тогда
			
			Значение = СокрЛП(Организация.ИНН);
			
		ИначеЕсли ИмяПоказателя = "КППЮЛ" Тогда
			
			Значение = Организация.КПП;
			
		ИначеЕсли ИмяПоказателя = "КодОснВидаДеятельностиНФО" Тогда
			
			Значение = Организация.КодОсновногоВидаДеятельностиНФО;
			
		ИначеЕсли ИмяПоказателя = "КодыИныхВидовДеятельностиНФО" Тогда
			
			Значение = Организация.КодИныхВидовДеятельностиНФО;
			
		ИначеЕсли ИмяПоказателя = "НекоммерческаяОрганизация" Тогда
			
			Значение = Неопределено;
			
		ИначеЕсли ИмяПоказателя = "АдрЮР" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
			Значение = РегламентированнаяОтчетность.АдресВФормате9Запятых(Результат);
			
			Если ПустаяСтрока(Значение) Тогда
				Значение = ПустойАдрес;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрЮР_XML" Тогда
			
			Значение = АдресВXML(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
			
		ИначеЕсли ИмяПоказателя = "АдрЮР_JSON" Тогда
			
			Значение = АдресВJSON(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
			
		ИначеЕсли ИмяПоказателя = "ПолныйАдрЮР" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
			Значение = Результат.Представление;
			
			Если ПустаяСтрока(Значение) Тогда
				Значение = ПустойАдрес;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрФакт" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ФактАдресОрганизации");
			Значение = РегламентированнаяОтчетность.АдресВФормате9Запятых(Результат);
			
			Если ПустаяСтрока(Значение) Тогда
				Значение = ПустойАдрес;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрФакт_XML" Тогда
			
			Значение = АдресВXML(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
			
		ИначеЕсли ИмяПоказателя = "АдрФакт_JSON" Тогда
			
			Значение = АдресВJSON(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
			
		ИначеЕсли ИмяПоказателя = "ТелОрганизации" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ТелефонОрганизации");
			
			Если Результат <> Неопределено Тогда
				Значение = Результат.Представление;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ФаксОрганизации" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ФаксОрганизации");
			
			Если Результат <> Неопределено Тогда
				Значение = Результат.Представление;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОргИндекс" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
			Значение = Результат.Индекс;
			
		ИначеЕсли ИмяПоказателя = "ОргСубъект" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
			Значение = Результат.Регион;
			
		ИначеЕсли ИмяПоказателя = "ОргКодСубъект" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
			Значение = Результат.КодРегиона;
			
		ИначеЕсли ИмяПоказателя = "ОргРайон" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
			Значение = Результат.Район;
			
		ИначеЕсли ИмяПоказателя = "ОргГород" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
			Значение = Результат.Город;
			
		ИначеЕсли ИмяПоказателя = "ОргНПункт" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
			Значение = Результат.НаселенныйПункт;
			
		ИначеЕсли ИмяПоказателя = "ОргУлица" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
			Значение = Результат.Улица;
			
		ИначеЕсли ИмяПоказателя = "ОргДом" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
			Значение = Результат.Дом;
			
		ИначеЕсли ИмяПоказателя = "ОргКорпус" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
			Значение = Результат.Корпус;
			
		ИначеЕсли ИмяПоказателя = "ОргКвартира" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
			Значение = Результат.Квартира;
			
		//*************************************************************для обособленного подразделения
		ИначеЕсли ИмяПоказателя = "НаимОППол" Тогда
		
			Если Организация.ГоловнаяОрганизация = Организация.Ссылка Тогда
				Значение = "";
			Иначе
				Значение = Справочники.Организации.НаименованияНаДату(Организация.Ссылка, ДатаЗначения).ПолноеНаименование;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КППОП" Тогда
			
			Если Организация.ГоловнаяОрганизация = Организация.Ссылка Тогда
				Значение = "";
			Иначе
				Значение = Организация.КПП;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрОП" Тогда
			
			Если Организация.ГоловнаяОрганизация = Организация.Ссылка Тогда
				Значение = ПустойАдрес;
			Иначе
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = РегламентированнаяОтчетность.АдресВФормате9Запятых(Результат);
			КонецЕсли;
			
			Если ПустаяСтрока(Значение) Тогда
				Значение = ПустойАдрес;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрОП_XML" Тогда
			
			Если Организация.ГоловнаяОрганизация = Организация.Ссылка Тогда
				Значение = Неопределено;
			Иначе
				Значение = АдресВXML(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрОП_JSON" Тогда
			
			Если Организация.ГоловнаяОрганизация = Организация.Ссылка Тогда
				Значение = Неопределено;
			Иначе
				Значение = АдресВJSON(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ИндексОП" Тогда
			
			Если Организация.ГоловнаяОрганизация = Организация.Ссылка Тогда
				Значение = "";
			Иначе
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = Результат.Индекс;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СубъектОП" Тогда
			
			Если Организация.ГоловнаяОрганизация = Организация.Ссылка Тогда
				Значение = "";
			Иначе
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = Результат.Регион;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодСубъектОП" Тогда
			
			Если Организация.ГоловнаяОрганизация = Организация.Ссылка Тогда
				Значение = "";
			Иначе
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = Результат.КодРегиона;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "РайонОП" Тогда
			
			Если Организация.ГоловнаяОрганизация = Организация.Ссылка Тогда
				Значение = "";
			Иначе
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = Результат.Район;
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ГородОП" Тогда
			
			Если Организация.ГоловнаяОрганизация = Организация.Ссылка Тогда
				Значение = "";
			Иначе
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = Результат.Город;
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "НПунктОП" Тогда
			
			Если Организация.ГоловнаяОрганизация = Организация.Ссылка Тогда
				Значение = "";
			Иначе
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = Результат.НаселенныйПункт;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "УлицаОП" Тогда
			
			Если Организация.ГоловнаяОрганизация = Организация.Ссылка Тогда
				Значение = "";
			Иначе
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = Результат.Улица;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ДомОП" Тогда
			
			Если Организация.ГоловнаяОрганизация = Организация.Ссылка Тогда
				Значение = "";
			Иначе
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = Результат.Дом;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КорпусОП" Тогда
			
			Если Организация.ГоловнаяОрганизация = Организация.Ссылка Тогда
				Значение = "";
			Иначе
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = Результат.Корпус;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КвартираОП" Тогда
			
			Если Организация.ГоловнаяОрганизация = Организация.Ссылка Тогда
				Значение = "";
			Иначе
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = Результат.Квартира;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ТелАдрОП" Тогда
			
			Если Организация.ГоловнаяОрганизация = Организация.Ссылка Тогда
				Значение = "";
			Иначе
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ТелефонОрганизации");
				
				Если Результат <> Неопределено Тогда
					Значение = Результат.Представление;
				Иначе
					Значение = "";
				КонецЕсли;
				
			КонецЕсли;
			
		//********************************************************сведения об иностранной организации
		ИначеЕсли ИмяПоказателя = "НаимОИОПол" Тогда
		
			Если НЕ Организация.ИностраннаяОрганизация Тогда
				Значение = "";
			Иначе
				Значение = Справочники.Организации.НаименованияНаДату(Организация.Ссылка, ДатаЗначения).ПолноеНаименование;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ИННИО" Тогда
			
			Если НЕ Организация.ИностраннаяОрганизация Тогда
				Значение = "";
			Иначе
				Значение = СокрЛП(Организация.ИНН);
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КППИО" Тогда
			
			Если НЕ Организация.ИностраннаяОрганизация Тогда
				Значение = "";
			Иначе
				Значение = Организация.КПП;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрОтдИОРФ" Тогда
			
			Если НЕ Организация.ИностраннаяОрганизация Тогда
				Значение = ПустойАдрес;
			Иначе
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = РегламентированнаяОтчетность.АдресВФормате9Запятых(Результат);
			КонецЕсли;
			
			Если ПустаяСтрока(Значение) Тогда
				Значение = ПустойАдрес;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрОтдИОРФ_XML" Тогда
			
			Если НЕ Организация.ИностраннаяОрганизация Тогда
				Значение = Неопределено;
			Иначе
				Значение = АдресВXML(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрОтдИОРФ_JSON" Тогда
			
			Если НЕ Организация.ИностраннаяОрганизация Тогда
				Значение = Неопределено;
			Иначе
				Значение = АдресВJSON(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ИндексОИО" Тогда
			
			Если НЕ Организация.ИностраннаяОрганизация Тогда
				Значение = "";
			Иначе
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = Результат.Индекс;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СубъектОИО" Тогда
			
			Если НЕ Организация.ИностраннаяОрганизация Тогда
				Значение = "";
			Иначе
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Если Результат <> Неопределено Тогда
					РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.ЗначенияПолей, РоссийскийАдрес);
					Значение = РоссийскийАдрес[""];
				Иначе
					Значение = "";
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодСубъектОИО" Тогда
			
			Если НЕ Организация.ИностраннаяОрганизация Тогда
				Значение = "";
			Иначе
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Если Результат <> Неопределено Тогда
					РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.ЗначенияПолей, РоссийскийАдрес);
					Значение = РоссийскийАдрес["КодРегиона"];
				Иначе
					Значение = "";
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "РайонОИО" Тогда
			
			Если НЕ Организация.ИностраннаяОрганизация Тогда
				Значение = "";
			Иначе
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Если Результат <> Неопределено Тогда
					РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.ЗначенияПолей, РоссийскийАдрес);
					Значение = РоссийскийАдрес["Район"];
				Иначе
					Значение = "";
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ГородОИО" Тогда
			
			Если НЕ Организация.ИностраннаяОрганизация Тогда
				Значение = "";
			Иначе
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Если Результат <> Неопределено Тогда
					РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.ЗначенияПолей, РоссийскийАдрес);
					Значение = РоссийскийАдрес["Город"];
				Иначе
					Значение = "";
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "НПунктОИО" Тогда
			
			Если НЕ Организация.ИностраннаяОрганизация Тогда
				Значение = "";
			Иначе
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Если Результат <> Неопределено Тогда
					РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.ЗначенияПолей, РоссийскийАдрес);
					Значение = РоссийскийАдрес["НаселенныйПункт"];
				Иначе
					Значение = "";
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "УлицаОИО" Тогда
			
			Если НЕ Организация.ИностраннаяОрганизация Тогда
				Значение = "";
			Иначе
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Если Результат <> Неопределено Тогда
					РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.ЗначенияПолей, РоссийскийАдрес);
					Значение = РоссийскийАдрес["Улица"];
				Иначе
					Значение = "";
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ДомОИО" Тогда
			
			Если НЕ Организация.ИностраннаяОрганизация Тогда
				Значение = "";
			Иначе
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Если Результат <> Неопределено Тогда
					РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.ЗначенияПолей, РоссийскийАдрес);
					Значение = РоссийскийАдрес["Дом"];
				Иначе
					Значение = "";
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КорпусОИО" Тогда
			
			Если НЕ Организация.ИностраннаяОрганизация Тогда
				Значение = "";
			Иначе
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Если Результат <> Неопределено Тогда
					РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.ЗначенияПолей, РоссийскийАдрес);
					Значение = РоссийскийАдрес["Корпус"];
				Иначе
					Значение = "";
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КвартираОИО" Тогда
			
			Если НЕ Организация.ИностраннаяОрганизация Тогда
				Значение = "";
			Иначе
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Если Результат <> Неопределено Тогда
					РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.ЗначенияПолей, РоссийскийАдрес);
					Значение = РоссийскийАдрес["Квартира"];
				Иначе
					Значение = "";
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодИОСтрРег" Тогда
			
			Если Организация.ИностраннаяОрганизация Тогда
				Значение = Организация.КодВСтранеРегистрации;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "НаимИОПол" Тогда
			
			Если Организация.ИностраннаяОрганизация Тогда
				Значение = Организация.НаименованиеИнострОрганизации;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СтрИО" Тогда
			
			Если Организация.ИностраннаяОрганизация Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация.СтранаРегистрации, "НаименованиеПолное");
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодСтрИО" Тогда
			
			Если Организация.ИностраннаяОрганизация Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация.СтранаРегистрации, "КодАльфа2");
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СтрПостИО" Тогда
			
			Если Организация.ИностраннаяОрганизация Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация.СтранаПостоянногоМестонахождения, "НаименованиеПолное");
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодСтрПостИО" Тогда
			
			Если Организация.ИностраннаяОрганизация Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация.СтранаПостоянногоМестонахождения, "КодАльфа2");
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрИО" Тогда
			
			Если НЕ Организация.ИностраннаяОрганизация Тогда
				Значение = ПустойАдрес;
			Иначе
				
				Данные = Новый Структура("Тип, Вид", Перечисления.ТипыКонтактнойИнформации.Адрес, Справочники.ВидыКонтактнойИнформации.УчредительныйАдресИностраннойОрганизации);
				
				Результат = Организация.КонтактнаяИнформация.НайтиСтроки(Данные);
				
				Если Результат.Количество() > 0 Тогда
					Значение = Результат[0].Представление;
				Иначе
					Значение = ПустойАдрес;
				КонецЕсли;
				
			КонецЕсли;
			
			Если ПустаяСтрока(Значение) Тогда
				Значение = ПустойАдрес;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрИО_XML" Тогда
			
			Если НЕ Организация.ИностраннаяОрганизация Тогда
				Значение = Неопределено;
			Иначе
				Значение = АдресВXML(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.УчредительныйАдресИностраннойОрганизации);
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрИО_JSON" Тогда
			
			Если НЕ Организация.ИностраннаяОрганизация Тогда
				Значение = Неопределено;
			Иначе
				Значение = АдресВJSON(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.УчредительныйАдресИностраннойОрганизации);
			КонецЕсли;
			
		//***************************************************сведения об индивидуальном предпринимателе			
		ИначеЕсли ИмяПоказателя = "ФИО" ИЛИ ИмяПоказателя = "ФИООтпрФЛ" Тогда
			
			НаименованияОрганизации = Справочники.Организации.НаименованияНаДату(Организация.Ссылка, ДатаЗначения);
			Если ПБОЮЛ Тогда
				Значение = НаименованияОрганизации.ФИО.Представление;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ФамилияИП" Тогда
			
			НаименованияОрганизации = Справочники.Организации.НаименованияНаДату(Организация.Ссылка, ДатаЗначения);
			Если ПБОЮЛ Тогда
				Значение = СокрЛП(НаименованияОрганизации.ФИО.Фамилия);
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ИмяИП" Тогда
			
			НаименованияОрганизации = Справочники.Организации.НаименованияНаДату(Организация.Ссылка, ДатаЗначения);
			Если ПБОЮЛ Тогда
				Значение = СокрЛП(НаименованияОрганизации.ФИО.Имя);
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОтчествоИП" Тогда
			
			НаименованияОрганизации = Справочники.Организации.НаименованияНаДату(Организация.Ссылка, ДатаЗначения);
			Если ПБОЮЛ Тогда
				Значение = СокрЛП(НаименованияОрганизации.ФИО.Отчество);
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ИННФЛ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Значение = СокрЛП(Организация.ИНН);
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СНИЛС" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");
				
				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Результат[0].ФизическоеЛицо, "СтраховойНомерПФР");
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;	
			
		ИначеЕсли ИмяПоказателя = "ДатаРожд" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");
				
				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = ПустаяДата;
					Иначе
						Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Результат[0].ФизическоеЛицо, "ДатаРождения");
					КонецЕсли;
				Иначе
					Значение = ПустаяДата;
				КонецЕсли;
				
			Иначе
				Значение = ПустаяДата;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "МестоРожд" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");
				
				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Результат[0].ФизическоеЛицо, "МестоРождения");
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "МестоРождИП" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");
				
				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Результат[0].ФизическоеЛицо, "МестоРожденияПредставление");
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "Пол" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");
				
				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = 0;
					Иначе
						Пол = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Результат[0].ФизическоеЛицо, "Пол");
						Если Пол = Перечисления.ПолФизическогоЛица.Женский Тогда
							Значение = 2;
						ИначеЕсли Пол = Перечисления.ПолФизическогоЛица.Мужской Тогда
							Значение = 1;
						Иначе
							Значение = 0;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Значение = 0;
				КонецЕсли;
				
			Иначе
				Значение = 0;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "Гражд" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");
				
				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						Гражданство = ПолучитьГражданство(Результат[0].ФизическоеЛицо, ДатаЗначения);
						
						Если Гражданство = Неопределено Тогда
							Значение = "";
						Иначе
							Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Гражданство, "Код");
						КонецЕсли;
						
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ГраждСтрана" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");
				
				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						Гражданство = ПолучитьГражданство(Результат[0].ФизическоеЛицо, ДатаЗначения);
						
						Если Гражданство = Неопределено Тогда
							Значение = "";
						Иначе
							НаименованияСтраны = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Гражданство, "НаименованиеПолное, Наименование");
							Значение = ?(ПустаяСтрока(НаименованияСтраны.НаименованиеПолное), НаименованияСтраны.Наименование, НаименованияСтраны.НаименованиеПолное);
						КонецЕсли;
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодУдЛичн" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");
				
				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеПаспортныеДанные", Результат[0].ФизическоеЛицо);
						Если УдЛичн = Неопределено Тогда
							Значение = Неопределено;
						Иначе
							ВидДокумента = УдЛичн.ВидДокумента;
							Если ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПустаяСсылка() Тогда
								Значение = "";
							Иначе
								Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидДокумента, "КодМВД");
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ВидУдЛичн" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");
				
				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеПаспортныеДанные", Результат[0].ФизическоеЛицо);
						Если УдЛичн = Неопределено Тогда
							Значение = "";
						Иначе
							ВидДокумента = УдЛичн.ВидДокумента;
							Если ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПустаяСсылка() Тогда
								Значение = "";
							Иначе
								Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидДокумента, "Наименование");
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОрганВыданУдЛичн" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");
				
				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеПаспортныеДанные", Результат[0].ФизическоеЛицо);
						Если УдЛичн = Неопределено Тогда
							Значение = "";
						Иначе
							Значение = УдЛичн.КемВыдан;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодПодрУдЛичн" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");
				
				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеПаспортныеДанные", Результат[0].ФизическоеЛицо);
						Если УдЛичн = Неопределено Тогда
							Значение = "";
						Иначе
							Значение = УдЛичн.КодПодразделения;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СерияУдЛичн" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");
				
				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеПаспортныеДанные", Результат[0].ФизическоеЛицо);
						Если УдЛичн = Неопределено Тогда
							Значение = "";
						Иначе
							Значение = УдЛичн.Серия;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "НомерУдЛичн" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");
				
				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеПаспортныеДанные", Результат[0].ФизическоеЛицо);
						Если УдЛичн = Неопределено Тогда
							Значение = "";
						Иначе
							Значение = УдЛичн.Номер;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ДатаУдЛичн" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");
				
				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = ПустаяДата;
					Иначе
						УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеПаспортныеДанные", Результат[0].ФизическоеЛицо);
						Если УдЛичн = Неопределено Тогда
							Значение = ПустаяДата;
						Иначе
							Значение = УдЛичн.ДатаВыдачи;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Значение = ПустаяДата;
				КонецЕсли;
				
			Иначе
				Значение = ПустаяДата;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрПрописки"
			ИЛИ ИмяПоказателя = "АдрМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = РегламентированнаяОтчетность.АдресВФормате9Запятых(Результат);
				
				Если ПустаяСтрока(Значение) Тогда
					Значение = ПустойАдрес;
				КонецЕсли;
				
			Иначе
				Значение = ПустойАдрес;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрПрописки_XML"
			ИЛИ ИмяПоказателя = "АдрМЖ_XML" Тогда
			
			Если ПБОЮЛ Тогда
				Значение = АдресВXML(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
			Иначе
				Значение = Неопределено;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрПрописки_JSON"
			ИЛИ ИмяПоказателя = "АдрМЖ_JSON" Тогда
			
			Если ПБОЮЛ Тогда
				Значение = АдресВJSON(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
			Иначе
				Значение = Неопределено;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ИндексМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = Результат.Индекс;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СубъектМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = Результат.Регион;
				
			Иначе
				
				Значение = "";
				
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "КодСубъектМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = Результат.КодРегиона;
				
			Иначе
				
				Значение = "";
				
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "РайонМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = Результат.Район;
				
			Иначе
				
				Значение = "";
				
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "ГородМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = Результат.Город;
				
			Иначе
				
				Значение = "";
				
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "НПунктМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = Результат.НаселенныйПункт;
				
			Иначе
				
				Значение = "";
				
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "УлицаМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = Результат.Улица;
				
			Иначе
				
				Значение = "";
				
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "ДомМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = Результат.Дом;
				
			Иначе
				
				Значение = "";
				
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "КорпусМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = Результат.Корпус;
				
			Иначе
				
				Значение = "";
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КвартираМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");
				Значение = Результат.Квартира;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ТелСлуж" Тогда
			
			Если ПБОЮЛ Тогда
			
				Результат = ПолучитьСУчетомКэша(Кэш, "ТелефонОрганизации");
				
				Если Результат <> Неопределено Тогда
					Значение = Результат.Представление;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				
				Значение = "";
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ТелДом" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");
				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						
						Значение = "";
						
					Иначе
						
						Данные = Новый Структура("Тип, Вид", Перечисления.ТипыКонтактнойИнформации.Телефон, ТелефонФизЛица);
						
						Результат2 = Результат[0].ФизическоеЛицо.КонтактнаяИнформация.НайтиСтроки(Данные);
						
						Если Результат2.Количество() > 0 Тогда
							Значение = Результат2[0].Представление;
						Иначе
							Значение = "";
						КонецЕсли;
						
					КонецЕсли;
					
				Иначе
					
					Значение = "";
					
				КонецЕсли;
				
			Иначе
				
				Значение = "";
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдресЭлПочтыИП" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");
				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						
						Значение = "";
						
					Иначе
						
						Данные = Новый Структура("Тип, Вид", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, Справочники.ВидыКонтактнойИнформации.EMailФизическиеЛица);
						
						Результат2 = Результат[0].ФизическоеЛицо.КонтактнаяИнформация.НайтиСтроки(Данные);
						
						Если Результат2.Количество() > 0 Тогда
							Значение = Результат2[0].Представление;
						Иначе
							Значение = "";
						КонецЕсли;
						
					КонецЕсли;
					
				Иначе
					
					Значение = "";
					
				КонецЕсли;
				
			Иначе
				
				Значение = "";
				
			КонецЕсли;
			
		//******************************************************************сведения о руководителе организации
		ИначеЕсли ИмяПоказателя = "РукСсылка" Тогда
			
			Значение = ОтветственныеЛица.Руководитель;
			
		ИначеЕсли ИмяПоказателя = "ФИОРук" Тогда
			
			ФИО = ОтветственныеЛица.РуководительФИО;
			Значение = СокрЛП(СтрШаблон(НСтр("ru = '%1 %2 %3'"), ФИО.Фамилия, ФИО.Имя, ФИО.Отчество));
			
		ИначеЕсли ИмяПоказателя = "ФамилияРук" Тогда
			
			ФИО = ОтветственныеЛица.РуководительФИО;
			Значение = СокрЛП(ФИО.Фамилия);
			
		ИначеЕсли ИмяПоказателя = "ИмяРук" Тогда
			
			ФИО = ОтветственныеЛица.РуководительФИО;
			Значение = СокрЛП(ФИО.Имя);
			
		ИначеЕсли ИмяПоказателя = "ОтчествоРук" Тогда
			
			ФИО = ОтветственныеЛица.РуководительФИО;
			Значение = СокрЛП(ФИО.Отчество);
			
		ИначеЕсли ИмяПоказателя = "ДолжнРукСсылка" Тогда
			
			Значение = ОтветственныеЛица.РуководительДолжность;
			
		ИначеЕсли ИмяПоказателя = "ДолжнРук" Тогда
			
			Значение = СокрЛП(ОтветственныеЛица.РуководительДолжностьПредставление);
			
		ИначеЕсли ИмяПоказателя = "ИННРук" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.Руководитель) Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОтветственныеЛица.Руководитель, "ИНН");
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ДатаРождРук" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.Руководитель) Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОтветственныеЛица.Руководитель, "ДатаРождения");
			Иначе
				Значение = ПустаяДата;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "МестоРождРук" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.Руководитель) Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОтветственныеЛица.Руководитель, "МестоРождения");
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ПолРук" Тогда
			
			Значение = ПолФизическогоЛица(ОтветственныеЛица.Руководитель);
			
		ИначеЕсли ИмяПоказателя = "ГраждРук" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.Руководитель) Тогда
				Гражданство = ПолучитьГражданство(ОтветственныеЛица.Руководитель, Кэш.ДатаЗначения);
				Значение = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Гражданство, "Код"));
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ГраждСтранаРук" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.Руководитель) Тогда
				Гражданство = ПолучитьГражданство(ОтветственныеЛица.Руководитель, Кэш.ДатаЗначения);
				РеквизитыСтраны = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Гражданство, "Наименование, НаименованиеПолное");
				Значение = ?(ПустаяСтрока(РеквизитыСтраны.НаименованиеПолное), РеквизитыСтраны.Наименование, РеквизитыСтраны.НаименованиеПолное);
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ТелРук" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.Руководитель) Тогда
				Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ОтветственныеЛица.Руководитель, ТелефонФизЛица);
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдресЭлПочтыРук" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.Руководитель) Тогда
				Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ОтветственныеЛица.Руководитель, Справочники.ВидыКонтактнойИнформации.EMailФизическиеЛица);
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодУдЛичнРук" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.Руководитель) Тогда
				УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеПаспортныеДанные", ОтветственныеЛица.Руководитель);
				Если УдЛичн = Неопределено Тогда
					Значение = "";
				Иначе
					ВидДокумента = УдЛичн.ВидДокумента;
					Если ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидДокумента, "КодМВД");
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ВидУдЛичнРук" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.Руководитель) Тогда
				УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеПаспортныеДанные", ОтветственныеЛица.Руководитель);
				Если УдЛичн = Неопределено Тогда
					Значение = "";
				Иначе
					ВидДокумента = УдЛичн.ВидДокумента;
					Если ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидДокумента, "Наименование");
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОрганВыданУдЛичнРук" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.Руководитель) Тогда
				УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеПаспортныеДанные", ОтветственныеЛица.Руководитель);
				Если УдЛичн = Неопределено Тогда
					Значение = "";
				Иначе
					Значение = УдЛичн.КемВыдан;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодПодрУдЛичнРук" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.Руководитель) Тогда
				УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеПаспортныеДанные", ОтветственныеЛица.Руководитель);
				Если УдЛичн = Неопределено Тогда
					Значение = "";
				Иначе
					Значение = УдЛичн.КодПодразделения;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СерияУдЛичнРук" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.Руководитель) Тогда
				УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеПаспортныеДанные", ОтветственныеЛица.Руководитель);
				Если УдЛичн = Неопределено Тогда
					Значение = "";
				Иначе
					Значение = УдЛичн.Серия;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "НомерУдЛичнРук" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.Руководитель) Тогда
				УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеПаспортныеДанные", ОтветственныеЛица.Руководитель);
				Если УдЛичн = Неопределено Тогда
					Значение = "";
				Иначе
					Значение = УдЛичн.Номер;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ДатаУдЛичнРук" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.Руководитель) Тогда
				УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеПаспортныеДанные", ОтветственныеЛица.Руководитель);
				Если УдЛичн = Неопределено Тогда
					Значение = "";
				Иначе
					Значение = УдЛичн.ДатаВыдачи;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрМЖРукРФ" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.Руководитель) Тогда
				Адрес = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеАдрес", ОтветственныеЛица.Руководитель);
				Если Адрес <> Неопределено Тогда
					Значение = РегламентированнаяОтчетность.АдресВФормате9Запятых(Адрес);
				Иначе
					Значение = ПустойАдрес;
				КонецЕсли;
			Иначе
				Значение = ПустойАдрес;
			КонецЕсли;
			
			Если ПустаяСтрока(Значение) Тогда
				Значение = ПустойАдрес;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрМЖРукРФ_XML" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.Руководитель) Тогда
				Адрес = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеАдрес", ОтветственныеЛица.Руководитель);
				Если Адрес <> Неопределено Тогда
					Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(Адрес.ЗначенияПолей, Адрес.Представление, Адрес.Вид);
				Иначе
					Значение = Неопределено;
				КонецЕсли;
			Иначе
				Значение = Неопределено;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрМЖРукРФ_JSON" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.Руководитель) Тогда
				Адрес = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеАдрес", ОтветственныеЛица.Руководитель);
				Если Адрес <> Неопределено Тогда
					Значение = ЗначениеАдресаJSON(Адрес);
				Иначе
					Значение = Неопределено;
				КонецЕсли;
			Иначе
				Значение = Неопределено;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ИндексМЖРук" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОРуководителеАдрес", "Индекс", ОтветственныеЛица.Руководитель, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "СубъектМЖРук" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОРуководителеАдрес", "Регион", ОтветственныеЛица.Руководитель, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "КодСубъектМЖРук" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОРуководителеАдрес", "КодРегиона", ОтветственныеЛица.Руководитель, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "РайонМЖРук" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОРуководителеАдрес", "Район", ОтветственныеЛица.Руководитель, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "ГородМЖРук" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОРуководителеАдрес", "Город", ОтветственныеЛица.Руководитель, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "НПунктМЖРук" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОРуководителеАдрес", "НаселенныйПункт", ОтветственныеЛица.Руководитель, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "УлицаМЖРук" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОРуководителеАдрес", "Улица", ОтветственныеЛица.Руководитель, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "ДомМЖРук" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОРуководителеАдрес", "Дом", ОтветственныеЛица.Руководитель, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "КорпусМЖРук" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОРуководителеАдрес", "Корпус", ОтветственныеЛица.Руководитель, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "КвартираМЖРук" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОРуководителеАдрес", "Квартира", ОтветственныеЛица.Руководитель, РоссийскийАдрес);
			
		//*******************************************************************Сведения о главном бухгалтере
		ИначеЕсли ИмяПоказателя = "ФИОБух" ИЛИ ИмяПоказателя = "ФИООтпр" Тогда
			
			ФИО = ОтветственныеЛица.ГлавныйБухгалтерФИО;
			Значение = СокрЛП(СтрШаблон(НСтр("ru = '%1 %2 %3'"), ФИО.Фамилия, ФИО.Имя, ФИО.Отчество));
			
		ИначеЕсли ИмяПоказателя = "ФамилияБух" Тогда
			
			ФИО = ОтветственныеЛица.ГлавныйБухгалтерФИО;
			Значение = СокрЛП(ФИО.Фамилия);
			
		ИначеЕсли ИмяПоказателя = "ИмяБух" Тогда
			
			ФИО = ОтветственныеЛица.ГлавныйБухгалтерФИО;
			Значение = СокрЛП(ФИО.Имя);
			
		ИначеЕсли ИмяПоказателя = "ОтчествоБух" Тогда
			
			ФИО = ОтветственныеЛица.ГлавныйБухгалтерФИО;
			Значение = СокрЛП(ФИО.Отчество);
			
		ИначеЕсли ИмяПоказателя = "ИННБух" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.ГлавныйБухгалтер) Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОтветственныеЛица.ГлавныйБухгалтер, "ИНН");
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ДатаРождБух" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.ГлавныйБухгалтер) Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОтветственныеЛица.ГлавныйБухгалтер, "ДатаРождения");
			Иначе
				Значение = ПустаяДата;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ДатаРождУпПред" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.УполномоченныйПредставитель) Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОтветственныеЛица.УполномоченныйПредставитель, "ДатаРождения");
			Иначе
				Значение = ПустаяДата;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "МестоРождБух" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.ГлавныйБухгалтер) Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОтветственныеЛица.ГлавныйБухгалтер, "МестоРождения");
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "МестоРождУпПред" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.УполномоченныйПредставитель) Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОтветственныеЛица.УполномоченныйПредставитель, "МестоРождения");
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ПолБух" Тогда
			
			Значение = ПолФизическогоЛица(ОтветственныеЛица.ГлавныйБухгалтер);
			
		ИначеЕсли ИмяПоказателя = "ПолУпПред" Тогда
			
			Значение = ПолФизическогоЛица(ОтветственныеЛица.УполномоченныйПредставитель);
			
		ИначеЕсли ИмяПоказателя = "ГраждБух" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.ГлавныйБухгалтер) Тогда
				Гражданство = ПолучитьГражданство(ОтветственныеЛица.ГлавныйБухгалтер, Кэш.ДатаЗначения);
				Значение = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Гражданство, "Код"));
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ГраждСтранаБух" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.ГлавныйБухгалтер) Тогда
				Гражданство = ПолучитьГражданство(ОтветственныеЛица.ГлавныйБухгалтер, Кэш.ДатаЗначения);
				РеквизитыСтраны = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Гражданство, "Наименование, НаименованиеПолное");
				Значение = ?(ПустаяСтрока(РеквизитыСтраны.НаименованиеПолное), РеквизитыСтраны.Наименование, РеквизитыСтраны.НаименованиеПолное);
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ГраждУпПред" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.УполномоченныйПредставитель) Тогда
				Гражданство = ПолучитьГражданство(ОтветственныеЛица.УполномоченныйПредставитель, Кэш.ДатаЗначения);
				Значение = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Гражданство, "Код"));
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ГраждСтранаУпПред" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.УполномоченныйПредставитель) Тогда
				Гражданство = ПолучитьГражданство(ОтветственныеЛица.УполномоченныйПредставитель, Кэш.ДатаЗначения);
				РеквизитыСтраны = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Гражданство, "Наименование, НаименованиеПолное");
				Значение = ?(ПустаяСтрока(РеквизитыСтраны.НаименованиеПолное), РеквизитыСтраны.Наименование, РеквизитыСтраны.НаименованиеПолное);
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ТелБух" ИЛИ ИмяПоказателя = "ТелОтпр" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.ГлавныйБухгалтер) Тогда
				Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ОтветственныеЛица.ГлавныйБухгалтер, ТелефонФизЛица);
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдресЭлПочтыБух" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.ГлавныйБухгалтер) Тогда
				Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ОтветственныеЛица.ГлавныйБухгалтер, Справочники.ВидыКонтактнойИнформации.EMailФизическиеЛица);
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодУдЛичнБух" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.ГлавныйБухгалтер) Тогда
				УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереПаспортныеДанные", ОтветственныеЛица.ГлавныйБухгалтер);
				Если УдЛичн = Неопределено Тогда
					Значение = "";
				Иначе
					ВидДокумента = УдЛичн.ВидДокумента;
					Если ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидДокумента, "КодМВД");
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "ВидУдЛичнБух" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.ГлавныйБухгалтер) Тогда
				УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереПаспортныеДанные", ОтветственныеЛица.ГлавныйБухгалтер);
				Если УдЛичн = Неопределено Тогда
					Значение = "";
				Иначе
					ВидДокумента = УдЛичн.ВидДокумента;
					Если ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидДокумента, "Наименование");
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОрганВыданУдЛичнБух" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.ГлавныйБухгалтер) Тогда
				УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереПаспортныеДанные", ОтветственныеЛица.ГлавныйБухгалтер);
				Если УдЛичн = Неопределено Тогда
					Значение = "";
				Иначе
					Значение = УдЛичн.КемВыдан;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодПодрУдЛичнБух" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.ГлавныйБухгалтер) Тогда
				УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереПаспортныеДанные", ОтветственныеЛица.ГлавныйБухгалтер);
				Если УдЛичн = Неопределено Тогда
					Значение = "";
				Иначе
					Значение = УдЛичн.КодПодразделения;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СерияУдЛичнБух" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.ГлавныйБухгалтер) Тогда
				УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереПаспортныеДанные", ОтветственныеЛица.ГлавныйБухгалтер);
				Если УдЛичн = Неопределено Тогда
					Значение = "";
				Иначе
					Значение = УдЛичн.Серия;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "НомерУдЛичнБух" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.ГлавныйБухгалтер) Тогда
				УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереПаспортныеДанные", ОтветственныеЛица.ГлавныйБухгалтер);
				Если УдЛичн = Неопределено Тогда
					Значение = "";
				Иначе
					Значение = УдЛичн.Номер;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ДатаУдЛичнБух" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.ГлавныйБухгалтер) Тогда
				УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереПаспортныеДанные", ОтветственныеЛица.ГлавныйБухгалтер);
				Если УдЛичн = Неопределено Тогда
					Значение = "";
				Иначе
					Значение = УдЛичн.ДатаВыдачи;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрМЖБухРФ" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.ГлавныйБухгалтер) Тогда
				Адрес = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереАдрес", ОтветственныеЛица.ГлавныйБухгалтер);
				Если Адрес <> Неопределено Тогда
					Значение = РегламентированнаяОтчетность.АдресВФормате9Запятых(Адрес);
				Иначе
					Значение = ПустойАдрес;
				КонецЕсли;
			Иначе
				Значение = ПустойАдрес;
			КонецЕсли;
			
			Если ПустаяСтрока(Значение) Тогда
				Значение = ПустойАдрес;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрМЖБухРФ_XML" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.ГлавныйБухгалтер) Тогда
				Адрес = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереАдрес", ОтветственныеЛица.ГлавныйБухгалтер);
				Если Адрес <> Неопределено Тогда
					Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(Адрес.ЗначенияПолей, Адрес.Представление, Адрес.Вид);
				Иначе
					Значение = Неопределено;
				КонецЕсли;
			Иначе
				Значение = Неопределено;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрМЖБухРФ_JSON" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.ГлавныйБухгалтер) Тогда
				Адрес = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереАдрес", ОтветственныеЛица.ГлавныйБухгалтер);
				Если Адрес <> Неопределено Тогда
					Значение = ЗначениеАдресаJSON(Адрес);
				Иначе
					Значение = Неопределено;
				КонецЕсли;
			Иначе
				Значение = Неопределено;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ИндексМЖБух" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОБухгалтереАдрес", "Индекс", ОтветственныеЛица.ГлавныйБухгалтер, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "СубъектМЖБух" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОБухгалтереАдрес", "Регион", ОтветственныеЛица.ГлавныйБухгалтер, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "КодСубъектМЖБух" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОБухгалтереАдрес", "КодРегиона", ОтветственныеЛица.ГлавныйБухгалтер, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "РайонМЖБух" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОБухгалтереАдрес", "Район", ОтветственныеЛица.ГлавныйБухгалтер, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "ГородМЖБух" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОБухгалтереАдрес", "Город", ОтветственныеЛица.ГлавныйБухгалтер, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "НПунктМЖБух" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОБухгалтереАдрес", "НаселенныйПункт", ОтветственныеЛица.ГлавныйБухгалтер, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "УлицаМЖБух" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОБухгалтереАдрес", "Улица", ОтветственныеЛица.ГлавныйБухгалтер, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "ДомМЖБух" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОБухгалтереАдрес", "Дом", ОтветственныеЛица.ГлавныйБухгалтер, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "КорпусМЖБух" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОБухгалтереАдрес", "Корпус", ОтветственныеЛица.ГлавныйБухгалтер, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "КвартираМЖБух" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОБухгалтереАдрес", "Квартира", ОтветственныеЛица.ГлавныйБухгалтер, РоссийскийАдрес);
			
		//**********************************************Сведения об уполномоченном представителе
		ИначеЕсли ИмяПоказателя = "ФИОУпПред" Тогда
			
			ФИО = ОтветственныеЛица.УполномоченныйПредставительФИО;
			Значение = СокрЛП(СтрШаблон(НСтр("ru = '%1 %2 %3'"), ФИО.Фамилия, ФИО.Имя, ФИО.Отчество));
			
		ИначеЕсли ИмяПоказателя = "ИННУпПред" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.УполномоченныйПредставитель) Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОтветственныеЛица.УполномоченныйПредставитель, "ИНН");
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ТелУпПред" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.УполномоченныйПредставитель) Тогда
				Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ОтветственныеЛица.УполномоченныйПредставитель, ТелефонФизЛица);
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодУдЛичнУпПред" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.УполномоченныйПредставитель) Тогда
				УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеПаспортныеДанные", ОтветственныеЛица.УполномоченныйПредставитель);
				Если УдЛичн = Неопределено Тогда
					Значение = "";
				Иначе
					ВидДокумента = УдЛичн.ВидДокумента;
					Если ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидДокумента, "КодМВД");
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ВидУдЛичнУпПред" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.УполномоченныйПредставитель) Тогда
				УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеПаспортныеДанные", ОтветственныеЛица.УполномоченныйПредставитель);
				Если УдЛичн = Неопределено Тогда
					Значение = "";
				Иначе
					ВидДокумента = УдЛичн.ВидДокумента;
					Если ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидДокумента, "Наименование");
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОрганВыданУдЛичнУпПред" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.УполномоченныйПредставитель) Тогда
				УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеПаспортныеДанные", ОтветственныеЛица.УполномоченныйПредставитель);
				Если УдЛичн = Неопределено Тогда
					Значение = "";
				Иначе
					Значение = УдЛичн.КемВыдан;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодПодрУдЛичнУпПред" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.УполномоченныйПредставитель) Тогда
				УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеПаспортныеДанные", ОтветственныеЛица.УполномоченныйПредставитель);
				Если УдЛичн = Неопределено Тогда
					Значение = "";
				Иначе
					Значение = УдЛичн.КодПодразделения;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СерияУдЛичнУпПред" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.УполномоченныйПредставитель) Тогда
				УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеПаспортныеДанные", ОтветственныеЛица.УполномоченныйПредставитель);
				Если УдЛичн = Неопределено Тогда
					Значение = "";
				Иначе
					Значение = УдЛичн.Серия;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "НомерУдЛичнУпПред" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.УполномоченныйПредставитель) Тогда
				УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеПаспортныеДанные", ОтветственныеЛица.УполномоченныйПредставитель);
				Если УдЛичн = Неопределено Тогда
					Значение = "";
				Иначе
					Значение = УдЛичн.Номер;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ДатаУдЛичнУпПред" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.УполномоченныйПредставитель) Тогда
				УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеПаспортныеДанные", ОтветственныеЛица.УполномоченныйПредставитель);
				Если УдЛичн = Неопределено Тогда
					Значение = ПустаяДата;
				Иначе
					Значение = УдЛичн.ДатаВыдачи;
				КонецЕсли;
			Иначе
				Значение = ПустаяДата;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрМЖУпПредРФ" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.УполномоченныйПредставитель) Тогда
				Адрес = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", ОтветственныеЛица.УполномоченныйПредставитель);
				Если Адрес <> Неопределено Тогда
					Значение = РегламентированнаяОтчетность.АдресВФормате9Запятых(Адрес);
				Иначе
					Значение = ПустойАдрес;
				КонецЕсли;
			Иначе
				Значение = ПустойАдрес;
			КонецЕсли;
			
			Если ПустаяСтрока(Значение) Тогда
				Значение = ПустойАдрес;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрМЖУпПредРФ_XML" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.УполномоченныйПредставитель) Тогда
				Адрес = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", ОтветственныеЛица.УполномоченныйПредставитель);
				Если Адрес <> Неопределено Тогда
					Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(Адрес.ЗначенияПолей, Адрес.Представление, Адрес.Вид);
				Иначе
					Значение = Неопределено;
				КонецЕсли;
			Иначе
				Значение = Неопределено;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрМЖУпПредРФ_JSON" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.УполномоченныйПредставитель) Тогда
				Адрес = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", ОтветственныеЛица.УполномоченныйПредставитель);
				Если Адрес <> Неопределено Тогда
					Значение = ЗначениеАдресаJSON(Адрес);
				Иначе
					Значение = Неопределено;
				КонецЕсли;
			Иначе
				Значение = Неопределено;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ИндексМЖУпПред" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", "Индекс", ОтветственныеЛица.УполномоченныйПредставитель, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "СубъектМЖУпПред" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", "Регион", ОтветственныеЛица.УполномоченныйПредставитель, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "КодСубъектМЖУпПред" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", "КодРегиона", ОтветственныеЛица.УполномоченныйПредставитель, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "РайонМЖУпПред" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", "Район", ОтветственныеЛица.УполномоченныйПредставитель, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "ГородМЖУпПред" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", "Город", ОтветственныеЛица.УполномоченныйПредставитель, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "НПунктМЖУпПред" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", "НаселенныйПункт", ОтветственныеЛица.УполномоченныйПредставитель, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "УлицаМЖУпПред" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", "Улица", ОтветственныеЛица.УполномоченныйПредставитель, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "ДомМЖУпПред" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", "Дом", ОтветственныеЛица.УполномоченныйПредставитель, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "КорпусМЖУпПред" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", "Корпус", ОтветственныеЛица.УполномоченныйПредставитель, РоссийскийАдрес);
			
		ИначеЕсли ИмяПоказателя = "КвартираМЖУпПред" Тогда
			
			Значение = ЧастьАдресаИзКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", "Квартира", ОтветственныеЛица.УполномоченныйПредставитель, РоссийскийАдрес);
			
		//прочие сведения
		ИначеЕсли ИмяПоказателя = "ФаксИсп" Тогда
			
			Значение = "";
			
		ИначеЕсли ИмяПоказателя = "ДолжнОтпр" Тогда
			
			Значение = "ГЛАВНЫЙ БУХГАЛТЕР"
			
		ИначеЕсли ИмяПоказателя = "ПрименяетсяУСН" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "УчетнаяПолитикаНалоговыйУчет");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				ПромежуточноеЗначение = ?(ТипЗнч(Результат) = Тип("Структура"), Результат.ПрименяетсяУСН, Результат[0].ПрименяетсяУСН);
				Если ПромежуточноеЗначение = Истина Тогда
					Значение = 1;
				Иначе
					Значение = 0;
				КонецЕсли;
			Иначе
				Значение = 0;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ПрименяетсяУСНЗаПериод" Тогда
			
			Значение = УчетнаяПолитика.ПрименяетсяУСНЗаПериод(Организация.Ссылка, НачалоГода(ДатаЗначения), ДатаЗначения);
			
		ИначеЕсли ИмяПоказателя = "ДатаПереходаНаУСН" Тогда

			Результат = ПолучитьСУчетомКэша(Кэш, "УчетнаяПолитикаНалоговыйУчет");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Значение = ?(ТипЗнч(Результат) = Тип("Структура"), Результат.ДатаПереходаНаУСН, Результат[0].ДатаПереходаНаУСН);
			Иначе
				Значение = ПустаяДата;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОбъектНалогообложенияУСН" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "УчетнаяПолитикаНалоговыйУчет");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				ПромежуточноеЗначение = ?(ТипЗнч(Результат) = Тип("Структура"), Результат.ОбъектНалогообложенияУСН, Результат[0].ОбъектНалогообложенияУСН);
				Если ПромежуточноеЗначение = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы Тогда
					Значение = 1;
				ИначеЕсли ПромежуточноеЗначение = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы Тогда
					Значение = 2;
				Иначе
					Значение = 0;
				КонецЕсли;
			Иначе
				Значение = 0;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СтавкаНалогаУСН" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "УчетнаяПолитикаНалоговыйУчет");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				ПромежуточноеЗначение = ?(ТипЗнч(Результат) = Тип("Структура"), Результат.ОбъектНалогообложенияУСН, Результат[0].ОбъектНалогообложенияУСН);
				Если ПромежуточноеЗначение = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы Тогда
					Значение = ?(ТипЗнч(Результат) = Тип("Структура"), Результат.СтавкаНалога, Результат[0].СтавкаНалога);
					Значение = ?(ТипЗнч(Значение) = Тип("Число"), Значение, 6);
				ИначеЕсли ПромежуточноеЗначение = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы Тогда
					Значение = ?(ТипЗнч(Результат) = Тип("Структура"), Результат.СтавкаНалога, Результат[0].СтавкаНалога);
					Значение = ?(ТипЗнч(Значение) = Тип("Число"), Значение, 15);
				Иначе
					Значение = 0;
				КонецЕсли;
			Иначе
				Значение = 0;
			КонецЕсли;
						
		//сведения о банковском счете организации
		ИначеЕсли ИмяПоказателя = "БанкСчетНомер" Тогда
			
			БанкСчет = Организация.ОсновнойБанковскийСчет;
			Если БанкСчет = Справочники.БанковскиеСчета.ПустаяСсылка()
				Или Не ОбщегоНазначения.СсылкаСуществует(БанкСчет) Тогда
				Значение = "";
			Иначе
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БанкСчет, "НомерСчета");
			КонецЕсли;
						
		ИначеЕсли ИмяПоказателя = "БанкСчетНаимБанка" Тогда
			
			БанкСчет = Организация.ОсновнойБанковскийСчет;
			Если БанкСчет = Справочники.БанковскиеСчета.ПустаяСсылка()
				Или Не ОбщегоНазначения.СсылкаСуществует(БанкСчет) Тогда
				Значение = "";
			Иначе
				Банк = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БанкСчет, "Банк");
				Если Банк = Справочники.Банки.ПустаяСсылка()
					Или Не ОбщегоНазначения.СсылкаСуществует(Банк) Тогда
					Значение = "";
				Иначе
					Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Банк, "Наименование");
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "БанкСчетКоррСчетБанка" Тогда
			
			БанкСчет = Организация.ОсновнойБанковскийСчет;
			Если БанкСчет = Справочники.БанковскиеСчета.ПустаяСсылка()
				Или Не ОбщегоНазначения.СсылкаСуществует(БанкСчет) Тогда
				Значение = "";
			Иначе
				Банк = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БанкСчет, "Банк");
				Если Банк = Справочники.Банки.ПустаяСсылка()
					Или Не ОбщегоНазначения.СсылкаСуществует(Банк) Тогда
					Значение = "";
				Иначе
					Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Банк, "КоррСчет");
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "БанкСчетБИКБанка" Тогда
			
			БанкСчет = Организация.ОсновнойБанковскийСчет;
			Если БанкСчет = Справочники.БанковскиеСчета.ПустаяСсылка()
				Или Не ОбщегоНазначения.СсылкаСуществует(БанкСчет) Тогда
				Значение = "";
			Иначе
				Банк = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БанкСчет, "Банк");
				Если Банк = Справочники.Банки.ПустаяСсылка()
					Или Не ОбщегоНазначения.СсылкаСуществует(Банк) Тогда
					Значение = "";
				Иначе
					Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Банк, "Код");
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "НаимГоловнОрг" Тогда
			
			Если Организация.ГоловнаяОрганизация = Организация.Ссылка Тогда
				Значение = "";
			Иначе
				Значение = Справочники.Организации.НаименованияНаДату(Организация.Ссылка, ДатаЗначения).ПолноеНаименование;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КППГоловнОрг" Тогда
			
			Если Организация.ГоловнаяОрганизация = Организация.Ссылка Тогда
				Значение = "";
			Иначе
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация.ГоловнаяОрганизация, "КПП");
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ФИОИсп" Или ИмяПоказателя = "ФИООтвСтатистика" Тогда
			
			ФИО = ОтветственныеЛица.ИсполнительФИО;
			Значение = СокрЛП(СтрШаблон(НСтр("ru = '%1 %2 %3'"), ФИО.Фамилия, ФИО.Имя, ФИО.Отчество));
			
		ИначеЕсли ИмяПоказателя = "ДолжнИсп" Или ИмяПоказателя = "ДолжнОтвСтатистика" Тогда
			
			Значение = СокрЛП(ОтветственныеЛица.ИсполнительДолжностьПредставление);
			
		ИначеЕсли ИмяПоказателя = "ТелИсп" Или ИмяПоказателя = "ТелОтвСтатистика" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.Исполнитель) Тогда
				Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ОтветственныеЛица.Исполнитель, ТелефонФизЛица);
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдресЭлПочтыИсп" Или ИмяПоказателя = "АдресЭлПочтыОтвСтатистика" Тогда
			
			Если ЗначениеЗаполнено(ОтветственныеЛица.Исполнитель) Тогда
				Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ОтветственныеЛица.Исполнитель, Справочники.ВидыКонтактнойИнформации.EMailФизическиеЛица);
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ШифрСтрахователяФСС" Тогда
			
			Тарифы = РегистрыСведений.ПрименяемыеТарифыСтраховыхВзносов.СрезПоследних(ДатаЗначения, Новый Структура("ГоловнаяОрганизация", Организация.Ссылка));
			
			Если Тарифы.Количество() > 0 Тогда
				Значение = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Тарифы[0].ВидТарифа, "КодФСС2012"));
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодТарифаПлательщикаПоУмолчаниюДляРСВ" Тогда
			
			Тарифы = РегистрыСведений.ПрименяемыеТарифыСтраховыхВзносов.СрезПоследних(ДатаЗначения, Новый Структура("ГоловнаяОрганизация", Организация.Ссылка));
			
			Если Тарифы.Количество() > 0 Тогда
				Значение = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Тарифы[0].ВидТарифа, "КодФНС"));
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СистемыНалогообложения" Тогда
			
			Значение = "";
			
			УчетныеПолитики = РегистрыСведений.НастройкиСистемыНалогообложения.СрезПоследних(ДатаЗначения, Новый Структура("Организация", Организация.Ссылка));
			
			Если УчетныеПолитики.Количество() > 0 Тогда
				ДействующаяУчетнаяПолитика = УчетныеПолитики[0];
				
				Если Организация.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
					Если ДействующаяУчетнаяПолитика.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая Тогда
						Значение = "ОСНО";
					ИначеЕсли ДействующаяУчетнаяПолитика.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Упрощенная Тогда
						Значение = "УСН";
					КонецЕсли;
					
					Если ЗначениеЗаполнено(Значение) И ДействующаяУчетнаяПолитика.ПлательщикЕНВД Тогда
						Значение = Значение + ",ЕНВД";
					КонецЕсли;
					
				ИначеЕсли Организация.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
					Если ДействующаяУчетнаяПолитика.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая Тогда
						Значение = "ОСНО"
						         + ?(ДействующаяУчетнаяПолитика.ПлательщикЕНВД, ",ЕНВД", "")
						         + ?(ДействующаяУчетнаяПолитика.ПрименяетсяУСНПатент, ",ПСН", "");
						
					ИначеЕсли ДействующаяУчетнаяПолитика.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Упрощенная Тогда
						Значение = "УСН"
						         + ?(ДействующаяУчетнаяПолитика.ПлательщикЕНВД, ",ЕНВД", "")
						         + ?(ДействующаяУчетнаяПолитика.ПрименяетсяУСНПатент, ",ПСН", "");
						
					ИначеЕсли ДействующаяУчетнаяПолитика.СистемаНалогообложения = Перечисления.СистемыНалогообложения.ОсобыйПорядок Тогда
						Если ДействующаяУчетнаяПолитика.ПлательщикЕНВД Тогда
							Значение = "ЕНВД";
						ИначеЕсли ДействующаяУчетнаяПолитика.ПрименяетсяУСНПатент Тогда
							Значение = "ПСН";
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ВидПлательщикаСтраховыхВзносов" Тогда
			
			Значение = "00";
			
		Иначе
			
			Значение = "";//если вернуть строку - больше шансов угадать, так как большинство сведений - строковые
			
		КонецЕсли;
		
		ОргСведения.Вставить(ИмяПоказателя, Значение);
		
	КонецЦикла;
	
	Возврат ОргСведения;
	
КонецФункции

Функция РеквизитыОбязательныеДляОтчета(ИмяОтчета, Организация, ПериодОтчета) Экспорт
	
	Если ПериодОтчета < Дата(2014, 1, 1) Тогда
		// Проверка реквизитов отчетных форм за периоды ранее 2014 года не поддерживается.
		Возврат Новый Массив;
	КонецЕсли;
	
	ЭтоЮрлицо = ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Организация);
	
	СтрокаРеквизиты = "";
	
	Если ИмяОтчета = "РегламентированныйОтчет3НДФЛ" Тогда
		
		// Отчет требуется только предпринимателям
		Если НЕ ЭтоЮрлицо Тогда
			СтрокаРеквизиты = "ФамилияИП, ИмяИП, ИНН, Адрес, КодПоОКТМО, КодНалоговогоОргана";
		КонецЕсли;
		
	ИначеЕсли ИмяОтчета = "РегламентированныйОтчет4НДФЛ" Тогда
		
		// Отчет требуется только предпринимателям
		Если НЕ ЭтоЮрлицо Тогда
			СтрокаРеквизиты = "ФамилияИП, ИмяИП, КодПоОКТМО, КодНалоговогоОргана";
		КонецЕсли;
		
	ИначеЕсли ИмяОтчета = "РегламентированныйОтчет4ФСС" Тогда
		
		Если ЭтоЮрлицо Тогда
			СтрокаРеквизиты = "ИНН, КПП, РегистрационныйНомерФСС, КодПодчиненностиФСС, РуководительФамилия, РуководительИмя";
		Иначе
			СтрокаРеквизиты = "ФамилияИП, ИмяИП, ИНН, РегистрационныйНомерФСС, КодПодчиненностиФСС";
		КонецЕсли;
		
	ИначеЕсли ИмяОтчета = "РегламентированныйОтчет6НДФЛ" Тогда
		
		Если ЭтоЮрлицо Тогда
			СтрокаРеквизиты = "ИНН, КПП, КодПоОКТМО, КодНалоговогоОргана, РуководительФамилия, РуководительИмя";
		Иначе
			СтрокаРеквизиты = "ФамилияИП, ИмяИП, ИНН, КодПоОКТМО, КодНалоговогоОргана";
		КонецЕсли;
		
	ИначеЕсли ИмяОтчета = "РегламентированныйОтчетАвансыИмущество" Тогда
		
		// Отчет требуется только организациям
		Если ЭтоЮрлицо Тогда
			СтрокаРеквизиты = "НаименованиеСокращенное, НаименованиеПолное, ИНН, КПП, КодПоОКТМО, КодНалоговогоОргана, КодОКВЭД2, РуководительФамилия, РуководительИмя";
		КонецЕсли;
		
	ИначеЕсли ИмяОтчета = "РегламентированныйОтчетБухОтчетность" Тогда
		
		// Отчет требуется только организациям
		Если ЭтоЮрлицо Тогда
			СтрокаРеквизиты = "НаименованиеСокращенное, НаименованиеПолное, ИНН, КПП, Адрес, КодНалоговогоОргана, КодОКВЭД2, НаименованиеОКВЭД2, РуководительФамилия, РуководительИмя";
		КонецЕсли;
		
	ИначеЕсли ИмяОтчета = "РегламентированныйОтчетБухОтчетностьМП" Тогда
		
		// Отчет требуется только организациям
		Если ЭтоЮрлицо Тогда
			СтрокаРеквизиты = "НаименованиеСокращенное, НаименованиеПолное, ИНН, КПП, Адрес, КодНалоговогоОргана, КодОКВЭД2, НаименованиеОКВЭД2, РуководительФамилия, РуководительИмя";
		КонецЕсли;
		
	ИначеЕсли ИмяОтчета = "РегламентированныйОтчетВода" Тогда
		
		Если ЭтоЮрлицо Тогда
			СтрокаРеквизиты = "НаименованиеСокращенное, НаименованиеПолное, ИНН, КПП, КодПоОКТМО, КодНалоговогоОргана, КодОКВЭД2, РуководительФамилия, РуководительИмя";
		Иначе
			СтрокаРеквизиты = "ФамилияИП, ИмяИП, ИНН, КодПоОКТМО, КодНалоговогоОргана, КодОКВЭД2";
		КонецЕсли;
		
	ИначеЕсли ИмяОтчета = "РегламентированныйОтчетЕСХН" Тогда
		
		Если ЭтоЮрлицо Тогда
			СтрокаРеквизиты = "НаименованиеСокращенное, НаименованиеПолное, ИНН, КПП, КодПоОКТМО, КодНалоговогоОргана, КодОКВЭД2, РуководительФамилия, РуководительИмя";
		Иначе
			СтрокаРеквизиты = "ФамилияИП, ИмяИП, ИНН, КодПоОКТМО, КодНалоговогоОргана, КодОКВЭД2";
		КонецЕсли;
		
	ИначеЕсли ИмяОтчета = "РегламентированныйОтчетЕУНД" Тогда
		
		Если ЭтоЮрлицо Тогда
			СтрокаРеквизиты = "НаименованиеСокращенное, НаименованиеПолное, ИНН, КПП, КодПоОКТМО, КодНалоговогоОргана, КодОКВЭД2, РуководительФамилия, РуководительИмя";
		Иначе
			СтрокаРеквизиты = "ФамилияИП, ИмяИП, ИНН, КодПоОКТМО, КодНалоговогоОргана, КодОКВЭД2";
		КонецЕсли;
		
	ИначеЕсли ИмяОтчета = "РегламентированныйОтчетЗемельныйНалог" Тогда
		
		// Отчет требуется только организациям
		Если ЭтоЮрлицо Тогда
			СтрокаРеквизиты = "НаименованиеСокращенное, НаименованиеПолное, ИНН, КПП, КодПоОКТМО, КодНалоговогоОргана, РуководительФамилия, РуководительИмя";
			// Начиная с декларации за 2017 год код ОКВЭД не требуется
			Если ПериодОтчета < '20170101' Тогда
				СтрокаРеквизиты = СтрокаРеквизиты + ",КодОКВЭД2";
			КонецЕсли;	
		КонецЕсли;
		
	ИначеЕсли ИмяОтчета = "РегламентированныйОтчетИмущество" Тогда
		
		// Отчет требуется только организациям
		Если ЭтоЮрлицо Тогда
			СтрокаРеквизиты = "НаименованиеСокращенное, НаименованиеПолное, ИНН, КПП, КодПоОКТМО, КодНалоговогоОргана, РуководительФамилия, РуководительИмя";
			// Начиная с декларации за 2017 год код ОКВЭД не требуется
			Если ПериодОтчета < '20170101' Тогда
				СтрокаРеквизиты = СтрокаРеквизиты + ",КодОКВЭД2";
			КонецЕсли;	
		КонецЕсли;
		
	ИначеЕсли ИмяОтчета = "РегламентированныйОтчетНДС" Тогда
		
		Если ЭтоЮрлицо Тогда
			СтрокаРеквизиты = "НаименованиеСокращенное, НаименованиеПолное, ИНН, КПП, КодПоОКТМО, КодНалоговогоОргана, КодОКВЭД2, РуководительФамилия, РуководительИмя";
		Иначе
			СтрокаРеквизиты = "ФамилияИП, ИмяИП, ИНН, КодПоОКТМО, КодНалоговогоОргана, КодОКВЭД2";
		КонецЕсли;
		
	ИначеЕсли ИмяОтчета = "РегламентированныйОтчетПрибыль" Тогда
		
		// Отчет требуется только организациям
		Если ЭтоЮрлицо Тогда
			СтрокаРеквизиты = "НаименованиеСокращенное, НаименованиеПолное, ИНН, КПП, КодПоОКТМО, КодНалоговогоОргана, КодОКВЭД2, РуководительФамилия, РуководительИмя";
		КонецЕсли;
		
	ИначеЕсли ИмяОтчета = "РегламентированныйОтчетСведенияОСреднесписочнойЧисленностиРаботников" Тогда
		
		Если ЭтоЮрлицо Тогда
			СтрокаРеквизиты = "НаименованиеСокращенное, НаименованиеПолное, ИНН, КПП, КодПоОКТМО, КодНалоговогоОргана, РуководительФамилия, РуководительИмя";
		Иначе
			СтрокаРеквизиты = "ФамилияИП, ИмяИП, ИНН, КодПоОКТМО, КодНалоговогоОргана";
		КонецЕсли;
		
	ИначеЕсли ИмяОтчета = "РегламентированныйОтчетТранспортныйНалог" Тогда
		
		// Отчет требуется только организациям
		Если ЭтоЮрлицо Тогда
			СтрокаРеквизиты = "НаименованиеСокращенное, НаименованиеПолное, ИНН, КПП, КодПоОКТМО, КодНалоговогоОргана, КодОКВЭД2, РуководительФамилия, РуководительИмя";
		КонецЕсли;
		
	ИначеЕсли ИмяОтчета = "РегламентированныйОтчетУСН" Тогда
		
		Если ЭтоЮрлицо Тогда
			СтрокаРеквизиты = "НаименованиеСокращенное, НаименованиеПолное, ИНН, КПП, КодПоОКТМО, КодНалоговогоОргана, КодОКВЭД2, РуководительФамилия, РуководительИмя";
		Иначе
			СтрокаРеквизиты = "ФамилияИП, ИмяИП, ИНН, КодПоОКТМО, КодНалоговогоОргана, КодОКВЭД2";
		КонецЕсли;
		
	ИначеЕсли СтрНачинаетсяС(ИмяОтчета, "РегламентированныйОтчетСтатистика") Тогда
		
		Если ЭтоЮрлицо Тогда
			СтрокаРеквизиты = "НаименованиеСокращенное, НаименованиеПолное, КодПоОКПО, Телефон, КодОКВЭД2, РуководительФамилия, РуководительИмя, РуководительДолжность";
		Иначе
			СтрокаРеквизиты = "ФамилияИП, ИмяИП, ИНН, КодПоОКПО, Телефон";
		КонецЕсли;
	
	КонецЕсли;
	
	СтрокаРеквизиты = СтрЗаменить(СтрокаРеквизиты, " ", "");
	
	Возврат СтрРазделить(СтрокаРеквизиты, ",", Ложь);
	
КонецФункции

// Возвращает двоичные данные регламентированного отчета, выгруженного в файл. Если выгрузка невозможна - возвращает Неопределено.
//
// Параметры:
//  Документ - ДокументСсылка.РегламентированныйОтчет
//  Ошибки - Массив строк - исходящий параметр
// 
// Возвращаемое значение:
//   - ДвоичныеДанные, Неопределено
//
Функция ДвоичныеДанныеРегламентированногоОтчета(РегламентированныйОтчет, Ошибки = Неопределено) Экспорт
	
	РезультатВыгрузки = ИнтерфейсыВзаимодействияБРО.ВыгрузитьРегламентированныйОтчет(РегламентированныйОтчет);
	Если Не РезультатВыгрузки.РеглОтчетВыгружен Тогда
		Ошибки = РезультатВыгрузки.Ошибки;
		Возврат Неопределено;
	КонецЕсли;
	
	Если Не ЭтоАдресВременногоХранилища(РезультатВыгрузки.АдресФайлаВыгрузки) Тогда
		ВызватьИсключение НСтр("ru = 'РегламентированнаяОтчетностьБП.ДвоичныеДанныеРегламентированногоОтчета(): АдресФайлаВыгрузки не является адресом временного хранилища'");
	КонецЕсли;
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(РезультатВыгрузки.АдресФайлаВыгрузки);
	Если ТипЗнч(ДвоичныеДанные) <> Тип("ДвоичныеДанные") Тогда
		ВызватьИсключение НСтр("ru = 'РегламентированнаяОтчетностьБП.ДвоичныеДанныеРегламентированногоОтчета(): АдресФайлаВыгрузки не содержит двоичные данные'");
	КонецЕсли;
	
	ИмяВременногоКаталога = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(ИмяВременногоКаталога);
	
	ИмяВременногоФайлаОтчета = ИмяВременногоКаталога + ПолучитьРазделительПути() + РезультатВыгрузки.ИмяФайлаВыгрузки;
	ДвоичныеДанные.Записать(ИмяВременногоФайлаОтчета);
	
	Возврат ПереместитьФайлВАрхив(ИмяВременногоФайлаОтчета);
	
КонецФункции

// Возвращает двоичные данные на основании готовой выгрузки регламентированного отчета.
//
// Параметры:
//  ДанныеОтчета - Структура - содержит данные выгрузки регламентированного отчета:
//   * ТекстВыгрузки          - Строка - Текст выгрузки отчета или адрес во временном хранилище,
//   * ИмяФайлаВыгрузки       - Строка - Имя файла выгрузки,
//   * КодировкаФайлаВыгрузки - Строка - Кодировка файла выгрузки,
//   * ТипФайлаВыгрузки       - Строка - Зарезервировано для выгрузки комплекта файлов.
//  Ошибки - Массив строк - исходящий параметр
// 
// Возвращаемое значение:
//   - ДвоичныеДанные, Неопределено
//
Функция ДвоичныеДанныеВыгрузкиРегламентированногоОтчета(ДанныеОтчета, Ошибки = Неопределено) Экспорт
	
	ИмяВременногоКаталога = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(ИмяВременногоКаталога);
	
	ИмяВременногоФайлаОтчета = ИмяВременногоКаталога + ПолучитьРазделительПути() + ДанныеОтчета.ИмяФайлаВыгрузки;
	
	Если ЭтоАдресВременногоХранилища(ДанныеОтчета.ТекстВыгрузки) Тогда
		
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ДанныеОтчета.ТекстВыгрузки);
		Если ТипЗнч(ДвоичныеДанные) <> Тип("ДвоичныеДанные") Тогда
			Ошибки = НСтр("ru = 'Текст выгрузки не сформирован'");
			Возврат Неопределено;
		КонецЕсли;
		
		ДвоичныеДанные.Записать(ИмяВременногоФайлаОтчета);
		
	Иначе
		
		Если ПустаяСтрока(ДанныеОтчета.ТекстВыгрузки) Тогда
			Ошибки = НСтр("ru = 'Текст выгрузки не сформирован'");
			Возврат Неопределено;
		КонецЕсли;
		
		ПотокВыгрузки = Новый ТекстовыйДокумент();
		ПотокВыгрузки.ДобавитьСтроку(ДанныеОтчета.ТекстВыгрузки);
		ПотокВыгрузки.Записать(ИмяВременногоФайлаОтчета, ДанныеОтчета.КодировкаФайлаВыгрузки);
		
	КонецЕсли;
	
	Возврат ПереместитьФайлВАрхив(ИмяВременногоФайлаОтчета);
	
КонецФункции

Функция ПереместитьФайлВАрхив(ИмяФайла)
	
	Архив = Новый ЗаписьZipФайла;
	Архив.Добавить(ИмяФайла);
	ДвоичныеДанныеАрхива = Архив.ПолучитьДвоичныеДанные();
	
	Попытка
		УдалитьФайлы(ИмяФайла);
	Исключение
		ЗаписьЖурналаРегистрации(СтрШаблон(НСтр("ru = 'Не удалось удалить файл %1'"), ИмяФайла),
			УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	Возврат ДвоичныеДанныеАрхива;
	
КонецФункции

Функция СоздатьОбновитьРегламентированныйОтчет(Организация, ИсточникОтчета, ДатаНачала, ДатаОкончания) Экспорт
	
	РегламентированныйОтчет = ИнтерфейсыВзаимодействияБРО.АктуальныйОтчет(ИсточникОтчета, Организация, ДатаОкончания);
	
	ПараметрыАвтоформирования = ПараметрыАвтоформированияРегламентированногоОтчета(Организация, ИсточникОтчета,
		ДатаНачала, ДатаОкончания);
	
	Если ЗначениеЗаполнено(РегламентированныйОтчет) Тогда
		// Если регламентированный отчет уже создан - обновляем его.
		ПараметрыАвтоформирования.СсылкаНаСохрРеглОтчет = РегламентированныйОтчет;
	КонецЕсли;
	
	РегламентированныйОтчет = ИнтерфейсыВзаимодействияБРО.СформироватьАвтоматическиРеглОтчет(ИсточникОтчета,
		Организация, ДатаНачала, ДатаОкончания, Ложь, , ПараметрыАвтоформирования);
	
	Возврат РегламентированныйОтчет;
	
КонецФункции

Функция Используется1СОтчетность() Экспорт
	
	// В простом режиме интеграции с банком 1С:Отчетность не используется.
	// Регламентированные отчеты отправляются в банк, а затем банк отправляет их в налоговую инспекцию.
	// Во всех остальных случаях 1С:Отчетность доступна.
	
	Возврат Не ИнтеграцияСБанкамиПовтИсп.ИнтеграцияВИнформационнойБазеВключена()
		Или Константы.Использовать1СОтчетностьПриИнтеграцииСБанком.Получить();
	
КонецФункции

Процедура УстановитьОпции1СОтчетности() Экспорт
	
	Константы.ПоказыватьЭлементы1СОтчетности.СоздатьМенеджерЗначения().УстановитьЗначениеПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти

#Область ЛокальныеСлужебныеПроцедурыИФункции

Функция ПолучитьСУчетомКэша(Кэш, Параметр, ФизЛицо = Неопределено)
	Перем ЗначениеПараметра;
	Перем Ставки;
	
	Если Кэш.Свойство(Параметр, ЗначениеПараметра) Тогда
		Возврат ЗначениеПараметра;
	КонецЕсли;
	
	Если Параметр = "СтавкаНалогаНаПрибыль" Тогда
		
		Результат = Новый Структура;
		Результат.Вставить("СтавкаФБ",        0);
		Результат.Вставить("СтавкаСубъектРФ", 0);
		Результат.Вставить("СтавкаМестный",   0);   // Для совместимости
		
		Результат.СтавкаФБ        = НалоговыйУчет.НалоговаяСтавкаФедеральныйБюджет(Кэш.ДатаЗначения,  Кэш.Организация.Ссылка, "%");
		Результат.СтавкаСубъектРФ = НалоговыйУчет.НалоговаяСтавкаРегиональныйБюджет(Кэш.ДатаЗначения, Кэш.Организация.Ссылка, "%");
		
	ИначеЕсли Параметр = "ЮрАдресОрганизации" ИЛИ Параметр = "ФактАдресОрганизации" Тогда
		
		ВидКонтактнойИнформации = ?(Параметр = "ЮрАдресОрганизации",Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации , Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
		Результат = УправлениеКонтактнойИнформациейБП.АдресСтруктурой(Кэш.Организация.Ссылка, ВидКонтактнойИнформации, Кэш.ДатаЗначения);
		
	ИначеЕсли Параметр = "СведенияОбИндивидуальномПредпринимателе" Тогда
		Если Кэш.Организация.Метаданные().Реквизиты.Найти("ИндивидуальныйПредприниматель") <> Неопределено Тогда
			Результат = Новый Массив;
			Результат.Добавить(Новый Структура("ФизическоеЛицо", Кэш.Организация.ИндивидуальныйПредприниматель));
		КонецЕсли;
	ИначеЕсли Параметр = "ТелефонОрганизации" Тогда
		ЭлементТелефон = Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации;
		Данные = Новый Структура("Тип, Вид", Перечисления.ТипыКонтактнойИнформации.Телефон, ЭлементТелефон);
		Результат = Кэш.Организация.КонтактнаяИнформация.НайтиСтроки(Данные);
		Если Результат.Количество() > 0 Тогда
			Результат = Результат[0];
		Иначе
			Результат = Неопределено;
		КонецЕсли;
	ИначеЕсли Параметр = "ФаксОрганизации" Тогда
		ЭлементФакс = Справочники.ВидыКонтактнойИнформации.ФаксОрганизации;
		Данные = Новый Структура("Тип, Вид", Перечисления.ТипыКонтактнойИнформации.Факс, ЭлементФакс);
		Результат = Кэш.Организация.КонтактнаяИнформация.НайтиСтроки(Данные);
		Если Результат.Количество() > 0 Тогда
			Результат = Результат[0];
		Иначе
			Результат = Неопределено;
		КонецЕсли;
	ИначеЕсли Параметр = "УчетнаяПолитикаНалоговыйУчет" Тогда
		Результат = НастройкиУчета.УчетнаяПолитикаНалоговыйУчет(Кэш.ДатаЗначения, Кэш.Организация.Ссылка);
	ИначеЕсли Параметр = "СведенияОбИндивидуальномПредпринимателеПаспортныеДанные" 
		ИЛИ Параметр = "СведенияОРуководителеПаспортныеДанные"
		ИЛИ Параметр = "СведенияОБухгалтереПаспортныеДанные"
		ИЛИ Параметр = "СведенияОУполномоченномПредставителеПаспортныеДанные" Тогда
		
		ДанныеФизическогоЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Кэш.Организация.Ссылка, ФизЛицо, Кэш.ДатаЗначения);
		Если Не ЗначениеЗаполнено(ДанныеФизическогоЛица.ВидДокумента) Тогда
			Результат = Неопределено;
		Иначе
			Результат = Новый Структура("Физлицо,ВидДокумента,Серия,Номер,ДатаВыдачи,КемВыдан,КодПодразделения");
			Результат.Физлицо = Физлицо;
			ЗаполнитьЗначенияСвойств(Результат, ДанныеФизическогоЛица);
		КонецЕсли;
		
	ИначеЕсли Параметр = "СведенияОРуководителеАдрес" 
		ИЛИ Параметр = "СведенияОБухгалтереАдрес" 
		ИЛИ Параметр = "СведенияОУполномоченномПредставителеАдрес" Тогда
		
		Данные = Новый Структура("Тип, Вид", Перечисления.ТипыКонтактнойИнформации.Адрес, Справочники.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица);
		Результат = ФизЛицо.КонтактнаяИнформация.НайтиСтроки(Данные);
		Если Результат.Количество() > 0 Тогда
			Результат = Результат[0];
		Иначе
			Результат = Неопределено;
		КонецЕсли;
		
	ИначеЕсли Параметр = "Гражданство" 
		ИЛИ Параметр = "СведенияОРуководителеГражданство" 
		ИЛИ Параметр = "СведенияОБухгалтереГражданство" 
		ИЛИ Параметр = "СведенияОУполномоченномПредставителеГражданство" Тогда
		
		Результат = ПолучитьГражданство(ФизЛицо, Кэш.ДатаЗначения);
	КонецЕсли;
				
	Кэш.Вставить(Параметр, Результат);
	Возврат Результат;
	
КонецФункции

Функция ПолучитьГражданство(ФизЛицо, ДатаЗначения) 
	
	Гражд = РегистрыСведений.ГражданствоФизическихЛиц.СрезПоследних(ДатаЗначения, Новый Структура("ФизическоеЛицо", ФизЛицо));
	
	Если Гражд.Количество() > 0 Тогда
		Возврат Гражд[0].Страна;
	Иначе
		Возврат Справочники.СтраныМира.Россия;
	КонецЕсли;
	
КонецФункции

Функция ЧастьАдресаИзКэша(Кэш, ТипАдреса, ТипЧастиАдреса, ФизическоеЛицо, РоссийскийАдрес)
	
	Если ЗначениеЗаполнено(ФизическоеЛицо) Тогда
		Адрес = ПолучитьСУчетомКэша(Кэш, ТипАдреса, ФизическоеЛицо);
		Если Адрес <> Неопределено Тогда
			РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Адрес.ЗначенияПолей, РоссийскийАдрес);
			Значение = РоссийскийАдрес[ТипЧастиАдреса];
		Иначе
			Значение = "";
		КонецЕсли;
	Иначе
		Значение = "";
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции

Функция ПолФизическогоЛица(ФизическоеЛицо)
	
	Если ЗначениеЗаполнено(ФизическоеЛицо) Тогда
		ПолРуководителя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ФизическоеЛицо, "Пол");
		Если ПолРуководителя = Перечисления.ПолФизическогоЛица.Женский Тогда
			Значение = 2;
		ИначеЕсли ПолРуководителя = Перечисления.ПолФизическогоЛица.Мужской Тогда
			Значение = 1;
		Иначе
			Значение = 0;
		КонецЕсли;
	Иначе
		Значение = 0;
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции

Функция АдресВXML(КонтактнаяИнформация, ВидАдреса)
	
	Данные = Новый Структура("Тип, Вид", Перечисления.ТипыКонтактнойИнформации.Адрес, ВидАдреса);
	
	Результат = КонтактнаяИнформация.НайтиСтроки(Данные);
	
	Если Результат.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(Результат[0].ЗначенияПолей, Результат[0].Представление, ВидАдреса);
	
КонецФункции

Функция АдресВJSON(КонтактнаяИнформация, ВидАдреса)
	
	Данные = Новый Структура("Тип, Вид", Перечисления.ТипыКонтактнойИнформации.Адрес, ВидАдреса);
	
	Результат = КонтактнаяИнформация.НайтиСтроки(Данные);
	
	Если Результат.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ЗначениеАдресаJSON(Результат[0]);
	
КонецФункции

Функция ЗначениеАдресаJSON(Адрес)
	
	Если ЗначениеЗаполнено(Адрес.Значение) Тогда
		Возврат Адрес.Значение;
	Иначе
		Возврат УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВJSON(Адрес.ЗначенияПолей, Адрес.Вид);
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ФормированиеОтчетности

Функция ПараметрыАвтоформированияРегламентированногоОтчета(Организация, ИсточникОтчета, ДатаНачала, ДатаОкончания)
	
	ПараметрыАвтоформирования = ИнтерфейсыВзаимодействияБРО.НовыйПараметрыАвтоформированияОтчета();
	ПараметрыАвтоформирования.ИсточникОтчета = ИсточникОтчета;
	ПараметрыАвтоформирования.ИмяФормыОтчета = РегламентированнаяОтчетностьВызовСервера.ИмяФормыРеглОтчетаДействующейВОтчетномПериоде(
		ИсточникОтчета, ДатаОкончания);
	ПараметрыАвтоформирования.Организация = Организация;
	ПараметрыАвтоформирования.ДатаНачала = ДатаНачала;
	ПараметрыАвтоформирования.ДатаОкончания = ДатаОкончания;
	Возврат ПараметрыАвтоформирования;
	
КонецФункции

#КонецОбласти