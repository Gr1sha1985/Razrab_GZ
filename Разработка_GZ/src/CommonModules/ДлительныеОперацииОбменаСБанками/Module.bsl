#Область ПрограммныйИнтерфейс

// Инициализация параметров сеанса. Необходимо по стандарту. Вызывается методами БСП.
//
Процедура ПриУстановкеПараметровСеанса(ИмяПараметра = Неопределено, УстановленныеПараметры = Неопределено) Экспорт
	
	ЗначенияПоУмолчанию = ДлительныеОперацииОбменаСБанкамиКлиентСервер.ЗначенияПараметровДлительнойОперацииПоУмолчанию();
	ПараметрыСеанса[
		ДлительныеОперацииОбменаСБанкамиКлиентСервер.КлючПараметровДлительнойОтправкиСервер()] =
			Новый ФиксированноеСоответствие(ЗначенияПоУмолчанию);
	
КонецПроцедуры

// Оповещение формы бублика о начале нового этапа обмена.
// Вызывается из фонового задания.
// Используется для наращивания процента.
//
Процедура ОповеститьОСменеЭтапаРасшифровки(Параметры) Экспорт
	
	СообщитьОСменеЭтапаОбмена(Параметры);
	
КонецПроцедуры

// Оповещение формы бублика о начале нового этапа обмена.
// Вызывается из фонового задания.
// Используется для наращивания процента.
//
Процедура ОповеститьОСменеЭтапаОбмена(Параметры) Экспорт
	
	ДлительныеОперацииОбменаСБанкамиКлиентСервер.
		ИзменитьПараметрыДлительнойОтправки("Организация", Параметры.Организация);
	СообщитьОСменеЭтапаОбмена(Параметры);
	
КонецПроцедуры

// Оповещение формы бублика об уточнении списка этапов.
// Вызывается из фонового задания.
// 
Процедура ОповеститьОбУточненииЭтаповСобытия(Параметры) Экспорт
	
	СообщитьОбУточненииЭтаповСобытия(Параметры);
	
КонецПроцедуры

Функция СообщенияФоновогоЗадания(Знач ИдентификаторЗадания) Экспорт
	
	Возврат ПрочитатьСообщения(ИдентификаторЗадания);
	
КонецФункции

Процедура ВывестиОшибку(Знач ТекстОшибки) Экспорт
	
	Если ПолучитьТекущийСеансИнформационнойБазы().ПолучитьФоновоеЗадание() = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ПередаваемоеЗначение = Новый Структура;
	ПередаваемоеЗначение.Вставить("ТекстОшибки", ТекстОшибки);
	ПередаваемоеЗначение.Вставить("Организация",
		ДлительныеОперацииОбменаСБанкамиКлиентСервер.ЗначениеПараметраДлительнойОперации("Организация"));
	
	ПередаваемыйТекст = ОбщегоНазначения.ЗначениеВСтрокуXML(ПередаваемоеЗначение);
	
	Текст = ПрефиксОшибок() + ПередаваемыйТекст;
	ОбщегоНазначения.СообщитьПользователю(Текст);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СообщитьОбУточненииЭтаповСобытия(Параметры)
	
	Если ПолучитьТекущийСеансИнформационнойБазы().ПолучитьФоновоеЗадание() = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ПередаваемоеЗначение = Новый Структура;
	ПередаваемоеЗначение.Вставить("ПараметрыУточнения", Параметры);
	
	ПередаваемыйТекст = ОбщегоНазначения.ЗначениеВСтрокуXML(ПередаваемоеЗначение);
	
	Текст = ПрефиксСообщенийУточненияЭтаповСобытия() + ПередаваемыйТекст;
	ОбщегоНазначения.СообщитьПользователю(Текст);
	
КонецПроцедуры

Процедура СообщитьОСменеЭтапаОбмена(ПараметрыЭтапа)
	
	Если ПолучитьТекущийСеансИнформационнойБазы().ПолучитьФоновоеЗадание() = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ПередаваемоеЗначение = Новый Структура;
	ПередаваемоеЗначение.Вставить("ПараметрыЭтапа", ПараметрыЭтапа);
	
	ПередаваемыйТекст = ОбщегоНазначения.ЗначениеВСтрокуXML(ПередаваемоеЗначение);
	
	Текст = ПрефиксСообщенийЭтаповОбмена() + ПередаваемыйТекст;
	ОбщегоНазначения.СообщитьПользователю(Текст);
	
КонецПроцедуры

Функция ПрочитатьСообщения(ИдентификаторЗадания) Экспорт
	
	УдалятьПолученные = Истина;
	
	Результат = Новый Структура;
	Результат.Вставить("СообщенияЭтаповОбмена", Новый Массив);
	Результат.Вставить("УточнениеЭтаповОбмена", Новый Массив);
	Результат.Вставить("Ошибки", Новый Массив);
	Результат.Вставить("ВсеСообщения", Новый Массив);
	
	ФоновоеЗадание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
	Если ФоновоеЗадание <> Неопределено Тогда
		ВсеСообщения = ФоновоеЗадание.ПолучитьСообщенияПользователю(УдалятьПолученные);
	Иначе
		Возврат Результат;
	КонецЕсли;
	
	Для Каждого Сообщение Из ВсеСообщения Цикл
		
		Если СтрНачинаетсяС(Сообщение.Текст, ПрефиксСообщенийЭтаповОбмена()) Тогда
			Префикс = ПрефиксСообщенийЭтаповОбмена();
			МассивДляСообщения = Результат.СообщенияЭтаповОбмена;
		ИначеЕсли СтрНачинаетсяС(Сообщение.Текст, ПрефиксСообщенийУточненияЭтаповСобытия()) Тогда
			Префикс = ПрефиксСообщенийУточненияЭтаповСобытия();
			МассивДляСообщения = Результат.УточнениеЭтаповОбмена;
		ИначеЕсли СтрНачинаетсяС(Сообщение.Текст, ПрефиксОшибок()) Тогда
			Префикс = ПрефиксОшибок();
			МассивДляСообщения = Результат.Ошибки;
		Иначе
			Продолжить;
		КонецЕсли;
		
		ТекстЗначения = СтрЗаменить(Сообщение.Текст, Префикс, "");
		ЗначениеИзСообщения = ОбщегоНазначения.ЗначениеИзСтрокиXML(ТекстЗначения);
		МассивДляСообщения.Добавить(ЗначениеИзСообщения);
		
		ДанныеСообщения = Новый Структура;
		ДанныеСообщения.Вставить("Префикс", Префикс);
		ДанныеСообщения.Вставить("Значение", ЗначениеИзСообщения);
		Результат.ВсеСообщения.Добавить(ДанныеСообщения);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПрефиксСообщенийЭтаповОбмена()
	
	Возврат ДлительныеОперацииОбменаСБанкамиКлиентСервер.ПрефиксСообщенийЭтаповОбмена();
	
КонецФункции

Функция ПрефиксСообщенийУточненияЭтаповСобытия()
	
	Возврат ДлительныеОперацииОбменаСБанкамиКлиентСервер.ПрефиксСообщенийУточненияЭтаповСобытия();
	
КонецФункции

Функция ПрефиксОшибок()
	
	Возврат ДлительныеОперацииОбменаСБанкамиКлиентСервер.ПрефиксСообщенийОшибок();
	
КонецФункции

#КонецОбласти