#Область ПрограммныйИнтерфейс

// Определяет параметр Период функциональной опции, которая зависит от системы налогообложения.
//
// Параметры:
//   Организация - СправочникСсылка.Организации
//   Период - Дата - Дата, на которую требуется определить настройку системы налогообложения
//   ДатаИзменения - возвращаемое значение даты изменения системы налогообложения
//
// Возвращаемое значение:
//   Дата - Дата, приведенная к началу этого, либо прошлого месяца
//
Функция ПериодНастройкиСистемыНалогообложения(Организация, Период, ДатаИзменения = Неопределено) Экспорт
	
	// Значение Системы налогообложения записывается всегда на первое число месяца, но иногда может измениться
	// в любой день месяца. Поэтому значение Системы нужно брать за этот месяц, если изменения уже вступили в силу,
	// либо за прошлый, если не вступили.
	
	ЭтотМесяц = НачалоМесяца(Период);
	
	ДатаИзменения = ПолучитьФункциональнуюОпцию("ДатаИзмененияСистемыНалогообложения",
		Новый Структура("Организация, Период", Организация, ЭтотМесяц));
	
	Если ДатаИзменения <> Ложь // Значение существует
		И (ЭтотМесяц < ДатаИзменения И ДатаИзменения < ДобавитьМесяц(ЭтотМесяц, 1)) // Система НО менялась в течение месяца
		И Период < ДатаИзменения Тогда // Значение еще не вступило в силу
		Возврат ДобавитьМесяц(ЭтотМесяц, -1); // Прошлый месяц
	Иначе
		Если ДатаИзменения = Ложь Тогда
			ДатаИзменения = Дата(1, 1, 1); // Приведение типа
		КонецЕсли;
		Возврат ЭтотМесяц;
	КонецЕсли;
	
КонецФункции

Функция Существует(Организация, Период, ВыводитьСообщениеОбОтсутствииУчетнойПолитики = Ложь, ДокументСсылка = Неопределено) Экспорт
	
	Возврат СуществуетУчетнаяПолитика(Организация, Период, ВыводитьСообщениеОбОтсутствииУчетнойПолитики, ДокументСсылка)
		И СуществуетСистемаНалогообложения (Организация, Период, ВыводитьСообщениеОбОтсутствииУчетнойПолитики, ДокументСсылка);
	
КонецФункции

Функция СуществуетУчетнаяПолитика(Организация, Период, ВыводитьСообщениеОбОтсутствииУчетнойПолитики = Ложь, ДокументСсылка = Неопределено) Экспорт
	
	СпособОценкиТоваровВРознице = ПолучитьФункциональнуюОпцию("СпособОценкиТоваровВРознице", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));
		
	УчетнаяПолитикаСуществует = НЕ (СпособОценкиТоваровВРознице = Ложь);
	
	Если НЕ УчетнаяПолитикаСуществует
		И ВыводитьСообщениеОбОтсутствииУчетнойПолитики = Истина Тогда
		ПутьКНастройке = ПутьКНастройкеУчетнойПолитики();
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Для организации %1 на %2 не заполнена учетная политика%3.'"),
			Организация,
			Формат(НачалоМесяца(Период), "ДФ='MMMM yyyy'"),
			?(ПустаяСтрока(ПутьКНастройке), "", " (" + ПутьКНастройке + ")"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументСсылка, , "Объект");
	КонецЕсли;
	
	Возврат УчетнаяПолитикаСуществует;

КонецФункции

Функция СуществуетСистемаНалогообложения(Организация, Период, ВыводитьСообщениеОбОтсутствииУчетнойПолитики = Ложь, ДокументСсылка = Неопределено) Экспорт
	
	СистемаНалогообложения = ПолучитьФункциональнуюОпцию("СистемаНалогообложения", 
		ПараметрыФункциональнойОпцииНастройкиСистемыНалогообложения(Организация, Период));
	
	НалоговыеНастройкиСуществуют = НЕ (СистемаНалогообложения = Ложь);
	
	ПрименяетсяТолькоЕНВД = ТолькоЕНВДПоДаннымУчетнойПолитики(Организация, Период);
	
	Если ВыводитьСообщениеОбОтсутствииУчетнойПолитики = Истина Тогда
		ПутьКНастройке = ПутьКНастройкеСистемыНалогообложения();
		Если НЕ НалоговыеНастройкиСуществуют Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Для организации %1 на %2 не задана система налогообложения%3.'"),
				Организация,
				Формат(НачалоМесяца(Период), "ДФ='MMMM yyyy'"),
				?(ПустаяСтрока(ПутьКНастройке), "", " (" + ПутьКНастройке + ")"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументСсылка, , "Объект");
		ИначеЕсли ПрименяетсяТолькоЕНВД И Период >= УчетЕНВДКлиентСервер.ДатаОтменыЕНВД() Тогда
			// Некорректная настройка системы налогообложения - применение ЕНВД после его отмены
			НалоговыеНастройкиСуществуют = Ложь;
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='С 01.01.2021 ЕНВД не применяется. Необходимо изменить настройки системы налогообложения организации %1 на %2%3.'"),
				Организация,
				Формат(НачалоМесяца(Период), "ДФ='MMMM yyyy'"),
				?(ПустаяСтрока(ПутьКНастройке), "", " (" + ПутьКНастройке + ")"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументСсылка, , "Объект");
		КонецЕсли;
	КонецЕсли;
	
	Возврат НалоговыеНастройкиСуществуют;

КонецФункции

Функция СистемаНалогообложения(Организация, Период, ДатаИзменения = Неопределено) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("СистемаНалогообложения", 
		ПараметрыФункциональнойОпцииНастройкиСистемыНалогообложения(Организация, Период, ДатаИзменения));

	Если Результат = Ложь Тогда
		Результат = Перечисления.СистемыНалогообложения.Общая;
	КонецЕсли;

	Возврат Результат;

КонецФункции 

// Возвращает дату постановки на учет в качестве налогоплательщика налога по основной системе налогообложения
//
// Параметры:
//   Организация - СправочникСсылка.Организации
//   Период - Дата - период
//
// Возвращаемое значение:
//   Дата
//
Функция ДатаПостановкиНаУчетНалогоплательщика(Организация, Знач Период) Экспорт
	Перем ДатаИзменения, ПредыдущаяДатаИзменения;
	
	Период = НачалоДня(Период);
	
	СистемаНалогообложения = СистемаНалогообложения(Организация, Период, ДатаИзменения);
	Если Не ЗначениеЗаполнено(ДатаИзменения) Тогда
		// Запись на уазанную дату отсутствует
		Возврат ОбщегоНазначенияБПВызовСервераПовтИсп.ДатаРегистрацииОрганизации(Организация);
	КонецЕсли;
	
	Если ДатаИзменения < НачалоМесяца(Период) Тогда
		// Система налогообложения поменялась в течении месяца
		ПредыдущаяСистемаНалогообложения = СистемаНалогообложения(Организация, НачалоДня(ДатаИзменения) - 1, ПредыдущаяДатаИзменения);
	Иначе
		ПредыдущаяСистемаНалогообложения = СистемаНалогообложения(Организация, НачалоМесяца(Период) - 1, ПредыдущаяДатаИзменения);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПредыдущаяДатаИзменения) // Это первая запись в регистре
		Или НачалоДня(ПредыдущаяДатаИзменения) >= НачалоДня(ДатаИзменения) // Некорректное значение даты изменения
		Или ПредыдущаяСистемаНалогообложения <> СистемаНалогообложения Тогда // Это первая запись с такой системой налогообложения
		ДатаРегистрации = ОбщегоНазначенияБПВызовСервераПовтИсп.ДатаРегистрацииОрганизации(Организация);
		Возврат Макс(ДатаРегистрации, ДатаИзменения);
	Иначе
		// Запись в регистре без смены системы налогообложения
		Возврат ДатаПостановкиНаУчетНалогоплательщика(Организация, ПредыдущаяДатаИзменения);
	КонецЕсли;
	
КонецФункции

// Параметры учетной политики по налогу на прибыль

Функция ПлательщикНалогаНаПрибыль(Организация, Период) Экспорт

	ВидИспользованияСумм = БухгалтерскийУчет.ИспользоватьСуммыНалогНаПрибыль(Организация, Период);
	Возврат БухгалтерскийУчетКлиентСервер.ИспользоватьСуммуНУ(ВидИспользованияСумм);

КонецФункции 

Функция ПлательщикНалогаНаПрибыльЗаПериод(Организация, НачалоПериода, КонецПериода) Экспорт

	МассивЗначений = НастройкиУчета.ЗначенияРесурсаУчетнойПолитикиЗаПериод(
		"НастройкиСистемыНалогообложения",
		"ПлательщикНалогаНаПрибыль",
		Организация,
		ПериодНастройкиСистемыНалогообложения(Организация, НачалоПериода),
		ПериодНастройкиСистемыНалогообложения(Организация, КонецПериода));
	
	Результат = Ложь;
	Для Каждого Значение Из МассивЗначений Цикл
		Результат = Результат ИЛИ Значение;
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

Функция ВариантУчетаСтоимостиВыпуска(Организация, Период) Экспорт
	
	Если Не ПлановаяСебестоимость(Организация, Период) Тогда
		Возврат Перечисления.ВариантыУчетаСтоимостиВыпуска.ФактическаяСтоимость;
	КонецЕсли;
	
	Результат = ПолучитьФункциональнуюОпцию("СпособУчетаВыпускаГотовойПродукции", 
		Новый Структура("Организация,Период", Организация, НачалоМесяца(Период)));
	
	Если Результат = Ложь Тогда
		Результат = Перечисления.ВариантыУчетаСтоимостиВыпуска.ФактическаяСтоимость;
	КонецЕсли;
	
	Если Результат = Перечисления.ВариантыУчетаСтоимостиВыпуска.ПлановаяСтоимость
		И Не ПоддерживаетсяОценкаПродукцииПоПлановойСтоимости() Тогда
		Результат = Перечисления.ВариантыУчетаСтоимостиВыпуска.ОтклоненияСтоимости;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПоддерживаетсяОценкаПродукцииПоПлановойСтоимости() Экспорт
	
	Поддерживается = Ложь;
	ОценкаПродукцииПоПлановойСтоимости.ОпределитьФункциональностьПоддерживается(Поддерживается);
	Возврат Поддерживается;
	
КонецФункции

Функция БазаРаспределенияКосвенныхРасходовПоВидамДеятельности(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("БазаРаспределенияКосвенныхРасходовПоВидамДеятельности", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

	Возврат Результат;

КонецФункции 

Функция ОсновнойСчетУчетаЗатрат(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ОсновнойСчетУчетаЗатрат", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));
		
	Если Результат = Ложь Тогда
		Результат = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	КонецЕсли;

	Возврат Результат;

КонецФункции 

Функция ПлановаяСебестоимость(Организация, Период) Экспорт
	
	Если Не УчетПроизводства.ИспользоватьВыпускПродукции()
		 И НЕ ПолучитьФункциональнуюОпцию("ВедетсяПроизводственнаяДеятельность") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ПолучитьФункциональнуюОпцию(
		"ИспользоватьПлановуюСебестоимость", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));
	
КонецФункции

Функция ПоддерживаетсяСписаниеРасходовОбслуживающихПроизводств() Экспорт
	
	УчетПоддерживается = Ложь;
	РасходыОбслуживающихПроизводств.ОпределитьПоддержкуСписанияРасходовОбслуживающихПроизводств(УчетПоддерживается);
	Возврат УчетПоддерживается;
	
КонецФункции

Функция РасходыОбслуживающихПроизводствВключатьВПрочиеРасходы(Организация, Период) Экспорт

	Если Не ПоддерживаетсяСписаниеРасходовОбслуживающихПроизводств() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ИмяФО = "";
	РасходыОбслуживающихПроизводств.ПолучитьИмяФункциональнойОпцииУчетнойПолитики(ИмяФО);
	
	Если Не ЗначениеЗаполнено(ИмяФО) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ПолучитьФункциональнуюОпцию(
		ИмяФО,
		Новый Структура("Организация,Период", Организация, НачалоМесяца(Период)));
	
КонецФункции

// Параметры учетной политики по резервам по сомнительным долгам

Функция ФормироватьРезервыПоСомнительнымДолгамБУ(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ФормироватьРезервыПоСомнительнымДолгамВБухгалтерскомУчете", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

	Возврат Результат;

КонецФункции 

Функция ФормироватьРезервыПоСомнительнымДолгамНУ(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ФормироватьРезервыПоСомнительнымДолгамВНалоговомУчете", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

	Возврат Результат;

КонецФункции 

// Прочие параметры учетной политики

Функция СпособОценкиМПЗ(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("СпособОценкиМПЗ", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

	Если Результат = Ложь Тогда
		Результат = Перечисления.СпособыОценки.ПоСредней;
	КонецЕсли;

	Возврат Результат;

КонецФункции 

Функция СпособОценкиТоваровВРознице(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("СпособОценкиТоваровВРознице", 
		Новый Структура("Организация,Период", Организация, НачалоМесяца(Период)));

	Если Результат = Ложь Тогда
		Результат = Перечисления.СпособыОценкиТоваровВРознице.ПоСтоимостиПриобретения;
	КонецЕсли;

	Возврат Результат;

КонецФункции

Функция СпособПогашенияСтоимостиСпецодеждыНУ(Организация, Период) Экспорт

	Если Период < '20150101' Тогда

		Результат = ПредопределенноеЗначение(
			"Перечисление.СпособыПогашенияСтоимостиНУ.ПриПередачеВЭксплуатацию");

	Иначе

		Результат = ПолучитьФункциональнуюОпцию("СпособПогашенияСтоимостиСпецодежды", 
			Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

	КонецЕсли;

	Возврат Результат;

КонецФункции

// Параметры учетной политики по МСФО

Функция ПоддерживаетсяУчетПоЭлементамЗатрат() Экспорт
	
	УчетПоддерживается = Ложь;
	ЭлементыЗатрат.ОпределитьПоддержкуУчетаПоЭлементамЗатрат(УчетПоддерживается);
	Возврат УчетПоддерживается;
	
КонецФункции

Функция УчитыватьРасходыПоЭлементамЗатрат(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("УчитыватьРасходыПоЭлементамЗатрат", 
		Новый Структура("Организация,Период", Организация, НачалоМесяца(Период)));

	Возврат Результат;

КонецФункции

Функция УчитыватьРасходыПоСтатьямЗатрат(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("УчитыватьРасходыПоСтатьямЗатрат", 
		Новый Структура("Организация,Период", Организация, НачалоМесяца(Период)));

	Возврат Результат;

КонецФункции

// Параметры учетной политики по банку и кассе

Функция ИспользоватьПереводыВПутиПриПеремещенияДенежныхСредств(Организация, Период) Экспорт
	
	Результат = ПолучитьФункциональнуюОпцию("ИспользоватьПереводыВПутиПриПеремещенияДенежныхСредств", 
		Новый Структура("Организация,Период", Организация, НачалоМесяца(Период)));
	
	Возврат Результат;
	
КонецФункции

Функция РаздельныйУчетТорговыйСборПриУСН(Организация, Период) Экспорт
	
	ПрименяетсяУСНДоходы = ПолучитьФункциональнуюОпцию("ПрименяетсяУСНДоходы",
		ПараметрыФункциональнойОпцииНастройкиСистемыНалогообложения(Организация, Период));
	
	Если Не ПрименяетсяУСНДоходы Тогда
		Возврат Ложь;
	Иначе
		Возврат ПлательщикТорговогоСбора(Организация, Период);
	КонецЕсли;
	
КонецФункции

// Параметры учетной политики по торговому сбору

Функция ПлательщикТорговогоСбора(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ПлательщикТорговогоСбора", 
		ПараметрыФункциональнойОпцииНастройкиСистемыНалогообложения(Организация, Период));

	Возврат Результат;

КонецФункции

Функция ПлательщикТорговогоСбораЗаПериод(Организация, НачалоПериода, КонецПериода) Экспорт
	
	Возврат ТорговыйСбор.ИспользуютсяТорговыеТочкиЗаПериод(Организация, НачалоПериода, КонецПериода);
	
КонецФункции

Функция ПрименяютсяРазныеСтавкиНалогаНаПрибыль(Организация, Период) Экспорт

	Если Не БухгалтерскийУчетПереопределяемый.ВестиУчетПоПодразделениям() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Результат = ПолучитьФункциональнуюОпцию("ПрименяютсяРазныеСтавкиНалогаНаПрибыль", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

	Возврат Результат;

КонецФункции

Функция ПорядокУплатыАвансов(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ПорядокУплатыАвансов", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

	Возврат Результат;

КонецФункции

Функция ВариантБухгалтерскойОтчетности(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ВариантБухгалтерскойОтчетности", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

	Возврат Результат;

КонецФункции

// Параметры учетной политики по Налогу на профессиональный доход

Функция ПрименяетсяНалогНаПрофессиональныйДоход(Организация, Период) Экспорт
	
	ПрименяетсяНалогНаПрофессиональныйДоход = ПолучитьФункциональнуюОпцию("ПрименяетсяНалогНаПрофессиональныйДоход",
		ПараметрыФункциональнойОпцииНастройкиСистемыНалогообложения(Организация, Период));
	
	Возврат ПрименяетсяНалогНаПрофессиональныйДоход;
	
КонецФункции

// Требования учетной политики к интерфейсу

Функция ТребуетсяПолныйИнтерфейс() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкиУчетаНДС.СложныйУчетНДС КАК СложныйУчетНДС
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНДС КАК НастройкиУчетаНДС
	|ГДЕ
	|	НастройкиУчетаНДС.СложныйУчетНДС";
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

Функция ПараметрыФункциональнойОпцииНастройкиСистемыНалогообложения(Организация = Неопределено, Период = Неопределено, ДатаИзменения = Неопределено)
	
	ПараметрыФункциональнойОпции = Новый Структура;
	
	Если Организация <> Неопределено Тогда
		ПараметрыФункциональнойОпции.Вставить("Организация", Организация);
		Если Период <> Неопределено Тогда
			ПараметрыФункциональнойОпции.Вставить("Период", ПериодНастройкиСистемыНалогообложения(Организация, Период, ДатаИзменения));
		КонецЕсли;
	КонецЕсли;
	
	Возврат ПараметрыФункциональнойОпции;
	
КонецФункции

// Возвращает безопасную долю вычета из настроек учета, либо, если в настройках не установлен контроль вычета, 
// то возвращает безопасную долю вычета по умолчанию.
//
// Параметры:
//  Организация - СправочникСсылка.Организации
//  Период - Дата - период
//
// Возвращаемое значение:
//  Число - безопасная доля вычета.
//
Функция БезопаснаяДоляВычета(Организация, Период) Экспорт
	
	КонтролироватьДолюВычетаНДС = ПолучитьФункциональнуюОпцию("КонтролироватьДолюВычетаНДС",
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));
		
	Если КонтролироватьДолюВычетаНДС  Тогда
		Результат = ПолучитьФункциональнуюОпцию("БезопаснаяДоляВычетаНДС", 
			Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));
	Иначе
		Результат = УчетНДСКлиентСервер.БезопаснаяДоляВычетаПоУмолчанию();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПрименяетсяФСБУ5_2019(Период) Экспорт

	Возврат НачалоГода(Период) >= '20210101';

КонецФункции 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПутьКНастройкеУчетнойПолитики()
	
	ПутьКНастройке = "";
	
	Если ПолучитьФункциональнуюОпцию("ИнтерфейсТакси") Тогда
		ПутьКНастройке = НСтр("ru = 'Главное - Настройки - Учетная политика'");
	ИначеЕсли ПолучитьФункциональнуюОпцию("ИнтерфейсТаксиПростой")
		ИЛИ ПолучитьФункциональнуюОпцию("ИнтерфейсТаксиБазовый") Тогда
		ПутьКНастройке = НСтр("ru = 'Настройки - Учетная политика'");
	ИначеЕсли ПолучитьФункциональнуюОпцию("ИнтерфейсБухгалтерия77") Тогда
		ПутьКНастройке = НСтр("ru = 'Сервис - Учетная политика'");
	КонецЕсли;
	
	Возврат ПутьКНастройке;
	
КонецФункции

Функция ПутьКНастройкеСистемыНалогообложения()
	
	ПутьКНастройке = "";
	
	Если ПолучитьФункциональнуюОпцию("ИнтерфейсТакси") Тогда
		ПутьКНастройке = НСтр("ru = 'Главное - Настройки - Налоги и отчеты'");
	ИначеЕсли ПолучитьФункциональнуюОпцию("ИнтерфейсТаксиПростой")
		ИЛИ ПолучитьФункциональнуюОпцию("ИнтерфейсТаксиБазовый") Тогда
		ПутьКНастройке = НСтр("ru = 'Настройки - Система налогообложения'");
	ИначеЕсли ПолучитьФункциональнуюОпцию("ИнтерфейсБухгалтерия77") Тогда
		ПутьКНастройке = НСтр("ru = 'Настройки - Сведения об организации - Карточка организации - Система налогообложения'");
	КонецЕсли;
	
	Возврат ПутьКНастройке;
	
КонецФункции

#КонецОбласти

#Область ПараметрыУчетнойПолитики 

// Функции этого раздела возвращают значения опций учетной политики конкретной организации на конкретную дату.
// Для частотных обращений используется кеш функциональных опций.

#Область Запасы

// Организация тестирует запасы на обесценение, оценивает их с учетом чистой цены реализации (NRV) -
// иными словами, создает резерв под обесценение запасов
//
// Параметры:
//  Организация - СправочникСсылка.Организации
//  Период      - Дата
// 
// Возвращаемое значение:
//  Булево
//
Функция ОбесценениеЗапасов(Организация, Период) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("РасширенныйФункционал") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Обращения не должны быть частыми, поэтому кеширование не используется
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", БухгалтерскийУчетПереопределяемый.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Период",              Период);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УчетнаяПолитика.ОбесценениеЗапасов КАК ОбесценениеЗапасов
	|ИЗ
	|	РегистрСведений.УчетнаяПолитика.СрезПоследних(&Период, Организация = &ГоловнаяОрганизация) КАК УчетнаяПолитика
	|ГДЕ
	|	УчетнаяПолитика.ОбесценениеЗапасов";
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти

#Область Затраты

// Читает настройки учета затрат на указанную дату
//
// Параметры:
//  Организация - СправочникСсылка.Организации
//  Период      - Дата
// 
// Возвращаемое значение:
//  Структура - см. Справочники.НастройкиУчетаЗатрат.НовыйБазовыеНастройкиУчетаЗатрат
//
Функция НастройкиУчетаЗатрат(Организация, Период) Экспорт
	
	НачалоМесяца = НачалоМесяца(Период);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      НачалоМесяца);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	УчетнаяПолитика.НастройкиУчетаЗатрат
	|ИЗ
	|	РегистрСведений.УчетнаяПолитика.СрезПоследних(&Период, Организация = &Организация) КАК УчетнаяПолитика";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Ссылка = Выборка.НастройкиУчетаЗатрат;
	Иначе
		Ссылка = Неопределено;
	КонецЕсли;
	
	Настройки = Справочники.НастройкиУчетаЗатрат.НовыйБазовыеНастройкиУчетаЗатрат();
	Настройки.Контекст.Период      = НачалоМесяца;
	Настройки.Контекст.Организация = Организация;
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		Справочники.НастройкиУчетаЗатрат.ЗаполнитьПоУмолчанию(Настройки);
	Иначе
		Справочники.НастройкиУчетаЗатрат.ПрочитатьСсылку(Настройки, Ссылка);
	КонецЕсли;
	
	Возврат Настройки;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область Устаревшие

// Устарела.
// Следует использовать БухгалтерскийУчетКлиентСервер.ИспользоватьСуммыРазниц()
//
// Определяет, нужно ли рассчитывать, заполнять и отображать пользователю суммы разниц в проводках.
//
// Параметры:
//  Организация - СправочникСсылка.Организации
//  Период      - Дата
// 
// Возвращаемое значение:
//  Булево - Истина, если нужно использовать суммы разниц в проводках.
//
Функция ПоддержкаПБУ18(Организация, Период) Экспорт

	ВидИспользованияСумм = БухгалтерскийУчет.ИспользоватьСуммыНалогНаПрибыль(Организация, Период);
	Возврат БухгалтерскийУчетКлиентСервер.ИспользоватьСуммыРазниц(ВидИспользованияСумм);

КонецФункции

Функция МетодНачисленияАмортизацииНУ(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("МетодНачисленияАмортизации", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

	Возврат Результат;

КонецФункции

// Параметры учетной политики по НДС

Функция ПлательщикНДС(Организация, Период, ДатаИзменения = Неопределено) Экспорт
	
	Результат = ПолучитьФункциональнуюОпцию("ПлательщикНДС", 
		ПараметрыФункциональнойОпцииНастройкиСистемыНалогообложения(Организация, Период, ДатаИзменения));

	Возврат Результат;
	
КонецФункции

Функция РаздельныйУчетНДС(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("РаздельныйУчетНДС", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

	Возврат Результат;

КонецФункции 

Функция УпрощенныйУчетНДС(Организация, Период) Экспорт
	
	Если Период < '20120101' Тогда
	
		Результат = ПолучитьФункциональнуюОпцию("УпрощенныйУчетНДС", 
			Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));
			
	Иначе
		
		Результат = Ложь;
			
	КонецЕсли;

	Возврат Результат;

КонецФункции 

Функция ПорядокРегистрацииСчетовФактурНаАванс(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ПорядокРегистрацииСчетовФактурНаАванс", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

	Возврат Результат;

КонецФункции 

Функция НачислятьНДСПриПередачеНедвижимости(Организация, Период) Экспорт
	
	ОтгрузкаНеплательщикомНДС = УчетНДС.ВедетсяУчетНДСПоФЗ134(Период) И НЕ ПлательщикНДС(Организация, Период);
	
	Результат = ПолучитьФункциональнуюОпцию("НачислятьНДСПриПередачеНедвижимости", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));
	
	Возврат Результат ИЛИ ОтгрузкаНеплательщикомНДС ИЛИ УчетНДС.ВедетсяУчетНДСПоФЗ81(Период);

КонецФункции

Функция НачислятьНДСПоОтгрузке(Организация, Период) Экспорт

	ОтгрузкаНеплательщикомНДС = УчетНДС.ВедетсяУчетНДСПоФЗ134(Период) И НЕ ПлательщикНДС(Организация, Период);
	
	Результат = ПолучитьФункциональнуюОпцию("НачислятьНДСПоОтгрузке", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

	Возврат Результат ИЛИ ОтгрузкаНеплательщикомНДС;

КонецФункции 

Функция РаздельныйУчетНДСНаСчете19(Организация, Период) Экспорт
	
	Если Период < '20120101' Тогда
		
		Возврат Ложь;
		
	Иначе
	
		Результат = ПолучитьФункциональнуюОпцию("РаздельныйУчетНДСНаСчете19", 
			Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));
			
    КонецЕсли;
		
	Возврат Результат;
	
КонецФункции

Функция РаздельныйУчетНДСДо2014Года(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("РаздельныйУчетНДСДо2014Года", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

	Возврат Результат;	

КонецФункции

Функция ПрименяетсяОсвобождениеОтУплатыНДС(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ПрименяетсяОсвобождениеОтУплатыНДС", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

	Возврат Результат;	

КонецФункции

// Параметры учетной политики по УСН

Функция ПрименяетсяУСНДоходыМинусРасходы(Организация, Период, ДатаИзменения = Неопределено) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ПрименяетсяУСНДоходыМинусРасходы", 
		ПараметрыФункциональнойОпцииНастройкиСистемыНалогообложения(Организация, Период, ДатаИзменения));

	Возврат Результат;
	
КонецФункции 

Функция ПрименяетсяУСНДоходыМинусРасходыЗаПериод(Организация, НачалоПериода, КонецПериода) Экспорт

	МассивЗначений = НастройкиУчета.ЗначенияРесурсаУчетнойПолитикиЗаПериод(
		"НастройкиСистемыНалогообложения",
		"ПрименяетсяУСНДоходыМинусРасходы",
		Организация,
		ПериодНастройкиСистемыНалогообложения(Организация, НачалоПериода),
		ПериодНастройкиСистемыНалогообложения(Организация, КонецПериода));
	
	Результат = Ложь;
	Для Каждого Значение Из МассивЗначений Цикл
		Результат = Результат ИЛИ Значение;
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

Функция ПрименяетсяУСНДоходы(Организация, Период, ДатаИзменения = Неопределено) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ПрименяетсяУСНДоходы", 
		ПараметрыФункциональнойОпцииНастройкиСистемыНалогообложения(Организация, Период, ДатаИзменения));

	Возврат Результат;

КонецФункции 

Функция ПрименяетсяУСНДоходыЗаПериод(Организация, НачалоПериода, КонецПериода) Экспорт
	
	МассивЗначений = НастройкиУчета.ЗначенияРесурсаУчетнойПолитикиЗаПериод(
		"НастройкиСистемыНалогообложения",
		"ПрименяетсяУСНДоходы",
		Организация,
		ПериодНастройкиСистемыНалогообложения(Организация, НачалоПериода),
		ПериодНастройкиСистемыНалогообложения(Организация, КонецПериода));
		
	
	Результат = Ложь;
	Для Каждого Значение Из МассивЗначений Цикл
		Результат = Результат ИЛИ Значение;
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

Функция ПрименяетсяУСН(Организация, Период, ДатаИзменения = Неопределено) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ПрименяетсяУСН", 
		ПараметрыФункциональнойОпцииНастройкиСистемыНалогообложения(Организация, Период, ДатаИзменения));
		
	Возврат Результат;

КонецФункции 

Функция ПрименяетсяУСНЗаПериод(Организация, НачалоПериода, КонецПериода) Экспорт
	
	МассивЗначений = НастройкиУчета.ЗначенияРесурсаУчетнойПолитикиЗаПериод(
		"НастройкиСистемыНалогообложения",
		"ПрименяетсяУСН",
		Организация,
		ПериодНастройкиСистемыНалогообложения(Организация, НачалоПериода),
		ПериодНастройкиСистемыНалогообложения(Организация, КонецПериода));
	
	Результат = Ложь;
	Для Каждого Значение Из МассивЗначений Цикл
		Результат = Результат ИЛИ Значение;
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

Функция ПорядокПризнанияМатериальныхРасходов(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ПорядокПризнанияМатериальныхРасходов", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

		Если Результат = Ложь Тогда
			Результат = Перечисления.ПорядокПризнанияМатериальныхРасходов.ПоОплатеПоставщику;
		ИначеЕсли Период >= '20160101' И Результат = Перечисления.ПорядокПризнанияМатериальныхРасходов.УменьшатьРасходыНаОстатокНЗП Тогда
			// С 1 января 2016 уменьшение материальных расходов на остаток НЗП не поддерживается
			Результат = Перечисления.ПорядокПризнанияМатериальныхРасходов.ПоФактуСписания;
		КонецЕсли;
		
	Возврат Результат;
	
КонецФункции

Функция ПорядокПризнанияРасходовПоТоварам(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ПорядокПризнанияРасходовПоТоварам",
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

		Если Результат = Ложь Тогда
			Результат = Перечисления.ПорядокПризнанияРасходовПоТоварам.ПоОплатеПоставщику;
		ИначеЕсли Период >= '20160101' И Результат = Перечисления.ПорядокПризнанияРасходовПоТоварам.ПоОплатеПоставщику Тогда
			// С 1 января 2016 признание расходов на товары по оплате поставщику не допускается.
			Результат = Перечисления.ПорядокПризнанияРасходовПоТоварам.ПоФактуРеализации;
		КонецЕсли;
		
	Возврат Результат;
	
КонецФункции

Функция ПорядокПризнанияРасходовПоНДС(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ПорядокПризнанияРасходовПоНДС", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

		Если Результат = Ложь Тогда
			Результат = Перечисления.ПорядокПризнанияРасходовПоНДС.ПоОплатеПоставщику;
		КонецЕсли;
		
	Возврат Результат;
	
КонецФункции 

Функция ПорядокПризнанияДопРасходов(Организация, Период) Экспорт
	
	Результат = ПолучитьФункциональнуюОпцию("ПорядокПризнанияДопРасходов", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

		Если Результат = Ложь Тогда
			Результат = Перечисления.ПорядокПризнанияДопРасходов.ПоОплатеПоставщику;
		КонецЕсли;
		
	Возврат Результат;
	
КонецФункции

Функция ПорядокПризнанияТаможенныхПлатежей(Организация, Период) Экспорт
	
	Результат = ПолучитьФункциональнуюОпцию("ПорядокПризнанияТаможенныхПлатежей",
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

		Если Результат = Ложь Тогда
			Результат = Перечисления.ПорядокПризнанияТаможенныхПлатежей.ПоОплате;
		КонецЕсли;
		
	Возврат Результат;
	
КонецФункции

Функция ДатаПереходаНаУСН(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ДатаПереходаНаУСН", 
		ПараметрыФункциональнойОпцииНастройкиСистемыНалогообложения(Организация, Период));

		Если Результат = Ложь Тогда
			Результат = Дата('20020101');
		КонецЕсли;
		
	Возврат Результат;
	
КонецФункции

Функция МетодРаспределенияРасходовУСНПоВидамДеятельности(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("МетодРаспределенияРасходовУСНПоВидамДеятельности", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

		Если Результат = Ложь Тогда
			Результат = Перечисления.МетодыРаспределенияРасходовУСНПоВидамДеятельности.ЗаКвартал;
		КонецЕсли;
		
	Возврат Результат;
	
КонецФункции

Функция БазаРаспределенияРасходовУСНПоВидамДеятельности(Организация, Период) Экспорт

	Если Период >= '20160101' Тогда
		Результат = Перечисления.БазаРаспределенияРасходовУСНПоВидамДеятельности.ДоходыПринимаемыеНУ;
	Иначе
		Результат = ПолучитьФункциональнуюОпцию("БазаРаспределенияРасходовУСНПоВидамДеятельности",
			Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));
		Если Результат = Ложь Тогда
			Результат = Перечисления.БазаРаспределенияРасходовУСНПоВидамДеятельности.ДоходыОтРеализацииБУ;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ОбъектНалогообложенияУСН(Организация, Период) Экспорт
	
	Результат = ПолучитьФункциональнуюОпцию("ОбъектНалогообложенияУСН", 
		ПараметрыФункциональнойОпцииНастройкиСистемыНалогообложения(Организация, Период));

	Возврат Результат;

КонецФункции

Функция ПорядокОтраженияАвансаУСН(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ПорядокОтраженияАванса", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));
	
	Возврат Результат;

КонецФункции

Функция ПатентУСН(Организация, Период) Экспорт

	ПорядокОтраженияАвансаУСН = ПолучитьФункциональнуюОпцию("ПорядокОтраженияАванса", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));
		
	Если ПорядокОтраженияАвансаУСН <> Перечисления.ПорядокОтраженияАвансов.ДоходПатент Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Результат = ПолучитьФункциональнуюОпцию("Патент", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));
	
	Возврат Результат;

КонецФункции

Функция УведомлениеДата(Организация, Знач Период) Экспорт
	
	Период = ПериодНастройкиСистемыНалогообложения(Организация, Период);
	
	МассивЗначений = НастройкиУчета.ЗначенияРесурсаУчетнойПолитикиЗаПериод(
		"НастройкиУчетаУСН", "УведомлениеДата", Организация, Период, Период);
	
	Результат = "";
	Если МассивЗначений.Количество() > 0 Тогда
		Результат = МассивЗначений[0];
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

Функция УведомлениеНомер(Организация, Знач Период) Экспорт
	
	Период = ПериодНастройкиСистемыНалогообложения(Организация, Период);
	
	МассивЗначений = НастройкиУчета.ЗначенияРесурсаУчетнойПолитикиЗаПериод(
		"НастройкиУчетаУСН", "УведомлениеНомер", Организация, Период, Период);
	
	Результат = "";
	Если МассивЗначений.Количество() > 0 Тогда
		Результат = МассивЗначений[0];
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

Функция ПереходНаУСН(Организация, Период) Экспорт
	
	ПериодПрошл = КонецГода(ДобавитьМесяц(Период, -12));
	
	ТекПрименяетсяУСН   = ПрименяетсяУСН(Организация, Период);
	ДатаПереходаНаУСН   = ДатаПереходаНаУСН(Организация, Период);
	РанееПрименяласьОСН = ПлательщикНалогаНаПрибыль(Организация, ПериодПрошл) ИЛИ ПлательщикНДФЛ(Организация, ПериодПрошл);
		
	Результат = РанееПрименяласьОСН И ТекПрименяетсяУСН И ЗначениеЗаполнено(ДатаПереходаНаУСН);
	
	Возврат Результат;

КонецФункции // ПереходНаУСН()

Функция СтавкаНалогаУСН(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("СтавкаНалогаУСН",
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

	Возврат Результат;

КонецФункции

Функция НалоговыеКаникулыУСН(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("НалоговыеКаникулы",
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

	Возврат Результат;

КонецФункции


Функция ПрименяетсяУСНПатентЗаПериод(Организация, НачалоПериода, КонецПериода) Экспорт
	
	МассивЗначений = НастройкиУчета.ЗначенияРесурсаУчетнойПолитикиЗаПериод(
		"НастройкиСистемыНалогообложения",
		"ПрименяетсяУСНПатент",
		Организация,
		ПериодНастройкиСистемыНалогообложения(Организация, НачалоПериода),
		ПериодНастройкиСистемыНалогообложения(Организация, КонецПериода));
	
	Результат = Ложь;
	Для Каждого Значение Из МассивЗначений Цикл
		Результат = Результат ИЛИ Значение;
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

Функция ПрименяетсяТолькоУСНПатент(Организация, Период) Экспорт
	
	Возврат ПрименяетсяУСНПатент(Организация, Период)
		И НЕ ПлательщикЕНВД(Организация, Период)
		И ПрименяетсяОсобыйПорядокНалогообложения(Организация, Период);
	
КонецФункции

Функция ПлательщикЕНВД(Организация, Период, ДатаИзменения = Неопределено) Экспорт
	
	ДатаОтменыЕНВД = УчетЕНВДКлиентСервер.ДатаОтменыЕНВД();
	
	Если Период >= ДатаОтменыЕНВД Тогда
		ДатаИзменения = ДатаОтменыЕНВД;
		Возврат Ложь;
	КонецЕсли;
	
	Результат = ПолучитьФункциональнуюОпцию("ПлательщикЕНВД", 
		ПараметрыФункциональнойОпцииНастройкиСистемыНалогообложения(Организация, Период, ДатаИзменения));
	
	Возврат Результат;
	
КонецФункции

Функция ПлательщикЕНВДЗаПериод(Организация, НачалоПериода, КонецПериода) Экспорт
	
	Если НачалоПериода >= УчетЕНВДКлиентСервер.ДатаОтменыЕНВД() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	МассивЗначений = НастройкиУчета.ЗначенияРесурсаУчетнойПолитикиЗаПериод(
		"НастройкиСистемыНалогообложения",
		"ПлательщикЕНВД",
		Организация,
		ПериодНастройкиСистемыНалогообложения(Организация, НачалоПериода),
		ПериодНастройкиСистемыНалогообложения(Организация, КонецПериода));
	
	Результат = Ложь;
	Для Каждого Значение Из МассивЗначений Цикл
		Результат = Результат ИЛИ Значение;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Проверяет, что в данных учетной политики установлена система налогообложения "Только ЕНВД".
// Не учитывает дату отмены ЕНВД, в отличие от ПлательщикЕНВД() и ПлательщикЕНВДЗаПериод().
// Может использоваться для проверки корректности состояния системы налогообложения организации после отмены ЕНВД.
//
// Параметры:
//  Организация - СправочникСсылка.Организации - проверяемая организация
//  Период      - Дата - дата, на которую проверяется состояние учетной политики.
//
// Возвращаемое значение:
//   Булево - если Истина, в учетной политике задана система налогообложения "Только ЕНВД".
//
Функция ТолькоЕНВДПоДаннымУчетнойПолитики(Организация, Период) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период",      Период);
	
	// Обращение к настройкам системы налогообложения необходимо выполнять в привилегированном режиме -
	// идентично чтению настроек из функциональных опций с установленным привилегированным режимом при получении.
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкиСистемыНалогообложения.ПлательщикЕНВД КАК ПлательщикЕНВД,
	|	НастройкиСистемыНалогообложения.ПрименяетсяОсобыйПорядокНалогообложения КАК ПрименяетсяОсобыйПорядокНалогообложения
	|ИЗ
	|	РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(&Период, Организация = &Организация) КАК НастройкиСистемыНалогообложения";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ПлательщикЕНВД И Выборка.ПрименяетсяОсобыйПорядокНалогообложения;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция РозничнаяТорговляОблагаетсяЕНВД(Организация, Период) Экспорт
	
	Возврат ПрименяетсяОсобыйПорядокНалогообложения(Организация, Период);
	
КонецФункции 

Функция ПрименяетсяОсобыйПорядокНалогообложения(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ПрименяетсяОсобыйПорядокНалогообложения", 
		ПараметрыФункциональнойОпцииНастройкиСистемыНалогообложения(Организация, Период));
	
	Возврат Результат;

КонецФункции

Функция ТолькоОсновнаяСистемаНалогообложения(Организация, Период) Экспорт
	
	Возврат Не ПлательщикЕНВД(Организация, Период)
		И Не ПрименяетсяУСНПатент(Организация, Период);
	
КонецФункции

Функция ТолькоОсобыйПорядокНалогообложения(Организация, Период) Экспорт
	
	Возврат ПрименяетсяОсобыйПорядокНалогообложения(Организация, Период);
	
КонецФункции

Функция ТолькоОсновнаяСистемаНалогообложенияЗаПериод(Организация, НачалоПериода, КонецПериода) Экспорт
	
	Возврат Не ПлательщикЕНВДЗаПериод(Организация, НачалоПериода, КонецПериода)
		И Не ПрименяетсяУСНПатентЗаПериод(Организация, НачалоПериода, КонецПериода);
	
КонецФункции

// Параметры учетной политики по ИП

Функция ПлательщикНДФЛ(Организация, Период, ДатаИзменения = Неопределено) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ПлательщикНДФЛ", 
		ПараметрыФункциональнойОпцииНастройкиСистемыНалогообложения(Организация, Период, ДатаИзменения));

	Возврат Результат;

КонецФункции

Функция ПлательщикНДФЛЗаПериод(Организация, НачалоПериода, КонецПериода) Экспорт

	МассивЗначений = НастройкиУчета.ЗначенияРесурсаУчетнойПолитикиЗаПериод(
		"НастройкиСистемыНалогообложения",
		"ПлательщикНДФЛ",
		Организация,
		ПериодНастройкиСистемыНалогообложения(Организация, НачалоПериода),
		ПериодНастройкиСистемыНалогообложения(Организация, КонецПериода));
	
	Результат = Ложь;
	Для Каждого Значение Из МассивЗначений Цикл
		Результат = Результат ИЛИ Значение;
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

Функция ОсновнойВидДеятельности(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ОсновнойВидДеятельности", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

	Возврат Результат;
	
КонецФункции

Функция ОсновнойХарактерДеятельности(Организация, Период) Экспорт
	
	ВидДеятельности = ОсновнойВидДеятельности(Организация, Период);
	
	Если ВидДеятельности <> Ложь Тогда // Если значения не найдено, то значение функциональной опции будет Ложь
		ХарактерДеятельности = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидДеятельности, "ХарактерДеятельности");
	Иначе
		ХарактерДеятельности = Перечисления.ХарактерДеятельности.ПустаяСсылка();
	КонецЕсли;
	
	Возврат ХарактерДеятельности;
	
КонецФункции

Функция ОсновнаяНоменклатурнаяГруппа(Организация, Период) Экспорт

	ВидДеятельности = ОсновнойВидДеятельности(Организация, Период);
	
	Если ВидДеятельности <> Ложь Тогда // Если значения не найдено, то значение функциональной опции будет Ложь
		НоменклатурнаяГруппа = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидДеятельности, "НоменклатурнаяГруппа");
	Иначе
		НоменклатурнаяГруппа = БухгалтерскийУчетВызовСервераПовтИсп.ОсновнаяНоменклатурнаяГруппа();
	КонецЕсли;
	
	Возврат НоменклатурнаяГруппа;
	
КонецФункции

Функция ВестиУчетПоВидамДеятельностиИП(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ВестиУчетПоВидамДеятельности", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

	Возврат Результат;

КонецФункции

Функция АвансыВключаютсяВДоходыВПериодеПолученияИП(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("АвансыВключаютсяВДоходыВПериодеПолучения",
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

	Возврат Результат;
	
КонецФункции

Функция ВидДеятельностиДоходовПоАвансамИП(Организация, Период) Экспорт
	
	ВестиУчетПоВидамДеятельностиИП = ВестиУчетПоВидамДеятельностиИП(Организация, Период);
		
	Если ВестиУчетПоВидамДеятельностиИП Тогда
		Результат = ПолучитьФункциональнуюОпцию("ВидДеятельностиДоходовПоАвансам", 
			Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));
	Иначе
		Результат = ПолучитьФункциональнуюОпцию("ОсновнойВидДеятельности", 
			Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

Функция ХарактерДеятельностиДоходовПоАвансамИП(Организация, Период) Экспорт
	
	ВидДеятельности = ВидДеятельностиДоходовПоАвансамИП(Организация, Период);
	
	Если ВидДеятельности <> Ложь Тогда // Если значения не найдено, то значение функциональной опции будет Ложь
		ХарактерДеятельности = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидДеятельности, "ХарактерДеятельности");
	Иначе
		ХарактерДеятельности = Перечисления.ХарактерДеятельности.ПустаяСсылка();
	КонецЕсли;
	
	Возврат ХарактерДеятельности;
	
КонецФункции

Функция НоменклатурнаяГруппаДоходовПоАвансамИП(Организация, Период) Экспорт
	
	ВидДеятельности = ВидДеятельностиДоходовПоАвансамИП(Организация, Период);
	
	Если ВидДеятельности <> Ложь Тогда // Если значения не найдено, то значение функциональной опции будет Ложь
		НоменклатурнаяГруппа = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидДеятельности, "НоменклатурнаяГруппа");
	Иначе
		НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
	КонецЕсли;
	
	Возврат НоменклатурнаяГруппа;
	
КонецФункции

Функция ДляПризнанияРасходовТребуетсяПолучениеДоходаИП(Организация, Период) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ДляПризнанияРасходовТребуетсяПолучениеДохода", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));
	
	Возврат Результат;

КонецФункции

Функция ПризнаватьРасходыПоОперациямПрошлогоГодаИП(Организация, Период) Экспорт

	ПризнаватьРасходыПоОперациямПрошлогоГодаИП = ПолучитьФункциональнуюОпцию("ПризнаватьРасходыПоОперациямПрошлогоГода", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));
	
	Результат = ПризнаватьРасходыПоОперациямПрошлогоГодаИП
		И ДляПризнанияРасходовТребуетсяПолучениеДоходаИП(Организация, Период);
	
	Возврат Результат;

КонецФункции

// Параметры учетной политики по фиксированным страховым взносам

Функция ПлательщикФиксированныхВзносовЗаПериод(Организация, НачалоПериода, КонецПериода) Экспорт
	
	Если ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Организация) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	МассивЗначений = НастройкиУчета.ЗначенияРесурсаУчетнойПолитикиЗаПериод(
		"НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС",
		"ПлательщикСтраховыхВзносовПФР_ФФОМС",
		Организация,
		НачалоПериода,
		КонецПериода);
	
	Результат = Ложь;
	Для Каждого Значение Из МассивЗначений Цикл
		Результат = Результат Или Значение;
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

Функция УплачиватьДобровольныеВзносыВФСС(Организация, Период) Экспорт
	
	Результат = ПолучитьФункциональнуюОпцию("УплачиватьДобровольныеВзносыВФСС", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));
	
	Возврат Результат;
	
КонецФункции

Функция ЗначениеУчетнойПолитики(ИмяРесурса, Организация, Период)
	
	Параметры = Новый Структура;
	Параметры.Вставить("Организация", Организация);
	Параметры.Вставить("Период",      НачалоМесяца(Период));
	
	Возврат ПолучитьФункциональнуюОпцию(ИмяРесурса, Параметры);
	
КонецФункции	

// Параметры учетной политики по затратам на производство

Функция ВедетсяПроизводственнаяДеятельность(Организация, Период) Экспорт

	Возврат ВыпускПродукции(Организация, Период) Или ОказаниеУслуг(Организация, Период);
	
КонецФункции 

Функция ВыпускПродукции(Организация, Период) Экспорт
	
	Возврат ЗначениеУчетнойПолитики("ВыпускПродукции", Организация, Период);
	
КонецФункции

Функция ОказаниеУслуг(Организация, Период) Экспорт
	
	Возврат ЗначениеУчетнойПолитики("ОказаниеУслуг", Организация, Период);
	
КонецФункции

Функция РассчитыватьСебестоимостьПолуфабрикатов(Организация, Период) Экспорт
	
	Возврат ЗначениеУчетнойПолитики("РассчитыватьСебестоимостьПолуфабрикатов", Организация, Период);
	
КонецФункции

Функция РассчитыватьСебестоимостьУслугСобственнымПодразделениям(Организация, Период) Экспорт
	
	Возврат ЗначениеУчетнойПолитики("РассчитыватьСебестоимостьУслугСобственнымПодразделениям", Организация, Период);
	
КонецФункции		

Функция ПорядокСписанияРасходовНаСебестоимостьУслуг(Организация, Период) Экспорт
	
	Возврат ЗначениеУчетнойПолитики("ПорядокСписанияРасходовНаСебестоимостьУслуг", Организация, Период);
	
КонецФункции

Функция ДиректКостинг(Организация, Период) Экспорт
	
	Результат = ПолучитьФункциональнуюОпцию("ДиректКостинг", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));

	Возврат Результат;

КонецФункции

Функция СпособРасчетаСебестоимостиПроизводства(Организация, Период) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетЗатратПоПодразделениям") Тогда
	
		Результат = ПолучитьФункциональнуюОпцию("СпособРасчетаСебестоимостиПроизводства", 
			Новый Структура("Организация, Период", Организация, НачалоМесяца(Период)));
			
	Иначе
		Результат = Перечисления.СпособыРасчетаСебестоимостиПродукции.ПоПеределам;
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Устарела. Следует использовать ВариантУчетаСтоимостиВыпуска
//
Функция СпособУчетаВыпускаГотовойПродукции(Организация, Период) Экспорт

	Возврат ВариантУчетаСтоимостиВыпуска(Организация, Период);

КонецФункции

#КонецОбласти

// Параметры учетной политики по Патентной системе налогообложения и ЕНВД
Функция ПрименяетсяУСНПатент(Организация, Период, ДатаИзменения = Неопределено) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ПрименяетсяУСНПатент", 
		ПараметрыФункциональнойОпцииНастройкиСистемыНалогообложения(Организация, Период, ДатаИзменения));

	Возврат Результат;

КонецФункции 

Функция СпособОтраженияАвансовВыданных(Организация, Период) Экспорт

	 Возврат ЗначениеУчетнойПолитики("СпособОтраженияАвансовВыданных", Организация, Период);

КонецФункции
