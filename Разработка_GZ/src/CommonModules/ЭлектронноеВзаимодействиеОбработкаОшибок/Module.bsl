////////////////////////////////////////////////////////////////////////////////
// ЭлектронноеВзаимодействиеОбработкаОшибок: механизм диагностики обмена электронными документами.
//
// Общий принцип использования подсистемы:
// 1. Инициализация контекста в начале выполнения операции - см. ЭлектронноеВзаимодействиеСлужебный.НовыйКонтекстОперации,
//    ЭлектронноеВзаимодействиеСлужебный.НовыйКонтекстОперации.
// 2. Передача контекста по стеку вызовов через параметры методов.
// 3. При возникновении ошибки, добавление ее в контекст - см. ЭлектронноеВзаимодействиеОбработкаОшибок.ДобавитьОшибку,
//    ЭлектронноеВзаимодействиеОбработкаОшибок.ДобавитьОшибку.
//    Состав видов ошибок можно расширить собственными строковыми константами.
//    Пример: "ОшибкаИнтернетСоединения" или ИмяМодуля.ВидОшибкиОшибкаИнтернетСоединения() - возвращает строковый
//    идентификатор вида ошибки.
// 4. Обработка коллекции накопленных ошибок после выполнения операции - см. ЭлектронноеВзаимодействиеОбработкаОшибок.ОбработатьОшибки,
//    ЭлектронноеВзаимодействиеОбработкаОшибок.ОбработатьОшибки.
// 5. Обработка собственных видов ошибок происходит в переопределяемой части процедуры
//    ЭлектронноеВзаимодействиеОбработкаОшибокКлиент.ПриОпределенииПараметровВидаОшибки,
//    см. пример в области ВидыОшибок общего модуля ЭлектронноеВзаимодействиеОбработкаОшибокКлиентСервер.
//
// Пример:
// КонтекстОперации = ЭлектронноеВзаимодействиеСлужебный.НовыйКонтекстОперации();
// HTTPСоединение = Новый HTTPСоединение("1c-edo.ru");
// HTTPЗапрос = Новый HTTPЗапрос;
// Попытка
//      Ответ = HTTPСоединение.Получить(HTTPЗапрос);
// Исключение
//      Ошибка = ЭлектронноеВзаимодействиеОбработкаОшибокКлиентСервер.НоваяОшибка(НСтр("ru = 'Получение маркера'"),
//          ЭлектронноеВзаимодействиеОбработкаОшибокКлиентСервер.ВидОшибкиИнтернетСоединение(),
//          ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),
//          НСтр("ru = 'Произошла ошибка при подключении'"));
//          ЭлектронноеВзаимодействиеОбработкаОшибок.ДобавитьОшибку(КонтекстОперации, Ошибка);
// КонецПопытки;
// ЭлектронноеВзаимодействиеОбработкаОшибок.ОбработатьОшибки(КонтекстОперации);
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Добавляет ошибку в контекст выполняемой операции.
//
// Параметры:
//  КонтекстОперации   - Структура - контекст операции, см. ЭлектронноеВзаимодействиеСлужебный.НовыйКонтекстОперации.
//  Ошибка                       - Структура - добавляемая ошибка, см. ЭлектронноеВзаимодействиеОбработкаОшибокКлиентСервер.НоваяОшибка.
//  ЗаписыватьВЖурналРегистрации - Булево - признак записи информации об ошибке в журнал регистрации.
//  КодСобытия                   - Строка - код события журнала регистрации.
//
Процедура ДобавитьОшибку(КонтекстОперации, Ошибка, ЗаписыватьВЖурналРегистрации = Истина, КодСобытия = "ОбменСКонтрагентами") Экспорт
	
	Если Не ЗначениеЗаполнено(КонтекстОперации) Тогда
		СообщатьОбОшибке = Истина;
		КонтекстОперации = ЭлектронноеВзаимодействиеСлужебный.НовыйКонтекстОперации();
	Иначе 
		СообщатьОбОшибке = Ложь;
	КонецЕсли;
	
	ДанныеОшибки = ЭлектронноеВзаимодействиеОбработкаОшибокКлиентСервер.ДобавитьОшибку(КонтекстОперации, Ошибка,
		ЗаписыватьВЖурналРегистрации, КодСобытия, СообщатьОбОшибке);
		
	КонтекстОперации.ДатаОкончанияОперации = ТекущаяДатаСеанса();
	
	Если ДанныеОшибки.СообщениеДляПользователя <> "" Тогда
		ОбщегоНазначения.СообщитьПользователю(ДанныеОшибки.СообщениеДляПользователя);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

Функция АрхивСИнформациейДляТехПоддержки(КонтекстОперации, ТехническаяИнформация)
	
	Отбор = ЭлектронноеВзаимодействиеОбработкаОшибокКлиентСервер.ОтборЖурналаРегистрации(КонтекстОперации);
	
	ФайлыДляТехподдержки = Новый Массив;
	
	Если Отбор <> Неопределено Тогда
		Если Отбор.ДатаНачала = Отбор.ДатаОкончания Тогда
			Отбор.ДатаОкончания = Отбор.ДатаОкончания + 1;
		КонецЕсли;
		ВременныйКаталог = ФайловаяСистема.СоздатьВременныйКаталог();
		ИмяФайлаЖурналаРегистрации = ВременныйКаталог + "EventLog.xml";
		УстановитьПривилегированныйРежим(Истина);
		ВыгрузитьЖурналРегистрации(ИмяФайлаЖурналаРегистрации, Отбор);
		УстановитьПривилегированныйРежим(Ложь);
		ФайлыДляТехподдержки.Добавить(ИмяФайлаЖурналаРегистрации);
	КонецЕсли;
	
	ИмяФайлаДополнительнаяИнформация = ВременныйКаталог + "Info.txt";
	ФайлыДляТехподдержки.Добавить(ИмяФайлаДополнительнаяИнформация);
	
	Текст = "";
	
	ЭлектронноеВзаимодействиеСлужебный.ПриФормированииФайлаСИнформациейДляТехподдержки(Текст, ТехническаяИнформация);
	
	ЭлектронноеВзаимодействиеСлужебный.ПриФормированииФайловДляТехподдержки(ФайлыДляТехподдержки, КонтекстОперации);
	
	Текст = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(Текст, ТехническаяИнформация);
	
	МассивПредставленийОшибок = Новый Массив;
	Для каждого Ошибка Из КонтекстОперации.Диагностика.Ошибки Цикл
		МассивПредставленийОшибок.Добавить(СтрШаблон(НСтр("ru = 'Вид операции: %1'"), Ошибка.ВидОперации));
		МассивПредставленийОшибок.Добавить(СтрШаблон(НСтр("ru = 'Краткое представление ошибки: %1'"),
			Ошибка.КраткоеПредставлениеОшибки));
		МассивПредставленийОшибок.Добавить(СтрШаблон(НСтр("ru = 'Подробное представление ошибки: %1'"),
			Ошибка.ПодробноеПредставлениеОшибки));
		МассивПредставленийОшибок.Добавить(Символы.ПС);
	КонецЦикла;
	
	Текст = Текст + Символы.ПС + НСтр("ru = 'Ошибки:'")
		+ Символы.ПС + СтрСоединить(МассивПредставленийОшибок, Символы.ПС);
	
	ЗаписьТекста = Новый ЗаписьТекста(ИмяФайлаДополнительнаяИнформация);
	ЗаписьТекста.Записать(Текст);
	ЗаписьТекста.Закрыть();
	
	ИмяФайлаАрхива = ПолучитьИмяВременногоФайла("zip");
	
	ЗаписьZipФайла = Новый ЗаписьZipФайла(ИмяФайлаАрхива);
	
	Для каждого ФайлДляТехподдержки Из ФайлыДляТехподдержки Цикл
		ЗаписьZipФайла.Добавить(ФайлДляТехподдержки);
	КонецЦикла;
	
	ЗаписьZipФайла.Записать();
	
	ДвоичныеДанныеАрхива = Новый ДвоичныеДанные(ИмяФайлаАрхива);
	
	Для каждого ФайлДляТехподдержки Из ФайлыДляТехподдержки Цикл
		УдалитьФайлы(ФайлДляТехподдержки);
	КонецЦикла;
	
	УдалитьФайлы(ИмяФайлаАрхива);
	
	Возврат ДвоичныеДанныеАрхива;
	
КонецФункции

Процедура ПолучитьАрхивСИнформациейДляТехПоддержкиВФоне(Параметры, АдресРезультата) Экспорт
	
	ПоместитьВоВременноеХранилище(АрхивСИнформациейДляТехПоддержки(Параметры.КонтекстОперации, Параметры.ТехническаяИнформация), АдресРезультата);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
