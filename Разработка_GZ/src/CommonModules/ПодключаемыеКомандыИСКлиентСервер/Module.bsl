#Область ПрограммныйИнтерфейс

// Вставить вызов в точках изменения видимости команд (групп команд) по документу-основанию
//
// Параметры:
//   Форма  - ФормаКлиентскогоПриложения     - форма-источник вызова.
//
Процедура УправлениеВидимостьюКомандПодключенныхКОбъекту(Форма) Экспорт
	
	КомандыОбъекта = КомандыОбъекта(Форма.ИмяФормы);
	
	ОпределитьКомандыДляУправленияВидимостью(Форма, КомандыОбъекта);
	ПодключаемыеКомандыИСКлиентСерверПереопределяемый.ПриНастройкеВидимостиКоманд(Форма, КомандыОбъекта);
	
КонецПроцедуры


// Управление видимостью команд по документу-основанию по умолчанию:
//   Группы скрываются если документ-основание выбран, отображаются если пуст.
//   Группы скрываются при недоступности ввода и выбора документа-основания.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - источник вызова.
// Возвращаемое значение:
//   Булево - обработка безусловно завершена (элементы скрыты).
//
Функция УправлениеВидимостьюПоУмолчанию(Форма) Экспорт
	
	Если ЗначениеЗаполнено(Форма.Объект.ДокументОснование)Тогда
		Форма.Элементы.ГруппаКомандыЗаполненияОснования.Видимость = Ложь;
		Возврат Истина;
	ИначеЕсли Форма.ВидимостьПодключаемыхКоманд.Свойство("ЗаполнениеПроведено") Тогда
		Форма.Элементы.ГруппаКомандыЗаполненияОснования.Видимость = Ложь;
		Возврат Истина;
	Иначе 
		Форма.Элементы.ГруппаКомандыЗаполненияОснования.Видимость = Истина;
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция КомандыОбъекта(ИмяФормы) Экспорт
	
	Результат = ПустыеГруппыКоманд();
	ПодключаемыеКомандыИСКлиентСерверПереопределяемый.ПриОпределенииКоманд(ИмяФормы, Результат);
	Возврат Результат;
	
КонецФункции

Функция ВидыПодключаемыхКоманд() Экспорт
	
	Результат = Новый Массив;
	
	ПодключаемаяКоманда = Новый Структура;
	ПодключаемаяКоманда.Вставить("Имя",           "ОформитьИС");
	ПодключаемаяКоманда.Вставить("ИмяПодменю",    "КомандыЗаполненияОснованияНовыеДокументы");
	ПодключаемаяКоманда.Вставить("Заголовок",     НСтр("ru = 'Оформить'"));
	ПодключаемаяКоманда.Вставить("Обработчик",    "ПодключаемыеКомандыИСКлиент.ОбработатьДействиеОформленияОснования");
	ПодключаемаяКоманда.Вставить("ТипМетаданных", "Документы");
	
	Результат.Добавить(ПодключаемаяКоманда);
	
	ПодключаемаяКоманда = Новый Структура;
	ПодключаемаяКоманда.Вставить("Имя",           "ВыбратьИС");
	ПодключаемаяКоманда.Вставить("ИмяПодменю",    "КомандыЗаполненияОснованияВыборДокументов");
	ПодключаемаяКоманда.Вставить("Заголовок",     НСтр("ru = 'Выбрать'"));
	ПодключаемаяКоманда.Вставить("Обработчик",    "ПодключаемыеКомандыИСКлиент.ОбработатьДействиеВыбораОснования");
	ПодключаемаяКоманда.Вставить("ТипМетаданных", "Документы");
	
	Результат.Добавить(ПодключаемаяКоманда);
	
	Возврат Результат;
	
КонецФункции

Процедура ДобавитьКомандуОформить(СтруктураКоманд, ИмяМетаданныхДокумента, ПредставлениеМетаданныхДокумента, СтрокаФункциональныхОпций = "") Экспорт
	
	ПрефиксИмениКомандыФормы = "КомандыЗаполненияОснованияНовыеДокументыОбычное_ОформитьИС";
	
	ОписаниеКоманды = Новый Структура;
	ОписаниеКоманды.Вставить("ИмяМетаданных",       ИмяМетаданныхДокумента);
	ОписаниеКоманды.Вставить("Представление",       ПредставлениеМетаданныхДокумента);
	ОписаниеКоманды.Вставить("ФункциональныеОпции", СтрокаФункциональныхОпций);
	ОписаниеКоманды.Вставить("ИмяКомандыФормы",     ПрефиксИмениКомандыФормы + ИмяМетаданныхДокумента);
	
	СтруктураКоманд.ОформитьИС.Добавить(ОписаниеКоманды);
	
КонецПроцедуры

Процедура ДобавитьКомандуВыбрать(СтруктураКоманд, ИмяМетаданныхДокумента, ПредставлениеМетаданныхДокумента, СтрокаФункциональныхОпций = "") Экспорт
	
	ПрефиксИмениКомандыФормы = "КомандыЗаполненияОснованияВыборДокументовОбычное_ВыбратьИС";
	
	ОписаниеКоманды = Новый Структура;
	ОписаниеКоманды.Вставить("ИмяМетаданных",       ИмяМетаданныхДокумента);
	ОписаниеКоманды.Вставить("Представление",       ПредставлениеМетаданныхДокумента);
	ОписаниеКоманды.Вставить("ФункциональныеОпции", СтрокаФункциональныхОпций);
	ОписаниеКоманды.Вставить("ИмяКомандыФормы",     ПрефиксИмениКомандыФормы + ИмяМетаданныхДокумента);
	ОписаниеКоманды.Вставить("РежимЗаписи",         "НеЗаписывать");
	
	СтруктураКоманд.ВыбратьИС.Добавить(ОписаниеКоманды);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОпределитьКомандыДляУправленияВидимостью(Форма, Команды)
	
	//Не добавлять условия видимости штатным способом!
	Если Форма.ВидимостьПодключаемыхКоманд.Количество() = 0 Тогда 
		Для Каждого ИмяГруппИКоманд Из Команды Цикл
			Для Каждого ДанныеКоманды Из ИмяГруппИКоманд.Значение Цикл
				Если Форма.Команды.Найти(ДанныеКоманды.ИмяКомандыФормы) = Неопределено Тогда
					Продолжить;
				ИначеЕсли Форма.Элементы[ДанныеКоманды.ИмяКомандыФормы].Видимость Тогда
					Форма.ВидимостьПодключаемыхКоманд.Вставить(ДанныеКоманды.ИмяКомандыФормы);
					Форма.ВидимостьПодключаемыхКоманд[ДанныеКоманды.ИмяКомандыФормы] = Новый Структура("ГруппаКоманд",ИмяГруппИКоманд.Ключ);
					ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Форма.ВидимостьПодключаемыхКоманд[ДанныеКоманды.ИмяКомандыФормы],ДанныеКоманды);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		Если Форма.ВидимостьПодключаемыхКоманд.Количество() = 0 Тогда 
			Форма.ВидимостьПодключаемыхКоманд.Вставить("ЗаполнениеПроведено");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#Область ЗаполнениеКомандПоГруппам

Функция ПустыеГруппыКоманд()
	
	Результат = Новый Структура;
	Для Каждого ВидКоманды Из ВидыПодключаемыхКоманд() Цикл
		Результат.Вставить(ВидКоманды.Имя,Новый Массив);
	КонецЦикла;
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти