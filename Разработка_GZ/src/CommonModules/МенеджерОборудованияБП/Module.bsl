
#Область ПрограммныйИнтерфейс

Процедура ЭкземплярОборудованияПриСозданииНаСервере(Объект, ЭтаФорма, Отказ, Параметры, СтандартнаяОбработка) Экспорт
	ДобавляемыеРеквизиты = Новый Массив;
	
	ТипБулево = Новый ОписаниеТипов("Булево");
	ТипЧисло = Новый ОписаниеТипов("Число");
	ТипСтрока = Новый ОписаниеТипов("ФорматированнаяСтрока");
	ТипСклад = Новый ОписаниеТипов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Тип("СправочникСсылка.Склады")));
	ТипУзелОбмена = Новый ОписаниеТипов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Тип("ПланОбменаСсылка.ОбменСПодключаемымОборудованиемOffline")));
	
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Склад", ТипСклад, , "Склад"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("УзелОбмена", ТипУзелОбмена, , "УзелОбмена"));
	
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Отправляет1СSMS", ТипЧисло, , "Отправляет1СSMS"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Отправляет1СEmail", ТипЧисло, , "Отправляет1СEmail"));
	
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Отправляет1СSMS_Надпись", ТипСтрока, , "Отправляет1СSMS"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Отправляет1СEmail_Надпись", ТипСтрока, , "Отправляет1СSMS"));
	
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ЗаполнятьКонтактныеДанные", ТипБулево, ,НСтр("ru = 'Заполнять электронную почту и телефон из данных контрагента'")));
	
	ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Элемент = ЭтаФорма.Элементы.Добавить("Склад", Тип("ПолеФормы"));
	Элемент.ПутьКДанным = "Склад";
	Элемент.Вид         = ВидПоляФормы.ПолеВвода;
	
	ГруппаДополнительныеРеквизиты = ЭтаФорма.Элементы.Найти("ГруппаПараметрыРегистрацииККТ");
	Если ГруппаДополнительныеРеквизиты <> Неопределено Тогда
		ЭтаФорма.Элементы.Переместить(Элемент, ЭтаФорма, ГруппаДополнительныеРеквизиты);
	КонецЕсли;
	
	ПараметрыОборудования = ПараметрыПодключаемогоОборудования(Объект.Ссылка);
	
	Объект.Организация                 = ПараметрыОборудования.Организация;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, ПараметрыОборудования);
	
	Если Параметры.Свойство("Склад") Тогда
		ЭтаФорма.Склад = Параметры.Склад;
	Иначе
		ЭтаФорма.Склад = ПараметрыОборудования.Склад;
	КонецЕсли;
	
	Если Параметры.Свойство("РабочееМесто") Тогда
		Объект.РабочееМесто = Параметры.РабочееМесто;
	КонецЕсли;
	
	Если Параметры.Свойство("ТипОборудования") Тогда
		
		Объект.ТипОборудования = Параметры.ТипОборудования;
		
		//Заполним список драйверов
		ЭтаФорма.Элементы.ДрайверОборудования.СписокВыбора.Очистить();
		
		СписокДрайверов = Новый СписокЗначений();
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДрайверыОборудования.Ссылка,
		|	ДрайверыОборудования.Наименование,
		|	ДрайверыОборудования.ТипОборудования
		|ИЗ
		|	Справочник.ДрайверыОборудования КАК ДрайверыОборудования
		|ГДЕ
		|	(ДрайверыОборудования.ТипОборудования = &ТипОборудования)
		|	И НЕ ДрайверыОборудования.ПометкаУдаления
		|УПОРЯДОЧИТЬ ПО ДрайверыОборудования.Наименование";
		
		Запрос.УстановитьПараметр("ТипОборудования", Параметры.ТипОборудования);
		ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ЭтаФорма.Элементы.ДрайверОборудования.СписокВыбора.Добавить(ВыборкаДетальныеЗаписи.Ссылка, ВыборкаДетальныеЗаписи.Наименование);
		КонецЦикла;
				
	КонецЕсли;
	
	Если Объект.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ККМОфлайн Тогда
		ЭтаФорма.ОрганизацияВидимость = Истина;
		ЭтаФорма.Элементы.Организация.АвтоОтметкаНезаполненного = Истина;
		ЭтаФорма.Элементы.Склад.АвтоОтметкаНезаполненного = Истина;
		ЭтаФорма.Элементы.Склад.ПодсказкаВвода = НСтр("ru='Укажите розничный магазин'");
	ИначеЕсли Объект.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.СканерШтрихкода
		ИЛИ Объект.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.СчитывательRFID Тогда
		ЭтаФорма.ОрганизацияВидимость = Ложь;
		ЭтаФорма.Элементы.Организация.АвтоОтметкаНезаполненного = Ложь;
		ЭтаФорма.Элементы.Склад.ПодсказкаВвода = НСтр("ru='Если оборудование используется в розничном магазине'");
		ЭтаФорма.Элементы.Склад.АвтоОтметкаНезаполненного = Ложь;
		ЭтаФорма.Элементы.Склад.ОтметкаНезаполненного = Ложь;		
	Иначе
		ЭтаФорма.ОрганизацияВидимость = Истина;
		ЭтаФорма.Элементы.Организация.АвтоОтметкаНезаполненного = Истина;
		ЭтаФорма.Элементы.Склад.ПодсказкаВвода = НСтр("ru='Если оборудование используется в розничном магазине'");
		ЭтаФорма.Элементы.Склад.АвтоОтметкаНезаполненного = Ложь;
		ЭтаФорма.Элементы.Склад.ОтметкаНезаполненного = Ложь;		
	КонецЕсли;
	
	ДобавитьРеквизитыККТ(ЭтаФорма, Объект);
	
	ГруппаОтправлятьЧеки = ЭтаФорма.Элементы.Найти("ГруппаОтправлятьЧеки");
	Если ГруппаОтправлятьЧеки <> Неопределено Тогда
		ГруппаОтправлятьЧеки.Видимость = Объект.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ККТ;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЭкземплярОборудованияПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи) Экспорт
	Если ПараметрыЗаписи.Свойство("Организация") Тогда
		
		МенеджерЗаписи = РегистрыСведений.ОборудованиеПоОрганизациям.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Оборудование = ТекущийОбъект.Ссылка;
		МенеджерЗаписи.Организация  = ПараметрыЗаписи.Организация;
		
		Если ПараметрыЗаписи.Свойство("Склад") Тогда
			Если ТекущийОбъект.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ККМОфлайн Тогда
				ТипЦенРозничнойТорговли = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыЗаписи.Склад, "ТипЦенРозничнойТорговли");
				Если НЕ ЗначениеЗаполнено(ТипЦенРозничнойТорговли) Тогда
					СообщениеПользователю = НСтр("ru = 'Для обмена с офлайн оборудованием необходимо указать тип цен для склада %1.'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеПользователю, ПараметрыЗаписи.Склад), 
						ТекущийОбъект, ,"Склад", Отказ);
					Возврат;
				КонецЕсли; 
			КонецЕсли; 
			МенеджерЗаписи.Склад = ПараметрыЗаписи.Склад;
		КонецЕсли;
		
		Если ПараметрыЗаписи.Свойство("УзелОбмена") 
			И ПараметрыЗаписи.Свойство("Склад") Тогда
			
			Если ТекущийОбъект.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ККМОфлайн Тогда
				
				Если ЗначениеЗаполнено(ПараметрыЗаписи.УзелОбмена) Тогда
					МенеджерЗаписи.УзелОбмена = ПараметрыЗаписи.УзелОбмена;
				ИначеЕсли ЗначениеЗаполнено(ПараметрыЗаписи.Склад) Тогда
					УзелОбъект = ПланыОбмена.ОбменСПодключаемымОборудованиемOffline.СоздатьУзел();
					УзелОбъект.УстановитьНовыйКод();
					УзелОбъект.Наименование = ТекущийОбъект.Наименование;
					УзелОбъект.Записать();
					
					МенеджерЗаписи.УзелОбмена = УзелОбъект.Ссылка;
					
					ПараметрыОбъекта = Новый Структура("УзелОбмена, Склад", УзелОбъект.Ссылка, ПараметрыЗаписи.Склад);
					ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор());
					
					ДлительныеОперации.ВыполнитьВФоне("ПланыОбмена.ОбменСПодключаемымОборудованиемOffline.ОбновитьРегистрКодовНоменклатуры",
						ПараметрыОбъекта, ПараметрыВыполнения);
			
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыЗаписи.Свойство("Отправляет1СSMS") Тогда
			МенеджерЗаписи.Отправляет1СSMS = ПараметрыЗаписи.Отправляет1СSMS;
		КонецЕсли; 
		
		Если ПараметрыЗаписи.Свойство("Отправляет1СEmail") Тогда
			МенеджерЗаписи.Отправляет1СEmail = ПараметрыЗаписи.Отправляет1СEmail;
		КонецЕсли; 
		
		Если ПараметрыЗаписи.Свойство("ЗаполнятьКонтактныеДанные") Тогда
			МенеджерЗаписи.ЗаполнятьКонтактныеДанные = ПараметрыЗаписи.ЗаполнятьКонтактныеДанные;
		КонецЕсли; 
		
		МенеджерЗаписи.Записать(Истина);
	КонецЕсли;
	
	Если ТекущийОбъект.УстройствоИспользуется Тогда
		Если ТекущийОбъект.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ЭквайринговыйТерминал 
			И Не ПолучитьФункциональнуюОпцию("ИспользоватьОплатуПоПлатежнымКартам")
			И ПравоДоступа("Изменение", Метаданные.Константы.ИспользоватьОплатуПоПлатежнымКартам) Тогда
			
			Константы.ИспользоватьОплатуПоПлатежнымКартам.Установить(Истина);
			ПараметрыЗаписи.Вставить("НужноОбновитьИнтерфейс", Истина);
			
		ИначеЕсли (ТекущийОбъект.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ПринтерЧеков
			Или ТекущийОбъект.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ККТ
			Или ТекущийОбъект.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ФискальныйРегистратор)
			И Не ПолучитьФункциональнуюОпцию("ИспользоватьФискальныйРегистратор") 
			И ПравоДоступа("Изменение", Метаданные.Константы.ИспользоватьФискальныйРегистратор) Тогда
			
			Константы.ИспользоватьФискальныйРегистратор.Установить(Истина);
			ПараметрыЗаписи.Вставить("НужноОбновитьИнтерфейс", Истина);
			
		ИначеЕсли ТекущийОбъект.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ККМОфлайн 
			И Не ПолучитьФункциональнуюОпцию("ВедетсяРозничнаяТорговля") 
			И ПравоДоступа("Изменение", Метаданные.Константы.ВедетсяРозничнаяТорговля) Тогда
			
			Константы.ВедетсяРозничнаяТорговля.Установить(Истина);
			ПараметрыЗаписи.Вставить("НужноОбновитьИнтерфейс", Истина);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЭкземплярФискальныеОперацииПриСозданииНаСервере(Запись, ЭтаФорма, Отказ, Параметры, СтандартнаяОбработка) Экспорт
	Элементы = ЭтаФорма.Элементы;
	
	ГруппаБаннер = Элементы.Вставить("ПредупреждениеОПробитомЧеке", Тип("ГруппаФормы"),ЭтаФорма, Элементы.Найти("ДокументОснование"));
	ГруппаБаннер.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаБаннер.РастягиватьПоГоризонтали = Истина;
	ГруппаБаннер.Отображение = ОтображениеОбычнойГруппы.Нет;
	ГруппаБаннер.ОтображатьЗаголовок = ЛОЖЬ;
	ГруппаБаннер.ЦветФона = ЦветаСтиля.БыстрыеОтборыФонГруппы;
	
	НадписьПробитьЧек = Элементы.Добавить("НадписьПробитьЧек", Тип("ДекорацияФормы"), ГруппаБаннер); 
	
	ШаблонСтроки = НСтр("ru = 'Для пробития чека коррекции перейдите в <a href =ДокументОснование>документ основание</a>'");
	НадписьПробитьЧек.Заголовок = СтроковыеФункции.ФорматированнаяСтрока(ШаблонСтроки);
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.Представление;
	ГруппаБаннер.Видимость = НЕ ЭтаФорма.Параметры.Свойство("НеПоказыватьБаннер");
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция ПараметрыПодключаемогоОборудования(ПодключаемоеОборудование)
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ПодключаемоеОборудование", ПодключаемоеОборудование);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОборудованиеПоОрганизациям.Организация КАК Организация,
	|	ОборудованиеПоОрганизациям.Склад КАК Склад,
	|	ЕСТЬNULL(ОборудованиеПоОрганизациям.УзелОбмена.Ссылка, НЕОПРЕДЕЛЕНО) КАК УзелОбмена,
	|	ВЫБОР
	|		КОГДА ОборудованиеПоОрганизациям.Отправляет1СSMS
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Отправляет1СSMS,
	|	ВЫБОР
	|		КОГДА ОборудованиеПоОрганизациям.Отправляет1СEmail
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Отправляет1СEmail,
	|	ОборудованиеПоОрганизациям.ЗаполнятьКонтактныеДанные КАК ЗаполнятьКонтактныеДанные
	|ИЗ
	|	РегистрСведений.ОборудованиеПоОрганизациям КАК ОборудованиеПоОрганизациям
	|ГДЕ
	|	ОборудованиеПоОрганизациям.Оборудование = &ПодключаемоеОборудование";
	
	ПараметрыПодключаемогоОборудования = Новый Структура;
	ПараметрыПодключаемогоОборудования.Вставить("Организация",               БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация"));
	ПараметрыПодключаемогоОборудования.Вставить("Склад",                     БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнойСклад"));
	ПараметрыПодключаемогоОборудования.Вставить("УзелОбмена",                НЕОПРЕДЕЛЕНО);
	ПараметрыПодключаемогоОборудования.Вставить("Отправляет1СSMS",           0);
	ПараметрыПодключаемогоОборудования.Вставить("Отправляет1СEmail",         0);
	ПараметрыПодключаемогоОборудования.Вставить("ЗаполнятьКонтактныеДанные", Ложь);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Если РезультатЗапроса.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ПараметрыПодключаемогоОборудования, РезультатЗапроса);
	КонецЕсли; 
	
	Возврат ПараметрыПодключаемогоОборудования;
КонецФункции

Процедура ДобавитьРеквизитыККТ(ЭтаФорма, Объект)
	
	ЭтаФорма.Отправляет1СEmail_Надпись = Новый ФорматированнаяСтрока("Настроить",,,,"НастроитьEmail");
	ЭтаФорма.Отправляет1СSMS_Надпись   = Новый ФорматированнаяСтрока("Настроить",,,,"НастроитьSMS");
	
	ГруппаОтправлятьЧеки = ЭтаФорма.Элементы.Добавить("ГруппаОтправлятьЧеки", Тип("ГруппаФормы"));
	ГруппаОтправлятьЧеки.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаОтправлятьЧеки.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаОтправлятьЧеки.Отображение = ОтображениеОбычнойГруппы.СлабоеВыделение;
	ГруппаОтправлятьЧеки.Заголовок = НСтр("ru = 'Отправка электронных чеков'");
	
	ГруппаДополнительныеРеквизиты = ЭтаФорма.Элементы.Найти("ГруппаПараметрыРегистрацииККТ");
	Если ГруппаДополнительныеРеквизиты <> Неопределено Тогда
		ЭтаФорма.Элементы.Переместить(ГруппаОтправлятьЧеки, ГруппаДополнительныеРеквизиты, ЭтаФорма.Элементы.Найти("ПараметрыРегистрацииККТ"));
	КонецЕсли; 
	
	ГруппаНастройкиОтправки = ЭтаФорма.Элементы.Добавить("ГруппаНастройкиОтправкиЧеки", Тип("ГруппаФормы"), ГруппаОтправлятьЧеки);
	ГруппаНастройкиОтправки.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаНастройкиОтправки.ОтображатьЗаголовок = Ложь;
	ГруппаНастройкиОтправки.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	
	НоваяГруппа(ЭтаФорма, "Отправляет1СEmail", НСтр("ru = 'Отправка по электронной почте'"), ГруппаНастройкиОтправки);
	НоваяГруппа(ЭтаФорма, "Отправляет1СSMS",   НСтр("ru = 'Отправка по SMS'"),               ГруппаНастройкиОтправки);
	
	Элемент = ЭтаФорма.Элементы.Добавить("ЗаполнятьКонтактныеДанные", Тип("ПолеФормы"), ГруппаОтправлятьЧеки);
	Элемент.ПутьКДанным = "ЗаполнятьКонтактныеДанные";
	Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
	Элемент.Вид = ВидПоляФормы.ПолеФлажка;
	
КонецПроцедуры

Функция ИмяРеквизита()
	УИД = СтрЗаменить(Новый УникальныйИдентификатор, "-", "");

	Возврат СтрШаблон("Элемент_%1", УИД);
КонецФункции 

Процедура НоваяГруппа(ЭтаФорма, ПутьКДанным, Заголовок, Родитель)
	Группа = ЭтаФорма.Элементы.Добавить(ИмяРеквизита(), Тип("ГруппаФормы"), Родитель);
	Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	Группа.Отображение = ОтображениеОбычнойГруппы.СлабоеВыделение;
	Группа.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСверху;
	Группа.Подсказка = Заголовок;
	Группа.ОтображатьЗаголовок = Ложь;
	Группа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	
	НовыйПереключатель(ЭтаФорма, Группа, ПутьКДанным).СписокВыбора.Добавить(0, НСТр("ru = 'Через ОФД'"));
	
	ГруппаНастройка = ЭтаФорма.Элементы.Добавить(ИмяРеквизита(), Тип("ГруппаФормы"), Группа);
	ГруппаНастройка.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаНастройка.ОтображатьЗаголовок = Ложь;
	ГруппаНастройка.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	
	НовыйПереключатель(ЭтаФорма, ГруппаНастройка, ПутьКДанным).СписокВыбора.Добавить(1, НСТр("ru = 'Из программы'"));
	
	НоваяДекорация(ЭтаФорма, ГруппаНастройка);
	
	ПолеНадписи = ЭтаФорма.Элементы.Добавить(ИмяРеквизита(), Тип("ПолеФормы"), ГруппаНастройка);
	ПолеНадписи.Вид = ВидПоляФормы.ПолеНадписи;
	ПолеНадписи.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ПолеНадписи.ПутьКДанным = СтрШаблон("%1_%2", ПутьКДанным, "Надпись");

КонецПроцедуры 

Процедура НоваяДекорация(ЭтаФорма, Родитель)

	ГруппаНастройка = ЭтаФорма.Элементы.Добавить(ИмяРеквизита(), Тип("ДекорацияФормы"), Родитель);

КонецПроцедуры 

Функция НовыйПереключатель(ЭтаФорма, Группа, ПутьКДанным)
	ИмяРеквизита = ИмяРеквизита();
	
	Элемент = ЭтаФорма.Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), Группа);
	Элемент.ПутьКДанным = ПутьКДанным;
	Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	Элемент.Вид = ВидПоляФормы.ПолеПереключателя;
	
	Возврат Элемент
КонецФункции 

#КонецОбласти 