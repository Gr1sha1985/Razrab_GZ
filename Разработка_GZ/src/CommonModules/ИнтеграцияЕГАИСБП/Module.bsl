#Область СлужебныйПрограммныйИнтерфейс

// Получает организацию ЕГАИС по контрагенту или организации, которая указана в реквизите Контрганент.
// 
// Параметры:
// 	ОрганизацияКонтрагентГосИС - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - по данному типу осуществяется связь
// 	организации или контрагента с организацей ЕГАИС.
// Возвращаемое значение:
// 	СправочникСсылка.КлассификаторОрганизацийЕГАИС - Организация ЕГАИС.
Функция ОрганизацияЕГАИС(ОрганизацияКонтрагентГосИС) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КлассификаторОрганизацийЕГАИС.Ссылка КАК ОрганизацияЕГАИС
		|ИЗ
		|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
		|ГДЕ
		|	КлассификаторОрганизацийЕГАИС.Контрагент = &ОрганизацияКонтрагентГосИС
		|	И КлассификаторОрганизацийЕГАИС.СоответствуетОрганизации");
	Запрос.УстановитьПараметр("ОрганизацияКонтрагентГосИС", ОрганизацияКонтрагентГосИС);
	Результат = Запрос.Выполнить().Выбрать();
	
	ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ПустаяСсылка();
	
	Если Результат.Следующий() Тогда
		ОрганизацияЕГАИС = Результат.ОрганизацияЕГАИС;
	КонецЕсли; 
	
	Возврат ОрганизацияЕГАИС;
КонецФункции

Процедура ЗаполнениеДокументовЕГАИС(Источник, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
		
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.АктСписанияЕГАИС") Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СписаниеТоваров") Тогда
			
			РеквизитыОснования          = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Склад");
			ТипСклада                   = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыОснования.Склад, "ТипСклада");
			Источник.ВидДокумента       = ?(ТипСклада = Перечисления.ТипыСкладов.ОптовыйСклад,
		                                   Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1,
		                                   Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2);
			Источник.ДокументОснование  = ДанныеЗаполнения;
			Источник.ПричинаСписания    = Перечисления.ПричиныСписанийЕГАИС.Недостача;
			
			Если НЕ ЗначениеЗаполнено(Источник.ОрганизацияЕГАИС) Тогда
				Источник.ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
					РеквизитыОснования.Организация, РеквизитыОснования.Склад);
			КонецЕсли;
			
			ЗаполнитьТоварыЕГАИС(Источник, ДанныеЗаполнения);
			
			Если Источник.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1 Тогда
				Документы.АктСписанияЕГАИС.ПодобратьСправки2(Источник);
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПередачаВРегистр2ЕГАИС") Тогда
			
			РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Источник, "ОрганизацияЕГАИС, ТорговыйОбъект, Организация");
			ЗаполнитьЗначенияСвойств(Источник, РеквизитыОснования);
			
			Источник.ДокументОснование  = ДанныеЗаполнения;
			Источник.ВидДокумента       = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1;
			Источник.ПричинаСписания    = Перечисления.ПричиныСписанийЕГАИС.Реализация;
			
			ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииПередачиВРегистр2(Источник);
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
			
			РеквизитыОснования          = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Склад");
			Источник.ВидДокумента       = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2;
			Источник.ПричинаСписания    = Перечисления.ПричиныСписанийЕГАИС.Реализация;
			
			Если НЕ ЗначениеЗаполнено(Источник.ОрганизацияЕГАИС) Тогда
				Источник.ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
					РеквизитыОснования.Организация, РеквизитыОснования.Склад);
			КонецЕсли;
			
			ИсключитьМаркируемые = Истина;
			
			ЗаполнитьТоварыЕГАИС(Источник, ДанныеЗаполнения, ИсключитьМаркируемые);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.АктПостановкиНаБалансЕГАИС") Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
			
			РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Склад");
		
			Источник.ДокументОснование         = ДанныеЗаполнения;
			Источник.ПричинаПостановкиНаБаланс = Перечисления.ПричиныПостановкиНаБалансЕГАИС.Излишки;
			
			Если НЕ ЗначениеЗаполнено(Источник.ОрганизацияЕГАИС) Тогда
				Источник.ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
					РеквизитыОснования.Организация, РеквизитыОснования.Склад);
			КонецЕсли;
			
			ЗаполнитьТоварыЕГАИС(Источник, ДанныеЗаполнения);
		
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("АкцизныеМаркиВРегистр3") Тогда	
			
			ЗаполнитьЗначенияСвойств(Источник, ДанныеЗаполнения);
			Если ДанныеЗаполнения.Свойство("Склад") Тогда
				Источник.ТорговыйОбъект = ДанныеЗаполнения.Склад;
			КонецЕсли;
			
			Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
				ДанныеЗаполнения = ДанныеЗаполнения.ДокументОснование;
			КонецЕсли;
			
			ЗаполнитьАктПостановкиНаБалансЕГАИСНаОснованииСтруктуры(Источник, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ТТНИсходящаяЕГАИС") Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			
			РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, СкладОтправитель, СкладПолучатель, Номер, Дата");
			
			Источник.ДокументОснование = ДанныеЗаполнения;
			Источник.ВидОперации       = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.РасходнаяНакладная;
			Источник.Идентификатор     = Строка(ДанныеЗаполнения.УникальныйИдентификатор());
			Источник.НомерТТН          = СформироватьНомерИсходящейТТН(РеквизитыОснования.Номер, РеквизитыОснования.Дата);
			Источник.ДатаОтгрузки      = РеквизитыОснования.Дата;
			Источник.ДатаТТН           = РеквизитыОснования.Дата;
			Источник.Упакована         = Истина;
			Источник.Грузополучатель   = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОснования.Организация, РеквизитыОснования.СкладПолучатель);
			Источник.Грузоотправитель  = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОснования.Организация, РеквизитыОснования.СкладОтправитель);
			
			ЗаполнитьТоварыЕГАИС(Источник, ДанныеЗаполнения);
			Документы.ТТНИсходящаяЕГАИС.ПодобратьСправки2(Источник);
		
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
			
			РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Склад, Контрагент, Номер, Дата");
			
			Источник.ДокументОснование = ДанныеЗаполнения;
			Источник.ВидОперации       = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.РасходнаяНакладная;
			Источник.Идентификатор     = Строка(ДанныеЗаполнения.УникальныйИдентификатор());
			Источник.НомерТТН          = СформироватьНомерИсходящейТТН(РеквизитыОснования.Номер, РеквизитыОснования.Дата);
			Источник.ДатаОтгрузки      = РеквизитыОснования.Дата;
			Источник.ДатаТТН           = РеквизитыОснования.Дата;
			Источник.Упакована         = Истина;
			Источник.Грузополучатель   = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОснования.Контрагент, Справочники.Склады.ПустаяСсылка());
			Источник.Грузоотправитель  = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОснования.Организация, РеквизитыОснования.Склад);
			
			ЗаполнитьТоварыЕГАИС(Источник, ДанныеЗаполнения);
			Документы.ТТНИсходящаяЕГАИС.ПодобратьСправки2(Источник);
		
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ОстаткиЕГАИС") Тогда
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ПередачаВРегистр2ЕГАИС") Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
			И ДанныеЗаполнения.Свойство("ЗаполнитьТоварыКОформлению") Тогда
			
			ЗаполнитьПередачуВРегистр2ЕГАИСНаОснованииСтруктуры(Источник, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
		
			ЗаполнитьПередачуВРегистр2ЕГАИСНаОснованииТТНВходящейЕГАИС(Источник, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ВозвратИзРегистра2ЕГАИС") Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ТТНИсходящаяЕГАИС") Тогда
			
			ЗаполнитьВозвратИзРегистра2ЕГАИСНаОснованииТТНИсходящейЕГАИС(Источник, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ЧекЕГАИС") Тогда
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ЧекЕГАИСВозврат") Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
			РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Склад, Контрагент, Номер, Дата");
			
			Источник.ДокументОснование = ДанныеЗаполнения;
			Источник.ОрганизацияЕГАИС  = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОснования.Организация, РеквизитыОснования.Склад);
			Источник.ВидОперации       = Перечисления.ВидыОперацийЧекаЕГАИСВозврат.ВозвратОтРозничногоПокупателя;
			
			ЗаполнитьТоварыЕГАИС(Источник, ДанныеЗаполнения);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("СтатусПроверкиИПодбора", Источник.Метаданные()) Тогда
		Источник.СтатусПроверкиИПодбора = Перечисления.СтатусыПроверкиИПодбораИС.НеВыполнялось;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Ответственный", Источник.Метаданные()) Тогда
		Источник.Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
		
КонецПроцедуры

Функция СформироватьНомерИсходящейТТН(Номер, Дата)
	
	НомерБезПрефиксов = ПрефиксацияОбъектовКлиентСервер.УдалитьПрефиксыИзНомераОбъекта(Номер, Истина, Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаТТН", НачалоДня(Дата));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТТНИсходящаяЕГАИС.НомерТТН КАК НомерТТН
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТТНИсходящаяЕГАИС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО ТТНИсходящаяЕГАИС.Ссылка = СтатусыДокументовЕГАИС.Документ
	|ГДЕ
	|	ТТНИсходящаяЕГАИС.ДатаТТН = &ДатаТТН
	|	И НЕ ТТНИсходящаяЕГАИС.ПометкаУдаления";
	
	НомераТТН = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("НомерТТН");
	
	Результат = НомерБезПрефиксов;
	
	Сч = 0;
	Пока НомераТТН.Найти(Результат) <> Неопределено Цикл
		Сч = Сч + 1;
		Результат = НомерБезПрефиксов + "-" + Формат(Сч, "ЧГ=0");
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьТоварыЕГАИС(Источник, ДанныеЗаполнения, ИсключитьМаркируемые = Ложь)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , Источник.Ссылка);
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВозвратТоваровПоставщикуТовары.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция
	|ПОМЕСТИТЬ СоответствиеТоваров
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ВозвратТоваровПоставщикуТовары.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|ГДЕ
	|	ВозвратТоваровПоставщикуТовары.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровПоставщикуТовары.Номенклатура КАК Номенклатура,
	|	СоответствиеТоваров.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВозвратТоваровПоставщикуТовары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровПоставщикуТовары.Ссылка.СуммаВключаетНДС
	|			ТОГДА ВозвратТоваровПоставщикуТовары.Сумма
	|		ИНАЧЕ ВозвратТоваровПоставщикуТовары.Сумма + ВозвратТоваровПоставщикуТовары.СуммаНДС
	|	КОНЕЦ КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СоответствиеТоваров КАК СоответствиеТоваров
	|		ПО ВозвратТоваровПоставщикуТовары.Номенклатура = СоответствиеТоваров.Номенклатура
	|ГДЕ
	|	ВозвратТоваровПоставщикуТовары.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.АлкогольнаяПродукция,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.Сумма
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.Сумма) КАК Сумма,
	|	ЕСТЬNULL(ВидыАлкогольнойПродукции.Маркируемый, ИСТИНА) КАК Маркируемый
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК ВидыАлкогольнойПродукции
	|		ПО ТоварыКОформлению.АлкогольнаяПродукция.ВидПродукции = ВидыАлкогольнойПродукции.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	ЕСТЬNULL(ВидыАлкогольнойПродукции.Маркируемый, ИСТИНА)
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0";
	
	//Реквизиты основания
	МетаданныеДокумента  = ДанныеЗаполнения.Метаданные();
	ИмяДокумента         = МетаданныеДокумента.Имя;
	ЕстьСуммаВключаетНДС = ОбщегоНазначения.ЕстьРеквизитОбъекта("СуммаВключаетНДС", МетаданныеДокумента);
	ЕстьСумма            = (МетаданныеДокумента.ТабличныеЧасти["Товары"].Реквизиты.Найти("Сумма") <> Неопределено);
	
	//Реквизиты получателя
	ЕстьКоличествоУпаковок = (Источник.Метаданные().ТабличныеЧасти["Товары"].Реквизиты.Найти("КоличествоУпаковок") <> Неопределено);
	ЕстьЦена               = (Источник.Метаданные().ТабличныеЧасти["Товары"].Реквизиты.Найти("Цена") <> Неопределено);
	
	Если НЕ (ЕстьСумма И ЕстьСуммаВключаетНДС) Тогда
		ТекстССуммой = 
		"	ВЫБОР
		|		КОГДА ВозвратТоваровПоставщикуТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА ВозвратТоваровПоставщикуТовары.Сумма
		|		ИНАЧЕ ВозвратТоваровПоставщикуТовары.Сумма + ВозвратТоваровПоставщикуТовары.СуммаНДС
		|	КОНЕЦ КАК Сумма";
		
		ТекстБезСуммы = 
		"	0 КАК Сумма";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ТекстССуммой, ТекстБезСуммы);
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВозвратТоваровПоставщику", ИмяДокумента);
	Запрос.Текст = ТекстЗапроса;
			
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать();
	
	Источник.Товары.Очистить();
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		Если ИсключитьМаркируемые И ВыборкаНоменклатура.Маркируемый Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Источник.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНоменклатура);
		Если ЕстьКоличествоУпаковок Тогда
			НоваяСтрока.КоличествоУпаковок	= НоваяСтрока.Количество;
		КонецЕсли;
		Если ЕстьЦена Тогда
			НоваяСтрока.Цена = ?(НоваяСтрока.Количество = 0, НоваяСтрока.Сумма, НоваяСтрока.Сумма/НоваяСтрока.Количество);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса, ДанныеЗаполнения, БезСопоставления = Ложь)
	
	ВыборкаТовары = РезультатЗапроса.Выбрать();
	
	Если ВыборкаТовары.Количество() = 0 Тогда
		
		ВызватьИсключение СтрШаблон(
			НСтр("ru='В %1 отсутствует алкогольная продукция для заполнения.'"),
			ДанныеЗаполнения);
		
	КонецЕсли;
	
	Пока ВыборкаТовары.Следующий() Цикл
		
		Если ЗначениеЗаполнено(ВыборкаТовары.АлкогольнаяПродукция) ИЛИ БезСопоставления Тогда
			
			НоваяСтрока = ДокументОбъект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТовары);
			
		Иначе
			
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ВыборкаТовары, "Номенклатура") Тогда
				
				ДокументОбъект.Товары.Очистить();
				
				ТекстОшибки = НСтр("ru='Не выполнено сопоставление %Номенклатура% классификатору номенклатуры ЕГАИС.'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Номенклатура%", ВыборкаТовары.Номенклатура);
				
				ВызватьИсключение ТекстОшибки;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьАктПостановкиНаБалансЕГАИСНаОснованииСтруктуры(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ДокументОбъект.ОрганизацияЕГАИС = ДанныеЗаполнения.ОрганизацияЕГАИС;
	ДокументОбъект.ВидДокумента     = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр3;
	
	ТаблицаТовары = Новый ТаблицаЗначений;
	ТаблицаТовары.Колонки.Добавить("АлкогольнаяПродукция", Новый ОписаниеТипов("СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС"));
	ТаблицаТовары.Колонки.Добавить("Справка2",             Новый ОписаниеТипов("СправочникСсылка.Справки2ЕГАИС"));
	
	Для Каждого ДанныеАкцизнойМарки Из ДанныеЗаполнения.АкцизныеМарки Цикл
		
		НоваяСтрока = ДокументОбъект.АкцизныеМарки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеАкцизнойМарки);
		НоваяСтрока.Количество = 1;
		
		НоваяСтрокаТовары = ТаблицаТовары.Добавить();
		НоваяСтрокаТовары.АлкогольнаяПродукция = ДанныеАкцизнойМарки.АлкогольнаяПродукция;
		НоваяСтрокаТовары.Справка2             = ДанныеАкцизнойМарки.Справка2;
		
	КонецЦикла;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Т.Справка2 КАК Справка2,
	|	1 КАК Количество
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	&Товары КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.АлкогольнаяПродукция,
	|	Т.Справка2 КАК Справка2,
	|	СУММА(Т.Количество) КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	втТовары КАК Т
	|СГРУППИРОВАТЬ ПО
	|	Т.АлкогольнаяПродукция,
	|	Т.Справка2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2 КАК Справка2,
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.Номенклатура) КАК Номенклатура,
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.Характеристика) КАК Характеристика
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	Товары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = ТабличнаяЧасть.АлкогольнаяПродукция
	|			И СоответствиеНоменклатурыЕГАИС.Справка2 = ТабличнаяЧасть.Справка2
	|ГДЕ
	|	Не СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СоответствиеНоменклатурыЕГАИС.Номенклатура) = 1
	|		И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СоответствиеНоменклатурыЕГАИС.Характеристика) < 2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СопоставленыеПозиции.Номенклатура   КАК Номенклатура,
	|	СопоставленыеПозиции.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2             КАК Справка2,
	|	ТабличнаяЧасть.Количество           КАК Количество,
	|	ТабличнаяЧасть.Количество           КАК КоличествоУпаковок
	|ИЗ
	|	Товары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО ТабличнаяЧасть.АлкогольнаяПродукция = СопоставленыеПозиции.АлкогольнаяПродукция
	|			И ТабличнаяЧасть.Справка2 = СопоставленыеПозиции.Справка2
	|			И НЕ СопоставленыеПозиции.АлкогольнаяПродукция ЕСТЬ NULL
	|");
	Запрос.УстановитьПараметр("Товары", ТаблицаТовары);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ДокументОбъект.Товары.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииПередачиВРегистр2(ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Упаковка КАК Упаковка,
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2 КАК Справка2,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.КоличествоУпаковок КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И ЕСТЬNULL(НЕ ТабличнаяЧасть.АлкогольнаяПродукция.ВидПродукции.Маркируемый, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Упаковка,
	|	ОформленныеТовары.АлкогольнаяПродукция,
	|	ОформленныеТовары.Справка2,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.КоличествоУпаковок
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Упаковка КАК Упаковка,
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2 КАК Справка2,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Упаковка,
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0";
	
	ДокументОбъект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Для Каждого СтрокаТЧ Из ДокументОбъект.Товары Цикл
		СтрокаТЧ.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПередачуВРегистр2ЕГАИСНаОснованииСтруктуры(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ДокументОбъект.ОрганизацияЕГАИС = ДанныеЗаполнения.ОрганизацияЕГАИС;
	
	ТаблицаТовары = Новый ТаблицаЗначений;
	ТаблицаТовары.Колонки.Добавить("АлкогольнаяПродукция", Новый ОписаниеТипов("СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС"));
	ТаблицаТовары.Колонки.Добавить("Справка2",             Новый ОписаниеТипов("СправочникСсылка.Справки2ЕГАИС"));
	ТаблицаТовары.Колонки.Добавить("Количество",           Новый ОписаниеТипов("Число"));
	
	Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаТовары.Добавить(), СтрокаТЧ);
	КонецЦикла;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Т.Справка2 КАК Справка2,
	|	Т.Количество КАК Количество
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	&Товары КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.АлкогольнаяПродукция,
	|	Т.Справка2 КАК Справка2,
	|	СУММА(Т.Количество) КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	втТовары КАК Т
	|СГРУППИРОВАТЬ ПО
	|	Т.АлкогольнаяПродукция,
	|	Т.Справка2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2 КАК Справка2,
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.Номенклатура) КАК Номенклатура,
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.Характеристика) КАК Характеристика
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	Товары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = ТабличнаяЧасть.АлкогольнаяПродукция
	|			И СоответствиеНоменклатурыЕГАИС.Справка2 = ТабличнаяЧасть.Справка2
	|ГДЕ
	|	Не СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СоответствиеНоменклатурыЕГАИС.Номенклатура) = 1
	|		И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СоответствиеНоменклатурыЕГАИС.Характеристика) < 2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СопоставленыеПозиции.Номенклатура   КАК Номенклатура,
	|	СопоставленыеПозиции.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2             КАК Справка2,
	|	ТабличнаяЧасть.Количество           КАК Количество,
	|	ТабличнаяЧасть.Количество           КАК КоличествоУпаковок
	|ИЗ
	|	Товары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО ТабличнаяЧасть.АлкогольнаяПродукция = СопоставленыеПозиции.АлкогольнаяПродукция
	|			И ТабличнаяЧасть.Справка2 = СопоставленыеПозиции.Справка2
	|			И НЕ СопоставленыеПозиции.АлкогольнаяПродукция ЕСТЬ NULL
	|");
	Запрос.УстановитьПараметр("Товары", ТаблицаТовары);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ДокументОбъект.Товары.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПередачуВРегистр2ЕГАИСНаОснованииТТНВходящейЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка          КАК ДокументОснование,
	|	НЕ Таблица.Проведен     КАК ЕстьОшибкиПроведен,
	|	Таблица.Грузополучатель КАК ОрганизацияЕГАИС,
	|	Таблица.Ответственный   КАК Ответственный
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	"""" КАК Упаковка,
	|	ТабличнаяЧасть.Количество                                  КАК Количество,
	|	ТабличнаяЧасть.Количество                                  КАК КоличествоУпаковок,
	|	ТабличнаяЧасть.АлкогольнаяПродукция                        КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2                                    КАК Справка2
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Справка2 <> ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|	И ТабличнаяЧасть.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	ОформленныеТовары.Упаковка              КАК Упаковка,
	|	-ОформленныеТовары.Количество           КАК Количество,
	|	-ОформленныеТовары.КоличествоУпаковок   КАК КоличествоУпаковок,
	|	ОформленныеТовары.АлкогольнаяПродукция  КАК АлкогольнаяПродукция,
	|	ОформленныеТовары.Справка2              КАК Справка2
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура              КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика            КАК Характеристика,
	|	ТоварыКОформлению.Серия                     КАК Серия,
	|	ТоварыКОформлению.Упаковка                  КАК Упаковка,
	|	ТоварыКОформлению.АлкогольнаяПродукция      КАК АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2                  КАК Справка2,
	|	СУММА(ТоварыКОформлению.Количество)         КАК Количество,
	|	СУММА(ТоварыКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ
	|	ВтОстатки
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	ТоварыКОформлению.Упаковка,
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.Справка2 КАК Справка2,
	|	КОЛИЧЕСТВО(АкцизныеМарки.АкцизнаяМарка) КАК Количество
	|ПОМЕСТИТЬ
	|	АкцизныеМарки
	|ИЗ
	|	РегистрСведений.АкцизныеМаркиЕГАИС КАК АкцизныеМарки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОстатки КАК втОстатки
	|		ПО ВтОстатки.Справка2 = АкцизныеМарки.Справка2
	|ГДЕ
	|	АкцизныеМарки.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.ВНаличии),ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.КПостановкеНаБаланс))
	|СГРУППИРОВАТЬ ПО
	|	АкцизныеМарки.Справка2;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура              КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика            КАК Характеристика,
	|	ТоварыКОформлению.Серия                     КАК Серия,
	|	ТоварыКОформлению.Упаковка                  КАК Упаковка,
	|	ТоварыКОформлению.АлкогольнаяПродукция      КАК АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2                  КАК Справка2,
	|	ТоварыКОформлению.Количество         - ЕСТЬNULL(АкцизныеМарки.Количество, 0) КАК Количество,
	|	ТоварыКОформлению.КоличествоУпаковок - ЕСТЬNULL(АкцизныеМарки.Количество, 0) КАК КоличествоУпаковок
	|ИЗ
	|	ВтОстатки КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ АкцизныеМарки КАК АкцизныеМарки
	|		ПО ТоварыКОформлению.Справка2 = АкцизныеМарки.Справка2
	|ГДЕ
	|	ТоварыКОформлению.Количество - ЕСТЬNULL(АкцизныеМарки.Количество, 0) > 0
	|");
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ПередачаВРегистр2ЕГАИС.КонечныеСтатусы());
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[РезультатЗапроса.Количество() - 1], ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ЗаполнитьВозвратИзРегистра2ЕГАИСНаОснованииТТНИсходящейЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка           КАК ДокументОснование,
	|	Ложь                     КАК ЕстьОшибкиПроведен,
	|	Таблица.Грузоотправитель КАК ОрганизацияЕГАИС,
	|	Таблица.Ответственный    КАК Ответственный
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ВозвратИзРегистра2ЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	"""" КАК Упаковка,
	|	ТабличнаяЧасть.Количество                                  КАК Количество,
	|	ТабличнаяЧасть.Количество                                  КАК КоличествоУпаковок,
	|	ТабличнаяЧасть.АлкогольнаяПродукция                        КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2                                    КАК Справка2
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Справка2 = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|	И ТабличнаяЧасть.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	ОформленныеТовары.Упаковка              КАК Упаковка,
	|	-ОформленныеТовары.Количество           КАК Количество,
	|	-ОформленныеТовары.КоличествоУпаковок   КАК КоличествоУпаковок,
	|	ОформленныеТовары.АлкогольнаяПродукция  КАК АлкогольнаяПродукция,
	|	ОформленныеТовары.Справка2              КАК Справка2
	|ИЗ
	|	Документ.ВозвратИзРегистра2ЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура              КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика            КАК Характеристика,
	|	ТоварыКОформлению.Серия                     КАК Серия,
	|	ТоварыКОформлению.Упаковка                  КАК Упаковка,
	|	ТоварыКОформлению.АлкогольнаяПродукция      КАК АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2                  КАК Справка2,
	|	СУММА(ТоварыКОформлению.Количество)         КАК Количество,
	|	СУММА(ТоварыКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	ТоварыКОформлению.Упаковка,
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|");
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ВозвратИзРегистра2ЕГАИС.КонечныеСтатусы());
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[РезультатЗапроса.Количество() - 1], ДанныеЗаполнения);
	
КонецПроцедуры

Функция ТребуетсяОформлениеДокументовЕГАИС(Основание, МетаданныеДокументаЕГАИС) Экспорт
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			Возврат  ЕстьНеМаркируемаяАлкогольнаяПродукция(Основание, "Товары");
		Иначе
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.СписаниеТоваров") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			Возврат ЕстьАлкогольнаяПродукция(Основание, "Товары");
		Иначе
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктПостановкиНаБалансЕГАИС Тогда
			Возврат ЕстьАлкогольнаяПродукция(Основание, "Товары");
		Иначе
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			Возврат ЕстьАлкогольнаяПродукция(Основание, "Товары");
		Иначе
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			Возврат ЕстьАлкогольнаяПродукция(Основание, "Товары");
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНВходящаяЕГАИС Тогда
			Возврат Ложь;
		Иначе
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		
		Возврат ЕстьАлкогольнаяПродукция(Основание, "Товары");
		
	КонецЕсли;
	
	ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Не релизован ввод %1 на основании %2 в процедуре ИнтеграцияЕГАИСБП.ТребуетсяОформлениеДокументовЕГАИС()'"), ТипЗнч(Основание), МетаданныеДокументаЕГАИС.ПолноеИмя());
	
	ВызватьИсключение ТекстОшибки;
	
КонецФункции

Функция ЕстьАлкогольнаяПродукция(ДокументСсылка, ИмяТабличнойЧасти, ИмяКолонки = "Номенклатура")
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	" + ДокументСсылка.Метаданные().ПолноеИмя() + "." + ИмяТабличнойЧасти + " КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбАлкогольнойПродукции КАК СведенияОбАлкогольнойПродукции
	|		ПО ТабличнаяЧасть." + ИмяКолонки + " = СведенияОбАлкогольнойПродукции.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК ВидыАлкогольнойПродукции
	|		ПО СведенияОбАлкогольнойПродукции.КодВида169 = ВидыАлкогольнойПродукции.Код
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
	|	И (НЕ СведенияОбАлкогольнойПродукции.Номенклатура ЕСТЬ NULL)
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();
	
КонецФункции

Функция ЕстьНеМаркируемаяАлкогольнаяПродукция(ДокументСсылка, ИмяТабличнойЧасти = "Товары", ИмяКолонки = "Номенклатура")
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	" + ДокументСсылка.Метаданные().ПолноеИмя() + "." + ИмяТабличнойЧасти + " КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбАлкогольнойПродукции КАК СведенияОбАлкогольнойПродукции
	|		ПО ТабличнаяЧасть." + ИмяКолонки + " = СведенияОбАлкогольнойПродукции.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК ВидыАлкогольнойПродукции
	|		ПО СведенияОбАлкогольнойПродукции.КодВида169 = ВидыАлкогольнойПродукции.Код
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
	|	И (НЕ СведенияОбАлкогольнойПродукции.Номенклатура ЕСТЬ NULL)
	|	И (ВидыАлкогольнойПродукции.Маркируемый ЕСТЬ NULL ИЛИ НЕ ВидыАлкогольнойПродукции.Маркируемый)
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();
	
КонецФункции

Функция ЗапросСтатусаОформленияЕГАИС(ДокументОснование, МетаданныеДокумента) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПередачаВРегистр2ЕГАИС") 
		ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ТТНИсходящаяЕГАИС") 
		ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
		
		Запрос = Новый Запрос;
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаДокументы.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ОформленныеДокументы
		|ИЗ
		|	Документ.ПередачаВРегистр2ЕГАИС КАК ТаблицаДокументы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
		|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
		|ГДЕ
		|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
		|	И ТаблицаДокументы.Проведен
		|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусыПередачаВРегистр2ЕГАИС)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	Товары.Количество           КАК План,
		|	0                           КАК Факт
		|ПОМЕСТИТЬ ТоварыКОформлению
		|ИЗ
		|	Документ.ТТНВходящаяЕГАИС.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &ДокументОснование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОформленныеТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	0                                      КАК План,
		|	ОформленныеТовары.Количество           КАК Факт
		|ИЗ
		|	Документ.ПередачаВРегистр2ЕГАИС.Товары КАК ОформленныеТовары
		|ГДЕ
		|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКОформлению.АлкогольнаяПродукция,
		|	СУММА(ТоварыКОформлению.План) КАК План,
		|	СУММА(ТоварыКОформлению.Факт) КАК Факт
		|ПОМЕСТИТЬ Результат
		|ИЗ
		|	ТоварыКОформлению КАК ТоварыКОформлению
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКОформлению.АлкогольнаяПродукция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
		|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
		|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.План <= Т.Факт)                       КАК ЕстьПолностьюОформленныеТовары,
		|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.АлкогольнаяПродукция = &ПустаяСсылка) КАК ТребуетсяСопоставлениеНоменклатуры,
		|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
		|";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПередачаВРегистр2ЕГАИС", МетаданныеДокумента.Имя);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТТНВходящаяЕГАИС", ДокументОснование.Метаданные().Имя);
		Запрос.Текст = ТекстЗапроса;
		
		Возврат Запрос;
		
	Иначе
		
		Запрос = Новый Запрос;
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаДокументы.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ОформленныеДокументы
		|ИЗ
		|	Документ.АктПостановкиНаБалансЕГАИС КАК ТаблицаДокументы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
		|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
		|ГДЕ
		|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
		|	И ТаблицаДокументы.Проведен
		|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусыАктПостановкиНаБалансЕГАИС)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
		|	""""                          КАК Характеристика,
		|	""""                          КАК Серия,
		|	ТабличнаяЧасть.Количество     КАК План,
		|	0                             КАК Факт
		|ПОМЕСТИТЬ ТоварыКОформлению
		|ИЗ
		|	Документ.ОприходованиеТоваров.Товары КАК ТабличнаяЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбАлкогольнойПродукции КАК СведенияОбАлкогольнойПродукции
		|		ПО ТабличнаяЧасть.Номенклатура = СведенияОбАлкогольнойПродукции.Номенклатура
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &ДокументОснование
		|	И НЕ (НЕ СведенияОбАлкогольнойПродукции.Номенклатура ЕСТЬ NULL)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
		|	ОформленныеТовары.Характеристика КАК Характеристика,
		|	ОформленныеТовары.Серия          КАК Серия,
		|	0                                КАК План,
		|	ОформленныеТовары.Количество     КАК Факт
		|ИЗ
		|	Документ.АктПостановкиНаБалансЕГАИС.Товары КАК ОформленныеТовары
		|ГДЕ
		|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
		|	ТоварыКОформлению.Характеристика КАК Характеристика,
		|	ТоварыКОформлению.Серия          КАК Серия,
		|	СУММА(ТоварыКОформлению.План)    КАК План,
		|	СУММА(ТоварыКОформлению.Факт)    КАК Факт
		|ПОМЕСТИТЬ Результат
		|ИЗ
		|	ТоварыКОформлению КАК ТоварыКОформлению
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКОформлению.Номенклатура,
		|	ТоварыКОформлению.Характеристика,
		|	ТоварыКОформлению.Серия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)       КАК ЕстьОформленныеТовары,
		|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт) КАК ЕстьНеОформленныеТовары,
		|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.План <= Т.Факт)              КАК ЕстьПолностьюОформленныеТовары,
		|	ЛОЖЬ                                                                          КАК ТребуетсяСопоставлениеНоменклатуры,
		|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.План < Т.Факт)               КАК ЕстьОшибкиОформления
		|";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "АктПостановкиНаБалансЕГАИС", МетаданныеДокумента.Имя);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ОприходованиеТоваров", ДокументОснование.Метаданные().Имя);
		Запрос.Текст = ТекстЗапроса;
		
		Возврат Запрос;
		
	КонецЕсли;
		
КонецФункции

Функция ДанныеАлкогольнойПродукции(Номенклатура) Экспорт
	
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Маркируемый"                 , Ложь);
	СтруктураРезультат.Вставить("ПродаетсяВРозлив"            , Ложь);
	СтруктураРезультат.Вставить("ЭтоАлкогольнаяПродукция"     , Ложь);
	СтруктураРезультат.Вставить("ВидАлкогольнойПродукцииЕГАИС", Неопределено);
	СтруктураРезультат.Вставить("ЕдиницаИзмерения"            , Неопределено);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыАлкогольнойПродукции.Ссылка КАК ВидАлкогольнойПродукцииЕГАИС,
	|	ЕСТЬNULL(ВидыАлкогольнойПродукции.Маркируемый, ЛОЖЬ) КАК Маркируемый,
	|	ЛОЖЬ КАК ПродаетсяВРозлив,
	|	НЕ СведенияОбАлкогольнойПродукции.Номенклатура ЕСТЬ NULL КАК ЭтоАлкогольнаяПродукция,
	|	СправочникНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбАлкогольнойПродукции КАК СведенияОбАлкогольнойПродукции
	|		ПО СправочникНоменклатура.Ссылка = СведенияОбАлкогольнойПродукции.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК ВидыАлкогольнойПродукции
	|		ПО (СведенияОбАлкогольнойПродукции.КодВида169 = ВидыАлкогольнойПродукции.Код)
	|ГДЕ
	|	СправочникНоменклатура.Ссылка = &Номенклатура";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураРезультат, Выборка);
	КонецЕсли;
	
	Возврат СтруктураРезультат;
	
КонецФункции

Процедура ЗаполнитьАлкогольнуюПродукцию(ТекущаяСтрока) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура = &Номенклатура
	|	И СоответствиеНоменклатурыЕГАИС.Характеристика = &Характеристика
	|	И (СоответствиеНоменклатурыЕГАИС.Серия = &Серия 
	|		ИЛИ &СерияЗаполнена = ЛОЖЬ)
	|");
	
	Запрос.УстановитьПараметр("Номенклатура",   ТекущаяСтрока.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", ТекущаяСтрока.Характеристика);
	Запрос.УстановитьПараметр("Серия",          ТекущаяСтрока.Серия);
	Запрос.УстановитьПараметр("СерияЗаполнена", ЗначениеЗаполнено(ТекущаяСтрока.Серия));
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	КоличествоСопоставлено = Выборка.Количество();
	ТекущаяСтрока.НоменклатураДляВыбора.Очистить();
	
	Пока Выборка.Следующий() Цикл
		Если КоличествоСопоставлено = 1 Тогда
			ТекущаяСтрока.АлкогольнаяПродукция = Выборка.АлкогольнаяПродукция;
		КонецЕсли;
		ТекущаяСтрока.НоменклатураДляВыбора.Добавить(Выборка.АлкогольнаяПродукция);
	КонецЦикла;
	
	Если КоличествоСопоставлено = 0 Тогда
		ТекущаяСтрока.АлкогольнаяПродукция = Неопределено;
	КонецЕсли;
	Если КоличествоСопоставлено > 1 Тогда
		ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = СтрШаблон(НСтр("ru = '<Несколько позиций (%1)>'"), КоличествоСопоставлено);
	ИначеЕсли КоличествоСопоставлено = 1 Тогда
		ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = "";
	Иначе
		ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = НСтр("ru = '<Не сопоставлено>'");
	КонецЕсли;
	
КонецПроцедуры

Функция СписокФормДляДобавленияБаннера() Экспорт
	СписокФормДляДобавленияБаннера = Новый Массив;
	СписокФормДляДобавленияБаннера.Добавить("Документ.АктПостановкиНаБалансЕГАИС.Форма.ФормаСпискаДокументов");
	СписокФормДляДобавленияБаннера.Добавить("Документ.АктСписанияЕГАИС.Форма.ФормаСпискаДокументов");
	СписокФормДляДобавленияБаннера.Добавить("Документ.ВозвратИзРегистра2ЕГАИС.Форма.ФормаСпискаДокументов");
	СписокФормДляДобавленияБаннера.Добавить("Документ.ЗапросАкцизныхМарокЕГАИС.Форма.ФормаСпискаДокументов");
	СписокФормДляДобавленияБаннера.Добавить("Документ.ОтчетЕГАИС.Форма.ФормаСпискаДокументов");
	СписокФормДляДобавленияБаннера.Добавить("Документ.ПередачаВРегистр2ЕГАИС.Форма.ФормаСпискаДокументов");
	СписокФормДляДобавленияБаннера.Добавить("Документ.ТТНВходящаяЕГАИС.Форма.ФормаСпискаДокументов");
	СписокФормДляДобавленияБаннера.Добавить("Документ.ТТНВходящаяЕГАИС.Форма.ФормаСписка");
	СписокФормДляДобавленияБаннера.Добавить("Документ.ТТНИсходящаяЕГАИС.Форма.ФормаСпискаДокументов");
	СписокФормДляДобавленияБаннера.Добавить("Документ.ТТНИсходящаяЕГАИС.Форма.ФормаСписка");
	СписокФормДляДобавленияБаннера.Добавить("Документ.ЧекЕГАИС.Форма.ФормаСпискаДокументов");
	СписокФормДляДобавленияБаннера.Добавить("Документ.ЧекЕГАИСВозврат.Форма.ФормаСпискаДокументов");
	
	Возврат СписокФормДляДобавленияБаннера;
КонецФункции

Процедура ДобавитьБаннерНаФорму(Форма) Экспорт
	ОрганизацииПоКоторымТребуетсяВводОстатков = РегистрыСведений.НастройкаУчетаОстатковЕГАИС.ОрганизацииПоКоторымТребуетсяВводОстатков();
	Если ОрганизацииПоКоторымТребуетсяВводОстатков.Количество() > 0 Тогда
		
		РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОрганизацииПоКоторымТребуетсяВводОстатков[0], "Код, Наименование");
		
		ГруппаФормы                          = Форма.Элементы.Добавить("Баннер", Тип("ГруппаФормы"));
		ГруппаФормы.Вид                      = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаФормы.Группировка              = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаФормы.ОтображатьЗаголовок      = Ложь;
		ГруппаФормы.Отображение              = ОтображениеОбычнойГруппы.Нет;
		ГруппаФормы.ЦветФона                 = ЦветаСтиля.БыстрыеОтборыФонГруппы;
		ГруппаФормы.РастягиватьПоГоризонтали = Истина;
		
		Надпись                              = Форма.Элементы.Добавить("ТекстИнформации", Тип("ДекорацияФормы"), ГруппаФормы);
		Надпись.АвтоМаксимальнаяШирина       = Ложь;
		Надпись.Вид                          = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок                    = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Для ведения остатков алкогольной продукции по %1 необходимо'"), РеквизитыОрганизации.Наименование);
		
		НадписьПолучитьИзЕГАИС                          = Форма.Элементы.Добавить("НадписьПолучитьИзЕГАИС", Тип("ДекорацияФормы"), ГруппаФормы);
		НадписьПолучитьИзЕГАИС.Вид                      = ВидДекорацииФормы.Надпись;
		НадписьПолучитьИзЕГАИС.Гиперссылка              = ИСТИНА;
		НадписьПолучитьИзЕГАИС.Подсказка                = РеквизитыОрганизации.Код;
		НадписьПолучитьИзЕГАИС.ОтображениеПодсказки     = ОтображениеПодсказки.Нет;
		НадписьПолучитьИзЕГАИС.Заголовок                = НСтр("ru = 'получить их в ЕГАИС.'");
		НадписьПолучитьИзЕГАИС.УстановитьДействие("Нажатие", "Подключаемый_ВыполнитьПереопределяемуюКоманду");
		
		ГруппаОтключитьНапоминание                                    = Форма.Элементы.Добавить("ГруппаОтключитьНапоминание", Тип("ГруппаФормы"), ГруппаФормы);
		ГруппаОтключитьНапоминание.Вид                                = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаОтключитьНапоминание.Группировка                        = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаОтключитьНапоминание.ОтображатьЗаголовок                = Ложь;
		ГруппаОтключитьНапоминание.Отображение                        = ОтображениеОбычнойГруппы.Нет;
		ГруппаОтключитьНапоминание.РастягиватьПоГоризонтали           = Истина;
		ГруппаОтключитьНапоминание.ГоризонтальноеПоложениеПодчиненных = ГоризонтальноеПоложениеЭлемента.Право;
		
		НадписьОтключитьНапоминание             = Форма.Элементы.Добавить("НадписьОтключитьНапоминание", Тип("ДекорацияФормы"), ГруппаОтключитьНапоминание);
		НадписьОтключитьНапоминание.Вид         = ВидДекорацииФормы.Надпись;
		НадписьОтключитьНапоминание.Гиперссылка = ИСТИНА;
		НадписьОтключитьНапоминание.Подсказка   = РеквизитыОрганизации.Код;
		НадписьОтключитьНапоминание.ОтображениеПодсказки     = ОтображениеПодсказки.Нет;
		НадписьОтключитьНапоминание.Заголовок   = НСтр("ru = 'Больше не напоминать.'");
		НадписьОтключитьНапоминание.УстановитьДействие("Нажатие", "Подключаемый_ВыполнитьПереопределяемуюКоманду");
		
		ЭлементСтраницы = Форма.Элементы.Найти("Страницы");
		Если ЭлементСтраницы <> Неопределено Тогда
			Форма.Элементы.Переместить(ГруппаФормы, Форма, ЭлементСтраницы);
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

Процедура ПриОпределенииЗапросаТоварыДокументаОснования(
			Знач МетаданныеДокументаОснования, Знач МетаданныеДокументаЕГАИС, ТекстЗапроса, ДополнительныеПараметрыЗапроса) Экспорт
			
	Если МетаданныеДокументаОснования = Метаданные.Документы.ОтчетОРозничныхПродажах Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			Если Константы.ДатаНачалаРегистрацииРозничныхПродажВЕГАИСВСельскойМестности.Получить() >= ТекущаяДатаСеанса() Тогда
				ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования);
			Иначе
				ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, , Истина);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ВозвратТоваровПоставщику Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ОприходованиеТоваров Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктПостановкиНаБалансЕГАИС Тогда
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, Истина);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПеремещениеТоваров Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНВходящаяЕГАИС Тогда
			// не формируем - будет получен через обмен
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПоступлениеТоваровУслуг Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНВходящаяЕГАИС Тогда
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, Истина);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.СписаниеТоваров Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ВозвратТоваровОтПокупателя Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ЧекЕГАИСВозврат Тогда
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, Истина);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, 
		ЭтоПриход = Ложь, ТолькоНемаркируемая = Ложь, ИмяТабличнойЧасти = "Товары", ИмяКолонки = "Номенклатура")
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&ЭтоДвижениеПриход КАК ЭтоДвижениеПриход,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	"""" КАК Характеристика,
	|	"""" КАК Серия,
	|	ТаблицаТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыДокументаОснования
	|ИЗ
	|	" + МетаданныеДокументаОснования.ПолноеИмя() + "." + ИмяТабличнойЧасти + " КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбАлкогольнойПродукции КАК СведенияОбАлкогольнойПродукции
	|		ПО ТаблицаТовары." + ИмяКолонки + " = СведенияОбАлкогольнойПродукции.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК ВидыАлкогольнойПродукции
	|		ПО СведенияОбАлкогольнойПродукции.КодВида169 = ВидыАлкогольнойПродукции.Код
	|ГДЕ
	|	ТаблицаТовары.Ссылка В (&МассивДокументов)
	|	И (НЕ СведенияОбАлкогольнойПродукции.Номенклатура ЕСТЬ NULL)
	|	" + ?(ТолькоНемаркируемая, "И (ВидыАлкогольнойПродукции.Маркируемый ЕСТЬ NULL ИЛИ НЕ ВидыАлкогольнойПродукции.Маркируемый)", "") + "
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТоварыДокументаОснования", РасчетСтатусовОформленияИС.ИмяВременнойТаблицыДляВыборкиДанныхДокумента());
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЭтоДвижениеПриход", ?(ЭтоПриход, "ИСТИНА", "ЛОЖЬ"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти 


#Область ОбновлениеИнформационнойБазы

Функция СписокДокументовЕГАИС()
	СписокДокументовЕГАИС = Новый Массив;
	СписокДокументовЕГАИС.Добавить("ТТНВходящаяЕГАИС");
	СписокДокументовЕГАИС.Добавить("ТТНИсходящаяЕГАИС");
	СписокДокументовЕГАИС.Добавить("ЧекЕГАИС");
	СписокДокументовЕГАИС.Добавить("ЧекЕГАИСВозврат");
	СписокДокументовЕГАИС.Добавить("АктПостановкиНаБалансЕГАИС");
	СписокДокументовЕГАИС.Добавить("АктСписанияЕГАИС");
	СписокДокументовЕГАИС.Добавить("ВозвратИзРегистра2ЕГАИС");
	СписокДокументовЕГАИС.Добавить("ПередачаВРегистр2ЕГАИС");
	
	Возврат СписокДокументовЕГАИС;
КонецФункции

Процедура ЗаполнитьНовыеРеквизитыТТНИсходящаяЕГАИС(Параметры) Экспорт
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТТНИсходящаяЕГАИСТовары.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ТТНИсходящаяЕГАИСТовары.Количество <> ТТНИсходящаяЕГАИСТовары.КоличествоФакт) КАК ЕстьРасхождения
	|ПОМЕСТИТЬ ВТ_ДокументыКОбработке
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ТТНИсходящаяЕГАИСТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТТНИсходящаяЕГАИСТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1000
	|	ТТНИсходящаяЕГАИС.Ссылка КАК Ссылка,
	|	ВТ_ДокументыКОбработке.ЕстьРасхождения КАК ЕстьРасхождения
	|ИЗ
	|	ВТ_ДокументыКОбработке КАК ВТ_ДокументыКОбработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТТНИсходящаяЕГАИС КАК ТТНИсходящаяЕГАИС
	|		ПО ВТ_ДокументыКОбработке.Ссылка = ТТНИсходящаяЕГАИС.Ссылка
	|ГДЕ
	|	ВТ_ДокументыКОбработке.ЕстьРасхождения <> ТТНИсходящаяЕГАИС.ЕстьРасхождения";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Если РезультатЗапроса.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Ложь;
	
	ПроблемныхОбъектов = 0;
	ОбъектовОбработано = 0;
	
	Для каждого СтрокаРезультата Из РезультатЗапроса Цикл
		
		НачатьТранзакцию();
		
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.ТТНИсходящаяЕГАИС");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", СтрокаРезультата.Ссылка);
			Блокировка.Заблокировать();
			
			
			ДокументОбъект = СтрокаРезультата.Ссылка.ПолучитьОбъект();
			Если ДокументОбъект = Неопределено Тогда
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			
			ДокументОбъект.ЕстьРасхождения = СтрокаРезультата.ЕстьРасхождения;
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
				
			ОбъектовОбработано = ОбъектовОбработано + 1;
			
			ЗафиксироватьТранзакцию();
		Исключение
			// Если не удалось обработать какой-либо объект, повторяем попытку снова.
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось обработать документ: %1 по причине:
					|%2'"),
					СтрокаРезультата.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение,
				СтрокаРезультата.Ссылка.Метаданные(), СтрокаРезультата.Ссылка, ТекстСообщения);
		КонецПопытки; 
	КонецЦикла; 
	
	Если ОбъектовОбработано = 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедуре ЗаполнитьНовыеРеквизитыДокументовЕГАИС
				|не удалось обработать некоторые документы (пропущены): %1'"),
				ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация,
			Метаданные.Справочники.КлассификаторОКВЭД2,,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедура ЗаполнитьНовыеРеквизитыДокументовЕГАИС
					|обработала очередную порцию документов: %1'"), ОбъектовОбработано));
	КонецЕсли;
КонецПроцедуры

Процедура ОбработатьДокументЕГАИС(МетаданныеОбъекта, ПоследнееОбработанноеЗначение)
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ПустаяНоменклатура", ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа(Метаданные.ОпределяемыеТипы.Номенклатура.Имя));
	Запрос.УстановитьПараметр("ПоследняяСсылка",    ПоследнееОбработанноеЗначение);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
	|	ТТНВходящаяЕГАИСТовары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ДокументыДляОбработки
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТТНВходящаяЕГАИСТовары
	|ГДЕ
	|	ТТНВходящаяЕГАИСТовары.Номенклатура = &ПустаяНоменклатура
	|	И ТТНВходящаяЕГАИСТовары.Ссылка > &ПоследняяСсылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	МАКСИМУМ(УдалитьСоответствиеНоменклатурыЕГАИС.Номенклатура) КАК Номенклатура
	|ИЗ
	|	ВТ_ДокументыДляОбработки КАК ДокументыДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТТНВходящаяЕГАИС.Товары КАК ТаблицаТовары
	|		ПО ДокументыДляОбработки.Ссылка = ТаблицаТовары.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УдалитьСоответствиеНоменклатурыЕГАИС КАК УдалитьСоответствиеНоменклатурыЕГАИС
	|		ПО (ТаблицаТовары.АлкогольнаяПродукция = УдалитьСоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция)
	|			И (&УсловиеУпаковка)
	|ГДЕ
	|	ТаблицаТовары.Номенклатура = &ПустаяНоменклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	ИмяОбъектаМетаданных = МетаданныеОбъекта.ПолноеИмя();
	
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("ИдентификаторУпаковки", МетаданныеОбъекта.ТабличныеЧасти.Товары) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеУпаковка", "ТаблицаТовары.ИдентификаторУпаковки = УдалитьСоответствиеНоменклатурыЕГАИС.ИдентификаторУпаковки");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеУпаковка", "ИСТИНА");
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "Документ.ТТНВходящаяЕГАИС", ИмяОбъектаМетаданных);
	
	ПроблемныхОбъектов = 0;
	ОбъектовОбработано = 0;
	
	ПоследнееОбработанноеЗначение = Неопределено;
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		
		ПоследнееОбработанноеЗначение = Выборка.Ссылка;
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ИмяОбъектаМетаданных);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Если ДокументОбъект = Неопределено Тогда
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
		
			ОбъектовОбработано = ОбъектовОбработано + 1;
			
			НоменклатураСопоставлена = Ложь;
			
			ВыборкаСтроки = Выборка.Выбрать();
			Пока ВыборкаСтроки.Следующий() Цикл
				Если ЗначениеЗаполнено(ВыборкаСтроки.Номенклатура) Тогда
					ДокументОбъект.Товары[ВыборкаСтроки.НомерСтроки-1].Номенклатура = ВыборкаСтроки.Номенклатура;
					НоменклатураСопоставлена = истина;
				КонецЕсли; 
			КонецЦикла;
			
			Если НоменклатураСопоставлена Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			// Если не удалось обработать какой-либо объект, повторяем попытку снова.
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось обработать документ: %1 по причине:
					|%2'"),
					Выборка.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеОбъекта, 
				Выборка.Ссылка, 
				ТекстСообщения);
		КонецПопытки;
	КонецЦикла;
	
	Если ПроблемныхОбъектов > 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедуре ЗаполнитьНоменклатуруЕГАИС
				|не удалось обработать некоторые документы (пропущены): %1'"),
				ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	ИначеЕсли ОбъектовОбработано > 0 Тогда 
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация,
			МетаданныеОбъекта,,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедура ЗаполнитьНоменклатуруЕГАИС
					|обработала очередную порцию документов: %1'"), ОбъектовОбработано));
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьРегистрСоотвествия()
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПустаяНоменклатура", ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа(Метаданные.ОпределяемыеТипы.Номенклатура.Имя));
	
	ТекстЗапросаПоДокументу = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Справка2 КАК Справка2,
	|	ТаблицаТовары.ИдентификаторУпаковки КАК ИдентификаторУпаковки
	|ПОМЕСТИТЬ ВТ_СопоставлениеНоменклатуры
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура <> &ПустаяНоменклатура";
	
	ФрагментыЗапроса = Новый Массив;
	
	Для каждого ВидДокумента Из СписокДокументовЕГАИС() Цикл
		МетаданныеОбъекта = Метаданные.Документы[ВидДокумента].ТабличныеЧасти.Товары;
		
		ФрагментЗапроса = СтрЗаменить(ТекстЗапросаПоДокументу, "ТТНВходящаяЕГАИС", ВидДокумента);
		
		Если ФрагментыЗапроса.Количество() > 0 Тогда
			ФрагментЗапроса = СтрЗаменить(ФрагментЗапроса, "ПОМЕСТИТЬ ВТ_СопоставлениеНоменклатуры", "");
		КонецЕсли; 
		
		Если НЕ ОбщегоНазначения.ЕстьРеквизитОбъекта("ИдентификаторУпаковки", МетаданныеОбъекта) Тогда
			ФрагментЗапроса = СтрЗаменить(ФрагментЗапроса, "ТаблицаТовары.ИдентификаторУпаковки", """""");
		КонецЕсли;
		
		Если НЕ ОбщегоНазначения.ЕстьРеквизитОбъекта("Справка2", МетаданныеОбъекта) Тогда
			ФрагментЗапроса = СтрЗаменить(ФрагментЗапроса, "ТаблицаТовары.Справка2", "ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)");
		КонецЕсли;
		
		ФрагментыЗапроса.Добавить(ФрагментЗапроса)
	КонецЦикла;
	
	Разделитель = 
	"
	|
	| ОБЪЕДИНИТЬ
	|
	|";
	
	Запрос.Текст = СтрСоединить(ФрагментыЗапроса, Разделитель) + ОбщегоНазначения.РазделительПакетаЗапросов() + 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_СопоставлениеНоменклатуры.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВТ_СопоставлениеНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВТ_СопоставлениеНоменклатуры.Справка2 КАК Справка2,
	|	ВТ_СопоставлениеНоменклатуры.ИдентификаторУпаковки КАК ИдентификаторУпаковки
	|ИЗ
	|	ВТ_СопоставлениеНоменклатуры КАК ВТ_СопоставлениеНоменклатуры";
	
	НаборЗаписей = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьНаборЗаписей();
	НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ЗаполнитьНоменклатуруЕГАИС(Параметры) Экспорт
	Перем СписокМетаданныхДляОбработки;
	
	Параметры.ОбработкаЗавершена = Ложь;
	
	Если НЕ Параметры.Свойство("ОбрабатываемыеОбъекты", СписокМетаданныхДляОбработки) Тогда
		СписокМетаданныхДляОбработки = Новый Структура;
		
		Для каждого ЭлементМетаданных Из СписокДокументовЕГАИС() Цикл
			СписокМетаданныхДляОбработки.Вставить(ЭлементМетаданных, Документы[ЭлементМетаданных].ПустаяСсылка());
		КонецЦикла;
		
		Параметры.Вставить("ОбрабатываемыеОбъекты", СписокМетаданныхДляОбработки);
	КонецЕсли;
	
	// Проверяем наличие данных для обработки для каждого объекта метаданных
	Для каждого ОписаниеДокумента Из СписокМетаданныхДляОбработки Цикл
		МетаданныеОбъекта             = Метаданные.Документы[ОписаниеДокумента.Ключ];
		ПоследнееОбработанноеЗначение = ОписаниеДокумента.Значение;
		
		Если ПоследнееОбработанноеЗначение <> Неопределено Тогда
			ОбработатьДокументЕГАИС(МетаданныеОбъекта, ПоследнееОбработанноеЗначение);
			Параметры.ОбрабатываемыеОбъекты[ОписаниеДокумента.Ключ] = ПоследнееОбработанноеЗначение;
			
			// Если выборка еще не закончилась
			Если ПоследнееОбработанноеЗначение <> Неопределено Тогда
				Возврат;
			КонецЕсли; 
			
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьРегистрСоотвествия();
	
	// По окончании переноса очистим набор записей старого регистра
	НаборЗаписей = РегистрыСведений.УдалитьСоответствиеНоменклатурыЕГАИС.СоздатьНаборЗаписей();
	//НаборЗаписей.Записать();
	
	Параметры.ОбработкаЗавершена = Истина;
КонецПроцедуры

Процедура ПеренестиДанныеОрганизацияСкладЕГАИС() Экспорт
	Запрос = Новый Запрос;
	
	МассивОрганизаций = Новый Массив;
	МассивОрганизаций.Добавить(Справочники.Организации.ПустаяСсылка());
	МассивОрганизаций.Добавить(Справочники.Контрагенты.ПустаяСсылка());
	МассивОрганизаций.Добавить(Неопределено);
	
	Запрос.УстановитьПараметр("ПустоеЗначениеОрганизации", МассивОрганизаций);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Ссылка КАК Ссылка,
	|	ИСТИНА КАК СоответствуетОрганизации,
	|	НастройкиОбменаЕГАИС.УдалитьИзмерениеОрганизация КАК Контрагент,
	|	НастройкиОбменаЕГАИС.УдалитьИзмерениеСклад КАК ТорговыйОбъект
	|ИЗ
	|	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|		ПО НастройкиОбменаЕГАИС.ИдентификаторФСРАР = КлассификаторОрганизацийЕГАИС.Код
	|ГДЕ
	|	КлассификаторОрганизацийЕГАИС.Контрагент В (&ПустоеЗначениеОрганизации)
	|	И КлассификаторОрганизацийЕГАИС.ТорговыйОбъект = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)";
	
	ВыборкаИзРезультата = Запрос.Выполнить().Выбрать();
	
	МетаданныеОбъекта = Метаданные.Справочники.КлассификаторОрганизацийЕГАИС;
	
	Пока ВыборкаИзРезультата.Следующий() Цикл
		СправочникОбъект = ВыборкаИзРезультата.Ссылка.ПолучитьОбъект();
		
		Если СправочникОбъект = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СправочникОбъект, ВыборкаИзРезультата, , "Ссылка");
		
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(СправочникОбъект);
		Исключение
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось обработать элемент справочника: %1 по причине:
					|%2'"),
					ВыборкаИзРезультата.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеОбъекта, 
				ВыборкаИзРезультата.Ссылка, 
				ТекстСообщения);
		КонецПопытки; 
	КонецЦикла; 
КонецПроцедуры

Процедура УстановитьКонстантыЕГАИС() Экспорт
	МенеджерЗначения = Константы.ДатаНачалаРегистрацииРозничныхПродажВЕГАИС.СоздатьМенеджерЗначения();
	МенеджерЗначения.Значение = Дата(2018,1,1);
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(МенеджерЗначения);
	
	МенеджерЗначения = Константы.ДатаНачалаРегистрацииРозничныхПродажВЕГАИСВСельскойМестности.СоздатьМенеджерЗначения();
	МенеджерЗначения.Значение = Дата(2018,1,1);
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(МенеджерЗначения);
КонецПроцедуры

#КонецОбласти 

