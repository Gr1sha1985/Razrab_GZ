#Область СлужебныйПрограммныйИнтерфейс

#Область ФункцииИспользующиеПереопределение

// Возвращает ИНН и КПП переданной организации и торгового объекта, структурой со свойствами:
//   * КПП - Строка - КПП организации,
//   * ИНН - Строка - ИНН организации.
//
// Параметры:
//   Организация - ОпределяемыйТип.ОрганизацияКонтрагентГосИС, ОпределяемыйТип.КонтрагентГосИС - ссылка на организацию, 
//     реквизиты которой нужно определить,
//   ТорговыйОбъект - ОпределяемыйТип.ТорговыйОбъектЕГАИС - ссылка на торговый объект для определения КПП.
// 
// Возвращаемое значение:
//   Структура - структура со свойствами ИНН, КПП
//
Функция ИННКПППоОрганизацииКонтрагенту(ОрганизацияКонтрагент, ТорговыйОбъект = Неопределено) Экспорт
	
	ИННиКПП = Новый Структура("ИНН, КПП", "", "");
	ИнтеграцияИСПереопределяемый.ЗаполнитьИННКПППоОрганизацииКонтрагенту(ИННиКПП, ОрганизацияКонтрагент, ТорговыйОбъект);
	Возврат ИННиКПП;
	
КонецФункции

#КонецОбласти

#Область ОбработкаОшибок

// Выполняет запись ошибки в журнал регистрации, добавляя имя события ГосИС если оно не задано.
//
// Параметры:
//  ТекстОшибки      - Строка           - текст ошибки.
//  ИмяСобытия       - Строка           - имя события.
//  ОбъектМетаданных - ОбъектМетаданных - объект метаданных с ошибкой.
//  Данные           - Произвольный     - объект данных с ошибкой.
//
Процедура ЗаписатьОшибкуВЖурналРегистрации(ТекстОшибки, ИмяСобытия = Неопределено, ОбъектМетаданных = Неопределено, Данные = Неопределено) Экспорт
	
	Если ИмяСобытия = Неопределено Тогда
		ИмяСобытия = НСтр("ru='ГосИС'", ОбщегоНазначения.КодОсновногоЯзыка());
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации(
		ИмяСобытия,
		УровеньЖурналаРегистрации.Ошибка,
		ОбъектМетаданных,
		Данные,
		ТекстОшибки);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти