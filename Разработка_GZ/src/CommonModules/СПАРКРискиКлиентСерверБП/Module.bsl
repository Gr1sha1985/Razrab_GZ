
#Область ПрограммныйИнтерфейс

// Функция - возвращает вид контрагента СПАРКРиски
//
// Параметры:
//  ВидКонтрагента	 - 	Перечисления.ЮридическоеФизическоеЛицо - вид контрагента 
// 
// Возвращаемое значение:
//  Перечисления.ВидыКонтрагентовСПАРКРиски - вид контрагента СПАРК Риски
//
Функция ВидКонтрагентаСПАРКРиски(ВидКонтрагента) Экспорт
	
	Результат = Неопределено;
	Если ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо") Тогда
		Результат = ПредопределенноеЗначение("Перечисление.ВидыКонтрагентовСПАРКРиски.ЮридическоеЛицо");
	ИначеЕсли ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо") Тогда
		Результат = ПредопределенноеЗначение("Перечисление.ВидыКонтрагентовСПАРКРиски.ИндивидуальныйПредприниматель");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ОбработатьОшибкуПодключения(Форма, РезультатИндексыКонтрагента, СтандартнаяОбработка) Экспорт
	
	ДекорацияИндексыСПАРКРиски = Форма.Элементы.ДекорацияИндексыСПАРКРиски;
	Если РезультатИндексыКонтрагента.ВидОшибки =
			ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НеизвестныйИНН") Тогда
		СтандартнаяОбработка = Ложь;
		ДекорацияИндексыСПАРКРиски.Заголовок = Новый ФорматированнаяСтрока(НСтр("ru='Нет информации о контрагенте'"),,,, "SPARK:NoInformation");
	ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки =
			ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НекорректныйИНН") Тогда
		СтандартнаяОбработка = Ложь;
		ДекорацияИндексыСПАРКРиски.Заголовок = Новый ФорматированнаяСтрока(НСтр("ru='Нет информации о контрагенте'"),,,, "SPARK:NoInformation");
	ИначеЕсли ЭтоВидОшибкиПодключения(РезультатИндексыКонтрагента.ВидОшибки) Тогда
		СтандартнаяОбработка = Ложь;
		МассивСтрок = Новый Массив;
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='1СПАРК Риски:'")));
		МассивСтрок.Добавить(" ");
		Если РезультатИндексыКонтрагента.ВидОшибки
			= ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ТребуетсяОплатаИлиПревышенЛимит")
			И ДоступенТестовыйПериод(РезультатИндексыКонтрагента) Тогда
			
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='купите'"),,,, "SPARK:BuyService"));
			МассивСтрок.Добавить(" ");
			МассивСтрок.Добавить(НСтр("ru = 'или'"));
			МассивСтрок.Добавить(" ");
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='попробуйте бесплатно'"),,,, "SPARK:ConnectTrialTariff"));
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки
			= ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ТребуетсяОплатаИлиПревышенЛимит")
			И ПодключаетсяТестовыйПериод(РезультатИндексыКонтрагента) Тогда
				
			МассивСтрок.Добавить(НСтр("ru='выполняется подключение'"));
		Иначе
			Если Не РезультатИндексыКонтрагента.ДанныеАутентификацииЗаполнены
				Или РезультатИндексыКонтрагента.РаботаВМоделиСервиса Тогда
				
				МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='подробнее о сервисе'"),,,, "SPARK:About"));
			Иначе
				МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='подключитесь'"),,,, "SPARK:BuyService"));
				МассивСтрок.Добавить(" ");
				МассивСтрок.Добавить(НСтр("ru = 'или'"));
				МассивСтрок.Добавить(" ");
				МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='узнайте подробнее'"),,,, "SPARK:About"));
			КонецЕсли;
		КонецЕсли;
		ДекорацияИндексыСПАРКРиски.Заголовок = Новый ФорматированнаяСтрока(МассивСтрок);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЭтоВидОшибкиПодключения(ВидОшибки)
	
	Возврат (ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ВнутренняяОшибкаСервиса")
		Или ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ИнтернетПоддержкаНеПодключена")
		Или ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ИспользованиеЗапрещено")
		Или ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НеизвестнаяОшибка")
		Или ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НеПодлежитПроверке")
		Или ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ОшибкаПодключения")
		Или ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ПревышеноКоличествоПопытокАутентификации")
		Или ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ТребуетсяОплатаИлиПревышенЛимит")
		Или ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НекорректныйЗапрос"));
	
КонецФункции

Функция ДоступенТестовыйПериод(РезультатИндексыКонтрагента)
	
	Возврат (РезультатИндексыКонтрагента.ДоступностьПодключенияТестовогоПериода = "Доступно");
	
КонецФункции

Функция ПодключаетсяТестовыйПериод(РезультатИндексыКонтрагента)
	
	Возврат (РезультатИндексыКонтрагента.ДоступностьПодключенияТестовогоПериода = "Подключение");
	
КонецФункции

#КонецОбласти