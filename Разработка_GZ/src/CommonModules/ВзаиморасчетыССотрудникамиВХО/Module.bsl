////////////////////////////////////////////////////////////////////////////////
// Подсистема "Взаиморасчеты с сотрудниками ВХО".
//
////////////////////////////////////////////////////////////////////////////////


#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных) Экспорт
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ПлатежноеПоручение", "Дата", "Зарплата", "Организация");
	
КонецПроцедуры

#Область Свойства

// См. УправлениеСвойствамиПереопределяемый.ПриПолученииПредопределенныхНаборовСвойств.
Процедура ПриПолученииПредопределенныхНаборовСвойств(Наборы) Экспорт
	
	УправлениеСвойствамиБЗК.ЗарегистрироватьНаборСвойств(Наборы, "d42dc000-9802-11e9-80cd-4cedfb43b11a", Метаданные.Документы.ПлатежноеПоручение);
	
КонецПроцедуры

#КонецОбласти

// См. ОбменСБанкамиПереопределяемый.ЗаполнитьПараметрыЭДПоИсточнику
Процедура ЗаполнитьПараметрыЭДПоИсточнику(Источник, ПараметрыЭД) Экспорт

	ПараметрыЭД.ВидЭД = Перечисления.ВидыЭДОбменСБанками.СписокНаЗачислениеДенежныхСредствНаСчетаСотрудников;
	ПараметрыЭД.Направление = Перечисления.НаправленияЭД.Исходящий;
	ПараметрыЭД.Организация = Источник.Организация;
	
	ВедомостиПлатежногоДокумента = ОбменСБанкамиПоЗарплатнымПроектам.ВедомостиПлатежногоДокументаПеречисленияЗарплаты(Источник.Ссылка);
	Если ВедомостиПлатежногоДокумента.Количество() > 0 Тогда
		ЗарплатныйПроект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВедомостиПлатежногоДокумента[0], "ЗарплатныйПроект");
		ПараметрыЭД.Банк = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗарплатныйПроект, "Банк");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВедомостиПлатежногоДокументаПеречисленияЗарплаты(ПлатежныйДокумент, МассивВедомостей) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПлатежныйДокумент", ПлатежныйДокумент);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПлатежныйДокумент.Ведомость КАК Ведомость
	|ИЗ
	|	Документ.ПлатежноеПоручение.Ведомости КАК ПлатежныйДокумент
	|ГДЕ
	|	ПлатежныйДокумент.Ссылка = &ПлатежныйДокумент
	|	И НЕ ПлатежныйДокумент.Ссылка.ПометкаУдаления";
	
	МассивВедомостей = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ведомость");
	
КонецПроцедуры

Процедура ЗаполнитьМетаданныеПлатежногоДокументаПеречисленияЗарплаты(МетаданныеДокумента) Экспорт
	МетаданныеДокумента = Метаданные.Документы.ПлатежноеПоручение
КонецПроцедуры

Процедура ДополнитьПлатежныйДокумент(ПлатежныйДокумент, Ведомости) Экспорт
	
	Если ТипЗнч(ПлатежныйДокумент) <> Тип("ДокументСсылка.ПлатежноеПоручение") Тогда
		Возврат
	КонецЕсли;	
		
	НачатьТранзакцию();
	
	Попытка
		// Исключительная блокировка для ответственного чтения документа перед изменением
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Документ.ПлатежноеПоручение");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", ПлатежныйДокумент);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();

		ПлатежноеПоручение = ПлатежныйДокумент.ПолучитьОбъект();
		Если ПлатежноеПоручение = Неопределено Тогда // документ мог быть удален в других сеансах
			ВызватьИсключение НСтр("ru = '<Объект не найден>'");
		КонецЕсли;	
		
		// Блокировка объекта от изменения другими сеансами
		ПлатежноеПоручение.Заблокировать(); 
		
		ПлатежноеПоручение.ДобавитьВедомости(Ведомости);
		
		ПлатежноеПоручение.Записать();
	
		ЗафиксироватьТранзакцию();
	Исключение	
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Дополнение платежного поручения'", ОбщегоНазначения.КодОсновногоЯзыка()), 
			УровеньЖурналаРегистрации.Ошибка,,, 
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение;
	КонецПопытки;		
	
КонецПроцедуры

// Определяет объекты, в которых есть процедура ДобавитьКомандыПечати().
// Подробнее см. УправлениеПечатьюПереопределяемый.
//
// Параметры:
//  СписокОбъектов - Массив - список менеджеров объектов.
//
Процедура ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов) Экспорт
	
	СписокОбъектов.Добавить(Документы.ПлатежноеПоручение);
	
КонецПроцедуры

#КонецОбласти
