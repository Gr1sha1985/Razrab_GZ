#Область ПрограммныйИнтерфейс

// Открывает форму для формирования и/или просмотра сформированного чека.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Владелец, который открывает форму чека.
//  ДокументОснование - ДокументСсылка - Ссылка на владельца чека.
//  Организация - СправочникСсылка.Организации - ссылка на организацию.
//  ПолучательЧека - СправочникСсылка.Контрагенты - ссылка на контрагента-получателя чека.
//
Процедура ОткрытьФормуЧека(Форма, ДокументОснование, Организация, ПолучательЧека) Экспорт
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ОснованиеЧека", ДокументОснование);
	ПараметрыФормы.Вставить("Организация", Организация);
	ПараметрыФормы.Вставить("ПолучательЧека", ПолучательЧека);
	ПараметрыФормы.Вставить("ТолькоПросмотр", Форма.ТолькоПросмотр);
	
	ОткрытьФорму("РегистрСведений.ЧекиНПД.Форма.Форма", ПараметрыФормы, Форма);
	
КонецПроцедуры

// Вызывает ожидание аннулирования чека в фоне, назначает оповещение при завершении.
//
// Параметры:
//  ДлительнаяОперация 	 - Структура - параметры длительной операции.
//  Форма					 - ФормаКлиентскогоПриложения - форма документа.
//
Процедура ОжидатьАннулированиеЧекаВФоне(ДлительнаяОперация, Форма) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОжидатьАннулированиеЧекаВФонеЗавершение", Форма);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОписаниеОповещения, ПараметрыОжидания);
	
КонецПроцедуры

// Заполняет реквизит "Комментарий", в документе-основании чека НПД, причиной, по которой был аннулирован чек
//
// Параметры:
//  СведенияОЧеке - Структура - подробнее см. РегистрыСведений.ЧекиНПД.СведенияОЧеке
//  Форма - ФормаКлиентскогоПриложения - форма документа-основания для чека НПД, имеющая реквизит с именем "Объект", в состав
//                             которого входит реквизит "Комментарий"
//
Процедура ДобавитьПричинуАннулированияЧекаВКомментарий(СведенияОЧеке, Форма) Экспорт
	
	Если ЗначениеЗаполнено(СведенияОЧеке.ДатаАннулированияЧека)
		И СведенияОЧеке.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияЧековНПД.Аннулирован") Тогда
		Если Не ЗначениеЗаполнено(Форма.Объект.Комментарий) Тогда
			Форма.Объект.Комментарий = СведенияОЧеке.ПредставлениеПричиныОтменыЧека;
			Если Не Форма.Модифицированность Тогда
				Форма.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Выполняет обновление статусов офлайн чеков для всех организаций, подключенных к сервису Мой налог.
//
Процедура ОбновитьСтатусыОфлайнЧековНПД() Экспорт
	
	ПодключенныеОрганизации = ИнтеграцияСПлатформойСамозанятыеВызовСервера.ПодключенныеОрганизации();
	
	Для Каждого Организация Из ПодключенныеОрганизации Цикл
		НачатьОбновлениеСтатусовОфлайнЧековНПД(Организация);
	КонецЦикла;
	
КонецПроцедуры

// Возвращает имя события, связанного с обновлением статусов офлайн чеков.
//
// Возвращаемое значение:
//   Строка
//
Функция ИмяСобытияИзменениеСтатусаОфлайнЧека() Экспорт
	
	Возврат "ИзменениеСтатусаОфлайнЧекаНПД";
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура НачатьОбновлениеСтатусовОфлайнЧековНПД(Организация)
	
	ДлительнаяОперация = ЧекиНПДВызовСервера.НачатьОбновлениеСтатусовОфлайнЧековНПД(Организация);
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбновлениеСтатусовОфлайнЧековЗавершение", ЭтотОбъект, Организация);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОписаниеОповещения, ПараметрыОжидания);
	
КонецПроцедуры

Процедура ОбновлениеСтатусовОфлайнЧековЗавершение(ДлительнаяОперация, Организация) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат; // отменена
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		
		Запрос = ПолучитьИзВременногоХранилища(ДлительнаяОперация.АдресРезультата);
		
		Если ЗначениеЗаполнено(Запрос) Тогда
			ПолучитьРезультатОбновленияСтатусовОфлайнЧеков(Запрос, Организация);
		КонецЕсли;
		
	ИначеЕсли ДлительнаяОперация.Статус = "Ошибка" Тогда
		
		ИнтеграцияСПлатформойСамозанятыеВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(
			ДлительнаяОперация.КраткоеПредставлениеОшибки);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьРезультатОбновленияСтатусовОфлайнЧеков(Запрос, Организация)
	
	ДлительнаяОперация = ЧекиНПДВызовСервера.ПолучитьРезультатОбновленияСтатусовОфлайнЧеков(Запрос);
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат; // отменена
	КонецЕсли;
	
	ПараметрыОбработчикаЗавершения = Новый Структура;
	ПараметрыОбработчикаЗавершения.Вставить("Запрос", Запрос);
	ПараметрыОбработчикаЗавершения.Вставить("Организация", Организация);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПолучитьРезультатОбновленияСтатусовОфлайнЧековЗавершение", ЭтотОбъект, ПараметрыОбработчикаЗавершения);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОписаниеОповещения, ПараметрыОжидания);
	
КонецПроцедуры

Процедура ПолучитьРезультатОбновленияСтатусовОфлайнЧековЗавершение(ДлительнаяОперация, ДополнительныеПараметры) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат; // отменена
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДлительнаяОперация)
		И ДлительнаяОперация.Статус = "Выполнено" Тогда
		
		СтатусыЗапросов = ИнтеграцияСПлатформойСамозанятыеКлиентСервер.СтатусыЗапросов();
		
		РезультатЗапроса = ПолучитьИзВременногоХранилища(ДлительнаяОперация.АдресРезультата);
		Если РезультатЗапроса.Статус = СтатусыЗапросов.Выполнено Тогда
			ОбновленныеОфлайнЧеки = ЧекиНПДВызовСервера.ИзменитьСтатусыОфлайнЧеков(
				ДополнительныеПараметры.Организация, РезультатЗапроса.Результат.АдресВременногоХранилища);
			
			Если ОбновленныеОфлайнЧеки.Количество() > 0 Тогда
				Оповестить(ИмяСобытияИзменениеСтатусаОфлайнЧека(), ДополнительныеПараметры.Организация);
				ПоказатьОповещениеПользователя(
					НСтр("ru = 'Отправка чеков в ФНС'"),,
					ТекстОповещенияОбОтправкеОфлайнЧеков(ОбновленныеОфлайнЧеки),
					БиблиотекаКартинок.ПлатформаСамозанятыеЛоготипФНС);
			КонецЕсли;
		ИначеЕсли РезультатЗапроса.Статус = СтатусыЗапросов.Выполняется Тогда
			ПолучитьРезультатОбновленияСтатусовОфлайнЧеков(ДополнительныеПараметры.Запрос, ДополнительныеПараметры.Организация);
		Иначе
			ИнтеграцияСПлатформойСамозанятыеВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(РезультатЗапроса.Сообщение);
		КонецЕсли;
		
	ИначеЕсли ДлительнаяОперация.Статус = "Ошибка" Тогда
		
		ИнтеграцияСПлатформойСамозанятыеВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(
			ДлительнаяОперация.КраткоеПредставлениеОшибки);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстОповещенияОбОтправкеОфлайнЧеков(ОбновленныеОфлайнЧеки)
	
	Текст = "";
	
	Если ОбновленныеОфлайнЧеки.Количество() = 0 Тогда
		Текст = НСтр("ru = 'Нет чеков, отправленных в ФНС'");
	ИначеЕсли ОбновленныеОфлайнЧеки.Количество() = 1 Тогда
		Текст = СтрШаблон(НСтр("ru = 'Чек %1 отправлен в ФНС'"), ОбновленныеОфлайнЧеки[0]);
	ИначеЕсли ОбновленныеОфлайнЧеки.Количество() = 2 Тогда
		Текст = СтрШаблон(НСтр("ru = 'Чеки %1 и %2 отправлены в ФНС'"), ОбновленныеОфлайнЧеки[0], ОбновленныеОфлайнЧеки[1]);
	Иначе
		ПредставлениеЧеков = СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
			НСтр("ru = ';%1 чек;;%1 чека;%1 чеков;%1 чека'"), ОбновленныеОфлайнЧеки.Количество() - 1);
		
		Текст = СтрШаблон(
			НСтр("ru = 'Чек %1 и еще %2 отправлены в ФНС'"),
			ОбновленныеОфлайнЧеки[0],
			ПредставлениеЧеков);
	КонецЕсли;
	
	Возврат Текст;
	
КонецФункции

#КонецОбласти
