#Область ПрограммныйИнтерфейс

// Возвращает Истина, если сервис 1С:Контрагент подключен.
//
// Возвращаемое значение:
//   Булево
//
Функция Сервис1СКонтрагентПодключен() Экспорт
	
	УстановитьОтключениеБезопасногоРежима(Истина);
	УстановитьПривилегированныйРежим(Истина);
	РеквизитыНалоговогоОргана = ДанныеГосударственныхОрганов.РеквизитыНалоговогоОрганаПоКоду("7701");
	УстановитьПривилегированныйРежим(Ложь);
	УстановитьОтключениеБезопасногоРежима(Ложь);
	
	СервисПодключен = Не ЗначениеЗаполнено(РеквизитыНалоговогоОргана.ОписаниеОшибки);
	
	Возврат СервисПодключен;
	
КонецФункции

// Ищет контрагента, имеющего заданные ИНН и КПП
//
// Параметры:
//  РеквизитыКонтрагента - Структура - поиск контрагента будет осуществлен, если структура содержит свойство "ИНН",
//                        так же может содержать необязательное свойство "КПП"
//
// Возвращаемое значение:
//  СправочникСсылка.Контрагенты - ссылка на найденного контрагента. Если контрагент с заданными ИНН и КПП не найден
//                                 возвращает пустую ссылку
//
Функция НайтиКонтрагентаПоИНН_КПП(РеквизитыКонтрагента) Экспорт
	
	НайденныйКонтрагент = Справочники.Контрагенты.ПустаяСсылка();
	
	ИНН = Неопределено;
	
	Если Не РеквизитыКонтрагента.Свойство("ИНН", ИНН) Или Не ЗначениеЗаполнено(ИНН) Тогда
		Возврат НайденныйКонтрагент;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Контрагенты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ИНН = &ИНН И Контрагенты.КПП = &КПП";
	
	КПП = Неопределено;
	Если Не РеквизитыКонтрагента.Свойство("КПП", КПП) Тогда
		КПП = "";
	КонецЕсли;
	Запрос.УстановитьПараметр("ИНН", ИНН);
	Запрос.УстановитьПараметр("КПП", КПП);
	
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		НайденныйКонтрагент = Выборка.Ссылка;
	КонецЕсли;
		
	Возврат НайденныйКонтрагент;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ДосьеКонтрагентаДанныеПрограммы

Процедура ЗаполнитьОписаниеДанныхПрограммыДосье(ТаблицаОписания) Экспорт

	НоваяСтрока = ТаблицаОписания.Добавить();
	НоваяСтрока.ИмяДанных = "Наименование";
	НоваяСтрока.ЭтоТаблица = Ложь;
	НоваяСтрока.Заголовок = НСтр("ru='Наименование'");
	
	НоваяСтрока = ТаблицаОписания.Добавить();
	НоваяСтрока.ИмяДанных = "Реквизиты";
	НоваяСтрока.ЭтоТаблица = Ложь;
	НоваяСтрока.Заголовок = НСтр("ru='Реквизиты'");
	
	НоваяСтрока = ТаблицаОписания.Добавить();
	НоваяСтрока.ИмяДанных = "ЮридическийАдрес";
	НоваяСтрока.ЭтоТаблица = Ложь;
	НоваяСтрока.Заголовок = НСтр("ru='Юридический адрес'");

	НоваяСтрока = ТаблицаОписания.Добавить();
	НоваяСтрока.ИмяДанных = "ФактическийАдрес";
	НоваяСтрока.ЭтоТаблица = Ложь;
	НоваяСтрока.Заголовок = НСтр("ru='Фактический адрес'");

	НоваяСтрока = ТаблицаОписания.Добавить();
	НоваяСтрока.ИмяДанных = "ПочтовыйАдрес";
	НоваяСтрока.ЭтоТаблица = Ложь;
	НоваяСтрока.Заголовок = НСтр("ru='Почтовый адрес'");

	НоваяСтрока = ТаблицаОписания.Добавить();
	НоваяСтрока.ИмяДанных = "КонтактныеЛица";
	НоваяСтрока.ЭтоТаблица = Истина;
	НоваяСтрока.Заголовок = НСтр("ru='Контактные лица'");

	НоваяСтрока = ТаблицаОписания.Добавить();
	НоваяСтрока.ИмяДанных = "БанковскиеСчета";
	НоваяСтрока.ЭтоТаблица = Истина;
	НоваяСтрока.Заголовок = НСтр("ru='Банковские счета'");

	НоваяСтрока = ТаблицаОписания.Добавить();
	НоваяСтрока.ИмяДанных = "Договоры";
	НоваяСтрока.ЭтоТаблица = Истина;
	НоваяСтрока.Заголовок = НСтр("ru='Договоры'");

	НоваяСтрока = ТаблицаОписания.Добавить();
	НоваяСтрока.ИмяДанных = "Телефон";
	НоваяСтрока.ЭтоТаблица = Ложь;
	НоваяСтрока.Заголовок = НСтр("ru='Телефон'");

	НоваяСтрока = ТаблицаОписания.Добавить();
	НоваяСтрока.ИмяДанных = "Email";
	НоваяСтрока.ЭтоТаблица = Ложь;
	НоваяСтрока.Заголовок = НСтр("ru='Email'");

	НоваяСтрока = ТаблицаОписания.Добавить();
	НоваяСтрока.ИмяДанных = "АлкогольныеЛицензии";
	НоваяСтрока.ЭтоТаблица = Истина;
	НоваяСтрока.Заголовок = НСтр("ru='Лицензии поставщиков алкогольной продукции'");

	НоваяСтрока = ТаблицаОписания.Добавить();
	НоваяСтрока.ИмяДанных = "Подразделения";
	НоваяСтрока.ЭтоТаблица = Истина;
	НоваяСтрока.Заголовок = НСтр("ru='Обособленные подразделения'");

	НоваяСтрока = ТаблицаОписания.Добавить();
	НоваяСтрока.ИмяДанных = "Родитель";
	НоваяСтрока.ЭтоТаблица = Ложь;
	НоваяСтрока.Заголовок = НСтр("ru='Входит в группу'");

	НоваяСтрока = ТаблицаОписания.Добавить();
	НоваяСтрока.ИмяДанных = "Комментарий";
	НоваяСтрока.ЭтоТаблица = Ложь;
	НоваяСтрока.Заголовок = НСтр("ru='Комментарий'");

	НоваяСтрока = ТаблицаОписания.Добавить();
	НоваяСтрока.ИмяДанных = "ДополнительнаяИнформация";
	НоваяСтрока.ЭтоТаблица = Ложь;
	НоваяСтрока.Заголовок = НСтр("ru='Дополнительная информация'");

КонецПроцедуры

Процедура ДополнитьИнформациюДосьеДаннымиПрограммы(ИнформацияОСвязях, Контрагент) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
		
		ЗаполнитьКонтрагентаПоИнформацииОСвязях(Контрагент, ИнформацияОСвязях);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		
		ЗаполнитьРеквизитыКонтрагентаПоДаннымПрограммы(ИнформацияОСвязях, Контрагент);
		
		ЗаполнитьБанковскиеСчетаКонтрагентаПоДаннымПрограммы(ИнформацияОСвязях, Контрагент);
		
		ЗаполнитьКонтактныеЛицаКонтрагентаПоДаннымПрограммы(ИнформацияОСвязях, Контрагент);
		
		ЗаполнитьКонтактнуюИнформациюКонтрагентаПоДаннымПрограммы(ИнформацияОСвязях, Контрагент);
		
		ЗаполнитьДоговорыКонтрагентаПоДаннымПрограммы(ИнформацияОСвязях, Контрагент);
		
		ЗаполнитьАлкогольныеЛицензииКонтрагентаПоДаннымПрограммы(ИнформацияОСвязях, Контрагент);
		
		ЗаполнитьПодразделенияКонтрагентаПоДаннымПрограммы(ИнформацияОСвязях, Контрагент);
		
	КонецЕсли;
	
КонецПроцедуры 

Процедура ЗаполнитьКонтрагентаПоИнформацииОСвязях(Контрагент, ИнформацияОСвязях)

	Запрос = Новый Запрос;
	Если ИнформацияОСвязях.Свойство("КПП") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	Спр.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Спр
		|ГДЕ
		|	Спр.ИНН = &ИНН
		|	И (Спр.КПП = &КПП ИЛИ Спр.КПП = """")";
		Запрос.УстановитьПараметр("КПП", ИнформацияОСвязях.КПП);
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	Спр.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Спр
		|ГДЕ
		|	Спр.ИНН = &ИНН";
	КонецЕсли;
	Запрос.УстановитьПараметр("ИНН", ИнформацияОСвязях.ИНН);
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		Контрагент = Выборка.Ссылка;
		
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьРеквизитыКонтрагентаПоДаннымПрограммы(ИнформацияОСвязях, Контрагент)
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Контрагент, 
		"Ссылка,Наименование,НаименованиеПолное,"
		+ "ИНН,КПП,РегистрационныйНомер,"
		+ "ЮридическоеФизическоеЛицо,ГосударственныйОрган,ОбособленноеПодразделение,"
		+ "Родитель,Комментарий,ДополнительнаяИнформация");
		
	СтруктураНаименование = Отчеты.ДосьеКонтрагента.НовыеДанныеПрограммы();
	СтруктураНаименование.Ссылка        = Реквизиты.Ссылка;
	СтруктураНаименование.Представление = Реквизиты.Наименование;
	СтруктураНаименование.Описание      = Реквизиты.НаименованиеПолное;
	ИнформацияОСвязях.ДанныеПрограммы.Вставить("Наименование", СтруктураНаименование);
	
	СтруктураРеквизиты = Отчеты.ДосьеКонтрагента.НовыеДанныеПрограммы();
	СтруктураРеквизиты.Представление = СтрШаблон(НСтр("ru='ИНН %1, ОГРН %2'"),
		Реквизиты.ИНН,
		Реквизиты.РегистрационныйНомер);
	Если Реквизиты.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
		СтруктураРеквизиты.Описание = СтрШаблон(НСтр("ru='КПП %1'"), Реквизиты.КПП);
		Если ЗначениеЗаполнено(ИнформацияОСвязях.КПП)
			И Реквизиты.КПП <> ИнформацияОСвязях.КПП Тогда
			СтруктураРеквизиты.ПримечаниеОписание = СтрШаблон(НСтр("ru='По данным ЕГРЮЛ: 
				|КПП %1'"), ИнформацияОСвязях.КПП);
		КонецЕсли;
	КонецЕсли;
	ИнформацияОСвязях.ДанныеПрограммы.Вставить("Реквизиты", СтруктураРеквизиты);
	
	Если Реквизиты.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
		ВидКонтрагента = НСтр("ru='Физическое лицо'");
	ИначеЕсли Реквизиты.ГосударственныйОрган Тогда
		ВидКонтрагента = НСтр("ru='Государственный орган'");
	ИначеЕсли Реквизиты.ОбособленноеПодразделение Тогда
		ВидКонтрагента = НСтр("ru='Обособленное подразделение'");
	Иначе
		ВидКонтрагента = НСтр("ru='Юридическое лицо'");
	КонецЕсли;
	ИнформацияОСвязях.ДанныеПрограммы.Вставить("ВидКонтрагента", ВидКонтрагента);
	
	ИнформацияОСвязях.ДанныеПрограммы.Вставить("Родитель",    Реквизиты.Родитель);
	ИнформацияОСвязях.ДанныеПрограммы.Вставить("Комментарий", Реквизиты.Комментарий);
	ИнформацияОСвязях.ДанныеПрограммы.Вставить("ДополнительнаяИнформация", Реквизиты.ДополнительнаяИнформация);
	
КонецПроцедуры

Процедура ЗаполнитьБанковскиеСчетаКонтрагентаПоДаннымПрограммы(ИнформацияОСвязях, Контрагент)
	
	БанковскиеСчета = Отчеты.ДосьеКонтрагента.НоваяТаблицаДанныеПрограммы();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	БанковскиеСчета.Ссылка КАК Ссылка,
	|	БанковскиеСчета.Код КАК Код,
	|	БанковскиеСчета.НомерСчета КАК НомерСчета,
	|	БанковскиеСчета.Банк.Представление КАК Банк,
	|	БанковскиеСчета.Банк.Код КАК БИК,
	|	БанковскиеСчета.Банк.КоррСчет КАК КоррСчет,
	|	ВЫБОР
	|		КОГДА БанковскиеСчета.Ссылка = &ОсновнойБанковскийСчет
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Основной
	|ИЗ
	|	Справочник.БанковскиеСчета КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.Владелец = &Контрагент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Основной УБЫВ,
	|	Код";
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("ОсновнойБанковскийСчет", 
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "ОсновнойБанковскийСчет"));
	ТаблицаРезультата = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТаблицы Из ТаблицаРезультата Цикл
		
		НоваяСтрока = БанковскиеСчета.Добавить();
		Если ЗначениеЗаполнено(СтрокаТаблицы.КоррСчет) Тогда
			Представление = СтрШаблон(НСтр("ru='р/с %1, БИК %2, корр. счет %3'"),
				СтрокаТаблицы.НомерСчета,
				СтрокаТаблицы.БИК,
				СтрокаТаблицы.КоррСчет);
		Иначе
			Представление = СтрШаблон(НСтр("ru='р/с %1, БИК %2'"),
				СтрокаТаблицы.НомерСчета,
				СтрокаТаблицы.БИК);
		КонецЕсли;
		НоваяСтрока.Представление = Представление;
		НоваяСтрока.Описание      = СтрокаТаблицы.Банк;
		НоваяСтрока.Ссылка        = СтрокаТаблицы.Ссылка;
		
	КонецЦикла;
	
	ИнформацияОСвязях.ДанныеПрограммы.Вставить("БанковскиеСчета", БанковскиеСчета);
	
КонецПроцедуры

Процедура ЗаполнитьКонтактныеЛицаКонтрагентаПоДаннымПрограммы(ИнформацияОСвязях, Контрагент)
	
	КонтактныеЛица = Отчеты.ДосьеКонтрагента.НоваяТаблицаДанныеПрограммы();
	
	СписокКонтактныхЛиц = Справочники.КонтактныеЛица.СписокКонтактныхЛиц(Контрагент, Ложь);
	Если СписокКонтактныхЛиц.Количество() > 0 Тогда
		
		ОсновноеКонтактноеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "ОсновноеКонтактноеЛицо");
		Если ЗначениеЗаполнено(ОсновноеКонтактноеЛицо) Тогда 
			// Основное контактное лицо делаем первым в списке.
			СтрокаСписка = СписокКонтактныхЛиц.НайтиПоЗначению(ОсновноеКонтактноеЛицо);
			Если СтрокаСписка <> Неопределено Тогда
				ИндексСтроки = СписокКонтактныхЛиц.Индекс(СтрокаСписка);
				Если ИндексСтроки > 0 Тогда
					СписокКонтактныхЛиц.Сдвинуть(СтрокаСписка, -ИндексСтроки);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		МассивЛиц = Новый Массив;
		Для каждого СтрокаСписка Из СписокКонтактныхЛиц Цикл
			МассивЛиц.Добавить(СтрокаСписка.Значение);
		КонецЦикла;
		ТаблицаКИ = УправлениеКонтактнойИнформациейБП.КонтактнаяИнформацияОбъектовНаДату(МассивЛиц);
		Для каждого СтрокаСписка Из СписокКонтактныхЛиц Цикл
			
			НоваяСтрока = КонтактныеЛица.Добавить();
			НоваяСтрока.Ссылка        = СтрокаСписка.Значение;
			НоваяСтрока.Представление = СтрокаСписка.Представление;
			СтрокиКИ = ТаблицаКИ.Скопировать(Новый Структура("Объект", НоваяСтрока.Ссылка), "Представление,Тип");
			СтрокиКИ.Сортировать("Тип УБЫВ");
			Для каждого СтрокаКИ Из СтрокиКИ Цикл
				Если ЗначениеЗаполнено(СтрокаКИ.Представление) Тогда
					НоваяСтрока.Представление = НоваяСтрока.Представление + ", " + СтрокаКИ.Представление;
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;

	ИнформацияОСвязях.ДанныеПрограммы.Вставить("КонтактныеЛица", КонтактныеЛица);
	
КонецПроцедуры

Процедура ЗаполнитьДоговорыКонтрагентаПоДаннымПрограммы(ИнформацияОСвязях, Контрагент)
	
	Договоры = Отчеты.ДосьеКонтрагента.НоваяТаблицаДанныеПрограммы();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоговорыКонтрагентов.Ссылка КАК Ссылка,
	|	ДоговорыКонтрагентов.Наименование КАК Наименование,
	|	ДоговорыКонтрагентов.Организация.Наименование КАК НаименованиеОрганизации,
	|	ОсновныеДоговорыКонтрагента.Договор ЕСТЬ НЕ NULL  КАК Основной
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеДоговорыКонтрагента КАК ОсновныеДоговорыКонтрагента
	|		ПО ДоговорыКонтрагентов.Организация = ОсновныеДоговорыКонтрагента.Организация
	|			И ДоговорыКонтрагентов.Владелец = ОсновныеДоговорыКонтрагента.Контрагент
	|			И ДоговорыКонтрагентов.ВидДоговора = ОсновныеДоговорыКонтрагента.ВидДоговора
	|ГДЕ
	|	ДоговорыКонтрагентов.Владелец = &Контрагент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Основной УБЫВ,
	|	Наименование,
	|	НаименованиеОрганизации";
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	ТаблицаРезультата = Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаТаблицы Из ТаблицаРезультата Цикл
		
		НоваяСтрока   = Договоры.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		Представление = СтрокаТаблицы.Наименование + " (" + СтрокаТаблицы.НаименованиеОрганизации + ")";
		НоваяСтрока.Представление = Представление;
		
	КонецЦикла;
	
	ИнформацияОСвязях.ДанныеПрограммы.Вставить("Договоры", Договоры);
	
КонецПроцедуры

Процедура ЗаполнитьКонтактнуюИнформациюКонтрагентаПоДаннымПрограммы(ИнформацияОСвязях, Контрагент)

	СтруктураЮридическийАдрес = Отчеты.ДосьеКонтрагента.НовыеДанныеПрограммы();
	СтруктураЮридическийАдрес.Представление = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Контрагент, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	Если ИнформацияОСвязях.Свойство("ЮридическийАдрес") 
		И ЗначениеЗаполнено(ИнформацияОСвязях.ЮридическийАдрес.Представление) Тогда
		// Проверяем возможные расхождения адреса в программе с ЕГРЮЛ.
		// Адреса сравниваем неточно, без корпуса и квартиры (текст внутри первых 5 запятых стандартного адреса).
		Если ЗначениеЗаполнено(СтруктураЮридическийАдрес.Представление) Тогда
			ВсегоЗапятыхДляСравнения = 5;
			// Адрес программы
			АдресПрограммы = "";
			КоличествоЗапятых = 0;
			Для НомерСимвола = 1 По СтрДлина(СтруктураЮридическийАдрес.Представление) Цикл
				ТекущийСимвол = Сред(СтруктураЮридическийАдрес.Представление, НомерСимвола, 1);
				Если ТекущийСимвол = "," Тогда
					КоличествоЗапятых = КоличествоЗапятых + 1;
					Если КоличествоЗапятых >= ВсегоЗапятыхДляСравнения Тогда
						Прервать;
					КонецЕсли;
				КонецЕсли;
				АдресПрограммы = АдресПрограммы + ТекущийСимвол;
			КонецЦикла;
			// Адрес реестра
			АдресРеестра = "";
			КоличествоЗапятых = 0;
			Для НомерСимвола = 1 По СтрДлина(ИнформацияОСвязях.ЮридическийАдрес.Представление) Цикл
				ТекущийСимвол = Сред(ИнформацияОСвязях.ЮридическийАдрес.Представление, НомерСимвола, 1);
				Если ТекущийСимвол = "," Тогда
					КоличествоЗапятых = КоличествоЗапятых + 1;
					Если КоличествоЗапятых >= ВсегоЗапятыхДляСравнения Тогда
						Прервать;
					КонецЕсли;
				КонецЕсли;
				АдресРеестра = АдресРеестра + ТекущийСимвол;
			КонецЦикла;
			ВывестиПримечание = АдресПрограммы <> АдресРеестра;
		Иначе
			ВывестиПримечание = Ложь;
		КонецЕсли;
		Если ВывестиПримечание Тогда
			СтруктураЮридическийАдрес.ПримечаниеПредставление = СтрШаблон(НСтр("ru='По данным ЕГРЮЛ: 
				|%1'"),
				ИнформацияОСвязях.ЮридическийАдрес.Представление);
		КонецЕсли;
	КонецЕсли;
	ИнформацияОСвязях.ДанныеПрограммы.Вставить("ЮридическийАдрес", СтруктураЮридическийАдрес);
	
	ФактическийАдрес = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Контрагент, 
		Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	Если ЗначениеЗаполнено(ФактическийАдрес)
		И ФактическийАдрес = СтруктураЮридическийАдрес.Представление Тогда
		ФактическийАдрес = НСтр("ru='Совпадает с юридическим адресом'");
	КонецЕсли;
	ИнформацияОСвязях.ДанныеПрограммы.Вставить("ФактическийАдрес", ФактическийАдрес);
	
	ПочтовыйАдрес = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Контрагент, 
		Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКонтрагента);
	Если ЗначениеЗаполнено(ПочтовыйАдрес)
		И ПочтовыйАдрес = СтруктураЮридическийАдрес.Представление Тогда
		ПочтовыйАдрес = НСтр("ru='Совпадает с юридическим адресом'");
	КонецЕсли;
	ИнформацияОСвязях.ДанныеПрограммы.Вставить("ПочтовыйАдрес", ПочтовыйАдрес);
	
	Телефон = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Контрагент,
		Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента);
	ИнформацияОСвязях.ДанныеПрограммы.Вставить("Телефон", Телефон);
		
	Email = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Контрагент,
		Справочники.ВидыКонтактнойИнформации.EmailКонтрагенты);
	ИнформацияОСвязях.ДанныеПрограммы.Вставить("Email", Email);
	
КонецПроцедуры

Процедура ЗаполнитьАлкогольныеЛицензииКонтрагентаПоДаннымПрограммы(ИнформацияОСвязях, Контрагент)
	
	ИнформацияОСвязях.ДанныеПрограммы.Вставить("АлкогольныеЛицензии", Отчеты.ДосьеКонтрагента.НоваяТаблицаДанныеПрограммы());
	
	Если Не ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ЛицензииПоставщиковАлкогольнойПродукции) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Лицензии.ВидЛицензии КАК ВидЛицензии,
	|	Лицензии.ДатаОкончания КАК ДатаОкончания
	|ИЗ
	|	РегистрСведений.ЛицензииПоставщиковАлкогольнойПродукции КАК Лицензии
	|ГДЕ
	|	Лицензии.Поставщик = &Контрагент
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидЛицензии, ДатаОкончания УБЫВ";
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	ТаблицаРезультата = Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаТаблицы Из ТаблицаРезультата Цикл
		
		НоваяСтрока   = ИнформацияОСвязях.ДанныеПрограммы.АлкогольныеЛицензии.Добавить();
		Представление = СтрШаблон(НСтр("ru='%1 Дата окончания %2'"),
			СтрокаТаблицы.ВидЛицензии,
			Формат(СтрокаТаблицы.ДатаОкончания, "ДЛФ=D"));
		НоваяСтрока.Представление = Представление;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПодразделенияКонтрагентаПоДаннымПрограммы(ИнформацияОСвязях, Контрагент)
	
	Подразделения = Отчеты.ДосьеКонтрагента.НоваяТаблицаДанныеПрограммы();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГоловнойКонтрагент",	Контрагент);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Контрагенты.Ссылка КАК Ссылка,
	|	Контрагенты.Наименование КАК Представление
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка <> &ГоловнойКонтрагент
	|	И Контрагенты.ГоловнойКонтрагент = &ГоловнойКонтрагент
	|	И НЕ Контрагенты.ПометкаУдаления
	|	И НЕ Контрагенты.ЭтоГруппа
	|	И Контрагенты.ОбособленноеПодразделение";
	
	ТаблицаРезультата = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТаблицы Из ТаблицаРезультата Цикл
		
		НоваяСтрока = Подразделения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		
	КонецЦикла;
	
	ИнформацияОСвязях.ДанныеПрограммы.Вставить("Подразделения", Подразделения);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

