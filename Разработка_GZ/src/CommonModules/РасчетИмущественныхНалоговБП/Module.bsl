////////////////////////////////////////////////////////////////////////////////
// Подсистема "Расчет имущественных налогов".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

#Область РасчетНалогаНаИмущество

Процедура ДобавитьТекстЗапросаКоэффициентыЕНВД_ПоОС(СписокЗапросов) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СпособыОтраженияРасходов.ОсновноеСредство КАК ОсновноеСредство,
	|	КоэффициентыЕНВД.НеЕНВД КАК НеЕНВД,
	|	КоэффициентыЕНВД.Распределение КАК Распределение
	|ПОМЕСТИТЬ КоэффициентыЕНВД_ПоОС
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС)) КАК СпособыОтраженияРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыЕНВД КАК КоэффициентыЕНВД
	|		ПО СпособыОтраженияРасходов.СпособыОтраженияРасходовПоАмортизации = КоэффициентыЕНВД.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура СоздатьВТКоэффициентыЕНВД(ПараметрыРасчета) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто1 КАК Справочник.СтатьиЗатрат)
	|		КОГДА СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто2 КАК Справочник.СтатьиЗатрат)
	|		КОГДА СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто3 КАК Справочник.СтатьиЗатрат)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
	|	КОНЕЦ КАК СтатьяЗатрат,
	|	СпособыОтраженияРасходовПоАмортизацииСпособы.Коэффициент КАК Коэффициент
	|ПОМЕСТИТЬ ВТ_КоэффициентыСтатейЗатрат
	|ИЗ
	|	Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СпособыОтраженияРасходовПоАмортизацииСпособы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КоэффициентыСтатейЗатрат.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА КоэффициентыСтатейЗатрат.СтатьяЗатрат = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		ИНАЧЕ КоэффициентыСтатейЗатрат.СтатьяЗатрат.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|	КОНЕЦ КАК ОтношениеКЕНВД,
	|	СУММА(КоэффициентыСтатейЗатрат.Коэффициент) КАК Коэффициент
	|ПОМЕСТИТЬ ВТ_ВыборкаКоэффициентов
	|ИЗ
	|	ВТ_КоэффициентыСтатейЗатрат КАК КоэффициентыСтатейЗатрат
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА КоэффициентыСтатейЗатрат.СтатьяЗатрат = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		ИНАЧЕ КоэффициентыСтатейЗатрат.СтатьяЗатрат.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|	КОНЕЦ,
	|	КоэффициентыСтатейЗатрат.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КоэффициентыСтатейЗатрат.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КоэффициентыСтатейЗатрат.Ссылка КАК Ссылка,
	|	СУММА(КоэффициентыСтатейЗатрат.Коэффициент) КАК СуммаКоэффициентов
	|ПОМЕСТИТЬ ВТ_ВыборкаСуммыКоэффициентов
	|ИЗ
	|	ВТ_КоэффициентыСтатейЗатрат КАК КоэффициентыСтатейЗатрат
	|
	|СГРУППИРОВАТЬ ПО
	|	КоэффициентыСтатейЗатрат.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КоэффициентыСтатейЗатрат.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыборкаКоэффициентов.Ссылка КАК Ссылка,
	|	СУММА(ВЫБОР
	|			КОГДА ВыборкаКоэффициентов.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|				ТОГДА ВыборкаКоэффициентов.Коэффициент / ВыборкаСуммыКоэффициентов.СуммаКоэффициентов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НеЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ВыборкаКоэффициентов.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|				ТОГДА ВыборкаКоэффициентов.Коэффициент / ВыборкаСуммыКоэффициентов.СуммаКоэффициентов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Распределение
	|ПОМЕСТИТЬ КоэффициентыЕНВД
	|ИЗ
	|	ВТ_ВыборкаКоэффициентов КАК ВыборкаКоэффициентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВыборкаСуммыКоэффициентов КАК ВыборкаСуммыКоэффициентов
	|		ПО ВыборкаКоэффициентов.Ссылка = ВыборкаСуммыКоэффициентов.Ссылка
	|ГДЕ
	|	ВыборкаКоэффициентов.ОтношениеКЕНВД <> ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыборкаКоэффициентов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_КоэффициентыСтатейЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ВыборкаКоэффициентов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ВыборкаСуммыКоэффициентов";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры
 
Процедура СоздатьВТДвижимоеИмуществоПринятоеКУчетуПосле2013(ПараметрыРасчета) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОС
	|ПОМЕСТИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|ГДЕ
	|	(СостоянияОСОрганизаций.Организация = &ГоловнаяОрганизация
	|			ИЛИ СостоянияОСОрганизаций.Организация.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|				И СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				И СостоянияОСОрганизаций.ДатаСостояния <= &КонецПериодаОтчета
	|				И СостоянияОСОрганизаций.Активность = ИСТИНА
	|				И НЕ СостоянияОСОрганизаций.ОсновноеСредство.НедвижимоеИмущество
	|				И &ДопУсловие
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство
	|
	|ИМЕЮЩИЕ
	|	МИНИМУМ(СостоянияОСОрганизаций.ДатаСостояния) >= ДАТАВРЕМЯ(2013, 1, 1)";
	
	Если Метаданные.Документы.Найти("АвизоОСВходящее") <> Неопределено Тогда 
		ДопУсловие = "И НЕ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.АвизоОСВходящее";
	Иначе
		ДопУсловие = "";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &ДопУсловие", ДопУсловие);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("КонецПериодаОтчета", КонецГода(ПараметрыРасчета.ПериодРасчета));
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(ПараметрыРасчета.Организация));
	
	Запрос.Выполнить();
	
КонецПроцедуры
 
Процедура ДобавитьТекстЗапросаОССостоящиеНаУчете(ПараметрыРасчета, СписокЗапросов) Экспорт

	// Состояние ОС нельзя получить простым срезом последних, т.к. фактическая дата начала/прекращения права (ДатаСостояния)
	// в общем случае может быть не равна периоду записи (например, с помощью ручной операции можно ввести принятие/снятие с учета "задним числом").
	// Поэтому с помощью временных таблиц ПоследниеИзмененияСостоянияОС и СостоянияОС_СнятыСУчета получаем своеобразный срез последних по ДатаСостояния
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.Организация КАК Организация,
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(СостоянияОСОрганизаций.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ПоследниеИзмененияСостоянияОС
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|ГДЕ
	|	СостоянияОСОрганизаций.Организация В(&Организации)
	|	И СостоянияОСОрганизаций.ДатаСостояния < &Период
	|	И СостоянияОСОрганизаций.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.Организация,
	|	СостоянияОСОрганизаций.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство,
	|	ДатаСостояния
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК СнятоСУчетаВоВсехОрганизациях
	|ПОМЕСТИТЬ СостоянияОС
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследниеИзмененияСостоянияОС КАК ПоследниеИзмененияСостоянияОС
	|		ПО СостоянияОСОрганизаций.Организация = ПоследниеИзмененияСостоянияОС.Организация
	|			И СостоянияОСОрганизаций.ОсновноеСредство = ПоследниеИзмененияСостоянияОС.ОсновноеСредство
	|			И СостоянияОСОрганизаций.ДатаСостояния = ПоследниеИзмененияСостоянияОС.ДатаСостояния
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОС.Ссылка КАК ОсновноеСредство,
	|	ОС.ГруппаОС КАК ГруппаОС,
	|	ОС.НедвижимоеИмущество КАК НедвижимоеИмущество
	|ПОМЕСТИТЬ ВТ_ОССостоящиеНаУчете
	|ИЗ
	|	Справочник.ОсновныеСредства КАК ОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ СостоянияОС КАК СостоянияОС
	|		ПО ОС.Ссылка = СостоянияОС.ОсновноеСредство
	|ГДЕ
	|	НЕ ЕСТЬNULL(СостоянияОС.СнятоСУчетаВоВсехОрганизациях, ЛОЖЬ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры
 
Процедура ДобавитьТекстЗапросаСписокОС(СписокЗапросов) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.ОсновноеСредство.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	ПервоначальныеСведенияОС.ОсновноеСредство.НедвижимоеИмущество КАК НедвижимоеИмущество,
	|	ПервоначальныеСведенияОС.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
	|ПОМЕСТИТЬ СписокОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			Организация В (&Организации)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СписокРазрешенныхОС.ОсновноеСредство
	|					ИЗ
	|						СписокРазрешенныхОС КАК СписокРазрешенныхОС)) КАК ПервоначальныеСведенияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПервоначальныеСведенияОС.ОсновноеСредство";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры
 
Процедура ДобавитьТекстЗапросаСчетаБухгалтерскогоУчета(СписокЗапросов) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетаБухгалтерскогоУчета.Организация КАК Организация,
	|	СчетаБухгалтерскогоУчета.ОсновноеСредство КАК ОсновноеСредство,
	|	СчетаБухгалтерскогоУчета.СчетУчета КАК СчетУчета,
	|	СчетаБухгалтерскогоУчета.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ ВТ_СчетаБухгалтерскогоУчета
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|			&Период,
	|			Организация В (&Организации)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК СчетаБухгалтерскогоУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры
 
Процедура ДобавитьТекстЗапросаСтоимостьИАмортизация(Период, ПараметрыРасчета, СписокЗапросов) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчета.СчетУчета КАК СчетУчета
	|ПОМЕСТИТЬ ВТ_СчетаУчета
	|ИЗ
	|	ВТ_СчетаБухгалтерскогоУчета КАК СчетаБухгалтерскогоУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчета.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ ВТ_СчетаНачисленияАмортизации
	|ИЗ
	|	ВТ_СчетаБухгалтерскогоУчета КАК СчетаБухгалтерскогоУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетНачисленияАмортизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АмортизацияОС.Организация КАК Организация,
	|	АмортизацияОС.СуммаОстатокДт КАК СуммаОстатокДт,
	|	АмортизацияОС.СуммаОстатокКт КАК СуммаОстатокКт,
	|	АмортизацияОС.Субконто1 КАК ОсновноеСредство,
	|	АмортизацияОС.Счет КАК Счет
	|ПОМЕСТИТЬ ВТ_АмортизацияОС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ПериодГраница,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаНачисленияАмортизации.СчетНачисленияАмортизации
	|				ИЗ
	|					ВТ_СчетаНачисленияАмортизации),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация В (&Организации)) КАК АмортизацияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПервоначальнаяСтоимостьОС.Организация КАК Организация,
	|	ПервоначальнаяСтоимостьОС.СуммаОстатокДт КАК СуммаОстатокДт,
	|	ПервоначальнаяСтоимостьОС.Субконто1 КАК ОсновноеСредство,
	|	ПервоначальнаяСтоимостьОС.Счет КАК Счет
	|ПОМЕСТИТЬ ВТ_ПервоначальнаяСтоимостьОС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ПериодГраница,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаУчета.СчетУчета
	|				ИЗ
	|					ВТ_СчетаУчета),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация В (&Организации)) КАК ПервоначальнаяСтоимостьОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Счет";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаМестонахождениеОС(Период, ПараметрыРасчета, СписокЗапросов) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МестонахождениеОС.Организация КАК Организация,
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение
	|ПОМЕСТИТЬ МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			Организация В (&Организации)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС)) КАК МестонахождениеОС
	|ГДЕ
	|	МестонахождениеОС.Местонахождение.ОбособленноеПодразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

#КонецОбласти

#Область РасчетТранспортногоНалога

Функция ПолучитьРасчетПоТранспортномуНалогу(Организация, ПериодРасчета, ДополнительныеПараметры) Экспорт
			
	ГодовойРасчет = КонецКвартала(ПериодРасчета) = КонецГода(ПериодРасчета);
	
	ДатаНачалаПериодаОтчета = ?(ГодовойРасчет, НачалоГода(ПериодРасчета), НачалоКвартала(ПериодРасчета));
	ДатаКонцаПериодаОтчета = КонецКвартала(ПериодРасчета);
	
	ПараметрыРегистрацииВФНС = Новый Структура;
	ПараметрыРегистрацииВФНС.Вставить("ОсновнойНалоговыйОрган", Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	ПараметрыРегистрацииВФНС.Вставить("КодПоОКТМО", "");
	
	УточнитьПараметрыРегистрацииОрганизацииВФНС(
		ПараметрыРегистрацииВФНС,
		Организация,
		ДатаКонцаПериодаОтчета);
		
	ТаблицаРасчетТранспортногоНалога = УправлениеВнеоборотнымиАктивами.ПустаяСправкаРасчет("РасчетТранспортногоНалога");
	
	// Если для каких-то ТС в отчетном периоде отсутствуют ставки налога (не НалоговаяСтавка = 0, а именно отсутствует подходящая запись в регистре ставок),
	// то ниже отметим такие строки расчета.
	// Обработка таких ошибок выполняется вне данной процедуры.
	ТаблицаРасчетТранспортногоНалога.Колонки.Добавить("ОтсутствуетСтавка", Новый ОписаниеТипов("Булево"));
	
	ЭтоНеЮрЛицо = НЕ ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Организация);
	
	Если Месяц(ПериодРасчета)%3 <> 0 ИЛИ ЭтоНеЮрЛицо Тогда
		Возврат Новый Структура("Налог, Платон", ТаблицаРасчетТранспортногоНалога, Неопределено);
	КонецЕсли;
	
	НетТСЗарегистрированныхВРеестреСистемыПлатон = Истина;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодРасчета", ПериодРасчета);
	Запрос.УстановитьПараметр("ОсновнойНалоговыйОрган", ПараметрыРегистрацииВФНС.ОсновнойНалоговыйОрган);
	
	ТекстОбъединяющегоЗапроса = "";
	
	Период = ДатаНачалаПериодаОтчета;
	
	Пока Период <= ДатаКонцаПериодаОтчета Цикл
		
		// С 2016 года, если регистрация ТС произошла до 15-го числа соответствующего месяца включительно
		// или снятие транспортного средства с регистрации (снятие с учета, исключение из государственного
		// судового реестра и так далее) произошло после 15-го числа соответствующего месяца, за полный 
		// месяц принимается месяц регистрации (снятия с регистрации) транспортного средства.
		
		Если Год(Период) < 2016 Тогда
			КонецПериода = КонецМесяца(Период);
			КонецПрошлогоПериода = НачалоМесяца(Период) - 1;
		Иначе
			КонецПериода = Дата(Год(Период), Месяц(Период), 15, 23, 59, 59);
			КонецПрошлогоПериода = КонецПериода;
		КонецЕсли;
		
		Запрос.УстановитьПараметр("КонецПрошлогоПериода", КонецПрошлогоПериода);
		Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Период));
		Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
		Запрос.УстановитьПараметр("КодПоОКТМО",   ПараметрыРегистрацииВФНС.КодПоОКТМО);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегистрацияТранспортныхСредствСрезПоследних.Период КАК Период,
		|	РегистрацияТранспортныхСредствСрезПоследних.Организация КАК Организация,
		|	РегистрацияТранспортныхСредствСрезПоследних.ОсновноеСредство КАК ОсновноеСредство
		|ПОМЕСТИТЬ ВТ_РегистрацииНаКонецПрошлогоПериода
		|ИЗ
		|	РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(&КонецПрошлогоПериода, Организация = &Организация) КАК РегистрацияТранспортныхСредствСрезПоследних
		|ГДЕ
		|	РегистрацияТранспортныхСредствСрезПоследних.ВключатьВНалоговуюБазу
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегистрацияТранспортныхСредств.Период КАК Период,
		|	РегистрацияТранспортныхСредств.Организация КАК Организация,
		|	РегистрацияТранспортныхСредств.ОсновноеСредство КАК ОсновноеСредство
		|ПОМЕСТИТЬ ВТ_РегистрацииВПервыйДеньМесяца
		|ИЗ
		|	РегистрСведений.РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
		|ГДЕ
		|	РегистрацияТранспортныхСредств.Организация = &Организация
		|	И РегистрацияТранспортныхСредств.Период = &НачалоМесяца
		|	И РегистрацияТранспортныхСредств.ВключатьВНалоговуюБазу
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(ВТ_РегистрацииВПервыйДеньМесяца.Период, ВТ_РегистрацииНаКонецПрошлогоПериода.Период) КАК Период,
		|	ВТ_РегистрацииНаКонецПрошлогоПериода.Организация,
		|	ВТ_РегистрацииНаКонецПрошлогоПериода.ОсновноеСредство
		|ПОМЕСТИТЬ ВТ_СписокОсновныхСредств
		|ИЗ
		|	ВТ_РегистрацииНаКонецПрошлогоПериода КАК ВТ_РегистрацииНаКонецПрошлогоПериода
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РегистрацииВПервыйДеньМесяца КАК ВТ_РегистрацииВПервыйДеньМесяца
		|		ПО ВТ_РегистрацииНаКонецПрошлогоПериода.Организация = ВТ_РегистрацииВПервыйДеньМесяца.Организация
		|			И ВТ_РегистрацииНаКонецПрошлогоПериода.ОсновноеСредство = ВТ_РегистрацииВПервыйДеньМесяца.ОсновноеСредство
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РегистрацияТранспортныхСредств.Период,
		|	РегистрацияТранспортныхСредств.Организация,
		|	РегистрацияТранспортныхСредств.ОсновноеСредство
		|ИЗ
		|	РегистрСведений.РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
		|ГДЕ
		|	РегистрацияТранспортныхСредств.Организация = &Организация
		|	И РегистрацияТранспортныхСредств.Период МЕЖДУ &НачалоМесяца И &КонецПериода
		|	И РегистрацияТранспортныхСредств.ВключатьВНалоговуюБазу
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_РегистрацииНаКонецПрошлогоПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_РегистрацииВПервыйДеньМесяца
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(СписокОсновныхСредств.Период) КАК Период,
		|	СписокОсновныхСредств.Организация КАК Организация,
		|	СписокОсновныхСредств.ОсновноеСредство КАК ОсновноеСредство
		|ПОМЕСТИТЬ ВТ_ПериодРегистрацииТранспортныхСредств
		|ИЗ
		|	ВТ_СписокОсновныхСредств КАК СписокОсновныхСредств
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокОсновныхСредств.ОсновноеСредство,
		|	СписокОсновныхСредств.Организация
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Период,
		|	Организация,
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_ПериодРегистрацииТранспортныхСредств.Период КАК ДатаРегистрационныхДанных,
		|	ВТ_ПериодРегистрацииТранспортныхСредств.ОсновноеСредство КАК ОсновноеСредство,
		|	РегистрацияТранспортныхСредств.РегистрационныйЗнак КАК РегистрационныйЗнак,
		|	РегистрацияТранспортныхСредств.Марка КАК Марка,
		|	РегистрацияТранспортныхСредств.ИдентификационныйНомер КАК ИдентификационныйНомер,
		|	ВЫБОР
		|		КОГДА РегистрацияТранспортныхСредств.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
		|			ТОГДА РегистрацияТранспортныхСредств.НалоговыйОрган
		|		ИНАЧЕ &ОсновнойНалоговыйОрган
		|	КОНЕЦ КАК РегистрацияВНалоговомОргане,
		|	ВЫБОР
		|		КОГДА РегистрацияТранспортныхСредств.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
		|				ИЛИ РегистрацияТранспортныхСредств.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО)
		|			ТОГДА РегистрацияТранспортныхСредств.КодПоОКТМО
		|		ИНАЧЕ &КодПоОКТМО
		|	КОНЕЦ КАК КодПоОКТМО,
		|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
		|	РегистрацияТранспортныхСредств.НалоговаяБаза КАК НалоговаяБаза,
		|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы КАК ЕдиницаИзмеренияНалоговойБазы,
		|	РегистрацияТранспортныхСредств.НалоговаяЛьгота КАК НалоговаяЛьгота,
		|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
		|	РегистрацияТранспортныхСредств.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
		|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
		|	РегистрацияТранспортныхСредств.ПроцентУменьшения КАК ПроцентУменьшения,
		|	РегистрацияТранспортныхСредств.СуммаУменьшения КАК СуммаУменьшения,
		|	РегистрацияТранспортныхСредств.ЭкологическийКласс КАК ЭкологическийКласс,
		|	ВЫБОР
		|		КОГДА РегистрацияТранспортныхСредств.ОбщаяСобственность
		|			ТОГДА РегистрацияТранспортныхСредств.ДоляВПравеОбщейСобственностиЧислитель
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ДоляВПравеОбщейСобственностиЧислитель,
		|	ВЫБОР
		|		КОГДА РегистрацияТранспортныхСредств.ОбщаяСобственность
		|			ТОГДА РегистрацияТранспортныхСредств.ДоляВПравеОбщейСобственностиЗнаменатель
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ДоляВПравеОбщейСобственностиЗнаменатель,
		|	РегистрацияТранспортныхСредств.ПовышающийКоэффициент КАК ПовышающийКоэффициент,
		|	РегистрацияТранспортныхСредств.ЗарегистрированоВРеестреСистемыПлатон КАК ЗарегистрированоВРеестреСистемыПлатон,
		|	1 КАК КоличествоМесяцев
		|ПОМЕСТИТЬ РегистрацияТранспортныхСредств
		|ИЗ
		|	ВТ_ПериодРегистрацииТранспортныхСредств КАК ВТ_ПериодРегистрацииТранспортныхСредств
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
		|		ПО ВТ_ПериодРегистрацииТранспортныхСредств.Период = РегистрацияТранспортныхСредств.Период
		|			И ВТ_ПериодРегистрацииТранспортныхСредств.Организация = РегистрацияТранспортныхСредств.Организация
		|			И ВТ_ПериодРегистрацииТранспортныхСредств.ОсновноеСредство = РегистрацияТранспортныхСредств.ОсновноеСредство";
		
		Подстрока = "ПОМЕСТИТЬ РегистрацияТранспортныхСредств";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, Подстрока, Подстрока + Формат(Период, "ДФ=MM"));
		
		Запрос.Выполнить();
		
		ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
		                              |",
									  "ОБЪЕДИНИТЬ ВСЕ
									  |ВЫБРАТЬ *
		                              |")
								  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
									  "ПОМЕСТИТЬ РегистрацияТранспортныхСредств
									  |",
									  "")
								  + "ИЗ РегистрацияТранспортныхСредств" + Формат(Период, "ДФ=MM") + "
									|";
									
		Запрос.Текст = 
		"УНИЧТОЖИТЬ ВТ_СписокОсновныхСредств
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ПериодРегистрацииТранспортныхСредств";
		Запрос.Выполнить();
		
		Период = ДобавитьМесяц(Период, 1);
		
	КонецЦикла;
	
	Запрос.Текст = ТекстОбъединяющегоЗапроса;
	Запрос.Выполнить();
	
	РасчетИмущественныхНалогов.СоздатьНалоговыеОрганыСУстановленнойУплатойАвансов(
		Запрос.МенеджерВременныхТаблиц, Организация, ПериодРасчета, "ТранспортныйНалог");
	
	Запрос.Текст =		
	"ВЫБРАТЬ
	|	РегистрацияТранспортныхСредств.Период КАК Период,
	|	РегистрацияТранспортныхСредств.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ВТ_Регистрации
	|ИЗ
	|	РегистрСведений.РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
	|ГДЕ
	|	РегистрацияТранспортныхСредств.Организация = &Организация
	|	И РегистрацияТранспортныхСредств.Период <= &ПериодРасчета
	|	И РегистрацияТранспортныхСредств.ВидЗаписи = ЗНАЧЕНИЕ(Перечисление.ВидЗаписиОРегистрации.Регистрация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрацияТранспортныхСредств.Период КАК Период,
	|	РегистрацияТранспортныхСредств.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ВТ_Снятия
	|ИЗ
	|	РегистрСведений.РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
	|ГДЕ
	|	РегистрацияТранспортныхСредств.Организация = &Организация
	|	И РегистрацияТранспортныхСредств.Период <= &ПериодРасчета
	|	И РегистрацияТранспортныхСредств.ВидЗаписи = ЗНАЧЕНИЕ(Перечисление.ВидЗаписиОРегистрации.СнятиеСРегистрационногоУчета)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Регистрации.ОсновноеСредство КАК ОсновноеСредство,
	|	ВТ_Регистрации.Период КАК Период,
	|	МАКСИМУМ(ЕСТЬNULL(ВТ_Снятия.Период, ДАТАВРЕМЯ(1, 1, 1))) КАК ПериодПредыдущегоСнятия
	|ПОМЕСТИТЬ ВТ_ПредыдущиеСнятия
	|ИЗ
	|	ВТ_Регистрации КАК ВТ_Регистрации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Снятия КАК ВТ_Снятия
	|		ПО ВТ_Регистрации.ОсновноеСредство = ВТ_Снятия.ОсновноеСредство
	|			И ВТ_Регистрации.Период > ВТ_Снятия.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Регистрации.ОсновноеСредство,
	|	ВТ_Регистрации.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПредыдущиеСнятия.ОсновноеСредство КАК ОсновноеСредство,
	|	ВТ_ПредыдущиеСнятия.Период КАК Период,
	|	МИНИМУМ(ВТ_Регистрации.Период) КАК ПериодПервоначальнойРегистрации
	|ПОМЕСТИТЬ ВТ_ПервоначальныеРегистрации
	|ИЗ
	|	ВТ_ПредыдущиеСнятия КАК ВТ_ПредыдущиеСнятия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Регистрации КАК ВТ_Регистрации
	|		ПО ВТ_ПредыдущиеСнятия.ОсновноеСредство = ВТ_Регистрации.ОсновноеСредство
	|			И ВТ_ПредыдущиеСнятия.ПериодПредыдущегоСнятия < ВТ_Регистрации.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПредыдущиеСнятия.ОсновноеСредство,
	|	ВТ_ПредыдущиеСнятия.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Регистрации.ОсновноеСредство КАК ОсновноеСредство,
	|	ВТ_Регистрации.Период КАК Период,
	|	МИНИМУМ(ЕСТЬNULL(ВТ_Снятия.Период, ДАТАВРЕМЯ(1, 1, 1))) КАК ПериодСнятияСУчета
	|ПОМЕСТИТЬ ВТ_СнятияСУчета
	|ИЗ
	|	ВТ_Регистрации КАК ВТ_Регистрации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Снятия КАК ВТ_Снятия
	|		ПО ВТ_Регистрации.ОсновноеСредство = ВТ_Снятия.ОсновноеСредство
	|			И ВТ_Регистрации.Период < ВТ_Снятия.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Регистрации.ОсновноеСредство,
	|	ВТ_Регистрации.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Регистрации.ОсновноеСредство КАК ОсновноеСредство,
	|	ВТ_Регистрации.Период КАК Период,
	|	МАКСИМУМ(ВТ_ПервоначальныеРегистрации.ПериодПервоначальнойРегистрации) КАК ПериодПервоначальнойРегистрации,
	|	МАКСИМУМ(ВТ_СнятияСУчета.ПериодСнятияСУчета) КАК ПериодСнятияСУчета
	|ПОМЕСТИТЬ ВТ_ДатыПостановкиИСнятия
	|ИЗ
	|	ВТ_Регистрации КАК ВТ_Регистрации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПервоначальныеРегистрации КАК ВТ_ПервоначальныеРегистрации
	|		ПО ВТ_Регистрации.ОсновноеСредство = ВТ_ПервоначальныеРегистрации.ОсновноеСредство
	|			И ВТ_Регистрации.Период = ВТ_ПервоначальныеРегистрации.Период
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СнятияСУчета КАК ВТ_СнятияСУчета
	|		ПО ВТ_Регистрации.ОсновноеСредство = ВТ_СнятияСУчета.ОсновноеСредство
	|			И ВТ_Регистрации.Период = ВТ_СнятияСУчета.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Регистрации.ОсновноеСредство,
	|	ВТ_Регистрации.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(РегистрацияТранспортныхСредств.КоличествоМесяцев) КАК КоличествоМесяцев,
	|	РегистрацияТранспортныхСредств.ОсновноеСредство КАК ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак КАК РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка КАК Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер КАК ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РегистрацияТранспортныхСредств.КодПоОКТМО КАК КодПоОКТМО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза КАК НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы КАК ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота КАК НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения КАК ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения КАК СуммаУменьшения,
	|	РегистрацияТранспортныхСредств.ЭкологическийКласс КАК ЭкологическийКласс,
	|	РегистрацияТранспортныхСредств.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	РегистрацияТранспортныхСредств.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РегистрацияТранспортныхСредств.ПовышающийКоэффициент КАК ПовышающийКоэффициент,
	|	РегистрацияТранспортныхСредств.ЗарегистрированоВРеестреСистемыПлатон КАК ЗарегистрированоВРеестреСистемыПлатон
	|ПОМЕСТИТЬ ВТ_РазличныеЗаписи
	|ИЗ
	|	РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацияТранспортныхСредств.ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.РегистрацияВНалоговомОргане,
	|	РегистрацияТранспортныхСредств.КодПоОКТМО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.РегиональныйКодЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения,
	|	РегистрацияТранспортныхСредств.ЭкологическийКласс,
	|	РегистрацияТранспортныхСредств.ДоляВПравеОбщейСобственностиЧислитель,
	|	РегистрацияТранспортныхСредств.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РегистрацияТранспортныхСредств.ПовышающийКоэффициент,
	|	РегистрацияТранспортныхСредств.ЗарегистрированоВРеестреСистемыПлатон
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВТ_РазличныеЗаписи.КоличествоМесяцев) КАК КоличествоМесяцев,
	|	ВТ_РазличныеЗаписи.ОсновноеСредство КАК ОсновноеСредство,
	|	ВТ_РазличныеЗаписи.РегистрационныйЗнак КАК РегистрационныйЗнак,
	|	ВТ_РазличныеЗаписи.Марка КАК Марка,
	|	ВТ_РазличныеЗаписи.ИдентификационныйНомер КАК ИдентификационныйНомер,
	|	ВТ_РазличныеЗаписи.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВТ_РазличныеЗаписи.КодПоОКТМО КАК КодПоОКТМО,
	|	ВТ_РазличныеЗаписи.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
	|	ВТ_РазличныеЗаписи.НалоговаяБаза КАК НалоговаяБаза,
	|	ВТ_РазличныеЗаписи.ЕдиницаИзмеренияНалоговойБазы КАК ЕдиницаИзмеренияНалоговойБазы,
	|	ВТ_РазличныеЗаписи.ЭкологическийКласс КАК ЭкологическийКласс,
	|	ВТ_РазличныеЗаписи.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	ВТ_РазличныеЗаписи.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ВТ_РазличныеЗаписи.ПовышающийКоэффициент КАК ПовышающийКоэффициент,
	|	ВТ_РазличныеЗаписи.ЗарегистрированоВРеестреСистемыПлатон КАК ЗарегистрированоВРеестреСистемыПлатон,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_РазличныеЗаписи.НалоговаяЛьгота <> ЗНАЧЕНИЕ(Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоЗаписейЛьгот
	|ПОМЕСТИТЬ ВТ_ЗаписиБезУчетаЛьгот
	|ИЗ
	|	ВТ_РазличныеЗаписи КАК ВТ_РазличныеЗаписи
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_РазличныеЗаписи.ОсновноеСредство,
	|	ВТ_РазличныеЗаписи.РегистрационныйЗнак,
	|	ВТ_РазличныеЗаписи.Марка,
	|	ВТ_РазличныеЗаписи.ИдентификационныйНомер,
	|	ВТ_РазличныеЗаписи.РегистрацияВНалоговомОргане,
	|	ВТ_РазличныеЗаписи.КодПоОКТМО,
	|	ВТ_РазличныеЗаписи.КодВидаТранспортногоСредства,
	|	ВТ_РазличныеЗаписи.НалоговаяБаза,
	|	ВТ_РазличныеЗаписи.ЕдиницаИзмеренияНалоговойБазы,
	|	ВТ_РазличныеЗаписи.ЭкологическийКласс,
	|	ВТ_РазличныеЗаписи.ДоляВПравеОбщейСобственностиЧислитель,
	|	ВТ_РазличныеЗаписи.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ВТ_РазличныеЗаписи.ПовышающийКоэффициент,
	|	ВТ_РазличныеЗаписи.ЗарегистрированоВРеестреСистемыПлатон
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(РегистрацияТранспортныхСредств.ДатаРегистрационныхДанных) КАК ДатаРегистрационныхДанных,
	|	СУММА(РегистрацияТранспортныхСредств.КоличествоМесяцев) КАК КоличествоМесяцевЛьготы,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_ЗаписиБезУчетаЛьгот.КоличествоМесяцев, 0) = 0
	|			ТОГДА СУММА(РегистрацияТранспортныхСредств.КоличествоМесяцев)
	|		ИНАЧЕ ВТ_ЗаписиБезУчетаЛьгот.КоличествоМесяцев
	|	КОНЕЦ КАК КоличествоМесяцевВладения,
	|	РегистрацияТранспортныхСредств.ОсновноеСредство КАК ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак КАК РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка КАК Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер КАК ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.РегистрацияВНалоговомОргане КАК ИФНС,
	|	РегистрацияТранспортныхСредств.КодПоОКТМО КАК КодПоОКТМО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза КАК НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы КАК ЕдиницаИзмерения,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота КАК НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения КАК ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения КАК СуммаУменьшения,
	|	РегистрацияТранспортныхСредств.ЭкологическийКласс КАК ЭкологическийКласс,
	|	РегистрацияТранспортныхСредств.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	РегистрацияТранспортныхСредств.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РегистрацияТранспортныхСредств.ПовышающийКоэффициент КАК ПовышающийКоэффициент,
	|	РегистрацияТранспортныхСредств.ЗарегистрированоВРеестреСистемыПлатон КАК ЗарегистрированоВРеестреСистемыПлатон,
	|	ЕСТЬNULL(ВТ_ЗаписиБезУчетаЛьгот.КоличествоЗаписейЛьгот, 0) КАК КоличествоЗаписейЛьгот,
	|	ВЫБОР
	|		КОГДА ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов.НалоговыйОрган ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК УплачиваютсяАвансы,
	|	ОсновныеСредства.ДатаВыпуска КАК ДатаВыпуска,
	|	ВТ_ДатыПостановкиИСнятия.ПериодПервоначальнойРегистрации КАК ДатаРегистрации,
	|	ВТ_ДатыПостановкиИСнятия.ПериодСнятияСУчета КАК ДатаПрекращенияРегистрации
	|ИЗ
	|	РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаписиБезУчетаЛьгот КАК ВТ_ЗаписиБезУчетаЛьгот
	|		ПО РегистрацияТранспортныхСредств.ОсновноеСредство = ВТ_ЗаписиБезУчетаЛьгот.ОсновноеСредство
	|			И РегистрацияТранспортныхСредств.РегистрационныйЗнак = ВТ_ЗаписиБезУчетаЛьгот.РегистрационныйЗнак
	|			И РегистрацияТранспортныхСредств.Марка = ВТ_ЗаписиБезУчетаЛьгот.Марка
	|			И РегистрацияТранспортныхСредств.ИдентификационныйНомер = ВТ_ЗаписиБезУчетаЛьгот.ИдентификационныйНомер
	|			И РегистрацияТранспортныхСредств.РегистрацияВНалоговомОргане = ВТ_ЗаписиБезУчетаЛьгот.РегистрацияВНалоговомОргане
	|			И РегистрацияТранспортныхСредств.КодПоОКТМО = ВТ_ЗаписиБезУчетаЛьгот.КодПоОКТМО
	|			И РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства = ВТ_ЗаписиБезУчетаЛьгот.КодВидаТранспортногоСредства
	|			И РегистрацияТранспортныхСредств.НалоговаяБаза = ВТ_ЗаписиБезУчетаЛьгот.НалоговаяБаза
	|			И РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы = ВТ_ЗаписиБезУчетаЛьгот.ЕдиницаИзмеренияНалоговойБазы
	|			И РегистрацияТранспортныхСредств.ЭкологическийКласс = ВТ_ЗаписиБезУчетаЛьгот.ЭкологическийКласс
	|			И РегистрацияТранспортныхСредств.ДоляВПравеОбщейСобственностиЧислитель = ВТ_ЗаписиБезУчетаЛьгот.ДоляВПравеОбщейСобственностиЧислитель
	|			И РегистрацияТранспортныхСредств.ДоляВПравеОбщейСобственностиЗнаменатель = ВТ_ЗаписиБезУчетаЛьгот.ДоляВПравеОбщейСобственностиЗнаменатель
	|			И РегистрацияТранспортныхСредств.ПовышающийКоэффициент = ВТ_ЗаписиБезУчетаЛьгот.ПовышающийКоэффициент
	|			И (ВТ_ЗаписиБезУчетаЛьгот.КоличествоЗаписейЛьгот = 1)
	|			И РегистрацияТранспортныхСредств.ЗарегистрированоВРеестреСистемыПлатон = ВТ_ЗаписиБезУчетаЛьгот.ЗарегистрированоВРеестреСистемыПлатон
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов КАК ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов
	|		ПО РегистрацияТранспортныхСредств.РегистрацияВНалоговомОргане = ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов.НалоговыйОрган
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
	|		ПО РегистрацияТранспортныхСредств.ОсновноеСредство = ОсновныеСредства.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДатыПостановкиИСнятия КАК ВТ_ДатыПостановкиИСнятия
	|		ПО РегистрацияТранспортныхСредств.ОсновноеСредство = ВТ_ДатыПостановкиИСнятия.ОсновноеСредство
	|			И РегистрацияТранспортныхСредств.ДатаРегистрационныхДанных = ВТ_ДатыПостановкиИСнятия.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацияТранспортныхСредств.ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.РегистрацияВНалоговомОргане,
	|	РегистрацияТранспортныхСредств.КодПоОКТМО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.РегиональныйКодЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения,
	|	РегистрацияТранспортныхСредств.ЭкологическийКласс,
	|	РегистрацияТранспортныхСредств.ДоляВПравеОбщейСобственностиЧислитель,
	|	РегистрацияТранспортныхСредств.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РегистрацияТранспортныхСредств.ПовышающийКоэффициент,
	|	ВТ_ЗаписиБезУчетаЛьгот.КоличествоМесяцев,
	|	ВЫБОР
	|		КОГДА ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов.НалоговыйОрган ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ОсновныеСредства.ДатаВыпуска,
	|	ЕСТЬNULL(ВТ_ЗаписиБезУчетаЛьгот.КоличествоЗаписейЛьгот, 0),
	|	РегистрацияТранспортныхСредств.ЗарегистрированоВРеестреСистемыПлатон,
	|	ВТ_ДатыПостановкиИСнятия.ПериодПервоначальнойРегистрации,
	|	ВТ_ДатыПостановкиИСнятия.ПериодСнятияСУчета
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИФНС,
	|	КодПоОКТМО,
	|	ОсновноеСредство";
				
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		РасчетТранспортногоНалога = Результат.Выгрузить();
		
		РасчетТранспортногоНалога.Колонки.Добавить("КоличествоЛетПрошедшихСГодаВыпускаТС", 
			ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
			
		ДополнитьРасчетТранспортногоНалога(
			РасчетТранспортногоНалога, ДатаКонцаПериодаОтчета);
			
		// В 2020 году некоторые организации освобождены от уплаты имущественных налогов (за 2-й квартал). В этом случае сумму освобождения записываем
		// в отдельную колонку расчета СуммаОсвобожденияОтУплатыНалога.
		РассчитыватьОсвобождениеОтНалога = Ложь;
		ЭтоПериодОсвобождения = Ложь;
		РасчетСуммыНалогаЗаПериодОсвобождения = Ложь;
		Если ДополнительныеПараметры <> Неопределено Тогда
			РассчитыватьОсвобождениеОтНалога = ГодовойРасчет
				И ДополнительныеПараметры.Свойство("ПрименяетсяОсвобождениеОтУплатыНалогаВНалоговомПериоде")
				И ДополнительныеПараметры.ПрименяетсяОсвобождениеОтУплатыНалогаВНалоговомПериоде;
			ЭтоПериодОсвобождения = ДополнительныеПараметры.Свойство("ПрименяетсяОсвобождениеОтУплатыНалогаВТекущемПериоде")
				И ДополнительныеПараметры.ПрименяетсяОсвобождениеОтУплатыНалогаВТекущемПериоде;	
			РасчетСуммыНалогаЗаПериодОсвобождения = ДополнительныеПараметры.Свойство("РасчетСуммыНалогаЗаПериодОсвобождения") 
				И ДополнительныеПараметры.РасчетСуммыНалогаЗаПериодОсвобождения;	// устанавливается при "вложенном" вызове расчета за период освобождения			
		КонецЕсли;		
			
		Если ГодовойРасчет Тогда
			
			РасчетНалога1Кв = ТаблицаРасчетТранспортногоНалога.СкопироватьКолонки();
			РасчетНалога2Кв = ТаблицаРасчетТранспортногоНалога.СкопироватьКолонки();
			РасчетНалога3Кв = ТаблицаРасчетТранспортногоНалога.СкопироватьКолонки();
			
			Отбор = Новый Структура("ИФНС, КодПоОКТМО, ОсновноеСредство, ДатаРегистрационныхДанных");
			
			ЕстьОбъектыСУплатойАвансов = (РасчетТранспортногоНалога.Найти(Истина, "УплачиваютсяАвансы") <> Неопределено);
			ЕстьОбъектыБезУплатыАвансов = (РасчетТранспортногоНалога.Найти(Ложь, "УплачиваютсяАвансы") <> Неопределено);
			
			Если ЕстьОбъектыСУплатойАвансов Тогда
				РасчетНалога1Кв = РасчетИмущественныхНалогов.ПолучитьАвансовыйРасчетПоТранспортномуНалогу(Организация, Дата(Год(ПериодРасчета), 03, 31));
				РасчетНалога1Кв.Индексы.Добавить("ИФНС, КодПоОКТМО, ОсновноеСредство, ДатаРегистрационныхДанных");
				
				РасчетНалога2Кв = РасчетИмущественныхНалогов.ПолучитьАвансовыйРасчетПоТранспортномуНалогу(Организация, Дата(Год(ПериодРасчета), 06, 30));
				РасчетНалога2Кв.Индексы.Добавить("ИФНС, КодПоОКТМО, ОсновноеСредство, ДатаРегистрационныхДанных");
				
				РасчетНалога3Кв = РасчетИмущественныхНалогов.ПолучитьАвансовыйРасчетПоТранспортномуНалогу(Организация, Дата(Год(ПериодРасчета), 09, 30));
				РасчетНалога3Кв.Индексы.Добавить("ИФНС, КодПоОКТМО, ОсновноеСредство, ДатаРегистрационныхДанных");
			КонецЕсли;	
			
			// Если в каких-то регионах (ИФНС) не уплачиваются авансы, то для расчета налога к уплате за год нужны данные 2-го квартала.
			// Для этого из годового расчета вызываем "вложенный" расчет за 2-й квартал.
			// Взять готовые данные из регистра сведений нельзя, т.к. если авансы не уплачиваются, то и расчета за 2-й квартал нет.
			// ТаблицаРасчетТранспортногоНалога и РасчетНалога2Кв имеют одинаковый состав основных колонок, т.к. созданы по структуре регистра сведений. 
			Если ЕстьОбъектыБезУплатыАвансов И РассчитыватьОсвобождениеОтНалога Тогда
				ПараметрыРасчетаЗа2Кв = ОбщегоНазначения.СкопироватьРекурсивно(ДополнительныеПараметры);
				ПараметрыРасчетаЗа2Кв.Вставить("РасчетСуммыНалогаЗаПериодОсвобождения", Истина); // во вложенном расчете будут считаться авансы даже по тем объектам, по которым авансы не уплачиваются
				ПараметрыРасчетаЗа2Кв.Вставить("ПрименяетсяОсвобождениеОтУплатыНалогаВТекущемПериоде", Истина); // расчет за 2-й квартал 2020 года - действует освобождение 
				ТаблицыРасчетаНалогаКОсвобождению = ПолучитьРасчетПоТранспортномуНалогу(
					Организация,
					Дата(Год(ПериодРасчета), 06, 30),
					ПараметрыРасчетаЗа2Кв);
				РасчетНалогаКОсвобождению = ТаблицыРасчетаНалогаКОсвобождению.Налог;	
				РасчетНалогаКОсвобождению.Индексы.Добавить("ИФНС, КодПоОКТМО, ОсновноеСредство, ДатаРегистрационныхДанных");
			КонецЕсли;
			
		КонецЕсли;
				
		Для Каждого СтрокаРасчета Из РасчетТранспортногоНалога Цикл
			
			// Если расчет вызван для определения суммы освобождения от налога, то рассчитывать нужно только для тех ИФНС, 
			// где не уплачиваются авансы. В ином случае расчет будет взят из регистра без необходимости расчета.
			Если НЕ ГодовойРасчет И НЕ СтрокаРасчета.УплачиваютсяАвансы И НЕ РасчетСуммыНалогаЗаПериодОсвобождения Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтрокаРасчета.УплачиваютсяАвансы И РасчетСуммыНалогаЗаПериодОсвобождения Тогда
				Продолжить;
			КонецЕсли;
			
			Если НетТСЗарегистрированныхВРеестреСистемыПлатон И СтрокаРасчета.ЗарегистрированоВРеестреСистемыПлатон Тогда
				НетТСЗарегистрированныхВРеестреСистемыПлатон = Ложь;
			КонецЕсли;
			
			// Для расчета используется та строка, в которой содержится информация о льготе.
			Если СтрокаРасчета.КоличествоЗаписейЛьгот = 1
			   И СтрокаРасчета.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется Тогда
				Продолжить;
			КонецЕсли;
			
			Если Год(ДатаКонцаПериодаОтчета) > 2015 
			   И НачалоМесяца(СтрокаРасчета.ДатаРегистрации) = НачалоМесяца(СтрокаРасчета.ДатаПрекращенияРегистрации)
			   И ((День(СтрокаРасчета.ДатаРегистрации) <= 15 И День(СтрокаРасчета.ДатаПрекращенияРегистрации) <= 15)
			       ИЛИ (День(СтрокаРасчета.ДатаРегистрации) > 15 И День(СтрокаРасчета.ДатаПрекращенияРегистрации) > 15)) Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = ТаблицаРасчетТранспортногоНалога.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРасчета, ,
				"КодПоОКТМО, КоличествоМесяцевЛьготы,КодНалоговойЛьготы,РегиональныйКодЛьготы,
				|ПроцентУменьшения,ЛьготнаяСтавка,КоличествоЛетПрошедшихСГодаВыпускаТС");
			
			НоваяСтрока.КодПоОКТМО = СокрЛП(СтрокаРасчета.КодПоОКТМО);
			
			Если СтрокаРасчета.НалоговаяСтавкаЗависитОтГодаВыпускаТС Тогда
				НоваяСтрока.КоличествоЛетПрошедшихСГодаВыпускаТС = СтрокаРасчета.КоличествоЛетПрошедшихСГодаВыпускаТС;
			КонецЕсли;
			
			КоличествоМесяцевВПериоде = ?(ГодовойРасчет, 12, 3);
			Коэффициент = Окр(НоваяСтрока.КоличествоМесяцевВладения / КоличествоМесяцевВПериоде, 4);
			
			Если Год(ДатаКонцаПериодаОтчета) > 2014 ИЛИ (ГодовойРасчет И Год(ДатаКонцаПериодаОтчета) = 2014) Тогда
				
				Если НоваяСтрока.ДоляВПравеОбщейСобственностиЗнаменатель = 0 
					ИЛИ НоваяСтрока.ДоляВПравеОбщейСобственностиЧислитель = 0 Тогда
					
					ДоляВПравеОбщейСобственности = 1;
					
				Иначе
					
					ДоляВПравеОбщейСобственности = НоваяСтрока.ДоляВПравеОбщейСобственностиЧислитель 
						/ НоваяСтрока.ДоляВПравеОбщейСобственностиЗнаменатель;
					
				КонецЕсли;
					
			Иначе
				
				НоваяСтрока.ДоляВПравеОбщейСобственностиЗнаменатель = 0;
				НоваяСтрока.ДоляВПравеОбщейСобственностиЧислитель = 0;
				ДоляВПравеОбщейСобственности = 1;
				
			КонецЕсли;
			
			Если СтрокаРасчета.ПовышающийКоэффициент <> 0
				И (Год(ДатаКонцаПериодаОтчета) >= 2015 ИЛИ (ГодовойРасчет И Год(ДатаКонцаПериодаОтчета) = 2014)) Тогда
				
				ПовышающийКоэффициент = СтрокаРасчета.ПовышающийКоэффициент;
				
			Иначе
				
				ПовышающийКоэффициент = 1;
				НоваяСтрока.ПовышающийКоэффициент = 0;
				
			КонецЕсли;
			
			НоваяСтрока.СуммаНалога = Окр(Окр(НоваяСтрока.НалоговаяБаза 
				* НоваяСтрока.НалоговаяСтавка 
				* ДоляВПравеОбщейСобственности 
				* Коэффициент
				* ПовышающийКоэффициент
				* ?(ГодовойРасчет, 1, 1 / 4), 2));
			
			НалоговаяЛьгота = СтрокаРасчета.НалоговаяЛьгота;
			
			Если НалоговаяЛьгота <> Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется
				И НалоговаяЛьгота <> Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаНаСумму Тогда 
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРасчета,
					"КоличествоМесяцевЛьготы,КодНалоговойЛьготы,РегиональныйКодЛьготы,ПроцентУменьшения,ЛьготнаяСтавка");
				
				КоэффициентЛьготы = Окр(НоваяСтрока.КоличествоМесяцевЛьготы / 12, 4);
					
				Если НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.ОсвобождениеОтНалогообложения Тогда 
					
					НоваяСтрока.СуммаНалоговойЛьготы = 
						Окр(Окр(НоваяСтрока.НалоговаяБаза 
							* НоваяСтрока.НалоговаяСтавка 
							* КоэффициентЛьготы
							* ДоляВПравеОбщейСобственности
							* ПовышающийКоэффициент, 2));
					
				ИначеЕсли НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаВПроцентах Тогда 
					
					НоваяСтрока.СуммаНалоговойЛьготы = 
						Окр(Окр(НоваяСтрока.НалоговаяБаза 
							* НоваяСтрока.НалоговаяСтавка 
							* КоэффициентЛьготы 
							* (НоваяСтрока.ПроцентУменьшения / 100)
							* ДоляВПравеОбщейСобственности
							* ПовышающийКоэффициент, 2));
					
				ИначеЕсли НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.СнижениеНалоговойСтавки Тогда 
					
					НоваяСтрока.СуммаНалоговойЛьготы = 
						Окр(Окр(НоваяСтрока.НалоговаяБаза 
						* (НоваяСтрока.НалоговаяСтавка - НоваяСтрока.ЛьготнаяСтавка)
						* КоэффициентЛьготы
						* ДоляВПравеОбщейСобственности
						* ПовышающийКоэффициент, 2));

				КонецЕсли;
				
				
			КонецЕсли;
			
			НоваяСтрока.СуммаНалогаКУплате = НоваяСтрока.СуммаНалога - НоваяСтрока.СуммаНалоговойЛьготы;
						
			Если ГодовойРасчет И СтрокаРасчета.УплачиваютсяАвансы Тогда
				
				ЗаполнитьЗначенияСвойств(Отбор, НоваяСтрока);
				
				СуммаНалоговогоВычета1Кв = 0;
				НоваяСтрока.СуммаАвансовыхПлатежей1Кв = 0;
				СтрокиРасчетаАвансовыхПлатежей = РасчетНалога1Кв.НайтиСтроки(Отбор);
				Для Каждого СтрокаРасчетаАвансовыхПлатежей Из СтрокиРасчетаАвансовыхПлатежей Цикл
					НоваяСтрока.СуммаАвансовыхПлатежей1Кв = НоваяСтрока.СуммаАвансовыхПлатежей1Кв
						+ СтрокаРасчетаАвансовыхПлатежей.СуммаНалогаКУплате;
					СуммаНалоговогоВычета1Кв = СуммаНалоговогоВычета1Кв + СтрокаРасчетаАвансовыхПлатежей.СуммаНалоговогоВычета;
				КонецЦикла;
				
				СуммаНалоговогоВычета2Кв = 0;
				НоваяСтрока.СуммаАвансовыхПлатежей2Кв = 0;
				СтрокиРасчетаАвансовыхПлатежей = РасчетНалога2Кв.НайтиСтроки(Отбор);
				Для Каждого СтрокаРасчетаАвансовыхПлатежей Из СтрокиРасчетаАвансовыхПлатежей Цикл
					Если РассчитыватьОсвобождениеОтНалога Тогда
						// В 2020 году для "освобожденных" организаций аванс за 2-й квартал не уплачивается, 
						// а налог за год уменьшается на сумму аванса за 2-й квартал.
						// Т.к. расчет за 2-й квартал 2020 года мог быть выполнен по старому алгоритму (без расчета освобождения),
						// то учтем здесь оба варианта: 
						// - Либо СуммаНалогаКУплате за 2-й квартал уменьшена на сумму освобождения (т.е. равна 0),
						//   и тогда СуммаОсвобожденияОтУплатыНалога уже рассчитана и заполнена (новый алгоритм расчета)
						// - Либо СуммаНалогаКУплате за 2-й квартал не учитывает сумму освобождения, но тогда и СуммаОсвобожденияОтУплатыНалога = 0
						//   (старый алгоритм расчета). В этом случае СуммаНалогаКУплате за 2-й квартал - это и есть сумма освобождения.
						НоваяСтрока.СуммаОсвобожденияОтУплатыНалога = НоваяСтрока.СуммаОсвобожденияОтУплатыНалога
							+ СтрокаРасчетаАвансовыхПлатежей.СуммаОсвобожденияОтУплатыНалога + СтрокаРасчетаАвансовыхПлатежей.СуммаНалогаКУплате;
					Иначе	
						НоваяСтрока.СуммаАвансовыхПлатежей2Кв = НоваяСтрока.СуммаАвансовыхПлатежей2Кв
							+ СтрокаРасчетаАвансовыхПлатежей.СуммаНалогаКУплате;
						СуммаНалоговогоВычета2Кв = СуммаНалоговогоВычета2Кв + СтрокаРасчетаАвансовыхПлатежей.СуммаНалоговогоВычета;
					КонецЕсли;
				КонецЦикла;
				
				СуммаНалоговогоВычета3Кв = 0;
				НоваяСтрока.СуммаАвансовыхПлатежей3Кв = 0;
				СтрокиРасчетаАвансовыхПлатежей = РасчетНалога3Кв.НайтиСтроки(Отбор);
				Для Каждого СтрокаРасчетаАвансовыхПлатежей Из СтрокиРасчетаАвансовыхПлатежей Цикл
					НоваяСтрока.СуммаАвансовыхПлатежей3Кв = НоваяСтрока.СуммаАвансовыхПлатежей3Кв
						+ СтрокаРасчетаАвансовыхПлатежей.СуммаНалогаКУплате;
					СуммаНалоговогоВычета3Кв = СуммаНалоговогоВычета3Кв + СтрокаРасчетаАвансовыхПлатежей.СуммаНалоговогоВычета;
				КонецЦикла;
				
				НоваяСтрока.СуммаНалоговогоВычета = СуммаНалоговогоВычета1Кв + СуммаНалоговогоВычета2Кв + СуммаНалоговогоВычета3Кв;
								
				НоваяСтрока.СуммаНалогаКУплате = НоваяСтрока.СуммаНалогаКУплате - НоваяСтрока.СуммаАвансовыхПлатежей1Кв
					- НоваяСтрока.СуммаАвансовыхПлатежей2Кв - НоваяСтрока.СуммаАвансовыхПлатежей3Кв;
				
			КонецЕсли;

			Если РассчитыватьОсвобождениеОтНалога И НЕ СтрокаРасчета.УплачиваютсяАвансы Тогда
				ЗаполнитьЗначенияСвойств(Отбор, НоваяСтрока);
				СтрокиРасчетаНалогаКОсвобождению = РасчетНалогаКОсвобождению.НайтиСтроки(Отбор);
				Для Каждого СтрокаРасчетаНалогаКОсвобождению Из СтрокиРасчетаНалогаКОсвобождению Цикл
					// Если авансы не уплачиваются, то освобождение за 2-й квартал рассчитывается так же, 
					// как аванс за 2-й квартал, если бы он уплачивался.
					// СуммаОсвобожденияОтУплатыНалога уже получена в расчете налога за 2-й квартал.
					НоваяСтрока.СуммаОсвобожденияОтУплатыНалога = НоваяСтрока.СуммаОсвобожденияОтУплатыНалога
						+ СтрокаРасчетаНалогаКОсвобождению.СуммаОсвобожденияОтУплатыНалога;
				КонецЦикла;
			КонецЕсли;	
			
			Если ЭтоПериодОсвобождения Тогда
				// Во 2-м квартале 2020 года организация освобождается от налога в размере полной суммы аванса к уплате. 
				НоваяСтрока.СуммаОсвобожденияОтУплатыНалога = НоваяСтрока.СуммаНалогаКУплате;
			КонецЕсли;
			
			// В 2020 году для некоторых организаций применяется разовая льгота в виде освобождения от налога 
			// за период владения объктом налогообложения в течение 2-го квартала 2020 года.
			// Для таких "освобожденных" организаций СуммаОсвобожденияОтУплатыНалога будет ненулевой 
			// в расчете за 2-й квартал 2020 года (если уплачиваются авансы) и в годовом расчете за 2020 год.
			// В всех остальных случаях СуммаОсвобожденияОтУплатыНалога = 0 и не влияет на расчет.
			// Уменьшим СуммаНалогаКУплате на сумму такого освобождения.
			НоваяСтрока.СуммаНалогаКУплате = НоваяСтрока.СуммаНалогаКУплате - НоваяСтрока.СуммаОсвобожденияОтУплатыНалога;
			
			Если НЕ ГодовойРасчет И СтрокаРасчета.УплачиваютсяАвансы Тогда
				НоваяСтрока["СуммаАвансовыхПлатежей" + Формат(ПериодРасчета, "ДФ='q''Кв'''")] = НоваяСтрока.СуммаНалогаКУплате;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ТаблицаРасчетТранспортногоНалога.ЗаполнитьЗначения(ДатаКонцаПериодаОтчета, "ПериодРасчета");
	ТаблицаРасчетТранспортногоНалога.ЗаполнитьЗначения(Организация, "Организация");
	
	// Учет платы в систему "Платон".
	// Вычет действует в 2016 - 2018 годах.
	Если НетТСЗарегистрированныхВРеестреСистемыПлатон ИЛИ Год(ПериодРасчета) < 2016 ИЛИ Год(ПериодРасчета) > 2018 Тогда
		Возврат Новый Структура("Налог, Платон", ТаблицаРасчетТранспортногоНалога, Неопределено);
	КонецЕсли;
	
	РасходыПлатон = ПолучитьРасходыНаПлатон(
						Организация, 
						ПериодРасчета, 
						ТаблицаРасчетТранспортногоНалога);
						
	РасчетИмущественныхНалогов.УчестьРасходыНаПлатонВРасчетеТранспортногоНалога(РасходыПлатон, ТаблицаРасчетТранспортногоНалога);
	
	СтрокиРасчетаНалога = ТаблицаРасчетТранспортногоНалога.НайтиСтроки(
		Новый Структура("ЗарегистрированоВРеестреСистемыПлатон", Истина));
				
	Для Каждого СтрокаРасчета Из СтрокиРасчетаНалога Цикл
		
		Если ГодовойРасчет Тогда
			СтрокаРасчета.СуммаНалогаКУплате = СтрокаРасчета.СуммаНалогаКУплате - СтрокаРасчета.СуммаНалоговогоВычета;
		Иначе
			СтрокаРасчета["СуммаАвансовыхПлатежей" + Формат(ПериодРасчета, "ДФ='q''Кв'''")] = 0;
			СтрокаРасчета.СуммаНалогаКУплате = 0;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Новый Структура("Налог, Платон", ТаблицаРасчетТранспортногоНалога, РасходыПлатон);

КонецФункции

Функция ПолучитьРасходыНаПлатон(Организация, ПериодРасчета, ТаблицаРасчетТранспортногоНалога) Экспорт

	РасходыПлатон = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("СледующийМесяц", КонецКвартала(ПериодРасчета) + 1);
	
	АналитикаРасчетов = Новый СписокЗначений;
	АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);
	
	Запрос.УстановитьПараметр("АналитикаРасчетов", АналитикаРасчетов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходыНаПлатонОстатки.ОсновноеСредство КАК ОсновноеСредство,
	|	РасходыНаПлатонОстатки.СчетУчета КАК Счет,
	|	РасходыНаПлатонОстатки.Контрагент КАК Контрагент,
	|	РасходыНаПлатонОстатки.ДоговорКонтрагента КАК Договор,
	|	РасходыНаПлатонОстатки.ДокументРасчетовСКонтрагентом КАК ДокументРасчетовСКонтрагентом,
	|	РасходыНаПлатонОстатки.Подразделение КАК Подразделение,
	|	РасходыНаПлатонОстатки.СуммаОстаток КАК Сумма
	|ПОМЕСТИТЬ РасходыНаПлатон
	|ИЗ
	|	РегистрНакопления.РасходыНаПлатон.Остатки(&СледующийМесяц, Организация = &Организация) КАК РасходыНаПлатонОстатки
	|ГДЕ
	|	РасходыНаПлатонОстатки.СуммаОстаток <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	Договор,
	|	ДокументРасчетовСКонтрагентом
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.Подразделение, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК Подразделение,
	|	ХозрасчетныйОстатки.Субконто1 КАК Контрагент,
	|	ХозрасчетныйОстатки.Субконто2 КАК Договор,
	|	ХозрасчетныйОстатки.Субконто3 КАК ДокументРасчетовСКонтрагентом,
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК Сумма
	|ПОМЕСТИТЬ Задолженность
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&СледующийМесяц,
	|			Счет В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					РасходыНаПлатон.Счет
	|				ИЗ
	|					РасходыНаПлатон),
	|			&АналитикаРасчетов,
	|			Организация = &Организация
	|				И (Субконто1, Субконто2, Субконто3) В
	|					(ВЫБРАТЬ
	|						РасходыНаПлатон.Контрагент,
	|						РасходыНаПлатон.Договор,
	|						РасходыНаПлатон.ДокументРасчетовСКонтрагентом
	|					ИЗ
	|						РасходыНаПлатон)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	Договор,
	|	ДокументРасчетовСКонтрагентом
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходыНаПлатон.ОсновноеСредство,
	|	РасходыНаПлатон.Счет КАК СчетУчета,
	|	РасходыНаПлатон.Контрагент,
	|	РасходыНаПлатон.Договор КАК ДоговорКонтрагента,
	|	РасходыНаПлатон.ДокументРасчетовСКонтрагентом КАК ДокументРасчетовСКонтрагентом,
	|	РасходыНаПлатон.Подразделение КАК Подразделение,
	|	РасходыНаПлатон.Сумма - ЕСТЬNULL(Задолженность.Сумма, 0) КАК СуммаНУДт,
	|	РасходыНаПлатон.Сумма - ЕСТЬNULL(Задолженность.Сумма, 0) КАК СуммаНУКт
	|ИЗ
	|	РасходыНаПлатон КАК РасходыНаПлатон
	|		ЛЕВОЕ СОЕДИНЕНИЕ Задолженность КАК Задолженность
	|		ПО РасходыНаПлатон.Счет = Задолженность.Счет
	|			И РасходыНаПлатон.Подразделение = Задолженность.Подразделение
	|			И РасходыНаПлатон.Контрагент = Задолженность.Контрагент
	|			И РасходыНаПлатон.Договор = Задолженность.Договор
	|			И РасходыНаПлатон.ДокументРасчетовСКонтрагентом = Задолженность.ДокументРасчетовСКонтрагентом
	|ГДЕ
	|	РасходыНаПлатон.Сумма - ЕСТЬNULL(Задолженность.Сумма, 0) > 0";
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		РасходыПлатон = Результат.Выгрузить();
	КонецЕсли;
	
	Возврат РасходыПлатон;
	
КонецФункции

Процедура ДополнитьРасчетТранспортногоНалога(РасчетТранспортногоНалога, Знач ДатаКонцаПериодаОтчета) Экспорт
	
	РасчетТранспортногоНалога.Колонки.Добавить("КодПоОКТМОРегиона", 
		ОбщегоНазначения.ОписаниеТипаСтрока(8));
		
	РасчетТранспортногоНалога.Колонки.Добавить("КатегорияТС", 
		Новый ОписаниеТипов("ПеречислениеСсылка.КатегорииТранспортныхСредств"));
		
	РасчетТранспортногоНалога.Колонки.Добавить("НалоговаяСтавка", 
		ОбщегоНазначения.ОписаниеТипаЧисло(11, 2));
		
	РасчетТранспортногоНалога.Колонки.Добавить("НалоговаяСтавкаЗависитОтГодаВыпускаТС", 
		Новый ОписаниеТипов("Булево"));
		
	РасчетТранспортногоНалога.Колонки.Добавить("ОтсутствуетСтавка", Новый ОписаниеТипов("Булево"));
		
	Макет = РегистрыСведений.РегистрацияТранспортныхСредств.ПолучитьМакет("КодыВидовИКатегорииТС");
	КодыВидовИКатегорииТС = ОбщегоНазначения.ПрочитатьXMLВТаблицу(Макет.ПолучитьТекст()).Данные;
	
	Для Каждого СтрокаРасчета Из РасчетТранспортногоНалога Цикл
		
		КодПоОКТМО = Лев(СтрокаРасчета.КодПоОКТМО, 3);

		Если НЕ (КодПоОКТМО = "118" ИЛИ КодПоОКТМО = "718" ИЛИ КодПоОКТМО = "719") Тогда
			СтрокаРасчета.КодПоОКТМОРегиона = Лев(КодПоОКТМО, 2) + "000000";
		Иначе
			СтрокаРасчета.КодПоОКТМОРегиона = КодПоОКТМО + "00000";
		КонецЕсли;
		
		НайденнаяСтрока = КодыВидовИКатегорииТС.Найти(СтрокаРасчета.КодВидаТранспортногоСредства, "КодВида");
		Если НайденнаяСтрока <> Неопределено Тогда
			СтрокаРасчета.КатегорияТС = Перечисления.КатегорииТранспортныхСредств[НайденнаяСтрока.Категория];
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаРасчета.ДатаВыпуска) Тогда
			СтрокаРасчета.КоличествоЛетПрошедшихСГодаВыпускаТС = 
				Год(ДатаКонцаПериодаОтчета) - Год(СтрокаРасчета.ДатаВыпуска);
		КонецЕсли;
		
	КонецЦикла;
	
	КолонкиДляОпределенияСтавок = "КодПоОКТМОРегиона,КатегорияТС,НалоговаяБаза,КоличествоЛетПрошедшихСГодаВыпускаТС";
	ТаблицаДляОпределенияСтавок = РасчетТранспортногоНалога.Скопировать(,КолонкиДляОпределенияСтавок);
	ТаблицаДляОпределенияСтавок.Свернуть(КолонкиДляОпределенияСтавок);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаДляОпределенияСтавок", ТаблицаДляОпределенияСтавок);
	Запрос.УстановитьПараметр("Период", ДатаКонцаПериодаОтчета);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДляОпределенияСтавок.КодПоОКТМОРегиона КАК КодПоОКТМОРегиона,
	|	ТаблицаДляОпределенияСтавок.КатегорияТС КАК КатегорияТС,
	|	ТаблицаДляОпределенияСтавок.НалоговаяБаза КАК НалоговаяБаза,
	|	ТаблицаДляОпределенияСтавок.КоличествоЛетПрошедшихСГодаВыпускаТС КАК КоличествоЛетПрошедшихСГодаВыпускаТС
	|ПОМЕСТИТЬ ВТДляОпределенияСтавок
	|ИЗ
	|	&ТаблицаДляОпределенияСтавок КАК ТаблицаДляОпределенияСтавок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтавкиТранспортногоНалога.Период КАК Период,
	|	СтавкиТранспортногоНалога.ОКТМО КАК ОКТМО,
	|	СтавкиТранспортногоНалога.НаименованиеОбъектаНалогообложения КАК НаименованиеОбъектаНалогообложения,
	|	СтавкиТранспортногоНалога.МинимальноеЗначениеМощности КАК МинимальноеЗначениеМощности,
	|	СтавкиТранспортногоНалога.МаксимальноеЗначениеМощности КАК МаксимальноеЗначениеМощности,
	|	СтавкиТранспортногоНалога.МинимальноеКоличествоЛетСГодаВыпускаТС КАК МинимальноеКоличествоЛетСГодаВыпускаТС,
	|	СтавкиТранспортногоНалога.МаксимальноеКоличествоЛетСГодаВыпускаТС КАК МаксимальноеКоличествоЛетСГодаВыпускаТС,
	|	СтавкиТранспортногоНалога.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВТДляОпределенияСтавок.НалоговаяБаза КАК НалоговаяБаза,
	|	ВТДляОпределенияСтавок.КоличествоЛетПрошедшихСГодаВыпускаТС КАК КоличествоЛетПрошедшихСГодаВыпускаТС
	|ПОМЕСТИТЬ ВТВсеПодходящиеЗаписи
	|ИЗ
	|	ВТДляОпределенияСтавок КАК ВТДляОпределенияСтавок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиТранспортногоНалога КАК СтавкиТранспортногоНалога
	|		ПО ВТДляОпределенияСтавок.КодПоОКТМОРегиона = СтавкиТранспортногоНалога.ОКТМО
	|			И ВТДляОпределенияСтавок.КатегорияТС = СтавкиТранспортногоНалога.НаименованиеОбъектаНалогообложения
	|			И ВТДляОпределенияСтавок.НалоговаяБаза >= СтавкиТранспортногоНалога.МинимальноеЗначениеМощности
	|			И (СтавкиТранспортногоНалога.МаксимальноеЗначениеМощности = 0
	|				ИЛИ ВТДляОпределенияСтавок.НалоговаяБаза <= СтавкиТранспортногоНалога.МаксимальноеЗначениеМощности)
	|			И (СтавкиТранспортногоНалога.МинимальноеКоличествоЛетСГодаВыпускаТС = 0
	|				ИЛИ ВТДляОпределенияСтавок.КоличествоЛетПрошедшихСГодаВыпускаТС > СтавкиТранспортногоНалога.МинимальноеКоличествоЛетСГодаВыпускаТС)
	|			И (СтавкиТранспортногоНалога.МаксимальноеКоличествоЛетСГодаВыпускаТС = 0
	|				ИЛИ ВТДляОпределенияСтавок.КоличествоЛетПрошедшихСГодаВыпускаТС <= СтавкиТранспортногоНалога.МаксимальноеКоличествоЛетСГодаВыпускаТС)
	|ГДЕ
	|	СтавкиТранспортногоНалога.Период < &Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВТВсеПодходящиеЗаписи.Период) КАК Период,
	|	ВТВсеПодходящиеЗаписи.ОКТМО КАК ОКТМО,
	|	ВТВсеПодходящиеЗаписи.НаименованиеОбъектаНалогообложения КАК НаименованиеОбъектаНалогообложения,
	|	ВТВсеПодходящиеЗаписи.НалоговаяБаза КАК НалоговаяБаза,
	|	ВТВсеПодходящиеЗаписи.КоличествоЛетПрошедшихСГодаВыпускаТС КАК КоличествоЛетПрошедшихСГодаВыпускаТС
	|ПОМЕСТИТЬ ВТПоследниеСтавки
	|ИЗ
	|	ВТВсеПодходящиеЗаписи КАК ВТВсеПодходящиеЗаписи
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТВсеПодходящиеЗаписи.КоличествоЛетПрошедшихСГодаВыпускаТС,
	|	ВТВсеПодходящиеЗаписи.НалоговаяБаза,
	|	ВТВсеПодходящиеЗаписи.НаименованиеОбъектаНалогообложения,
	|	ВТВсеПодходящиеЗаписи.ОКТМО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВсеПодходящиеЗаписи.ОКТМО КАК КодПоОКТМОРегиона,
	|	ВТВсеПодходящиеЗаписи.НаименованиеОбъектаНалогообложения КАК КатегорияТС,
	|	ВТВсеПодходящиеЗаписи.НалоговаяБаза КАК НалоговаяБаза,
	|	ВТВсеПодходящиеЗаписи.КоличествоЛетПрошедшихСГодаВыпускаТС КАК КоличествоЛетПрошедшихСГодаВыпускаТС,
	|	ВТВсеПодходящиеЗаписи.МинимальноеКоличествоЛетСГодаВыпускаТС <> 0
	|		ИЛИ ВТВсеПодходящиеЗаписи.МаксимальноеКоличествоЛетСГодаВыпускаТС <> 0 КАК НалоговаяСтавкаЗависитОтГодаВыпускаТС,
	|	ВТВсеПодходящиеЗаписи.НалоговаяСтавка КАК НалоговаяСтавка
	|ИЗ
	|	ВТВсеПодходящиеЗаписи КАК ВТВсеПодходящиеЗаписи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПоследниеСтавки КАК ВТПоследниеСтавки
	|		ПО ВТВсеПодходящиеЗаписи.Период = ВТПоследниеСтавки.Период 
	|			И ВТВсеПодходящиеЗаписи.ОКТМО = ВТПоследниеСтавки.ОКТМО
	|			И ВТВсеПодходящиеЗаписи.НаименованиеОбъектаНалогообложения = ВТПоследниеСтавки.НаименованиеОбъектаНалогообложения
	|			И ВТВсеПодходящиеЗаписи.НалоговаяБаза = ВТПоследниеСтавки.НалоговаяБаза
	|			И ВТВсеПодходящиеЗаписи.КоличествоЛетПрошедшихСГодаВыпускаТС = ВТПоследниеСтавки.КоличествоЛетПрошедшихСГодаВыпускаТС";
	
	ТаблицаСтавок = Запрос.Выполнить().Выгрузить();
	Отбор = Новый Структура(КолонкиДляОпределенияСтавок);
	Для Каждого СтрокаРасчета Из РасчетТранспортногоНалога Цикл
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаРасчета);
		НайденныеСтроки = ТаблицаСтавок.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(СтрокаРасчета, НайденныеСтроки[0], , КолонкиДляОпределенияСтавок);
		Иначе
			СтрокаРасчета.ОтсутствуетСтавка = Истина;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ПрочиеЭкспортныеПроцедуры

Процедура УточнитьПараметрыРегистрацииОрганизацииВФНС(Параметры, Организация, Период) Экспорт

	ОсновнойНалоговыйОрган = Справочники.Организации.РегистрацияВНалоговомОрганеНаДату(Организация, Период);
	
	Параметры.Вставить("ОсновнойНалоговыйОрган", ОсновнойНалоговыйОрган);
	Параметры.Вставить("КодПоОКТМО",ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОсновнойНалоговыйОрган, "КодПоОКТМО", Истина));
	
КонецПроцедуры

Процедура УточнитьПараметрыОсвобожденияОтУплатыНалогов(Параметры, ТаблицаРеквизиты) Экспорт
	
	ПараметрыРасчета = ПодготовитьПараметрыРасчетНалога(ТаблицаРеквизиты);
	Реквизиты = ПараметрыРасчета.Реквизиты[0];
	
	Если Не НалоговыйУчет.ДеятельностьОтнесенаКПострадавшимОтКоронавируса(Реквизиты.Организация) Тогда
		Возврат;
	КонецЕсли;
		
	Если Параметры = Неопределено Тогда
		Параметры = Новый Структура;
	КонецЕсли;	
			
	ПериодОсвобожденияОтНалогов = НалоговыйУчет.ПериодОсвобожденияОтНалоговПострадавшимОтКоронавируса();
		
	Параметры.Вставить("ПрименяетсяОсвобождениеОтУплатыНалогаВНалоговомПериоде", 
		Год(ПериодОсвобожденияОтНалогов.Начало) = Год(Реквизиты.Период));
		
	Параметры.Вставить("ПрименяетсяОсвобождениеОтУплатыНалогаВТекущемПериоде", 
	    ПериодОсвобожденияОтНалогов.Начало <= Реквизиты.Период 
		И Реквизиты.Период <= ПериодОсвобожденияОтНалогов.Конец);
	
	Параметры.Вставить("ГодовойРасчет", Месяц(Реквизиты.Период) = 12);
	
КонецПроцедуры

Функция ПодготовитьТаблицыРасчетНалога(ТаблицаРеквизиты, Отказ, ДополнительныеПараметры) Экспорт
	
	СтруктураТаблиц = Новый Структура();
	СтруктураТаблиц.Вставить("ТаблицаПроводок", Неопределено);
	СтруктураТаблиц.Вставить("ТаблицаПроводокПлатон", Неопределено);
	СтруктураТаблиц.Вставить("ТаблицаДвиженийПлатон", Неопределено);
	СтруктураТаблиц.Вставить("ТаблицаСправкиРасчета", Неопределено);
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат СтруктураТаблиц;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыРасчетНалога(ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	ТаблицаПроводок  = ПустаяТаблицаПроводок();
	ТаблицыПлатон = ПустыеТаблицыДвиженийПлатон();
	ТаблицаСправкиРасчета = УправлениеВнеоборотнымиАктивами.ПустаяСправкаРасчет(Реквизиты.ИмяРегистраРасчетНалогов);
	
	Ошибки = Новый Массив;
	РассчитатьНалог(Реквизиты, ТаблицаПроводок, ТаблицаСправкиРасчета, ТаблицыПлатон, ДополнительныеПараметры, Ошибки, Отказ);
		
	Если Отказ Тогда
		
		СтруктураТаблиц.Вставить("Ошибки", Ошибки);
		
	Иначе
			
		СтруктураТаблиц.Вставить("ТаблицаПроводок", ТаблицаПроводок);
		СтруктураТаблиц.Вставить("ТаблицаПроводокПлатон", ТаблицыПлатон.Хозрасчетный);
		СтруктураТаблиц.Вставить("ТаблицаДвиженийПлатон", ТаблицыПлатон.РасходыНаПлатон);
		СтруктураТаблиц.Вставить("ТаблицаСправкиРасчета", ТаблицаСправкиРасчета);
		
	КонецЕсли;
	
	Возврат СтруктураТаблиц;
	
КонецФункции

Функция СпособыОтраженияРасходовПоНалогам(Организация, Объекты, ВидНалога, Период) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Объекты", Объекты);
	Запрос.УстановитьПараметр("ВидНалога", ВидНалога);
	Запрос.УстановитьПараметр("Период", Период);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ОсновныеСредства.Ссылка КАК ОсновноеСредство
	|ПОМЕСТИТЬ ВТ_ОсновныеСредства
	|ИЗ
	|	Справочник.ОсновныеСредства КАК ОсновныеСредства
	|ГДЕ
	|	ОсновныеСредства.Ссылка В(&Объекты)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ПодразделениеЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.СчетЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто1,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто2,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто3,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ОтражениеВУСН,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Период
	|ПОМЕСТИТЬ ВТ_ПоВидамНалога
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоНалогам.СрезПоследних(
	|			&Период,
	|			ВидНалога = &ВидНалога
	|				И Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				И ОсновноеСредство = ЗНАЧЕНИЕ(Справочник.ОсновныеСредства.ПустаяСсылка)) КАК СпособыОтраженияРасходовПоНалогамСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ПодразделениеЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.СчетЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто1,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто2,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто3,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ОтражениеВУСН,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Период
	|ПОМЕСТИТЬ ВТ_ПоОрганизациям
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоНалогам.СрезПоследних(
	|			&Период,
	|			ВидНалога = &ВидНалога
	|				И Организация = &Организация
	|				И ОсновноеСредство = ЗНАЧЕНИЕ(Справочник.ОсновныеСредства.ПустаяСсылка)) КАК СпособыОтраженияРасходовПоНалогамСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ПодразделениеЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.СчетЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто1,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто2,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто3,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ОтражениеВУСН,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Период
	|ПОМЕСТИТЬ ВТ_ПоОсновнымСредствам
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоНалогам.СрезПоследних(
	|			&Период,
	|			ВидНалога = &ВидНалога
	|				И Организация = &Организация
	|				И ОсновноеСредство В (&Объекты)) КАК СпособыОтраженияРасходовПоНалогамСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОсновныеСредства.ОсновноеСредство,
	|	ЕСТЬNULL(ВТ_ПоОсновнымСредствам.СчетЗатрат, ЕСТЬNULL(ВТ_ПоОрганизациям.СчетЗатрат, ВТ_ПоВидамНалога.СчетЗатрат)) КАК СчетДт,
	|	ЕСТЬNULL(ВТ_ПоОсновнымСредствам.ПодразделениеЗатрат, ЕСТЬNULL(ВТ_ПоОрганизациям.ПодразделениеЗатрат, ВТ_ПоВидамНалога.ПодразделениеЗатрат)) КАК Подразделение,
	|	ЕСТЬNULL(ВТ_ПоОсновнымСредствам.Субконто1, ЕСТЬNULL(ВТ_ПоОрганизациям.Субконто1, ВТ_ПоВидамНалога.Субконто1)) КАК Субконто1,
	|	ЕСТЬNULL(ВТ_ПоОсновнымСредствам.Субконто2, ЕСТЬNULL(ВТ_ПоОрганизациям.Субконто2, ВТ_ПоВидамНалога.Субконто2)) КАК Субконто2,
	|	ЕСТЬNULL(ВТ_ПоОсновнымСредствам.Субконто3, ЕСТЬNULL(ВТ_ПоОрганизациям.Субконто3, ВТ_ПоВидамНалога.Субконто3)) КАК Субконто3,
	|	ЕСТЬNULL(ВТ_ПоОсновнымСредствам.ОтражениеВУСН, ЕСТЬNULL(ВТ_ПоОрганизациям.ОтражениеВУСН, ВТ_ПоВидамНалога.ОтражениеВУСН)) КАК ОтражениеВУСН,
	|	ЕСТЬNULL(ВТ_ПоОсновнымСредствам.Период, ЕСТЬNULL(ВТ_ПоОрганизациям.Период, ВТ_ПоВидамНалога.Период)) КАК Период,
	|	ВЫБОР
	|		КОГДА ВТ_ПоОсновнымСредствам.ОтражениеВУСН ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_ПоОрганизациям.ОтражениеВУСН ЕСТЬ NULL 
	|						ТОГДА ""ПоВидамНалога""
	|					ИНАЧЕ ""ПоОрганизациям""
	|				КОНЕЦ
	|		ИНАЧЕ ""ПоОсновнымСредствам""
	|	КОНЕЦ КАК ПорядокОпределенияСпособаОтражения
	|ИЗ
	|	ВТ_ОсновныеСредства КАК ВТ_ОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоОсновнымСредствам КАК ВТ_ПоОсновнымСредствам
	|		ПО ВТ_ОсновныеСредства.ОсновноеСредство = ВТ_ПоОсновнымСредствам.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоОрганизациям КАК ВТ_ПоОрганизациям
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоВидамНалога КАК ВТ_ПоВидамНалога
	|		ПО (ИСТИНА)
	|ГДЕ
	|	НЕ ЕСТЬNULL(ВТ_ПоОсновнымСредствам.СчетЗатрат, ЕСТЬNULL(ВТ_ПоОрганизациям.СчетЗатрат, ВТ_ПоВидамНалога.СчетЗатрат)) ЕСТЬ NULL ";
	
	Результат = Запрос.Выполнить();
	
	СпособыОтраженияРасходовПоНалогу = Новый Соответствие;
	
	Если НЕ Результат.Пустой() Тогда
		
		ТаблицаСпособовОтражения = Результат.Выгрузить();
		
		Для Каждого СтрокаТаблицы Из ТаблицаСпособовОтражения Цикл
			
			СпособОтраженияРасходовПоНалогу = Новый Структура(
				"СчетДт,
				|Подразделение,
				|Субконто1,
				|Субконто2,
				|Субконто3,
				|ОтражениеВУСН,
				|Период,
				|ПорядокОпределенияСпособаОтражения");
			
			ЗаполнитьЗначенияСвойств(СпособОтраженияРасходовПоНалогу, СтрокаТаблицы);
			СпособыОтраженияРасходовПоНалогу.Вставить(СтрокаТаблицы.ОсновноеСредство, СпособОтраженияРасходовПоНалогу);
			
		КонецЦикла;
				
	КонецЕсли;
	
	Возврат СпособыОтраженияРасходовПоНалогу;
	
КонецФункции

Процедура СформироватьДвиженияРасчетНалога(ТаблицыНачислениеНалога, ТаблицаРеквизитов, Движения, Отказ) Экспорт

	Если Не ЗначениеЗаполнено(ТаблицаРеквизитов) Тогда
	    Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыДвиженийРасчетНалога(
		ТаблицыНачислениеНалога.ТаблицаПроводок,
		ТаблицыНачислениеНалога.ТаблицаПроводокПлатон,
		ТаблицыНачислениеНалога.ТаблицаДвиженийПлатон,
		ТаблицаРеквизитов);
	Реквизиты = Параметры.Реквизиты[0];
	
	РасчетИмущественныхНалогов.ДополнитьПараметрыДвиженийСправкаРасчет(Параметры, Реквизиты, ТаблицыНачислениеНалога.ТаблицаСправкиРасчета);
	
	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаПБУ18 = УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);
	
	// проводка по начислению налога
	Для каждого СтрокаТаблицы Из Параметры.Проводки Цикл
	
		Если СтрокаТаблицы.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Проводка = Движения.Хозрасчетный.Добавить();
		ЗаполнитьЗначенияСвойств(Проводка, СтрокаТаблицы);
		
		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);
		Для Ном = 1 По СвойстваСчетаДт.КоличествоСубконто Цикл
			
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт,
				СвойстваСчетаДт["ВидСубконто" + Ном], СтрокаТаблицы["Субконто" + Ном]);	
			
		КонецЦикла;
			
		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = СтрокаТаблицы.Подразделение;
		КонецЕсли;
		
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт,
			"ВидыПлатежейВГосБюджет", СтрокаТаблицы.ВидыПлатежейВГосБюджет);	
			
		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);	
		Для Ном = 1 По СвойстваСчетаКт.КоличествоСубконто Цикл
			Если СвойстваСчетаКт["ВидСубконто" + Ном].ИмяПредопределенныхДанных = "РегистрацияВНалоговомОргане" Тогда
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт,
					"РегистрацияВНалоговомОргане", СтрокаТаблицы.РегистрацияВНалоговомОргане);
			КонецЕсли;
		КонецЦикла;
	
		Если ОтражатьВНалоговомУчете Тогда
			
			ЭтоНеПринимаемыйРасходНУ = НалоговыйУчет.ЭтоНепринимаемыйРасходНУ(СтрокаТаблицы.Субконто1,
				СтрокаТаблицы.Субконто2, СтрокаТаблицы.Субконто3);
				
			Если СвойстваСчетаДт.НалоговыйУчет Тогда
				
				Проводка.СуммаНУДт = ?(ЭтоНеПринимаемыйРасходНУ, 0, СтрокаТаблицы.Сумма);
				
				Если ПоддержкаПБУ18 Тогда
					Проводка.СуммаПРДт = ?(ЭтоНеПринимаемыйРасходНУ, СтрокаТаблицы.Сумма, 0);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого СтрокаТаблицы Из Параметры.ПроводкиПлатон Цикл
	
		Если НЕ ОтражатьВНалоговомУчете Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаТаблицы.СуммаНУДт = 0 И СтрокаТаблицы.СуммаНУКт = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Проводка = Движения.Хозрасчетный.Добавить();
		ЗаполнитьЗначенияСвойств(Проводка, СтрокаТаблицы, , "СуммаНУДт, СуммаНУКт");
		
		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);
		Для Ном = 1 По СвойстваСчетаДт.КоличествоСубконто Цикл
			
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт,
				СвойстваСчетаДт["ВидСубконто" + Ном], СтрокаТаблицы["Субконто" + Ном]);	
			
		КонецЦикла;
			
		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = СтрокаТаблицы.Подразделение;
		КонецЕсли;
		
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт,
			"РасходыБудущихПериодов", СтрокаТаблицы.РасходыБудущихПериодов);
			
		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);
		
		Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеКт = СтрокаТаблицы.Подразделение;
		КонецЕсли;
		
		ЭтоНеПринимаемыйРасходНУ = НалоговыйУчет.ЭтоНепринимаемыйРасходНУ(СтрокаТаблицы.Субконто1,
			СтрокаТаблицы.Субконто2, СтрокаТаблицы.Субконто3);
			
		Если СвойстваСчетаДт.НалоговыйУчет Тогда
			
			Проводка.СуммаНУДт = ?(ЭтоНеПринимаемыйРасходНУ, 0, СтрокаТаблицы.СуммаНУДт);
			
			Если ПоддержкаПБУ18 Тогда
				Проводка.СуммаПРДт = ?(ЭтоНеПринимаемыйРасходНУ, СтрокаТаблицы.СуммаНУКт, СтрокаТаблицы.СуммаНУКт - СтрокаТаблицы.СуммаНУДт);
				Проводка.СуммаВРДт =  - СтрокаТаблицы.СуммаНУКт;
			КонецЕсли;
			
		КонецЕсли;
		
		Если СвойстваСчетаКт.НалоговыйУчет Тогда
			
			Проводка.СуммаНУКт = СтрокаТаблицы.СуммаНУКт;
			
			Если ПоддержкаПБУ18 Тогда
				Проводка.СуммаВРКт =  - СтрокаТаблицы.СуммаНУКт;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.Хозрасчетный.Записывать = Истина;
	
	Для Каждого СтрокаРасхода Из Параметры.РасходыНаПлатон Цикл
		
		Если СтрокаРасхода.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Движение = Движения.РасходыНаПлатон.ДобавитьРасход();
		ЗаполнитьЗначенияСвойств(Движение, СтрокаРасхода);
		
	КонецЦикла;
	
	Движения.РасходыНаПлатон.Записывать = Истина;
	
	// данные для справки-расчета
	ЗакрытиеМесяца.ЗаписьВоВспомогательныеРегистрыСведений(Движения, Параметры.СправкаРасчет, Параметры.Реквизиты, Реквизиты.ИмяРегистраРасчетНалогов);
	
КонецПроцедуры

Функция ОрганизацииУплачивающиеАвансы(Организация, Период, Налог, ОднаОрганизация = Истина) Экспорт
	
	Если ОднаОрганизация Тогда
		СписокОрганизаций = Организация;
	Иначе
		СписокОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсяОрганизация(Организация);
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	РасчетИмущественныхНалогов.СоздатьНалоговыеОрганыСУстановленнойУплатойАвансов(
		МенеджерВременныхТаблиц, СписокОрганизаций, Период, Налог);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	Запрос.УстановитьПараметр("КонецКвартала", КонецКвартала(Период));
	Запрос.УстановитьПараметр("КонецПрошлогоКвартала", НачалоКвартала(Период) - 1);
	Запрос.УстановитьПараметр("НачалоКвартала", НачалоКвартала(Период));
	Запрос.УстановитьПараметр("КонецПрошлогоГода", НачалоГода(Период) - 1);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(Период));
	
	Если Налог = "НалогНаИмущество" Тогда
	
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НалоговыйОрган КАК НалоговыйОрган,
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация КАК Организация
		|ПОМЕСТИТЬ ВТ_НалоговыеОрганы
		|ИЗ
		|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(
		|			&КонецПрошлогоГода,
		|			Организация В (&СписокОрганизаций)
		|				И ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НалоговыйОрган,
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация
		|ИЗ
		|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
		|ГДЕ
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация В(&СписокОрганизаций)
		|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
		|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период МЕЖДУ &НачалоГода И &КонецКвартала
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Организации.РегистрацияВНалоговомОргане,
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка В(&СписокОрганизаций)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НалоговыйОрган,
		|	Организация";
		
	ИначеЕсли Налог = "ТранспортныйНалог" Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегистрацияТранспортныхСредств.НалоговыйОрган КАК НалоговыйОрган,
		|	РегистрацияТранспортныхСредств.Организация КАК Организация
		|ПОМЕСТИТЬ ВТ_НалоговыеОрганы
		|ИЗ
		|	РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(
		|			&КонецПрошлогоКвартала,
		|			Организация В (&СписокОрганизаций)
		|				И ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
		|				И ВключатьВНалоговуюБазу) КАК РегистрацияТранспортныхСредств
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РегистрацияТранспортныхСредств.НалоговыйОрган,
		|	РегистрацияТранспортныхСредств.Организация
		|ИЗ
		|	РегистрСведений.РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
		|ГДЕ
		|	РегистрацияТранспортныхСредств.Организация В(&СписокОрганизаций)
		|	И РегистрацияТранспортныхСредств.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
		|	И РегистрацияТранспортныхСредств.Период МЕЖДУ &НачалоКвартала И &КонецКвартала
		|	И РегистрацияТранспортныхСредств.ВключатьВНалоговуюБазу
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Организации.РегистрацияВНалоговомОргане,
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка В(&СписокОрганизаций)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НалоговыйОрган,
		|	Организация";		
		
	ИначеЕсли Налог = "ЗемельныйНалог" Тогда	
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РегистрацияЗемельныхУчастков.НалоговыйОрган КАК НалоговыйОрган,
		|	РегистрацияЗемельныхУчастков.Организация КАК Организация
		|ПОМЕСТИТЬ ВТ_НалоговыеОрганы
		|ИЗ
		|	РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(
		|			&КонецПрошлогоКвартала,
		|			Организация В (&СписокОрганизаций)
		|				И ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
		|				И ВключатьВНалоговуюБазу) КАК РегистрацияЗемельныхУчастков
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РегистрацияЗемельныхУчастков.НалоговыйОрган,
		|	РегистрацияЗемельныхУчастков.Организация
		|ИЗ
		|	РегистрСведений.РегистрацияЗемельныхУчастков КАК РегистрацияЗемельныхУчастков
		|ГДЕ
		|	РегистрацияЗемельныхУчастков.Организация В(&СписокОрганизаций)
		|	И РегистрацияЗемельныхУчастков.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
		|	И РегистрацияЗемельныхУчастков.Период МЕЖДУ &НачалоКвартала И &КонецКвартала
		|	И РегистрацияЗемельныхУчастков.ВключатьВНалоговуюБазу
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Организации.РегистрацияВНалоговомОргане,
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка В(&СписокОрганизаций)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НалоговыйОрган,
		|	Организация";
		
	Иначе	
		
		Возврат Новый Массив;
		
	КонецЕсли;	
	
	Запрос.Выполнить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_НалоговыеОрганы.Организация
	|ИЗ
	|	ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов КАК ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НалоговыеОрганы КАК ВТ_НалоговыеОрганы
	|		ПО ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов.НалоговыйОрган = ВТ_НалоговыеОрганы.НалоговыйОрган
	|			И ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов.Организация = ВТ_НалоговыеОрганы.Организация";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Организация");
	
КонецФункции

#КонецОбласти

#Область Прочее

Функция ПустыеТаблицыДвиженийПлатон()
	
	ТаблицыДвиженийПлатон = Новый Структура("Хозрасчетный, РасходыНаПлатон");
	
	ТаблицаПроводок = Новый ТаблицаЗначений;
	ТаблицаПроводок.Колонки.Добавить("Период",
		ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаПроводок.Колонки.Добавить("Организация",
		Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаПроводок.Колонки.Добавить("СчетДт",
		Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаПроводок.Колонки.Добавить("Подразделение",
		Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	ТаблицаПроводок.Колонки.Добавить("Субконто1");
	ТаблицаПроводок.Колонки.Добавить("Субконто2");
	ТаблицаПроводок.Колонки.Добавить("Субконто3");
	ТаблицаПроводок.Колонки.Добавить("ОтражениеВУСН",
		Новый ОписаниеТипов("ПеречислениеСсылка.ОтражениеВУСН"));
	ТаблицаПроводок.Колонки.Добавить("СчетКт",
		Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаПроводок.Колонки.Добавить("РасходыБудущихПериодов",
		Новый ОписаниеТипов("СправочникСсылка.РасходыБудущихПериодов"));
	ТаблицаПроводок.Колонки.Добавить("СуммаНУДт",
		ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаПроводок.Колонки.Добавить("СуммаНУКт",
		ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаПроводок.Колонки.Добавить("Содержание",
		ОбщегоНазначения.ОписаниеТипаСтрока(150));
		
	ТаблицыДвиженийПлатон.Хозрасчетный = ТаблицаПроводок;
	
	ТаблицаДвижений = Новый ТаблицаЗначений;
	ТаблицаДвижений.Колонки.Добавить("Период",
		ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаДвижений.Колонки.Добавить("Организация",
		Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаДвижений.Колонки.Добавить("ОсновноеСредство",
		Новый ОписаниеТипов("СправочникСсылка.ОсновныеСредства"));
	ТаблицаДвижений.Колонки.Добавить("СчетУчета",
		Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаДвижений.Колонки.Добавить("Контрагент",
		Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаДвижений.Колонки.Добавить("ДоговорКонтрагента",
		Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов"));
	ТаблицаДвижений.Колонки.Добавить("ДокументРасчетовСКонтрагентом",
		Документы.ТипВсеСсылки());
	ТаблицаДвижений.Колонки.Добавить("Подразделение",
		Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	ТаблицаДвижений.Колонки.Добавить("ОтражениеВУСН",
		Новый ОписаниеТипов("ПеречислениеСсылка.ОтражениеВУСН"));
	ТаблицаДвижений.Колонки.Добавить("Сумма",
		ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаДвижений.Колонки.Добавить("СуммаРасхода",
		ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
		
	ТаблицыДвиженийПлатон.РасходыНаПлатон = ТаблицаДвижений;
		
	Возврат ТаблицыДвиженийПлатон;
	
КонецФункции

Функция ПустаяТаблицаПроводок()
	
	ТаблицаПроводок = Новый ТаблицаЗначений;
	
	ТаблицаПроводок.Колонки.Добавить("Период",
		ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаПроводок.Колонки.Добавить("Организация",
		Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаПроводок.Колонки.Добавить("СчетДт",
		Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаПроводок.Колонки.Добавить("Подразделение",
		Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	ТаблицаПроводок.Колонки.Добавить("Субконто1");
	ТаблицаПроводок.Колонки.Добавить("Субконто2");
	ТаблицаПроводок.Колонки.Добавить("Субконто3");
	ТаблицаПроводок.Колонки.Добавить("ОтражениеВУСН",
		Новый ОписаниеТипов("ПеречислениеСсылка.ОтражениеВУСН"));
	ТаблицаПроводок.Колонки.Добавить("СчетКт",
		Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаПроводок.Колонки.Добавить("ВидыПлатежейВГосБюджет",
		Новый ОписаниеТипов("ПеречислениеСсылка.ВидыПлатежейВГосБюджет"));
	ТаблицаПроводок.Колонки.Добавить("РегистрацияВНалоговомОргане",
		Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	ТаблицаПроводок.Колонки.Добавить("УровниБюджетов",
		Новый ОписаниеТипов("ПеречислениеСсылка.УровниБюджетов"));
	ТаблицаПроводок.Колонки.Добавить("Сумма",
		ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаПроводок.Колонки.Добавить("Содержание",
		ОбщегоНазначения.ОписаниеТипаСтрока(150));
	
	Возврат ТаблицаПроводок;
	
КонецФункции

Процедура РассчитатьНалог(Реквизиты, ТаблицаПроводок, ТаблицаСправкиРасчета, ТаблицыПлатон, ДополнительныеПараметры, Ошибки, Отказ)
	
	ЭтоЮрЛицо = ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Реквизиты.Организация);
	ПрименяетсяУСНДоходыМинусРасходы = УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(
		Реквизиты.Организация, Реквизиты.Период);	
		
	РасчетПлатон   = Неопределено;
	
	Если Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество Тогда
		
		РасчетПоНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоНалогуНаИмущество(Реквизиты.Организация, Реквизиты.Период, ДополнительныеПараметры);
		
		СчетКт = ПланыСчетов.Хозрасчетный.НалогНаИмущество;
		
		СтрокиБезКоличестваМесяцевВладения = РасчетПоНалогу.НайтиСтроки(
			Новый Структура("ВидНалоговойБазы, КоличествоМесяцевВладения",
			Перечисления.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость, 0));
			
		Если СтрокиБезКоличестваМесяцевВладения.Количество() > 0 Тогда
			
			Для Каждого СтрокаТаблицы Из СтрокиБезКоличестваМесяцевВладения Цикл
				
				ШаблонСообщения = НСтр("ru = 'Не заполнена дата регистрации права собственности для объекта %1'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ШаблонСообщения, Строка(СтрокаТаблицы.ОсновноеСредство));
				СсылкаДляПерехода = "e1cib/list/РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам";
				Ошибка = Новый Структура("ТекстСообщения, СсылкаДляПерехода", ТекстСообщения, СсылкаДляПерехода);
				Ошибки.Добавить(Ошибка);
				
			КонецЦикла;
			
			Отказ = Истина;

		КонецЕсли;
		
	ИначеЕсли Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
		
		РасчетыПоНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоТранспортномуНалогу(Реквизиты.Организация, Реквизиты.Период, ДополнительныеПараметры);
		
		РасчетПоНалогу = РасчетыПоНалогу.Налог;
		РасчетПлатон   = РасчетыПоНалогу.Платон;
		
		// Сообщим, если есть транспортные средства, по которым не определены ставки налога
		СтрокиБезСтавки = РасчетПоНалогу.НайтиСтроки(Новый Структура("ОтсутствуетСтавка", Истина));
		
		Если СтрокиБезСтавки.Количество() > 0 Тогда
					
			Ошибка = Новый Структура;
			Ошибка.Вставить("ТекстСообщения", НСтр("ru = 'По некоторым транспортным средствам не установлены ставки налога'"));
			Ошибка.Вставить("СсылкаДляПерехода", "e1cib/list/РегистрСведений.СтавкиТранспортногоНалога");
			Ошибка.Вставить("Локализация", НСтр("ru = 'Проверьте регистрацию следующих транспортных средств:'"));
			Ошибка.Вставить("Рекомендация", НСтр("ru = 'При необходимости добавьте ставки транспортного налога'"));
			
			ЛокализацияДетально = Новый ТаблицаЗначений;
			ЛокализацияДетально.Колонки.Добавить("Локализация", Новый ОписаниеТипов("Строка"));
			ЛокализацияДетально.Колонки.Добавить("Ссылка"); 
			
			ТранспортныеСредства = РасчетПоНалогу.Скопировать(СтрокиБезСтавки, "ОсновноеСредство");
			ТранспортныеСредства.Свернуть("ОсновноеСредство");
			
			Для Каждого ТранспортноеСредство Из ТранспортныеСредства Цикл
				ОшибкаПодробно = ЛокализацияДетально.Добавить();
				ОшибкаПодробно.Локализация = ТранспортноеСредство.ОсновноеСредство;
				ОшибкаПодробно.Ссылка = ПолучитьНавигационнуюСсылку(ТранспортноеСредство.ОсновноеСредство);
			КонецЦикла;	
			
			Ошибка.Вставить("ЛокализацияДетально", ЛокализацияДетально);
			Ошибки.Добавить(Ошибка);
			
			Отказ = Истина;
			
		КонецЕсли; 
		
		СчетКт = ПланыСчетов.Хозрасчетный.ТранспортныйНалог;
		
	ИначеЕсли Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда
		
		РасчетПоНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоЗемельномуНалогу(Реквизиты.Организация, Реквизиты.Период, ДополнительныеПараметры);
		СчетКт = ПланыСчетов.Хозрасчетный.ЗемельныйНалог;
		
	КонецЕсли;
	
	Если РасчетПоНалогу.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из РасчетПоНалогу Цикл
		НоваяСтрока = ТаблицаСправкиРасчета.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
	КонецЦикла;	
	
	Если Не ЭтоЮрЛицо Тогда
		Возврат;
	КонецЕсли;
	
	Объекты = РасчетПоНалогу.ВыгрузитьКолонку("ОсновноеСредство");
	СпособыОтраженияРасходов = СпособыОтраженияРасходовПоНалогам(
		Реквизиты.Организация, Объекты, Реквизиты.ВидНалога, Реквизиты.Период);
		
	Если СпособыОтраженияРасходов.Количество() = 0 Тогда
		
		ТекстСообщения = НСтр("ru = 'Не задано ни одного способа отражения расходов по налогу'");
		СсылкаДляПерехода = "e1cib/data/РегистрСведений.СпособыОтраженияРасходовПоНалогам";
		Ошибка = Новый Структура("ТекстСообщения, СсылкаДляПерехода", ТекстСообщения, СсылкаДляПерехода);
		Ошибки.Добавить(Ошибка);
		
		Отказ = Истина;
		
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// В 2020 году некоторые организации освобождены от уплаты имущественных налогов (за 2-й квартал). В этом случае рассчитать налог 
	// нужно в обычном порядке(требуется при заполнении декларации и/или справки-расчета налога), 
	// а уплачивать не нужно (проводки в части начисления налога за период освобождения не формируются).
	// Федеральный закон № 172-ФЗ от 08.06.2020
	
	// Для "освобожденных" организаций авансовый платеж за период освобождения (2-й квартал) рассчитывается в обычном порядке 
	// (для тех ИФНС, где платятся авансы), но проводки не формируются.
	ФормироватьПроводкиПоНалогу = Истина;
	Если ДополнительныеПараметры <> Неопределено Тогда
		ФормироватьПроводкиПоНалогу = Не ДополнительныеПараметры.Свойство("ПрименяетсяОсвобождениеОтУплатыНалогаВТекущемПериоде")
			Или Не ДополнительныеПараметры.ПрименяетсяОсвобождениеОтУплатыНалогаВТекущемПериоде;
	КонецЕсли;		
	
	// Налог по результатам 2020 года для "освобожденных" организаций рассчитывается следующим образом:
	// Если организация уплачивает ежеквартальные авансы в каких-то регионах (ИФНС), 
	// то в расчете сумма освобождения от налога (СуммаОсвобожденияОтУплатыНалога) устанавливается равной авансовому платежу за 2-й квартал, 
	// а сам этот платеж принимается равным 0. 
	// Для тех регионов (ИФНС), где не уплачиваются авансы, сумма освобождения равна сумме налога за период освобождения (2-й квартал), 
	// рассчитанной аналогично авансу за такой период для тех, кто платит авансы.
	// В любом случае налог (аванс) к уплате за период (СуммаНалогаКУплате) уже уменьшен на сумму освобождения за 2-й квартал.
	Если ФормироватьПроводкиПоНалогу Тогда
	
		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СчетКт);
		
		Для Каждого СтрокаТаблицы Из РасчетПоНалогу Цикл
			
			Если СтрокаТаблицы.СуммаНалогаКУплате = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СпособОтраженияРасходов = СпособыОтраженияРасходов[СтрокаТаблицы.ОсновноеСредство];
			
			Если СпособОтраженияРасходов = Неопределено Тогда
				
				ШаблонСообщения = НСтр("ru = 'Не установлен способ отражения расходов по налогу для объекта %1'");
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ШаблонСообщения, Строка(СтрокаТаблицы.ОсновноеСредство));
				СсылкаДляПерехода = ПолучитьНавигационнуюСсылку(СтрокаТаблицы.ОсновноеСредство);
				
				Ошибка = Новый Структура("ТекстСообщения, СсылкаДляПерехода",
										ТекстСообщения, СсылкаДляПерехода);
										
				Ошибки.Добавить(Ошибка);
				
				Отказ = Истина;
				Продолжить;
				
			КонецЕсли;
			
			Если ПрименяетсяУСНДоходыМинусРасходы И НЕ ЗначениеЗаполнено(СпособОтраженияРасходов.ОтражениеВУСН) Тогда
				
				Отбор = Новый Структура;
				Отбор.Вставить("Период", СпособОтраженияРасходов.Период);
				Отбор.Вставить("ВидНалога", Реквизиты.ВидНалога);
				Если СпособОтраженияРасходов.ПорядокОпределенияСпособаОтражения = "ПоОсновнымСредствам" Тогда
					Отбор.Вставить("ОсновноеСредство", СтрокаТаблицы.ОсновноеСредство);
					Отбор.Вставить("Организация", Реквизиты.Организация);
				ИначеЕсли СпособОтраженияРасходов.ПорядокОпределенияСпособаОтражения = "ПоОрганизациям" Тогда
					Отбор.Вставить("ОсновноеСредство", Справочники.ОсновныеСредства.ПустаяСсылка());
					Отбор.Вставить("Организация", Реквизиты.Организация);
				Иначе
					Отбор.Вставить("ОсновноеСредство", Справочники.ОсновныеСредства.ПустаяСсылка());
					Отбор.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
				КонецЕсли;
				
				КлючЗаписи = РегистрыСведений.СпособыОтраженияРасходовПоНалогам.СоздатьКлючЗаписи(Отбор);
				
				Если Не КлючЗаписи.Пустой() Тогда
					
					ТекстСообщения = НСтр("ru = 'Не установлен порядок отражения в УСН в способе отражения расходов по налогу'");
					СсылкаДляПерехода = ПолучитьНавигационнуюСсылку(КлючЗаписи);
					
					Ошибка = Новый Структура("ТекстСообщения, СсылкаДляПерехода",
											ТекстСообщения, СсылкаДляПерехода);
					
					Ошибки.Добавить(Ошибка);
					
					Отказ = Истина;
					Продолжить;
					
				КонецЕсли;
				
			КонецЕсли;
			
			НоваяСтрока = ТаблицаПроводок.Добавить();
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Реквизиты);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СпособОтраженияРасходов, ,"Период");
			
			НоваяСтрока.Подразделение = СпособОтраженияРасходов.Подразделение;
			
			НоваяСтрока.СчетКт = СчетКт;
			НоваяСтрока.ВидыПлатежейВГосБюджет = Перечисления.ВидыПлатежейВГосБюджет.Налог;
			
			Для Ном = 1 По СвойстваСчетаКт.КоличествоСубконто Цикл
				Если СвойстваСчетаКт["ВидСубконто" + Ном].ИмяПредопределенныхДанных = "РегистрацияВНалоговомОргане" Тогда
					НоваяСтрока.РегистрацияВНалоговомОргане = СтрокаТаблицы.ИФНС;
				КонецЕсли;
			КонецЦикла;
				
			НоваяСтрока.Сумма = СтрокаТаблицы.СуммаНалогаКУплате;
			
		КонецЦикла;
		
	КонецЕсли;	
	
	ТаблицаПроводок.Свернуть("Период,Организация,Содержание,
	|СчетДт,Подразделение,Субконто1,Субконто2,Субконто3,ОтражениеВУСН,
	|СчетКт,ВидыПлатежейВГосБюджет,РегистрацияВНалоговомОргане", "Сумма");
	
	Если РасчетПлатон = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из РасчетПлатон Цикл
		
		Если СтрокаТаблицы.СуммаНУДт = 0 
			И СтрокаТаблицы.СуммаНУКт = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СпособОтраженияРасходов = СпособыОтраженияРасходов[СтрокаТаблицы.ОсновноеСредство];
		
		Если СпособОтраженияРасходов = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПрименяетсяУСНДоходыМинусРасходы И НЕ ЗначениеЗаполнено(СпособОтраженияРасходов.ОтражениеВУСН) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицыПлатон.РасходыНаПлатон.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Реквизиты);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		
		НоваяСтрока.Сумма = СтрокаТаблицы.СуммаНУКт;
		НоваяСтрока.СуммаРасхода = СтрокаТаблицы.СуммаНУДт;
		НоваяСтрока.ОтражениеВУСН = СпособОтраженияРасходов.ОтражениеВУСН;
		
		Если ПрименяетсяУСНДоходыМинусРасходы Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицыПлатон.Хозрасчетный.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Реквизиты);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СпособОтраженияРасходов, ,"Период");
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы, "СуммаНУДт, СуммаНУКт");
		
		СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(НоваяСтрока.СчетДт);
		
		Для Ном = 1 По СвойстваСчета.КоличествоСубконто Цикл
			Если СвойстваСчета["ВидСубконто" + Ном] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат Тогда
				НоваяСтрока["Субконто" + Ном] = Справочники.СтатьиЗатрат.ОсновнаяСтатьяЗатрат();
			КонецЕсли;
		КонецЦикла;
		
		НоваяСтрока.СчетКт = ПланыСчетов.Хозрасчетный.ПрочиеРасходыБудущихПериодов;
		НоваяСтрока.РасходыБудущихПериодов = Справочники.РасходыБудущихПериодов.РасходыНаПлатон;
		НоваяСтрока.Содержание = НСтр("ru = 'Отражен в расходах НУ платеж в систему ""Платон""'");
		
	КонецЦикла;
	
	ТаблицыПлатон.Хозрасчетный.Свернуть("Период,Организация,Содержание,
	|СчетДт,Подразделение,Субконто1,Субконто2,Субконто3,ОтражениеВУСН,
	|СчетКт,РасходыБудущихПериодов", "СуммаНУДт, СуммаНУКт");
	
КонецПроцедуры

Функция ПодготовитьПараметрыРасчетНалога(ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"						// <Дата>
	+ "Организация,"				// <СправочникСсылка.Организации>
	+ "Регистратор,"				// <ДокументСсылка.*>
	+ "ВидНалога,"					// <Перечисление.ВидыИмущественныхНалогов>
	+ "Содержание,"					// <Строка, 150>
	+ "ИмяРегистраРасчетНалогов"	// <Строка, 0>
	;
	
	Параметры.Вставить("Реквизиты", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

Функция ПодготовитьПараметрыДвиженийРасчетНалога(ТаблицаПроводок, ТаблицаПроводокПлатон, ТаблицаДвиженийПлатон, ТаблицаРеквизитов)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"                  // <Дата>
	+ "Организация,"             // <СправочникСсылка.Организации>
	+ "Регистратор,"             // <ДокументСсылка.*>
	+ "ВидНалога,"               // <ПеречислениеСсылка.ВидыИмущественныхНалогов>
	+ "ИмяРегистраРасчетНалогов" // <Строка, 0>
	;
	
	Параметры.Вставить("Реквизиты", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизитов, СписокОбязательныхКолонок));
		
	СписокОбязательныхКолонок = ""
	+ "Период,"						// <Дата> - период проводок
	+ "Организация,"				// <СправочникСсылка.Организации>
	+ "СчетДт,"						// <ПланСчетовСсылка.Хозрасчетный>
	+ "Подразделение,"				// <СправочникСсылка.ПодразделенияОрганизаций>
	+ "Субконто1,"              	// <Характеристика.ВидыСубконтоХозрасчетные>
	+ "Субконто2,"              	// <Характеристика.ВидыСубконтоХозрасчетные>
	+ "Субконто3,"              	// <Характеристика.ВидыСубконтоХозрасчетные>
	+ "СчетКт,"						// <ПланСчетовСсылка.Хозрасчетный>
	+ "ВидыПлатежейВГосБюджет,"		// <ПеречислениеСсылка.ВидыПлатежейВГосБюджет>
	+ "РегистрацияВНалоговомОргане,"// <СправочникСсылка.РегистрацииВНалоговомОргане>
	+ "Сумма,"						// <Число, 15, 0> - сумма проводки
	+ "Содержание";					// <Строка, 150> - содержание проводки
		
	Параметры.Вставить("Проводки", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаПроводок, СписокОбязательныхКолонок));
		
	СписокОбязательныхКолонок = ""
	+ "Период,"						// <Дата> - период проводок
	+ "Организация,"				// <СправочникСсылка.Организации>
	+ "СчетДт,"						// <ПланСчетовСсылка.Хозрасчетный>
	+ "Подразделение,"				// <СправочникСсылка.ПодразделенияОрганизаций>
	+ "Субконто1,"              	// <Характеристика.ВидыСубконтоХозрасчетные>
	+ "Субконто2,"              	// <Характеристика.ВидыСубконтоХозрасчетные>
	+ "Субконто3,"              	// <Характеристика.ВидыСубконтоХозрасчетные>
	+ "СчетКт,"						// <ПланСчетовСсылка.Хозрасчетный>
	+ "РасходыБудущихПериодов,"		// <ПеречислениеСсылка.РасходыБудущихПериодов>
	+ "СуммаНУДт,"					// <Число, 15, 0> - сумма проводки по НУ Дт
	+ "СуммаНУКт,"					// <Число, 15, 0> - сумма проводки по НУ Кт
	+ "Содержание";					// <Строка, 150> - содержание проводки
		
	Параметры.Вставить("ПроводкиПлатон", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаПроводокПлатон, СписокОбязательныхКолонок));
		
	СписокОбязательныхКолонок = ""
	+ "Период,"                        // <Дата> - период проводок
	+ "Организация,"                   // <СправочникСсылка.Организации>
	+ "ОсновноеСредство,"              // <СправочникСсылка.ОсновныеСредства>
	+ "СчетУчета,"                     // <ПланСчетовСсылка.Хозрасчетный>
	+ "Подразделение,"                 // <СправочникСсылка.ПодразделенияОрганизаций>
	+ "Контрагент,"                    // <СправочникСсылка.Контрагенты>
	+ "ДоговорКонтрагента,"            // <СправочникСсылка.ДоговорыКонтрагентов>
	+ "ДокументРасчетовСКонтрагентом," // <ДокументСсылка>
	+ "Сумма";                         // <Число, 15, 0> - сумма проводки
		
	Параметры.Вставить("РасходыНаПлатон", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаДвиженийПлатон, СписокОбязательныхКолонок));
		
	Возврат Параметры;
	
КонецФункции

#КонецОбласти

#КонецОбласти