
#Область СлужебныеПроцедурыИФункции

Процедура ОписаниеПоказателей_6НДФЛ_2021Кв1(ПоказателиОтчета) Экспорт
	
	
	// Раздел 1
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010001001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00001М102101", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00001М102201", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00001М203101", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П00001М203201", Истина, Истина);
	
	// Раздел 2
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020010001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020010501", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020011003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020011103", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020011203", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020011303", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020012003", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020013003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020014003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020014103", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020015003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020016003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020017003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020018003", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020019003", Истина, Истина);
	
	// Приложение 1
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П10000001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П10000002", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П10000003", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П10000004", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П10000005", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П10000006", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П10000007", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П10000008", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П10000009", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П10000010", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П10000011", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П10000012", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П1М100001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П1М100002", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П1М100003", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П1М100004", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П1М100005", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П1М100006", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П1М100007", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П1М100008", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П1М200001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П1М200002", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П1М300001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П1М300002", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П1М300003", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П1М300004", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П1М500001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П1М500002", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П1М500003", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П1М600004", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000П1М600005", Истина, Ложь);

КонецПроцедуры

Процедура ЗначенияПоказателей_6НДФЛ_2021Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	ДатаКонцаПериодаОтчета = ПараметрыОтчета.ДатаКонцаПериодаОтчета;
	Организация = ПараметрыОтчета.Организация;
	НачалоПериода = НачалоГода(ДатаКонцаПериодаОтчета);
	ОкончаниеПериода = КонецМесяца(ДатаКонцаПериодаОтчета);
	НомерКорректировки = ПараметрыОтчета.НомерКорректировки;
	Если ПараметрыОтчета.Свойство("РегистрацииВНО") Тогда
		РегистрацияВНалоговомОргане = ПараметрыОтчета.РегистрацииВНО;
	Иначе
		ТитульныйЛист = Контейнер.Титульный;
		ПараметрыОтбораРегистрацийВНО = Новый Структура;
		ПараметрыОтбораРегистрацийВНО.Вставить("КодНО", ТитульныйЛист.НалоговыйОрган);
		ПараметрыОтбораРегистрацийВНО.Вставить("ОКТМО", ТитульныйЛист.ОКТМО);
		Если СтрДлина(ТитульныйЛист.ИНН) = 10 Тогда
			ПараметрыОтбораРегистрацийВНО.Вставить("КПП", ТитульныйЛист.КПП);
			ПараметрыОтбораРегистрацийВНО.Вставить("ИскатьПоПервымСимволамОКТМО", Истина);
		КонецЕсли;
		РегистрацияВНалоговомОргане = РегламентированнаяОтчетность.РегистрацииОрганизацииВНалоговомОргане(Организация, ПараметрыОтбораРегистрацийВНО);
	КонецЕсли;
	ЗаполнятьПриложение1 = КонецМесяца(ОкончаниеПериода) = КонецГода(ОкончаниеПериода);
	НомерПервойСправки = 1;
	
	Если Не ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
		Возврат
	КонецЕсли;
	                         
	// Очистка отчета
	ПоказателиОтчета = Новый Структура;
	ОписаниеПоказателей_6НДФЛ_2021Кв1(ПоказателиОтчета);
	
	ДанныеРаздела1 = Контейнер.Раздел1.Строки;
	ПоляКБК = ОбщегоНазначения.СкопироватьРекурсивно(ДанныеРаздела1[0].Данные); 
	ПоляСуммКПеречислению = ОбщегоНазначения.СкопироватьРекурсивно(ДанныеРаздела1[0].ДанныеМногострочныхЧастей.П00001М1.Строки[0].Данные);
	ПоляСуммВозврата = ОбщегоНазначения.СкопироватьРекурсивно(ДанныеРаздела1[0].ДанныеМногострочныхЧастей.П00001М2.Строки[0].Данные);
	ДанныеРаздела1.Очистить();
	ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, ПоляКБК);
	ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, ПоляСуммКПеречислению);
	ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, ПоляСуммВозврата);
	
	ДанныеРаздела2 = Контейнер.Раздел2.Строки;
	ПоляРаздела2 = ОбщегоНазначения.СкопироватьРекурсивно(ДанныеРаздела2[0].Данные); 
	ДанныеРаздела2.Очистить();
	ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, ПоляРаздела2);
	
	Если ЗаполнятьПриложение1 Тогда
		
		ДанныеПриложение1 = Контейнер.Приложение1.Строки;
		ДанныеСправки = ДанныеПриложение1[0].ДанныеМногострочныхЧастей.П000П1М1.Строки;
		ПоляНалогоплательщика = ОбщегоНазначения.СкопироватьРекурсивно(ДанныеПриложение1[0].Данные);
		ПоляИтогов = ОбщегоНазначения.СкопироватьРекурсивно(ДанныеСправки[0].Данные);
		ПоляВычетов = ОбщегоНазначения.СкопироватьРекурсивно(ДанныеСправки[0].ДанныеМногострочныхЧастей.П000П1М2.Строки[0].Данные);
		ПоляУведомленийОВычетах = ОбщегоНазначения.СкопироватьРекурсивно(ДанныеСправки[0].ДанныеМногострочныхЧастей.П000П1М3.Строки[0].Данные);
		ПоляНеудержано = ОбщегоНазначения.СкопироватьРекурсивно(ДанныеСправки[0].ДанныеМногострочныхЧастей.П000П1М4.Строки[0].Данные);
		ПоляДоходов = ОбщегоНазначения.СкопироватьРекурсивно(ДанныеСправки[0].ДанныеМногострочныхЧастей.П000П1М5.Строки[0].Данные);
		ПоляВычетовКДоходам = ОбщегоНазначения.СкопироватьРекурсивно(ДанныеСправки[0].ДанныеМногострочныхЧастей.П000П1М5.Строки[0].ДанныеМногострочныхЧастей.П000П1М6.Строки[0].Данные);
		ДанныеПриложение1.Очистить();
		ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, ПоляНалогоплательщика);
		ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, ПоляИтогов);
		ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, ПоляВычетов);
		ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, ПоляУведомленийОВычетах);
		ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, ПоляДоходов);
		ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, ПоляВычетовКДоходам);
		ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, ПоляНеудержано);
		
	КонецЕсли;
	
	// Сбор данных
	ОписаниеТаблиц = Новый Структура("КоличествоПолучателейДохода, Раздел1Налоги, Раздел1Возвраты, Раздел2Доходы, Раздел2Вычеты, Раздел2Налоги, КоличествоПолучателейДохода");
	Если ЗаполнятьПриложение1 Тогда
		ОписаниеТаблиц.Вставить("Приложение1Налогоплательщики");	
		Если НомерКорректировки <> 99 Тогда
			ОписаниеТаблиц.Вставить("Приложение1Итоги");	
			ОписаниеТаблиц.Вставить("Приложение1Доходы");	
			ОписаниеТаблиц.Вставить("Приложение1Вычеты");	
			ОписаниеТаблиц.Вставить("Приложение1УведомленияОВычетах");	
		КонецЕсли;
	КонецЕсли;
	РасчетПоказателей_6НДФЛ_2021Кв1(НачалоПериода, ОкончаниеПериода, ?(ПараметрыОтчета.ДатаПодписи > ОкончаниеПериода,ПараметрыОтчета.ДатаПодписи, ОкончаниеПериода), Организация, РегистрацияВНалоговомОргане, ОписаниеТаблиц, Ложь, НомерКорректировки);	
	
	// Вывод данных в отчет
	
	ВсеКБК = Новый Массив;
	ВсеКБК.Добавить("18210102010011000110");
	ВсеКБК.Добавить("18210102060011000110");
	ВсеКБК.Добавить("18210102070011000110");
	ВсеКБК.Добавить("18210102080011000110");
	ПоискПоКБК = Новый Структура("КБК");
	
	// Раздел 1
	Налоги = ОписаниеТаблиц.Раздел1Налоги;
	Возвраты = ОписаниеТаблиц.Раздел1Возвраты;
	Для каждого КБК Из ВсеКБК Цикл
		
		ПоискПоКБК.КБК = КБК;
		СтрокиНалогов = Налоги.НайтиСтроки(ПоискПоКБК);
		СтрокиВозвратов = Возвраты.НайтиСтроки(ПоискПоКБК);
		
		Если СтрокиНалогов.Количество() > 0 Или СтрокиВозвратов.Количество() > 0 Тогда
			СтраницаРаздела1 = ДанныеРаздела1.Добавить();
			СтраницаРаздела1.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляКБК);
			СтраницаРаздела1.Данные.П000010001001 = КБК;
			СтраницаРаздела1.ДанныеМногострочныхЧастей = Новый Структура("П00001М1,П00001М2", НовоеПустоеДеревоДляОтчета(), НовоеПустоеДеревоДляОтчета());
			Если СтрокиНалогов.Количество() = 0 Тогда
				НоваяСтрокаСуммКПеречислению = СтраницаРаздела1.ДанныеМногострочныхЧастей.П00001М1.Строки.Добавить();
				НоваяСтрокаСуммКПеречислению.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляСуммКПеречислению);
			КонецЕсли;
			Если СтрокиВозвратов.Количество() = 0 Тогда
				НоваяСтрокаСуммВозврата = СтраницаРаздела1.ДанныеМногострочныхЧастей.П00001М2.Строки.Добавить();
				НоваяСтрокаСуммВозврата.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляСуммВозврата);
			КонецЕсли;
		КонецЕсли;
		Для каждого СтрокаНалогов Из СтрокиНалогов Цикл
			НоваяСтрокаСуммКПеречислению = СтраницаРаздела1.ДанныеМногострочныхЧастей.П00001М1.Строки.Добавить();
			НоваяСтрокаСуммКПеречислению.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляСуммКПеречислению);
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСуммКПеречислению.Данные, СтрокаНалогов);
		КонецЦикла;
		Для каждого СтрокаВозвратов Из СтрокиВозвратов Цикл
			НоваяСтрокаСуммВозврата = СтраницаРаздела1.ДанныеМногострочныхЧастей.П00001М2.Строки.Добавить();
			НоваяСтрокаСуммВозврата.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляСуммВозврата);
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСуммВозврата.Данные, СтрокаВозвратов);
		КонецЦикла;
		
	КонецЦикла;
	Если ДанныеРаздела1.Количество() = 0 Тогда
		СтраницаРаздела1 = ДанныеРаздела1.Добавить();
		СтраницаРаздела1.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляКБК);
		СтраницаРаздела1.ДанныеМногострочныхЧастей = Новый Структура("П00001М1,П00001М2", НовоеПустоеДеревоДляОтчета(), НовоеПустоеДеревоДляОтчета());
		СтраницаРаздела1.ДанныеМногострочныхЧастей.П00001М1.Строки.Добавить().Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляСуммКПеречислению);
		СтраницаРаздела1.ДанныеМногострочныхЧастей.П00001М2.Строки.Добавить().Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляСуммВозврата);
	КонецЕсли;
	
	// Раздел 2
	Доходы = ОписаниеТаблиц.Раздел2Доходы;
	Вычеты = ОписаниеТаблиц.Раздел2Вычеты;
	Налоги = ОписаниеТаблиц.Раздел2Налоги;
	Количество = ОписаниеТаблиц.КоличествоПолучателейДохода;
	ПоискПоКБКиСтавке = Новый Структура("КБК,Ставка");
	Для каждого Ставка Из Перечисления.НДФЛСтавки Цикл
		ПоискПоКБКиСтавке.Ставка = Ставка;
		Для каждого КБК Из ВсеКБК Цикл
			
			ПоискПоКБКиСтавке.КБК = КБК;
			СтрокиДоходов = Доходы.НайтиСтроки(ПоискПоКБКиСтавке);
			СтрокиВычетов = Вычеты.НайтиСтроки(ПоискПоКБКиСтавке);
			СтрокиНалогов = Налоги.НайтиСтроки(ПоискПоКБКиСтавке);
			СтрокиКоличества = Количество.НайтиСтроки(ПоискПоКБКиСтавке);
			
			Если СтрокиДоходов.Количество() > 0 Или СтрокиНалогов.Количество() > 0 Или СтрокиВычетов.Количество() > 0 Тогда
				СтраницаРаздела = ДанныеРаздела2.Добавить();
				СтраницаРаздела.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляРаздела2);
				СтраницаРаздела.Данные.П000020010501 = КБК;
				Если Ставка = Перечисления.НДФЛСтавки.Ставка03 Тогда
					 СтраницаРаздела.Данные.П000020010001 = 3
				ИначеЕсли Ставка = Перечисления.НДФЛСтавки.Ставка05 Тогда
					 СтраницаРаздела.Данные.П000020010001 = 5
				ИначеЕсли Ставка = Перечисления.НДФЛСтавки.Ставка06 Тогда
					 СтраницаРаздела.Данные.П000020010001 = 6
				ИначеЕсли Ставка = Перечисления.НДФЛСтавки.Ставка07 Тогда
					 СтраницаРаздела.Данные.П000020010001 = 7
				ИначеЕсли Ставка = Перечисления.НДФЛСтавки.Ставка09 Тогда
					 СтраницаРаздела.Данные.П000020010001 = 9
				ИначеЕсли Ставка = Перечисления.НДФЛСтавки.Ставка10 Тогда
					 СтраницаРаздела.Данные.П000020010001 = 10
				ИначеЕсли Ставка = Перечисления.НДФЛСтавки.Ставка12 Тогда
					 СтраницаРаздела.Данные.П000020010001 = 12
				ИначеЕсли Ставка = Перечисления.НДФЛСтавки.Ставка13 Тогда
					 СтраницаРаздела.Данные.П000020010001 = 13
				ИначеЕсли Ставка = Перечисления.НДФЛСтавки.Ставка15 Тогда
					 СтраницаРаздела.Данные.П000020010001 = 15
				ИначеЕсли Ставка = Перечисления.НДФЛСтавки.Ставка30 Тогда
					 СтраницаРаздела.Данные.П000020010001 = 30
				ИначеЕсли Ставка = Перечисления.НДФЛСтавки.Ставка35 Тогда
					 СтраницаРаздела.Данные.П000020010001 = 35
				Иначе
					
				КонецЕсли;
				СтраницаРаздела.ДанныеМногострочныхЧастей = Новый Структура();
			КонецЕсли;
			Для каждого СтрокаДанных Из СтрокиДоходов Цикл
				ЗаполнитьЗначенияСвойств(СтраницаРаздела.Данные, СтрокаДанных);
				Прервать;
			КонецЦикла;
			Для каждого СтрокаДанных Из СтрокиНалогов Цикл
				ЗаполнитьЗначенияСвойств(СтраницаРаздела.Данные, СтрокаДанных);
				Прервать;
			КонецЦикла;
			Для каждого СтрокаДанных Из СтрокиВычетов Цикл
				ЗаполнитьЗначенияСвойств(СтраницаРаздела.Данные, СтрокаДанных);
				Прервать;
			КонецЦикла;
			Для каждого СтрокаДанных Из СтрокиКоличества Цикл
				ЗаполнитьЗначенияСвойств(СтраницаРаздела.Данные, СтрокаДанных);
				Прервать;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	Если ДанныеРаздела2.Количество() = 0 Тогда
		СтраницаРаздела = ДанныеРаздела2.Добавить();
		СтраницаРаздела.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляРаздела2);
		СтраницаРаздела.ДанныеМногострочныхЧастей = Новый Структура();
	КонецЕсли;
	
	// Приложение 1
	Если ЗаполнятьПриложение1 Тогда
		Если ОписаниеТаблиц.Приложение1Налогоплательщики.Количество() > 0 Тогда
			
			СоответствиеСтавокДоходов = УчетНДФЛ.СоответствиеДоходовСтавкам();
			СоответствиеКодовСтран = Новый Соответствие;
			СоответствиеИменСтран = Новый Соответствие;
			СоответствиеДокументовУдостоверяющихЛичность = Новый Соответствие;
			СоответствиеКодовДоходов = Новый Соответствие;
			СоответствиеКодовФНССтатусамНДФЛ = Новый Соответствие;
			УчетНДФЛ.ПрочитатьКлассификаторыВСоответствия(СоответствиеКодовСтран, 
			СоответствиеИменСтран, 
			СоответствиеДокументовУдостоверяющихЛичность,
			СоответствиеКодовДоходов, 
			СоответствиеКодовФНССтатусамНДФЛ);
			
			СоответствиеСтавок = Новый Соответствие;
			СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка03] = 3;
			СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка05] = 5;
			СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка06] = 6;
			СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка07] = 7;
			СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка09] = 9;
			СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка10] = 10;
			СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка12] = 12;
			СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка13] = 13;
			СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка15] = 15;
			СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка30] = 30;
			СоответствиеСтавок[Перечисления.НДФЛСтавки.Ставка35] = 35;
			
			Если НомерКорректировки <> 99 Тогда
				Приложение1Итоги = ОписаниеТаблиц.Приложение1Итоги;
				Если Приложение1Итоги.Количество() > 100 Тогда
					Приложение1Итоги.Индексы.Добавить("ФизическоеЛицо");
				КонецЕсли;
				Приложение1Доходы = ОписаниеТаблиц.Приложение1Доходы;
				Если Приложение1Доходы.Количество() > 100 Тогда
					Приложение1Доходы.Индексы.Добавить("ФизическоеЛицо,Ставка");
				КонецЕсли;
				Приложение1Вычеты = ОписаниеТаблиц.Приложение1Вычеты;
				Если Приложение1Вычеты.Количество() > 100 Тогда
					Приложение1Вычеты.Индексы.Добавить("ФизическоеЛицо,Ставка");
				КонецЕсли;
				Приложение1УведомленияОВычетах = ОписаниеТаблиц.Приложение1УведомленияОВычетах;
				Если Приложение1УведомленияОВычетах.Количество() > 100 Тогда
					Приложение1УведомленияОВычетах.Индексы.Добавить("ФизическоеЛицо,Ставка");
				КонецЕсли;
				ПоискПоФизлицу = Новый Структура("ФизическоеЛицо");
				ПоискПоФизлицуИСтавке = Новый Структура("ФизическоеЛицо,Ставка");
			КонецЕсли;
			
			Для каждого СтрокаДанных Из ОписаниеТаблиц.Приложение1Налогоплательщики Цикл
				
				СтраницаПриложение1 = ДанныеПриложение1.Добавить();
				СтраницаПриложение1.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляНалогоплательщика);
				СтраницаПриложение1.ДанныеМногострочныхЧастей = Новый Структура("П000П1М1", НовоеПустоеДеревоДляОтчета());
				СтраницаПриложение1.Данные.П000П10000001 = НомерПервойСправки;
				НомерПервойСправки = НомерПервойСправки + 1;
				СтраницаПриложение1.Данные.П000П10000002 = "00";
				СтраницаПриложение1.Данные.П000П10000003 = СтрокаДанных.ИНН;
				СтраницаПриложение1.Данные.П000П10000004 = СокрЛП(СтрокаДанных.Фамилия);
				СтраницаПриложение1.Данные.П000П10000005 = СокрЛП(СтрокаДанных.Имя);
				СтраницаПриложение1.Данные.П000П10000006 = СокрЛП(СтрокаДанных.Отчество);
				Описание = СоответствиеКодовФНССтатусамНДФЛ.Получить(СтрокаДанных.СтатусНалогоплательщика);
				СтраницаПриложение1.Данные.П000П10000007 = ?(Описание = Неопределено, "", Описание.КодФНС_2015);
				СтраницаПриложение1.Данные.П000П10000008 = СтрокаДанных.ДатаРождения;
				СтраницаПриложение1.Данные.П000П10000009 = ФизическиеЛицаЗарплатаКадры.КодСтраныДляОтчетности(СоответствиеКодовСтран, СтрокаДанных.Гражданство, СтрокаДанных.СтранаВыдачиДокумента);
				Описание = СоответствиеДокументовУдостоверяющихЛичность.Получить(СтрокаДанных.ВидДокумента);
				СтраницаПриложение1.Данные.П000П10000010 = ?(Описание = Неопределено, "", Описание.КодМВД_2015);
				СтраницаПриложение1.Данные.П000П10000011 = СокрЛП(СтрокаДанных.СерияДокумента);
				СтраницаПриложение1.Данные.П000П10000012 = СокрЛП(СтрокаДанных.НомерДокумента);
				
				ВыводитьДоходы = НомерКорректировки <> 99;
				Если ВыводитьДоходы Тогда
					ПоискПоФизлицу.ФизическоеЛицо = СтрокаДанных.ФизическоеЛицо;
					ПоискПоФизлицуИСтавке.ФизическоеЛицо = СтрокаДанных.ФизическоеЛицо;
					СтрокиФизлица = Приложение1Итоги.НайтиСтроки(ПоискПоФизлицу);
					ВыводитьДоходы = СтрокиФизлица.Количество() > 0;
				КонецЕсли;
				Если ВыводитьДоходы Тогда
					Для каждого СтрокаИтоговПоСтавке Из СтрокиФизлица Цикл
						
						ПоискПоФизлицуИСтавке.Ставка = СтрокаИтоговПоСтавке.Ставка;
						СтраницаПоСтавке = СтраницаПриложение1.ДанныеМногострочныхЧастей.П000П1М1.Строки.Добавить();
						СтраницаПоСтавке.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляИтогов);
						ЗаполнитьЗначенияСвойств(СтраницаПоСтавке.Данные, СтрокаИтоговПоСтавке);
						СтраницаПоСтавке.ДанныеМногострочныхЧастей = Новый Структура("П000П1М2,П000П1М3,П000П1М4,П000П1М5", НовоеПустоеДеревоДляОтчета(), НовоеПустоеДеревоДляОтчета(), НовоеПустоеДеревоДляОтчета(), НовоеПустоеДеревоДляОтчета());
						СтрокиДанных = Приложение1Вычеты.НайтиСтроки(ПоискПоФизлицуИСтавке);
						ВыводитьИмущественныйВычет = Ложь;
						ВыводитьСоциальныйВычет = Ложь;
						Если СтрокиДанных.Количество() > 0 Тогда
							Для каждого СтрокаДанных Из СтрокиДанных Цикл
								СтрокаПоСтавке = СтраницаПоСтавке.ДанныеМногострочныхЧастей.П000П1М2.Строки.Добавить();
								СтрокаПоСтавке.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляВычетов);
								ЗаполнитьЗначенияСвойств(СтрокаПоСтавке.Данные, СтрокаДанных);
								Если Не ВыводитьИмущественныйВычет Тогда
									ВыводитьИмущественныйВычет = СтрокаДанных.ГруппаВычета = Перечисления.ГруппыВычетовПоНДФЛ.Имущественные
								КонецЕсли;
								Если Не ВыводитьСоциальныйВычет Тогда
									ВыводитьСоциальныйВычет = СтрокаДанных.ГруппаВычета = Перечисления.ГруппыВычетовПоНДФЛ.СоциальныеПоУведомлениюНО
								КонецЕсли;
							КонецЦикла;
						Иначе
							СтраницаПоСтавке.ДанныеМногострочныхЧастей.П000П1М2.Строки.Добавить().Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляВычетов);
						КонецЕсли;
						
						СтрокиДанных = Приложение1УведомленияОВычетах.НайтиСтроки(ПоискПоФизлицу);
						Если СтрокиДанных.Количество() > 0 Тогда
							Для каждого СтрокаДанных Из СтрокиДанных Цикл
								Если ВыводитьИмущественныйВычет И СтрокаДанных.ГруппаВычета = Перечисления.ГруппыВычетовПоНДФЛ.Имущественные Тогда
									СтрокаПоСтавке = СтраницаПоСтавке.ДанныеМногострочныхЧастей.П000П1М3.Строки.Добавить();
									СтрокаПоСтавке.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляУведомленийОВычетах);
									ЗаполнитьЗначенияСвойств(СтрокаПоСтавке.Данные, СтрокаДанных);
									СтрокаПоСтавке.Данные.П000П1М300001 = "1"
								КонецЕсли;
								Если ВыводитьСоциальныйВычет И СтрокаДанных.ГруппаВычета = Перечисления.ГруппыВычетовПоНДФЛ.Социальные Тогда
									СтрокаПоСтавке = СтраницаПоСтавке.ДанныеМногострочныхЧастей.П000П1М3.Строки.Добавить();
									СтрокаПоСтавке.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляУведомленийОВычетах);
									ЗаполнитьЗначенияСвойств(СтрокаПоСтавке.Данные, СтрокаДанных);
									СтрокаПоСтавке.Данные.П000П1М300001 = "2"
								КонецЕсли;
								Если СтрокаИтоговПоСтавке.П000П1М100006 > 0 И СтрокаДанных.ГруппаВычета = Перечисления.ГруппыВычетовПоНДФЛ.ПустаяСсылка() Тогда
									СтрокаПоСтавке = СтраницаПоСтавке.ДанныеМногострочныхЧастей.П000П1М3.Строки.Добавить();
									СтрокаПоСтавке.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляУведомленийОВычетах);
									ЗаполнитьЗначенияСвойств(СтрокаПоСтавке.Данные, СтрокаДанных);
									СтрокаПоСтавке.Данные.П000П1М300001 = "3"
								КонецЕсли;
							КонецЦикла;
							Если СтраницаПоСтавке.ДанныеМногострочныхЧастей.П000П1М3.Строки.Количество() = 0 Тогда
								СтраницаПоСтавке.ДанныеМногострочныхЧастей.П000П1М3.Строки.Добавить().Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляУведомленийОВычетах);
							КонецЕсли;
						Иначе
							СтраницаПоСтавке.ДанныеМногострочныхЧастей.П000П1М3.Строки.Добавить().Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляУведомленийОВычетах);
						КонецЕсли;
						
						СтраницаПоСтавке.ДанныеМногострочныхЧастей.П000П1М4.Строки.Добавить().Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляНеудержано);
						СтрокиДанных = Приложение1Доходы.Скопировать(Приложение1Доходы.НайтиСтроки(ПоискПоФизлицуИСтавке));
						Если СтрокиДанных.Количество() > 0 Тогда
							СтрокиДанных.Сортировать("Период,П000П1М500002");
							Для каждого СтрокаДанных Из СтрокиДанных Цикл
								СтрокаПоСтавке = СтраницаПоСтавке.ДанныеМногострочныхЧастей.П000П1М5.Строки.Добавить();
								СтрокаПоСтавке.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляДоходов);
								ЗаполнитьЗначенияСвойств(СтрокаПоСтавке.Данные, СтрокаДанных);
								СтрокаПоСтавке.Данные.П000П1М500001 = Формат(СтрокаДанных.Период, "ДФ=MM");
								СтрокаПоСтавке.ДанныеМногострочныхЧастей = Новый Структура("П000П1М6", НовоеПустоеДеревоДляОтчета());
								СтрокаВычета = СтрокаПоСтавке.ДанныеМногострочныхЧастей.П000П1М6.Строки.Добавить();
								СтрокаВычета.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляВычетовКДоходам);
								ЗаполнитьЗначенияСвойств(СтрокаВычета.Данные, СтрокаДанных);
							КонецЦикла;
						Иначе
							СтрокаДоходов = СтраницаПоСтавке.ДанныеМногострочныхЧастей.П000П1М5.Строки.Добавить();
							СтрокаДоходов.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляДоходов);
							СтрокаДоходов.ДанныеМногострочныхЧастей = Новый Структура("П000П1М6", НовоеПустоеДеревоДляОтчета());
							СтрокаДоходов.ДанныеМногострочныхЧастей.П000П1М6.Строки.Добавить().Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляВычетовКДоходам);
						КонецЕсли;
						
					КонецЦикла; 
				Иначе
					СтраницаПоСтавке = СтраницаПриложение1.ДанныеМногострочныхЧастей.П000П1М1.Строки.Добавить();
					СтраницаПоСтавке.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляИтогов);
					СтраницаПоСтавке.ДанныеМногострочныхЧастей = Новый Структура("П000П1М2,П000П1М3,П000П1М4,П000П1М5", НовоеПустоеДеревоДляОтчета(), НовоеПустоеДеревоДляОтчета(), НовоеПустоеДеревоДляОтчета(), НовоеПустоеДеревоДляОтчета());
					СтраницаПоСтавке.ДанныеМногострочныхЧастей.П000П1М2.Строки.Добавить().Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляВычетов);
					СтраницаПоСтавке.ДанныеМногострочныхЧастей.П000П1М3.Строки.Добавить().Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляУведомленийОВычетах);
					СтраницаПоСтавке.ДанныеМногострочныхЧастей.П000П1М4.Строки.Добавить().Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляНеудержано);
					СтрокаДоходов = СтраницаПоСтавке.ДанныеМногострочныхЧастей.П000П1М5.Строки.Добавить();
					СтрокаДоходов.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляДоходов);
					СтрокаДоходов.ДанныеМногострочныхЧастей = Новый Структура("П000П1М6", НовоеПустоеДеревоДляОтчета());
					СтрокаДоходов.ДанныеМногострочныхЧастей.П000П1М6.Строки.Добавить().Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляВычетовКДоходам);
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе 
			СтраницаПриложение1 = ДанныеПриложение1.Добавить();
			СтраницаПриложение1.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляНалогоплательщика);
			СтраницаПриложение1.ДанныеМногострочныхЧастей = Новый Структура("П000П1М1", НовоеПустоеДеревоДляОтчета());
			СтраницаПоСтавке = СтраницаПриложение1.ДанныеМногострочныхЧастей.П000П1М1.Строки.Добавить();
			СтраницаПоСтавке.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляИтогов);
			СтраницаПоСтавке.ДанныеМногострочныхЧастей = Новый Структура("П000П1М2,П000П1М3,П000П1М4,П000П1М5", НовоеПустоеДеревоДляОтчета(), НовоеПустоеДеревоДляОтчета(), НовоеПустоеДеревоДляОтчета(), НовоеПустоеДеревоДляОтчета());
			СтраницаПоСтавке.ДанныеМногострочныхЧастей.П000П1М2.Строки.Добавить().Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляВычетов);
			СтраницаПоСтавке.ДанныеМногострочныхЧастей.П000П1М3.Строки.Добавить().Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляУведомленийОВычетах);
			СтраницаПоСтавке.ДанныеМногострочныхЧастей.П000П1М4.Строки.Добавить().Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляНеудержано);
			СтрокаДоходов = СтраницаПоСтавке.ДанныеМногострочныхЧастей.П000П1М5.Строки.Добавить();
			СтрокаДоходов.Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляДоходов);
			СтрокаДоходов.ДанныеМногострочныхЧастей = Новый Структура("П000П1М6", НовоеПустоеДеревоДляОтчета());
			СтрокаДоходов.ДанныеМногострочныхЧастей.П000П1М6.Строки.Добавить().Данные = ОбщегоНазначения.СкопироватьРекурсивно(ПоляВычетовКДоходам);
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

Процедура ОписаниеПоказателей_6НДФЛ_2016Кв1(ПоказателиОтчета) Экспорт
	
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010001001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010002001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010002501", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010003001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010004001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010004501", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010005001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010006001", Истина, Ложь);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010007001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010008001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000010009001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020010001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020011001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020012001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020013001", Истина, Истина);
	ЗарплатаКадры.ДобавитьПоказательРегламентированнойОтчетности(ПоказателиОтчета, "П000020014001", Истина, Истина);
	
КонецПроцедуры

Процедура ЗначенияПоказателей_6НДФЛ_2016Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	ДатаКонцаПериодаОтчета = ПараметрыОтчета.ДатаКонцаПериодаОтчета;
	Организация = ПараметрыОтчета.Организация;
	НачалоПериода = НачалоГода(ДатаКонцаПериодаОтчета);
	ОкончаниеПериода = КонецМесяца(ДатаКонцаПериодаОтчета);
	РегистрацияВНалоговомОргане = ПараметрыОтчета.РегистрацииВНО;
	НомерКорректировки = 0;
	Если ПараметрыОтчета.Свойство("НомерКорректировки") Тогда
		НомерКорректировки = ПараметрыОтчета.НомерКорректировки;
	КонецЕсли;
	
	// очищаем разделы
	ПоказателиОтчета = Новый Структура;
	ОписаниеПоказателей_6НДФЛ_2016Кв1(ПоказателиОтчета);
	
	ДанныеРаздела1 = Контейнер.Раздел1;
	Значение = Неопределено;
	Для каждого КлючИЗначение Из ДанныеРаздела1 Цикл
		Если ПоказателиОтчета.Свойство(КлючИЗначение.Ключ, Значение) Тогда
			ДанныеРаздела1[КлючИЗначение.Ключ] = 0
		КонецЕсли;
	КонецЦикла;
	Контейнер.Раздел1_ДанныеДопСтрок.Очистить();
	Контейнер.Раздел2_ДанныеДопСтрок.Очистить();
	 
	ОписаниеТаблиц = Новый Структура("КоличествоПолучателейДохода, Раздел1Доходы, Раздел1Вычеты, Раздел1Налоги, Раздел2");
	Если ОкончаниеПериода < '20170101' Тогда
		РасчетПоказателей_6НДФЛ_2016Кв1(НачалоПериода, ОкончаниеПериода, ?(ПараметрыОтчета.ДатаПодписи > ОкончаниеПериода,ПараметрыОтчета.ДатаПодписи, ОкончаниеПериода), Организация, РегистрацияВНалоговомОргане, ОписаниеТаблиц);	
	Иначе
		РасчетПоказателей_6НДФЛ_2017Кв1(НачалоПериода, ОкончаниеПериода, ?(ПараметрыОтчета.ДатаПодписи > ОкончаниеПериода,ПараметрыОтчета.ДатаПодписи, ОкончаниеПериода), Организация, РегистрацияВНалоговомОргане, ОписаниеТаблиц, Ложь, НомерКорректировки);	
	КонецЕсли;
	
	// -------------------------------------------------------------------------------
	// Вывод данных в отчет
	
	// Раздел 1
	
	Результат = ОписаниеТаблиц.КоличествоПолучателейДохода;
	Если Результат.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(ДанныеРаздела1,Результат[0]);
	КонецЕсли;
	РезультатРаздел1Налоги = ОписаниеТаблиц.Раздел1Налоги;
	
	ВременнаяТаблица = Контейнер.Раздел1_ДанныеДопСтрок.СкопироватьКолонки();
	Для каждого СтрокаДанных Из ОписаниеТаблиц.Раздел1Доходы Цикл
		ЗаполнитьЗначенияСвойств(ВременнаяТаблица.Добавить(), СтрокаДанных);
	КонецЦикла;
	Для каждого СтрокаДанных Из ОписаниеТаблиц.Раздел1Вычеты Цикл
		ЗаполнитьЗначенияСвойств(ВременнаяТаблица.Добавить(), СтрокаДанных);
	КонецЦикла;
	Для каждого СтрокаДанных Из РезультатРаздел1Налоги Цикл
		ЗаполнитьЗначенияСвойств(ВременнаяТаблица.Добавить(), СтрокаДанных);
	КонецЦикла;
	
	РезультатРаздел1Налоги.Свернуть(,"П000010007001,П000010008001,П000010009001");
	Если РезультатРаздел1Налоги.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(ДанныеРаздела1, РезультатРаздел1Налоги[0]);
	КонецЕсли;
	
	ВременнаяТаблица.Свернуть("П000010001001","П000010002001,П000010002501,П000010003001,П000010004001,П000010004501,П000010005001");
	ВременнаяТаблица.Сортировать("П000010001001");
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВременнаяТаблица, Контейнер.Раздел1_ДанныеДопСтрок);
	
	// Раздел 2
	
	Для каждого СтрокаДанных Из ОписаниеТаблиц.Раздел2 Цикл
		ЗаполнитьЗначенияСвойств(Контейнер.Раздел2_ДанныеДопСтрок.Добавить(), СтрокаДанных);
	КонецЦикла;
	
КонецПроцедуры

Процедура РасчетПоказателей6НДФЛ(ИмяРасчета, НачалоПериода, ОкончаниеПериода, ДатаПодписи, Организация, РегистрацияВНалоговомОргане, ОписаниеТаблиц, ПодробныеДанные = Ложь, НомерКорректировки = 0) Экспорт

	Если ИмяРасчета = "РасчетПоказателей_6НДФЛ_2016Кв1" Тогда
		РасчетПоказателей_6НДФЛ_2016Кв1(НачалоПериода, ОкончаниеПериода, ДатаПодписи, Организация, РегистрацияВНалоговомОргане, ОписаниеТаблиц, ПодробныеДанные);
	ИначеЕсли ИмяРасчета = "РасчетПоказателей_6НДФЛ_2017Кв1" Тогда
		РасчетПоказателей_6НДФЛ_2017Кв1(НачалоПериода, ОкончаниеПериода, ДатаПодписи, Организация, РегистрацияВНалоговомОргане, ОписаниеТаблиц, ПодробныеДанные, НомерКорректировки);
	ИначеЕсли ИмяРасчета = "РасчетПоказателей_6НДФЛ_2021Кв1" Тогда
		РасчетПоказателей_6НДФЛ_2021Кв1(НачалоПериода, ОкончаниеПериода, ДатаПодписи, Организация, РегистрацияВНалоговомОргане, ОписаниеТаблиц, ПодробныеДанные, НомерКорректировки);
	Иначе
		
	КонецЕсли;

КонецПроцедуры

Процедура РасчетПоказателей_6НДФЛ_2021Кв1(НачалоПериода, ОкончаниеПериода, ДатаПодписи, Организация, РегистрацияВНалоговомОргане, ОписаниеТаблиц, ПодробныеДанные, НомерКорректировки)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадры.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	Запрос.УстановитьПараметр("НачалоПредыдущегоГода", ДобавитьМесяц(НачалоПериода, -12));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(НачалоПериода));
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("ДатаПодписи", КонецДня(ДатаПодписи));
	Запрос.УстановитьПараметр("КБКсПревышения", "18210102080011000110");
	Запрос.УстановитьПараметр("ОсновнойКБК", "18210102010011000110");
	Запрос.УстановитьПараметр("КБКПоОблигациям", "18210102070011000110");
	Запрос.УстановитьПараметр("НачалоОтчетногоКвартала", НачалоКвартала(ОкончаниеПериода));
	Запрос.УстановитьПараметр("ОкончаниеПериодаОсмотраДоходовВычетов", ?(КонецГода(ОкончаниеПериода) = ОкончаниеПериода Или ЗначениеЗаполнено(НомерКорректировки), Макс(ДатаПодписи, ОкончаниеПериода), ОкончаниеПериода));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда) КАК КатегорияДохода,
	|	&ОсновнойКБК КАК КБК
	|ПОМЕСТИТЬ ВТСоответствиеКатегорийКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходВНатуральнойФормеОтТрудовойДеятельности),
	|	&ОсновнойКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеНатуральныеДоходы),
	|	&ОсновнойКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыВДенежнойФормеОтТрудовойДеятельности),
	|	&ОсновнойКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды),
	|	&ОсновнойКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходы),
	|	&ОсновнойКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке05),
	|	&ОсновнойКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке10),
	|	&ОсновнойКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке12),
	|	&ОсновнойКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПоСтавке03),
	|	&ОсновнойКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке05),
	|	&ОсновнойКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПоСтавке06),
	|	&ОсновнойКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке07),
	|	&ОсновнойКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке10),
	|	&ОсновнойКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке15),
	|	&ОсновнойКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходыПредыдущихРедакций),
	|	&ОсновнойКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыОтДолевогоУчастия),
	|	&ОсновнойКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыПоВыигрышам),
	|	&ОсновнойКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыЦБ),
	|	&ОсновнойКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыРЕПО),
	|	&ОсновнойКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыЗаймЦБ),
	|	&ОсновнойКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыИИС),
	|	&ОсновнойКБК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыПоОблигациям),
	|	&КБКПоОблигациям";
	Запрос.Выполнить();
	
	Если ОписаниеТаблиц.Свойство("Раздел1Налоги") Или ОписаниеТаблиц.Свойство("Раздел2Налоги") Или ОписаниеТаблиц.Свойство("Раздел1Возвраты") Или ОписаниеТаблиц.Свойство("Приложение1Итоги") Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода КАК КатегорияДохода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК ДатаПолученияДохода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания КАК ВариантУдержания,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения КАК ВидДвижения,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СрокПеречисления КАК СрокПеречисления,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма КАК Сумма,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышения КАК СуммаСПревышения,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период КАК Период,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период КАК ДатаУдержания,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование КАК ДокументОснование,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КрайнийСрокУплаты КАК КрайнийСрокУплаты,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода КАК РасчетМежрасчетногоПериода,
		|	СоответствиеКатегорийКБК.КБК КАК КБК
		|ПОМЕСТИТЬ ВТНалоги
		|ИЗ
		|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеКатегорийКБК КАК СоответствиеКатегорийКБК
		|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода = СоответствиеКатегорийКБК.КатегорияДохода
		|ГДЕ
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ДатаПодписи
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|	И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма <> 0
		|			ИЛИ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышения <> 0)";
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Если ОписаниеТаблиц.Свойство("Раздел1Налоги") Тогда
		
		Если НачалоКвартала(ОкончаниеПериода) = '20210101' Тогда
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	СтрокиНалогов.КБК КАК КБК,
			|	СтрокиНалогов.Регистратор КАК Регистратор,
			|	СтрокиНалогов.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СтрокиНалогов.КрайнийСрокУплаты КАК СрокПеречисленияНалога,
			|	СтрокиНалогов.КрайнийСрокУплаты КАК П00001М102101,
			|	СтрокиНалогов.Сумма КАК П00001М102201
			|ПОМЕСТИТЬ ВТСтрокиНалогов
			|ИЗ
			|	ВТНалоги КАК СтрокиНалогов
			|ГДЕ
			|	СтрокиНалогов.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|	И СтрокиНалогов.ДатаУдержания МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода
			|
			|СГРУППИРОВАТЬ ПО
			|	СтрокиНалогов.КБК,
			|	СтрокиНалогов.Регистратор,
			|	СтрокиНалогов.ФизическоеЛицо,
			|	СтрокиНалогов.КрайнийСрокУплаты,
			|	СтрокиНалогов.Сумма,
			|	СтрокиНалогов.КрайнийСрокУплаты
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	&КБКсПревышения,
			|	СтрокиНалогов.Регистратор,
			|	СтрокиНалогов.ФизическоеЛицо,
			|	СтрокиНалогов.КрайнийСрокУплаты,
			|	СтрокиНалогов.КрайнийСрокУплаты,
			|	СтрокиНалогов.СуммаСПревышения
			|ИЗ
			|	ВТНалоги КАК СтрокиНалогов
			|ГДЕ
			|	СтрокиНалогов.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|	И СтрокиНалогов.ДатаУдержания МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода
			|
			|СГРУППИРОВАТЬ ПО
			|	СтрокиНалогов.Регистратор,
			|	СтрокиНалогов.ФизическоеЛицо,
			|	СтрокиНалогов.КрайнийСрокУплаты,
			|	СтрокиНалогов.СуммаСПревышения,
			|	СтрокиНалогов.КрайнийСрокУплаты
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	СтрокиНалогов.КБК,
			|	СтрокиНалогов.Регистратор,
			|	СтрокиНалогов.ФизическоеЛицо,
			|	СтрокиНалогов.КрайнийСрокУплаты,
			|	СтрокиНалогов.КрайнийСрокУплаты,
			|	СтрокиНалогов.Сумма
			|ИЗ
			|	ВТНалоги КАК СтрокиНалогов
			|ГДЕ
			|	СтрокиНалогов.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|	И СтрокиНалогов.КрайнийСрокУплаты >= ДАТАВРЕМЯ(2021, 1, 1, 0, 0, 0)
			|	И СтрокиНалогов.ДатаУдержания < ДАТАВРЕМЯ(2021, 1, 1, 0, 0, 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	СтрокиНалогов.КБК,
			|	СтрокиНалогов.Регистратор,
			|	СтрокиНалогов.ФизическоеЛицо,
			|	СтрокиНалогов.КрайнийСрокУплаты,
			|	СтрокиНалогов.Сумма,
			|	СтрокиНалогов.КрайнийСрокУплаты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НалогиПоДатам.КБК КАК КБК,
			|	НалогиПоДатам.Регистратор КАК Регистратор,
			|	НалогиПоДатам.ФизическоеЛицо КАК ФизическоеЛицо,
			|	НалогиПоДатам.СрокПеречисленияНалога КАК СрокПеречисленияНалога,
			|	НалогиПоДатам.П00001М102101 КАК П00001М102101,
			|	СУММА(НалогиПоДатам.П00001М102201) КАК П00001М102201
			|ИЗ
			|	ВТСтрокиНалогов КАК НалогиПоДатам
			|
			|СГРУППИРОВАТЬ ПО
			|	НалогиПоДатам.КБК,
			|	НалогиПоДатам.Регистратор,
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.СрокПеречисленияНалога,
			|	НалогиПоДатам.П00001М102101
			|
			|ИМЕЮЩИЕ
			|	СУММА(НалогиПоДатам.П00001М102201) > 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	СрокПеречисленияНалога";
			
		Иначе
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	НалогиПоДатам.КБК КАК КБК,
			|	НалогиПоДатам.Регистратор КАК Регистратор,
			|	НалогиПоДатам.ФизическоеЛицо КАК ФизическоеЛицо,
			|	НалогиПоДатам.КрайнийСрокУплаты КАК СрокПеречисленияНалога,
			|	НалогиПоДатам.КрайнийСрокУплаты КАК П00001М102101,
			|	СУММА(НалогиПоДатам.Сумма) КАК П00001М102201
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|ГДЕ
			|	НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|	И НалогиПоДатам.ДатаУдержания МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода
			|
			|СГРУППИРОВАТЬ ПО
			|	НалогиПоДатам.КБК,
			|	НалогиПоДатам.Регистратор,
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.КрайнийСрокУплаты,
			|	НалогиПоДатам.КрайнийСрокУплаты
			|
			|ИМЕЮЩИЕ
			|	СУММА(НалогиПоДатам.Сумма) > 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	&КБКсПревышения,
			|	НалогиПоДатам.Регистратор,
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.КрайнийСрокУплаты,
			|	НалогиПоДатам.КрайнийСрокУплаты,
			|	СУММА(НалогиПоДатам.СуммаСПревышения)
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|ГДЕ
			|	НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|	И НалогиПоДатам.ДатаУдержания МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода
			|
			|СГРУППИРОВАТЬ ПО
			|	НалогиПоДатам.Регистратор,
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.КрайнийСрокУплаты,
			|	НалогиПоДатам.КрайнийСрокУплаты
			|
			|ИМЕЮЩИЕ
			|	СУММА(НалогиПоДатам.СуммаСПревышения) > 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	СрокПеречисленияНалога";
			
		КонецЕсли;
		МассивПолей = Новый Массив;
		Если Не ПодробныеДанные Тогда
			МассивПолей.Добавить("ФизическоеЛицо");
			МассивПолей.Добавить("Регистратор");
		КонецЕсли;
		Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, "НалогиПоДатам");
		ОписаниеТаблиц.Раздел1Налоги = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	Если ОписаниеТаблиц.Свойство("Раздел1Возвраты") Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	НалогиПоДатам.КБК КАК КБК,
		|	НалогиПоДатам.Регистратор КАК Регистратор,
		|	НалогиПоДатам.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НалогиПоДатам.Период КАК ДатаВозврата,
		|	НалогиПоДатам.Период КАК П00001М203101,
		|	-СУММА(НалогиПоДатам.Сумма) КАК П00001М203201
		|ИЗ
		|	ВТНалоги КАК НалогиПоДатам
		|ГДЕ
		|	НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
		|	И НалогиПоДатам.Период МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода
		|
		|СГРУППИРОВАТЬ ПО
		|	НалогиПоДатам.КБК,
		|	НалогиПоДатам.Регистратор,
		|	НалогиПоДатам.ФизическоеЛицо,
		|	НалогиПоДатам.Период,
		|	НалогиПоДатам.Период
		|
		|ИМЕЮЩИЕ
		|	СУММА(НалогиПоДатам.Сумма) < 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&КБКсПревышения,
		|	НалогиПоДатам.Регистратор,
		|	НалогиПоДатам.ФизическоеЛицо,
		|	НалогиПоДатам.Период,
		|	НалогиПоДатам.Период,
		|	-СУММА(НалогиПоДатам.СуммаСПревышения)
		|ИЗ
		|	ВТНалоги КАК НалогиПоДатам
		|ГДЕ
		|	НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
		|	И НалогиПоДатам.Период МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода
		|
		|СГРУППИРОВАТЬ ПО
		|	НалогиПоДатам.Регистратор,
		|	НалогиПоДатам.ФизическоеЛицо,
		|	НалогиПоДатам.Период,
		|	НалогиПоДатам.Период
		|
		|ИМЕЮЩИЕ
		|	СУММА(НалогиПоДатам.СуммаСПревышения) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаВозврата";
		
		МассивПолей = Новый Массив;
		Если Не ПодробныеДанные Тогда
			МассивПолей.Добавить("ФизическоеЛицо");
			МассивПолей.Добавить("Регистратор");
		КонецЕсли;
		Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, "НалогиПоДатам");
		ОписаниеТаблиц.Раздел1Возвраты = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	Если ОписаниеТаблиц.Свойство("Раздел2Доходы") Или ОписаниеТаблиц.Свойство("Раздел2Вычеты") Или ОписаниеТаблиц.Свойство("КоличествоПолучателейДохода") 
		Или ОписаниеТаблиц.Свойство("Приложение1Доходы") Или ОписаниеТаблиц.Свойство("Приложение1Вычеты") Тогда
		
		ПараметрыРасчетаНДФЛПоПрогрессивнойШкале = УчетНДФЛ.ПараметрыРасчетаНДФЛПоПрогрессивнойШкале();
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК Период,
		|	СведенияОДоходахНДФЛ.КатегорияДохода КАК КатегорияДохода,
		|	СведенияОДоходахНДФЛ.КодДохода КАК КодДохода,
		|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
		|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
		|	СведенияОДоходахНДФЛ.Начисление КАК Начисление,
		|	ВЫБОР
		|		КОГДА СведенияОДоходахНДФЛ.СуммаВычета = 0
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
		|		ИНАЧЕ СведенияОДоходахНДФЛ.КодВычета
		|	КОНЕЦ КАК КодВычета,
		|	СУММА(СведенияОДоходахНДФЛ.СуммаВычета) КАК СуммаВычета,
		|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ КАК ИсточникДоходаЗаПределамиРФ,
		|	СоответствиеКатегорийКБК.КБК КАК КБК
		|ПОМЕСТИТЬ ВТДоходы
		|ИЗ
		|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеКатегорийКБК КАК СоответствиеКатегорийКБК
		|		ПО СведенияОДоходахНДФЛ.КатегорияДохода = СоответствиеКатегорийКБК.КатегорияДохода
		|ГДЕ
		|	СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ДатаПодписи
		|	И (СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ОкончаниеПериодаОсмотраДоходовВычетов
		|			ИЛИ СведенияОДоходахНДФЛ.Регистратор <> СведенияОДоходахНДФЛ.ДокументОснование)
		|	И СведенияОДоходахНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
		|	И СведенияОДоходахНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|	И (СведенияОДоходахНДФЛ.СуммаДохода <> 0
		|			ИЛИ СведенияОДоходахНДФЛ.СуммаВычета <> 0)
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
		|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
		|	СведенияОДоходахНДФЛ.КатегорияДохода,
		|	СведенияОДоходахНДФЛ.КодДохода,
		|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента,
		|	СведенияОДоходахНДФЛ.Регистратор,
		|	СведенияОДоходахНДФЛ.Начисление,
		|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ,
		|	СоответствиеКатегорийКБК.КБК,
		|	ВЫБОР
		|		КОГДА СведенияОДоходахНДФЛ.СуммаВычета = 0
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
		|		ИНАЧЕ СведенияОДоходахНДФЛ.КодВычета
		|	КОНЕЦ
		|
		|ИМЕЮЩИЕ
		|	(СУММА(СведенияОДоходахНДФЛ.СуммаДохода) <> 0
		|		ИЛИ СУММА(СведенияОДоходахНДФЛ.СуммаВычета) <> 0)";
		Запрос.Выполнить();
		
		УчетНДФЛ.СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТДоходы", "УчитыватьИзмененияСтатусаДляОтчетности", ОкончаниеПериода);
		
		Запрос.УстановитьПараметр("ОсновнаяНалоговаяБаза", Перечисления.КатегорииДоходовНДФЛ.ОсновнаяНалоговаяБаза());
		Запрос.УстановитьПараметр("Предел", ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.Предел);
		Запрос.УстановитьПараметр("СтавкаСПревышения", ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.Ставка);
		Запрос.УстановитьПараметр("СтавкаЧисломСПревышения", ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.СтавкаЧислом * 100);
		Запрос.УстановитьПараметр("ГодПериода", Год(ОкончаниеПериода));
			
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом * 100 КАК СтавкаНалога,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
		|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходахНДФЛ.Начисление КАК Начисление,
		|	СведенияОДоходахНДФЛ.Период КАК Период,
		|	ВЫБОР
		|		КОГДА СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
		|		КОГДА СведенияОДоходахНДФЛ.КатегорияДохода В (&ОсновнаяНалоговаяБаза)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
		|		ИНАЧЕ СведенияОДоходахНДФЛ.КатегорияДохода
		|	КОНЕЦ КАК НалоговаяБаза,
		|	СведенияОДоходахНДФЛ.КатегорияДохода КАК КатегорияДохода,
		|	СведенияОДоходахНДФЛ.КБК КАК КБК,
		|	СведенияОДоходахНДФЛ.КодДохода КАК КодДохода,
		|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
		|	СведенияОДоходахНДФЛ.КодВычета КАК КодВычета,
		|	СведенияОДоходахНДФЛ.СуммаВычета КАК СуммаВычета
		|ПОМЕСТИТЬ ВТДоходыПоСтавкам
		|ИЗ
		|	ВТДоходы КАК СведенияОДоходахНДФЛ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И СведенияОДоходахНДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И СведенияОДоходахНДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И СведенияОДоходахНДФЛ.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
		|ГДЕ
		|	(СведенияОДоходахНДФЛ.СуммаДохода <> 0
		|			ИЛИ СведенияОДоходахНДФЛ.СуммаВычета <> 0)
		|	И (НЕ СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ
		|			ИЛИ СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор КАК Регистратор,
		|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета КАК КодВычета,
		|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма КАК Сумма,
		|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода
		|ПОМЕСТИТЬ ВТСтандартныеИмущественныеВычеты
		|ИЗ
		|	РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
		|ГДЕ
		|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ОкончаниеПериодаОсмотраДоходовВычетов
		|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
		|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ИмущественныеВычетыНДФЛ.Регистратор,
		|	ИмущественныеВычетыНДФЛ.ФизическоеЛицо,
		|	ИмущественныеВычетыНДФЛ.КодВычета,
		|	ИмущественныеВычетыНДФЛ.Сумма,
		|	ИмущественныеВычетыНДФЛ.Период
		|ИЗ
		|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычетыНДФЛ
		|ГДЕ
		|	ИмущественныеВычетыНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ОкончаниеПериода
		|	И ИмущественныеВычетыНДФЛ.МесяцРегистрации <= &ОкончаниеПериодаОсмотраДоходовВычетов
		|	И ИмущественныеВычетыНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
		|	И ИмущественныеВычетыНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|	И ИмущественныеВычетыНДФЛ.Сумма <> 0
		|	И ИмущественныеВычетыНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ИмущественныеВычетыНДФЛ.Год = &ГодПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	База.ФизическоеЛицо КАК ФизическоеЛицо,
		|	База.НалоговаяБаза КАК НалоговаяБаза
		|ПОМЕСТИТЬ ВТСотрудникиСПревышением
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДоходыПоСтавкам.ФизическоеЛицо КАК ФизическоеЛицо,
		|		ДоходыПоСтавкам.НалоговаяБаза КАК НалоговаяБаза,
		|		ДоходыПоСтавкам.СуммаДохода - ДоходыПоСтавкам.СуммаВычета КАК ОблагаемаяБаза
		|	ИЗ
		|		ВТДоходыПоСтавкам КАК ДоходыПоСтавкам
		|	ГДЕ
		|		ДоходыПоСтавкам.НалоговаяБаза <> ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СтандартныеИмущественныеВычеты.ФизическоеЛицо,
		|		ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда),
		|		-СтандартныеИмущественныеВычеты.Сумма
		|	ИЗ
		|		ВТСтандартныеИмущественныеВычеты КАК СтандартныеИмущественныеВычеты) КАК База
		|
		|СГРУППИРОВАТЬ ПО
		|	База.ФизическоеЛицо,
		|	База.НалоговаяБаза
		|
		|ИМЕЮЩИЕ
		|	СУММА(База.ОблагаемаяБаза) > &Предел";
		
		Если Запрос.Выполнить().Выгрузить()[0].Количество > 0 Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Период КАК Период,
			|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.Период, МЕСЯЦ) КАК НачалоМесяца,
			|	СведенияОДоходахНДФЛ.НалоговаяБаза КАК НалоговаяБаза,
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода - СведенияОДоходахНДФЛ.СуммаВычета) КАК ОблагаемыйДоход,
			|	0 КАК ОблагаемыйДоходСНачалаГода,
			|	ЛОЖЬ КАК ЭтоДеньПревышенияПредела,
			|	ЛОЖЬ КАК ПределПревышен
			|ИЗ
			|	ВТДоходыПоСтавкам КАК СведенияОДоходахНДФЛ
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиСПревышением КАК СотрудникиСПревышением
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = СотрудникиСПревышением.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.НалоговаяБаза = СотрудникиСПревышением.НалоговаяБаза
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Период,
			|	СведенияОДоходахНДФЛ.НалоговаяБаза
			|
			|ИМЕЮЩИЕ
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода - СведенияОДоходахНДФЛ.СуммаВычета) <> 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	НалоговаяБаза,
			|	Период";
			ТаблицаРасчетаНарастающимИтогом = Запрос.Выполнить().Выгрузить();
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СтандартныеИмущественныеВычеты.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СУММА(СтандартныеИмущественныеВычеты.Сумма) КАК Сумма,
			|	НАЧАЛОПЕРИОДА(СтандартныеИмущественныеВычеты.МесяцНалоговогоПериода, МЕСЯЦ) КАК НачалоМесяца
			|ИЗ
			|	ВТСтандартныеИмущественныеВычеты КАК СтандартныеИмущественныеВычеты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиСПревышением КАК СотрудникиСПревышением
			|		ПО СтандартныеИмущественныеВычеты.ФизическоеЛицо = СотрудникиСПревышением.ФизическоеЛицо
			|			И (ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда) = СотрудникиСПревышением.НалоговаяБаза)
			|
			|СГРУППИРОВАТЬ ПО
			|	СтандартныеИмущественныеВычеты.ФизическоеЛицо,
			|	НАЧАЛОПЕРИОДА(СтандартныеИмущественныеВычеты.МесяцНалоговогоПериода, МЕСЯЦ)";
			ТаблицаВычетов = Запрос.Выполнить().Выгрузить();
			ИскатьВычеты = ТаблицаВычетов.Количество() > 0;
			Если ИскатьВычеты И ТаблицаВычетов.Количество() > 100 Тогда
				ТаблицаВычетов.Индексы.Добавить("ФизическоеЛицо,НачалоМесяца");
			КонецЕсли;
			ПоискВычетов = Новый Структура("ФизическоеЛицо,НачалоМесяца");
			
			ОблагаемыйДоходСНачалаГода = 0;
			ТекущееФизлицо = Неопределено;
			ТекущаяНалоговаяБаза = Неопределено;
			ТекущееНачалоМесяца = Неопределено;
			Для каждого СтрокаТаблицы Из ТаблицаРасчетаНарастающимИтогом Цикл
				Если ТекущееФизлицо <> СтрокаТаблицы.ФизическоеЛицо Или ТекущаяНалоговаяБаза <> СтрокаТаблицы.НалоговаяБаза Тогда
					ОблагаемыйДоходСНачалаГода = 0;
					ТекущееФизлицо = СтрокаТаблицы.ФизическоеЛицо;
					ТекущаяНалоговаяБаза = СтрокаТаблицы.НалоговаяБаза;
					ТекущееНачалоМесяца = Неопределено;
				КонецЕсли;
			    СтрокаТаблицы.ЭтоДеньПревышенияПредела = ОблагаемыйДоходСНачалаГода < ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.Предел И ОблагаемыйДоходСНачалаГода + СтрокаТаблицы.ОблагаемыйДоход > ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.Предел;
				ОблагаемыйДоходСНачалаГода = ОблагаемыйДоходСНачалаГода + СтрокаТаблицы.ОблагаемыйДоход;
				Если ИскатьВычеты И ТекущееНачалоМесяца <> СтрокаТаблицы.НачалоМесяца Тогда
					ЗаполнитьЗначенияСвойств(ПоискВычетов, СтрокаТаблицы);
					СтрокиВычетов = ТаблицаВычетов.НайтиСтроки(ПоискВычетов);
					Если СтрокиВычетов.Количество() > 0 Тогда
						ОблагаемыйДоходСНачалаГода = ОблагаемыйДоходСНачалаГода - СтрокиВычетов[0].Сумма;
					КонецЕсли;
					ТекущееНачалоМесяца = СтрокаТаблицы.НачалоМесяца;
				КонецЕсли;
				СтрокаТаблицы.ОблагаемыйДоходСНачалаГода = ОблагаемыйДоходСНачалаГода;
				СтрокаТаблицы.ПределПревышен = ОблагаемыйДоходСНачалаГода > ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.Предел;
			КонецЦикла;
			
			Запрос.УстановитьПараметр("РасчетНарастающимИтогом", ТаблицаРасчетаНарастающимИтогом); ТаблицаРасчетаНарастающимИтогом = Неопределено;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	РасчетНарастающимИтогом.ФизическоеЛицо КАК ФизическоеЛицо,
			|	РасчетНарастающимИтогом.Период КАК Период,
			|	РасчетНарастающимИтогом.НалоговаяБаза КАК НалоговаяБаза,
			|	РасчетНарастающимИтогом.ОблагаемыйДоход КАК ОблагаемыйДоход,
			|	РасчетНарастающимИтогом.ОблагаемыйДоходСНачалаГода КАК ОблагаемыйДоходСНачалаГода,
			|	РасчетНарастающимИтогом.ЭтоДеньПревышенияПредела КАК ЭтоДеньПревышенияПредела,
			|	РасчетНарастающимИтогом.ПределПревышен КАК ПределПревышен
			|ПОМЕСТИТЬ ВТРасчетНарастающимИтогом
			|ИЗ
			|	&РасчетНарастающимИтогом КАК РасчетНарастающимИтогом
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДоходыПоСтавкам.СтавкаНалога КАК СтавкаНалога,
			|	ДоходыПоСтавкам.Ставка КАК Ставка,
			|	ДоходыПоСтавкам.Регистратор КАК Регистратор,
			|	ДоходыПоСтавкам.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ДоходыПоСтавкам.Начисление КАК Начисление,
			|	ДоходыПоСтавкам.Период КАК Период,
			|	ДоходыПоСтавкам.НалоговаяБаза КАК НалоговаяБаза,
			|	ДоходыПоСтавкам.КатегорияДохода КАК КатегорияДохода,
			|	ДоходыПоСтавкам.КБК КАК КБК,
			|	ДоходыПоСтавкам.КодДохода КАК КодДохода,
			|	ДоходыПоСтавкам.СуммаДохода КАК СуммаДохода,
			|	ДоходыПоСтавкам.КодВычета КАК КодВычета,
			|	ДоходыПоСтавкам.СуммаВычета КАК СуммаВычета,
			|	ЕСТЬNULL(РасчетНарастающимИтогом.ОблагаемыйДоходСНачалаГода, 0) КАК ОблагаемыйДоходСНачалаГода,
			|	ЕСТЬNULL(РасчетНарастающимИтогом.ЭтоДеньПревышенияПредела, ЛОЖЬ) КАК ЭтоДеньПревышенияПредела,
			|	ЕСТЬNULL(РасчетНарастающимИтогом.ПределПревышен, ЛОЖЬ) КАК ПределПревышен,
			|	ЕСТЬNULL(РасчетНарастающимИтогом.ОблагаемыйДоход, 0) КАК ОблагаемыйДоходЗаДень
			|ПОМЕСТИТЬ ВТРасширенныеДанныеОДоходах
			|ИЗ
			|	ВТДоходыПоСтавкам КАК ДоходыПоСтавкам
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРасчетНарастающимИтогом КАК РасчетНарастающимИтогом
			|		ПО ДоходыПоСтавкам.ФизическоеЛицо = РасчетНарастающимИтогом.ФизическоеЛицо
			|			И ДоходыПоСтавкам.Период = РасчетНарастающимИтогом.Период
			|			И ДоходыПоСтавкам.НалоговаяБаза = РасчетНарастающимИтогом.НалоговаяБаза
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РасширенныеДанныеОДоходах.СтавкаНалога КАК СтавкаНалога,
			|	РасширенныеДанныеОДоходах.Ставка КАК Ставка,
			|	РасширенныеДанныеОДоходах.Регистратор КАК Регистратор,
			|	РасширенныеДанныеОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	РасширенныеДанныеОДоходах.Начисление КАК Начисление,
			|	РасширенныеДанныеОДоходах.Период КАК Период,
			|	РасширенныеДанныеОДоходах.НалоговаяБаза КАК НалоговаяБаза,
			|	РасширенныеДанныеОДоходах.КатегорияДохода КАК КатегорияДохода,
			|	РасширенныеДанныеОДоходах.КБК КАК КБК,
			|	РасширенныеДанныеОДоходах.КодДохода КАК КодДохода,
			|	СУММА(РасширенныеДанныеОДоходах.СуммаДохода) КАК СуммаДохода,
			|	РасширенныеДанныеОДоходах.КодВычета КАК КодВычета,
			|	СУММА(РасширенныеДанныеОДоходах.СуммаВычета) КАК СуммаВычета,
			|	СУММА(РасширенныеДанныеОДоходах.СуммаДохода - РасширенныеДанныеОДоходах.СуммаВычета) КАК ОблагаемаяСумма,
			|	РасширенныеДанныеОДоходах.ОблагаемыйДоходСНачалаГода КАК ОблагаемыйДоходСНачалаГода,
			|	РасширенныеДанныеОДоходах.ОблагаемыйДоходЗаДень КАК ОблагаемыйДоходЗаДень
			|ИЗ
			|	ВТРасширенныеДанныеОДоходах КАК РасширенныеДанныеОДоходах
			|ГДЕ
			|	РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела
			|
			|СГРУППИРОВАТЬ ПО
			|	РасширенныеДанныеОДоходах.СтавкаНалога,
			|	РасширенныеДанныеОДоходах.Ставка,
			|	РасширенныеДанныеОДоходах.Регистратор,
			|	РасширенныеДанныеОДоходах.ФизическоеЛицо,
			|	РасширенныеДанныеОДоходах.Начисление,
			|	РасширенныеДанныеОДоходах.Период,
			|	РасширенныеДанныеОДоходах.НалоговаяБаза,
			|	РасширенныеДанныеОДоходах.КатегорияДохода,
			|	РасширенныеДанныеОДоходах.КБК,
			|	РасширенныеДанныеОДоходах.КодДохода,
			|	РасширенныеДанныеОДоходах.КодВычета,
			|	РасширенныеДанныеОДоходах.ОблагаемыйДоходСНачалаГода,
			|	РасширенныеДанныеОДоходах.ОблагаемыйДоходЗаДень
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	НалоговаяБаза,
			|	КодДохода";
			
			ТаблицаРасчетаНарастающимИтогом = Запрос.Выполнить().Выгрузить();
			ДоходыСУточненнымиСтавками = ТаблицаРасчетаНарастающимИтогом.СкопироватьКолонки();
			
			ТекущееФизлицо = Неопределено;
			ТекущаяНалоговаяБаза = Неопределено;
			СтрокиРаспределения = Новый Массив;
			ОблагаемыйДоходДоПредела = 0;
			Для каждого СтрокаТаблицы Из ТаблицаРасчетаНарастающимИтогом Цикл
				Если ТекущееФизлицо <> СтрокаТаблицы.ФизическоеЛицо Или ТекущаяНалоговаяБаза <> СтрокаТаблицы.НалоговаяБаза Тогда
					Если ОблагаемыйДоходДоПредела <> 0 Тогда
						ВыделитьСуммыПревышенияПредела(ОблагаемыйДоходДоПредела, СтрокиРаспределения, ДоходыСУточненнымиСтавками)				
					КонецЕсли;
					СтрокиРаспределения = Новый Массив;
					ОблагаемыйДоходДоПредела = 0;
					ТекущееФизлицо = СтрокаТаблицы.ФизическоеЛицо;
					ТекущаяНалоговаяБаза = СтрокаТаблицы.НалоговаяБаза;
				КонецЕсли;
				Если ОблагаемыйДоходДоПредела = 0 Тогда
					ОблагаемыйДоходДоПредела = СтрокаТаблицы.ОблагаемыйДоходЗаДень - СтрокаТаблицы.ОблагаемыйДоходСНачалаГода + ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.Предел
				КонецЕсли;
				СтрокиРаспределения.Добавить(СтрокаТаблицы);
			КонецЦикла;
			Если ОблагаемыйДоходДоПредела <> 0 Тогда
				ВыделитьСуммыПревышенияПредела(ОблагаемыйДоходДоПредела, СтрокиРаспределения, ДоходыСУточненнымиСтавками)				
			КонецЕсли;
			
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаРасчетаНарастающимИтогом, ДоходыСУточненнымиСтавками); ТаблицаРасчетаНарастающимИтогом = Неопределено;
			
			Запрос.УстановитьПараметр("ДоходыСУточненнымиСтавками", ДоходыСУточненнымиСтавками); ДоходыСУточненнымиСтавками = Неопределено;
			Запрос.Текст =
			"УНИЧТОЖИТЬ ВТДоходыПоСтавкам
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДоходыСУточненнымиСтавками.СтавкаНалога КАК СтавкаНалога,
			|	ДоходыСУточненнымиСтавками.Ставка КАК Ставка,
			|	ДоходыСУточненнымиСтавками.Регистратор КАК Регистратор,
			|	ДоходыСУточненнымиСтавками.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ДоходыСУточненнымиСтавками.Начисление КАК Начисление,
			|	ДоходыСУточненнымиСтавками.Период КАК Период,
			|	ДоходыСУточненнымиСтавками.НалоговаяБаза КАК НалоговаяБаза,
			|	ДоходыСУточненнымиСтавками.КатегорияДохода КАК КатегорияДохода,
			|	ВЫБОР
			|		КОГДА ДоходыСУточненнымиСтавками.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
			|			ТОГДА &КБКсПревышения
			|		ИНАЧЕ ДоходыСУточненнымиСтавками.КБК
			|	КОНЕЦ КАК КБК,
			|	ДоходыСУточненнымиСтавками.КодДохода КАК КодДохода,
			|	ДоходыСУточненнымиСтавками.СуммаДохода КАК СуммаДохода,
			|	ДоходыСУточненнымиСтавками.КодВычета КАК КодВычета,
			|	ДоходыСУточненнымиСтавками.СуммаВычета КАК СуммаВычета
			|ПОМЕСТИТЬ ВТДоходыСУточненнымиСтавками
			|ИЗ
			|	&ДоходыСУточненнымиСтавками КАК ДоходыСУточненнымиСтавками
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА РасширенныеДанныеОДоходах.ПределПревышен
			|			ТОГДА &СтавкаЧисломСПревышения
			|		ИНАЧЕ РасширенныеДанныеОДоходах.СтавкаНалога
			|	КОНЕЦ КАК СтавкаНалога,
			|	ВЫБОР
			|		КОГДА РасширенныеДанныеОДоходах.ПределПревышен
			|			ТОГДА &СтавкаСПревышения
			|		ИНАЧЕ РасширенныеДанныеОДоходах.Ставка
			|	КОНЕЦ КАК Ставка,
			|	РасширенныеДанныеОДоходах.Регистратор КАК Регистратор,
			|	РасширенныеДанныеОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	РасширенныеДанныеОДоходах.Начисление КАК Начисление,
			|	РасширенныеДанныеОДоходах.Период КАК Период,
			|	РасширенныеДанныеОДоходах.НалоговаяБаза КАК НалоговаяБаза,
			|	РасширенныеДанныеОДоходах.КатегорияДохода КАК КатегорияДохода,
			|	ВЫБОР
			|		КОГДА РасширенныеДанныеОДоходах.ПределПревышен
			|			ТОГДА &КБКсПревышения
			|		ИНАЧЕ РасширенныеДанныеОДоходах.КБК
			|	КОНЕЦ КАК КБК,
			|	РасширенныеДанныеОДоходах.КодДохода КАК КодДохода,
			|	РасширенныеДанныеОДоходах.СуммаДохода КАК СуммаДохода,
			|	РасширенныеДанныеОДоходах.КодВычета КАК КодВычета,
			|	РасширенныеДанныеОДоходах.СуммаВычета КАК СуммаВычета
			|ПОМЕСТИТЬ ВТДоходыПоСтавкам
			|ИЗ
			|	ВТРасширенныеДанныеОДоходах КАК РасширенныеДанныеОДоходах
			|ГДЕ
			|	НЕ РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ДоходыСУточненнымиСтавками.СтавкаНалога,
			|	ДоходыСУточненнымиСтавками.Ставка,
			|	ДоходыСУточненнымиСтавками.Регистратор,
			|	ДоходыСУточненнымиСтавками.ФизическоеЛицо,
			|	ДоходыСУточненнымиСтавками.Начисление,
			|	ДоходыСУточненнымиСтавками.Период,
			|	ДоходыСУточненнымиСтавками.НалоговаяБаза,
			|	ДоходыСУточненнымиСтавками.КатегорияДохода,
			|	ДоходыСУточненнымиСтавками.КБК,
			|	ДоходыСУточненнымиСтавками.КодДохода,
			|	ДоходыСУточненнымиСтавками.СуммаДохода,
			|	ДоходыСУточненнымиСтавками.КодВычета,
			|	ДоходыСУточненнымиСтавками.СуммаВычета
			|ИЗ
			|	ВТДоходыСУточненнымиСтавками КАК ДоходыСУточненнымиСтавками";
			Запрос.Выполнить();
		КонецЕсли;
		
		Если ОписаниеТаблиц.Свойство("КоличествоПолучателейДохода") Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СведенияОДоходахНДФЛ.ФизическоеЛицо), 0) КАК П000020012003,
			|	СведенияОДоходахНДФЛ.Ставка КАК Ставка,
			|	СведенияОДоходахНДФЛ.КБК КАК КБК
			|ИЗ
			|	ВТДоходыПоСтавкам КАК СведенияОДоходахНДФЛ
			|ГДЕ
			|	СведенияОДоходахНДФЛ.СуммаДохода <> 0
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходахНДФЛ.Ставка,
			|	СведенияОДоходахНДФЛ.КБК";
			
			ОписаниеТаблиц.КоличествоПолучателейДохода = Запрос.Выполнить().Выгрузить()
			
		КонецЕсли;
	
		Если ОписаниеТаблиц.Свойство("Раздел2Доходы") Тогда
			
			ПоТрудовымДоговорам = Новый Массив;
			ПоТрудовымДоговорам.Добавить(Справочники.ВидыДоходовНДФЛ.КодДоходаПоУмолчанию);
			ПоТрудовымДоговорам.Добавить(Справочники.ВидыДоходовНДФЛ.Код2002);
			ПоТрудовымДоговорам.Добавить(Справочники.ВидыДоходовНДФЛ.Код2003);
			ПоТрудовымДоговорам.Добавить(УчетНДФЛПовтИсп.Доход2012());
			ПоТрудовымДоговорам.Добавить(Справочники.ВидыДоходовНДФЛ.Код2013);
			ПоТрудовымДоговорам.Добавить(Справочники.ВидыДоходовНДФЛ.Код2014);
			ПоТрудовымДоговорам.Добавить(УчетНДФЛПовтИсп.Доход2300());
			ПоТрудовымДоговорам.Добавить(Справочники.ВидыДоходовНДФЛ.Код2530);
			ПоТрудовымДоговорам.Добавить(Справочники.ВидыДоходовНДФЛ.Код2762);
			Запрос.УстановитьПараметр("ПоТрудовымДоговорам", ПоТрудовымДоговорам);
			
			ПоДоговорамГПХ = Новый Массив;
			ПоДоговорамГПХ.Добавить(УчетНДФЛПовтИсп.Доход2001());
			ПоДоговорамГПХ.Добавить(Справочники.ВидыДоходовНДФЛ.Код2010);
			Запрос.УстановитьПараметр("ПоДоговорамГПХ", ПоДоговорамГПХ);
			
			ПоДатамТрудовыхДоговоров = Новый Массив;
			ПоДатамТрудовыхДоговоров.Добавить(УчетНДФЛПовтИсп.Доход2710());
			ПоДатамТрудовыхДоговоров.Добавить(Справочники.ВидыДоходовНДФЛ.Код2720);
			ПоДатамТрудовыхДоговоров.Добавить(Справочники.ВидыДоходовНДФЛ.Код2760);
			ПоДатамТрудовыхДоговоров.Добавить(Справочники.ВидыДоходовНДФЛ.Код4800);
			Запрос.УстановитьПараметр("ПоДатамДоговоров", ПоДатамТрудовыхДоговоров);
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ФизЛица.ФизическоеЛицо КАК ФизическоеЛицо,
			|	&НачалоПериода КАК НачалоПериода,
			|	&ОкончаниеПериода КАК ОкончаниеПериода,
			|	&ГоловнаяОрганизация КАК ГоловнаяОрганизация
			|ИЗ
			|	ВТДоходы КАК ФизЛица";
			ФизЛицаОрганизаций = Запрос.Выполнить().Выгрузить();
			
			Запрос.УстановитьПараметр("ТаблицаДоговоров", КадровыйУчет.ДоговорыФизическихЛиц(ФизЛицаОрганизаций)); ФизЛицаОрганизаций = Неопределено; 
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ТаблицаДоговоров.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ТаблицаДоговоров.ВидДоговора КАК ВидДоговора,
			|	ТаблицаДоговоров.Окончание КАК Окончание,
			|	ТаблицаДоговоров.Начало КАК Начало
			|ПОМЕСТИТЬ ВТДоговоры
			|ИЗ
			|	&ТаблицаДоговоров КАК ТаблицаДоговоров
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Период КАК Период,
			|	НЕ МИНИМУМ(ФизЛица.ВидДоговора) КАК ЕстьТрудовойДоговор
			|ПОМЕСТИТЬ ВТДниДоговоров
			|ИЗ
			|	ВТДоходыПоСтавкам КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоговоры КАК ФизЛица
			|		ПО (ФизЛица.Начало <= СведенияОДоходахНДФЛ.Период)
			|			И (ФизЛица.Окончание = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|				ИЛИ ФизЛица.Окончание >= СведенияОДоходахНДФЛ.Период)
			|			И СведенияОДоходахНДФЛ.ФизическоеЛицо = ФизЛица.ФизическоеЛицо
			|ГДЕ
			|	ФизЛица.ФизическоеЛицо ЕСТЬ НЕ NULL 
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Период
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.СтавкаНалога КАК СтавкаНалога,
			|	СведенияОДоходахНДФЛ.Ставка КАК Ставка,
			|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Начисление КАК Начисление,
			|	СведенияОДоходахНДФЛ.КБК КАК КБК,
			|	СведенияОДоходахНДФЛ.КодДохода КАК КодДохода,
			|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
			|	ВЫБОР
			|		КОГДА СведенияОДоходахНДФЛ.КодДохода В (&ПоТрудовымДоговорам)
			|			ТОГДА СведенияОДоходахНДФЛ.СуммаДохода
			|		КОГДА ЕСТЬNULL(ДниДоговоров.ЕстьТрудовойДоговор, ЛОЖЬ)
			|				И СведенияОДоходахНДФЛ.КодДохода В (&ПоДатамДоговоров)
			|			ТОГДА СведенияОДоходахНДФЛ.СуммаДохода
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СуммаПоТрудовомуДоговору,
			|	ВЫБОР
			|		КОГДА СведенияОДоходахНДФЛ.КодДохода В (&ПоДоговорамГПХ)
			|			ТОГДА СведенияОДоходахНДФЛ.СуммаДохода
			|		КОГДА ДниДоговоров.ФизическоеЛицо ЕСТЬ NULL
			|			ТОГДА 0
			|		КОГДА НЕ ДниДоговоров.ЕстьТрудовойДоговор
			|				И СведенияОДоходахНДФЛ.КодДохода В (&ПоДатамДоговоров)
			|			ТОГДА СведенияОДоходахНДФЛ.СуммаДохода
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СуммаГПХ,
			|	ВЫБОР
			|		КОГДА СведенияОДоходахНДФЛ.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
			|			ТОГДА СведенияОДоходахНДФЛ.СуммаДохода
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СуммаДивидендов
			|ПОМЕСТИТЬ ВТПодробныеДоходы
			|ИЗ
			|	ВТДоходыПоСтавкам КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДниДоговоров КАК ДниДоговоров
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ДниДоговоров.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Период = ДниДоговоров.Период";
			Запрос.Выполнить();
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.КодДохода,
			|	СведенияОДоходах.Начисление,
			|	СведенияОДоходах.Регистратор,
			|	СведенияОДоходах.СтавкаНалога,
			|	СведенияОДоходах.Ставка,
			|	СведенияОДоходах.КБК,
			|	СУММА(СведенияОДоходах.СуммаПоТрудовомуДоговору) КАК П000020011203,
			|	СУММА(СведенияОДоходах.СуммаГПХ) КАК П000020011303,
			|	СУММА(СведенияОДоходах.СуммаДохода) КАК П000020011003,
			|	СУММА(СведенияОДоходах.СуммаДивидендов) КАК П000020011103
			|ИЗ
			|	ВТПодробныеДоходы КАК СведенияОДоходах
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.Ставка,
			|	СведенияОДоходах.КБК,
			|	СведенияОДоходах.КодДохода,
			|	СведенияОДоходах.Начисление,
			|	СведенияОДоходах.Регистратор,
			|	СведенияОДоходах.СтавкаНалога";
			
			МассивПолей = Новый Массив;
			Если Не ПодробныеДанные Тогда
				МассивПолей.Добавить("ФизическоеЛицо");
				МассивПолей.Добавить("КодДохода");
				МассивПолей.Добавить("Начисление");
				МассивПолей.Добавить("Регистратор");
			КонецЕсли;
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
			ОписаниеТаблиц.Раздел2Доходы = Запрос.Выполнить().Выгрузить()
			
		КонецЕсли;
		
		Если ОписаниеТаблиц.Свойство("Раздел2Вычеты") Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.КБК КАК КБК,
			|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.КодВычета КАК КодВычета,
			|	СведенияОДоходахНДФЛ.СтавкаНалога КАК СтавкаНалога,
			|	СведенияОДоходахНДФЛ.Ставка КАК Ставка,
			|	СведенияОДоходахНДФЛ.СуммаВычета КАК СуммаВычета
			|ПОМЕСТИТЬ ВТВычетыПоСтавкам
			|ИЗ
			|	ВТДоходыПоСтавкам КАК СведенияОДоходахНДФЛ
			|ГДЕ
			|	СведенияОДоходахНДФЛ.СуммаВычета <> 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	&ОсновнойКБК,
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор,
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо,
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
			|	13,
			|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13),
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма
			|ИЗ
			|	ВТСтандартныеИмущественныеВычеты КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ";
			Запрос.Выполнить();
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	СведенияОДоходах.Ставка КАК Ставка,
			|	СведенияОДоходах.КБК КАК КБК,
			|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходах.КодВычета КАК КодВычета,
			|	СведенияОДоходах.Регистратор КАК Регистратор,
			|	СведенияОДоходах.СтавкаНалога КАК СтавкаНалога,
			|	СУММА(СведенияОДоходах.СуммаВычета) КАК П000020013003
			|ИЗ
			|	ВТВычетыПоСтавкам КАК СведенияОДоходах
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.Ставка,
			|	СведенияОДоходах.КБК,
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.КодВычета,
			|	СведенияОДоходах.Регистратор,
			|	СведенияОДоходах.СтавкаНалога";
			
			МассивПолей = Новый Массив;
			Если Не ПодробныеДанные Тогда
				МассивПолей.Добавить("ФизическоеЛицо");
				МассивПолей.Добавить("КодВычета");
				МассивПолей.Добавить("Регистратор");
			КонецЕсли;
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
			ОписаниеТаблиц.Раздел2Вычеты = Запрос.Выполнить().Выгрузить()
			
		КонецЕсли;
		
		Если ОписаниеТаблиц.Свойство("Приложение1Налогоплательщики") Тогда

			НеобходимыеКадровыеДанные = Новый Массив();
			НеобходимыеКадровыеДанные.Добавить("ФизическоеЛицо");
			НеобходимыеКадровыеДанные.Добавить("ИНН");
			НеобходимыеКадровыеДанные.Добавить("Наименование");
			НеобходимыеКадровыеДанные.Добавить("Фамилия");
			НеобходимыеКадровыеДанные.Добавить("Имя");
			НеобходимыеКадровыеДанные.Добавить("Отчество");
			НеобходимыеКадровыеДанные.Добавить("СтатусНалогоплательщика");
			НеобходимыеКадровыеДанные.Добавить("ДатаРождения");	
			НеобходимыеКадровыеДанные.Добавить("ДокументВид");
			НеобходимыеКадровыеДанные.Добавить("ДокументСерия");
			НеобходимыеКадровыеДанные.Добавить("ДокументНомер");
			НеобходимыеКадровыеДанные.Добавить("ДокументСтранаВыдачи");
			НеобходимыеКадровыеДанные.Добавить("Страна");
			
			ОписаниеТаблиц.Приложение1Налогоплательщики = Новый ТаблицаЗначений;
			Если НомерКорректировки = 99 Тогда
			ИначеЕсли НомерКорректировки > 0 Тогда
			Иначе
				
				Запрос.Текст = 
				"ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо
				|ИЗ
				|	ВТПодробныеДоходы КАК СведенияОДоходах";
				КадровыйУчет.СоздатьНаДатуВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, Истина, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо"), НеобходимыеКадровыеДанные, ОкончаниеПериода);

				Запрос.Текст = 
				"ВЫБРАТЬ
				|	КадровыеДанныеФизЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
				|	КадровыеДанныеФизЛиц.ИНН КАК ИНН,
				|	КадровыеДанныеФизЛиц.Фамилия КАК Фамилия,
				|	КадровыеДанныеФизЛиц.Имя КАК Имя,
				|	КадровыеДанныеФизЛиц.Отчество КАК Отчество,
				|	КадровыеДанныеФизЛиц.СтатусНалогоплательщика КАК СтатусНалогоплательщика,
				|	КадровыеДанныеФизЛиц.ДатаРождения КАК ДатаРождения,
				|	ЕСТЬNULL(КадровыеДанныеФизЛиц.Страна, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) КАК Гражданство,
				|	КадровыеДанныеФизЛиц.ДокументСтранаВыдачи КАК СтранаВыдачиДокумента,
				|	КадровыеДанныеФизЛиц.ДокументВид КАК ВидДокумента,
				|	КадровыеДанныеФизЛиц.ДокументСерия КАК СерияДокумента,
				|	КадровыеДанныеФизЛиц.ДокументНомер КАК НомерДокумента,
				|	КадровыеДанныеФизЛиц.Наименование КАК Наименование
				|ИЗ
				|	ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизЛиц
				|
				|УПОРЯДОЧИТЬ ПО
				|	Наименование";	
				ОписаниеТаблиц.Приложение1Налогоплательщики = Запрос.Выполнить().Выгрузить();
				
			КонецЕсли;
		КонецЕсли;
		
		Если ОписаниеТаблиц.Свойство("Приложение1Доходы") Тогда
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	НАЧАЛОПЕРИОДА(СведенияОДоходах.Период, МЕСЯЦ) КАК Период,
			|	СведенияОДоходах.СтавкаНалога КАК Ставка,
			|	СведенияОДоходах.КодДохода.КодПрименяемыйВНалоговойОтчетностиС2010Года КАК П000П1М500002,
			|	СУММА(СведенияОДоходах.СуммаДохода) КАК П000П1М500003,
			|	СведенияОДоходах.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2016Года КАК П000П1М600004,
			|	СУММА(СведенияОДоходах.СуммаВычета) КАК П000П1М600005
			|ИЗ
			|	ВТДоходыПоСтавкам КАК СведенияОДоходах
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.КодДохода.КодПрименяемыйВНалоговойОтчетностиС2010Года,
			|	СведенияОДоходах.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2016Года,
			|	СведенияОДоходах.СтавкаНалога,
			|	НАЧАЛОПЕРИОДА(СведенияОДоходах.Период, МЕСЯЦ)
			|
			|ИМЕЮЩИЕ
			|	(СУММА(СведенияОДоходах.СуммаДохода) <> 0
			|		ИЛИ СУММА(СведенияОДоходах.СуммаВычета) <> 0)
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	Ставка,
			|	Период,
			|	П000П1М500002";
			ОписаниеТаблиц.Приложение1Доходы = Запрос.Выполнить().Выгрузить();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОписаниеТаблиц.Свойство("Приложение1Вычеты") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОДоходах.СтавкаНалога КАК Ставка,
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходах.КодВычета.ГруппаВычета КАК ГруппаВычета,
		|	СведенияОДоходах.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2016Года КАК П000П1М200001,
		|	СУММА(СведенияОДоходах.СуммаВычета) КАК П000П1М200002
		|ИЗ
		|	ВТВычетыПоСтавкам КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.КодВычета.ГруппаВычета <> ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.СтавкаНалога,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.КодВычета.ГруппаВычета,
		|	СведенияОДоходах.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2016Года";
		ОписаниеТаблиц.Приложение1Вычеты = Запрос.Выполнить().Выгрузить()
	КонецЕсли;
	
	Если ОписаниеТаблиц.Свойство("Раздел2Налоги") Или ОписаниеТаблиц.Свойство("Приложение1Итоги") Или ОписаниеТаблиц.Свойство("Приложение1УведомленияОВычетах") Тогда
		
		УчетНДФЛ.СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТНалоги", "УчитыватьИзмененияСтатусаДляОтчетности", ОкончаниеПериода, "ВТСтавкаНДФЛПоНалогам");
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НДФЛ.КБК КАК КБК,
		|	НДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом * 100 КАК СтавкаНалога,
		|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
		|	ВЫБОР
		|		КОГДА НДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|				И (НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
		|					ИЛИ НДФЛ.Регистратор <> НДФЛ.ДокументОснование)
		|			ТОГДА НДФЛ.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Начислено,
		|	ВЫБОР
		|		КОГДА НДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|				И (НДФЛ.КатегорияДохода В (ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке05), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке10), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке12))
		|					ИЛИ НДФЛ.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходыПредыдущихРедакций)
		|						И НДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09))
		|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
		|			ТОГДА НДФЛ.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НачисленоПоДивидендам,
		|	ВЫБОР
		|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
		|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
		|			ТОГДА НДФЛ.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЗачтеноАвансов,
		|	ВЫБОР
		|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
		|				И (НДФЛ.ДатаУдержания МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|			ТОГДА НДФЛ.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Удержано,
		|	ВЫБОР
		|		КОГДА НДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|				И (НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
		|					ИЛИ НДФЛ.Регистратор <> НДФЛ.ДокументОснование)
		|			ТОГДА НДФЛ.Сумма
		|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
		|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|			ТОГДА -НДФЛ.Сумма
		|		КОГДА (НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
		|				ИЛИ НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей))
		|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
		|			ТОГДА -НДФЛ.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Сальдо,
		|	ВЫБОР
		|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
		|				И (НДФЛ.ДатаУдержания МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|			ТОГДА -НДФЛ.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Возвращено
		|ПОМЕСТИТЬ ВТНалогиПоСтавкам
		|ИЗ
		|	ВТНалоги КАК НДФЛ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоНалогам КАК СтавкаНДФЛПоСтавкеРезидента
		|		ПО НДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
		|			И НДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
		|			И НДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
		|			И НДФЛ.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&КБКсПревышения,
		|	НДФЛ.ФизическоеЛицо,
		|	15,
		|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15),
		|	ВЫБОР
		|		КОГДА НДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|				И (НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
		|					ИЛИ НДФЛ.Регистратор <> НДФЛ.ДокументОснование)
		|			ТОГДА НДФЛ.СуммаСПревышения
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|				И (НДФЛ.КатегорияДохода В (ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке05), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке10), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке12))
		|					ИЛИ НДФЛ.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходыПредыдущихРедакций)
		|						И НДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09))
		|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
		|			ТОГДА НДФЛ.СуммаСПревышения
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
		|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
		|			ТОГДА НДФЛ.СуммаСПревышения
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
		|				И (НДФЛ.ДатаУдержания МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|			ТОГДА НДФЛ.СуммаСПревышения
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|				И (НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
		|					ИЛИ НДФЛ.Регистратор <> НДФЛ.ДокументОснование)
		|			ТОГДА НДФЛ.СуммаСПревышения
		|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
		|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|			ТОГДА -НДФЛ.СуммаСПревышения
		|		КОГДА (НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
		|				ИЛИ НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей))
		|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
		|			ТОГДА -НДФЛ.СуммаСПревышения
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
		|				И (НДФЛ.ДатаУдержания МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|			ТОГДА -НДФЛ.СуммаСПревышения
		|		ИНАЧЕ 0
		|	КОНЕЦ
		|ИЗ
		|	ВТНалоги КАК НДФЛ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Налоги.СтавкаНалога КАК СтавкаНалога,
		|	СУММА(Налоги.Сальдо) КАК НеУдержано,
		|	Налоги.КБК КАК КБК
		|ПОМЕСТИТЬ ВТНеУдержано
		|ИЗ
		|	ВТНалогиПоСтавкам КАК Налоги
		|
		|СГРУППИРОВАТЬ ПО
		|	Налоги.ФизическоеЛицо,
		|	Налоги.СтавкаНалога,
		|	Налоги.КБК
		|
		|ИМЕЮЩИЕ
		|	СУММА(Налоги.Сальдо) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Налоги.СтавкаНалога КАК СтавкаНалога,
		|	Налоги.КБК КАК КБК,
		|	-СУММА(Налоги.Сальдо) КАК ИзлишнеУдержано
		|ПОМЕСТИТЬ ВТИзлишнеУдержаноПоКБК
		|ИЗ
		|	ВТНалогиПоСтавкам КАК Налоги
		|
		|СГРУППИРОВАТЬ ПО
		|	Налоги.ФизическоеЛицо,
		|	Налоги.СтавкаНалога,
		|	Налоги.КБК
		|
		|ИМЕЮЩИЕ
		|	СУММА(Налоги.Сальдо) < 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Налоги.СтавкаНалога КАК СтавкаНалога,
		|	СУММА(Налоги.Начислено) КАК Начислено,
		|	СУММА(Налоги.НачисленоПоДивидендам) КАК НачисленоПоДивидендам,
		|	СУММА(Налоги.ЗачтеноАвансов) КАК ЗачтеноАвансов,
		|	СУММА(Налоги.Удержано) КАК Удержано,
		|	СУММА(Налоги.Возвращено) КАК Возвращено,
		|	ЕСТЬNULL(МАКСИМУМ(ПоФизлицам.НеУдержано), 0) КАК НеУдержано,
		|	ЕСТЬNULL(МАКСИМУМ(ИзлишнеУдержаноПоКБК.ИзлишнеУдержано), 0) КАК ИзлишнеУдержано,
		|	Налоги.Ставка КАК Ставка,
		|	Налоги.КБК КАК КБК
		|ПОМЕСТИТЬ ВТДанныеПоФизлицам
		|ИЗ
		|	ВТНалогиПоСтавкам КАК Налоги
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНеУдержано КАК ПоФизлицам
		|		ПО Налоги.ФизическоеЛицо = ПоФизлицам.ФизическоеЛицо
		|			И Налоги.СтавкаНалога = ПоФизлицам.СтавкаНалога
		|			И Налоги.КБК = ПоФизлицам.КБК
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИзлишнеУдержаноПоКБК КАК ИзлишнеУдержаноПоКБК
		|		ПО Налоги.ФизическоеЛицо = ИзлишнеУдержаноПоКБК.ФизическоеЛицо
		|			И Налоги.КБК = ИзлишнеУдержаноПоКБК.КБК
		|			И Налоги.СтавкаНалога = ИзлишнеУдержаноПоКБК.СтавкаНалога
		|ГДЕ
		|	(Налоги.Начислено <> 0
		|			ИЛИ Налоги.ЗачтеноАвансов <> 0
		|			ИЛИ Налоги.Удержано <> 0
		|			ИЛИ Налоги.Возвращено <> 0
		|			ИЛИ ИзлишнеУдержаноПоКБК.ИзлишнеУдержано <> 0)
		|
		|СГРУППИРОВАТЬ ПО
		|	Налоги.ФизическоеЛицо,
		|	Налоги.СтавкаНалога,
		|	Налоги.Ставка,
		|	Налоги.КБК";
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Если ОписаниеТаблиц.Свойство("Раздел2Налоги") Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СУММА(Налоги.Начислено) КАК П000020014003,
		|	СУММА(Налоги.НачисленоПоДивидендам) КАК П000020014103,
		|	СУММА(Налоги.ЗачтеноАвансов) КАК П000020015003,
		|	СУММА(Налоги.Удержано) КАК П000020016003,
		|	СУММА(Налоги.НеУдержано) КАК П000020017003,
		|	СУММА(Налоги.Возвращено) КАК П000020019003,
		|	СУММА(Налоги.ИзлишнеУдержано) КАК П000020018003,
		|	Налоги.СтавкаНалога КАК СтавкаНалога,
		|	Налоги.Ставка КАК Ставка,
		|	Налоги.КБК КАК КБК
		|ИЗ
		|	ВТДанныеПоФизлицам КАК Налоги
		|ГДЕ
		|	(Налоги.Начислено <> 0
		|			ИЛИ Налоги.ЗачтеноАвансов <> 0
		|			ИЛИ Налоги.Удержано <> 0
		|			ИЛИ Налоги.Возвращено <> 0)
		|
		|СГРУППИРОВАТЬ ПО
		|	Налоги.СтавкаНалога,
		|	Налоги.Ставка,
		|	Налоги.КБК,
		|	Налоги.ФизическоеЛицо";
		МассивПолей = Новый Массив;
		Если Не ПодробныеДанные Тогда
			МассивПолей.Добавить("ФизическоеЛицо");
		КонецЕсли;
		Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, "Налоги");
		ОписаниеТаблиц.Раздел2Налоги = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	Если ОписаниеТаблиц.Свойство("Приложение1Итоги") Тогда
		
		УчетНДФЛ.СоздатьВТСтавкиНалогаЧислом(Запрос.МенеджерВременныхТаблиц);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Налоги.СтавкаНалога КАК СтавкаНалога,
		|	-СУММА(Налоги.Сальдо) КАК ИзлишнеУдержано
		|ПОМЕСТИТЬ ВТИзлишнеУдержано
		|ИЗ
		|	ВТНалогиПоСтавкам КАК Налоги
		|
		|СГРУППИРОВАТЬ ПО
		|	Налоги.ФизическоеЛицо,
		|	Налоги.СтавкаНалога
		|
		|ИМЕЮЩИЕ
		|	СУММА(Налоги.Сальдо) < 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеИтогов.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ДанныеИтогов.Ставка КАК Ставка,
		|	ДанныеИтогов.П000П1М100001 КАК П000П1М100001,
		|	СУММА(ДанныеИтогов.П000П1М100002) КАК П000П1М100002,
		|	СУММА(ДанныеИтогов.П000П1М100003) КАК П000П1М100003,
		|	СУММА(ДанныеИтогов.П000П1М100004) КАК П000П1М100004,
		|	СУММА(ДанныеИтогов.П000П1М100005) КАК П000П1М100005,
		|	СУММА(ДанныеИтогов.П000П1М100006) КАК П000П1М100006,
		|	СУММА(ДанныеИтогов.П000П1М100007) КАК П000П1М100007,
		|	СУММА(ДанныеИтогов.П000П1М100008) КАК П000П1М100008
		|ИЗ
		|	(ВЫБРАТЬ
		|		Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
		|		Налоги.СтавкаНалога КАК Ставка,
		|		Налоги.СтавкаНалога КАК П000П1М100001,
		|		0 КАК П000П1М100002,
		|		0 КАК П000П1М100003,
		|		Налоги.Начислено КАК П000П1М100004,
		|		Налоги.Удержано КАК П000П1М100005,
		|		Налоги.ЗачтеноАвансов КАК П000П1М100006,
		|		0 КАК П000П1М100007,
		|		0 КАК П000П1М100008
		|	ИЗ
		|		ВТДанныеПоФизлицам КАК Налоги
		|	ГДЕ
		|		(Налоги.Начислено <> 0
		|				ИЛИ Налоги.ЗачтеноАвансов <> 0
		|				ИЛИ Налоги.Удержано <> 0)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СведенияОДоходах.ФизическоеЛицо,
		|		СведенияОДоходах.СтавкаНалога,
		|		СведенияОДоходах.СтавкаНалога,
		|		СведенияОДоходах.СуммаДохода,
		|		СведенияОДоходах.СуммаДохода,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		ВТДоходыПоСтавкам КАК СведенияОДоходах
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СведенияОДоходах.ФизическоеЛицо,
		|		СведенияОДоходах.СтавкаНалога,
		|		СведенияОДоходах.СтавкаНалога,
		|		0,
		|		-СведенияОДоходах.СуммаВычета,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		ВТВычетыПоСтавкам КАК СведенияОДоходах
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Налоги.ФизическоеЛицо,
		|		Налоги.СтавкаНалога,
		|		Налоги.СтавкаНалога,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		Налоги.ИзлишнеУдержано
		|	ИЗ
		|		ВТИзлишнеУдержано КАК Налоги
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо,
		|		СтавкиНалогаЧислом.Размер * 100,
		|		СтавкиНалогаЧислом.Размер * 100,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма,
		|		0
		|	ИЗ
		|		РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНалогаЧислом КАК СтавкиНалогаЧислом
		|			ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Ставка = СтавкиНалогаЧислом.СтавкаНалогообложения
		|	ГДЕ
		|		РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ДатаПодписи
		|		И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
		|		И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоПериода И &ОкончаниеПериода) КАК ДанныеИтогов
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеИтогов.Ставка,
		|	ДанныеИтогов.ФизическоеЛицо,
		|	ДанныеИтогов.П000П1М100001";
					
		ОписаниеТаблиц.Приложение1Итоги = Запрос.Выполнить().Выгрузить()
		
	КонецЕсли;
	
	Если ОписаниеТаблиц.Свойство("Приложение1УведомленияОВычетах") Тогда
		
		НалоговыйПериод = Год(ОкончаниеПериода);
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	ВТВычетыПоСтавкам КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.КодВычета.ГруппаВычета <> ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.ПустаяСсылка)";
		ДанныеУведомлений = УчетНДФЛ.ДанныеУведомленийНаВычеты(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо"), НалоговыйПериод, Организация);
		ДанныеУведомлений.Колонки.Сотрудник.Имя = "ФизическоеЛицо";
		ОписаниеТаблиц.Приложение1УведомленияОВычетах = ДанныеУведомлений;
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	ВТДанныеПоФизлицам КАК Налоги
		|ГДЕ
		|	Налоги.ЗачтеноАвансов <> 0";
		ДанныеУведомлений = УчетНДФЛ.ДанныеУведомленийНаЗачетАвансовыхПлатежей(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо"), НалоговыйПериод, Организация);
		ДанныеУведомлений.Колонки.Добавить("ГруппаВычета", Новый ОписаниеТипов("ПеречислениеСсылка.ГруппыВычетовПоНДФЛ"));
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеУведомлений, ОписаниеТаблиц.Приложение1УведомленияОВычетах);
		ОписаниеТаблиц.Приложение1УведомленияОВычетах.Колонки.НомерУведомления.Имя = "П000П1М300002";
		ОписаниеТаблиц.Приложение1УведомленияОВычетах.Колонки.ДатаУведомления.Имя = "П000П1М300003";
		ОписаниеТаблиц.Приложение1УведомленияОВычетах.Колонки.КодНалоговогоОрганаУведомления.Имя = "П000П1М300004";
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчетПоказателей_6НДФЛ_2017Кв1(НачалоПериода, ОкончаниеПериода, ДатаПодписи, Организация, РегистрацияВНалоговомОргане, ОписаниеТаблиц, ПодробныеДанные, НомерКорректировки)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадры.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	Запрос.УстановитьПараметр("НачалоПредыдущегоГода", ДобавитьМесяц(НачалоПериода, -12));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(НачалоПериода));
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("ДатаПодписи", КонецДня(ДатаПодписи));
	Запрос.УстановитьПараметр("ОкончаниеПериодаОсмотраДоходовВычетов", ?(КонецГода(ОкончаниеПериода) = ОкончаниеПериода Или ЗначениеЗаполнено(НомерКорректировки), Макс(ДатаПодписи, ОкончаниеПериода), ОкончаниеПериода));
	
	Если ОписаниеТаблиц.Свойство("Раздел1Доходы") Или ОписаниеТаблиц.Свойство("Раздел1Вычеты") Или ОписаниеТаблиц.Свойство("КоличествоПолучателейДохода") Тогда
		
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
		|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК Период,
		|	СведенияОДоходахНДФЛ.КатегорияДохода КАК КатегорияДохода,
		|	СведенияОДоходахНДФЛ.КодДохода КАК КодДохода,
		|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
		|	СведенияОДоходахНДФЛ.Начисление КАК Начисление,
		|	СведенияОДоходахНДФЛ.КодВычета КАК КодВычета,
		|	СведенияОДоходахНДФЛ.СуммаВычета КАК СуммаВычета,
		|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ КАК ИсточникДоходаЗаПределамиРФ
		|ПОМЕСТИТЬ ВТДоходы
		|ИЗ
		|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
		|ГДЕ
		|	СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ДатаПодписи
		|	И (СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ОкончаниеПериодаОсмотраДоходовВычетов
		|			ИЛИ СведенияОДоходахНДФЛ.Регистратор <> СведенияОДоходахНДФЛ.ДокументОснование)
		|	И СведенияОДоходахНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
		|	И СведенияОДоходахНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|	И (СведенияОДоходахНДФЛ.СуммаДохода <> 0
		|			ИЛИ СведенияОДоходахНДФЛ.СуммаВычета <> 0)";
		Запрос.Выполнить();
		
		УчетНДФЛ.СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТДоходы", "УчитыватьИзмененияСтатусаДляОтчетности", ОкончаниеПериода);
		
		Если ОписаниеТаблиц.Свойство("КоличествоПолучателейДохода") Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СведенияОДоходахНДФЛ.ФизическоеЛицо), 0) КАК П000010006001
			|ИЗ
			|	ВТДоходы КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
			|			И СведенияОДоходахНДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
			|			И СведенияОДоходахНДФЛ.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
			|ГДЕ
			|	СведенияОДоходахНДФЛ.СуммаДохода <> 0
			|	И (НЕ СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ
			|			ИЛИ СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))";
			
			ОписаниеТаблиц.КоличествоПолучателейДохода = Запрос.Выполнить().Выгрузить()
			
		КонецЕсли;
	
		Если ОписаниеТаблиц.Свойство("Раздел1Доходы") Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.Регистратор,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.КодДохода,
			|	СведенияОДоходахНДФЛ.Начисление,
			|	СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом * 100 КАК СтавкаНалога,
			|	СведенияОДоходахНДФЛ.СуммаДохода,
			|	ВЫБОР
			|		КОГДА СведенияОДоходахНДФЛ.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
			|			ТОГДА СведенияОДоходахНДФЛ.СуммаДохода
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СуммаДивидендов
			|ПОМЕСТИТЬ ВТДоходыПоСтавкам
			|ИЗ
			|	ВТДоходы КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
			|			И СведенияОДоходахНДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
			|			И СведенияОДоходахНДФЛ.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
			|ГДЕ
			|	СведенияОДоходахНДФЛ.СуммаДохода <> 0
			|	И (НЕ СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ
			|			ИЛИ СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))";
			Запрос.Выполнить();
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.КодДохода,
			|	СведенияОДоходах.Начисление,
			|	СведенияОДоходах.Регистратор,
			|	СведенияОДоходах.СтавкаНалога КАК П000010001001,
			|	СведенияОДоходах.СтавкаНалога,
			|	СУММА(СведенияОДоходах.СуммаДохода) КАК П000010002001,
			|	СУММА(СведенияОДоходах.СуммаДивидендов) КАК П000010002501
			|ИЗ
			|	ВТДоходыПоСтавкам КАК СведенияОДоходах
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.КодДохода,
			|	СведенияОДоходах.Начисление,
			|	СведенияОДоходах.Регистратор,
			|	СведенияОДоходах.СтавкаНалога";
			
			МассивПолей = Новый Массив;
			Если Не ПодробныеДанные Тогда
				МассивПолей.Добавить("ФизическоеЛицо");
				МассивПолей.Добавить("КодДохода");
				МассивПолей.Добавить("Начисление");
				МассивПолей.Добавить("Регистратор");
			КонецЕсли;
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
			ОписаниеТаблиц.Раздел1Доходы = Запрос.Выполнить().Выгрузить()
			
		КонецЕсли;
		
		Если ОписаниеТаблиц.Свойство("Раздел1Вычеты") Тогда
			
			Запрос.УстановитьПараметр("ГодПериода", Год(ОкончаниеПериода));
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.Регистратор,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.КодВычета,
			|	СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом * 100 КАК СтавкаНалога,
			|	СведенияОДоходахНДФЛ.СуммаВычета
			|ПОМЕСТИТЬ ВТВычетыПоСтавкам
			|ИЗ
			|	ВТДоходы КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
			|			И СведенияОДоходахНДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
			|			И СведенияОДоходахНДФЛ.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
			|ГДЕ
			|	СведенияОДоходахНДФЛ.СуммаВычета <> 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор,
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо,
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
			|	13,
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма
			|ИЗ
			|	РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
			|ГДЕ
			|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ОкончаниеПериодаОсмотраДоходовВычетов
			|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоПериода И &ОкончаниеПериода
			|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
			|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
			|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма <> 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ИмущественныеВычетыНДФЛ.Регистратор,
			|	ИмущественныеВычетыНДФЛ.ФизическоеЛицо,
			|	ИмущественныеВычетыНДФЛ.КодВычета,
			|	13,
			|	ИмущественныеВычетыНДФЛ.Сумма
			|ИЗ
			|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычетыНДФЛ
			|ГДЕ
			|	ИмущественныеВычетыНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ОкончаниеПериода
			|	И ИмущественныеВычетыНДФЛ.МесяцРегистрации <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|	И ИмущественныеВычетыНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
			|	И ИмущественныеВычетыНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
			|	И ИмущественныеВычетыНДФЛ.Сумма <> 0
			|	И ИмущественныеВычетыНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
			|	И ИмущественныеВычетыНДФЛ.Год = &ГодПериода";
			Запрос.Выполнить();
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.КодВычета,
			|	СведенияОДоходах.Регистратор,
			|	СведенияОДоходах.СтавкаНалога КАК П000010001001,
			|	СведенияОДоходах.СтавкаНалога,
			|	СУММА(СведенияОДоходах.СуммаВычета) КАК П000010003001
			|ИЗ
			|	ВТВычетыПоСтавкам КАК СведенияОДоходах
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.ФизическоеЛицо,
			|	СведенияОДоходах.КодВычета,
			|	СведенияОДоходах.Регистратор,
			|	СведенияОДоходах.СтавкаНалога";
			
			МассивПолей = Новый Массив;
			Если Не ПодробныеДанные Тогда
				МассивПолей.Добавить("ФизическоеЛицо");
				МассивПолей.Добавить("КодВычета");
				МассивПолей.Добавить("Регистратор");
			КонецЕсли;
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей);
			ОписаниеТаблиц.Раздел1Вычеты = Запрос.Выполнить().Выгрузить()
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОписаниеТаблиц.Свойство("Раздел1Налоги") Или ОписаниеТаблиц.Свойство("Раздел2") Тогда
		
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода КАК КатегорияДохода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК Период,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК ДатаПолученияДохода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания КАК ВариантУдержания,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения КАК ВидДвижения,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СрокПеречисления КАК СрокПеречисления,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма КАК Сумма,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период КАК ДатаУдержания,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаВыплаченногоДохода КАК СуммаВыплаченногоДохода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование КАК ДокументОснование,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КрайнийСрокУплаты КАК КрайнийСрокУплаты,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РасчетМежрасчетногоПериода КАК РасчетМежрасчетногоПериода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УчитыватьВыплаченныйДоходВ6НДФЛ КАК УчитыватьВыплаченныйДоходВ6НДФЛ
		|ПОМЕСТИТЬ ВТНалоги
		|ИЗ
		|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
		|ГДЕ
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ДатаПодписи
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
		|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|	И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма <> 0
		|			ИЛИ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.УчитыватьВыплаченныйДоходВ6НДФЛ
		|				И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаВыплаченногоДохода <> 0)";
		Запрос.Выполнить();
		
		Если ОписаниеТаблиц.Свойство("Раздел1Налоги") Тогда
			
			УчетНДФЛ.СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТНалоги", "УчитыватьИзмененияСтатусаДляОтчетности", ОкончаниеПериода);
			
			Запрос.УстановитьПараметр("ДатаПервогоОтчетногоПериода", '20160101');
			Запрос.Текст =
			"ВЫБРАТЬ
			|	НДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом * 100 КАК СтавкаНалога,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И (НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|					ИЛИ НДФЛ.Регистратор <> НДФЛ.ДокументОснование)
			|			ТОГДА НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Начислено,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И (НДФЛ.КатегорияДохода В (ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке05), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке10), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке12))
			|					ИЛИ НДФЛ.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходыПредыдущихРедакций)
			|						И НДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09))
			|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|			ТОГДА НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК НачисленоПоДивидендам,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|			ТОГДА НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК ЗачтеноАвансов,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|				И (НДФЛ.ДатаУдержания МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И НДФЛ.ДатаПолученияДохода >= &ДатаПервогоОтчетногоПериода
			|			ТОГДА НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Удержано,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И (НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|					ИЛИ НДФЛ.Регистратор <> НДФЛ.ДокументОснование)
			|			ТОГДА НДФЛ.Сумма
			|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|			ТОГДА -НДФЛ.Сумма
			|		КОГДА (НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
			|				ИЛИ НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей))
			|				И (НДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|				И НДФЛ.ДатаУдержания <= &ОкончаниеПериодаОсмотраДоходовВычетов
			|			ТОГДА -НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Сальдо,
			|	ВЫБОР
			|		КОГДА НДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
			|				И (НДФЛ.ДатаУдержания МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
			|			ТОГДА -НДФЛ.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Возвращено
			|ПОМЕСТИТЬ ВТНалогиПоСтавкам
			|ИЗ
			|	ВТНалоги КАК НДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
			|		ПО НДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
			|			И НДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
			|			И НДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
			|			И НДФЛ.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
			|	Налоги.СтавкаНалога КАК СтавкаНалога,
			|	СУММА(Налоги.Сальдо) КАК НеУдержано
			|ПОМЕСТИТЬ ВТНеУдержано
			|ИЗ
			|	ВТНалогиПоСтавкам КАК Налоги
			|
			|СГРУППИРОВАТЬ ПО
			|	Налоги.ФизическоеЛицо,
			|	Налоги.СтавкаНалога
			|
			|ИМЕЮЩИЕ
			|	СУММА(Налоги.Сальдо) > 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
			|	Налоги.СтавкаНалога КАК СтавкаНалога,
			|	СУММА(Налоги.Начислено) КАК Начислено,
			|	СУММА(Налоги.НачисленоПоДивидендам) КАК НачисленоПоДивидендам,
			|	СУММА(Налоги.ЗачтеноАвансов) КАК ЗачтеноАвансов,
			|	СУММА(Налоги.Удержано) КАК Удержано,
			|	ЕСТЬNULL(МАКСИМУМ(ПоФизлицам.НеУдержано), 0) КАК НеУдержано,
			|	СУММА(Налоги.Возвращено) КАК Возвращено
			|ПОМЕСТИТЬ ВТДанныеПоФизлицам
			|ИЗ
			|	ВТНалогиПоСтавкам КАК Налоги
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНеУдержано КАК ПоФизлицам
			|		ПО Налоги.ФизическоеЛицо = ПоФизлицам.ФизическоеЛицо
			|			И Налоги.СтавкаНалога = ПоФизлицам.СтавкаНалога
			|ГДЕ
			|	(Налоги.Начислено <> 0
			|			ИЛИ Налоги.ЗачтеноАвансов <> 0
			|			ИЛИ Налоги.Удержано <> 0
			|			ИЛИ Налоги.Возвращено <> 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	Налоги.ФизическоеЛицо,
			|	Налоги.СтавкаНалога
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТСтавкаНДФЛПоСтавкеРезидента";
			Запрос.Выполнить();
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Налоги.ФизическоеЛицо,
			|	Налоги.СтавкаНалога КАК П000010001001,
			|	Налоги.СтавкаНалога,
			|	СУММА(Налоги.Начислено) КАК П000010004001,
			|	СУММА(Налоги.НачисленоПоДивидендам) КАК П000010004501,
			|	СУММА(Налоги.ЗачтеноАвансов) КАК П000010005001,
			|	СУММА(Налоги.Удержано) КАК П000010007001,
			|	СУММА(Налоги.НеУдержано) КАК П000010008001,
			|	СУММА(Налоги.Возвращено) КАК П000010009001
			|ИЗ
			|	ВТДанныеПоФизлицам КАК Налоги
			|ГДЕ
			|	(Налоги.Начислено <> 0
			|			ИЛИ Налоги.ЗачтеноАвансов <> 0
			|			ИЛИ Налоги.Удержано <> 0
			|			ИЛИ Налоги.Возвращено <> 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	Налоги.ФизическоеЛицо,
			|	Налоги.СтавкаНалога";
			МассивПолей = Новый Массив;
			Если Не ПодробныеДанные Тогда
				МассивПолей.Добавить("ФизическоеЛицо");
			КонецЕсли;
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, "Налоги");
			ОписаниеТаблиц.Раздел1Налоги = Запрос.Выполнить().Выгрузить();
			
		КонецЕсли;
		
		Если ОписаниеТаблиц.Свойство("Раздел2") Тогда
			
			Запрос.УстановитьПараметр("НачалоОтчетногоКвартала", НачалоКвартала(ОкончаниеПериода));
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	МАКСИМУМ(ДатыУчета.ДатаПолученияДохода) КАК ПоздняяДатаПолученияДохода,
			|	МИНИМУМ(ДатыУчета.ДатаПолученияДохода) КАК РанняяДатаПолученияДохода
			|ИЗ
			|	ВТНалоги КАК ДатыУчета
			|ГДЕ
			|	ДатыУчета.ДатаУдержания <= &ОкончаниеПериода";
			Выборка = Запрос.Выполнить().Выбрать();
			РанняяДатаПолученияДохода = НачалоПериода;
			ПоздняяДатаПолученияДохода = ДобавитьМесяц(ОкончаниеПериода, 1);
			Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.РанняяДатаПолученияДохода) Тогда
				РанняяДатаПолученияДохода = Мин(РанняяДатаПолученияДохода, Выборка.РанняяДатаПолученияДохода);
				ПоздняяДатаПолученияДохода = Макс(ПоздняяДатаПолученияДохода, Выборка.ПоздняяДатаПолученияДохода);
			КонецЕсли;
			Запрос.УстановитьПараметр("РанняяДатаПолученияДохода", РанняяДатаПолученияДохода);
			Запрос.УстановитьПараметр("ПоздняяДатаПолученияДохода", ПоздняяДатаПолученияДохода);
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.КатегорияДохода КАК КатегорияДохода,
			|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК Период,
			|	СведенияОДоходахНДФЛ.Период КАК ПериодРегистрации,
			|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
			|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода КАК ДоходМежрасчетногоПериода,
			|	СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ КАК НеУчитыватьДоходВ6НДФЛ,
			|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ КАК ИсточникДоходаЗаПределамиРФ,
			|	СведенияОДоходахНДФЛ.ДокументОснование КАК ДокументОснование
			|ПОМЕСТИТЬ ВТСтрокиДоходов
			|ИЗ
			|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|ГДЕ
			|	СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоПредыдущегоГода И &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.ДатаПолученияДохода МЕЖДУ &РанняяДатаПолученияДохода И &ПоздняяДатаПолученияДохода
			|	И СведенияОДоходахНДФЛ.РегистрацияВНалоговомОргане В(&РегистрацияВНалоговомОргане)
			|	И СведенияОДоходахНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
			|	И СведенияОДоходахНДФЛ.СуммаДохода - СведенияОДоходахНДФЛ.СуммаВычета <> 0";
			Запрос.Выполнить();

			УчетНДФЛ.СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТСтрокиДоходов", "УчитыватьИзмененияСтатусаДляОтчетности", ОкончаниеПериода);
		
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	СведенияОДоходахНДФЛ.ПериодРегистрации КАК Период,
			|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
			|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода КАК ДоходМежрасчетногоПериода,
			|	СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ КАК НеУчитыватьДоходВ6НДФЛ,
			|	СведенияОДоходахНДФЛ.ДокументОснование КАК ДокументОснование
			|ПОМЕСТИТЬ ВТСведенияОДоходахНДФЛ
			|ИЗ
			|	ВТСтрокиДоходов КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Период = СтавкаНДФЛПоСтавкеРезидента.Период
			|			И СведенияОДоходахНДФЛ.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
			|			И СведенияОДоходахНДФЛ.КатегорияДохода = СтавкаНДФЛПоСтавкеРезидента.КатегорияДохода
			|ГДЕ
			|	(НЕ СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ
			|			ИЛИ СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор
			|ПОМЕСТИТЬ ВТРегистраторыНачислений
			|ИЗ
			|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ * ИЗ ВТНачисленоПоРегистраторам
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВзаиморасчетыССотрудниками.Регистратор КАК Регистратор,
			|	-СУММА(ВзаиморасчетыССотрудниками.Сумма) КАК Сумма
			|ПОМЕСТИТЬ ВТНДФЛПоРегистраторам
			|ИЗ
			|	ВТНалоги КАК ВзаиморасчетыССотрудниками
			|ГДЕ
			|	ВзаиморасчетыССотрудниками.Регистратор В
			|			(ВЫБРАТЬ
			|				РегистраторыНачислений.Регистратор
			|			ИЗ
			|				ВТРегистраторыНачислений КАК РегистраторыНачислений)
			|	И ВзаиморасчетыССотрудниками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|
			|СГРУППИРОВАТЬ ПО
			|	ВзаиморасчетыССотрудниками.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НалогиПоДатам.ФизическоеЛицо КАК ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	НалогиПоДатам.ДокументОснование КАК ДокументОснование,
			|	НАЧАЛОПЕРИОДА(НалогиПоДатам.ДатаУдержания, ДЕНЬ) КАК ДатаУдержания,
			|	НалогиПоДатам.КрайнийСрокУплаты КАК СрокПеречисления,
			|	НалогиПоДатам.Регистратор КАК Регистратор,
			|	НалогиПоДатам.Сумма КАК Сумма,
			|	НалогиПоДатам.СуммаВыплаченногоДохода КАК СуммаВыплаченногоДохода
			|ПОМЕСТИТЬ ВТИсходныеДанныеПоДокументамОснованиям
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|ГДЕ
			|	НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|	И &УсловиеОтбораПоДатам
			|	И НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
			|	МАКСИМУМ(СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода
			|			ИЛИ НачисленоПоРегистраторам.Регистратор ЕСТЬ NULL
			|				И НДФЛПоРегистраторам.Регистратор ЕСТЬ НЕ NULL ) КАК ЭтоМежрасчетныйДокумент,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК ДатаПолученияДохода
			|ПОМЕСТИТЬ ВТОснованияНачислений
			|ИЗ
			|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсходныеДанныеПоДокументамОснованиям КАК ОснованияСУдержаннымНалогом
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|			И (СведенияОДоходахНДФЛ.ДокументОснование = ОснованияСУдержаннымНалогом.ДокументОснование
			|				ИЛИ СведенияОДоходахНДФЛ.Регистратор = ОснованияСУдержаннымНалогом.Регистратор)
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленоПоРегистраторам КАК НачисленоПоРегистраторам
			|		ПО СведенияОДоходахНДФЛ.Регистратор = НачисленоПоРегистраторам.Регистратор
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНДФЛПоРегистраторам КАК НДФЛПоРегистраторам
			|		ПО СведенияОДоходахНДФЛ.Регистратор = НДФЛПоРегистраторам.Регистратор
			|ГДЕ
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.Период <= &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.СуммаДохода > 0
			|	И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL
			|	И (ЕСТЬNULL(НачисленоПоРегистраторам.СуммаВзаиморасчетов, 0) <= ЕСТЬNULL(НДФЛПоРегистраторам.Сумма, 0)
			|			ИЛИ НачисленоПоРегистраторам.Регистратор ЕСТЬ NULL
			|				И НДФЛПоРегистраторам.Регистратор ЕСТЬ НЕ NULL )
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Регистратор,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
			|	Основания.ФизическоеЛицо КАК ФизическоеЛицо,
			|	Основания.Регистратор КАК Регистратор
			|ПОМЕСТИТЬ ВТДоходыПоОснованиям
			|ИЗ
			|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|		Основания.ФизическоеЛицо КАК ФизическоеЛицо,
			|		Основания.Регистратор КАК Регистратор
			|	ИЗ
			|		ВТОснованияНачислений КАК Основания) КАК Основания
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО Основания.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И Основания.Регистратор = СведенияОДоходахНДФЛ.Регистратор
			|			И (СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода)
			|
			|СГРУППИРОВАТЬ ПО
			|	Основания.ФизическоеЛицо,
			|	Основания.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОснованияНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ОснованияНачислений.Регистратор КАК Регистратор
			|ПОМЕСТИТЬ ВТОснованияСНеудержаннымНалогом
			|ИЗ
			|	ВТОснованияНачислений КАК ОснованияНачислений
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалоги КАК НалогиПоДатам
			|		ПО ОснованияНачислений.ФизическоеЛицо = НалогиПоДатам.ФизическоеЛицо
			|			И (ОснованияНачислений.Регистратор = НалогиПоДатам.ДокументОснование
			|				ИЛИ ОснованияНачислений.Регистратор = НалогиПоДатам.Регистратор)
			|			И ОснованияНачислений.ДатаПолученияДохода = НалогиПоДатам.ДатаПолученияДохода
			|ГДЕ
			|	ОснованияНачислений.ЭтоМежрасчетныйДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	ОснованияНачислений.ФизическоеЛицо,
			|	ОснованияНачислений.Регистратор
			|
			|ИМЕЮЩИЕ
			|	СУММА(ВЫБОР
			|			КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|				ТОГДА НалогиПоДатам.Сумма
			|			ИНАЧЕ 0
			|		КОНЕЦ) = 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ОснованияСНеудержаннымНалогом.Регистратор КАК Регистратор
			|ПОМЕСТИТЬ ВТДоходыПоОснованиямСНеудержаннымНалогом
			|ИЗ
			|	ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И ОснованияСНеудержаннымНалогом.Регистратор = СведенияОДоходахНДФЛ.Регистратор
			|			И (СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода)
			|			И (СведенияОДоходахНДФЛ.СуммаДохода > 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	ОснованияСНеудержаннымНалогом.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	МаксимальныеСуммы.ФизическоеЛицо КАК ФизическоеЛицо,
			|	МаксимальныеСуммы.Регистратор КАК Регистратор,
			|	МИНИМУМ(ДоходыПоОснованиямСНеудержаннымНалогом.ДатаПолученияДохода) КАК ДатаПолученияДохода
			|ПОМЕСТИТЬ ВТДатыОснованийСНеудержаннымНалогом
			|ИЗ
			|	(ВЫБРАТЬ
			|		МАКСИМУМ(ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода) КАК СуммаДохода,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо КАК ФизическоеЛицо,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор КАК Регистратор
			|	ИЗ
			|		ВТДоходыПоОснованиямСНеудержаннымНалогом КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор) КАК МаксимальныеСуммы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоОснованиямСНеудержаннымНалогом КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|		ПО МаксимальныеСуммы.СуммаДохода = ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода
			|			И МаксимальныеСуммы.ФизическоеЛицо = ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо
			|			И МаксимальныеСуммы.Регистратор = ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор
			|
			|СГРУППИРОВАТЬ ПО
			|	МаксимальныеСуммы.ФизическоеЛицо,
			|	МаксимальныеСуммы.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ДатыОснованийСНеудержаннымНалогом.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор
			|ПОМЕСТИТЬ ВТНатуральныеДоходы
			|ИЗ
			|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсходныеДанныеПоДокументамОснованиям КАК ОснованияСУдержаннымНалогом
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.ДокументОснование = ОснованияСУдержаннымНалогом.ДокументОснование
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоОснованиям КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|			ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо
			|				И ОснованияСНеудержаннымНалогом.Регистратор = ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыОснованийСНеудержаннымНалогом КАК ДатыОснованийСНеудержаннымНалогом
			|			ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = ДатыОснованийСНеудержаннымНалогом.ФизическоеЛицо
			|				И ОснованияСНеудержаннымНалогом.Регистратор = ДатыОснованийСНеудержаннымНалогом.Регистратор
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСНеудержаннымНалогом.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Регистратор = ОснованияСНеудержаннымНалогом.Регистратор
			|ГДЕ
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.Период <= &ОкончаниеПериода
			|	И ОснованияСНеудержаннымНалогом.ФизическоеЛицо ЕСТЬ НЕ NULL 
			|	И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL
			|	И ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода > 0
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	ДатыОснованийСНеудержаннымНалогом.ДатаПолученияДохода,
			|	СведенияОДоходахНДФЛ.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТДатыОснованийСНеудержаннымНалогом
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТДоходыПоОснованиямСНеудержаннымНалогом
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТОснованияСНеудержаннымНалогом
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТДоходыПоОснованиям
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТРегистраторыНачислений
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТНачисленоПоРегистраторам
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТНДФЛПоРегистраторам
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТОснованияНачислений
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	НалогиПоДатам.ДокументОснование КАК ДокументОснование
			|ПОМЕСТИТЬ ВТМежрасчетныеДокументыОснования
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|ГДЕ
			|	НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|	И НалогиПоДатам.РасчетМежрасчетногоПериода
			|	И НалогиПоДатам.ДокументОснование <> НЕОПРЕДЕЛЕНО
			|	И НЕ НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НалогиПоДатам.ФизическоеЛицо КАК ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	НалогиПоДатам.ДокументОснование КАК ДокументОснование,
			|	НАЧАЛОПЕРИОДА(НалогиПоДатам.ДатаУдержания, ДЕНЬ) КАК ДатаУдержания,
			|	НалогиПоДатам.КрайнийСрокУплаты КАК СрокПеречисления,
			|	СУММА(НалогиПоДатам.Сумма) КАК Сумма,
			|	МежрасчетныеДокументыОснования.ДокументОснование ЕСТЬ НЕ NULL  КАК ЭтоМежрасчетныйДокумент
			|ПОМЕСТИТЬ ВТИсходныеДанныеПоСтарымДокументамОснованиям
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМежрасчетныеДокументыОснования КАК МежрасчетныеДокументыОснования
			|		ПО НалогиПоДатам.ДокументОснование = МежрасчетныеДокументыОснования.ДокументОснование
			|ГДЕ
			|	НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|	И &УсловиеОтбораПоДатам
			|	И НЕ НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|
			|СГРУППИРОВАТЬ ПО
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДокументОснование,
			|	НАЧАЛОПЕРИОДА(НалогиПоДатам.ДатаУдержания, ДЕНЬ),
			|	НалогиПоДатам.КрайнийСрокУплаты,
			|	МежрасчетныеДокументыОснования.ДокументОснование
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НалогиПоДатам.ФизическоеЛицо КАК ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	НалогиПоДатам.ДокументОснование КАК ДокументОснование,
			|	ВЫБОР
			|		КОГДА СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|							И &УсловиеОтбораПоДатам
			|						ТОГДА НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) = 0
			|			ТОГДА 0
			|		КОГДА СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА НалогиПоДатам.Сумма
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|						ТОГДА -НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) = 0
			|			ТОГДА 1
			|		ИНАЧЕ СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|							И &УсловиеОтбораПоДатам
			|						ТОГДА НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) / СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА НалогиПоДатам.Сумма
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|						ТОГДА -НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ)
			|	КОНЕЦ КАК Доля
			|ПОМЕСТИТЬ ВТДолиПолученногоДоходаПоДокументамОснованиям
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|ГДЕ
			|	НалогиПоДатам.ДатаУдержания <= &ОкончаниеПериода
			|	И НЕ НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|
			|СГРУППИРОВАТЬ ПО
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДокументОснование
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДанныеУчета.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ДанныеУчета.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ДанныеУчета.ДокументОснование КАК Регистратор,
			|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(СведенияОДоходахНДФЛ.СуммаДохода) * ВЫБОР
			|				КОГДА ДанныеУчета.Доля > 1
			|					ТОГДА 1
			|				ИНАЧЕ ДанныеУчета.Доля
			|			КОНЕЦ КАК ЧИСЛО(15, 2)), 0) КАК СуммаДохода
			|ИЗ
			|	ВТДолиПолученногоДоходаПоДокументамОснованиям КАК ДанныеУчета
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО ДанныеУчета.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И ДанныеУчета.ДатаПолученияДохода = СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|			И ДанныеУчета.ДокументОснование = СведенияОДоходахНДФЛ.Регистратор
			|
			|СГРУППИРОВАТЬ ПО
			|	ДанныеУчета.ФизическоеЛицо,
			|	ДанныеУчета.ДатаПолученияДохода,
			|	ДанныеУчета.Доля,
			|	ДанныеУчета.ДокументОснование
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	ДатаПолученияДохода,
			|	Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИсходныеДанные.ДокументОснование КАК Регистратор,
			|	ИсходныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ИсходныеДанные.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ИсходныеДанные.ДатаУдержания КАК ДатаУдержания,
			|	ИсходныеДанные.СрокПеречисления КАК СрокПеречисления,
			|	ИсходныеДанные.Сумма КАК Сумма,
			|	0 КАК СуммаФактическиПолученногоДохода
			|ИЗ
			|	ВТИсходныеДанныеПоСтарымДокументамОснованиям КАК ИсходныеДанные
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	ДатаПолученияДохода,
			|	Регистратор";
			Если ОкончаниеПериода < '20160701' Тогда
				Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоДатам", "НалогиПоДатам.ДатаУдержания МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода");
			Иначе
				Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоДатам", "НалогиПоДатам.КрайнийСрокУплаты МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода И НалогиПоДатам.ДатаУдержания >= ДАТАВРЕМЯ(2016, 7, 1, 0, 0, 0)");
			КонецЕсли;
			
			УчетНДФЛБазовый.РасчетПоказателей_6НДФЛ_2017Кв1(Запрос.Текст);
			
			Результаты = Запрос.ВыполнитьПакет();
			ВсегоРезультатов = Результаты.Количество();
			НеОбработанныеДанные = Результаты[ВсегоРезультатов - 1].Выгрузить();
			ОбработанныеДанные = НеОбработанныеДанные.СкопироватьКолонки();
			СуммыДоходов = Результаты[ВсегоРезультатов - 2].Выгрузить();
			СтруктураПоиска = Новый Структура("ФизическоеЛицо,ДатаПолученияДохода,Регистратор");
			Для каждого СтрокаДохода Из СуммыДоходов Цикл
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДохода);
				ВременнаяТаблица = НеОбработанныеДанные.Скопировать(НеОбработанныеДанные.НайтиСтроки(СтруктураПоиска));
				Если ВременнаяТаблица.Количество() = 0 Тогда
					Продолжить;
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрокаДохода.СуммаДохода) Тогда
					Если ВременнаяТаблица.Количество() = 1 Тогда
						ВременнаяТаблица[0].СуммаФактическиПолученногоДохода = СтрокаДохода.СуммаДохода
					Иначе
						КоэффициентыРаспределения = ВременнаяТаблица.ВыгрузитьКолонку("Сумма");
						РаспределениеРесурса = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаДохода.СуммаДохода, КоэффициентыРаспределения);
						Если РаспределениеРесурса <> Неопределено Тогда
							ВременнаяТаблица.ЗагрузитьКолонку(РаспределениеРесурса, "СуммаФактическиПолученногоДохода");
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВременнаяТаблица, ОбработанныеДанные)
			КонецЦикла;
			Запрос.УстановитьПараметр("ОбработанныеДанные", ОбработанныеДанные); НеОбработанныеДанные = Неопределено; СуммыДоходов = Неопределено; ОбработанныеДанные = Неопределено; ВременнаяТаблица = Неопределено;
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Данные.Регистратор,
			|	Данные.ФизическоеЛицо,
			|	Данные.ДатаПолученияДохода,
			|	Данные.ДатаУдержания,
			|	Данные.СрокПеречисления,
			|	Данные.СуммаФактическиПолученногоДохода,
			|	Данные.Сумма
			|ПОМЕСТИТЬ ВТОбработанныеДанныеПоДокументамОснованиям
			|ИЗ
			|	&ОбработанныеДанные КАК Данные
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	ВЫБОР
			|		КОГДА СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|							И &УсловиеОтбораПоДатам
			|						ТОГДА НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) = 0
			|			ТОГДА 0
			|		КОГДА СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА НалогиПоДатам.Сумма
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|						ТОГДА -НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) = 0
			|			ТОГДА 1
			|		ИНАЧЕ СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|							И &УсловиеОтбораПоДатам
			|						ТОГДА НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ) / СУММА(ВЫБОР
			|					КОГДА НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА НалогиПоДатам.Сумма
			|					КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|						ТОГДА -НалогиПоДатам.Сумма
			|					ИНАЧЕ 0
			|				КОНЕЦ)
			|	КОНЕЦ КАК Доля
			|ПОМЕСТИТЬ ВТДолиПолученногоДохода
			|ИЗ
			|	ВТНалоги КАК НалогиПоДатам
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМежрасчетныеДокументыОснования КАК МежрасчетныеДокументыОснования
			|		ПО НалогиПоДатам.ДокументОснование = МежрасчетныеДокументыОснования.ДокументОснование
			|ГДЕ
			|	НалогиПоДатам.ДатаУдержания <= &ОкончаниеПериода
			|	И МежрасчетныеДокументыОснования.ДокументОснование ЕСТЬ NULL 
			|	И НЕ НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|
			|СГРУППИРОВАТЬ ПО
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИсходныеДанные.ФизическоеЛицо,
			|	ИсходныеДанные.ДатаПолученияДохода,
			|	МАКСИМУМ(ИсходныеДанные.ДатаУдержания) КАК ДатаУдержания
			|ПОМЕСТИТЬ ВТДатыУчета
			|ИЗ
			|	ВТИсходныеДанныеПоСтарымДокументамОснованиям КАК ИсходныеДанные
			|ГДЕ
			|	НЕ ИсходныеДанные.ЭтоМежрасчетныйДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	ИсходныеДанные.ФизическоеЛицо,
			|	ИсходныеДанные.ДатаПолученияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДатыУчета.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Регистратор
			|ПОМЕСТИТЬ ВТОснованияСУдержаннымНалогом
			|ИЗ
			|	ВТДатыУчета КАК ДатыУчета
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО ДатыУчета.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И ДатыУчета.ДатаПолученияДохода = СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|			И (ВЫБОР
			|				КОГДА ДатыУчета.ДатаУдержания > ДатыУчета.ДатаПолученияДохода
			|					ТОГДА ДатыУчета.ДатаУдержания
			|				ИНАЧЕ ДатыУчета.ДатаПолученияДохода
			|			КОНЕЦ >= НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.Период, ДЕНЬ))
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДолиПолученногоДохода КАК ДолиПолученногоДохода
			|		ПО ДатыУчета.ДатаПолученияДохода = ДолиПолученногоДохода.ДатаПолученияДохода
			|			И ДатыУчета.ФизическоеЛицо = ДолиПолученногоДохода.ФизическоеЛицо
			|ГДЕ
			|	НЕ СведенияОДоходахНДФЛ.Регистратор В
			|				(ВЫБРАТЬ
			|					ДанныеПоДокументамОснованиям.Регистратор
			|				ИЗ
			|					ВТОбработанныеДанныеПоДокументамОснованиям КАК ДанныеПоДокументамОснованиям
			|				ГДЕ
			|					ДанныеПоДокументамОснованиям.СуммаФактическиПолученногоДохода <> 0)
			|	И ЕСТЬNULL(ДолиПолученногоДохода.Доля, 0) <> 0
			|	И НЕ СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ОбработанныеДанныеПоДокументамОснованиям.ФизическоеЛицо,
			|	ОбработанныеДанныеПоДокументамОснованиям.Регистратор
			|ИЗ
			|	ВТОбработанныеДанныеПоДокументамОснованиям КАК ОбработанныеДанныеПоДокументамОснованиям
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	МАКСИМУМ(СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода) КАК ЭтоМежрасчетныйДокумент
			|ПОМЕСТИТЬ ВТОснованияНачислений
			|ИЗ
			|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСУдержаннымНалогом КАК ОснованияСУдержаннымНалогом
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Регистратор = ОснованияСУдержаннымНалогом.Регистратор
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыССотрудниками КАК ВзаиморасчетыССотрудниками
			|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ВзаиморасчетыССотрудниками.ФизическоеЛицо
			|			И СведенияОДоходахНДФЛ.Регистратор = ВзаиморасчетыССотрудниками.Регистратор
			|ГДЕ
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.Период <= &ОкончаниеПериода
			|	И СведенияОДоходахНДФЛ.СуммаДохода > 0
			|	И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|	И НЕ СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|	И ВзаиморасчетыССотрудниками.ФизическоеЛицо ЕСТЬ НЕ NULL 
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.Регистратор,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
			|	Основания.ФизическоеЛицо,
			|	Основания.Регистратор
			|ПОМЕСТИТЬ ВТДоходыПоОснованиям
			|ИЗ
			|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|		Основания.ФизическоеЛицо КАК ФизическоеЛицо,
			|		Основания.Регистратор КАК Регистратор
			|	ИЗ
			|		ВТОснованияНачислений КАК Основания) КАК Основания
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО Основания.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И Основания.Регистратор = СведенияОДоходахНДФЛ.Регистратор
			|			И (СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода)
			|
			|СГРУППИРОВАТЬ ПО
			|	Основания.ФизическоеЛицо,
			|	Основания.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОснованияНачислений.ФизическоеЛицо,
			|	ОснованияНачислений.Регистратор
			|ПОМЕСТИТЬ ВТОснованияСНеудержаннымНалогом
			|ИЗ
			|	ВТОснованияНачислений КАК ОснованияНачислений
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалоги КАК НалогиПоДатам
			|		ПО ОснованияНачислений.ФизическоеЛицо = НалогиПоДатам.ФизическоеЛицо
			|			И ОснованияНачислений.Регистратор = НалогиПоДатам.ДокументОснование
			|			И ОснованияНачислений.ДатаПолученияДохода = НалогиПоДатам.ДатаПолученияДохода
			|ГДЕ
			|	ОснованияНачислений.ЭтоМежрасчетныйДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	ОснованияНачислений.ФизическоеЛицо,
			|	ОснованияНачислений.Регистратор
			|
			|ИМЕЮЩИЕ
			|	СУММА(ВЫБОР
			|			КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|				ТОГДА НалогиПоДатам.Сумма
			|			ИНАЧЕ 0
			|		КОНЕЦ) = 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода) КАК СуммаДохода,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо,
			|	ОснованияСНеудержаннымНалогом.Регистратор
			|ПОМЕСТИТЬ ВТДоходыПоОснованиямСНеудержаннымНалогом
			|ИЗ
			|	ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И ОснованияСНеудержаннымНалогом.Регистратор = СведенияОДоходахНДФЛ.Регистратор
			|			И (СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода)
			|			И (СведенияОДоходахНДФЛ.СуммаДохода > 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо,
			|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
			|	ОснованияСНеудержаннымНалогом.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	МаксимальныеСуммы.ФизическоеЛицо,
			|	МаксимальныеСуммы.Регистратор,
			|	МИНИМУМ(ДоходыПоОснованиямСНеудержаннымНалогом.ДатаПолученияДохода) КАК ДатаПолученияДохода
			|ПОМЕСТИТЬ ВТДатыОснованийСНеудержаннымНалогом
			|ИЗ
			|	(ВЫБРАТЬ
			|		МАКСИМУМ(ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода) КАК СуммаДохода,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо КАК ФизическоеЛицо,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор КАК Регистратор
			|	ИЗ
			|		ВТДоходыПоОснованиямСНеудержаннымНалогом КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо,
			|		ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор) КАК МаксимальныеСуммы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоОснованиямСНеудержаннымНалогом КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|		ПО МаксимальныеСуммы.СуммаДохода = ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода
			|			И МаксимальныеСуммы.ФизическоеЛицо = ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо
			|			И МаксимальныеСуммы.Регистратор = ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор
			|
			|СГРУППИРОВАТЬ ПО
			|	МаксимальныеСуммы.ФизическоеЛицо,
			|	МаксимальныеСуммы.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОснованияНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ОснованияНачислений.ДатаПолученияДохода КАК ДатаПолученияДохода
			|ПОМЕСТИТЬ ВТОставшиесяДатыПолученияДохода
			|ИЗ
			|	ВТОснованияНачислений КАК ОснованияНачислений
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|		ПО ОснованияНачислений.Регистратор = ОснованияСНеудержаннымНалогом.Регистратор
			|			И ОснованияНачислений.ФизическоеЛицо = ОснованияСНеудержаннымНалогом.ФизическоеЛицо
			|ГДЕ
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДатыПолученияДохода.ФизическоеЛицо,
			|	ДатыПолученияДохода.ДатаПолученияДохода
			|ПОМЕСТИТЬ ВТДатыПолученияДоходаБезНалогов
			|ИЗ
			|	ВТОставшиесяДатыПолученияДохода КАК ДатыПолученияДохода
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалоги КАК НалогиПоДатам
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСУдержаннымНалогом КАК ОснованияСУдержаннымНалогом
			|			ПО НалогиПоДатам.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|				И НалогиПоДатам.ДокументОснование = ОснованияСУдержаннымНалогом.Регистратор
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|			ПО НалогиПоДатам.ДокументОснование = ОснованияСНеудержаннымНалогом.Регистратор
			|				И НалогиПоДатам.ФизическоеЛицо = ОснованияСНеудержаннымНалогом.ФизическоеЛицо
			|		ПО ДатыПолученияДохода.ФизическоеЛицо = НалогиПоДатам.ФизическоеЛицо
			|			И ДатыПолученияДохода.ДатаПолученияДохода = НалогиПоДатам.ДатаПолученияДохода
			|	И НЕ НалогиПоДатам.УчитыватьВыплаченныйДоходВ6НДФЛ
			|ГДЕ
			|	ОснованияСНеудержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|	И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|
			|СГРУППИРОВАТЬ ПО
			|	ДатыПолученияДохода.ФизическоеЛицо,
			|	ДатыПолученияДохода.ДатаПолученияДохода
			|
			|ИМЕЮЩИЕ
			|	СУММА(ВЫБОР
			|			КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
			|				ТОГДА НалогиПоДатам.Сумма
			|			ИНАЧЕ 0
			|		КОНЕЦ) = 0 И
			|	СУММА(ВЫБОР
			|			КОГДА НалогиПоДатам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				ТОГДА НалогиПоДатам.Сумма
			|			КОГДА НалогиПоДатам.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
			|				ТОГДА -НалогиПоДатам.Сумма
			|			ИНАЧЕ 0
			|		КОНЕЦ) = 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
			|	Доходы.ФизическоеЛицо,
			|	Доходы.ДатаПолученияДохода,
			|	Доходы.Регистратор
			|ПОМЕСТИТЬ ВТДоходыБезНалогов
			|ИЗ
			|	(ВЫБРАТЬ
			|		СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДохода,
			|		СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
			|		СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|		СведенияОДоходахНДФЛ.Регистратор КАК Регистратор
			|	ИЗ
			|		ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоОснованиям КАК ДоходыПоОснованиям
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ДоходыПоОснованиям.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.Регистратор = ДоходыПоОснованиям.Регистратор
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыПолученияДоходаБезНалогов КАК ДатыПолученияДоходаБезНалогов
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ДатыПолученияДоходаБезНалогов.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.ДатаПолученияДохода = ДатыПолученияДоходаБезНалогов.ДатаПолученияДохода
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСУдержаннымНалогом КАК ОснованияСУдержаннымНалогом
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.Регистратор = ОснованияСУдержаннымНалогом.Регистратор
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСНеудержаннымНалогом.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.Регистратор = ОснованияСНеудержаннымНалогом.Регистратор
			|	ГДЕ
			|		СведенияОДоходахНДФЛ.ДатаПолученияДохода МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода
			|		И СведенияОДоходахНДФЛ.Период <= &ОкончаниеПериода
			|		И НЕ СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|		И ДатыПолученияДоходаБезНалогов.ФизическоеЛицо ЕСТЬ НЕ NULL 
			|		И ОснованияСНеудержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|		И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|		И ДоходыПоОснованиям.СуммаДохода > 0
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		СведенияОДоходахНДФЛ.СуммаДохода,
			|		СведенияОДоходахНДФЛ.ФизическоеЛицо,
			|		ДатыОснованийСНеудержаннымНалогом.ДатаПолученияДохода,
			|		СведенияОДоходахНДФЛ.Регистратор
			|	ИЗ
			|		ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСУдержаннымНалогом КАК ОснованияСУдержаннымНалогом
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСУдержаннымНалогом.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.Регистратор = ОснованияСУдержаннымНалогом.Регистратор
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияСНеудержаннымНалогом КАК ОснованияСНеудержаннымНалогом
			|				ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоОснованиям КАК ДоходыПоОснованиямСНеудержаннымНалогом
			|				ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = ДоходыПоОснованиямСНеудержаннымНалогом.ФизическоеЛицо
			|					И ОснованияСНеудержаннымНалогом.Регистратор = ДоходыПоОснованиямСНеудержаннымНалогом.Регистратор
			|				ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыОснованийСНеудержаннымНалогом КАК ДатыОснованийСНеудержаннымНалогом
			|				ПО ОснованияСНеудержаннымНалогом.ФизическоеЛицо = ДатыОснованийСНеудержаннымНалогом.ФизическоеЛицо
			|					И ОснованияСНеудержаннымНалогом.Регистратор = ДатыОснованийСНеудержаннымНалогом.Регистратор
			|			ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = ОснованияСНеудержаннымНалогом.ФизическоеЛицо
			|				И СведенияОДоходахНДФЛ.Регистратор = ОснованияСНеудержаннымНалогом.Регистратор
			|	ГДЕ
			|		СведенияОДоходахНДФЛ.ДатаПолученияДохода <= &ОкончаниеПериода
			|		И СведенияОДоходахНДФЛ.Период <= &ОкончаниеПериода
			|		И НЕ СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|		И ОснованияСНеудержаннымНалогом.ФизическоеЛицо ЕСТЬ НЕ NULL 
			|		И ОснованияСУдержаннымНалогом.ФизическоеЛицо ЕСТЬ NULL 
			|		И ДоходыПоОснованиямСНеудержаннымНалогом.СуммаДохода > 0) КАК Доходы
			|
			|СГРУППИРОВАТЬ ПО
			|	Доходы.ФизическоеЛицо,
			|	Доходы.ДатаПолученияДохода,
			|	Доходы.Регистратор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДатыУчета.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ДатыУчета.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(СведенияОДоходахНДФЛ.СуммаДохода) * ВЫБОР
			|				КОГДА ДолиПолученногоДохода.Доля > 1
			|					ТОГДА 1
			|				ИНАЧЕ ДолиПолученногоДохода.Доля
			|			КОНЕЦ КАК ЧИСЛО(15, 2)), 0) КАК СуммаДохода
			|ИЗ
			|	ВТДатыУчета КАК ДатыУчета
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
			|		ПО ДатыУчета.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
			|			И ДатыУчета.ДатаПолученияДохода = СведенияОДоходахНДФЛ.ДатаПолученияДохода
			|			И (ВЫБОР
			|				КОГДА ДатыУчета.ДатаУдержания > ДатыУчета.ДатаПолученияДохода
			|					ТОГДА ДатыУчета.ДатаУдержания
			|				ИНАЧЕ ДатыУчета.ДатаПолученияДохода
			|			КОНЕЦ >= НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.Период, ДЕНЬ))
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДолиПолученногоДохода КАК ДолиПолученногоДохода
			|		ПО ДатыУчета.ДатаПолученияДохода = ДолиПолученногоДохода.ДатаПолученияДохода
			|			И ДатыУчета.ФизическоеЛицо = ДолиПолученногоДохода.ФизическоеЛицо
			|ГДЕ
			|	НЕ СведенияОДоходахНДФЛ.Регистратор В
			|				(ВЫБРАТЬ
			|					ДанныеПоДокументамОснованиям.Регистратор
			|				ИЗ
			|					ВТОбработанныеДанныеПоДокументамОснованиям КАК ДанныеПоДокументамОснованиям
			|				ГДЕ
			|					ДанныеПоДокументамОснованиям.СуммаФактическиПолученногоДохода <> 0)
			|	И НЕ СведенияОДоходахНДФЛ.НеУчитыватьДоходВ6НДФЛ
			|
			|СГРУППИРОВАТЬ ПО
			|	ДатыУчета.ФизическоеЛицо,
			|	ДатыУчета.ДатаПолученияДохода,
			|	ДолиПолученногоДохода.Доля
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	ДатаПолученияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИсходныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ИсходныеДанные.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ИсходныеДанные.ДатаУдержания,
			|	ИсходныеДанные.СрокПеречисления,
			|	СУММА(ИсходныеДанные.Сумма) КАК Сумма,
			|	0 КАК СуммаФактическиПолученногоДохода
			|ИЗ
			|	ВТИсходныеДанныеПоСтарымДокументамОснованиям КАК ИсходныеДанные
			|ГДЕ
			|	НЕ ИсходныеДанные.ЭтоМежрасчетныйДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	ИсходныеДанные.ФизическоеЛицо,
			|	ИсходныеДанные.ДатаПолученияДохода,
			|	ИсходныеДанные.ДатаУдержания,
			|	ИсходныеДанные.СрокПеречисления
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	ДатаПолученияДохода";
			Если ОкончаниеПериода < '20160701' Тогда
				Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоДатам", "НалогиПоДатам.ДатаУдержания МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода");
			Иначе
				Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоДатам", "НалогиПоДатам.КрайнийСрокУплаты МЕЖДУ &НачалоОтчетногоКвартала И &ОкончаниеПериода И НалогиПоДатам.ДатаУдержания >= ДАТАВРЕМЯ(2016, 7, 1, 0, 0, 0)");
			КонецЕсли;
			
			Результаты = Запрос.ВыполнитьПакет();
			ВсегоРезультатов = Результаты.Количество();
			НеОбработанныеДанные = Результаты[ВсегоРезультатов - 1].Выгрузить();
			СуммыДоходов = Результаты[ВсегоРезультатов - 2].Выгрузить();
			ОбработанныеДанные = НеОбработанныеДанные.СкопироватьКолонки();
			СтруктураПоиска = Новый Структура("ФизическоеЛицо,ДатаПолученияДохода");
			Для каждого СтрокаДохода Из СуммыДоходов Цикл
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДохода);
				ВременнаяТаблица = НеОбработанныеДанные.Скопировать(НеОбработанныеДанные.НайтиСтроки(СтруктураПоиска));
				Если ВременнаяТаблица.Количество() = 0 Тогда
					Продолжить;
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрокаДохода.СуммаДохода) Тогда
					Если ВременнаяТаблица.Количество() = 1 Тогда
						ВременнаяТаблица[0].СуммаФактическиПолученногоДохода = СтрокаДохода.СуммаДохода
					Иначе
						КоэффициентыРаспределения = ВременнаяТаблица.ВыгрузитьКолонку("Сумма");
						РаспределениеРесурса = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаДохода.СуммаДохода, КоэффициентыРаспределения);
						Если РаспределениеРесурса <> Неопределено Тогда
							ВременнаяТаблица.ЗагрузитьКолонку(РаспределениеРесурса, "СуммаФактическиПолученногоДохода");
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВременнаяТаблица, ОбработанныеДанные)
			КонецЦикла;
			
			Запрос.УстановитьПараметр("ОбработанныеДанные", ОбработанныеДанные); 
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Данные.ФизическоеЛицо,
			|	Данные.ДатаПолученияДохода,
			|	Данные.ДатаУдержания,
			|	Данные.СрокПеречисления,
			|	Данные.СуммаФактическиПолученногоДохода
			|ПОМЕСТИТЬ ВТОбработанныеДанные
			|ИЗ
			|	&ОбработанныеДанные КАК Данные";
			Запрос.Выполнить();
			
			НеОбработанныеДанные = Неопределено; СуммыДоходов = Неопределено; ОбработанныеДанные = Неопределено; ВременнаяТаблица = Неопределено;

			ТекстЗапроса =
			"ВЫБРАТЬ
			|	НалогиПоДатам.Регистратор,
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода КАК ДатаФактическогоПолученияДохода,
			|	НалогиПоДатам.ДатаПолученияДохода КАК П000020010001,
			|	НалогиПоДатам.ДатаУдержания КАК ДатаУдержанияНалога,
			|	НалогиПоДатам.ДатаУдержания КАК П000020011001,
			|	НалогиПоДатам.СрокПеречисления КАК СрокПеречисленияНалога,
			|	НалогиПоДатам.СрокПеречисления КАК П000020012001,
			|	СУММА(НалогиПоДатам.СуммаФактическиПолученногоДохода) < 0 КАК ОтрицательныйДоход,
			|	СУММА(НалогиПоДатам.СуммаФактическиПолученногоДохода) КАК П000020013001,
			|	СУММА(НалогиПоДатам.Сумма) КАК П000020014001
			|ИЗ
			|	(ВЫБРАТЬ
			|		Данные.ДокументОснование КАК Регистратор,
			|		Данные.ФизическоеЛицо КАК ФизическоеЛицо,
			|		Данные.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|		Данные.ДатаУдержания КАК ДатаУдержания,
			|		Данные.СрокПеречисления КАК СрокПеречисления,
			|		Данные.СуммаВыплаченногоДохода КАК СуммаФактическиПолученногоДохода,
			|		Данные.Сумма КАК Сумма
			|	ИЗ
			|		ВТИсходныеДанныеПоДокументамОснованиям КАК Данные
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Данные.Регистратор,
			|		Данные.ФизическоеЛицо,
			|		Данные.ДатаПолученияДохода,
			|		ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
			|		ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
			|		Данные.СуммаДохода,
			|		0
			|	ИЗ
			|		ВТНатуральныеДоходы КАК Данные
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		НЕОПРЕДЕЛЕНО,
			|		Данные.ФизическоеЛицо,
			|		Данные.ДатаПолученияДохода,
			|		Данные.ДатаУдержания,
			|		Данные.СрокПеречисления,
			|		Данные.СуммаФактическиПолученногоДохода,
			|		0
			|	ИЗ
			|		ВТОбработанныеДанные КАК Данные
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Данные.Регистратор,
			|		Данные.ФизическоеЛицо,
			|		Данные.ДатаПолученияДохода,
			|		ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
			|		ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
			|		Данные.СуммаДохода,
			|		0
			|	ИЗ
			|		ВТДоходыБезНалогов КАК Данные
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Данные.Регистратор,
			|		Данные.ФизическоеЛицо,
			|		Данные.ДатаПолученияДохода,
			|		Данные.ДатаУдержания,
			|		Данные.СрокПеречисления,
			|		Данные.СуммаФактическиПолученногоДохода,
			|		Данные.Сумма
			|	ИЗ
			|		ВТОбработанныеДанныеПоДокументамОснованиям КАК Данные) КАК НалогиПоДатам
			|
			|СГРУППИРОВАТЬ ПО
			|	НалогиПоДатам.Регистратор,
			|	НалогиПоДатам.ФизическоеЛицо,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДатаУдержания,
			|	НалогиПоДатам.СрокПеречисления,
			|	НалогиПоДатам.ДатаПолученияДохода,
			|	НалогиПоДатам.ДатаУдержания,
			|	НалогиПоДатам.СрокПеречисления
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДатаУдержанияНалога,
			|	СрокПеречисленияНалога,
			|	ДатаФактическогоПолученияДохода";
			
			МассивПолей = Новый Массив;
			МассивПолей.Добавить("ФизическоеЛицо");
			МассивПолей.Добавить("Регистратор");
			Запрос.Текст = УдалитьПоляРасшифровкиИзЗапроса(ТекстЗапроса, МассивПолей, "НалогиПоДатам");
			СводныйРезультат = Запрос.Выполнить().Выгрузить();
			
			Если СводныйРезультат.Найти(Истина,"ОтрицательныйДоход") <> Неопределено Тогда
				
				Запрос.Текст = ТекстЗапроса;
				ВременнаяТаблица = Запрос.Выполнить().Выгрузить();
				
				ОстатокПересчета = 0;
				ОстаткиПересчетаПоФизлицам = Новый Соответствие;
				ОстатокНалогов = 0;
				ОстаткиНалоговПоФизлицам = Новый Соответствие;
				Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
					Если СтрокаТЗ.П000020013001 = 0 Тогда
					ИначеЕсли СтрокаТЗ.П000020013001 > 0 Тогда
						Если ОстатокПересчета > 0 Тогда
							ОстатокФизлица = ОстаткиПересчетаПоФизлицам[СтрокаТЗ.ФизическоеЛицо];
							Если ЗначениеЗаполнено(ОстатокФизлица) Тогда
								КЗачету = Мин(СтрокаТЗ.П000020013001, ОстатокФизлица);
								СтрокаТЗ.П000020013001 = СтрокаТЗ.П000020013001 - КЗачету;
								ОстатокПересчета = ОстатокПересчета - КЗачету;
								ОстаткиПересчетаПоФизлицам.Вставить(СтрокаТЗ.ФизическоеЛицо, ОстатокФизлица - КЗачету);
							КонецЕсли;
						КонецЕсли;
						Если ОстатокНалогов > 0 Тогда
							ОстатокФизлица = ОстаткиНалоговПоФизлицам[СтрокаТЗ.ФизическоеЛицо];
							Если ЗначениеЗаполнено(ОстатокФизлица) Тогда
								КЗачету = Мин(СтрокаТЗ.П000020014001, ОстатокФизлица);
								СтрокаТЗ.П000020014001 = СтрокаТЗ.П000020014001 - КЗачету;
								ОстатокНалогов = ОстатокНалогов - КЗачету;
								ОстаткиНалоговПоФизлицам.Вставить(СтрокаТЗ.ФизическоеЛицо, ОстатокФизлица - КЗачету);
							КонецЕсли;
						КонецЕсли;
					Иначе
						ОстатокПересчета = ОстатокПересчета - СтрокаТЗ.П000020013001;
						ОстаткиПересчетаПоФизлицам.Вставить(СтрокаТЗ.ФизическоеЛицо, ?(ЗначениеЗаполнено(ОстаткиПересчетаПоФизлицам[СтрокаТЗ.ФизическоеЛицо]),ОстаткиПересчетаПоФизлицам[СтрокаТЗ.ФизическоеЛицо],0) - СтрокаТЗ.П000020013001);
						Если СтрокаТЗ.П000020014001 < 0 Тогда
							ОстатокНалогов = ОстатокНалогов - СтрокаТЗ.П000020014001;
							ОстаткиНалоговПоФизлицам.Вставить(СтрокаТЗ.ФизическоеЛицо, ?(ЗначениеЗаполнено(ОстаткиНалоговПоФизлицам[СтрокаТЗ.ФизическоеЛицо]),ОстаткиНалоговПоФизлицам[СтрокаТЗ.ФизическоеЛицо],0) - СтрокаТЗ.П000020014001);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				Если ОстатокПересчета > 0 Тогда
					ВсегоСтрок = ВременнаяТаблица.Количество();
					Для Счетчик = 1 По ВсегоСтрок Цикл
						СтрокаТЗ = ВременнаяТаблица[ВсегоСтрок - Счетчик];
						Если СтрокаТЗ.П000020013001 < 0 Тогда
							Если ОстатокПересчета = 0 Тогда
							ИначеЕсли СтрокаТЗ.П000020013001 < -ОстатокПересчета Тогда
								ОстатокПересчета = 0;
							Иначе
								ОстатокПересчета = ОстатокПересчета + СтрокаТЗ.П000020013001;
							КонецЕсли;
							СтрокаТЗ.П000020013001 = 0;
						КонецЕсли;
						Если ОстатокНалогов > 0 Тогда
							Если СтрокаТЗ.П000020014001 < 0 Тогда
								Если ОстатокНалогов = 0 Тогда
								ИначеЕсли СтрокаТЗ.П000020014001 < -ОстатокНалогов Тогда
									ОстатокНалогов = 0;
								Иначе
									ОстатокНалогов = ОстатокНалогов + СтрокаТЗ.П000020014001;
								КонецЕсли;
								СтрокаТЗ.П000020014001 = 0;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				Иначе
					Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
						Если СтрокаТЗ.П000020013001 < 0 Тогда
							СтрокаТЗ.П000020013001 = 0;
							Если ОстатокНалогов = 0 И СтрокаТЗ.П000020014001 < 0 Тогда
								СтрокаТЗ.П000020014001 = 0;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				ОписаниеТаблиц.Раздел2 = ВременнаяТаблица.СкопироватьКолонки();
				ВременнаяТаблица.Свернуть("ДатаФактическогоПолученияДохода,П000020010001,ДатаУдержанияНалога,П000020011001,СрокПеречисленияНалога,П000020012001" + ?(ПодробныеДанные, ",ФизическоеЛицо", ""),"П000020014001,П000020013001");
				Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
					Если СтрокаТЗ.П000020013001 <> 0 Или СтрокаТЗ.П000020014001 <> 0 Тогда
						ЗаполнитьЗначенияСвойств(ОписаниеТаблиц.Раздел2.Добавить(), СтрокаТЗ);
					КонецЕсли;
				КонецЦикла;
				
			ИначеЕсли ПодробныеДанные Тогда
				Запрос.Текст = ТекстЗапроса;
				ОписаниеТаблиц.Раздел2 = Запрос.Выполнить().Выгрузить();
			Иначе
				ОписаниеТаблиц.Раздел2 = СводныйРезультат.СкопироватьКолонки();
				Для каждого СтрокаТЗ Из СводныйРезультат Цикл
					Если СтрокаТЗ.П000020013001 <> 0 Или СтрокаТЗ.П000020014001 <> 0 Тогда
						ЗаполнитьЗначенияСвойств(ОписаниеТаблиц.Раздел2.Добавить(), СтрокаТЗ);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчетПоказателей_6НДФЛ_2016Кв1(НачалоПериода, ОкончаниеПериода, ДатаПодписи, Организация, РегистрацияВНалоговомОргане, ОписаниеТаблиц, ПодробныеДанные = Ложь)
	УчетНДФЛАрхивныеАлгоритмы.РасчетПоказателей_6НДФЛ_2016Кв1(НачалоПериода, ОкончаниеПериода, ДатаПодписи, Организация, РегистрацияВНалоговомОргане, ОписаниеТаблиц, ПодробныеДанные);
КонецПроцедуры


Процедура ВыделитьСуммыПревышенияПредела(ОблагаемыйДоходДоПредела, СтрокиРаспределения, СтрокиДоходовПревышающихПредел)

	Если ОблагаемыйДоходДоПредела = 0 Тогда
		Возврат
	КонецЕсли;
	
	ПараметрыРасчетаНДФЛПоПрогрессивнойШкале = УчетНДФЛ.ПараметрыРасчетаНДФЛПоПрогрессивнойШкале();
		
	Если СтрокиРаспределения.Количество() = 1 Тогда
		СтрокаТаблицы = СтрокиРаспределения[0];
		СтрокаПревышения = СтрокиДоходовПревышающихПредел.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПревышения, СтрокаТаблицы);
		СтрокаТаблицы.СуммаДохода = ОблагаемыйДоходДоПредела;
		Если СтрокаТаблицы.СуммаВычета <> 0 Тогда
			СтрокаТаблицы.СуммаВычета = Окр(СтрокаТаблицы.СуммаВычета * ОблагаемыйДоходДоПредела / СтрокаТаблицы.ОблагаемыйДоходЗаДень, 2);
			СтрокаТаблицы.СуммаДохода = СтрокаТаблицы.СуммаДохода + СтрокаТаблицы.СуммаВычета;
		КонецЕсли;
		СтрокаПревышения.СтавкаНалога = ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.СтавкаЧислом * 100;
		СтрокаПревышения.Ставка = ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.Ставка;
		СтрокаПревышения.СуммаДохода = СтрокаПревышения.СуммаДохода - СтрокаТаблицы.СуммаДохода;
		Если СтрокаПревышения.СуммаВычета <> 0 Тогда
			СтрокаПревышения.СуммаВычета = СтрокаПревышения.СуммаВычета - СтрокаТаблицы.СуммаВычета;
		КонецЕсли;
	Иначе
		
		МаксимальныйКоэффициент = 0;
		РаспределеннаяСумма = 0;
		РаспределенныеДоходы = Новый Соответствие;
		Для Каждого СтрокаТаблицы Из СтрокиРаспределения Цикл
			АбсолютноеЗначениеКоэффициента = СтрокаТаблицы.СуммаДохода * СтрокаТаблицы.СуммаДохода;
			Если МаксимальныйКоэффициент < АбсолютноеЗначениеКоэффициента Тогда
				МаксимальныйКоэффициент = АбсолютноеЗначениеКоэффициента;
				СтрокаМаксимальногоКоэффициента = СтрокаТаблицы;
			КонецЕсли;
			СуммаСтроки = Окр(ОблагаемыйДоходДоПредела * СтрокаТаблицы.СуммаДохода / СтрокаТаблицы.ОблагаемыйДоходЗаДень, 2, 1);
			РаспределенныеДоходы.Вставить(СтрокаТаблицы, СуммаСтроки);
			РаспределеннаяСумма = РаспределеннаяСумма + СуммаСтроки;
		КонецЦикла;
		Если Не РаспределеннаяСумма = ОблагаемыйДоходДоПредела Тогда
			РаспределенныеДоходы.Вставить(СтрокаМаксимальногоКоэффициента, РаспределенныеДоходы[СтрокаМаксимальногоКоэффициента] + ОблагаемыйДоходДоПредела - РаспределеннаяСумма)
		КонецЕсли;
		Для Каждого СтрокаТаблицы Из СтрокиРаспределения Цикл
			СтрокаПревышения = СтрокиДоходовПревышающихПредел.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаПревышения, СтрокаТаблицы);
			СтрокаТаблицы.СуммаДохода = РаспределенныеДоходы[СтрокаТаблицы];
			Если СтрокаТаблицы.СуммаВычета <> 0 Тогда
				СтрокаТаблицы.СуммаВычета = Окр(СтрокаТаблицы.СуммаВычета * СтрокаТаблицы.СуммаДохода / СтрокаТаблицы.ОблагаемыйДоходЗаДень, 2);
				СтрокаТаблицы.СуммаДохода = СтрокаТаблицы.СуммаДохода + СтрокаТаблицы.СуммаВычета;
			КонецЕсли;
			СтрокаПревышения.СтавкаНалога = ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.СтавкаЧислом * 100;
			СтрокаПревышения.Ставка = ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.Ставка;
			СтрокаПревышения.СуммаДохода = СтрокаПревышения.СуммаДохода - СтрокаТаблицы.СуммаДохода;
			Если СтрокаПревышения.СуммаВычета <> 0 Тогда
				СтрокаПревышения.СуммаВычета = СтрокаПревышения.СуммаВычета - СтрокаТаблицы.СуммаВычета;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ОчиститьПоляСтруктурыПоказателей(ПоказателиОтчета, СтруктураПолей)

	Значение = Неопределено;
	
	Для каждого КлючИЗначение Из СтруктураПолей Цикл
		Если ПоказателиОтчета.Свойство(КлючИЗначение.Ключ, Значение) Тогда
			ТипПоля = ТипЗнч(СтруктураПолей[КлючИЗначение.Ключ]);
			Если ТипПоля = Тип("Строка") Тогда
				СтруктураПолей[КлючИЗначение.Ключ] = ""
			ИначеЕсли ТипПоля = Тип("Дата") Тогда
				СтруктураПолей[КлючИЗначение.Ключ] = '00010101'
			Иначе
				СтруктураПолей[КлючИЗначение.Ключ] = 0
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция НовоеПустоеДеревоДляОтчета()
	
	ПустоеДерево = Новый ДеревоЗначений;
	ПустоеДерево.Колонки.Добавить("Данные", Новый ОписаниеТипов("Структура"));
	ПустоеДерево.Колонки.Добавить("ДанныеМногострочныхЧастей", Новый ОписаниеТипов("Структура"));
	
	Возврат ПустоеДерево
	
КонецФункции

Функция УдалитьПоляРасшифровкиИзЗапроса(Знач ТекстЗапроса, МассивПолей, ИмяТаблицы = "СведенияОДоходах")
	
	Для каждого ПолеРасшифровки Из МассивПолей Цикл
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,ИмяТаблицы + "." + ПолеРасшифровки,"Неопределено");
	КонецЦикла;
	
	Возврат ТекстЗапроса
	
КонецФункции	

#КонецОбласти

