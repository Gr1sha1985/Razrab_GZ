
#Область СлужебныеПроцедурыИФункции

Процедура ДополнитьФормуПанельюВычетов(Форма, ОписаниеПанелиВычеты = Неопределено, ДобавлятьЭлементыФормы = Истина, ДобавлятьРеквизитыФормы = Истина, ОтложенноеИзменение = Ложь) Экспорт
	
	Если ОписаниеПанелиВычеты = Неопределено Тогда 
		ОписаниеПанелиВычеты = Форма.ОписаниеПанелиВычетыНаСервере();
	КонецЕсли;
	
	ГруппаФормыПанельВычеты = Форма.Элементы.Найти(ОписаниеПанелиВычеты.ИмяГруппыФормыПанелиВычеты);
	
	Если ДобавлятьРеквизитыФормы Тогда
		Если НЕ ГруппаФормыПанельВычеты = Неопределено И ПустаяСтрока(ГруппаФормыПанельВычеты.ПутьКДаннымЗаголовка) Тогда
			МассивИменРеквизитовФормы = Новый Массив;
			ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(Форма, МассивИменРеквизитовФормы);
			МассивДобавляемыхРеквизитов = Новый Массив;
			УчетНДФЛФормы.ДополнитьМассивРеквизитовПанелиВычетов(Форма, МассивДобавляемыхРеквизитов, МассивИменРеквизитовФормы, ОписаниеПанелиВычеты);
			ЗарплатаКадры.ИзменитьРеквизитыФормы(Форма, МассивДобавляемыхРеквизитов, МассивИменРеквизитовФормы,, ОтложенноеИзменение);
		КонецЕсли; 
	КонецЕсли; 
	
	Если ДобавлятьЭлементыФормы Тогда
		
		СвязиПараметровВыбора = УчетНДФЛФормы.МассивСвязейПараметровВыбораВычетовНДФЛ(ОписаниеПанелиВычеты);
		
		Если ГруппаФормыПанельВычеты = Неопределено Тогда
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Не найден элемент формы (группа ""%1"") для размещения элементов управления панелью НДФЛ'"),
				ОписаниеПанелиВычеты.ИмяГруппыФормыПанелиВычеты);
		КонецЕсли; 
		Если ПустаяСтрока(ГруппаФормыПанельВычеты.ПутьКДаннымЗаголовка) Тогда
			ГруппаФормыПанельВычеты.ПутьКДаннымЗаголовка = ГруппаФормыПанельВычеты.Имя + "Заголовок";
		КонецЕсли; 
		
		НастраиваемыеПанели = ОписаниеПанелиВычеты.НастраиваемыеПанели;
		ВычетыЛичные = НастраиваемыеПанели.Получить("ВычетыЛичные");
		ВычетыНаДетейИИмущественные = НастраиваемыеПанели.Получить("ВычетыНаДетейИИмущественные");
		ВычетыКДоходам = НастраиваемыеПанели.Получить("ВычетыКДоходам");
		
		ГруппаВычетыНаДетейИИмущественные = Форма.Элементы.Найти(ГруппаФормыПанельВычеты.Имя + "ГруппаВычетыНаДетейИИмущественные");
		Если ВычетыНаДетейИИмущественные <> Неопределено И ГруппаВычетыНаДетейИИмущественные <> Неопределено Тогда
			
			ГруппаВычетыНаДетейИИмущественные.Заголовок = НСтр("ru='Стандартные и имущественные'");
			
			Таблица = Форма.Элементы.Найти(ГруппаФормыПанельВычеты.Имя + "ВычетыНаДетейИИмущественные");
			Если Таблица = Неопределено Тогда
				
				Форма.Элементы.Переместить(ГруппаВычетыНаДетейИИмущественные, ГруппаФормыПанельВычеты);
				ГруппаВычетыНаДетейИИмущественные.ПутьКДаннымЗаголовка = ГруппаФормыПанельВычеты.Имя + "ПредставлениеВычетовНаДетейИИмущественных";
				
				Таблица = Форма.Элементы.Добавить(ГруппаФормыПанельВычеты.Имя + "ВычетыНаДетейИИмущественные", Тип("ТаблицаФормы"), ГруппаВычетыНаДетейИИмущественные);
				Таблица.ГоризонтальнаяПолосаПрокрутки = ИспользованиеПолосыПрокрутки.НеИспользовать;
				Таблица.ВысотаВСтрокахТаблицы = 3;
				Таблица.ПутьКДанным = ВычетыНаДетейИИмущественные;
				Таблица.ИзменятьПорядокСтрок = Ложь;
				Таблица.АвтовводНовойСтроки = Ложь;
				Таблица.РастягиватьПоВертикали = Ложь;
				Таблица.РастягиватьПоГоризонтали = Ложь;
				Если Форма.ТолькоПросмотр Тогда
					Таблица.ИзменятьСоставСтрок = Ложь;
					Таблица.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
				КонецЕсли; 
				Таблица.УстановитьДействие("ПриИзменении",					"Подключаемый_ВычетыНаДетейИИмущественныеПриИзменении");
				Таблица.УстановитьДействие("ПриНачалеРедактирования", 		"Подключаемый_ВычетыНаДетейИИмущественныеПриНачалеРедактирования");
				Таблица.УстановитьДействие("ПередНачаломДобавления", 		"Подключаемый_ВычетыНаДетейИИмущественныеПередНачаломДобавления");
				Таблица.УстановитьДействие("ПередНачаломИзменения", 		"Подключаемый_ВычетыНаДетейИИмущественныеПередНачаломИзменения");
				Таблица.УстановитьДействие("ПередУдалением", 				"Подключаемый_ВычетыНаДетейИИмущественныеПередУдалением");
				Таблица.УстановитьДействие("ПриОкончанииРедактирования", 	"Подключаемый_ВычетыНаДетейИИмущественныеПриОкончанииРедактирования");
				
				Поле = Форма.Элементы.Добавить(Таблица.Имя + "КодВычета", Тип("ПолеФормы"), Таблица);
				Поле.Вид = ВидПоляФормы.ПолеВвода;
				Поле.Заголовок = НСтр("ru = 'Код'");
				Поле.ПутьКДанным = Таблица.ПутьКДанным + ".КодВычета";
				Поле.БыстрыйВыбор = Истина;
				Поле.СвязиПараметровВыбора = Новый ФиксированныйМассив(СвязиПараметровВыбора);
				МассивГруппВычетов = Новый Массив;
				МассивГруппВычетов.Добавить(Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей);
				МассивГруппВычетов.Добавить(Перечисления.ГруппыВычетовПоНДФЛ.Имущественные);
				МассивГруппВычетов.Добавить(Перечисления.ГруппыВычетовПоНДФЛ.СоциальныеПоУведомлениюНО);
				МассивПараметровВыбора = Новый Массив;
				МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.ГруппаВычета", Новый ФиксированныйМассив(МассивГруппВычетов)));
				Поле.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
				
				Поле = Форма.Элементы.Добавить(Таблица.Имя + "РазмерВычета", Тип("ПолеФормы"), Таблица);
				Поле.Вид = ВидПоляФормы.ПолеВвода;
				Поле.Заголовок = НСтр("ru = 'Размер'");
				Поле.ПутьКДанным = Таблица.ПутьКДанным + ".РазмерВычета";
				
				Поле = Форма.Элементы.Добавить(Таблица.Имя + "МесяцПериодаПредоставленияВычетаСтрокой", Тип("ПолеФормы"), Таблица);
				Поле.Вид = ВидПоляФормы.ПолеВвода;
				Поле.Заголовок = НСтр("ru = 'Месяц'");
				Поле.КнопкаВыбора = Истина;
				Поле.КнопкаРегулирования = Истина;
				Поле.УстановитьДействие("ПриИзменении",			"Подключаемый_ВычетыНаДетейИИмущественныеМесяцПериодаПредоставленияВычетаСтрокойПриИзменении");
				Поле.УстановитьДействие("НачалоВыбора", 		"Подключаемый_ВычетыНаДетейИИмущественныеМесяцПериодаПредоставленияВычетаСтрокойНачалоВыбора");
				Поле.УстановитьДействие("Регулирование", 		"Подключаемый_ВычетыНаДетейИИмущественныеМесяцПериодаПредоставленияВычетаСтрокойРегулирование");
				Поле.УстановитьДействие("АвтоПодбор", 			"Подключаемый_ВычетыНаДетейИИмущественныеМесяцПериодаПредоставленияВычетаСтрокойАвтоПодбор");
				Поле.УстановитьДействие("ОкончаниеВводаТекста", "Подключаемый_ВычетыНаДетейИИмущественныеМесяцПериодаПредоставленияВычетаСтрокойОкончаниеВводаТекста");
				Поле.ПутьКДанным = Таблица.ПутьКДанным + ".МесяцПериодаПредоставленияВычетаСтрокой";
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ВычетыЛичные <> Неопределено Тогда
			
			ГруппаВычетыЛичные = Форма.Элементы.Найти(ГруппаФормыПанельВычеты.Имя + "ГруппаВычетыЛичные");
			Если ГруппаВычетыЛичные <> Неопределено И ГруппаВычетыЛичные.ПодчиненныеЭлементы.Количество() = 0 Тогда
				
				Форма.Элементы.Переместить(ГруппаВычетыЛичные, ГруппаФормыПанельВычеты);
				ГруппаВычетыЛичные.ПутьКДаннымЗаголовка = ГруппаФормыПанельВычеты.Имя + "ПредставлениеВычетовЛичных";
				
				Поле = Форма.Элементы.Добавить(ГруппаФормыПанельВычеты.Имя + "ПримененныйВычетЛичныйКодВычета", Тип("ПолеФормы"), ГруппаВычетыЛичные);
				Поле.Вид = ВидПоляФормы.ПолеВвода;
				Поле.Заголовок = НСтр("ru = 'Код'");
				Поле.Ширина = 5;
				Поле.АвтоМаксимальнаяШирина = Ложь;
				Поле.РастягиватьПоГоризонтали = Ложь;
				Поле.КнопкаОткрытия = Ложь;
				Поле.ПутьКДанным = ГруппаФормыПанельВычеты.Имя + "ПримененныйВычетЛичныйКодВычета";
				Поле.УстановитьДействие("ПриИзменении", "Подключаемый_ВычетыЛичныеПриИзменении");
				Поле.БыстрыйВыбор = Истина;
				Поле.СвязиПараметровВыбора = Новый ФиксированныйМассив(СвязиПараметровВыбора);
				МассивПараметровВыбора = Новый Массив;
				МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.ГруппаВычета", Перечисления.ГруппыВычетовПоНДФЛ.Стандартные));
				Поле.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
				
				Поле = Форма.Элементы.Добавить(ГруппаФормыПанельВычеты.Имя + "ПримененныйВычетЛичный", Тип("ПолеФормы"), ГруппаВычетыЛичные);
				Поле.Вид = ВидПоляФормы.ПолеВвода;
				Поле.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
				Поле.Ширина = 8;
				Поле.АвтоМаксимальнаяШирина = Ложь;
				Поле.РастягиватьПоГоризонтали = Ложь;
				Поле.КнопкаВыбора = Ложь;
				Поле.ПутьКДанным = ГруппаФормыПанельВычеты.Имя + "ПримененныйВычетЛичный";
				Поле.УстановитьДействие("ПриИзменении", "Подключаемый_ВычетыЛичныеПриИзменении");
				
				Поле = Форма.Элементы.Добавить(ГруппаФормыПанельВычеты.Имя + "ПримененныйВычетЛичныйКЗачетуВозвратуКодВычета", Тип("ПолеФормы"), ГруппаВычетыЛичные);
				Поле.Вид = ВидПоляФормы.ПолеВвода;
				Поле.Заголовок = НСтр("ru = 'Код'");
				Поле.Ширина = 5;
				Поле.АвтоМаксимальнаяШирина = Ложь;
				Поле.РастягиватьПоГоризонтали = Ложь;
				Поле.КнопкаОткрытия = Ложь;
				Поле.ПутьКДанным = ГруппаФормыПанельВычеты.Имя + "ПримененныйВычетЛичныйКЗачетуВозвратуКодВычета";
				Поле.УстановитьДействие("ПриИзменении", "Подключаемый_ВычетыЛичныеПриИзменении");
				Поле.БыстрыйВыбор = Истина;
				Поле.СвязиПараметровВыбора = Новый ФиксированныйМассив(СвязиПараметровВыбора);
				МассивПараметровВыбора = Новый Массив;
				МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.ГруппаВычета", Перечисления.ГруппыВычетовПоНДФЛ.Стандартные));
				Поле.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
				
				Поле = Форма.Элементы.Добавить(ГруппаФормыПанельВычеты.Имя + "ПримененныйВычетЛичныйКЗачетуВозврату", Тип("ПолеФормы"), ГруппаВычетыЛичные);
				Поле.Вид = ВидПоляФормы.ПолеВвода;
				Поле.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
				Поле.Ширина = 8;
				Поле.АвтоМаксимальнаяШирина = Ложь;
				Поле.РастягиватьПоГоризонтали = Ложь;
				Поле.КнопкаВыбора = Ложь;
				Поле.ПутьКДанным = ГруппаФормыПанельВычеты.Имя + "ПримененныйВычетЛичныйКЗачетуВозврату";
				Поле.УстановитьДействие("ПриИзменении", "Подключаемый_ВычетыЛичныеПриИзменении");
				
			КонецЕсли;
			
		КонецЕсли;
		
		ГруппаВычетыКДоходам = Форма.Элементы.Найти(ГруппаФормыПанельВычеты.Имя + "ГруппаВычетыКДоходам");
		Если ВычетыКДоходам  <> Неопределено И ГруппаВычетыКДоходам <> Неопределено Тогда
			
			Таблица = Форма.Элементы.Найти(ГруппаФормыПанельВычеты.Имя + "ВычетыКДоходам");
			Если Таблица = Неопределено Тогда
				
				Форма.Элементы.Переместить(ГруппаВычетыКДоходам, ГруппаФормыПанельВычеты);
				ГруппаВычетыКДоходам.ПутьКДаннымЗаголовка = ГруппаФормыПанельВычеты.Имя + "ПредставлениеВычетовКДоходам";
				
				Таблица = Форма.Элементы.Добавить(ГруппаФормыПанельВычеты.Имя + "ВычетыКДоходам", Тип("ТаблицаФормы"), ГруппаВычетыКДоходам);
				Таблица.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
				Таблица.АвтовводНовойСтроки = Ложь;
				Таблица.ГоризонтальнаяПолосаПрокрутки = ИспользованиеПолосыПрокрутки.НеИспользовать;
				Таблица.ВысотаВСтрокахТаблицы = 2;
				Таблица.ПутьКДанным = ВычетыКДоходам;
				Таблица.ИзменятьСоставСтрок = Ложь;
				Таблица.ИзменятьПорядокСтрок = Ложь;
				Таблица.РастягиватьПоВертикали = Ложь;
				Таблица.РастягиватьПоГоризонтали = Ложь;
				Если Форма.ТолькоПросмотр Тогда
					Таблица.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
				КонецЕсли; 
				Таблица.УстановитьДействие("ПриИзменении",					"Подключаемый_ВычетыКДоходамПриИзменении");
				Таблица.УстановитьДействие("ПередНачаломИзменения",			"Подключаемый_ВычетыКДоходамПередНачаломИзменения");
				Таблица.УстановитьДействие("ПриОкончанииРедактирования",	"Подключаемый_ВычетыКДоходамПриОкончанииРедактирования");
				
				Поле = Форма.Элементы.Добавить(Таблица.Имя + "Начисление", Тип("ПолеФормы"), Таблица);
				Поле.Вид = ВидПоляФормы.ПолеВвода;
				Поле.Заголовок = НСтр("ru = 'Начисление'");
				Поле.ПутьКДанным = Таблица.ПутьКДанным + ".Начисление";
				Поле.ТолькоПросмотр = Истина;
				
				Поле = Форма.Элементы.Добавить(Таблица.Имя + "СуммаВычета", Тип("ПолеФормы"), Таблица);
				Поле.Вид = ВидПоляФормы.ПолеВвода;
				Поле.Заголовок = НСтр("ru = 'Вычет'");
				Поле.РастягиватьПоГоризонтали = Ложь;
				Поле.ПутьКДанным = Таблица.ПутьКДанным + ".СуммаВычета";
				
				Поле = Форма.Элементы.Добавить(Таблица.Имя + "КодВычета", Тип("ПолеФормы"), Таблица);
				Поле.Вид = ВидПоляФормы.ПолеВвода;
				Поле.Заголовок = НСтр("ru = 'Код'");
				Поле.РастягиватьПоГоризонтали = Ложь;
				Поле.ПутьКДанным = Таблица.ПутьКДанным + ".КодВычета";
				Поле.БыстрыйВыбор = Истина;
				Поле.СвязиПараметровВыбора = Новый ФиксированныйМассив(СвязиПараметровВыбора);
				МассивПараметровВыбора = Новый Массив;
				МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.ГруппаВычета", Перечисления.ГруппыВычетовПоНДФЛ.ПустаяСсылка()));
				Поле.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ДополнитьМассивРеквизитовПанелиВычетов(Форма, МассивДобавляемыхРеквизитов, МассивИменРеквизитовФормы, ОписаниеПанелиВычеты = Неопределено) Экспорт
	
	Если ОписаниеПанелиВычеты = Неопределено Тогда 
		ОписаниеПанелиВычеты = Форма.ОписаниеПанелиВычетыНаСервере();
	КонецЕсли;
		
	ИмяГруппыФормыПанелиВычеты = ОписаниеПанелиВычеты.ИмяГруппыФормыПанелиВычеты;
	
	Реквизит = Новый РеквизитФормы(ИмяГруппыФормыПанелиВычеты + "Заголовок", 
		Новый ОписаниеТипов("Строка"));
	МассивДобавляемыхРеквизитов.Добавить(Реквизит);
	
	Реквизит = Новый РеквизитФормы(ИмяГруппыФормыПанелиВычеты + "МаксимальныйИдентификаторСтрокиНДФЛ", 
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 0)));
	МассивДобавляемыхРеквизитов.Добавить(Реквизит);
	
	Реквизит = Новый РеквизитФормы(ИмяГруппыФормыПанелиВычеты + "ИдентификаторУдаляемойСтрокиСтрокиНДФЛ", 
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 0)));
	МассивДобавляемыхРеквизитов.Добавить(Реквизит);
	
	НастраиваемыеПанели = ОписаниеПанелиВычеты.НастраиваемыеПанели;
	
	// Панель Вычеты личные
	ВычетыЛичные = НастраиваемыеПанели.Получить("ВычетыЛичные");
	Если ВычетыЛичные <> Неопределено Тогда
		
		Реквизит = Новый РеквизитФормы(ИмяГруппыФормыПанелиВычеты + "ПредставлениеВычетовЛичных", 
			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 2)));
		МассивДобавляемыхРеквизитов.Добавить(Реквизит);
		
		Реквизит = Новый РеквизитФормы("ПредставлениеВычетовЛичных", 
			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 2)), ОписаниеПанелиВычеты.ТабличнаяЧастьНДФЛ.ПутьКДаннымНДФЛ);
		МассивДобавляемыхРеквизитов.Добавить(Реквизит);
		
		Реквизит = Новый РеквизитФормы(ИмяГруппыФормыПанелиВычеты + "ПримененныйВычетЛичный", 
			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 2)),
			,
			,
			Истина);
		МассивДобавляемыхРеквизитов.Добавить(Реквизит);
		
		Реквизит = Новый РеквизитФормы(ИмяГруппыФормыПанелиВычеты + "ПримененныйВычетЛичныйКодВычета", 
			Новый ОписаниеТипов("СправочникСсылка.ВидыВычетовНДФЛ"),
			,
			,
			Истина);
		МассивДобавляемыхРеквизитов.Добавить(Реквизит);
		
		Реквизит = Новый РеквизитФормы(ИмяГруппыФормыПанелиВычеты + "ПримененныйВычетЛичныйКЗачетуВозврату", 
			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 2)),
			,
			,
			Истина);
		МассивДобавляемыхРеквизитов.Добавить(Реквизит);
		
		Реквизит = Новый РеквизитФормы(ИмяГруппыФормыПанелиВычеты + "ПримененныйВычетЛичныйКЗачетуВозвратуКодВычета", 
			Новый ОписаниеТипов("СправочникСсылка.ВидыВычетовНДФЛ"),
			,
			,
			Истина);
		МассивДобавляемыхРеквизитов.Добавить(Реквизит);
		
	КонецЕсли;
	
	// Панель ВычетыНаДетейИИмущественные
	ВычетыНаДетейИИмущественные = НастраиваемыеПанели.Получить("ВычетыНаДетейИИмущественные");
	Если ВычетыНаДетейИИмущественные <> Неопределено Тогда
		
		Реквизит = Новый РеквизитФормы(ИмяГруппыФормыПанелиВычеты + "ПредставлениеВычетовНаДетейИИмущественных", 
			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 2)));
		МассивДобавляемыхРеквизитов.Добавить(Реквизит);
			
		Реквизит = Новый РеквизитФормы("ПредставлениеВычетовНаДетейИИмущественных", 
			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 2)), ОписаниеПанелиВычеты.ТабличнаяЧастьНДФЛ.ПутьКДаннымНДФЛ);
		МассивДобавляемыхРеквизитов.Добавить(Реквизит);
			
		Реквизит = Новый РеквизитФормы("ГруппаВычета", 
			Новый ОписаниеТипов("ПеречислениеСсылка.ГруппыВычетовПоНДФЛ"),
			ВычетыНаДетейИИмущественные);
		МассивДобавляемыхРеквизитов.Добавить(Реквизит);
		
		Реквизит = Новый РеквизитФормы("КодВычетаПредыдущий", 
			Новый ОписаниеТипов("СправочникСсылка.ВидыВычетовНДФЛ"),
			ВычетыНаДетейИИмущественные);
		МассивДобавляемыхРеквизитов.Добавить(Реквизит);
		
		Реквизит = Новый РеквизитФормы("РазмерВычетаПредыдущий", 
			Новый ОписаниеТипов("Число"),
			ВычетыНаДетейИИмущественные);
		МассивДобавляемыхРеквизитов.Добавить(Реквизит);
		
		Реквизит = Новый РеквизитФормы("МесяцПериодаПредоставленияВычетаСтрокой", 
			Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(15)),
			ВычетыНаДетейИИмущественные);
		МассивДобавляемыхРеквизитов.Добавить(Реквизит);
		
		ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(Форма, МассивИменРеквизитовФормы, ВычетыНаДетейИИмущественные);
	
	КонецЕсли;
	
	// Панель ВычетыКДоходам
	ВычетыКДоходам = НастраиваемыеПанели.Получить("ВычетыКДоходам");
	Если ВычетыКДоходам <> Неопределено Тогда
			
		Реквизит = Новый РеквизитФормы("СоответствиеКодовВычетовКодамДоходов", Новый ОписаниеТипов());
		МассивДобавляемыхРеквизитов.Добавить(Реквизит);
		
		Реквизит = Новый РеквизитФормы(ИмяГруппыФормыПанелиВычеты + "ПредставлениеВычетовКДоходам", 
			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 2)));
		МассивДобавляемыхРеквизитов.Добавить(Реквизит);
		
		Реквизит = Новый РеквизитФормы("ПредставлениеВычетовКДоходам", 
			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 2)), ОписаниеПанелиВычеты.ТабличнаяЧастьНДФЛ.ПутьКДаннымНДФЛ);
		МассивДобавляемыхРеквизитов.Добавить(Реквизит);
		
		Реквизит = Новый РеквизитФормы("ФизическоеЛицо", 
			Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"),
			ВычетыКДоходам);
		МассивДобавляемыхРеквизитов.Добавить(Реквизит);
		
		Реквизит = Новый РеквизитФормы("ВычетПримененныйКДоходам", 
			Новый ОписаниеТипов("Булево"),
			ВычетыКДоходам);
		МассивДобавляемыхРеквизитов.Добавить(Реквизит);
		
		ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(Форма, МассивИменРеквизитовФормы, ВычетыКДоходам);
	
	КонецЕсли;
	
	ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(Форма, МассивИменРеквизитовФормы, ОписаниеПанелиВычеты.ТабличнаяЧастьНДФЛ.ПутьКДаннымНДФЛ);
	
КонецПроцедуры

Функция МассивСвязейПараметровВыбораВычетовНДФЛ(ОписаниеПанелиВычеты) Экспорт
	
	СвязьПараметров = Неопределено;
	СвязиПараметровВыбора = Новый Массив;
	Если Не ПустаяСтрока(ОписаниеПанелиВычеты.ТабличнаяЧастьНДФЛ.ИмяПоляПериод) Тогда
		
		СвязьПараметров = Новый СвязьПараметраВыбора(
			"МесяцНачисления",
			"Элементы." + ОписаниеПанелиВычеты.ТабличнаяЧастьНДФЛ.ИмяТаблицыФормы + ".ТекущиеДанные." + ОписаниеПанелиВычеты.ТабличнаяЧастьНДФЛ.ИмяПоляПериод,
			РежимИзмененияСвязанногоЗначения.НеИзменять);
	Иначе
		
		Если НЕ ПустаяСтрока(ОписаниеПанелиВычеты.ПутьКДаннымПоляНалоговыйПериод) Тогда
			
			СвязьПараметров = Новый СвязьПараметраВыбора(
				"НалоговыйПериод",
				ОписаниеПанелиВычеты.ПутьКДаннымПоляНалоговыйПериод,
				РежимИзмененияСвязанногоЗначения.НеИзменять);
		КонецЕсли; 
		
	КонецЕсли;
	
	Если СвязьПараметров <> Неопределено Тогда
		СвязиПараметровВыбора.Добавить(СвязьПараметров);
	КонецЕсли; 
	
	Возврат СвязиПараметровВыбора;
	
КонецФункции

Процедура ПроверитьЗанятостьПолучателяВычетов(Организация, Месяц, Сотрудники, Отказ) Экспорт
	
	Если ТипЗнч(Сотрудники) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		СписокСотрудников = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Сотрудники);
	Иначе
		СписокСотрудников = Сотрудники;
	КонецЕсли;
	
	ПараметрыПолученияСотрудниковОрганизаций = КадровыйУчет.ПараметрыПолученияРабочихМестВОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудниковОрганизаций.Организация 					= Организация;
	ПараметрыПолученияСотрудниковОрганизаций.ОтбиратьПоГоловнойОрганизации	= Истина;
	ПараметрыПолученияСотрудниковОрганизаций.НачалоПериода					= НачалоМесяца(Месяц);
	ПараметрыПолученияСотрудниковОрганизаций.ОкончаниеПериода				= КонецМесяца(Месяц);
	
	КадровыйУчет.ПроверитьРаботающихФизическихЛиц(
		СписокСотрудников,
		ПараметрыПолученияСотрудниковОрганизаций,
		Отказ,
		Новый Структура("ИмяПоляСотрудник, ИмяОбъекта", "Сотрудник", "Объект"));
	
КонецПроцедуры

Процедура СоздатьВТНачисленияДокументаДляФормированияДоходовНДФЛ(МенеджерВременныхТаблиц,
																	ДокументОбъект,
																	ТаблицыНачислений,
																	СписокФизическихЛиц = Неопределено,
																	ПараметрыЗапроса = Неопределено) Экспорт 
	
	// Получаем массив имен табличных частей.
	ИменаТаблицНачислений = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ТаблицыНачислений);
	
	// Метаданные документа используем для обращения к таблице.
	МетаданныеДокумента = ДокументОбъект.Ссылка.Метаданные();
	
	НеобязательныеПоля = Новый Соответствие;
	НеобязательныеПоля.Вставить("СуммаВычета", "0");
	НеобязательныеПоля.Вставить("КодВычета", "ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)");
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если СписокФизическихЛиц <> Неопределено Тогда
		Запрос.УстановитьПараметр("СписокФизическихЛиц", СписокФизическихЛиц);
	КонецЕсли; 
	
	ТекстЗапроса = "";
	ПерваяТаблица = Истина;
	
	Для Каждого ИмяТаблицыНачислений Из ИменаТаблицНачислений Цикл
		
		Если Не ПерваяТаблица Тогда
			ТекстЗапроса = ТекстЗапроса + ЗарплатаКадрыОбщиеНаборыДанных.РазделительЗапросов();
		КонецЕсли;
		
		Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.НачислениеЗарплаты") Тогда
			// Составляем текст объединения - части запроса.
			ТекстОбъединения = 
			"ВЫБРАТЬ
			|	Начисления.Сотрудник КАК Сотрудник,
			|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
			|	Начисления.Подразделение КАК Подразделение,
			|	&ДатаНачала КАК ДатаНачала,
			|	Начисления.Начисление КАК Начисление,
			|	Начисления.Результат КАК Сумма,
			|	Начисления.СуммаВычета КАК СуммаВычета,
			|	Начисления.КодВычета КАК КодВычета
			|ПОМЕСТИТЬ ВТЗаписиНачислений
			|ИЗ
			|	#ТаблицаНачислений КАК Начисления
			|ГДЕ
			|	Начисления.ФизическоеЛицо В(&СписокФизическихЛиц)";
			Запрос.УстановитьПараметр("ДатаНачала",          ДокументОбъект.МесяцНачисления);
		Иначе		
			// Составляем текст объединения - части запроса.
			ТекстОбъединения = 
			"ВЫБРАТЬ
			|	Начисления.Сотрудник КАК Сотрудник,
			|	Начисления.Подразделение,
			|	Начисления.ДатаНачала КАК ДатаНачала,
			|	Начисления.Начисление КАК Начисление,
			|	Начисления.Результат КАК Сумма,
			|	Начисления.СуммаВычета КАК СуммаВычета,
			|	Начисления.КодВычета КАК КодВычета
			|ПОМЕСТИТЬ ВТЗаписиНачислений
			|ИЗ
			|	#ТаблицаНачислений КАК Начисления";
		КонецЕсли;
		
		// Проверяем необязательные поля.
		Для Каждого КлючИЗначение Из НеобязательныеПоля Цикл
			ИмяПоля = КлючИЗначение.Ключ;
			ЗначениеПоУмолчанию = КлючИЗначение.Значение;
			Если МетаданныеДокумента.ТабличныеЧасти[ИмяТаблицыНачислений].Реквизиты.Найти(ИмяПоля) <> Неопределено Тогда
				// Поле присутствует в метаданных табличной части - не делаем замен.
				Продолжить;
			КонецЕсли;
			ТекстОбъединения = СтрЗаменить(ТекстОбъединения, "Начисления." + ИмяПоля + " КАК", ЗначениеПоУмолчанию + " КАК");
		КонецЦикла;
		
		Если ПараметрыЗапроса <> Неопределено Тогда 
			Для Каждого КлючИЗначение Из ПараметрыЗапроса Цикл
				ИмяПоля = КлючИЗначение.Ключ;
				ЗначениеПараметра = КлючИЗначение.Значение;
				ТекстОбъединения = СтрЗаменить(ТекстОбъединения, "Начисления." + ИмяПоля + " КАК", "&" + ИмяПоля + " КАК");
				Запрос.УстановитьПараметр(ИмяПоля, ЗначениеПараметра);
			КонецЦикла;
		КонецЕсли;
		
		Запрос.УстановитьПараметр(ИмяТаблицыНачислений, ДокументОбъект[ИмяТаблицыНачислений].Выгрузить());
		
		ТекстОбъединения = СтрЗаменить(ТекстОбъединения, "#ТаблицаНачислений", "&" + ИмяТаблицыНачислений);
		ТекстОбъединения = СтрЗаменить(ТекстОбъединения, "ВТЗаписиНачислений", "ВТДанные" + ИмяТаблицыНачислений);
		
		ТекстЗапроса = ТекстЗапроса + ТекстОбъединения;
		ПерваяТаблица = Ложь;
		
	КонецЦикла;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	ТекстЗапроса = "";
	ПерваяТаблица = Истина;
	
	Для Каждого ИмяТаблицыНачислений Из ИменаТаблицНачислений Цикл
		
		Если Не ПерваяТаблица Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
	
		ТекстОбъединения = 
			"ВЫБРАТЬ
			|	ЗаписиНачислений.Сотрудник,
			|	ЗаписиНачислений.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ЗаписиНачислений.ДатаНачала,
			|	ЗаписиНачислений.Начисление,
			|	ЗаписиНачислений.Сумма КАК СуммаДохода,
			|	ЗаписиНачислений.СуммаВычета КАК СуммаВычетаНДФЛ,
			|	ЗаписиНачислений.КодВычета КАК КодВычетаНДФЛ,
			|	ЗаписиНачислений.Подразделение,
			|	ЗаписиНачислений.Подразделение КАК ПодразделениеОрганизации
			|ПОМЕСТИТЬ ВТНачисления
			|ИЗ
			|	ВТЗаписиНачислений КАК ЗаписиНачислений";
		
		Если СписокФизическихЛиц <> Неопределено Тогда
			ТекстОбъединения = ТекстОбъединения + "
				|	ГДЕ ЗаписиНачислений.Сотрудник.ФизическоеЛицо В (&СписокФизическихЛиц)";
		КонецЕсли; 
		
		Если Не ПерваяТаблица Тогда
			ТекстОбъединения = СтрЗаменить(ТекстОбъединения, "ПОМЕСТИТЬ ВТНачисления", "");
		КонецЕсли;
		
		ТекстОбъединения = СтрЗаменить(ТекстОбъединения, "ВТЗаписиНачислений", "ВТДанные" + ИмяТаблицыНачислений);
		
		ТекстЗапроса = ТекстЗапроса + ТекстОбъединения;
		ПерваяТаблица = Ложь;
		
	КонецЦикла;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти
