
#Область СлужебныйПрограммныйИнтерфейс

// Процедура подготавливает форму к использованию механизма фиксации изменений.
// 	Параметры:
//    	Форма - управляемая форма к которой подключается механизм.
//    	ТекущийОбъект - объект(ДокументОбъект, содержащий табличную часть с признаками фиксации реквизитов) или строка -
//    	                имя основного реквизита формы содержащего ДокументОбъект.
//    	ПараметрыФиксацииВторичныхДанных - структура см.
//    	                                   ФиксацияВторичныхДанныхВДокументахКлиентСервер.ПараметрыФиксацииВторичныхДанных.
//    	ОписаниеФиксацииРеквизитов - Соответствие, ключом которого является имя фиксируемого реквизита, а значением -
//    	                             структура с полями (см. описание СтруктураПараметровОписанияФиксацииРеквизитов).
//
Процедура ИнициализироватьМеханизмФиксацииРеквизитов(Форма, ТекущийОбъект, ПараметрыФиксацииВторичныхДанных = Неопределено) Экспорт
	Если ТипЗнч(ТекущийОбъект) = Тип("Строка") Тогда
		ОбъектМенеджера = Форма.РеквизитФормыВЗначение(ТекущийОбъект);
		ТекущийОбъект = Форма[ТекущийОбъект];
	Иначе
		ОбъектМенеджера = ТекущийОбъект;
	КонецЕсли;
	
	Если ПараметрыФиксацииВторичныхДанных = Неопределено Тогда
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ОбъектМенеджера.Метаданные().ПолноеИмя());
		ПараметрыФиксацииВторичныхДанных = МенеджерОбъекта.ПараметрыФиксацииВторичныхДанных();
		ПараметрыФиксацииВторичныхДанных.Вставить("ОписаниеФормы", Форма.ФиксацияОписаниеФормы(ПараметрыФиксацииВторичныхДанных));
	КонецЕсли;
	
	СоздатьРеквизитыФормы(Форма, ПараметрыФиксацииВторичныхДанных);
	СоздатьУсловноеОформлениеРеквизитовФормыФикс(Форма);
	УстановитьТекстПредупреждений(Форма);
	ЗаполнитьРеквизитыФормыФикс(Форма, ТекущийОбъект);
КонецПроцедуры

// Процедура считывает данные из ТЧ хранящей признаки фиксации реквизитов формы и устанавливает соответствующие
// значения  реквизитам с постфиксом Фикс.
//
Процедура ЗаполнитьРеквизитыФормыФикс(Форма, ТекущийОбъект) Экспорт
	ИменаРеквизитовИЭлементов = ФиксацияВторичныхДанныхВДокументахКлиентСервер.ИменаСлужебныхРеквизитовИЭлементовМеханизмаФиксацииДанных();
	ПараметрыФиксацииВторичныхДанных = Форма[ИменаРеквизитовИЭлементов.Получить("ПараметрыФиксацииВторичныхДанных")];
	ОписаниеЭлементовФормы = ПараметрыФиксацииВторичныхДанных.ОписаниеФормы.ОписаниеЭлементовФормы;
	
	Для каждого ОписаниеФиксацииРеквизита Из ПараметрыФиксацииВторичныхДанных.ОписаниеФиксацииРеквизитов Цикл
		Если ОписаниеФиксацииРеквизита.Значение.РеквизитСтроки Тогда
			ПрефиксПути = ОписаниеЭлементовФормы.Получить(ОписаниеФиксацииРеквизита.Ключ).ПрефиксПути;
			ПутьРеквизита = ФиксацияВторичныхДанныхВДокументахКлиентСервер.ИмяРеквизитаФикс(ОписаниеФиксацииРеквизита, ПрефиксПути);
			
			МассивИмен = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПутьРеквизита, ".");
			
			Объект        = Форма;
			ПоследнееПоле = МассивИмен[МассивИмен.Количество()-1];
			
			Для Сч = 0 По МассивИмен.Количество()-2 Цикл
				Объект = Объект[МассивИмен[Сч]]
			КонецЦикла;
			
			Для каждого СтрокаТЧ Из Объект Цикл
				ЗафиксированныйРеквизит = ТекущийОбъект.ФиксацияИзменений.НайтиСтроки(Новый Структура("ИмяРеквизита, Путь, ИдентификаторСтроки" , ОписаниеФиксацииРеквизита.Значение.ИмяРеквизита, ОписаниеФиксацииРеквизита.Значение.Путь, СтрокаТЧ.ИдентификаторСтрокиФикс));
				СтрокаТЧ[ПоследнееПоле] = ЗафиксированныйРеквизит.Количество() > 0;
			КонецЦикла;
		Иначе
			ЗафиксированныйРеквизит = ТекущийОбъект.ФиксацияИзменений.НайтиСтроки(Новый Структура("ИмяРеквизита, Путь" ,ОписаниеФиксацииРеквизита.Значение.ИмяРеквизита, ОписаниеФиксацииРеквизита.Значение.Путь));
			ФиксацияВторичныхДанныхВДокументахКлиентСервер.УстановитьПризнакФиксацииРеквизита(Форма, ОписаниеФиксацииРеквизита, ЗафиксированныйРеквизит.Количество() > 0);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

// Процедура устанавливает ПредупреждениеПриРедактировании для реквизитов
// подключенных к механизму фиксации изменений реквизитов формы.
// 	Параметры:
//    	Форма - управляемая форма к которой подключается механизм.
//    	ПараметрыФиксацииВторичныхДанных - структура см.
//    	                                   ФиксацияВторичныхДанныхВДокументахКлиентСервер.ПараметрыФиксацииВторичныхДанных.
//
Процедура УстановитьТекстПредупреждений(Форма) Экспорт
	ИменаРеквизитовИЭлементов = ФиксацияВторичныхДанныхВДокументахКлиентСервер.ИменаСлужебныхРеквизитовИЭлементовМеханизмаФиксацииДанных();
	ПараметрыФиксацииВторичныхДанных = Форма[ИменаРеквизитовИЭлементов.Получить("ПараметрыФиксацииВторичныхДанных")];
	
	Для каждого ОписаниеФиксацииРеквизита Из ПараметрыФиксацииВторичныхДанных.ОписаниеФиксацииРеквизитов Цикл
		Если ОписаниеФиксацииРеквизита.Значение.ОтображатьПредупреждение Тогда
			МассивЭлементов = ФиксацияВторичныхДанныхВДокументахКлиентСервер.МассивЭлементовФормыПоОписанию(Форма, ОписаниеФиксацииРеквизита);
			Для каждого ИмяЭлемента Из МассивЭлементов Цикл
				ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, ИмяЭлемента, "ПредупреждениеПриРедактировании", ОписаниеФиксацииРеквизита.Значение.СтрокаПредупреждения);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

// Процедура устанавливает значение реквизита формы ФиксацияОбъектЗафиксирован.
// 	Параметры:
//    	Форма - управляемая форма к которой подключается механизм.
//				У формы должен быть определен экспортный метод ОбъектЗафиксирован().
//
Процедура УстановитьОбъектЗафиксирован(Форма) Экспорт
	ИменаРеквизитовИЭлементов = ФиксацияВторичныхДанныхВДокументахКлиентСервер.ИменаСлужебныхРеквизитовИЭлементовМеханизмаФиксацииДанных();
	Форма[ИменаРеквизитовИЭлементов.Получить("ФиксацияОбъектЗафиксирован")] = Форма.ОбъектЗафиксирован();
КонецПроцедуры

// Процедура устанавливает значение реквизита формы ФиксацияОбъектЗафиксирован.
// 	Параметры:
//    	Форма - управляемая форма к которой подключается механизм.
//				У формы должен быть определен экспортный метод ОбъектЗафиксирован().
//
Процедура УстановитьМодифицированность(Форма, Модифицированность = Истина) Экспорт
	Форма.Модифицированность = Модифицированность;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ПредупреждениеОбновленияВторичныхДанных", "Видимость", Модифицированность);
КонецПроцедуры

// Выводит в форме предупреждение о том, что в автозаполняемых данных есть изменения, но они не могут обновлены.
//
// Параметры:
//    Форма - ФормаКлиентскогоПриложения - Форма, к которой подключен механизм.
//
Процедура ВывестиПредупреждениеОНаличииИзмененийВИсходныхДанныхКоторыеНельзяПрименить(Форма) Экспорт
	Декорация = Форма.Элементы.Найти("ПредупреждениеОбновленияВторичныхДанных");
	Если Декорация <> Неопределено Тогда
		Декорация.Видимость = Истина;
		Декорация.Заголовок = НСтр("ru = 'Автозаполняемые данные не обновлены, т.к. документ недоступен для редактирования.'");
		Декорация.Подсказка = НСтр("ru = 'Изменения в первичных данных (таких, как ФИО или паспортные данные сотрудника)
		|не могут быть обновлены в документе, поскольку документ недоступен для редактирования.'");
	КонецЕсли;
КонецПроцедуры

Функция ОписаниеЭлементаФормы() Экспорт
	Возврат Новый Структура("ПрефиксПути,ПрефиксПутиТекущиеДанные", "", "");
КонецФункции

Функция ОписаниеФормы() Экспорт
	ОписаниеФормы = Новый Структура("ОписаниеЭлементовФормы,ФормаРедактируетсяПослеФиксации");
	ОписаниеФормы.ФормаРедактируетсяПослеФиксации = Истина;
	Возврат ОписаниеФормы;
КонецФункции

// Процедура устанавливает обработчик события "При изменении" для каждого элемента формы подключенного к механизму
// фиксации реквизитов формы.
//    	ПараметрыФиксацииВторичныхДанных - структура см.
//    	                                   ФиксацияВторичныхДанныхВДокументахКлиентСервер.ПараметрыФиксацииВторичныхДанных.
//
Процедура ПодключитьОбработчикиФиксацииИзмененийРеквизитов(Форма, ОписаниеЭлементовДляПодключенияОбработчикаЗафиксироватьИзменениеРеквизитаВФорме) Экспорт
	ИменаРеквизитовИЭлементов = ФиксацияВторичныхДанныхВДокументахКлиентСервер.ИменаСлужебныхРеквизитовИЭлементовМеханизмаФиксацииДанных();
	ПараметрыФиксацииВторичныхДанных = Форма[ИменаРеквизитовИЭлементов.Получить("ПараметрыФиксацииВторичныхДанных")];
	
	ПриведенныйМассив = Новый Массив;
	Для каждого Элемент Из ОписаниеЭлементовДляПодключенияОбработчикаЗафиксироватьИзменениеРеквизитаВФорме Цикл
		ПриведенныйМассив.Добавить(ВРег(Элемент.Ключ));
	КонецЦикла;
	
	Для каждого ОписаниеФиксацииРеквизита Из ПараметрыФиксацииВторичныхДанных.ОписаниеФиксацииРеквизитов Цикл
		
		МассивЭлементов = ФиксацияВторичныхДанныхВДокументахКлиентСервер.МассивЭлементовФормыПоОписанию(Форма, ОписаниеФиксацииРеквизита);
		
		Для каждого ИмяЭлемента Из МассивЭлементов Цикл
			Если НЕ ПриведенныйМассив.Найти(ИмяЭлемента) = Неопределено
				И НЕ ЗначениеЗаполнено(Форма.Элементы[ИмяЭлемента].ПолучитьДействие("ПриИзменении")) Тогда
				Форма.Элементы[ИмяЭлемента].УстановитьДействие("ПриИзменении", "Подключаемый_ЗафиксироватьИзменениеРеквизитаВФорме");
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура создает элементы условного оформления для каждого реквизита подключенного к механизму фиксации реквизитов
// формы.
//    	ПараметрыФиксацииВторичныхДанных - структура см.
//    	                                   ФиксацияВторичныхДанныхВДокументахКлиентСервер.ПараметрыФиксацииВторичныхДанных.
//
Процедура СоздатьУсловноеОформлениеРеквизитовФормыФикс(Форма)
	ИменаРеквизитовИЭлементов = ФиксацияВторичныхДанныхВДокументахКлиентСервер.ИменаСлужебныхРеквизитовИЭлементовМеханизмаФиксацииДанных();
	ПараметрыФиксацииВторичныхДанных = Форма[ИменаРеквизитовИЭлементов.Получить("ПараметрыФиксацииВторичныхДанных")];
	ОписаниеФормы = ПараметрыФиксацииВторичныхДанных.ОписаниеФормы;
	
	ОписаниеЭлементовФормы = ОписаниеФормы.ОписаниеЭлементовФормы;
	
	Для каждого ОписаниеФиксацииРеквизита Из ПараметрыФиксацииВторичныхДанных.ОписаниеФиксацииРеквизитов Цикл
		
		МассивЭлементов = ФиксацияВторичныхДанныхВДокументахКлиентСервер.МассивЭлементовФормыПоОписанию(Форма, ОписаниеФиксацииРеквизита);
		
		ПрефиксПути = ОписаниеЭлементовФормы.Получить(ОписаниеФиксацииРеквизита.Ключ).ПрефиксПути;
		
		ДобавитьУсловноеОформлениеЖирныйШрифт(Форма, ОписаниеФиксацииРеквизита, ПрефиксПути, МассивЭлементов, ОписаниеФормы.ФормаРедактируетсяПослеФиксации);
		
		ДобавитьУсловноеОформлениеНеЖирныйШрифт(Форма, ОписаниеФиксацииРеквизита, ПрефиксПути, МассивЭлементов);
		
	КонецЦикла;
КонецПроцедуры

Процедура ДобавитьУсловноеОформлениеЖирныйШрифт(Форма, ОписаниеФиксацииРеквизита, ПрефиксПути, МассивЭлементов, РедактируетсяПослеФиксации)
	ЭлементУсловногоОформления = Форма.УсловноеОформление.Элементы.Добавить();
	
	ГруппаОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы  = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ЭлементОтбора 					= ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование 	= Истина;
	ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных(ФиксацияВторичныхДанныхВДокументахКлиентСервер.ИмяРеквизитаФикс(ОписаниеФиксацииРеквизита, ПрефиксПути));
	ЭлементОтбора.ПравоеЗначение 	= Истина;
	
	ЭлементОтбора 					= ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование 	= Истина;
	ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных(ФиксацияВторичныхДанныхВДокументахКлиентСервер.ИмяРеквизитаФиксИспользование(ОписаниеФиксацииРеквизита));
	ЭлементОтбора.ПравоеЗначение 	= Истина;
	
	Если НЕ РедактируетсяПослеФиксации Тогда
		ЭлементОтбора 					= ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование 	= Истина;
		ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("ФиксацияОбъектЗафиксирован");
		ЭлементОтбора.ПравоеЗначение 	= Ложь;
	КонецЕсли;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", Форма.ПараметрыФиксацииВторичныхДанных.ЖирныйШрифт);
	
	Для каждого ИмяЭлемента Из МассивЭлементов Цикл
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ИмяЭлемента);
	КонецЦикла;
КонецПроцедуры

Процедура ДобавитьУсловноеОформлениеНеЖирныйШрифт(Форма, ОписаниеФиксацииРеквизита, ПрефиксПути, МассивЭлементов)
	ЭлементУсловногоОформления = Форма.УсловноеОформление.Элементы.Добавить();
	
	ГруппаОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы  = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ЭлементОтбора 					= ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.НеРавно;
	ЭлементОтбора.Использование 	= Истина;
	ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных(ФиксацияВторичныхДанныхВДокументахКлиентСервер.ИмяРеквизитаФикс(ОписаниеФиксацииРеквизита, ПрефиксПути));
	ЭлементОтбора.ПравоеЗначение 	= Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", Форма.ПараметрыФиксацииВторичныхДанных.НеЖирныйШрифт);
	
	Для каждого ИмяЭлемента Из МассивЭлементов Цикл
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ИмяЭлемента);
	КонецЦикла;
КонецПроцедуры

// Процедура создает реквизит формы ФиксацияСоответствиеПутейЭлементов и заполняет его.
//
Процедура СоздатьРеквизитыФормы(Форма, ПараметрыФиксацииВторичныхДанных)
	МассивИменРеквизитовФормы = Новый Массив;
	ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(Форма, МассивИменРеквизитовФормы);
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	ИменаРеквизитовИЭлементов = ФиксацияВторичныхДанныхВДокументахКлиентСервер.ИменаСлужебныхРеквизитовИЭлементовМеханизмаФиксацииДанных();
	
	// СоответствиеПутейЭлементовФормы
	Реквизит = Новый РеквизитФормы(ИменаРеквизитовИЭлементов.Получить("ФиксацияСоответствиеПутейЭлементов"), Новый ОписаниеТипов());
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
	// ПараметрыФиксацииВторичныхДанных
	Реквизит = Новый РеквизитФормы(ИменаРеквизитовИЭлементов.Получить("ПараметрыФиксацииВторичныхДанных"), Новый ОписаниеТипов());
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
	// ФиксацияОбъектЗафиксирован
	Реквизит = Новый РеквизитФормы(ИменаРеквизитовИЭлементов.Получить("ФиксацияОбъектЗафиксирован"), Новый ОписаниеТипов("Булево"));
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
	// Создание для каждого реквизита формы, подключенного к механизму фиксации изменений, дублирующий реквизит с
	// постфиксом Фикс.
	Обработанные = Новый Соответствие;
	ОписаниеЭлементовФормы = ПараметрыФиксацииВторичныхДанных.ОписаниеФормы.ОписаниеЭлементовФормы;
	Для Каждого ОписаниеФиксацииРеквизита Из ПараметрыФиксацииВторичныхДанных.ОписаниеФиксацииРеквизитов Цикл
		Путь = "";
		Если ОписаниеФиксацииРеквизита.Значение.РеквизитСтроки Тогда
			ПрефиксПути = ОписаниеЭлементовФормы.Получить(ОписаниеФиксацииРеквизита.Ключ).ПрефиксПути;
			Путь = ПрефиксПути + "." + ОписаниеФиксацииРеквизита.Значение.Путь;
			Если Обработанные[Путь] = Неопределено Тогда
				Обработанные.Вставить(Путь, 1);
				ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(Форма, МассивИменРеквизитовФормы, Путь);
			КонецЕсли;
		КонецЕсли;
		
		ИмяРеквизитаФикс = ОписаниеФиксацииРеквизита.Значение.ИмяРеквизита + "Фикс";
		Реквизит = Новый РеквизитФормы(ИмяРеквизитаФикс, Новый ОписаниеТипов("Булево"), Путь);
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		
		ИмяРеквизитаФиксИспользование = ОписаниеФиксацииРеквизита.Ключ + "ФиксИспользование";
		Реквизит = Новый РеквизитФормы(ИмяРеквизитаФиксИспользование, Новый ОписаниеТипов("Булево"));
		ДобавляемыеРеквизиты.Добавить(Реквизит);
	КонецЦикла;
	
	ЗарплатаКадры.ИзменитьРеквизитыФормы(Форма, ДобавляемыеРеквизиты, МассивИменРеквизитовФормы);
	
	Форма[ИменаРеквизитовИЭлементов.Получить("ФиксацияСоответствиеПутейЭлементов")] = СоответствиеПутейЭлементовФормы(Форма.Элементы);
	Форма[ИменаРеквизитовИЭлементов.Получить("ПараметрыФиксацииВторичныхДанных")] = ПараметрыФиксацииВторичныхДанных;
	Форма[ИменаРеквизитовИЭлементов.Получить("ФиксацияОбъектЗафиксирован")] = Форма.ОбъектЗафиксирован();
	
	ПредупреждениеОбновленияВторичныхДанных = Форма.Элементы.Найти(ИменаРеквизитовИЭлементов.Получить("ПредупреждениеОбновленияВторичныхДанных"));
	ГруппаПредупреждениеОбновленияВторичныхДанных = Форма.Элементы.Найти(ИменаРеквизитовИЭлементов.Получить("ГруппаПредупреждениеОбновленияВторичныхДанных"));
	Если ПредупреждениеОбновленияВторичныхДанных = Неопределено
		И ГруппаПредупреждениеОбновленияВторичныхДанных <> Неопределено Тогда
		ПредупреждениеОбновленияВторичныхДанных = Форма.Элементы.Добавить(ИменаРеквизитовИЭлементов.Получить("ПредупреждениеОбновленияВторичныхДанных"), Тип("ДекорацияФормы"), ГруппаПредупреждениеОбновленияВторичныхДанных);
		ПредупреждениеОбновленияВторичныхДанных.Заголовок = НСтр("ru = 'Автозаполняемые данные были обновлены.'");
		ПредупреждениеОбновленияВторичныхДанных.ЦветТекста = ЦветаСтиля.ЦветОсобогоТекста;
		ПредупреждениеОбновленияВторичныхДанных.ЦветТекста = ЦветаСтиля.ЦветОсобогоТекста;
		ПредупреждениеОбновленияВторичныхДанных.Шрифт = ШрифтыСтиля.ОбычныйШрифтТекста;
		ПредупреждениеОбновленияВторичныхДанных.Ширина = 30;
		ПредупреждениеОбновленияВторичныхДанных.РастягиватьПоГоризонтали = Ложь;
		ПредупреждениеОбновленияВторичныхДанных.Подсказка = НСтр("ru = 'Вторичные данные используемые в документе, такие, как ФИО или паспортные данные сотрудника, были изменены, например, в карточке сотрудника или в первичном документе.'");
		ПредупреждениеОбновленияВторичныхДанных.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
		ПредупреждениеОбновленияВторичныхДанных.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

// Функция обходит все элементы формы и возвращает массив элементов имеющих заданный путь.
//
Функция СоответствиеПутейЭлементовФормы(Элементы)
	СоответствиеПутейЭлементов = Новый Соответствие;
	
	Для каждого Элемент Из Элементы Цикл
		
		Если ТипЗнч(Элемент) <> Тип("ПолеФормы") Тогда
			Продолжить;
		КонецЕсли;
		
		ПутьКРеквизиту = ВРег(Элемент.ПутьКДанным);
		МассивЭлементов = СоответствиеПутейЭлементов.Получить(ПутьКРеквизиту);
		
		Если МассивЭлементов = Неопределено Тогда
			СоответствиеПутейЭлементов.Вставить(ПутьКРеквизиту, Новый Массив);
			МассивЭлементов = СоответствиеПутейЭлементов.Получить(ПутьКРеквизиту);
		КонецЕсли;
		
		ИмяЭлемента = ВРег(Элемент.Имя);
		
		Если МассивЭлементов.Найти(ИмяЭлемента) = Неопределено Тогда
			МассивЭлементов.Добавить(ИмяЭлемента);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Новый ФиксированноеСоответствие(СоответствиеПутейЭлементов)
КонецФункции

#КонецОбласти
