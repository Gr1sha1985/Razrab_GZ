 
#Область СлужебныеПроцедурыИФункции

Процедура НастроитьВариантыОтчетов(Настройки) Экспорт
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "РасчетныйЛистокПоРабочимМестам");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	// Исключение вариантов отчетов, не предназначенных для интерактивного использования.
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "Т49");
	Вариант.Включен = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "Форма0504401");
	Вариант.Включен = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "Форма0504401с2015");
	Вариант.Включен = Ложь;

	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "Форма0504402");
	Вариант.Включен = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "РасчетныйЛистокУправленческий");
	Вариант.Включен = Ложь;
	// Подчинение вариантов отчета по источникам финансирования функциональной опции ИспользоватьИсточникиФинансирования.
	ФункциональныеОпции = Новый Массив;
	ФункциональныеОпции.Добавить("ИспользоватьСтатьиФинансированияЗарплата");
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "АнализЗарплатыПоИсточникамФинансирования");
	Вариант.ФункциональныеОпции = ФункциональныеОпции;
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "ВедомостиСРазбивкойПоИсточникамФинансирования");
	Вариант.ФункциональныеОпции = ФункциональныеОпции;
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "КраткийСводПоИсточникамФинансирования");
	Вариант.ФункциональныеОпции = ФункциональныеОпции;
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "СводПоИсточникамФинансирования");
	Вариант.ФункциональныеОпции = ФункциональныеОпции;
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "УдержанияВРазрезеИсточниковФинансирования");
	Вариант.ФункциональныеОпции = ФункциональныеОпции;
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "РасчетныйЛистокСРазбивкойПоИсточникамФинансирования");
	Вариант.ФункциональныеОпции = ФункциональныеОпции;
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний, "РасчетныйЛистокПоРабочимМестамИСРазбивкойПоИсточникамФинансирования");
	Вариант.ФункциональныеОпции = ФункциональныеОпции;
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	ФункциональныеОпции = Новый Массив;
	ФункциональныеОпции.Добавить("ИспользоватьНесколькоОрганизаций");
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.КарточкаУчетаПоСтраховымВзносам, "КарточкаУчетаСтраховыхВзносовПоФилиалам");
	Вариант.ФункциональныеОпции = ФункциональныеОпции;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.УчетДепонированнойЗарплаты") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("УчетДепонированнойЗарплатыБазовый");
		Модуль.НастроитьВариантыОтчетов(Настройки);
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ЗарплатаКадрыДляНебольшихОрганизаций.РасчетЗарплаты") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("РасчетЗарплатыДляНебольшихОрганизаций");
		Модуль.НастроитьВариантыОтчетов(Настройки);
	КонецЕсли;
	
	// Исключение вариантов, которые используются в зависимости от настроек программы.
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализОбязательствПоНДФЛ, "КонтрольСроковУплатыПоСтатьям");
	Вариант.Включен = Ложь;
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализОбязательствПоНДФЛ, "КонтрольСроковУплатыПоИсточникам");
	Вариант.Включен = Ложь;
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализОбязательствПоНДФЛ, "УдержанныйНДФЛПоСтатьям");
	Вариант.Включен = Ложь;
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.АнализОбязательствПоНДФЛ, "УдержанныйНДФЛПоИсточникам");
	Вариант.Включен = Ложь;

	// Настройка отчетов
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.АнализВзносовВФонды);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.АнализЭкономииОтПониженногоТарифаСтраховыхВзносов);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.АнализНачисленийИУдержаний);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.АнализНДФЛ);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.АнализНДФЛДетальный);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.АнализУплатыНДФЛ);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.АнализОбязательствПоНДФЛ);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.ЗаявлениеДСВ1);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.КарточкаУчетаПоСтраховымВзносам);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.СправкаРасчетФСС);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.НалогиИВзносыКратко);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.НачисленныеДоходыВОтчетахПоНДФЛ);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.НачисленныеИПолученныеДоходыВОтчетахПоНДФЛ);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.ОтчетыПоСотрудникам);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.РегистрНалоговогоУчетаПоНДФЛ);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.РеестрПолучателейСтраховогоОбеспечения);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.СтраховыеВзносыПереданныеВПФР);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.УнифицированнаяФормаТ2);
	
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.ПечатнаяФормаСправкаОСреднемЗаработке);
	
	// Технологические отчеты
	ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.Расшифровка4ФСС).Включен = Ложь;
	ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.Расшифровка6НДФЛ).Включен = Ложь;
	ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РасшифровкаРСВ).Включен = Ложь;
	ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РасшифровкаРСВ1).Включен = Ложь;
	
КонецПроцедуры

Функция ЭтоКлючВариантаОтчетаРасчетныйЛисток(КлючВарианта) Экспорт
	
	Возврат КлючВарианта = "РасчетныйЛисток"
		Или КлючВарианта = "РасчетныйЛистокСРазбивкойПоИсточникамФинансирования"
		Или КлючВарианта = "РасчетныйЛистокПоРабочимМестам"
		Или КлючВарианта = "РасчетныйЛистокПоРабочимМестамИСРазбивкойПоИсточникамФинансирования";
	
КонецФункции

Процедура ЗаполнитьПользовательскиеПоляВариантаОтчета(КлючВарианта, НастройкиОтчета, НаАванс) Экспорт
	
	КоллекцияПользовательскихПолей = НастройкиОтчета.ПользовательскиеПоля.Элементы;
	
	Если КлючВарианта = "Т51"
		Или КлючВарианта = "Т51ПерваяПоловинаМесяца"
		Или КлючВарианта = "Т49"
		Или КлючВарианта = "Т49ПерваяПоловинаМесяца" Тогда
		
		Для Каждого ПользовательскоеПоле Из КоллекцияПользовательскихПолей Цикл
			
			Если ПользовательскоеПоле.Заголовок = "ОтработаноРабочихДней" Тогда
				
				Выражение = 
					"Выбор
					|	Когда Группа = Значение(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено)
					|		И НЕ ВидРасчета.КатегорияНачисленияИлиНеоплаченногоВремени В (ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаОтпуска),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодам),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоНесчастныйСлучайНаПроизводстве),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоПрофзаболевание),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛиста),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОтпускБезОплаты),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.БолезньБезОплаты))
					|		Тогда ОтработаноДней
					|	Иначе 0
					|Конец";
					
				ПользовательскоеПоле.УстановитьВыражениеДетальныхЗаписей(Выражение);
				ПользовательскоеПоле.УстановитьВыражениеИтоговыхЗаписей("Сумма(" + Выражение + ")");
				
			ИначеЕсли ПользовательскоеПоле.Заголовок = "ОтработаноРабочихЧасов" Тогда
				
				Выражение = 
					"Выбор
					|	Когда Группа = Значение(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено)
					|		И НЕ ВидРасчета.КатегорияНачисленияИлиНеоплаченногоВремени В (ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаОтпуска),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодам),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоНесчастныйСлучайНаПроизводстве),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоПрофзаболевание),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛиста),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОтпускБезОплаты),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.БолезньБезОплаты))
					|		Тогда ОтработаноЧасов
					|	Иначе 0
					|Конец";
					
				ПользовательскоеПоле.УстановитьВыражениеДетальныхЗаписей(Выражение);
				ПользовательскоеПоле.УстановитьВыражениеИтоговыхЗаписей("Сумма(" + Выражение + ")");
				
			ИначеЕсли ПользовательскоеПоле.Заголовок = "НачисленоПовременно" Тогда
				
				Выражение = 
					"Выбор
					|	Когда Группа = Значение(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено)
					|		И НЕ ВидРасчета.КатегорияНачисленияИлиНеоплаченногоВремени В (ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаОтпуска),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодам),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоНесчастныйСлучайНаПроизводстве),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоПрофзаболевание),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛиста),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОтпускБезОплаты),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.БолезньБезОплаты))
					|		Тогда Сумма
					|	Иначе 0
					|Конец";
					
				ПользовательскоеПоле.УстановитьВыражениеДетальныхЗаписей(Выражение);
				ПользовательскоеПоле.УстановитьВыражениеИтоговыхЗаписей("Сумма(" + Выражение + ")");
				
			ИначеЕсли ПользовательскоеПоле.Заголовок = "ПрочиеДоходы" Тогда
				
				Выражение = 
					"Выбор
					|	Когда Группа = Значение(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено)
					|		И ВидРасчета.КатегорияНачисленияИлиНеоплаченногоВремени В (ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаОтпуска),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодам),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоНесчастныйСлучайНаПроизводстве),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоПрофзаболевание),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛиста),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОтпускБезОплаты),
					|			ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.БолезньБезОплаты))
					|		Тогда Сумма
					|	Иначе 0
					|Конец";
					
				ПользовательскоеПоле.УстановитьВыражениеДетальныхЗаписей(Выражение);
				ПользовательскоеПоле.УстановитьВыражениеИтоговыхЗаписей("Сумма(" + Выражение + ")");
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция НаборыВнешнихДанныхАнализНачисленийИУдержаний() Экспорт
	
	НаборыВнешнихДанных = Новый Структура;
	
	НачисленияУдержанияДокумента = Новый ТаблицаЗначений;
	НачисленияУдержанияДокумента.Колонки.Добавить("МесяцНачисления",								Новый ОписаниеТипов("Дата"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ПериодДействия",									Новый ОписаниеТипов("Дата"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ДатаНачала",										Новый ОписаниеТипов("Дата"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ДатаОкончания",									Новый ОписаниеТипов("Дата"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ОрганизацияСортировки",						Новый ОписаниеТипов("СправочникСсылка.Организации"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ПодразделениеСортировки",						Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	
	НачисленияУдержанияДокумента.Колонки.Добавить("Организация",									Новый ОписаниеТипов("СправочникСсылка.Организации"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ОрганизацияГоловногоСотрудникаНаКонецПериода",	Новый ОписаниеТипов("СправочникСсылка.Организации"));
	
	НачисленияУдержанияДокумента.Колонки.Добавить("Подразделение",									Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ПодразделениеНаКонецПериода",					Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ПодразделениеГоловногоСотрудникаНаКонецПериода",	Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	
	НачисленияУдержанияДокумента.Колонки.Добавить("Должность",										Новый ОписаниеТипов("СправочникСсылка.Должности"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ДолжностьНаКонецПериода",						Новый ОписаниеТипов("СправочникСсылка.Должности"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ДолжностьГоловногоСотрудникаНаКонецПериода",		Новый ОписаниеТипов("СправочникСсылка.Должности"));
	
	НачисленияУдержанияДокумента.Колонки.Добавить("ВидЗанятости",									Новый ОписаниеТипов("ПеречислениеСсылка.ВидыЗанятости"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ВидЗанятостиНаКонецПериода",						Новый ОписаниеТипов("ПеречислениеСсылка.ВидыЗанятости"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ВидЗанятостиГоловногоСотрудникаНаКонецПериода",	Новый ОписаниеТипов("ПеречислениеСсылка.ВидыЗанятости"));
	
	НачисленияУдержанияДокумента.Колонки.Добавить("Сотрудник",										Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ГоловнойСотрудник",								Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ФизическоеЛицо",									Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ФИОПолные",										Новый ОписаниеТипов("Строка"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ФамилияИО",										Новый ОписаниеТипов("Строка"));
	НачисленияУдержанияДокумента.Колонки.Добавить("Фамилия",										Новый ОписаниеТипов("Строка"));
	НачисленияУдержанияДокумента.Колонки.Добавить("Отчество",										Новый ОписаниеТипов("Строка"));
	НачисленияУдержанияДокумента.Колонки.Добавить("Имя",											Новый ОписаниеТипов("Строка"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ДатаУвольнения",									Новый ОписаниеТипов("Дата"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ПриоритетРабочегоМеста",							Новый ОписаниеТипов("Число"));
	
	НачисленияУдержанияДокумента.Колонки.Добавить("ТарифнаяСтавка",									Новый ОписаниеТипов("Число"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ТарифнаяСтавкаНаКонецПериода",					Новый ОписаниеТипов("Число"));
	НачисленияУдержанияДокумента.Колонки.Добавить("Регистратор",									Новый ОписаниеТипов("ДокументСсылка.НачислениеЗарплаты"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ДокументОснование",								Метаданные.ОпределяемыеТипы.ОснованиеНачисленияУдержания.Тип);
	
	НачисленияУдержанияДокумента.Колонки.Добавить("ВидРасчета",										Новый ОписаниеТипов("ПланВидовРасчетаСсылка.Начисления,ПланВидовРасчетаСсылка.Удержания,ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	НачисленияУдержанияДокумента.Колонки.Добавить("СтатьяРасходов",									Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	НачисленияУдержанияДокумента.Колонки.Добавить("СтатьяФинансирования",							Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	НачисленияУдержанияДокумента.Колонки.Добавить("Группа",											Новый ОписаниеТипов("ПеречислениеСсылка.ГруппыНачисленияУдержанияВыплаты"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ПриоритетВидаРасчета",							Новый ОписаниеТипов("Число"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ИдентификаторСтроки",							Новый ОписаниеТипов("Число"));
	
	НачисленияУдержанияДокумента.Колонки.Добавить("Сумма",											Новый ОписаниеТипов("Число"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ОтработаноДней",									Новый ОписаниеТипов("Число"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ОтработаноЧасов",								Новый ОписаниеТипов("Число"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ОплаченоДней",									Новый ОписаниеТипов("Число"));
	НачисленияУдержанияДокумента.Колонки.Добавить("ОплаченоЧасов",									Новый ОписаниеТипов("Число"));
	
	НаборыВнешнихДанных.Вставить("НачисленияУдержанияДокумента", НачисленияУдержанияДокумента);
	
	Возврат НаборыВнешнихДанных;
	
КонецФункции

Функция ЗапросДанныеДокументаФизическихЛиц() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ВыводитьПериодыНачислений", Истина);
	Запрос.УстановитьПараметр("ВыводитьПоказателиНачисленийИУдержаний", Ложь);
	Запрос.УстановитьПараметр("ВыводитьВсеПоказателиНачисленийИУдержаний", Ложь);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НачисленияИУдержания.Период КАК Период,
		|	НачисленияИУдержания.Регистратор КАК Регистратор,
		|	НачисленияИУдержания.Организация КАК Организация,
		|	НачисленияИУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НачисленияИУдержания.Сотрудник КАК Сотрудник,
		|	НачисленияИУдержания.Подразделение КАК Подразделение,
		|	НачисленияИУдержания.НачислениеУдержание КАК НачислениеУдержание,
		|	НачисленияИУдержания.ГруппаНачисленияУдержанияВыплаты КАК ГруппаНачисленияУдержанияВыплаты,
		|	НачисленияИУдержания.ПериодДействия КАК ПериодДействия,
		|	НачисленияИУдержания.ДокументОснование КАК ДокументОснование,
		|	НачисленияИУдержания.ДатаНачала КАК ДатаНачала,
		|	НачисленияИУдержания.ДатаОкончания КАК ДатаОкончания,
		|	НачисленияИУдержания.ВремяВЧасах КАК ВремяВЧасах,
		|	НачисленияИУдержания.Сумма КАК Сумма,
		|	НачисленияИУдержания.ОтработаноДней КАК ОтработаноДней,
		|	НачисленияИУдержания.ОтработаноЧасов КАК ОтработаноЧасов,
		|	НачисленияИУдержания.ОплаченоДней КАК ОплаченоДней,
		|	НачисленияИУдержания.ОплаченоЧасов КАК ОплаченоЧасов,
		|	НачисленияИУдержания.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ПОМЕСТИТЬ ВТНачисленияУдержанияПоСотрудникам
		|ИЗ
		|	&НачисленияУдержанияПоСотрудникам КАК НачисленияИУдержания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НАЧАЛОПЕРИОДА(НачисленияИУдержания.Период, МЕСЯЦ) КАК МесяцНачисления,
		|	НачисленияИУдержания.Период КАК Период,
		|	НачисленияИУдержания.Регистратор КАК Регистратор,
		|	НачисленияИУдержания.Организация КАК Организация,
		|	НачисленияИУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НачисленияИУдержания.Сотрудник КАК Сотрудник,
		|	НачисленияИУдержания.Подразделение КАК Подразделение,
		|	НачисленияИУдержания.НачислениеУдержание КАК ВидРасчета,
		|	НачисленияИУдержания.ГруппаНачисленияУдержанияВыплаты КАК Группа,
		|	НачисленияИУдержания.ПериодДействия КАК ПериодДействия,
		|	НачисленияИУдержания.ДокументОснование КАК ДокументОснование,
		|	НачисленияИУдержания.ДатаНачала КАК ДатаНачала,
		|	НачисленияИУдержания.ДатаОкончания КАК ДатаОкончания,
		|	НачисленияИУдержания.ВремяВЧасах КАК ВремяВЧасах,
		|	НачисленияИУдержания.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	СУММА(НачисленияИУдержания.Сумма) КАК Сумма,
		|	СУММА(НачисленияИУдержания.ОтработаноДней) КАК ОтработаноДней,
		|	СУММА(НачисленияИУдержания.ОтработаноЧасов) КАК ОтработаноЧасов,
		|	СУММА(НачисленияИУдержания.ОплаченоДней) КАК ОплаченоДней,
		|	СУММА(НачисленияИУдержания.ОплаченоЧасов) КАК ОплаченоЧасов
		|ПОМЕСТИТЬ ВТНачисленияИУдержанияБезКадровыхДанных
		|ИЗ
		|	ВТНачисленияУдержанияПоСотрудникам КАК НачисленияИУдержания
		|
		|СГРУППИРОВАТЬ ПО
		|	НачисленияИУдержания.Период,
		|	НачисленияИУдержания.ФизическоеЛицо,
		|	НачисленияИУдержания.Подразделение,
		|	НачисленияИУдержания.ГруппаНачисленияУдержанияВыплаты,
		|	НачисленияИУдержания.НачислениеУдержание,
		|	НачисленияИУдержания.Организация,
		|	НачисленияИУдержания.Сотрудник,
		|	НачисленияИУдержания.ДатаНачала,
		|	НачисленияИУдержания.ДатаОкончания,
		|	НачисленияИУдержания.ВремяВЧасах,
		|	НачисленияИУдержания.ПериодДействия,
		|	НачисленияИУдержания.Регистратор,
		|	НАЧАЛОПЕРИОДА(НачисленияИУдержания.Период, МЕСЯЦ),
		|	НачисленияИУдержания.ДокументОснование,
		|	НачисленияИУдержания.ИдентификаторСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	КОНЕЦПЕРИОДА(НачисленияИУдержания.Период, МЕСЯЦ) КАК Период,
		|	НачисленияИУдержания.Организация КАК Организация,
		|	НачисленияИУдержания.Подразделение КАК Подразделение,
		|	НачисленияИУдержания.Сотрудник КАК Сотрудник,
		|	НачисленияИУдержания.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТВсеПериодомКадровыхДанных
		|ИЗ
		|	ВТНачисленияИУдержанияБезКадровыхДанных КАК НачисленияИУдержания
		|ГДЕ
		|	НачисленияИУдержания.Сотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	КОНЕЦПЕРИОДА(НачисленияИУдержания.Период, МЕСЯЦ),
		|	НачисленияИУдержания.Организация,
		|	НачисленияИУдержания.Подразделение,
		|	ВЫРАЗИТЬ(НачисленияИУдержания.Сотрудник КАК Справочник.Сотрудники).ГоловнойСотрудник,
		|	НачисленияИУдержания.ФизическоеЛицо
		|ИЗ
		|	ВТНачисленияИУдержанияБезКадровыхДанных КАК НачисленияИУдержания
		|ГДЕ
		|	НачисленияИУдержания.Сотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|	И НачисленияИУдержания.Сотрудник <> ВЫРАЗИТЬ(НачисленияИУдержания.Сотрудник КАК Справочник.Сотрудники).ГоловнойСотрудник
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НачисленияИУдержания.ДатаНачала,
		|	НачисленияИУдержания.Организация,
		|	НачисленияИУдержания.Подразделение,
		|	НачисленияИУдержания.Сотрудник,
		|	НачисленияИУдержания.ФизическоеЛицо
		|ИЗ
		|	ВТНачисленияИУдержанияБезКадровыхДанных КАК НачисленияИУдержания
		|ГДЕ
		|	НачисленияИУдержания.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1)
		|	И НачисленияИУдержания.Сотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НачисленияИУдержания.ДатаНачала,
		|	НачисленияИУдержания.Организация,
		|	НачисленияИУдержания.Подразделение,
		|	ВЫРАЗИТЬ(НачисленияИУдержания.Сотрудник КАК Справочник.Сотрудники).ГоловнойСотрудник,
		|	НачисленияИУдержания.ФизическоеЛицо
		|ИЗ
		|	ВТНачисленияИУдержанияБезКадровыхДанных КАК НачисленияИУдержания
		|ГДЕ
		|	НачисленияИУдержания.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1)
		|	И НачисленияИУдержания.Сотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|	И НачисленияИУдержания.Сотрудник <> ВЫРАЗИТЬ(НачисленияИУдержания.Сотрудник КАК Справочник.Сотрудники).ГоловнойСотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ДАТАВРЕМЯ(1, 1, 1) КАК Период,
		|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
		|	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) КАК Сотрудник,
		|	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) КАК ГоловнойСотрудник,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ГоловнаяОрганизация,
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
		|	ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка) КАК Должность,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ПустаяСсылка) КАК ВидЗанятости,
		|	"""" КАК ФИОПолные,
		|	"""" КАК ФамилияИО,
		|	"""" КАК Фамилия,
		|	"""" КАК Имя,
		|	"""" КАК Отчество,
		|	0 КАК ТарифнаяСтавка,
		|	0 КАК ТекущаяТарифнаяСтавка,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаУвольнения,
		|	0 КАК ПриоритетРабочегоМеста
		|ПОМЕСТИТЬ Представления_КадровыеДанныеСотрудниковАнализНачисленийИУдержаний
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДАТАВРЕМЯ(1, 1, 1) КАК Период,
		|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ГоловнаяОрганизация,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияСортировки,
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеСортировки
		|ПОМЕСТИТЬ Представления_ПодразделенияСортировкиСотрудников
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КадровыеДанныеСотрудниковСПриоритетами.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МАКСИМУМ(КадровыеДанныеСотрудниковСПриоритетами.Сотрудник) КАК Сотрудник
		|ПОМЕСТИТЬ ВТОсновныеСотрудникиФизическихЛиц
		|ИЗ
		|	Представления_КадровыеДанныеСотрудниковАнализНачисленийИУдержаний КАК КадровыеДанныеСотрудниковСПриоритетами
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВысшиеПриоритетыСотрудников КАК ВысшиеПриоритетыСотрудников
		|		ПО (ВысшиеПриоритетыСотрудников.Период = КадровыеДанныеСотрудниковСПриоритетами.Период)
		|			И (ВысшиеПриоритетыСотрудников.ФизическоеЛицо = КадровыеДанныеСотрудниковСПриоритетами.ФизическоеЛицо)
		|			И (ВысшиеПриоритетыСотрудников.ПриоритетРабочегоМеста = КадровыеДанныеСотрудниковСПриоритетами.ПриоритетРабочегоМеста)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Представления_ПодразделенияСортировкиСотрудников КАК ВысшиеПриоритетыПодразделенийСотрудников
		|		ПО КадровыеДанныеСотрудниковСПриоритетами.Период = ВысшиеПриоритетыПодразделенийСотрудников.Период
		|			И КадровыеДанныеСотрудниковСПриоритетами.ФизическоеЛицо = ВысшиеПриоритетыПодразделенийСотрудников.ФизическоеЛицо
		|			И (ЕСТЬNULL(КадровыеДанныеСотрудниковСПриоритетами.Подразделение, НЕОПРЕДЕЛЕНО) = ЕСТЬNULL(ВысшиеПриоритетыПодразделенийСотрудников.ПодразделениеСортировки, НЕОПРЕДЕЛЕНО))
		|
		|СГРУППИРОВАТЬ ПО
		|	КадровыеДанныеСотрудниковСПриоритетами.ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачисленияИУдержания.Период КАК Период,
		|	НачисленияИУдержания.Регистратор КАК Регистратор,
		|	НачисленияИУдержания.МесяцНачисления КАК МесяцНачисления,
		|	НачисленияИУдержания.Организация КАК Организация,
		|	НачисленияИУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НачисленияИУдержания.Сотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|			ТОГДА ОсновныеСотрудникиФизическихЛиц.Сотрудник
		|		ИНАЧЕ НачисленияИУдержания.Сотрудник
		|	КОНЕЦ КАК Сотрудник,
		|	НачисленияИУдержания.Подразделение КАК Подразделение,
		|	НачисленияИУдержания.ВидРасчета КАК ВидРасчета,
		|	НачисленияИУдержания.Группа КАК Группа,
		|	НачисленияИУдержания.ПериодДействия КАК ПериодДействия,
		|	НачисленияИУдержания.ДокументОснование КАК ДокументОснование,
		|	НачисленияИУдержания.ДатаНачала КАК ДатаНачала,
		|	НачисленияИУдержания.ДатаОкончания КАК ДатаОкончания,
		|	НачисленияИУдержания.ВремяВЧасах КАК ВремяВЧасах,
		|	НачисленияИУдержания.Сумма КАК Сумма,
		|	НачисленияИУдержания.ОтработаноДней КАК ОтработаноДней,
		|	НачисленияИУдержания.ОтработаноЧасов КАК ОтработаноЧасов,
		|	НачисленияИУдержания.ОплаченоДней КАК ОплаченоДней,
		|	НачисленияИУдержания.ОплаченоЧасов КАК ОплаченоЧасов,
		|	НачисленияИУдержания.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ПОМЕСТИТЬ ВТНачисленияУдержанияССотрудниками
		|ИЗ
		|	ВТНачисленияИУдержанияБезКадровыхДанных КАК НачисленияИУдержания
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОсновныеСотрудникиФизическихЛиц КАК ОсновныеСотрудникиФизическихЛиц
		|		ПО НачисленияИУдержания.ФизическоеЛицо = ОсновныеСотрудникиФизическихЛиц.ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачисленияИУдержания.Регистратор КАК Регистратор,
		|	НачисленияИУдержания.ВидРасчета КАК ВидРасчета,
		|	НачисленияИУдержания.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи
		|ПОМЕСТИТЬ ВТНомераЗаписей
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		НачисленияИУдержания.Регистратор КАК Регистратор,
		|		НачисленияИУдержания.ВидРасчета КАК ВидРасчета,
		|		НачисленияИУдержания.ИдентификаторСтроки КАК ИдентификаторСтроки
		|	ИЗ
		|		ВТНачисленияИУдержанияБезКадровыхДанных КАК НачисленияИУдержания) КАК НачисленияИУдержания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НачисленияИУдержания.Регистратор КАК Регистратор,
		|	НачисленияИУдержания.МесяцНачисления КАК МесяцНачисления,
		|	НачисленияИУдержания.Организация КАК Организация,
		|	КадровыеДанныеГоловныхСотрудников.Организация КАК ОрганизацияГоловногоСотрудникаНаКонецПериода,
		|	НачисленияИУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НачисленияИУдержания.Сотрудник КАК Сотрудник,
		|	ВЫРАЗИТЬ(НачисленияИУдержания.Сотрудник КАК Справочник.Сотрудники).ГоловнойСотрудник КАК ГоловнойСотрудник,
		|	КадровыеДанныеГоловныхСотрудников.ПриоритетРабочегоМеста КАК ПриоритетРабочегоМеста,
		|	НачисленияИУдержания.Подразделение КАК Подразделение,
		|	КадровыеДанныеСотрудниковНаКонецПериода.Подразделение КАК ПодразделениеНаКонецПериода,
		|	КадровыеДанныеГоловныхСотрудников.Подразделение КАК ПодразделениеГоловногоСотрудникаНаКонецПериода,
		|	ПодразделенияСортировкиСотрудников.ОрганизацияСортировки КАК ОрганизацияСортировки,
		|	ПодразделенияСортировкиСотрудников.ПодразделениеСортировки КАК ПодразделениеСортировки,
		|	НачисленияИУдержания.ВидРасчета КАК ВидРасчета,
		|	НачисленияИУдержания.Группа КАК Группа,
		|	НачисленияИУдержания.ПериодДействия КАК ПериодДействия,
		|	НачисленияИУдержания.ДокументОснование КАК ДокументОснование,
		|	НачисленияИУдержания.ДатаНачала КАК ДатаНачала,
		|	НачисленияИУдержания.ДатаОкончания КАК ДатаОкончания,
		|	НачисленияИУдержания.ВремяВЧасах КАК ВремяВЧасах,
		|	КадровыеДанныеГоловныхСотрудников.ФИОПолные КАК ФИОПолные,
		|	КадровыеДанныеГоловныхСотрудников.ФамилияИО КАК ФамилияИО,
		|	КадровыеДанныеГоловныхСотрудников.Фамилия КАК Фамилия,
		|	КадровыеДанныеГоловныхСотрудников.Имя КАК Имя,
		|	КадровыеДанныеГоловныхСотрудников.Отчество КАК Отчество,
		|	КадровыеДанныеСотрудников.ВидЗанятости КАК ВидЗанятости,
		|	КадровыеДанныеСотрудниковНаКонецПериода.ВидЗанятости КАК ВидЗанятостиНаКонецПериода,
		|	КадровыеДанныеГоловныхСотрудников.ВидЗанятости КАК ВидЗанятостиГоловногоСотрудникаНаКонецПериода,
		|	КадровыеДанныеСотрудников.Должность КАК Должность,
		|	КадровыеДанныеСотрудниковНаКонецПериода.Должность КАК ДолжностьНаКонецПериода,
		|	КадровыеДанныеГоловныхСотрудников.Должность КАК ДолжностьГоловногоСотрудникаНаКонецПериода,
		|	КадровыеДанныеСотрудников.ТарифнаяСтавка КАК ТарифнаяСтавка,
		|	ВЫБОР
		|		КОГДА КадровыеДанныеСотрудниковНаКонецПериода.ДатаУвольнения <> ДАТАВРЕМЯ(1, 1, 1)
		|				И КадровыеДанныеСотрудниковНаКонецПериода.ДатаУвольнения <= КадровыеДанныеСотрудниковНаКонецПериода.Период
		|			ТОГДА КадровыеДанныеСотрудниковНаКонецПериода.ТекущаяТарифнаяСтавка
		|		ИНАЧЕ КадровыеДанныеСотрудниковНаКонецПериода.ТарифнаяСтавка
		|	КОНЕЦ КАК ТарифнаяСтавкаНаКонецПериода,
		|	КадровыеДанныеГоловныхСотрудников.ДатаУвольнения КАК ДатаУвольнения,
		|	NULL КАК Показатель,
		|	0 КАК Значение,
		|	НачисленияИУдержания.Сумма КАК Сумма,
		|	НачисленияИУдержания.ОтработаноДней КАК ОтработаноДней,
		|	НачисленияИУдержания.ОтработаноЧасов КАК ОтработаноЧасов,
		|	НачисленияИУдержания.ОплаченоДней КАК ОплаченоДней,
		|	НачисленияИУдержания.ОплаченоЧасов КАК ОплаченоЧасов,
		|	ЛОЖЬ КАК Сторно,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(НачисленияИУдержания.ВидРасчета) = ТИП(ПланВидовРасчета.Начисления)
		|				ИЛИ ТИПЗНАЧЕНИЯ(НачисленияИУдержания.ВидРасчета) = ТИП(ПланВидовРасчета.Удержания)
		|			ТОГДА ВЫБОР
		|					КОГДА ТИПЗНАЧЕНИЯ(НачисленияИУдержания.ВидРасчета) = ТИП(ПланВидовРасчета.Начисления)
		|						ТОГДА ВЫРАЗИТЬ(НачисленияИУдержания.ВидРасчета КАК ПланВидовРасчета.Начисления).РеквизитДопУпорядочивания
		|					ИНАЧЕ ВЫРАЗИТЬ(НачисленияИУдержания.ВидРасчета КАК ПланВидовРасчета.Удержания).РеквизитДопУпорядочивания
		|				КОНЕЦ * 10000000000000000 + ВЫБОР
		|					КОГДА &ВыводитьПериодыНачислений
		|						ТОГДА РАЗНОСТЬДАТ(ДАТАВРЕМЯ(2000, 1, 1), ВЫБОР
		|									КОГДА ЕСТЬNULL(НачисленияИУдержания.ДатаНачала, ДАТАВРЕМЯ(1, 1, 1)) < ДАТАВРЕМЯ(2000, 1, 1)
		|										ТОГДА ДАТАВРЕМЯ(2000, 1, 1)
		|									ИНАЧЕ НачисленияИУдержания.ДатаНачала
		|								КОНЕЦ, ДЕНЬ) * 100000000000 + РАЗНОСТЬДАТ(ДАТАВРЕМЯ(2000, 1, 1), ВЫБОР
		|									КОГДА ЕСТЬNULL(НачисленияИУдержания.ДатаОкончания, ДАТАВРЕМЯ(1, 1, 1)) < ДАТАВРЕМЯ(2000, 1, 1)
		|										ТОГДА ДАТАВРЕМЯ(2000, 1, 1)
		|									ИНАЧЕ НачисленияИУдержания.ДатаОкончания
		|								КОНЕЦ, ДЕНЬ) * 1000000
		|					ИНАЧЕ 0
		|				КОНЕЦ + ВЫБОР
		|					КОГДА &ВыводитьПоказателиНачисленийИУдержаний
		|							ИЛИ &ВыводитьВсеПоказателиНачисленийИУдержаний
		|						ТОГДА НомераЗаписей.НомерЗаписи
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		ИНАЧЕ ВЫРАЗИТЬ(НачисленияИУдержания.ВидРасчета КАК Перечисление.ВидыОсобыхНачисленийИУдержаний).Порядок
		|	КОНЕЦ КАК ПриоритетВидаРасчета
		|ИЗ
		|	ВТНачисленияУдержанияССотрудниками КАК НачисленияИУдержания
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНомераЗаписей КАК НомераЗаписей
		|		ПО НачисленияИУдержания.Регистратор = НомераЗаписей.Регистратор
		|			И НачисленияИУдержания.ВидРасчета = НомераЗаписей.ВидРасчета
		|			И НачисленияИУдержания.ИдентификаторСтроки = НомераЗаписей.ИдентификаторСтроки
		|		{ЛЕВОЕ СОЕДИНЕНИЕ Представления_КадровыеДанныеСотрудниковАнализНачисленийИУдержаний КАК КадровыеДанныеСотрудниковНаКонецПериода
		|		ПО НачисленияИУдержания.Сотрудник = КадровыеДанныеСотрудниковНаКонецПериода.Сотрудник
		|			И (КОНЕЦПЕРИОДА(НачисленияИУдержания.Период, МЕСЯЦ) = КадровыеДанныеСотрудниковНаКонецПериода.Период)}
		|		{ЛЕВОЕ СОЕДИНЕНИЕ Представления_КадровыеДанныеСотрудниковАнализНачисленийИУдержаний КАК КадровыеДанныеСотрудников
		|		ПО НачисленияИУдержания.Сотрудник = КадровыеДанныеСотрудников.Сотрудник
		|			И (ВЫБОР
		|				КОГДА НачисленияИУдержания.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
		|					ТОГДА КОНЕЦПЕРИОДА(НачисленияИУдержания.Период, МЕСЯЦ)
		|				ИНАЧЕ НачисленияИУдержания.ДатаНачала
		|			КОНЕЦ = КадровыеДанныеСотрудников.Период)}
		|		{ЛЕВОЕ СОЕДИНЕНИЕ Представления_КадровыеДанныеСотрудниковАнализНачисленийИУдержаний КАК КадровыеДанныеГоловныхСотрудников
		|		ПО (ВЫРАЗИТЬ(НачисленияИУдержания.Сотрудник КАК Справочник.Сотрудники).ГоловнойСотрудник = КадровыеДанныеГоловныхСотрудников.Сотрудник)
		|			И (КОНЕЦПЕРИОДА(НачисленияИУдержания.Период, МЕСЯЦ) = КадровыеДанныеГоловныхСотрудников.Период)}
		|		{ЛЕВОЕ СОЕДИНЕНИЕ Представления_ПодразделенияСортировкиСотрудников КАК ПодразделенияСортировкиСотрудников
		|		ПО НачисленияИУдержания.ФизическоеЛицо = ПодразделенияСортировкиСотрудников.ФизическоеЛицо
		|			И (ВЫРАЗИТЬ(НачисленияИУдержания.Организация КАК Справочник.Организации).ГоловнаяОрганизация = ПодразделенияСортировкиСотрудников.ГоловнаяОрганизация)
		|			И (КОНЕЦПЕРИОДА(НачисленияИУдержания.Период, МЕСЯЦ) = ПодразделенияСортировкиСотрудников.Период)}";
	
	Возврат Запрос;
	
КонецФункции

Функция НачислениеДоговораГПХПоДокументуОснованию(ДокументОснование) Экспорт
	
	Возврат Перечисления.ВидыОсобыхНачисленийИУдержаний.ДоговорРаботыУслуги;;
	
КонецФункции

Функция МакетыВариантовОтчетовПечатныхФорм() Экспорт
	
	МакетыВариантовОтчетов = Новый Соответствие;
	
	МакетыВариантовОтчетов.Вставить("Отчет.АнализНачисленийИУдержаний.РасчетныйЛисток", "ОбщийМакет.ПФ_MXL_РасчетныйЛистокНастраиваемый");
	МакетыВариантовОтчетов.Вставить("Отчет.АнализНачисленийИУдержаний.Т51", "ОбщийМакет.ПФ_MXL_Т51");
	
	МакетыВариантовОтчетов.Вставить("Отчет.ПечатнаяФормаСправкаОСреднемЗаработке.СправкаОСреднемЗаработке2019",
		"Отчет.ПечатнаяФормаСправкаОСреднемЗаработке.ПФ_MXL_СправкаОСреднемЗаработке2019");
	
	Возврат МакетыВариантовОтчетов;
	
КонецФункции

Функция РазрядКатегорияНаПечать(РазрядКатегория) Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти
