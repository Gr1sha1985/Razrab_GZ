#Область ПрограммныйИнтерфейс

// Возвращает ссылку на элемент справочника КлассификаторЕдиницИзмерения по единице измерения ВЕТИС.
//
Функция ПолучитьЕдиницуИзмерения(ЕдиницаИзмеренияВЕТИС) Экспорт

	Если НЕ ЗначениеЗаполнено(ЕдиницаИзмеренияВЕТИС) Тогда
		Возврат Справочники.КлассификаторЕдиницИзмерения.ПустаяСсылка();
	КонецЕсли;
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЕдиницаИзмеренияВЕТИС, "ЕдиницаИзмерения");

КонецФункции

// Возвращает ссылку на элемент справочника Контрагенты по хозяйствующему субъекту и предприятию ВЕТИС.
//
Функция ПолучитьКонтрагента(ХозяйствующийСубъектВЕТИС, ПредприятиеВЕТИС = Неопределено) Экспорт

	Если НЕ ЗначениеЗаполнено(ХозяйствующийСубъектВЕТИС) Тогда
		Возврат Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
	
	Сопоставления = ИнтеграцияВЕТИСВызовСервера.ПредставленияСопоставлений(
		ХозяйствующийСубъектВЕТИС,
		ПредприятиеВЕТИС);
		
	СопоставленияСсылка = Сопоставления.КонтрагентХозяйствующегоСубъекта.Ссылка;
	
	Если ТипЗнч(СопоставленияСсылка) = Тип("СправочникСсылка.Контрагенты") Тогда
		Результат = СопоставленияСсылка;
	ИначеЕсли ТипЗнч(СопоставленияСсылка) = Тип("СписокЗначений")
		И СопоставленияСсылка.Количество() > 0
		И ТипЗнч(СопоставленияСсылка[0].Значение) = Тип("СправочникСсылка.Контрагенты") Тогда
		Результат = СопоставленияСсылка[0].Значение;
	ИначеЕсли ТипЗнч(Результат) <> Тип("СправочникСсылка.Контрагенты") Тогда
		Результат = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;

	Возврат Результат;

КонецФункции

Процедура ЗаполнениеДокументовВЕТИС(ДокументОбъект, Знач ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Основание") Тогда
			ДанныеЗаполнения = ДанныеЗаполнения.Основание;
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
		
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ИнвентаризацияПродукцииВЕТИС") Тогда
		//Основания СписаниеТоваров, ОприходованиеТоваров
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Склад, Номер, Дата");
		Грузоотправитель = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(РеквизитыОснования.Организация, РеквизитыОснования.Склад);
		ДокументОбъект.ХозяйствующийСубъект    = Грузоотправитель.ХозяйствующийСубъект;
		ДокументОбъект.Предприятие             = Грузоотправитель.Предприятие;
		ДокументОбъект.ТорговыйОбъект          = РеквизитыОснования.Склад;
		ДокументОбъект.НомерАктаНесоответствия = РеквизитыОснования.Номер;
		ДокументОбъект.ДатаАктаНесоответствия  = РеквизитыОснования.Дата;
		ДокументОбъект.ДокументОснование       = ДанныеЗаполнения;
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
			ЗаполнитьТоварыВЕТИСОприходование(ДокументОбъект, ДанныеЗаполнения);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СписаниеТоваров") Тогда
			ЗаполнитьТоварыВЕТИССписание(ДокументОбъект, ДанныеЗаполнения);
		Иначе
			ЗаполнитьТоварыВЕТИС(ДокументОбъект, ДанныеЗаполнения);
		КонецЕсли;
		ДокументОбъект.УпаковкиВЕТИС.Очистить();
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ИсходящаяТранспортнаяОперацияВЕТИС") Тогда
		//Основания ВозвратТоваровПоставщику, РеализацияТоваровУслуг, ПеремещениеТоваров
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, СкладОтправитель, СкладПолучатель, Номер, Дата");
			Грузоотправитель = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(РеквизитыОснования.Организация, РеквизитыОснования.СкладОтправитель);
			Грузополучатель = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(РеквизитыОснования.Организация, РеквизитыОснования.СкладПолучатель);
		Иначе
			РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Склад, Контрагент, Номер, Дата");
			Грузоотправитель = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(РеквизитыОснования.Организация, РеквизитыОснования.Склад);
			Грузополучатель = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(РеквизитыОснования.Контрагент, Справочники.Склады.ПустаяСсылка());
		КонецЕсли;
		ДокументОбъект.ГрузоотправительХозяйствующийСубъект = Грузоотправитель.ХозяйствующийСубъект;
		ДокументОбъект.ГрузоотправительПредприятие          = Грузоотправитель.Предприятие;
		ДокументОбъект.ГрузополучательХозяйствующийСубъект  = Грузополучатель.ХозяйствующийСубъект;
		ДокументОбъект.ГрузополучательПредприятие           = Грузополучатель.Предприятие;
		ДокументОбъект.НомерТТН                             = РеквизитыОснования.Номер;
		ДокументОбъект.ДатаТТН                              = РеквизитыОснования.Дата;
		ДокументОбъект.ДокументОснование                    = ДанныеЗаполнения;
				
		ЗаполнитьТоварыВЕТИС(ДокументОбъект, ДанныеЗаполнения);
		ДокументОбъект.УпаковкиВЕТИС.Очистить();
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВходящаяТранспортнаяОперацияВЕТИС") Тогда
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;

		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПроизводственнаяОперацияВЕТИС") Тогда
		//Основание ОтчетПроизводстваЗаСмену
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Склад, ПодразделениеЗатрат, Номер, Дата");
		Грузоотправитель = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(РеквизитыОснования.Организация, РеквизитыОснования.ПодразделениеЗатрат);
		ДокументОбъект.ХозяйствующийСубъект = Грузоотправитель.ХозяйствующийСубъект;
		ДокументОбъект.Предприятие          = Грузоотправитель.Предприятие;
		ДокументОбъект.ДокументОснование    = ДанныеЗаполнения;
		
		ЗаполнитьСырьеПродукцию(ДокументОбъект, ДанныеЗаполнения);
		ДокументОбъект.УпаковкиВЕТИС.Очистить();

	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Ответственный", ДокументОбъект.Метаданные()) Тогда
		ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗаполнитьТоварыВЕТИС(ДокументОбъект, ДанныеЗаполнения)
	
	//Реквизиты основания
	МетаданныеОснования  = ДанныеЗаполнения.Метаданные();
	ИмяОснования         = МетаданныеОснования.Имя;
	
	МетаданныеДокумента  = ДокументОбъект.Метаданные();
	ИмяДокумента         = МетаданныеДокумента.Имя;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.ИсходящаяТранспортнаяОперацияВЕТИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ПустаяСерия"      , "");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ИсходящаяТранспортнаяОперацияВЕТИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовВЕТИС КАК СтатусыДокументовВЕТИС
	|		ПО (СтатусыДокументовВЕТИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовВЕТИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	"""" КАК Характеристика,
	|	"""" КАК Серия,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура КАК Номенклатура,
	|	ТоварыСерии.Характеристика КАК Характеристика,
	|	ТоварыСерии.Серия КАК Серия,
	|	ТоварыСерии.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Товары КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ИсходящаяТранспортнаяОперацияВЕТИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция, СоответствиеНоменклатурыВЕТИС2.Продукция)) КАК Продукция,
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.ЗаписьСкладскогоЖурнала, СоответствиеНоменклатурыВЕТИС2.ЗаписьСкладскогоЖурнала)) КАК ЗаписьСкладскогоЖурнала,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция, СоответствиеНоменклатурыВЕТИС2.Продукция)) КАК ПродукцияКоличествоРазличные,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.ЗаписьСкладскогоЖурнала, СоответствиеНоменклатурыВЕТИС2.ЗаписьСкладскогоЖурнала)) КАК ЗаписьСкладскогоЖурналаКоличествоРазличные,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|		ПО (СоответствиеНоменклатурыВЕТИС.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|			И (СоответствиеНоменклатурыВЕТИС.Характеристика = ТабличнаяЧасть.Характеристика)
	|			И (СоответствиеНоменклатурыВЕТИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС2
	|		ПО (СоответствиеНоменклатурыВЕТИС2.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|			И (СоответствиеНоменклатурыВЕТИС2.Характеристика = ТабличнаяЧасть.Характеристика)
	|			И (СоответствиеНоменклатурыВЕТИС2.Серия = &ПустаяСерия)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия КАК Серия,
	|	ВЫБОР
	|		КОГДА СопоставленыеПозиции.ПродукцияКоличествоРазличные = 1
	|			ТОГДА СопоставленыеПозиции.Продукция
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Продукция,
	|	ВЫБОР
	|		КОГДА СопоставленыеПозиции.ЗаписьСкладскогоЖурналаКоличествоРазличные = 1
	|			ТОГДА СопоставленыеПозиции.ЗаписьСкладскогоЖурнала
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ЗаписьСкладскогоЖурнала,
	|	СУММА(ТоварыКОформлению.Количество) КАК КоличествоВЕТИС,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО (СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура)
	|			И (СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика)
	|			И (СопоставленыеПозиции.Серия = ТоварыКОформлению.Серия)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	ВЫБОР
	|		КОГДА СопоставленыеПозиции.ПродукцияКоличествоРазличные = 1
	|			ТОГДА СопоставленыеПозиции.Продукция
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СопоставленыеПозиции.ЗаписьСкладскогоЖурналаКоличествоРазличные = 1
	|			ТОГДА СопоставленыеПозиции.ЗаписьСкладскогоЖурнала
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВозвратТоваровПоставщику", ИмяОснования);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИсходящаяТранспортнаяОперацияВЕТИС", ИмяДокумента);
	Запрос.Текст = ТекстЗапроса;
	
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать();
	ДокументОбъект.Товары.Очистить();
	ЕстьИдентификаторСтроки = ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("ИдентификаторСтроки", МетаданныеДокумента, "Товары");
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		НоваяСтрока = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНоменклатура);
		УстановитьИдентификаторСтроки(НоваяСтрока, ЕстьИдентификаторСтроки);
		ИнтеграцияВЕТИС.ПроверитьОчиститьЕдиницуИзмеренияВЕТИС(НоваяСтрока);
		Если ЗначениеЗаполнено(НоваяСтрока.ЕдиницаИзмеренияВЕТИС) Тогда
			НоваяСтрока.КоличествоВЕТИС = ИнтеграцияВЕТИСКлиентСерверПереопределяемый.ПересчитатьКоличествоЕдиницВЕТИС(
										НоваяСтрока.Количество,
										НоваяСтрока.Номенклатура,
										НоваяСтрока.ЕдиницаИзмеренияВЕТИС,
										НЕОПРЕДЕЛЕНО,
										"");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыВЕТИСОприходование(ДокументОбъект, ДанныеЗаполнения)
	
	//Реквизиты основания
	МетаданныеОснования  = ДанныеЗаполнения.Метаданные();
	ИмяОснования         = МетаданныеОснования.Имя;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование"    , ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы"      , Документы.ИнвентаризацияПродукцииВЕТИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"            , ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ПустаяСерия"          , "");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ИнвентаризацияПродукцииВЕТИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовВЕТИС КАК СтатусыДокументовВЕТИС
	|		ПО СтатусыДокументовВЕТИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовВЕТИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	""""                                               КАК Характеристика,
	|	""""                                               КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Характеристика        КАК Характеристика,
	|	ТоварыСерии.Серия                 КАК Серия,
	|	ТоварыСерии.Количество            КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Товары КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.КоличествоИзменение  КАК Количество
	|ИЗ
	|	Документ.ИнвентаризацияПродукцииВЕТИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция,СоответствиеНоменклатурыВЕТИС2.Продукция)) КАК Продукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|		ПО СоответствиеНоменклатурыВЕТИС.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС2
	|		ПО СоответствиеНоменклатурыВЕТИС2.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС2.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС2.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция,СоответствиеНоменклатурыВЕТИС2.Продукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура            КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика          КАК Характеристика,
	|	ТоварыКОформлению.Серия                   КАК Серия,
	|	СопоставленыеПозиции.Продукция            КАК Продукция,
	|	СУММА(ТоварыКОформлению.Количество)       КАК КоличествоИзменениеВЕТИС,
	|	СУММА(ТоварыКОформлению.Количество)       КАК КоличествоИзменение,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииИнвентаризацииПродукцииВЕТИС.Изменение) КАК Операция
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|			И СопоставленыеПозиции.Серия = ТоварыКОформлению.Серия
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленыеПозиции.Продукция
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВозвратТоваровПоставщику", ИмяОснования);
	Запрос.Текст = ТекстЗапроса;
	
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать();
	
	ДокументОбъект.Товары.Очистить();
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		НоваяСтрока = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНоменклатура);
		УстановитьИдентификаторСтроки(НоваяСтрока, Истина);
		ИнтеграцияВЕТИС.ПроверитьОчиститьЕдиницуИзмеренияВЕТИС(НоваяСтрока);
		Если ЗначениеЗаполнено(НоваяСтрока.ЕдиницаИзмеренияВЕТИС) Тогда
			НоваяСтрока.КоличествоИзменениеВЕТИС = ИнтеграцияВЕТИСКлиентСерверПереопределяемый.ПересчитатьКоличествоЕдиницВЕТИС(
										НоваяСтрока.КоличествоИзменение,
										НоваяСтрока.Номенклатура,
										НоваяСтрока.ЕдиницаИзмеренияВЕТИС,
										НЕОПРЕДЕЛЕНО,
										"");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыВЕТИССписание(ДокументОбъект, ДанныеЗаполнения)
	
	//Реквизиты основания
	МетаданныеОснования  = ДанныеЗаполнения.Метаданные();
	ИмяОснования         = МетаданныеОснования.Имя;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.ИнвентаризацияПродукцииВЕТИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ПустаяСерия"      , "");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ИнвентаризацияПродукцииВЕТИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовВЕТИС КАК СтатусыДокументовВЕТИС
	|		ПО СтатусыДокументовВЕТИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовВЕТИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	""""                                               КАК Характеристика,
	|	""""                                               КАК Серия,
	|	- СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Характеристика        КАК Характеристика,
	|	ТоварыСерии.Серия                 КАК Серия,
	|	ТоварыСерии.Количество            КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Товары КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.КоличествоИзменение  КАК Количество
	|ИЗ
	|	Документ.ИнвентаризацияПродукцииВЕТИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция,СоответствиеНоменклатурыВЕТИС2.Продукция)) КАК Продукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|		ПО СоответствиеНоменклатурыВЕТИС.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС2
	|		ПО СоответствиеНоменклатурыВЕТИС2.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС2.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС2.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция,СоответствиеНоменклатурыВЕТИС2.Продукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура            КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика          КАК Характеристика,
	|	ТоварыКОформлению.Серия                   КАК Серия,
	|	СопоставленыеПозиции.Продукция            КАК Продукция,
	|	СУММА(ТоварыКОформлению.Количество)       КАК КоличествоИзменениеВЕТИС,
	|	СУММА(ТоварыКОформлению.Количество)       КАК КоличествоИзменение,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииИнвентаризацииПродукцииВЕТИС.Изменение) КАК Операция
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|			И СопоставленыеПозиции.Серия = ТоварыКОформлению.Серия
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленыеПозиции.Продукция
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) <> 0
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВозвратТоваровПоставщику", ИмяОснования);
	Запрос.Текст = ТекстЗапроса;
	
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать();
	
	ДокументОбъект.Товары.Очистить();
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		НоваяСтрока = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНоменклатура);
		УстановитьИдентификаторСтроки(НоваяСтрока, Истина);
		ИнтеграцияВЕТИС.ПроверитьОчиститьЕдиницуИзмеренияВЕТИС(НоваяСтрока);
		
		Если ЗначениеЗаполнено(НоваяСтрока.ЕдиницаИзмеренияВЕТИС) Тогда
			НоваяСтрока.КоличествоИзменениеВЕТИС = ИнтеграцияВЕТИСКлиентСерверПереопределяемый.ПересчитатьКоличествоЕдиницВЕТИС(
										НоваяСтрока.КоличествоИзменение,
										НоваяСтрока.Номенклатура,
										НоваяСтрока.ЕдиницаИзмеренияВЕТИС,
										НЕОПРЕДЕЛЕНО,
										"");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСырьеПродукцию(ДокументОбъект, ДанныеЗаполнения)
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.ПроизводственнаяОперацияВЕТИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ПроизводственнаяОперацияВЕТИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовВЕТИС КАК СтатусыДокументовВЕТИС
	|		ПО ТаблицаДокументы.Ссылка = СтатусыДокументовВЕТИС.Документ
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовВЕТИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Продукция.Номенклатура КАК Номенклатура,
	|	Продукция.Количество КАК Количество,
	|	ИСТИНА КАК ЭтоПродукция
	|ПОМЕСТИТЬ ВТ_НоменклатураКОформлению
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену.Продукция КАК Продукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Продукция.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Продукция.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	-ОформленныеТовары.Количество,
	|	ИСТИНА
	|ИЗ
	|	ОформленныеДокументы КАК ОформленныеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПроизводственнаяОперацияВЕТИС.Товары КАК ОформленныеТовары
	|		ПО ОформленныеДокументы.Ссылка = ОформленныеТовары.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Материалы.Номенклатура,
	|	Материалы.Количество,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену.Материалы КАК Материалы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Материалы.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Материалы.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленноеСырье.Номенклатура,
	|	-ОформленноеСырье.Количество,
	|	ЛОЖЬ
	|ИЗ
	|	ОформленныеДокументы КАК ОформленныеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПроизводственнаяОперацияВЕТИС.Сырье КАК ОформленноеСырье
	|		ПО ОформленныеДокументы.Ссылка = ОформленноеСырье.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_НоменклатураКОформлению.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыВЕТИС.Продукция КАК Продукция
	|ПОМЕСТИТЬ ВТ_СоответствиеНоменклатурыВЕТИС
	|ИЗ
	|	ВТ_НоменклатураКОформлению КАК ВТ_НоменклатураКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|		ПО ВТ_НоменклатураКОформлению.Номенклатура = СоответствиеНоменклатурыВЕТИС.Номенклатура
	|ГДЕ
	|	НЕ СоответствиеНоменклатурыВЕТИС.Номенклатура ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураКОформлению.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(СоответствиеНоменклатурыВЕТИС.Продукция) КАК Продукция,
	|	НоменклатураКОформлению.ЭтоПродукция КАК ЭтоПродукция,
	|	НоменклатураКОформлению.Количество КАК Количество,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СоответствиеНоменклатурыВЕТИС.Продукция) КАК КоличествоСоответствий
	|ПОМЕСТИТЬ ВТ_ТаблицаДокумента
	|ИЗ
	|	ВТ_НоменклатураКОформлению КАК НоменклатураКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|		ПО НоменклатураКОформлению.Номенклатура = СоответствиеНоменклатурыВЕТИС.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураКОформлению.Номенклатура,
	|	НоменклатураКОформлению.ЭтоПродукция,
	|	НоменклатураКОформлению.Количество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаДокумента.КоличествоСоответствий = 1
	|			ТОГДА ВТ_ТаблицаДокумента.Продукция
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Продукция,
	|	ВТ_ТаблицаДокумента.ЭтоПродукция КАК ЭтоПродукция,
	|	ВТ_ТаблицаДокумента.Количество КАК Количество
	|ИЗ
	|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
	|ГДЕ
	|	ВТ_ТаблицаДокумента.Количество > 0";
	

	Товары = ДокументОбъект.Товары;
	Товары.Очистить();
	
	Сырье = ДокументОбъект.Сырье;
	Сырье.Очистить();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ЭтоПродукция Тогда
			НоваяСтрока = ДокументОбъект.Товары.Добавить();
		Иначе
			НоваяСтрока = ДокументОбъект.Сырье.Добавить();
		КонецЕсли; 
		
		НоваяСтрока.Номенклатура            = Выборка.Номенклатура;
		НоваяСтрока.Количество              = Выборка.Количество;
		НоваяСтрока.КоличествоВЕТИС         = Выборка.Количество;
		НоваяСтрока.Продукция               = Выборка.Продукция;
		
		УстановитьИдентификаторСтроки(НоваяСтрока, Истина);
		
		ИнтеграцияВЕТИС.ПроверитьОчиститьЕдиницуИзмеренияВЕТИС(НоваяСтрока);
		Если ЗначениеЗаполнено(НоваяСтрока.ЕдиницаИзмеренияВЕТИС) Тогда
			НоваяСтрока.КоличествоВЕТИС = ИнтеграцияВЕТИСКлиентСерверПереопределяемый.ПересчитатьКоличествоЕдиницВЕТИС(
										НоваяСтрока.Количество,
										НоваяСтрока.Номенклатура,
										НоваяСтрока.ЕдиницаИзмеренияВЕТИС,
										НЕОПРЕДЕЛЕНО,
										"");
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьПоступлениеПоВходящейОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	// Заполним реквизиты из стандартного набора по документу основанию.
	ЗаполнениеДокументов.ЗаполнитьПоОснованию(ДокументОбъект, ДанныеЗаполнения);
	
	ПредставленияГрузоотправителя = ИнтеграцияВЕТИСВызовСервера.ПредставленияСопоставлений(
			ДанныеЗаполнения.ГрузоотправительХозяйствующийСубъект, ДанныеЗаполнения.ГрузоотправительПредприятие, "Грузоотправитель");
			
	ПредставленияГрузополучателя = ИнтеграцияВЕТИСВызовСервера.ПредставленияСопоставлений(
			ДанныеЗаполнения.ГрузополучательХозяйствующийСубъект, ДанныеЗаполнения.ГрузополучательПредприятие, "Грузополучатель");
			
	ДокументОбъект.НомерВходящегоДокумента  = ДанныеЗаполнения.НомерТТН;
	ДокументОбъект.ДатаВходящегоДокумента   = ДанныеЗаполнения.ДатаТТН;
	ДокументОбъект.ВидОперации              = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия;
	ДокументОбъект.СпособЗачетаАвансов      = Перечисления.СпособыЗачетаАвансов.Автоматически;
	
	Если ТипЗнч(ПредставленияГрузополучателя.КонтрагентХозяйствующегоСубъекта.Ссылка) = Тип("СписокЗначений")
		И ПредставленияГрузополучателя.КонтрагентХозяйствующегоСубъекта.Ссылка.Количество() > 0 Тогда
		
		ДокументОбъект.Организация = ПредставленияГрузополучателя.КонтрагентХозяйствующегоСубъекта.Ссылка[0].Значение;
	ИначеЕсли ТипЗнч(ПредставленияГрузополучателя.КонтрагентХозяйствующегоСубъекта.Ссылка) = Тип("СправочникСсылка.Организации") Тогда
		
		ДокументОбъект.Организация = ПредставленияГрузополучателя.КонтрагентХозяйствующегоСубъекта.Ссылка;
	КонецЕсли;
	
	Если ТипЗнч(ПредставленияГрузополучателя.ТорговыйОбъект.Ссылка) = Тип("СписокЗначений")
		И ПредставленияГрузополучателя.ТорговыйОбъект.Ссылка.Количество() > 0 Тогда
		
		ДокументОбъект.Склад      = ПредставленияГрузополучателя.ТорговыйОбъект.Ссылка[0].Значение;
	ИначеЕсли ТипЗнч(ПредставленияГрузополучателя.ТорговыйОбъект.Ссылка) = Тип("СправочникСсылка.Организации") Тогда
		
		ДокументОбъект.Склад      = ПредставленияГрузополучателя.ТорговыйОбъект.Ссылка;
	КонецЕсли;
	
	Если ТипЗнч(ПредставленияГрузоотправителя.КонтрагентХозяйствующегоСубъекта.Ссылка) = Тип("СписокЗначений")
		И ПредставленияГрузоотправителя.КонтрагентХозяйствующегоСубъекта.Ссылка.Количество() > 0 Тогда
		
		ДокументОбъект.Контрагент = ПредставленияГрузоотправителя.КонтрагентХозяйствующегоСубъекта.Ссылка[0].Значение;
	ИначеЕсли ТипЗнч(ПредставленияГрузоотправителя.КонтрагентХозяйствующегоСубъекта.Ссылка) = Тип("СправочникСсылка.Организации") Тогда
		
		ДокументОбъект.Контрагент = ПредставленияГрузоотправителя.КонтрагентХозяйствующегоСубъекта.Ссылка;
	КонецЕсли;
	
	ГоловнаяОрганизация = ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(ДокументОбъект.Организация);
	СписокВидовДоговоров = Новый СписокЗначений();
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомитентом);
	РаботаСДоговорамиКонтрагентовБП.УстановитьДоговорКонтрагента(ДокументОбъект.ДоговорКонтрагента, ДокументОбъект.Контрагент, ГоловнаяОрганизация, СписокВидовДоговоров);
	
	// Тип цен и валюту берем по умолчанию из договора
	Если ЗначениеЗаполнено(ДокументОбъект.ДоговорКонтрагента) Тогда
		РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОбъект.ДоговорКонтрагента, "ВалютаВзаиморасчетов, ТипЦен");
		ДокументОбъект.ВалютаДокумента     = РеквизитыДоговора.ВалютаВзаиморасчетов;
		ДокументОбъект.ТипЦен              = РеквизитыДоговора.ТипЦен;
	Иначе
		ДокументОбъект.ВалютаДокумента     = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	КонецЕсли;
	
	СтруктураКурсаВзаиморасчетов = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ДокументОбъект.ВалютаДокумента, ДокументОбъект.Дата);
	ДокументОбъект.КурсВзаиморасчетов      = СтруктураКурсаВзаиморасчетов.Курс;
	ДокументОбъект.КратностьВзаиморасчетов = СтруктураКурсаВзаиморасчетов.Кратность;
	
	// Флаги включения налогов.
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.ТипЦен) Тогда
		ДокументОбъект.СуммаВключаетНДС = Ложь;
	Иначе
		ДокументОбъект.СуммаВключаетНДС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.ТипЦен, "ЦенаВключаетНДС");
	КонецЕсли;
	
	//Заполнение товаров
	ДокументОбъект.Товары.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДанныеЗаполнения"        , ДанныеЗаполнения);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ОформленныеТовары.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|					И НЕ СоответствиеНоменклатурыВЕТИС.Номенклатура ЕСТЬ NULL
	|				ТОГДА СоответствиеНоменклатурыВЕТИС.Номенклатура
	|			ИНАЧЕ ОформленныеТовары.Номенклатура
	|		КОНЕЦ) КАК Номенклатура,
	|	МАКСИМУМ(ОформленныеТовары.Количество) КАК Количество,
	|	ОформленныеТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ВходящаяТранспортнаяОперацияВЕТИС.Товары КАК ОформленныеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|		ПО (СоответствиеНоменклатурыВЕТИС.Продукция = ОформленныеТовары.Продукция)
	|ГДЕ
	|	ОформленныеТовары.Ссылка = &ДанныеЗаполнения
	|
	|СГРУППИРОВАТЬ ПО
	|	ОформленныеТовары.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТаблицаТоваров = Запрос.Выполнить().Выгрузить();
	
	ДанныеОбъекта = Новый Структура(
		"Дата, ВидОперации, Организация, Склад, ТипЦен, СуммаВключаетНДС,
		|ВалютаДокумента, КурсВзаиморасчетов, КратностьВзаиморасчетов");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ДокументОбъект);
	
	СоответствиеСведенийОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОСпискеНоменклатуры(
		ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаТоваров, "Номенклатура", Истина), ДанныеОбъекта, Ложь);
	
	Для каждого СтрокаТоваров Из ТаблицаТоваров Цикл
		
		СтрокаТабличнойЧасти = ДокументОбъект.Товары.Добавить();
		
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаТоваров);
		
		СведенияОНоменклатуре = СоответствиеСведенийОНоменклатуре[СтрокаТоваров.Номенклатура];
		Если ЗначениеЗаполнено(СтрокаТоваров.Номенклатура) И СведенияОНоменклатуре <> Неопределено Тогда
			СтрокаТабличнойЧасти.ЕдиницаИзмерения		= СведенияОНоменклатуре.ЕдиницаИзмерения;
			СтрокаТабличнойЧасти.Коэффициент			= СведенияОНоменклатуре.Коэффициент;
			СтрокаТабличнойЧасти.СтавкаНДС				= СведенияОНоменклатуре.СтавкаНДС;
			СтрокаТабличнойЧасти.НомерГТД				= СведенияОНоменклатуре.НомерГТД;
			СтрокаТабличнойЧасти.СтранаПроисхождения	= СведенияОНоменклатуре.СтранаПроисхождения;
			СтрокаТабличнойЧасти.ОтражениеВУСН			= Перечисления.ОтражениеВУСН.Принимаются;
		КонецЕсли;
		
		СтавкаНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС);

		СтрокаТабличнойЧасти.Сумма = УчетНДСКлиентСервер.ПересчитатьЦенуПриИзмененииФлаговНалогов(СтрокаТабличнойЧасти.Сумма, Истина, ДанныеОбъекта.СуммаВключаетНДС, СтавкаНДС);
		СтрокаТабличнойЧасти.Цена  = УчетНДСКлиентСервер.ПересчитатьЦенуПриИзмененииФлаговНалогов(СтрокаТабличнойЧасти.Цена, Истина, ДанныеОбъекта.СуммаВключаетНДС, СтавкаНДС);
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ДанныеОбъекта.СуммаВключаетНДС);
	КонецЦикла;
		
КонецПроцедуры

Процедура УстановитьИдентификаторСтроки(НоваяСтрока, ЕстьИдентификаторСтроки)
	Если ЕстьИдентификаторСтроки Тогда
		НоваяСтрока.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

// Сопоставляет продукцию ВЕТИС с номенклатурой.
//
// Параметры:
//  Объект - ДокументОбъект - Объект в котором сопоставляется номенклатура.
//  ЗаписыватьЗаписьСкладскогоЖурнала - Булево - признак сопоставления по записи складского журнала.
//  СопоставлятьПоСерии - Булево - признак сопоставления по серии.
//
Процедура ЗаписатьКоэффициентЕдиницИзмерения(Объект, ИмяТЧ = "Товары", ИмяКоличества = "Количество") Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкиДляВыгрузки = "Продукция, Номенклатура, ЕдиницаИзмеренияВЕТИС";
	КолонкиДляВыгрузки = КолонкиДляВыгрузки + ", " + ИмяКоличества;
	КолонкиДляВыгрузки = КолонкиДляВыгрузки + ", " + ИмяКоличества + "ВЕТИС";
	
	ДанныеТЧ = Объект[ИмяТЧ].Выгрузить(, КолонкиДляВыгрузки);
	
	Для Каждого СтрокаТЧ из ДанныеТЧ Цикл
		
		Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура)
			И ЗначениеЗаполнено(СтрокаТЧ.ЕдиницаИзмеренияВЕТИС) Тогда
			
			НаборЗаписей = РегистрыСведений.КоэффициентыЕдиницИзмеренияВЕТИС.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Номенклатура.Установить(СтрокаТЧ.Номенклатура, Истина);
			НаборЗаписей.Отбор.Продукция.Установить(СтрокаТЧ.Продукция, Истина);
			НаборЗаписей.Отбор.ЕдиницаИзмеренияВЕТИС.Установить(СтрокаТЧ.ЕдиницаИзмеренияВЕТИС, Истина);
			
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Номенклатура            = СтрокаТЧ.Номенклатура;
			НоваяЗапись.Продукция               = СтрокаТЧ.Продукция;
			НоваяЗапись.ЕдиницаИзмеренияВЕТИС   = СтрокаТЧ.ЕдиницаИзмеренияВЕТИС;
			Количество                          = СтрокаТЧ[ИмяКоличества];
			КоличествоВЕТИС                     = СтрокаТЧ[ИмяКоличества + "ВЕТИС"];
			НоваяЗапись.КоэффициентЕдиницыВЕТИС = ?(Количество = 0, 1, КоличествоВЕТИС/Количество);
			
			Попытка
				НаборЗаписей.Записать();
			Исключение
				
				ТекстОшибки = НСтр("ru = 'При записи соответствия единиц измерения ВЕТИС произошла ошибка:
					|%1'");
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтрШаблон(ТекстОшибки, КраткоеПредставлениеОшибки(ИнформацияОбОшибке())));
				
				ИнтеграцияВЕТИСВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(
					СтрШаблон(ТекстОшибки, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));
				
			КонецПопытки;
		КонецЕсли;
		
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти
