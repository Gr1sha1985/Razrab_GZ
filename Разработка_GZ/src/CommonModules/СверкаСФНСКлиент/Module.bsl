#Область ПрограммныйИнтерфейс

Процедура РегламентированнаяОтчетность_ТаблицаНовоеПриОткрытии(Форма, Ссылка, СтандартнаяОбработка) Экспорт
	
	ОткрытьФормуСверкиОплат(Форма, Ссылка, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ФормаНовыхСобытий_ТаблицаНовоеПриОткрытии(Форма, Ссылка, СтандартнаяОбработка) Экспорт
	
	ОткрытьФормуСверкиОплат(Форма, Ссылка, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОтправитьЗапросВыпискиОперацийФНС(Организация, Год = Неопределено) Экспорт
	
	Если СверкаСФНСВызовСервера.ПоОрганизацииОтправленЗапросНаСверку(Организация, Год) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Запрос на сверку платежей уже отправлен. Дождитесь ответа от ФНС.'"));
	Иначе
		ПроверитьДоступностьИОтправитьЗапрос(Организация, Год);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьДоступностьИОтправитьЗапрос(Организация, Год) Экспорт
	
	ДоступностьОтчетности = СверкаСФНСВызовСервера.ДоступностьОтчетности(Организация);
	Если ДоступностьОтчетности.ОтчетностьДоступна Тогда
		
		ПараметрыОтправкиЗапросов = СверкаСФНСВызовСервера.ПараметрыОтправкиЗапроса(Организация, Год);
		ОтправитьЗапросы(ПараметрыОтправкиЗапросов);
		
	Иначе
		ПараметрыФормы = Новый Структура("Организация, ДоступностьОтчетности", Организация, ДоступностьОтчетности);
		ОткрытьФорму("Обработка.СверкаНалоговСФНС.Форма.СообщенияПользователю", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

Процедура НавигационнаяСылкаПроблемыСНалоговымиПлатежамиНажатие(Организация) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация",      Организация);
	ПараметрыФормы.Вставить("ТолькоПроблемные", Истина);
	ОткрытьФорму("Обработка.СверкаНалоговСФНС.Форма.ФормаСверки", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОткрытьФормуСверкиОплат(Форма, Ссылка, СтандартнаяОбработка)
	
	ДанныеЗапроса = СверкаСФНСВызовСервера.ДанныеЗапросаИОН(Ссылка);
	Если Не ДанныеЗапроса.ЭтоЗапросНаСверкуОплат Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация",      ДанныеЗапроса.Организация);
	ПараметрыФормы.Вставить("Год",              Год(ДанныеЗапроса.ДатаНачалаПериода));
	ПараметрыФормы.Вставить("ТолькоПроблемные", Истина);
	
	ФормаСверки = ПолучитьФорму("Обработка.СверкаНалоговСФНС.Форма.ФормаСверки", ПараметрыФормы);
	Если ФормаСверки.Открыта() Тогда
		ФормаСверки.ОбновитьДанныеПриАктивизации(ПараметрыФормы);
		Если СтрНайти(Форма.ИмяФормы, "ФормаНовыхСобытий") > 0 Тогда
			ОткрытьФорму("Обработка.СверкаНалоговСФНС.Форма.ФормаСверки", ПараметрыФормы, Форма);
		Иначе
			ФормаСверки.Активизировать();
		КонецЕсли;
	Иначе
		ФормаСверки.Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтправитьЗапросы(ПараметрыОтправкиЗапроса)
	
	Если ПараметрыОтправкиЗапроса.СписокДанныхДляОтправкиЗапроса.Количество() = 0 Тогда
		Оповестить("ОтправленыЗапросыНаПроверкуОплатыНалогов");
		Возврат;
	КонецЕсли;
	
	ДаннныеЗапроса              = ПараметрыОтправкиЗапроса.СписокДанныхДляОтправкиЗапроса[0];
	Организация                 = ПараметрыОтправкиЗапроса.Организация;
	Год                         = ДаннныеЗапроса.Год;
	РегистрацииВНалоговомОргане = ДаннныеЗапроса.НалоговыйОрган;
	ПараметрыОтправкиЗапроса.СписокДанныхДляОтправкиЗапроса.Удалить(0);
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ОтправитьЗапросыЗавершение",
		СверкаСФНСКлиент,
		Новый Структура("ПараметрыОтправкиЗапроса", ПараметрыОтправкиЗапроса));
	
	ИнтерфейсыВзаимодействияБРОКлиент.ЗапроситьВыпискуОперацийПоРасчетуСБюджетом(
		ОповещениеОЗавершении,
		Организация,
		РегистрацииВНалоговомОргане,
		Год)
	
КонецПроцедуры

Процедура ОтправитьЗапросыЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если ЗначениеЗаполнено(Результат) Тогда
		СверкаСФНСВызовСервера.СохранитьСсылкуПриОтправкеЗапросаИОН(Результат);
	КонецЕсли;
	
	// Если нужно отправить запросы за несколько лет или по нескольким регистрациям налоговом органе,
	// то вызываем процедуру отправки еще раз.
	ОтправитьЗапросы(ДополнительныеПараметры.ПараметрыОтправкиЗапроса);
	
КонецПроцедуры

#КонецОбласти

