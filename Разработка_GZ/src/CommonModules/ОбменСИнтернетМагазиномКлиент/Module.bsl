#Область ПрограммныйИнтерфейс

Процедура ВыполнитьОбменСИнтернетМагазином(Форма, ОбработчикОповещения) Экспорт
	
	ДлительнаяОперация = ОбменСИнтернетМагазиномВызовСервера.ВыполнитьОбменСИнтернетМагазиномВФоне(Форма.УникальныйИдентификатор);
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	
	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("ОбработчикОповещения", ОбработчикОповещения);
	ОбработчикОповещания = Новый ОписаниеОповещения("ВыполнитьОбменСИнтернетМагазиномЗавершение", ОбменСИнтернетМагазиномКлиент, ДопПараметры);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОбработчикОповещания, ПараметрыОжидания);
	
КонецПроцедуры

Процедура ВыполнитьОбменСИнтернетМагазиномЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = Неопределено Тогда  // отменено пользователем
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		Если Не ЭтоАдресВременногоХранилища(Результат.АдресРезультата) Тогда
			Возврат;
		КонецЕсли;
		
		РезультатЗагрузки = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		
		Если РезультатЗагрузки <> Неопределено Тогда
			
			Если НЕ РезультатЗагрузки.НастройкаВыполнена Тогда
				ОткрытьФорму("Обработка.ОбменСИнтернетМагазином.Форма.ФормаНастройки");
				Возврат;
			КонецЕсли;
			
			ОбработчикОповещенияПодробнее = Новый ОписаниеОповещения("ПоказатьРезультатВыполненияОбмена",
					ОбменСИнтернетМагазиномКлиент,
					Результат.АдресРезультата);
				
			Если РезультатЗагрузки.Успешно Тогда
				СчетчикОбработанныхДокументов = РезультатЗагрузки.СтатистикаЗагрузки.Заказы.Обработано;
				Если СчетчикОбработанныхДокументов > 0 Тогда
					ОповеститьОбИзменении(Тип("ДокументСсылка.ОплатаПлатежнойКартой"));
					ОповеститьОбИзменении(Тип("ДокументСсылка.СчетНаОплатуПокупателю"));
					
					ШаблонСообщения = НСтр("ru = 'Обработано заказов: %1
												|Подробнее...'");
				Иначе
					ШаблонСообщения = НСтр("ru = 'В интернет-магазине нет заказов к загрузке'");
				КонецЕсли;
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ШаблонСообщения, СчетчикОбработанныхДокументов);
					
			Иначе
				
				ТекстСообщения = СтрСоединить(РезультатЗагрузки.ОписаниеОшибки, Символы.ПС);
				
			КонецЕсли;
			
			ПоказатьОповещениеПользователя(НСтр("ru = 'Обмен с интернет-магазином'"),
					ОбработчикОповещенияПодробнее,
					ТекстСообщения,
					?(РезультатЗагрузки.Успешно, БиблиотекаКартинок.Успешно, БиблиотекаКартинок.Ошибка32));
			
			ВыполнитьОбработкуОповещения(ДопПараметры.ОбработчикОповещения, Результат.АдресРезультата);
			
		КонецЕсли;
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
		ПоказатьПредупреждение(,Результат.КраткоеПредставлениеОшибки);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьРезультатВыполненияОбмена(АдресРезультата) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РезультатОбмена", АдресРезультата);
	ОткрытьФорму("Обработка.ОбменСИнтернетМагазином.Форма.ФормаРасшифровкаОбмена", ПараметрыФормы,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
//Код процедур и функций
#КонецОбласти