////////////////////////////////////////////////////////////////////////////////
// КадровыйУчетФормы: методы, обслуживающие работу форм кадровых документов.
//  
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// Доопределяет форму кадрового документа при ее создании на сервере.
Процедура ФормаКадровогоДокументаПриСозданииНаСервере(Форма) Экспорт
	
	КадровыйУчетФормыВнутренний.ФормаКадровогоДокументаПриСозданииНаСервере(Форма);
	
КонецПроцедуры

Процедура ЗаполнитьОтветственныхЛицПоОрганизации(Форма) Экспорт
	
	МетаданныеДокумента = Форма.Объект.Ссылка.Метаданные();
	
	Если МетаданныеДокумента.Реквизиты.Найти("Организация") <> Неопределено Тогда
		
		Если ЗначениеЗаполнено(Форма.Объект.Организация) Тогда
			
			ЗначенияДляЗаполнения = Новый Структура;
			ЗначенияДляЗаполнения.Вставить("Организация", "Объект.Организация");
			
			Если МетаданныеДокумента.Реквизиты.Найти("Руководитель") <> Неопределено Тогда
				ЗначенияДляЗаполнения.Вставить("Руководитель", "Объект.Руководитель");
			КонецЕсли;
			
			Если МетаданныеДокумента.Реквизиты.Найти("ДолжностьРуководителя") <> Неопределено Тогда
				ЗначенияДляЗаполнения.Вставить("ДолжностьРуководителя", "Объект.ДолжностьРуководителя");
			КонецЕсли;
			
			Если МетаданныеДокумента.Реквизиты.Найти("ГлавныйБухгалтер") <> Неопределено Тогда
				ЗначенияДляЗаполнения.Вставить("ГлавныйБухгалтер", "Объект.ГлавныйБухгалтер");
			КонецЕсли;
			
			ЗарплатаКадры.ЗаполнитьЗначенияВФорме(Форма, ЗначенияДляЗаполнения, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("Организация"));
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ТекущиеУдостоверенияЛичностиФизическихЛиц(СписокФизическихЛиц, ДатаСведений) Экспорт
	
	УдостоверенияЛичности = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	МАКСИМУМ(ДокументыФизическихЛиц.Период) КАК Период,
		|	ДокументыФизическихЛиц.Физлицо
		|ПОМЕСТИТЬ ВТПериодыДокументов
		|ИЗ
		|	РегистрСведений.ДокументыФизическихЛиц КАК ДокументыФизическихЛиц
		|ГДЕ
		|	ДокументыФизическихЛиц.ЯвляетсяДокументомУдостоверяющимЛичность
		|	И ДокументыФизическихЛиц.Физлицо В(&СписокФизическихЛиц)
		|	И ДокументыФизическихЛиц.Период > &Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокументыФизическихЛиц.Физлицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТПериодыДокументов.Период,
		|	ВТПериодыДокументов.Физлицо,
		|	ДокументыФизическихЛиц.ВидДокумента КАК ДокументВид,
		|	ДокументыФизическихЛиц.Серия КАК ДокументСерия,
		|	ДокументыФизическихЛиц.Номер КАК ДокументНомер,
		|	ДокументыФизическихЛиц.Представление КАК ДокументПредставление
		|ИЗ
		|	ВТПериодыДокументов КАК ВТПериодыДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц КАК ДокументыФизическихЛиц
		|		ПО ВТПериодыДокументов.Период = ДокументыФизическихЛиц.Период
		|			И ВТПериодыДокументов.Физлицо = ДокументыФизическихЛиц.Физлицо
		|			И (ДокументыФизическихЛиц.ЯвляетсяДокументомУдостоверяющимЛичность)";
		
	Запрос.УстановитьПараметр("СписокФизическихЛиц", СписокФизическихЛиц);
	Запрос.УстановитьПараметр("Период", ДатаСведений);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ОписаниеУдостоверения = Новый Структура("Период,ДокументВид,ДокументСерия,ДокументНомер,ДокументПредставление");
			ЗаполнитьЗначенияСвойств(ОписаниеУдостоверения, Выборка);
			
			УдостоверенияЛичности.Вставить(Выборка.Физлицо, ОписаниеУдостоверения);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат УдостоверенияЛичности;

КонецФункции

Функция ТекущиеУдостоверенияЛичностиСотрудников(СписокСотрудников, ДатаСведений) Экспорт
	
	УдостоверенияЛичности = Новый Соответствие;
	
	Если ТипЗнч(СписокСотрудников) = Тип("СправочникСсылка.Сотрудники") Тогда
		Сотрудники = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(СписокСотрудников);
	Иначе
		Сотрудники = СписокСотрудников;
	КонецЕсли;
	
	Соответствие = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Сотрудники, "ФизическоеЛицо");
	УдостоверенияЛичностиФизическихЛиц = ТекущиеУдостоверенияЛичностиФизическихЛиц(ОбщегоНазначения.ВыгрузитьКолонку(Соответствие, "Значение", Истина), ДатаСведений);
	
	Для каждого ЭлементСоответствия Из Соответствие Цикл
		
		ОписаниеУдостоверения = УдостоверенияЛичностиФизическихЛиц.Получить(ЭлементСоответствия.Значение);
		
		Если ЗначениеЗаполнено(ОписаниеУдостоверения) Тогда
			УдостоверенияЛичности.Вставить(ЭлементСоответствия.Ключ, ОписаниеУдостоверения);
		КонецЕсли; 

	КонецЦикла;
	
	Возврат УдостоверенияЛичности;
	
КонецФункции

Функция ИнфоНадписьОДокументеУдостоверяющемЛичность(ТекущиеУдостоверенияЛичности, ФизическоеЛицо, ДокументВид, ДокументСерия, ДокументНомер) Экспорт
	
	ИнфоНадписьОДокументеУдостоверяющемЛичность = "";
	
	ОписаниеУдостоверения = ТекущиеУдостоверенияЛичности.Получить(ФизическоеЛицо);
	Если ОписаниеУдостоверения <> Неопределено Тогда
		
		Если ДокументВид <> ОписаниеУдостоверения.ДокументВид
			ИЛИ ДокументСерия <> ОписаниеУдостоверения.ДокументСерия
			ИЛИ ДокументНомер <> ОписаниеУдостоверения.ДокументНомер Тогда
			
			ИнфоНадписьОДокументеУдостоверяющемЛичность = 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='С %1 действует: %2'"),
					Формат(ОписаниеУдостоверения.Период, "ДЛФ=D"),
					ОписаниеУдостоверения.ДокументПредставление)
					
		КонецЕсли;
				
	КонецЕсли; 
	
	Возврат ИнфоНадписьОДокументеУдостоверяющемЛичность;
	
КонецФункции

#КонецОбласти

