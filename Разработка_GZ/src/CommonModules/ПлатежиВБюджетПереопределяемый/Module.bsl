
#Область ПрограммныйИнтерфейс

// Получает контекст платежного документа, не зависящий от прикладного решения 
//
// Параметры:
//  ИсточникДанных - Структура - содержит сведения, необходимые для получения контекста.
//               Состав потребных сведений (ключей, значений) определяется конфигурацией-потребителем 
//               и описан в НовыйИсточникДанныхКонтекстаПлатежногоДокумента().
//               Для БП3 - "Период", "Организация", "СчетПолучателя"
//
// Возвращаемое значение:
//  Структура - содержит ключи, описанные в ПлатежиВБюджетКлиентСервер.ПоляКонтекста()
//
Функция КонтекстПлатежногоДокумента(ИсточникДанных) Экспорт
	Перем ВидНалога;
	
	Контекст = ПлатежиВБюджетКлиентСервер.НовыйКонтекст();
	
	Если ЗначениеЗаполнено(ИсточникДанных.Период) Тогда
		Период = ИсточникДанных.Период;
	Иначе
		Период = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИсточникДанных.Налог) Тогда
		ВидНалога = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ИсточникДанных.Налог, "ВидНалога");
	Иначе
		ВидНалога = Перечисления.ВидыНалогов.ПустаяСсылка();
	КонецЕсли;
	
	Контекст.ВидНалога = ВидНалога;
	
	ПериодПлатежаЗадан = Ложь;
	Если ИсточникДанных.Свойство("ПериодПлатежа") И ЗначениеЗаполнено(ИсточникДанных.ПериодПлатежа) Тогда
		Контекст.ПериодПлатежа = ИсточникДанных.ПериодПлатежа;
		ПериодПлатежаЗадан = Истина;
	КонецЕсли;
	
	ПорядокУплатыНалога = ПорядокУплатыНалогаПоДаннымСпискаЗадач(ИсточникДанных.Организация, ВидНалога, Период);
	Контекст.ПорядокУплатыНалога = ПорядокУплатыНалога;
	
	ПоказателиНалоговогоПериода = ПоказателиНалоговогоПериода(
		ИсточникДанных.Организация, ВидНалога, Период, ИсточникДанных.ВидНалоговогоОбязательства, ПорядокУплатыНалога);
	Если НЕ ЗначениеЗаполнено(ВидНалога) И ПлатежиВБюджетКлиентСервер.ПлатежАдминистрируетсяНалоговымиОрганами(ИсточникДанных.Налог.КодБК) Тогда
		ПоказательПериода = ПлатежиВБюджетКлиентСервер.НалоговыйПериод(
			Период, ПериодичностьПоКлассификатору(Перечисления.Периодичность.Месяц));
		ПоказателиНалоговогоПериода.Период                         = Период;
		ПоказателиНалоговогоПериода.ПоказательПериода              = ПоказательПериода;
		ПоказателиНалоговогоПериода.ПредставлениеНалоговогоПериода = ПлатежиВБюджетКлиентСервер.ПредставлениеНалоговогоПериода(ПоказательПериода);
	КонецЕсли;
	
	// Если в данных заполнения передан Период платежа, то на его основе заполняем Показатель периода.
	Если ПериодПлатежаЗадан И ПлатежиВБюджетКлиентСерверПереопределяемый.ЭтоНДФЛ_ИП(ВидНалога) Тогда
		
		Периодичность = УчетНДФЛПредпринимателя.ПериодичностьНалоговогоПлатежа(ИсточникДанных.ПериодПлатежа);
		ПоказательПериода = ПлатежиВБюджетКлиентСервер.НалоговыйПериод(ИсточникДанных.ПериодПлатежа,
			ПериодичностьПоКлассификатору(Периодичность));
		
		ПоказателиНалоговогоПериода.Период                         = ИсточникДанных.ПериодПлатежа;
		ПоказателиНалоговогоПериода.ПоказательПериода              = ПоказательПериода;
		ПоказателиНалоговогоПериода.ПредставлениеНалоговогоПериода = ПлатежиВБюджетКлиентСервер.ПредставлениеНалоговогоПериода(ПоказательПериода);
		
	ИначеЕсли ПериодПлатежаЗадан Тогда
		ПоказателиПериода = ПлатежиВБюджетКлиентСервер.РазобратьНалоговыйПериод(ПоказателиНалоговогоПериода.ПоказательПериода);
		Если ПоказателиПериода.Периодичность <> ПлатежиВБюджетКлиентСервер.ПлатежПоКонкретнойДате() Тогда
			ПериодичностьНаПериодПлатежа = ПоказателиПериода.Периодичность;
			
			Если ПлатежиВБюджетКлиентСерверПереопределяемый.ЭтоНалогУСН(ВидНалога) Тогда
				ПериодичностьУплаты = УчетУСН.ПериодичностьНалоговогоПлатежа(Контекст.ПериодПлатежа);
				ПериодичностьНаПериодПлатежа = ПериодичностьПоКлассификатору(ПериодичностьУплаты);
			КонецЕсли;
			
			ПоказательПериода = ПлатежиВБюджетКлиентСервер.НалоговыйПериод(Контекст.ПериодПлатежа, ПериодичностьНаПериодПлатежа);
			ПоказателиНалоговогоПериода.Период                         = Контекст.ПериодПлатежа;
			ПоказателиНалоговогоПериода.ПоказательПериода              = ПоказательПериода;
			ПоказателиНалоговогоПериода.ПредставлениеНалоговогоПериода = ПлатежиВБюджетКлиентСервер.ПредставлениеНалоговогоПериода(ПоказательПериода);
		КонецЕсли;
	Иначе
		Контекст.ПериодПлатежа = Мин(ПоказателиНалоговогоПериода.Период, Период);
	КонецЕсли;
	
	Контекст.Период            = Макс(ПоказателиНалоговогоПериода.Период, Период);
	Контекст.ПоказательПериода = ПоказателиНалоговогоПериода.ПоказательПериода;
	Контекст.ПредставлениеНалоговогоПериода = ПоказателиНалоговогоПериода.ПредставлениеНалоговогоПериода;
	
	Контекст.НазначениеПлатежа = Справочники.ВидыНалоговИПлатежейВБюджет.НазначениеПлатежа(
		ИсточникДанных.Налог,
		ИсточникДанных.ВидНалоговогоОбязательства,
		ИсточникДанных.Организация,
		Контекст.Период,
		ПоказателиНалоговогоПериода.ПредставлениеНалоговогоПериода);
	
	Контекст.НалоговыйАгент = РасчетыСБюджетом.НалоговыйАгент(ВидНалога);
	
	Если ИсточникДанных.Свойство("КодБК") И НЕ ПустаяСтрока(ИсточникДанных.КодБК) Тогда
		Контекст.КБК = ИсточникДанных.КодБК;
	Иначе
		Контекст.КБК = Справочники.ВидыНалоговИПлатежейВБюджет.КБК(
			ИсточникДанных.Налог,
			ИсточникДанных.ВидНалоговогоОбязательства,
			Контекст.Период,
			Контекст.ПериодПлатежа);
	КонецЕсли;
	
	Если ВидГосударственногоОргана(Контекст.КБК) = Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган Тогда
		Контекст.ВидПеречисления = Перечисления.ВидыПеречисленийВБюджет.НалоговыйПлатеж;
	ИначеЕсли ПлатежиВБюджетКлиентСервер.ПлатежАдминистрируетсяТаможеннымиОрганами(Контекст.КБК) Тогда
		Контекст.ВидПеречисления = Перечисления.ВидыПеречисленийВБюджет.ТаможенныйПлатеж;
	Иначе
		Контекст.ВидПеречисления = Перечисления.ВидыПеречисленийВБюджет.ИнойПлатеж;
	КонецЕсли;
	
	Если ИсточникДанных.Свойство("Налогоплательщик") И ЗначениеЗаполнено(ИсточникДанных.Налогоплательщик) Тогда
		Контекст.ФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо =
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ИсточникДанных.Налогоплательщик, "ЮридическоеФизическоеЛицо");
	Иначе
		Контекст.ФизическоеЛицо = Не ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(ИсточникДанных.Организация);
	КонецЕсли;
	Если ЗначениеЗаполнено(ИсточникДанных.СчетПолучателя) Тогда
		Контекст.НомерСчетаПолучателя = ИсточникДанных.СчетПолучателя.НомерСчета;
	КонецЕсли;
	
	ПравилаЗаполнения = ПлатежиВБюджетНастройки.ПравилаЗаполненияРеквизитовПлатежа(ИсточникДанных.Налог);
	
	Если ПравилаЗаполнения.ЗаполнятьКодТерриторииПоРегистрации Тогда
		Контекст.КодТерриторииПоУмолчанию = Справочники.Организации.КодТерриторииМестаРегистрации(ИсточникДанных.Организация, Период);
		Если ИсточникДанных.Свойство("РегистрацияВНалоговомОргане") И ЗначениеЗаполнено(ИсточникДанных.РегистрацияВНалоговомОргане) Тогда
			Контекст.КодТерритории = Справочники.РегистрацииВНалоговомОргане.КодТерритории(
				ИсточникДанных.РегистрацияВНалоговомОргане, Период);
		Иначе
			Контекст.КодТерритории = Контекст.КодТерриторииПоУмолчанию;
		КонецЕсли;
	КонецЕсли;
	
	ПлатежиВБюджетКлиентСервер.ПривестиКодТерриторииКФорматуПриказа58н(Контекст.КодТерритории, Контекст.Период);
	ПлатежиВБюджетКлиентСервер.ПривестиКодТерриторииКФорматуПриказа58н(Контекст.КодТерриторииПоУмолчанию, Контекст.Период);
	
	Контекст.ОчередностьПлатежа = УчетДенежныхСредствКлиентСервер.ОчередностьПлатежаНалогиВзносы();
	
	Возврат Контекст;
	
КонецФункции

Функция НовыйИсточникДанныхКонтекстаПлатежногоДокумента() Экспорт
	
	ИсточникДанных = Новый Структура;
	ИсточникДанных.Вставить("Период",                      '0001-01-01');
	ИсточникДанных.Вставить("ПериодПлатежа",               '0001-01-01');
	ИсточникДанных.Вставить("Организация",                 Справочники.Организации.ПустаяСсылка());
	ИсточникДанных.Вставить("Получатель",                  Справочники.Контрагенты.ПустаяСсылка());
	ИсточникДанных.Вставить("СчетПолучателя",              Справочники.БанковскиеСчета.ПустаяСсылка());
	ИсточникДанных.Вставить("Налог",                       Справочники.ВидыНалоговИПлатежейВБюджет.ПустаяСсылка());
	ИсточникДанных.Вставить("ВидНалоговогоОбязательства",  Перечисления.ВидыПлатежейВГосБюджет.ПустаяСсылка());
	ИсточникДанных.Вставить("РегистрацияВНалоговомОргане", Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	
	Возврат ИсточникДанных;
	
КонецФункции

Функция ДублиУИН(ИдентификаторПлатежа, Ссылка) Экспорт
	
	Дубли = Новый СписокЗначений;
	
	Если Не ПлатежиВБюджетКлиентСервер.РеквизитЗаполнен(ИдентификаторПлатежа) Тогда
		Возврат Дубли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИдентификаторПлатежа", ИдентификаторПлатежа);
	Запрос.УстановитьПараметр("Ссылка",               Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПлатежноеПоручение.Ссылка КАК Ссылка,
	|	ПлатежноеПоручение.Дата КАК Дата,
	|	ПлатежноеПоручение.Представление КАК Представление
	|ИЗ
	|	Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
	|ГДЕ
	|	ПлатежноеПоручение.ИдентификаторПлатежа = &ИдентификаторПлатежа
	|	И ПлатежноеПоручение.Ссылка <> &Ссылка
	|	И ПлатежноеПоручение.ПеречислениеВБюджет
	|	И НЕ ПлатежноеПоручение.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ,
	|	Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Дубли.Добавить(Выборка.Ссылка, Выборка.Представление);
	КонецЦикла;
	
	Возврат Дубли;
	
КонецФункции

Функция ВидГосударственногоОргана(КБК) Экспорт
	
	Если ПустаяСтрока(КБК) Тогда
		Возврат Перечисления.ВидыГосударственныхОрганов.ПустаяСсылка();
	КонецЕсли;
	
	КодГлавногоАдминистратора = ПлатежиВБюджетКлиентСервер.КодГлавногоАдминистратора(КБК);
	
	Если ПустаяСтрока(КБК) ИЛИ КодГлавногоАдминистратора = "182" Тогда
		ВидГосударственногоОргана = ПредопределенноеЗначение("Перечисление.ВидыГосударственныхОрганов.НалоговыйОрган");
	ИначеЕсли КодГлавногоАдминистратора = "392" Тогда
		ВидГосударственногоОргана = ПредопределенноеЗначение("Перечисление.ВидыГосударственныхОрганов.ОрганПФР");
	ИначеЕсли КодГлавногоАдминистратора = "393" Тогда
		ВидГосударственногоОргана = ПредопределенноеЗначение("Перечисление.ВидыГосударственныхОрганов.ОрганФСС");
	Иначе
		ВидГосударственногоОргана = ПредопределенноеЗначение("Перечисление.ВидыГосударственныхОрганов.Прочий");
	КонецЕсли;
	
	Возврат ВидГосударственногоОргана;
	
КонецФункции

Функция ПериодичностьПоКлассификатору(Периодичность) Экспорт
	
	Если Периодичность = Перечисления.Периодичность.Год Тогда
		
		Возврат ПлатежиВБюджетКлиентСервер.ПериодичностьГод();
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Полугодие Тогда
		
		Возврат ПлатежиВБюджетКлиентСервер.ПериодичностьПолугодие();
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда
		
		Возврат ПлатежиВБюджетКлиентСервер.ПериодичностьКвартал();
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Месяц Тогда
		
		Возврат ПлатежиВБюджетКлиентСервер.ПериодичностьМесяц();
		
	Иначе
		
		Возврат ПлатежиВБюджетКлиентСервер.ПлатежПоКонкретнойДате();
		
	КонецЕсли;
	
КонецФункции

Функция ПредставлениеПорядкаОтраженияБУ(Параметры = Неопределено) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Представление", ОбщегоНазначенияБПКлиентСервер.ПредставлениеНезаполненногоЗначения());
	Результат.Вставить("Заполнен",      Ложь);
	
	Если Параметры <> Неопределено И ЗначениеЗаполнено(Параметры.СчетУчета) Тогда
		
		// Подготовим текст и перечень реквизитов, требующих заполнения
		ЭлементыТекста = Новый Массив;
		
		СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Параметры.СчетУчета);
		ЭлементыТекста.Добавить(СвойстваСчета.Код);
		
		Для НомерСубконто = 1 По СвойстваСчета.КоличествоСубконто Цикл
			ЭлементыТекста.Добавить(Параметры["Субконто" + НомерСубконто]);
		КонецЦикла;
		
		Результат.Представление = СтрСоединить(ЭлементыТекста, НСтр("ru = ', '"));
		Если Не ПустаяСтрока(Результат.Представление) Тогда
			// Предложение следует начинать с заглавной буквы
			Результат.Представление = ВРег(Лев(Результат.Представление, 1)) + Сред(Результат.Представление, 2);
		КонецЕсли;
		
		Результат.Заполнен = Истина;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПоказателиНалоговогоПериода(Организация, ВидНалога, Период, ВидНалоговогоОбязательства = Неопределено, ПорядокУплатыНалога = Неопределено) Экспорт
	
	Показатели = ПоказателиПериода();
	
	// Для налога УСН предусмотрен особый порядок определения оплачиваемого периода.
	ЭтоНалогУСН = ПлатежиВБюджетКлиентСерверПереопределяемый.ЭтоНалогУСН(ВидНалога);
	ЭтоФиксированныеВзносы = ПлатежиВБюджетКлиентСерверПереопределяемый.ЭтоФиксированныеВзносы(ВидНалога);
	
	Если Не ЗначениеЗаполнено(ПорядокУплатыНалога) Тогда
		ПорядокУплатыНалога = ПорядокУплатыНалогаПоДаннымСпискаЗадач(Организация, ВидНалога, Период);
	КонецЕсли;
	
	Если ПорядокУплатыНалога <> Неопределено Тогда
		// Ближайшую задачу выполнять еще рано
		Если Период < ПорядокУплатыНалога.НачалоВыполнения Тогда
			ПорядокУплатыНалога = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Если ПорядокУплатыНалога <> Неопределено Тогда
		
		НалоговыйПериодДляПлатежейВБюджет = ПорядокУплатыНалога.Периодичность;
		
		Если ВидНалога = Перечисления.ВидыНалогов.НДС Тогда
			// Особенность НДС в том, что он уплачивается несколькими (ежемесячными) платежами,
			// каждый из которых относится к одному и тому же периоду (кварталу).
			// Из текста правил оформления  документов нельзя сделать однозначный вывод, что указывать в данном случае - месяц или квартал.
			// Сейчас местные УФНС рекомендуют указывать значение "КВ" (квартал).
			НалоговыйПериодДляПлатежейВБюджет = Перечисления.Периодичность.Квартал;
			
		ИначеЕсли ПлатежиВБюджетКлиентСерверПереопределяемый.ЭтоНДФЛ_ИП(ВидНалога) Тогда
			
			// Если по годовому платежу предусматривается более одного срока уплаты налогового платежа
			// и установлены конкретные даты уплаты, то указываются эти даты.
			
			НалоговыйПериодДляПлатежейВБюджет = Неопределено;
			
		ИначеЕсли ЭтоФиксированныеВзносы Тогда
			
			НалоговыйПериодДляПлатежейВБюджет = Перечисления.Периодичность.Год;
			
			Если ВидНалога = Перечисления.ВидыНалогов.ФиксированныеВзносы_ПФР_СтраховаяЧасть
				И ВидНалоговогоОбязательства = Перечисления.ВидыПлатежейВГосБюджет.ВзносыСвышеПредела Тогда
				ПорядокУплатыНалога.Срок          = НачалоКвартала(Период) - 1;
				ПорядокУплатыНалога.ПериодСобытия = НачалоКвартала(Период) - 1;
			КонецЕсли;
			
		КонецЕсли;
		
		ПериодичностьПоКлассификатору = ПериодичностьПоКлассификатору(НалоговыйПериодДляПлатежейВБюджет);
		Если ПериодичностьПоКлассификатору = ПлатежиВБюджетКлиентСервер.ПлатежПоКонкретнойДате() 
			Или НалоговыйПериодДляПлатежейВБюджет <> ПорядокУплатыНалога.Периодичность Тогда
			ПоказательПериода = ПлатежиВБюджетКлиентСервер.НалоговыйПериод(ПорядокУплатыНалога.Срок, ПериодичностьПоКлассификатору);
		Иначе
			ПоказательПериода = ПлатежиВБюджетКлиентСервер.НалоговыйПериод(ПорядокУплатыНалога.ПериодСобытия, ПериодичностьПоКлассификатору);
		КонецЕсли;
		
		Показатели.Период                         = ПорядокУплатыНалога.ПериодСобытия;
		Показатели.ПоказательПериода              = ПоказательПериода;
		Показатели.ПредставлениеНалоговогоПериода = ПлатежиВБюджетКлиентСервер.ПредставлениеНалоговогоПериода(ПоказательПериода);
		
	ИначеЕсли ЭтоНалогУСН Тогда
		
		ПериодУплаты                      = УчетУСН.РелевантныйПериодНалоговогоПлатежа(Период, Организация);
		НалоговыйПериодДляПлатежейВБюджет = УчетУСН.ПериодичностьНалоговогоПлатежа(ПериодУплаты);
		ПериодичностьПоКлассификатору     = ПериодичностьПоКлассификатору(НалоговыйПериодДляПлатежейВБюджет);
		
		Показатели.Период                         = ПериодУплаты;
		Показатели.ПоказательПериода              = ПлатежиВБюджетКлиентСервер.НалоговыйПериод(ПериодУплаты, ПериодичностьПоКлассификатору);
		Показатели.ПредставлениеНалоговогоПериода = ПлатежиВБюджетКлиентСервер.ПредставлениеНалоговогоПериода(Показатели.ПоказательПериода);
		
	ИначеЕсли ВидНалога = Перечисления.ВидыНалогов.НДФЛ
		ИЛИ ВидНалога = Перечисления.ВидыНалогов.НДФЛ_ДоходыСвышеПредельнойВеличины Тогда
		
		ПериодУплаты = НачалоМесяца(Период) - 1;
		Показатели.Период                         = ПериодУплаты; // НДФЛ платим в месяце, следующем за окончанием налогового периода
		Показатели.ПоказательПериода              = ПлатежиВБюджетКлиентСервер.НалоговыйПериод(ПериодУплаты, ПлатежиВБюджетКлиентСервер.ПериодичностьМесяц());
		Показатели.ПредставлениеНалоговогоПериода = ПлатежиВБюджетКлиентСервер.ПредставлениеНалоговогоПериода(Показатели.ПоказательПериода);
		
	ИначеЕсли ВидНалога = Перечисления.ВидыНалогов.НДФЛ_ФизЛицо Тогда // Предприниматель на УСН может заплатить НДФЛ за себя
		
		ПериодУплаты = НачалоГода(Период) - 1;
		Показатели.Период                         = ПериодУплаты;
		Показатели.ПоказательПериода              = ПлатежиВБюджетКлиентСервер.НалоговыйПериод(ПериодУплаты, ПлатежиВБюджетКлиентСервер.ПериодичностьГод());
		Показатели.ПредставлениеНалоговогоПериода = ПлатежиВБюджетКлиентСервер.ПредставлениеНалоговогоПериода(Показатели.ПоказательПериода);
		
	ИначеЕсли ПлатежиВБюджетКлиентСерверПереопределяемый.ЭтоНДФЛ_ИП(ВидНалога)
		И Период >= УчетНДФЛПредпринимателя.ДатаНачалаРасчетаАвансовыхПлатежейНДФЛ() Тогда
		
		ПериодУплаты = УчетНДФЛПредпринимателя.РелевантныйПериодНалоговогоПлатежа(Период);
		НалоговыйПериодДляПлатежейВБюджет = УчетНДФЛПредпринимателя.ПериодичностьНалоговогоПлатежа(ПериодУплаты);
		ПериодичностьПоКлассификатору     = ПериодичностьПоКлассификатору(НалоговыйПериодДляПлатежейВБюджет);
		
		Показатели.Период                         = ПериодУплаты;
		Показатели.ПоказательПериода              = ПлатежиВБюджетКлиентСервер.НалоговыйПериод(ПериодУплаты, ПериодичностьПоКлассификатору);
		Показатели.ПредставлениеНалоговогоПериода = ПлатежиВБюджетКлиентСервер.ПредставлениеНалоговогоПериода(Показатели.ПоказательПериода);
		
	ИначеЕсли ВидНалога = Перечисления.ВидыНалогов.НДС Тогда // Предприятие на УСН может заплатить НДС
		
		ПериодУплаты = НачалоКвартала(Период) - 1;
		ПоказательПериода = ПлатежиВБюджетКлиентСервер.НалоговыйПериод(
			ПериодУплаты, ПериодичностьПоКлассификатору(Перечисления.Периодичность.Квартал));
		Показатели.Период                         = ПериодУплаты;
		Показатели.ПоказательПериода              = ПоказательПериода;
		Показатели.ПредставлениеНалоговогоПериода = ПлатежиВБюджетКлиентСервер.ПредставлениеНалоговогоПериода(ПоказательПериода);
		
	ИначеЕсли ЭтоФиксированныеВзносы Тогда
		
		ПериодУплаты = НачалоГода(Период);
		НалоговыйПериодДляПлатежейВБюджет = Перечисления.Периодичность.Год;
		ПериодичностьПоКлассификатору = ПериодичностьПоКлассификатору(НалоговыйПериодДляПлатежейВБюджет);
		
		Показатели.Период                         = ПериодУплаты;
		Показатели.ПоказательПериода              = ПлатежиВБюджетКлиентСервер.НалоговыйПериод(ПериодУплаты, ПериодичностьПоКлассификатору);
		Показатели.ПредставлениеНалоговогоПериода = ПлатежиВБюджетКлиентСервер.ПредставлениеНалоговогоПериода(Показатели.ПоказательПериода);
		
	Иначе
		
		Показатели.Период                         = Период;
		Показатели.ПоказательПериода              = ПлатежиВБюджетКлиентСервер.НалоговыйПериод(Период, ПлатежиВБюджетКлиентСервер.ПлатежПоКонкретнойДате());
		Показатели.ПредставлениеНалоговогоПериода = "";
		
	КонецЕсли;
	
	Возврат Показатели;
	
КонецФункции

Функция ПоказателиПериода() Экспорт
	
	Возврат Новый Структура("Период, ПоказательПериода, ПредставлениеНалоговогоПериода",
		'00010101', "", "");
	
КонецФункции

Функция НовыеПараметрыРасчетаНалогаКУплате() Экспорт
	
	Результат = Новый Структура;
	
	Результат.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	Результат.Вставить("НалоговыйПериод", '00010101');
	Результат.Вставить("ВидНалога", Перечисления.ВидыНалогов.ПустаяСсылка());
	Результат.Вставить("ВидНалоговогоОбязательства", Перечисления.ВидыПлатежейВГосБюджет.ПустаяСсылка());
	Результат.Вставить("ОплатаЗадолженности", Ложь);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПорядокУплатыНалогаПоДаннымСпискаЗадач(Организация, ВидНалога, Период)
	
	// Периодичность вычисляется в соответствие со стандартным механизмом из списка задач.
	// Исключения: УСН, НДФЛ физического лица, НДФЛ индивидуального предпринимателя (с 01.01.2020).
	
	ПрименитьДляНДФЛ_ИП = (Период >= УчетНДФЛПредпринимателя.ДатаНачалаРасчетаАвансовыхПлатежейНДФЛ())
		И ПлатежиВБюджетКлиентСерверПереопределяемый.ЭтоНДФЛ_ИП(ВидНалога);
	
	Если ПлатежиВБюджетКлиентСерверПереопределяемый.ЭтоНалогУСН(ВидНалога)
		Или ПлатежиВБюджетКлиентСерверПереопределяемый.ЭтоНДФЛ_ФизЛицо(ВидНалога)
		Или ПрименитьДляНДФЛ_ИП Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат РегистрыСведений.ЗадачиБухгалтера.ПорядокУплатыНалогаЗаПериод(Организация, ВидНалога, Период);
	
КонецФункции

#КонецОбласти
