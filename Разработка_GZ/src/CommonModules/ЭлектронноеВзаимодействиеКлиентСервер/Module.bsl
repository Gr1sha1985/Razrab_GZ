////////////////////////////////////////////////////////////////////////////////
// ЭлектронноеВзаимодействиеКлиентСервер: общий механизм обмена электронными документами.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Формирует текст сообщения, подставляя значения
// параметров в шаблоны сообщений.
//
// Параметры:
//  ВидПоля       - Строка - может принимать значения:
//                  Поле, Колонка, Список;
//  ВидСообщения  - Строка - может принимать значения:
//                  Заполнение, Корректность;
//  Параметр1     - Строка - имя поля;
//  Параметр2     - Строка - номер строки;
//  Параметр3     - Строка - имя списка;
//  Параметр4     - Строка - текст сообщения о некорректности заполнения.
//
// Возвращаемое значение:
//   Строка - текст сообщения.
//
Функция ТекстСообщения(ВидПоля = "Поле", ВидСообщения = "Заполнение", Параметр1 = "", Параметр2 = "", Параметр3 = "", Параметр4 = "") Экспорт

	ТекстСообщения = "";

	Если ВРег(ВидПоля) = "ПОЛЕ" Тогда
		Если ВРег(ВидСообщения) = "ЗАПОЛНЕНИЕ" Тогда
			Шаблон = НСтр("ru = 'Поле ""%1"" не заполнено.'");
		ИначеЕсли ВРег(ВидСообщения) = "КОРРЕКТНОСТЬ" Тогда
			Шаблон = НСтр("ru = 'Поле ""%1"" заполнено некорректно.
                           |
                           |%4'");
		КонецЕсли;
	ИначеЕсли ВРег(ВидПоля) = "КОЛОНКА" Тогда
		Если ВРег(ВидСообщения) = "ЗАПОЛНЕНИЕ" Тогда
			Шаблон = НСтр("ru = 'Не заполнена колонка ""%1"" в строке %2 списка ""%3"".'");
		ИначеЕсли ВРег(ВидСообщения) = "КОРРЕКТНОСТЬ" Тогда
			Шаблон = НСтр("ru = 'Некорректно заполнена колонка ""%1"" в строке %2 списка ""%3"".
                           |
                           |%4'");
		КонецЕсли;
	ИначеЕсли ВРег(ВидПоля) = "СПИСОК" Тогда
		Если ВРег(ВидСообщения) = "ЗАПОЛНЕНИЕ" Тогда
			Шаблон = НСтр("ru = 'Не введено ни одной строки в список ""%3"".'");
		ИначеЕсли ВРег(ВидСообщения) = "КОРРЕКТНОСТЬ" Тогда
			Шаблон = НСтр("ru = 'Некорректно заполнен список ""%3"".
                           |
                           |%4'");
		КонецЕсли;
	КонецЕсли;

	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, Параметр1, Параметр2, Параметр3, Параметр4);

КонецФункции

// Определяет необходимость конкретного действия из перечня действий.
//
// Параметры:
//  ПереченьДействий - Строка - перечень действий, которые должны быть совершены с объектом;
//  Действие - Строка - конкретное действие, которое нужно найти в перечне действий;
// 
// Возвращаемое значение:
//  Булево - Если действие найдено - возвращается Истина, иначе Ложь.
//
Функция ЕстьДействие(ПереченьДействий, Действие) Экспорт
	
	Возврат (СтрНайти(ПереченьДействий, Действие) > 0);
	
КонецФункции

// Формирует служебную структуру, которая может быть использована для указания параметров обработки ошибок для
// реквизитов дерева данных электронного документа.
//
// Параметры:
//  КлючДанных			 - ЛюбаяСсылка - ключ данных для обработки через сообщение пользователю (см. СообщениеПользователю).
//  ПутьКДанным			 - Строка - путь к данным для обработки через сообщение пользователю (см. СообщениеПользователю).
//  НавигационнаяСсылка	 - Строка - навигационная ссылка, по которой нужно перейти при клике на ошибку.
//  ИмяФормы			 - Строка - имя формы, которую нужно открыть при клике на ошибку.
//  ПараметрыФормы		 - Структура - параметры, передаваемые в форму, открываемую при клике на ошибку.
//  ТекстОшибки			 - Строка - используется для переопределения стандартного текста ошибки.
// 
// Возвращаемое значение:
//  Структура - см. ЭлектронноеВзаимодействиеСлужебныйКлиентСервер.НовыеПараметрыОшибки.
//
Функция НовыеПараметрыОбработкиОшибки(КлючДанных = Неопределено, ПутьКДанным = "", НавигационнаяСсылка = "", ИмяФормы = "",
	ПараметрыФормы = Неопределено, ТекстОшибки = "") Экспорт

	Возврат ЭлектронноеВзаимодействиеСлужебныйКлиентСервер.НовыеПараметрыОшибки(КлючДанных, ПутьКДанным,
		НавигационнаяСсылка, ИмяФормы, ПараметрыФормы, ТекстОшибки);

КонецФункции

#Область Тарификация

// Возвращает идентификатор портала 1С ИТС как поставщика услуг.
// 
// Возвращаемое значение:
//  Строка - идентификатор портала.
//
Функция ИдентификаторПоставщикаУслугПортал1СИТС() Экспорт
	
	Возврат "Portal1CITS";
	
КонецФункции

#КонецОбласти

#КонецОбласти