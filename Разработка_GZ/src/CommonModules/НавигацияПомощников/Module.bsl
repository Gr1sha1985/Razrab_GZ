#Область СлужебныйПрограммныйИнтерфейс

// Размещает на форме элементы навигации
// 
// Параметры:
//
// Форма - Управляемая форма.
// Параметры - Структура - Структура параметров формы.
//
Процедура РазместитьНавигацию(Форма, СтруктураНавигацииПомощника, Параметры = Неопределено) Экспорт
	
	ЗаполнитьСлужебныеРеквизиты(Форма, СтруктураНавигацииПомощника, Параметры);
	Если Форма.НавигацияНомерШага = 0 Тогда
		Возврат;
	КонецЕсли;
	РазместитьКартинки(Форма, СтруктураНавигацииПомощника);
	РазместитьТексты(Форма, СтруктураНавигацииПомощника);
	УправлениеВидимостью(Форма);
	
КонецПроцедуры

Функция НовыйСтруктураНавигации() Экспорт
	
	Возврат Новый Структура("Структура, Описание", Новый Структура, "");
	
КонецФункции

Функция НовыйСтруктураШага() Экспорт
	
	СтруктураШага = Новый Структура;
	СтруктураШага.Вставить("ИмяПомощника", "");
	// Форма
	СтруктураШага.Вставить("ИмяФормы",                 "");
	СтруктураШага.Вставить("ОпределятьИмяФормы",       Ложь);
	СтруктураШага.Вставить("ЗаголовокФормы",           "");
	СтруктураШага.Вставить("СтруктураПараметровФормы", НовыйСтруктураПараметровФормы());
	// Служебные реквизиты
	СтруктураШага.Вставить("НомерШага",      0);
	СтруктураШага.Вставить("ТекстНавигации", "");
	СтруктураШага.Вставить("ИмяШагаДляЛК",   "");
	
	Возврат СтруктураШага;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НовыйСтруктураПараметровФормы()
	
	СтруктураПараметровФормы = Новый Структура;
	СтруктураПараметровФормы.Вставить("НавигацияПараметрФормы", "");
	
	Возврат СтруктураПараметровФормы;
	
КонецФункции

Процедура ЗаполнитьСлужебныеРеквизиты(Форма, СтруктураНавигацииПомощника, Параметры)
	
	// Параметр навигации
	Если Параметры <> Неопределено И Параметры.Свойство("НавигацияПараметрФормы") Тогда
		Форма.НавигацияПараметрФормы = Параметры.НавигацияПараметрФормы;
	КонецЕсли;
	
	// Номер шага
	НомерШага = 0;
	Для Каждого Шаг Из СтруктураНавигацииПомощника Цикл
		СтруктураШага = Шаг.Значение;
		Если СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = Форма.НавигацияПараметрФормы Тогда
			НомерШага = СтруктураШага.НомерШага;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если НомерШага = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Форма.НавигацияНомерШага = НомерШага;
	
	// Заголовок
	СтруктураШага = СтруктураНавигацииПомощника[НавигацияПомощниковКлиентСервер.ИмяШага(НомерШага)];
	Если Не ПустаяСтрока(СтруктураШага.ЗаголовокФормы) Тогда
		Форма.Заголовок = СтруктураШага.ЗаголовокФормы;
	КонецЕсли;
	
КонецПроцедуры

Процедура РазместитьКартинки(Форма, СтруктураНавигацииПомощника)
	
	НомерШагаФормы = Форма.НавигацияНомерШага;
	
	КартинкаОтступ = ?(НомерШагаФормы = 1,
		БиблиотекаКартинок.НавигацияОтступТекущийШаг,
		БиблиотекаКартинок.НавигацияОтступВыполненныйШаг);
	
	СтруктураКартинокНавигации = СтруктураКартинокНавигации();
	
	МассивФорматированныхСтрок = Новый Массив;
	МассивФорматированныхСтрок.Добавить(КартинкаОтступ);
	
	Для НомерШага = 1 По СтруктураНавигацииПомощника.Количество() Цикл
		
		ВыводитьЛинию = (НомерШага <> 1);
		
		// Шаги
		Если НомерШага < НомерШагаФормы Тогда
			ИдентификаторШага = "Выполненный";
		ИначеЕсли НомерШага = НомерШагаФормы Тогда
			ИдентификаторШага = "Текущий";
		Иначе
			ИдентификаторШага = "НеВыполненный";
		КонецЕсли;
		ИмяКартинкиШага = СтрШаблон("Шаг%1", ИдентификаторШага);
		
		// Линия
		ЦветЛинии   = ?(НомерШага <= НомерШагаФормы, "Выполненный", "НеВыполненный");
		РазмерЛинии = ?(НомерШага = НомерШагаФормы ИЛИ НомерШага = НомерШагаФормы + 1, "Текущий", "");
		ИмяЛинии    = СтрШаблон("ЛинияШаг%1%2", ЦветЛинии, РазмерЛинии);
		
		// Ссылка
		ИмяСсылки = ?(НомерШага < НомерШагаФормы, НавигацияПомощниковКлиентСервер.ИмяШага(НомерШага), "");
		
		Если ВыводитьЛинию Тогда
			МассивФорматированныхСтрок.Добавить(СтруктураКартинокНавигации[ИмяЛинии]);
		КонецЕсли;
		МассивФорматированныхСтрок.Добавить(Новый ФорматированнаяСтрока(СтруктураКартинокНавигации[ИмяКартинкиШага],,,,ИмяСсылки));
		
	КонецЦикла;
	
	Форма.Элементы.НавигацияКартинка.Заголовок = Новый ФорматированнаяСтрока(МассивФорматированныхСтрок);
	
КонецПроцедуры

Процедура РазместитьТексты(Форма, СтруктураНавигацииПомощника)
	
	ТекущийНомерШага = Форма.НавигацияНомерШага;
	КоличествоШагов  = СтруктураНавигацииПомощника.Количество();
	
	Для НомерШага = 1 По КоличествоШагов Цикл
		
		СтруктураШага = СтруктураНавигацииПомощника[НавигацияПомощниковКлиентСервер.ИмяШага(НомерШага)];
		
		ИмяСсылки   = ?(НомерШага < ТекущийНомерШага, НавигацияПомощниковКлиентСервер.ИмяШага(НомерШага), "");
		ШрифтТекста = ?(НомерШага = ТекущийНомерШага, ШрифтыСтиля.ШрифтТекущийШагРегистрацииОрганизации, Неопределено);
		ЦветТекста  = ?(НомерШага > ТекущийНомерШага,
			ЦветаСтиля.ЦветНедоступногоТекста, ЦветаСтиля.ЦветШрифтаВыполненныйШагРегистрацииОрганизации);
		
		ЭлементФормы = Форма.Элементы[НавигацияПомощниковКлиентСервер.ИмяШага(НомерШага)];
		ЭлементФормы.Заголовок = Новый ФорматированнаяСтрока(
			СтруктураШага.ТекстНавигации, ШрифтТекста, ЦветТекста, , ИмяСсылки);
		
	КонецЦикла;
	
	//Очистка неиспользуемых шагов навигации
	МаксимальноеЧислоШагов = НавигацияПомощниковКлиентСервер.МаксимальноеЧислоШагов();
	Если КоличествоШагов < МаксимальноеЧислоШагов Тогда
		Для НомерШага = КоличествоШагов + 1 По МаксимальноеЧислоШагов Цикл
			
			ЭлементФормы = Форма.Элементы.Найти(НавигацияПомощниковКлиентСервер.ИмяШага(НомерШага));
			Если ЭлементФормы <> Неопределено Тогда
				ЭлементФормы.Заголовок = "";
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Функция СтруктураКартинокНавигации()

	СтруктураКартинокНавигации = Новый Структура;
	СтруктураКартинокНавигации.Вставить("ЛинияШагВыполненный",          БиблиотекаКартинок.НавигацияЛинияШагВыполненный);
	СтруктураКартинокНавигации.Вставить("ЛинияШагНеВыполненный",        БиблиотекаКартинок.НавигацияЛинияШагНеВыполненный);
	СтруктураКартинокНавигации.Вставить("ЛинияШагВыполненныйТекущий",   БиблиотекаКартинок.НавигацияЛинияШагВыполненныйТекущий);
	СтруктураКартинокНавигации.Вставить("ЛинияШагНеВыполненныйТекущий", БиблиотекаКартинок.НавигацияЛинияШагНеВыполненныйТекущий);
	СтруктураКартинокНавигации.Вставить("ШагВыполненный",               БиблиотекаКартинок.НавигацияШагВыполненный);
	СтруктураКартинокНавигации.Вставить("ШагТекущий",                   БиблиотекаКартинок.НавигацияШагТекущий);
	СтруктураКартинокНавигации.Вставить("ШагНеВыполненный",             БиблиотекаКартинок.НавигацияШагНеВыполненный);
	Возврат СтруктураКартинокНавигации;

КонецФункции

Процедура УправлениеВидимостью(Форма)
	
	ГруппаНавигация = Форма.Элементы.Найти("ГруппаНавигация");
	Если ГруппаНавигация <> Неопределено Тогда
		ГруппаНавигация.Видимость = Истина;
	КонецЕсли;
	
	КомандаНазад = Форма.Элементы.Найти("КомандаНазад");
	Если Форма.НавигацияНомерШага = 1 И КомандаНазад <> Неопределено Тогда
		КомандаНазад.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти