////////////////////////////////////////////////////////////////////////////////
// КонтекстныеПодсказкиБЭДКлиент:  механизм контекстных подсказок.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс 

#Область ОбработчикиНажатий 

// Обрабатывает нажатие кнопки панели контекстных новостей.
//
// Параметры:
//  Форма   - ФормаКлиентскогоПриложения - форма, в которой необходимо обработать нажатие на кнопку панели контекстных новостей;
//  Элемент - ЭлементУправления - элемент управления, на котором произвели нажатие мышкой.
//
Процедура ЭлементУправленияНажатие(Форма, Элемент) Экспорт
	
	Если Элемент.Имя = "ПанельКонтекстныхНовостей_КартинкаВесьСписок" 
			Или Элемент.Имя = "КомандаПоказатьВсеНовости" Тогда 
		ПоказатьВсеКонтекстныеПодсказки(Форма, Элемент);
	ИначеЕсли Элемент.Имя = "ПанельКонтекстныхНовостей_СчетчикНепрочитанных" 
			Или Элемент.Имя = "КомандаПоказатьВсеКонтекстныеНовостиНовости" Тогда 
		ПоказатьПодсказкиНеПопавшиеНаПанельКонтекстныхНовостей(Форма, Элемент);
	ИначеЕсли Элемент.Имя = "ВидимостьПанелиКонтекстныхНовостей" Тогда 
		МодульОбработкаНовостейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбработкаНовостейКлиент");
		МодульОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаКомандыНовости(Форма, Элемент);
		ИзменитьПометкуКнопок(Форма, Элемент);
	Иначе
		МодульОбработкаНовостейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбработкаНовостейКлиент");
		МодульОбработкаНовостейКлиент.ПанельКонтекстныхНовостей_ЭлементПанелиНовостейНажатие(Форма, Элемент);
		Если Элемент.Имя = "ПанельКонтекстныхНовостей_КартинкаЗакрыть" Тогда
			
			ВидимостьПанелиНовостей = Форма.Элементы.ПанельКонтекстныхНовостей.Видимость;
			Если Форма.Элементы.Найти("КнопкаГруппаКонтекстныхПодсказокВидимостьПанелиКонтекстныхНовостей") <> Неопределено Тогда
				Форма.Элементы.КнопкаГруппаКонтекстныхПодсказокВидимостьПанелиКонтекстныхНовостей.Пометка = ВидимостьПанелиНовостей;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// Процедура обрабатывает оповещение, приходящее в форму через обработчик ОбработкаОповещения.
//
// Параметры:
//  Форма        - ФормаКлиентскогоПриложения - форма, в которой необходимо обработать оповещение;
//  ИмяСобытия   - Произвольный - данные обработчика оповещения;
//  Параметр     - Произвольный - данные обработчика оповещения;
//  Источник     - Произвольный - данные обработчика оповещения.
//
Процедура КонтекстныеНовости_ОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник) Экспорт
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.Новости") Тогда
		МодульОбработкаНовостейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбработкаНовостейКлиент");
		МодульОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник); 	
	КонецЕсли;
	
КонецПроцедуры

// Процедура вызывается при открытии формы с контекстными новостями.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, в которой необходимо обработать событие ПриОткрытии.
//
Процедура КонтекстныеНовости_ПриОткрытии(Форма) Экспорт
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.Новости") Тогда
		МодульОбработкаНовостейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбработкаНовостейКлиент");
		МодульОбработкаНовостейКлиент.КонтекстныеНовости_ПриОткрытии(Форма);
		
		ВидимостьПанелиНовостей = Форма.Элементы.ПанельКонтекстныхНовостей.Видимость;
		Если Форма.Элементы.Найти("КнопкаГруппаКонтекстныхПодсказокВидимостьПанелиКонтекстныхНовостей") <> Неопределено Тогда
			Форма.Элементы.КнопкаГруппаКонтекстныхПодсказокВидимостьПанелиКонтекстныхНовостей.Пометка = ВидимостьПанелиНовостей;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура вызывается из подключаемой процедуры показа контекстных новостей для отображения
//  важных и очень важных новостей при открытии формы.
//
// Параметры:
//  Форма                            - ФормаКлиентскогоПриложения - форма, в которой необходимо обработать событие ПриОткрытии;
//  ИдентификаторыСобытийПриОткрытии - Строка, Массив из Строка - идентификаторы событий, по которым необходимо отбирать контекстные новости;
//  НастройкиПолученияНовостей       - Структура, Неопределено - структура с ключами:
//   * ПолучатьКатегорииНовостей     - Булево - если Истина, то в реквизите формы будут также сохраняться категории новостей.
//                                       Это может быть полезно для реализации особенного отбора новостей,
//                                         который невозможно реализовать с помощью регистров сведений ОтборыПоЛентамНовостей*.
//
Процедура КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриОткрытии(Форма, ИдентификаторыСобытийПриОткрытии, НастройкиПолученияНовостей = Неопределено) Экспорт
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.Новости") Тогда
		МодульОбработкаНовостейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбработкаНовостейКлиент");
		МодульОбработкаНовостейКлиент.КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриОткрытии(Форма, ИдентификаторыСобытийПриОткрытии, НастройкиПолученияНовостей);
	КонецЕсли;
	
КонецПроцедуры

// Процедура обрабатывает переход по навигационным ссылкам в элементе ПанельКонтекстныхНовостей.
//
// Параметры:
//  Форма                          - ФормаКлиентскогоПриложения - форма, в которой необходимо обработать событие Нажатие;
//  Элемент                        - ЭлементУправления - элемент управления, на котором произвели нажатие мышкой;
//  ПараметрНавигационнаяСсылка    - Строка - навигационная ссылка;
//  СтандартнаяОбработка           - Булево - признак выполнения стандартной обработки.
//
Процедура ПанельКонтекстныхНовостей_ЭлементПанелиНовостейОбработкаНавигационнойСсылки(Форма, Элемент, ПараметрНавигационнаяСсылка, СтандартнаяОбработка) Экспорт
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.Новости") Тогда
		МодульОбработкаНовостейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбработкаНовостейКлиент");
		МодульОбработкаНовостейКлиент.ПанельКонтекстныхНовостей_ЭлементПанелиНовостейОбработкаНавигационнойСсылки(
		Форма,
		Элемент,
		ПараметрНавигационнаяСсылка,
		СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПоказатьПодсказкиНеПопавшиеНаПанельКонтекстныхНовостей(Форма, Элемент)
	
	СписокНовостей = Новый СписокЗначений;
	
	Для Каждого СтрокаДанныхНовости Из Форма.КешКонтекстныхПодсказок.АктуальныеДляТекущегоКонтекстаПодсказки Цикл
			СписокНовостей.Добавить(СтрокаДанныхНовости.Новость);
	КонецЦикла;
	
	ПоказатьКонтекстныеПодсказки(СписокНовостей, Форма, НСтр("ru='Советы для текущего состояния'"));
	
КонецПроцедуры

Процедура ПоказатьВсеКонтекстныеПодсказки(Форма, Элемент)
	
	СписокНовостей = Новый СписокЗначений;
	
	Для Каждого СтрокаДанныхНовости Из Форма.Новости.Новости Цикл
		СписокНовостей.Добавить(СтрокаДанныхНовости.Новость, , СтрокаДанныхНовости.Прочтена);
	КонецЦикла;
	
	ПоказатьКонтекстныеПодсказки(СписокНовостей, Форма, НСтр("ru='Все советы'"));
	
КонецПроцедуры

Процедура ПоказатьКонтекстныеПодсказки(СписокНовостей, Форма, Заголовок)
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("СписокНовостей", СписокНовостей);
	ПараметрыОткрытияФормы.Вставить("РежимОткрытияОкна", "БлокироватьОкноВладельца");
	ПараметрыОткрытияФормы.Вставить("ЗаголовокФормы", Заголовок);
	ПараметрыОткрытияФормы.Вставить("СкрыватьКолонкуЛентаНовостей", Истина);
	ПараметрыОткрытияФормы.Вставить("СкрыватьКолонкуПодзаголовок", Истина);
	ПараметрыОткрытияФормы.Вставить("СортировкаСпискаНовостей", "Прочтена Возр, ДатаПубликации Убыв");
	ПараметрыОткрытияФормы.Вставить("ПропуститьЗаполнениеНовостями", Истина);
	ПараметрыОткрытияФормы.Вставить("ПоказыватьПанельНавигации", Ложь);
	
	МодульОбработкаНовостейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбработкаНовостейКлиент");
	МодульОбработкаНовостейКлиент.ПоказатьКонтекстныеНовости(Форма,,"",,,ПараметрыОткрытияФормы);

КонецПроцедуры

Процедура ИзменитьПометкуКнопок(Форма, Элемент)
	
	ИмяКоманды = Элемент.Имя;
	
	Для Каждого ЭлементФормы Из Форма.Элементы Цикл
		Если ТипЗнч(ЭлементФормы) = Тип("КнопкаФормы") 
			И ЭлементФормы.ИмяКоманды = ИмяКоманды Тогда 
			
			ЭлементФормы.Пометка = Форма.Элементы.ПанельКонтекстныхНовостей.Видимость;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти