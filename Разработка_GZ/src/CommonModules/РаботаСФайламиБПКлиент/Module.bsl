
#Область ПрограммныйИнтерфейс

// Помещает файл из локальной файловой системы во временное хранилище. Работает в веб- и тонком клиенте.
// Не требуется обязательной установки расширения работы с файлами в веб-клиенте.
//
// Параметры:
//  ОповещениеОЗавершенииЗагрузки - ОписаниеОповещения - По окончанию загрузки файла будет выполнена обработка переданного оповещения.
//    В процедуру обработки результата первым параметром передается структура, описание ключей структуры см. в ОписаниеЗагруженногоФайла().
//    Вторым параметром передается структура ДопПараметры, описание ключей структуры см. в ЗагрузитьФайл().
//  УникальныйИдентификатор - УникальныйИдентификатор - Уникальный идентификатор формы.
//  РасширенияФайла - Строка - Маска, для ограничений загружаемых файлов по расширению, начинается с ".", например "*.xml; *.zip".
//  ЗаголовокФормыВыбора - Строка - Заголовок диалога выбора файла.
//  ПутьКФайлу - Строка - Путь к загружаемому файлу. Если передан этот параметр диалог выбора файла не будет показан.
//
Процедура ЗагрузитьФайл(ОповещениеОЗавершенииЗагрузки, УникальныйИдентификатор, РасширенияФайла = "", ЗаголовокФормыВыбора = "",  ПутьКФайлу = "") Экспорт
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ОповещениеОЗавершенииЗагрузки", ОповещениеОЗавершенииЗагрузки);
	ДопПараметры.Вставить("УникальныйИдентификатор"      , УникальныйИдентификатор);
	ДопПараметры.Вставить("РасширенияФайла"              , Нрег(РасширенияФайла));
	ДопПараметры.Вставить("ЗаголовокФормыВыбора"         , ЗаголовокФормыВыбора);
	
	Если ЗначениеЗаполнено(ПутьКФайлу) Тогда
		ПроверитьПутьКВыбранномуФайлу(ПутьКФайлу, ДопПараметры);
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("УстановкаРасширенияРаботыСФайламиЗавершение", РаботаСФайламиБПКлиент, ДопПараметры);
	ОбщегоНазначенияКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановкаРасширенияРаботыСФайламиЗавершение(РасширениеПодключено, ДопПараметры) Экспорт
	
	Если РасширениеПодключено Тогда
		ЗагрузитьФайлСРасширением(ДопПараметры);
		
	Иначе
		ЗагрузитьФайлБезРасширения(ДопПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗагрузитьФайлБезРасширения(ДопПараметры)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузкаФайлаБезРасширенияЗавершение", РаботаСФайламиБПКлиент, ДопПараметры);
	НачатьПомещениеФайла(ОписаниеОповещения, , , Истина, ДопПараметры.УникальныйИдентификатор);
	
КонецПроцедуры

Процедура ЗагрузкаФайлаБезРасширенияЗавершение(ФайлЗагружен, АдресФайла, ВыбранноеИмяФайла, ДопПараметры) Экспорт
	
	Если НЕ ФайлЗагружен Тогда
		ОписаниеЗагруженногоФайла = ОписаниеЗагруженногоФайла();
		ОписаниеЗагруженногоФайла.ПользовательОтказалсяОтЗагрузки = Истина;
		ОписаниеЗагруженногоФайла.ОписаниеОшибки = НСтр("ru='Файл не получен'");
		ВыполнитьОбработкуОповещения(ДопПараметры.ОповещениеОЗавершенииЗагрузки, ОписаниеЗагруженногоФайла);
		Возврат;
		
	КонецЕсли;
	
	СтруктураПути = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ВыбранноеИмяФайла);
	ДопустимыеРасширенияФайла = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(ДопПараметры.РасширенияФайла);
	
	Если ПустаяСтрока(СтруктураПути.Расширение)
		ИЛИ (ЗначениеЗаполнено(ДопПараметры.РасширенияФайла)
		И ДопустимыеРасширенияФайла.Найти(СтрЗаменить(СтруктураПути.Расширение, ".", "")) = Неопределено) Тогда
		ТекстВопроса = НСтр("ru='Необходимо выбрать файл с расширением %1.'");
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, ДопПараметры.РасширенияФайла);
		
		ПредложитьПовторитьВыборФайлаБезРасширения(ТекстВопроса, ДопПараметры);
		Возврат;
		
	КонецЕсли;
	
	ОписаниеЗагруженногоФайла = ОписаниеЗагруженногоФайла();
	ОписаниеЗагруженногоФайла.ФайлЗагружен = Истина;
	ОписаниеЗагруженногоФайла.АдресФайла   = АдресФайла;
	
	ВыполнитьОбработкуОповещения(ДопПараметры.ОповещениеОЗавершенииЗагрузки, ОписаниеЗагруженногоФайла);
	
КонецПроцедуры

Процедура ЗагрузитьФайлСРасширением(ДопПараметры)
	
	Фильтр = "(*.*)|*.*";
	РасширенияФайла = ДопПараметры.РасширенияФайла;
	Если ЗначениеЗаполнено(РасширенияФайла) Тогда
		Фильтр = "(" + РасширенияФайла +")|" + РасширенияФайла;
	КонецЕсли;
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Фильтр                      = Фильтр;
	ДиалогВыбораФайла.МножественныйВыбор          = Ложь;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	Если ЗначениеЗаполнено(ДопПараметры.ЗаголовокФормыВыбора) Тогда
		ДиалогВыбораФайла.Заголовок = ДопПараметры.ЗаголовокФормыВыбора;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборФайлаЗавершение", РаботаСФайламиБПКлиент, ДопПараметры);
	
	ДиалогВыбораФайла.Показать(ОписаниеОповещения);
	
	
КонецПроцедуры

Процедура ВыборФайлаЗавершение(ВыбранныеФайлы, ДопПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		ОписаниеЗагруженногоФайла = ОписаниеЗагруженногоФайла();
		ОписаниеЗагруженногоФайла.ПользовательОтказалсяОтЗагрузки = Истина;
		ОписаниеЗагруженногоФайла.ОписаниеОшибки = НСтр("ru='Файл не получен'");
		ВыполнитьОбработкуОповещения(ДопПараметры.ОповещениеОЗавершенииЗагрузки, ОписаниеЗагруженногоФайла);
		Возврат;
		
	КонецЕсли;
	
	ПроверитьПутьКВыбранномуФайлу(ВыбранныеФайлы[0], ДопПараметры)
	
КонецПроцедуры

Процедура ПроверитьПутьКВыбранномуФайлу(ПутьКФайлу, ДопПараметры)
	
	СтруктураПути = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ПутьКФайлу);
	РасширениеФайла = НРег(СтрЗаменить(СтруктураПути.Расширение, ".", ""));
	ДопустимыеРасширенияФайла = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(НРег(ДопПараметры.РасширенияФайла));
	Если ДопустимыеРасширенияФайла.Найти(РасширениеФайла) = Неопределено Тогда

		ТекстВопроса = НСтр("ru='Необходимо выбрать файл с расширением %1.'");
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, ДопПараметры.РасширенияФайла);
		
		ПредложитьПовторитьВыборФайла(ТекстВопроса, ДопПараметры);
		Возврат;
		
	КонецЕсли;
	
	ВыбранныйФайл = Новый Файл(ПутьКФайлу);
	
	ДопПараметры.Вставить("Файл", ВыбранныйФайл);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверкаСуществованияФайлаЗавершение",
		РаботаСФайламиБПКлиент, ДопПараметры);
	ВыбранныйФайл.НачатьПроверкуСуществования(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ПроверкаСуществованияФайлаЗавершение(ФайлСуществует, ДопПараметры) Экспорт
	
	Если НЕ ФайлСуществует Тогда
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Файл не существует: ""%1""'"),
			ДопПараметры.Файл.ПолноеИмя);
			
		ПредложитьПовторитьВыборФайла(ТекстВопроса, ДопПараметры);
		Возврат;
		
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверкаЭтоФайлЗавершение", РаботаСФайламиБПКлиент, ДопПараметры);
	ДопПараметры.Файл.НачатьПроверкуЭтоФайл(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ПроверкаЭтоФайлЗавершение(ЭтоФайл, ДопПараметры) Экспорт
	
	Если НЕ ЭтоФайл Тогда
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Указан каталог, а не файл: ""%1""'"),
			ДопПараметры.Файл.ПолноеИмя);
		
		ПредложитьПовторитьВыборФайла(ТекстВопроса, ДопПараметры);
		Возврат;
		
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузкаФайлаЗавершение", РаботаСФайламиБПКлиент, ДопПараметры);
	ПомещаемыеФайлы    = Новый Массив;
	ОписаниеФайла      = Новый ОписаниеПередаваемогоФайла(ДопПараметры.Файл.ПолноеИмя);
	ПомещаемыеФайлы.Добавить(ОписаниеФайла);
	НачатьПомещениеФайлов(ОписаниеОповещения, ПомещаемыеФайлы, Ложь, ДопПараметры.УникальныйИдентификатор);
	
КонецПроцедуры

Процедура ЗагрузкаФайлаЗавершение(ЗагруженныеФайлы, ДопПараметры) Экспорт
	
	ОписаниеЗагруженногоФайла = ОписаниеЗагруженногоФайла();
	
	Если ЗагруженныеФайлы = Неопределено Тогда
		ОписаниеЗагруженногоФайла.ПользовательОтказалсяОтЗагрузки = Истина;
		ОписаниеЗагруженногоФайла.ОписаниеОшибки = НСтр("ru='Файл не получен'");
		ВыполнитьОбработкуОповещения(ДопПараметры.ОповещениеОЗавершенииЗагрузки, ОписаниеЗагруженногоФайла);
		
	Иначе
		ЗагруженныйФайл = ЗагруженныеФайлы[0];
		ОписаниеЗагруженногоФайла.ФайлЗагружен = Истина;
		ОписаниеЗагруженногоФайла.АдресФайла   = ЗагруженныйФайл.Хранение;
		ОписаниеЗагруженногоФайла.ПутьКФайлу   = ЗагруженныйФайл.Имя;
	
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ДопПараметры.ОповещениеОЗавершенииЗагрузки, ОписаниеЗагруженногоФайла);
	
КонецПроцедуры

Процедура ПредложитьПовторитьВыборФайлаБезРасширения(ТекстВопроса, ДопПараметры)
	
	Кнопки = Новый СписокЗначений;
	Кнопки.Добавить(КодВозвратаДиалога.Повторить, НСтр("ru='Выбрать другой файл'"));
	Кнопки.Добавить(КодВозвратаДиалога.Отмена);
	Обработчик = Новый ОписаниеОповещения("ПовторныйВыборФайлаБезРасширенияЗавершение", РаботаСФайламиБПКлиент, ДопПараметры);
	ПоказатьВопрос(Обработчик, ТекстВопроса, Кнопки);
	
КонецПроцедуры

Процедура ПовторныйВыборФайлаБезРасширенияЗавершение(ОтветПользователя, ДопПараметры) Экспорт
	
	Если ОтветПользователя = КодВозвратаДиалога.Повторить Тогда
		ЗагрузитьФайлБезРасширения(ДопПараметры);
		
	Иначе
		ОписаниеЗагруженногоФайла = ОписаниеЗагруженногоФайла();
		ОписаниеЗагруженногоФайла.ПользовательОтказалсяОтЗагрузки = Истина;
		ВыполнитьОбработкуОповещения(ДопПараметры.ОповещениеОЗавершенииЗагрузки, ОписаниеЗагруженногоФайла);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПредложитьПовторитьВыборФайла(ТекстВопроса, ДопПараметры)
	
	Кнопки = Новый СписокЗначений;
	Кнопки.Добавить(КодВозвратаДиалога.Повторить, НСтр("ru='Выбрать другой файл'"));
	Кнопки.Добавить(КодВозвратаДиалога.Отмена);
	Обработчик = Новый ОписаниеОповещения("ПовторныйВыборФайлаЗавершение", РаботаСФайламиБПКлиент, ДопПараметры);
	ПоказатьВопрос(Обработчик, ТекстВопроса, Кнопки);
	
КонецПроцедуры

Процедура ПовторныйВыборФайлаЗавершение(ОтветПользователя, ДопПараметры) Экспорт
	
	Если ОтветПользователя = КодВозвратаДиалога.Повторить Тогда
		ЗагрузитьФайлСРасширением(ДопПараметры);
		
	Иначе
		ОписаниеЗагруженногоФайла = ОписаниеЗагруженногоФайла();
		ОписаниеЗагруженногоФайла.ПользовательОтказалсяОтЗагрузки = Истина;
		ВыполнитьОбработкуОповещения(ДопПараметры.ОповещениеОЗавершенииЗагрузки, ОписаниеЗагруженногоФайла);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ОписаниеЗагруженногоФайла()
	
	ОписаниеЗагруженногоФайла = Новый Структура;
	ОписаниеЗагруженногоФайла.Вставить("ФайлЗагружен"                   , Ложь);
	ОписаниеЗагруженногоФайла.Вставить("ПользовательОтказалсяОтЗагрузки", Ложь);
	ОписаниеЗагруженногоФайла.Вставить("АдресФайла"                     , Неопределено);
	ОписаниеЗагруженногоФайла.Вставить("ПутьКФайлу"                     , Неопределено);
	ОписаниеЗагруженногоФайла.Вставить("ОписаниеОшибки"                 , Неопределено);
	
	Возврат ОписаниеЗагруженногоФайла;
	
КонецФункции

#КонецОбласти