
#Область ПрограммныйИнтерфейс

// Возвращает описание команды по ее идентификатору.
//
// Параметры:
//  ИмяКоманды - Строка - идентификатор команды.
//  АдресКомандОтправки - Строка - адрес описания команд отправки во временном хранилище.
//
// Возвращаемое значение:
//  Структура - строка таблицы из функции ОтправкаПочтовыхСообщений.КомандыОтправки, преобразованная в структуру.
//
Функция ОписаниеКомандыОтправки(ИмяКоманды, АдресКомандОтправки) Экспорт
	
	КомандыОтправки = ПолучитьИзВременногоХранилища(АдресКомандОтправки);
	ОписаниеКоманды = КомандыОтправки.Найти(ИмяКоманды, "ИмяКоманды");
	
	Если ЗначениеЗаполнено(ОписаниеКоманды) Тогда
		Возврат ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ОписаниеКоманды);
	КонецЕсли;
	
КонецФункции

// Формирует структуру параметров электронного письма для отправки документа.
//
// Параметры:
//  ОписаниеКоманд - Массив - содержит структуры с описанием команд отправки.
//   Описание структуры см. ОтправкаПочтовыхСообщений.КомандыОтправки
//  ЕстьОшибки - Булево - признак возникновения ошибки при формировании электронного письма.
//  ДополнительныеПараметры - Структура - дополнительные параметры для сохранения печатных форм:
//   * УпаковатьВАрхив - Булево - упаковать печатные формы в архив.
//   * ФорматыСохранения - Массив - содержит формат сохранения файлов см. ТипФайлаТабличногоДокумента.
//
// Возвращаемое значение:
//  Структура - Структура параметров для передачи в функцию РаботаСПочтовымиСообщениямиКлиент.СоздатьНовоеПисьмо.
//
Функция ПараметрыЭлектронногоПисьма(ОписаниеКоманд, ЕстьОшибки, ДополнительныеПараметры = Неопределено) Экспорт
	
	ПечатныеФормы = Новый Массив;
	
	Для Каждого ОписаниеКоманды Из ОписаниеКоманд Цикл
		
		Если ЗначениеЗаполнено(ОписаниеКоманды.Обработчик) Тогда
			ИмяОбработчика = ОписаниеКоманды.Обработчик;
			Обработчик = ИмяОбработчика + "(ОписаниеКоманды, ЕстьОшибки)";
			ПечатныеФормыОбъекта = Вычислить(Обработчик);
		ИначеЕсли ОписаниеКоманды.МенеджерПечати = "СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки" Тогда
			ПечатныеФормыОбъекта = ОтправкаПочтовыхСообщений.ПечатныеФормыИзВнешнегоИсточника(ОписаниеКоманды);
		Иначе
			ПечатныеФормыОбъекта = ОтправкаПочтовыхСообщений.ПечатныеФормы(ОписаниеКоманды);
		КонецЕсли;
		
		Если ПечатныеФормыОбъекта <> Неопределено Тогда
			ПечатныеФормы.Добавить(ПечатныеФормыОбъекта);
		КонецЕсли;
		
	КонецЦикла;
	
	ПараметрыПисьма = ОтправкаПочтовыхСообщений.ПараметрыЭлектронногоПисьма(ПечатныеФормы, ОписаниеКоманды.МенеджерПечати,
		ДополнительныеПараметры);
	
	Возврат ПараметрыПисьма;
	
КонецФункции

// Формирует структуру параметров электронного письма для отправки отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - см.ОтправкаПочтовыхСообщенийКлиент.ОтправитьОтчет.
//  ДополнительныеПараметры - Структура - см.ОтправкаПочтовыхСообщенийКлиент.ОтправитьОтчет.
//
// Возвращаемое значение:
//  Структура - Структура параметров для передачи в функцию РаботаСПочтовымиСообщениямиКлиент.СоздатьНовоеПисьмо.
//
Функция ПараметрыЭлектронногоПисьмаДляОтчетов(ПараметрыОтчета, ДополнительныеПараметры = Неопределено) Экспорт
	
	ПараметрыПисьма = ОтправкаПочтовыхСообщений.ПараметрыЭлектронногоПисьмаДляОтчетов(ПараметрыОтчета,
		ДополнительныеПараметры);
	
	Возврат ПараметрыПисьма;
	
КонецФункции

// Формирует структуру параметров электронного письма по умолчанию.
// В параметрах будет использованы данные из персональных настроек электронной почты:
// учетная запись, подпись, адреса получателей скрытых копий.
//
// Возвращаемое значение:
//  Структура - состав структуры см. ОтправкаПочтовыхСообщений.НовыеПараметрыПисьма.
//
Функция ПараметрыПисьмаПоУмолчанию() Экспорт
	
	Результат = ОтправкаПочтовыхСообщений.НовыеПараметрыПисьма();
	
	Результат.Текст = ОтправкаПочтовыхСообщений.ПодготовитьТекстПисьма("");
	ОтправкаПочтовыхСообщений.ДополнитьПараметрыПисьма(Результат);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
