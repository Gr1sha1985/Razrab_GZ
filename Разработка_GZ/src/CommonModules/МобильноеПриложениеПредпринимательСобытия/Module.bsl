
Процедура ПроверитьИзменениеДатыДокумента(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Если ПроведениеСервер.ГрупповоеПерепроведение(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	УзлыОбмена = ВыбратьУзлыРегистрацииИзменений(Источник.ОбменДанными.Отправитель);
	Если УзлыОбмена.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Источник.Ссылка) Тогда
		Источник.ДополнительныеСвойства.Вставить("ДатаДоЗаписи", Источник.Ссылка.Дата);
		
		Если ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			Источник.ДополнительныеСвойства.Вставить("ПроверкаДоЗаписи", ПроверитьРеализацию(Источник.Ссылка));
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗарегистрироватьИзменениеДокумента(Источник, Отказ) Экспорт
	
	Если ПроведениеСервер.ГрупповоеПерепроведение(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	УзлыОбмена = ВыбратьУзлыРегистрацииИзменений(Источник.ОбменДанными.Отправитель);
	Если УзлыОбмена.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.СчетФактураВыданный") Тогда
		Если Источник.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию Тогда
			Для Каждого ДокументРеализации Из Источник.ДокументыОснования Цикл
				Если ТипЗнч(ДокументРеализации.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
					ОбъектДляРегистрации = ДокументРеализации.ДокументОснование.ПолучитьОбъект();
					Если ОбъектДляРегистрации <> Неопределено Тогда
						ЗарегистрироватьИзменениеДокумента(ОбъектДляРегистрации, Отказ);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
		Если НЕ ПроверитьРеализацию(Источник) Тогда
			Если Источник.ДополнительныеСвойства.Свойство("ПроверкаДоЗаписи") И 
				Источник.ДополнительныеСвойства.ПроверкаДоЗаписи Тогда
				//Если раньше документ удовлетворял требованиям обмена, надо зарегистрровать его удаление
				ЗарегистрироватьУдаление(Источник, Отказ);
			КонецЕсли;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Для каждого УзелОбмена Из УзлыОбмена Цикл
		Если Источник.Дата >= УзелОбмена.ДатаНачалаХраненияДанных ИЛИ
			(Источник.ДополнительныеСвойства.Свойство("ДатаДоЗаписи") И 
			Источник.ДополнительныеСвойства.ДатаДоЗаписи > УзелОбмена.ДатаНачалаХраненияДанных) Тогда
			
			ПланыОбмена.ЗарегистрироватьИзменения(УзелОбмена, Источник);
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗарегистрироватьИзменениеСправочника(Источник, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.БанковскиеСчета") Тогда
		Если ЗначениеЗаполнено(Источник.Владелец) И ТипЗнч(Источник.Владелец) <> Тип("СправочникСсылка.Организации") Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.Банки") ИЛИ
		ТипЗнч(Источник) = Тип("СправочникОбъект.Склады") Тогда
		Если Источник.ЭтоГруппа Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Если ТипЗнч(Источник) = Тип("СправочникОбъект.Банки") Тогда
		// Если в банке нет счетов наших организаций, то его не требуется передавать в мобильное приложение.
		Если НЕ ЕстьСчетаОрганизацийВБанке(Источник.Ссылка) Тогда
			Возврат;
		КонецЕсли;
    КонецЕсли;

	УзлыОбмена = ВыбратьУзлыРегистрацииИзменений(Источник.ОбменДанными.Отправитель);
	Если УзлыОбмена.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПланыОбмена.ЗарегистрироватьИзменения(УзлыОбмена, Источник);
	
	// При изменении банковского счета нашей организации регистрируем к обмену еще и сам банк.
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.БанковскиеСчета") Тогда
		Если ЗначениеЗаполнено(Источник.Банк) Тогда
			ПланыОбмена.ЗарегистрироватьИзменения(УзлыОбмена, Источник.Банк);
		КонецЕсли;
		Если ЗначениеЗаполнено(Источник.БанкДляРасчетов) Тогда
			ПланыОбмена.ЗарегистрироватьИзменения(УзлыОбмена, Источник.БанкДляРасчетов);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗарегистрироватьИзменениеНабораЗаписей(Источник, Отказ, Замещение) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	УзлыОбмена = ВыбратьУзлыРегистрацииИзменений(Источник.ОбменДанными.Отправитель);
	Если УзлыОбмена.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("РегистрСведенийНаборЗаписей.СтатусыДокументов") Тогда
		Для каждого Запись Из Источник Цикл
			Если ТипЗнч(Запись.Документ) = Тип("ДокументСсылка.СчетНаОплатуПокупателю") Тогда
				ПланыОбмена.ЗарегистрироватьИзменения(УзлыОбмена, Запись.Документ);
			ИначеЕсли ТипЗнч(Запись.Документ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") 
				И ПроверитьРеализацию(Запись.Документ) Тогда
				ПланыОбмена.ЗарегистрироватьИзменения(УзлыОбмена, Запись.Документ);			
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗарегистрироватьУдаление(Источник, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	УзлыОбмена = ВыбратьУзлыРегистрацииИзменений(Источник.ОбменДанными.Отправитель);
	Если УзлыОбмена.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Данные = Новый УдалениеОбъекта(Источник.Ссылка);
	ПланыОбмена.ЗарегистрироватьИзменения(УзлыОбмена, Данные);
	
КонецПроцедуры

Функция ВыбратьУзлыРегистрацииИзменений(УзелОтправитель)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Выборка = ПланыОбмена.МобильноеПриложениеПредприниматель.Выбрать();
	
	ЦентральныйУзел = ПланыОбмена.МобильноеПриложениеПредприниматель.ЭтотУзел();
	
	МассивУзлов = Новый Массив;
	Пока Выборка.Следующий() Цикл
		Если НЕ Выборка.Ссылка = ЦентральныйУзел И НЕ Выборка.Ссылка = УзелОтправитель Тогда
			МассивУзлов.Добавить(Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивУзлов;
	
КонецФункции

Функция ПроверитьРеализацию(Ссылка)
	
	ПроверитьВидОперации = Ложь;
	
	ВидОперации = Ссылка.ВидОперации;
	Если ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ПродажаКомиссия ИЛИ
		ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Товары ИЛИ
		ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Услуги Тогда
		
		ПроверитьВидОперации = Истина;
	КонецЕсли;

	ПроверитьВидДоговора = Ложь;
	ДоговорКонтрагента = Ссылка.ДоговорКонтрагента;
	Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДоговорКонтрагента, "ВидДоговора");
		
		Если ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем Тогда
			ПроверитьВидДоговора = Истина;
		КонецЕсли;	
	КонецЕсли;
	
	Возврат (ПроверитьВидОперации И ПроверитьВидДоговора);
	
КонецФункции

Функция ЕстьСчетаОрганизацийВБанке(Банк)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Банк", Банк);
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	БанковскиеСчета.Ссылка
	|ИЗ
	|	Справочник.БанковскиеСчета КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.Банк = &Банк
	|	И БанковскиеСчета.Владелец ССЫЛКА Справочник.Организации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	БанковскиеСчета.Ссылка
	|ИЗ
	|	Справочник.БанковскиеСчета КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.БанкДляРасчетов = &Банк
	|	И БанковскиеСчета.Владелец ССЫЛКА Справочник.Организации";
	
	Возврат НЕ Запрос.Выполнить().Пустой();

КонецФункции
