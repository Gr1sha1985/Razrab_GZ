#Область СлужебныйПрограммныйИнтерфейс

Процедура ОткрытьЗаявлениеСотрудникаПоОснованию(Основание, ИдентификаторСтроки = Неопределено, Заявление = Неопределено) Экспорт
	Если ЗначениеЗаполнено(Заявление) Тогда
		Параметры = Новый Структура("Ключ", Заявление);
		Уникальность = Строка(Заявление.УникальныйИдентификатор());
	ИначеЕсли ЗначениеЗаполнено(Основание) Тогда
		Параметры = Новый Структура("Основание, ИдентификаторСтроки", Основание, ИдентификаторСтроки);
		Уникальность = Строка(Основание.УникальныйИдентификатор());
		Если ИдентификаторСтроки <> Неопределено Тогда
			Уникальность = Уникальность +"/"+ Строка(ИдентификаторСтроки);
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Документ.ЗаявлениеСотрудникаНаВыплатуПособия.ФормаОбъекта", Параметры, , Уникальность);
КонецПроцедуры

Процедура ОткрытьУведомлениеОПрекращенииПособия(Основание) Экспорт
	Если ЗначениеЗаполнено(Основание) Тогда
		Параметры = Новый Структура("Основание", Основание);
		Уникальность = Строка(Основание.УникальныйИдентификатор());
	Иначе
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Документ.УведомлениеОПрекращенииОтпускаПоУходуЗаРебенком.ФормаОбъекта", Параметры, , Уникальность);
КонецПроцедуры

Процедура СохранитьВФайл(Реестры, Форма = Неопределено, УникальныйИдентификатор = Неопределено) Экспорт
	Контекст = Новый Структура("Реестры, Форма, УникальныйИдентификатор");
	Контекст.Реестры = Реестры;
	Если ТипЗнч(Форма) = Тип("ФормаКлиентскогоПриложения") Тогда
		Контекст.Форма                   = Форма;
		Контекст.УникальныйИдентификатор = Форма.УникальныйИдентификатор;
	Иначе
		Контекст.Форма                   = Неопределено;
		Контекст.УникальныйИдентификатор = УникальныйИдентификатор;
	КонецЕсли;
	
	РезультатПроверки = ПрямыеВыплатыПособийСоциальногоСтрахованияВызовСервера.ПроверитьРеестры(Реестры);
	Контекст.Вставить("Сообщения", РезультатПроверки.Сообщения);
	
	КоличествоДокументовСОшибками = РезультатПроверки.ДокументыСОшибками.Количество();
	Если КоличествоДокументовСОшибками = 0 Тогда
		// Нет ошибок. Выгрузка файлов.
		СохранитьРеестрыВФайлы(Контекст);
	Иначе
		// Есть ошибки. Надо спросить что делать: Показать ошибки, продолжить выгрузку.
		Обработчик = Новый ОписаниеОповещения("ПослеЗакрытияДиалогаЕстьОшибки", ЭтотОбъект, Контекст);
		
		Если КоличествоДокументовСОшибками = 1 Тогда
			ТекстВопроса = СтрШаблон(
				НСтр("ru = 'В %1 обнаружены ошибки (%2).'"),
				РезультатПроверки.ДокументыСОшибками[0],
				РезультатПроверки.Сообщения.Количество());
		Иначе
			ТекстВопроса = СтрШаблон(
				НСтр("ru = 'В документах (%1) обнаружены ошибки (%2).'"),
				КоличествоДокументовСОшибками,
				РезультатПроверки.Сообщения.Количество());
		КонецЕсли;
		ТекстВопроса = ТекстВопроса + Символы.ПС + НСтр("ru = 'Продолжить (не рекомендуется)?'");
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(ИдентификаторКнопки_ПоказатьОшибки(), НСтр("ru = 'Показать ошибки'"));
		Кнопки.Добавить(ИдентификаторКнопки_Продолжить(), НСтр("ru = 'Сохранить в файл (не рекомендуется)'"));
		
		ПараметрыВопроса = СтандартныеПодсистемыКлиент.ПараметрыВопросаПользователю();
		ПараметрыВопроса.Заголовок = НСтр("ru = 'Предупреждение'");
		ПараметрыВопроса.ПредлагатьБольшеНеЗадаватьЭтотВопрос = Ложь;
		ПараметрыВопроса.Картинка = БиблиотекаКартинок.Предупреждение32;
		
		СтандартныеПодсистемыКлиент.ПоказатьВопросПользователю(Обработчик, ТекстВопроса, Кнопки, ПараметрыВопроса);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СохранитьВФайл

Процедура ПослеЗакрытияДиалогаЕстьОшибки(РезультатДиалога, Контекст) Экспорт
	ИдентификаторКнопки = ?(РезультатДиалога = Неопределено, Неопределено, РезультатДиалога.Значение);
	
	Если ИдентификаторКнопки = ИдентификаторКнопки_Продолжить() Тогда
		
		СохранитьРеестрыВФайлы(Контекст);
		
	ИначеЕсли ИдентификаторКнопки = ИдентификаторКнопки_ПоказатьОшибки() Тогда
		
		Если ЭтоФормаОбъекта(Контекст.Форма) Тогда
			// В форме объекта требуется дополнительная привязка сообщений к объекту и реквизитам.
			Контекст.Форма.ВывестиСообщенияПользователю(Контекст.Сообщения);
		Иначе
			// В формах списков и журналов требуется уточнение представление объекта.
			Для Каждого Сообщение Из Контекст.Сообщения Цикл
				Сообщение.Текст = Строка(Сообщение.КлючДанных) + ": " + Сообщение.Текст;
				Сообщение.Сообщить();
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

Процедура СохранитьРеестрыВФайлы(Контекст)
	Обработчик = Новый ОписаниеОповещения("ПослеСохраненияФайла", ЭтотОбъект);
	СохраняемыеФайлы = ПрямыеВыплатыПособийСоциальногоСтрахованияВызовСервера.ФайлыРеестровПрямыхВыплат(Контекст.Реестры, Контекст.УникальныйИдентификатор);
	
	Если СохраняемыеФайлы.Количество() = 1 Тогда
		
		СохраняемыйФайл = СохраняемыеФайлы[0];
		
		ПараметрыСохранения = ФайловаяСистемаКлиент.ПараметрыСохраненияФайла();
		ПараметрыСохранения.Диалог.Заголовок = НСтр("ru = 'Выберите файл для сохранения реестра прямых выплат'");
		ПараметрыСохранения.Диалог.Фильтр    = НСтр("ru = 'Файлы XML (*.xml)|*.xml|Все файлы (*.*)|*'");
		ПараметрыСохранения.ТекстПредложения = НСтр("ru = 'Для выгрузки реестра рекомендуется установить расширение для веб-клиента 1С:Предприятие.'");
		
		ФайловаяСистемаКлиент.СохранитьФайл(Обработчик, СохраняемыйФайл.Хранение, СохраняемыйФайл.Имя, ПараметрыСохранения);
		
	Иначе
		
		ПараметрыСохранения = ФайловаяСистемаКлиент.ПараметрыСохраненияФайлов();
		ПараметрыСохранения.Диалог.Заголовок = НСтр("ru = 'Каталог для сохранения реестров прямых выплат'");
		ПараметрыСохранения.ТекстПредложения = НСтр("ru = 'Для выгрузки реестров рекомендуется установить расширение для веб-клиента 1С:Предприятие.'");
		
		ФайловаяСистемаКлиент.СохранитьФайлы(Обработчик, СохраняемыеФайлы, ПараметрыСохранения);
		
	КонецЕсли;
КонецПроцедуры

Процедура ПослеСохраненияФайла(ПолученныеФайлы, ПустойПараметр) Экспорт
	Если Не ЗначениеЗаполнено(ПолученныеФайлы) Тогда
		Возврат;
	КонецЕсли;
	
	ПолноеИмя = ПолученныеФайлы[0].ПолноеИмя;
	Если ПустаяСтрока(ПолноеИмя) Тогда
		Обработчик = Неопределено;
	Иначе
		Обработчик = Новый ОписаниеОповещения("ОткрытьПроводник", ФайловаяСистемаКлиент, ПолноеИмя);
	КонецЕсли;
	
	Количество = ПолученныеФайлы.Количество();
	Если Количество > 1 Тогда
		Заголовок = Неопределено;
		Текст = СтрШаблон(НСтр("ru = 'Файлы (%1) сохранены'"), Количество);
	Иначе
		Заголовок = НСтр("ru = 'Файл сохранен'");
		Текст = ПолученныеФайлы[0].Имя;
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(Заголовок, Обработчик, Текст, БиблиотекаКартинок.Успешно32);
КонецПроцедуры

Функция ИдентификаторКнопки_ПоказатьОшибки()
	Возврат 1;
КонецФункции

Функция ИдентификаторКнопки_Продолжить()
	Возврат 2;
КонецФункции

Функция ЭтоФормаОбъекта(Форма)
	Если Форма = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	МассивИмен = СтрРазделить(Форма.ИмяФормы, ".");
	ИмяФормы = МассивИмен[МассивИмен.ВГраница()];
	Возврат СтрСравнить(ИмяФормы, "ФормаОбъекта") = 0
		Или СтрСравнить(ИмяФормы, "ФормаДокумента") = 0;
КонецФункции

#КонецОбласти

#КонецОбласти

