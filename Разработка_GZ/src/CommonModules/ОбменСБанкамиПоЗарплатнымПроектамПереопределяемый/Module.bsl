////////////////////////////////////////////////////////////////////////////////
// Подсистема "Обмен с банками по зарплатным проектам".
// Модуль предназначен для размещения переопределяемых процедур подсистемы.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область РаботаСПлатежнымДокументом

// Позволяет определить метаданные платежного документа.
//
// Параметры:
//		МетаданныеДокумента - ОбъектМетаданных - Метаданные платежного документа.
//
// Пример:
//		МетаданныеДокумента = Метаданные.Документы.ПлатежноеПоручение;
//
Процедура ЗаполнитьМетаданныеПлатежногоДокументаПеречисленияЗарплаты(МетаданныеДокумента) Экспорт
	
КонецПроцедуры

// Возвращает ведомости платежного документ.
//
// Параметры:
//		ПлатежныйДокумент    - ДокументСсылка - платежный документ, ведомости которого требуется получить.
//		МассивВедомостей     - Массив - ведомости платежного документа.
//		СтандартнаяОбработка - Булево - Ложь, если установлено переопределение массива ведомостей.
//
Процедура ВедомостиПлатежногоДокументаПеречисленияЗарплаты(ПлатежныйДокумент, МассивВедомостей, СтандартнаяОбработка = Истина) Экспорт
	
КонецПроцедуры

// Позволяет дополнить платежный документ массивом ведомостей.
//
// Параметры:
//		ПлатежныйДокумент    - ДокументСсылка - платежный документ, в который требуется добавить ведомости.
//		МассивВедомостей     - Массив         - добавляемые ведомости в банк.
//		СтандартнаяОбработка - Булево - Ложь, если установлено переопределение дополнения ведомостей.
//
Процедура ДополнитьПлатежныйДокумент(ПлатежныйДокумент, МассивВедомостей, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Позволяет переопределить действия для обработчика ПередЗаписью
//
// Параметры:
//		Источник             - ДокументОбъект - платежный документ
//		Отказ                - Булево - Признак отказа от записи. 
//		СтандартнаяОбработка - Булево - Требуется установить Ложь, если установлено переопределение действий.
//
Процедура ПередЗаписьюПлатежногоДокументаПеречисленияЗарплаты(Источник, Отказ, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

// Позволяет переопределить действия для обработчика ПриЗаписи
//
// Параметры:
//		Источник             - ДокументОбъект - платежный документ
//		Отказ                - Булево - Признак отказа от записи. 
//		СтандартнаяОбработка - Булево - Требуется установить Ложь, если установлено переопределение действий.
//
Процедура ПриЗаписиПлатежногоДокументаПеречисленияЗарплаты(Источник, Отказ, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

// Позволяет переопределить номер реестра платежного документа
//
// Параметры:
//		ПлатежныйДокумент - ДокументСсылка - Платежный документ.
//		НомерРеестра      - Строка         - Номер реестра файла, выгружаемого в банк.
//
Процедура ЗаполнитьНомерРеестраПлатежногоДокумента(ПлатежныйДокумент, НомерРеестра) Экспорт
	
КонецПроцедуры

// Позволяет отключить возможность передачи реестров на зачисление зарплаты по зарплатным проектам.
// Предназначен для случаев, когда передача реестров осуществляется специализированными документами,
// и универсальный инструмент ввода не требуется.
//
// Параметры:
//  ДоступностьПередачиВБанк - Булево - возможность передачи реестров, по умолчанию Истина.
//
Процедура ОпределитьДоступностьПередачиВБанкРеестровНаЗачислениеЗарплаты(ДоступностьПередачиВБанк) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеФайлаОбмена

// Позволяет переопределить адрес временного хранилища, в котором хранится передаваемый файл обмена с банками.
//	В методе необходимо сформировать собственный файл для передачи в банк и поместить его во временное
//	хранилище, при этом формирование файла по стандарту http://v8.1c.ru/edi/edi_stnd/109 не будет произведено.
//	Если для обмена используется xml-файл, но с отличной от стандарта структурой, то в данной процедуре необходимо
//	переопределить: КорневыеСвойства, СоответствиеПолей, ОбязательныеПоля, СоответствиеПреобразованияЗначений.
//	Если не хватает выбранных из документа данных, то необходимо переопределить коллекции: ДанныеСтрокДокумента,
//	ДанныеСтрокДокумента.
//
// 	Параметры:
// 		АдресФайла           - Строка - адрес временного хранилища записываемого файла.
// 		ДанныеШапкиДокумента - Структура - поля шапки документа, по которому формируется файл.
// 		ДанныеСтрокДокумента - Массив    - структуры со строками документа, по которому формируется файл.
// 		КорневыеСвойства     - Соответствие - корневые свойства формируемого файла, 
// 		                                      см. ОбменСБанкамиПоЗарплатнымПроектам.КорневыеСвойства.
// 		СоответствиеПолей    - Соответствие - соответствие между полями формата и полями выгружаемой коллекции,
// 		                                      см. ОбменСБанкамиПоЗарплатнымПроектам.СоответствиеПолейФайла.
// 		ОбязательныеПоля     - Массив       - обязательных для заполнения полей файла,
// 		                                      см. ОбменСБанкамиПоЗарплатнымПроектам.ОбязательныеПоляФайла.
// 		СоответствиеПреобразованияЗначений  - Соответствие - соответствие значений для преобразования,
// 		                                      см. ОбменСБанкамиПоЗарплатнымПроектам.СоответствиеПреобразованияЗначений.
//
Процедура ОпределитьАдресФайлаОбменаСБанкамиПоЗарплатнымПроектам(АдресФайла, ДанныеШапкиДокумента, ДанныеСтрокДокумента, КорневыеСвойства,
		СоответствиеПолей, ОбязательныеПоля, СоответствиеПреобразованияЗначений) Экспорт
	
КонецПроцедуры

// Позволяет переопределить имя файла обмена с банком.
// 
// Параметры:
//		ИмяФайла - Строка - имя файла обмена с банком.
//		Ссылка   - ДокументСсылка - документ, по которому создается файл обмена.
//
//	Описание:
//		Описание для формируемого по умолчанию имени файла см.
//		ОбменСБанкамиПоЗарплатнымПроектам.ИмяФайлаОбменаСБанкамиПоЗарплатнымПроектам.
//
Процедура ОпределитьИмяФайлаОбменаСБанкамиПоЗарплатнымПроектам(ИмяФайла, Ссылка) Экспорт
	
КонецПроцедуры

#Область ФормированиеСтруктурыФайла

// Позволяет переопределить корневые свойства XDTO-пакета формируемого файла.
//
//	Параметры:
//		КорневыеСвойства - Соответствие - корневые свойства XDTO-пакета, зависят от вида документов.
//			Ключ элемента соответствия идентифицирует название корневого свойства.
//			В значении элемента указывается массив свойств, которые будут выгружены.
//		ВидОперации - Строка - Вид операции обмена с банками, для которого получаются корневые свойства.
//
Процедура ОпределитьКорневыеСвойства(КорневыеСвойства, ВидОперации) Экспорт
	
КонецПроцедуры

// Позволяет переопределить соответствие между полями файла и полями выгружаемой коллекции.
//
// Параметры:
//		СоответствиеПолей - Соответствие - Соответствие полей документа и файла:
//			* Ключ     - название поля в файле;
//			* Значение - название поля в документе.
//		ВидОперации - Строка - Вид операции обмена с банками, для которого получается соответствие полей.
//		ФорматФайла - ПеречислениеСсылка.ФорматыФайловОбменаПоЗарплатномуПроекту - Версия формата файла обмена.
//
Процедура ОпределитьСоответствиеПолейФайла(СоответствиеПолей, ВидОперации, ФорматФайла = Неопределено) Экспорт
	
КонецПроцедуры

// Позволяет переопределить соответствие обязательных для заполнения полей файла.
// Для группы используется соответствие обязательных полей, где также можно указать обязательность самой группы
// добавив элемент "ЗначениеОбязательноДляЗаполнения".
//
// Параметры:
//		ОбязательныеПоля - Соответствие - описание обязательности полей файла.
//			Ключ элемента соответствия идентифицирует название поля, обязательного для заполнения.
//			В значении указывается Истина,если поле обязательно для заполнения, иначе Ложь.
//			По умолчанию, если поле не включено в соответствие, используется значение Ложь.
//		ВидОперации - Строка - Вид операции обмена с банками.
//
// Пример:
//		Группа УдостоверениеЛичности обязательна для заполнения, она содержит поля:
//			ВидДокумента - обязательное,
//			Номер - обязательное,
//			Серия - не обязательное,
//			ДатаВыдачи - обязательное.
//			КемВыдан - обязательное.
//
//		СоответствиеУдостоверениеЛичности = Новый Соответствие;
//		СоответствиеУдостоверениеЛичности.Вставить("ВидДокумента", Истина);
//		СоответствиеУдостоверениеЛичности.Вставить("Номер", Истина);
//		СоответствиеУдостоверениеЛичности.Вставить("ДатаВыдачи", Истина);
//		СоответствиеУдостоверениеЛичности.Вставить("КемВыдан", Истина);
//		СоответствиеУдостоверениеЛичности.Вставить("ЗначениеОбязательноДляЗаполнения", Истина);
//		СоответствиеОткрытиеСчетов = Новый Соответствие;
//		СоответствиеОткрытиеСчетов.Вставить("УдостоверениеЛичности", СоответствиеУдостоверениеЛичности);
//		ОбязательныеПоля.Вставить("ОткрытиеСчетов", СоответствиеОткрытиеСчетов);
//
Процедура ОпределитьОбязательныеПоляФайла(ОбязательныеПоля, ВидОперации) Экспорт
	
КонецПроцедуры

// Позволяет переопределить соответствие значений для преобразования.
//
// Параметры:
//		СоответствиеПреобразованияЗначений - Соответствие - соответствие значений для преобразования:
//			* Ключ     - преобразуемое значение;
//			* Значение - преобразованное значение.
//		ВидОперации - Строка - Вид операции обмена с банками, для которого получается соответствие полей.
//
// Пример:
//		В файле для определения пола физического лица используется строка "Женский" или "Мужской".
//		При выгрузке в файл следует указать преобразование пола физического лица, выбранных из документа:
//		СоответствиеПреобразованияЗначений.Вставить(Перечисления.ПолФизическогоЛица.Женский, "Женский");
//		СоответствиеПреобразованияЗначений.Вставить(Перечисления.ПолФизическогоЛица.Мужской, "Мужской");
//
//		В файле для определения статуса операции по зачислению зарплаты используется строка "Зачислено", "НеЗачислено".
//		При загрузке из файла следует указать преобразование статуса:
//		СоответствиеПреобразованияЗначений.Вставить(ВРег("Зачислено"), Перечисления.РезультатыЗачисленияЗарплаты.Зачислено);
//		СоответствиеПреобразованияЗначений.Вставить(ВРег("НеЗачислено"), Перечисления.РезультатыЗачисленияЗарплаты.НеЗачислено);
//
Процедура ОпределитьСоответствиеПреобразованияЗначений(СоответствиеПреобразованияЗначений, ВидОперации) Экспорт
	
КонецПроцедуры

// Позволяет переопределить соответствие типов между наименованиями полей файла и колонок коллекции.
//
// 	Параметры:
// 		СоответствиеТипов - Соответствие - Описание типов полей документа.
// 		                                    Ключ идентифицирует название поля в файле.
// 		                                    Значение содержит тип поля в коллекции.
// 		ВидОперации       - Строка       - Вид операции обмена с банками, для которого получается соответствие типов.
//
Процедура ОпределитьСоответствиеТипов(СоответствиеТипов, ВидОперации) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ПолучениеЗначенийПриФормированииФайла

// Позволяет переопределить значение поля, выгружаемое в файл.
//
// Параметры:
//		ЗначениеПоля - Произвольный - Значение поля, выгружаемое в файл.
//		СвойствоПриемника - СписокXDTO, Произвольный, ОбъектXDTO - Свойство ОбъектаXDTO, в которое будет записано значение поля.
//		ЗначениеКорректно - Булево - Истина, если значение корректно и должно быть выгружено в файл, 
//		                             Ложь - значение не будет выгружено в файл.
//		ОбъектXDTO - ОбъектXDTO - заполняемый ОбъектXDTO.
//		ДанныеШапкиДокумента    - Структура - поля шапки документа, по которому формируется файл.
//		ДанныеСтрокДокумента    - Массив    - строки документа, по которому формируется файл.
//		СоответствиеПолей - Соответствие    - соответствие между полями формата и полями выгружаемой коллекции, 
//		                                      см. ОбменСБанкамиПоЗарплатнымПроектам.СоответствиеПолейФайла.
//		ОбязательныеПоля - Массив           - обязательные для заполнения поля файла,
//		                                      см. ОбменСБанкамиПоЗарплатнымПроектам.ОбязательныеПоляФайла.
//		СоответствиеПреобразованияЗначений  - - Соответствие - соответствие значений для преобразования,
//		                                      см. ОбменСБанкамиПоЗарплатнымПроектам.СоответствиеПреобразованияЗначений.
//		Ошибки - Структура - ошибки, которые будут показаны пользователю, см. ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю.
//
Процедура ОпределитьЗначениеПоля(ЗначениеПоля, СвойствоПриемника, ЗначениеКорректно, ОбъектXDTO, ДанныеШапкиДокумента, ДанныеСтрокДокумента,
					СоответствиеПолей, ОбязательныеПоля, СоответствиеПреобразованияЗначений, Ошибки) Экспорт
	
КонецПроцедуры

// Преобразует значение коллекции, в соответствии с полем преобразования.
//
// Параметры:
//		ЗначениеДляПреобразования          - Произвольный - значение для преобразования.
//		СоответствиеПреобразованияЗначений - Соответствие - правила преобразования значений.
//
Процедура ПреобразоватьЗначениеПоСоответствию(ЗначениеДляПреобразования, СоответствиеПреобразованияЗначений) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ПолучениеДанныхИзВыгружаемогоДокумента

// Позволяет переопределить данные документа для формирования файла обмена.
//
// Параметры:
//		ДанныеШапкиДокумента - СтрокаТаблицыЗначений - данные шапки документа.
//		Ссылка               - ДокументСсылка - документ.
//		ДатаПолученияДанных  - Дата - дата формирования файла.
//
Процедура ОпределитьДанныеШапкиДокументаДляПолученияТекстаФайла(ДанныеШапкиДокумента, Ссылка, ДатаПолученияДанных) Экспорт
	
КонецПроцедуры

// Позволяет переопределить данные строк документа для формирования файла обмена.
//
// Параметры:
//		ДанныеСтрокДокументов - ТаблицаЗначений - данные строк документа.
//		ДатаПолученияДанных   - Дата - дата формирования файла.
//
Процедура ОпределитьДанныеСтрокДокументовДляПолученияТекстаФайла(ДанныеСтрокДокументов, ДатаПолученияДанных) Экспорт
	
КонецПроцедуры

// Позволяет дополнить колонки получаемых данных из объекта.
//
// Параметры:
//		ДанныеСтрокДокументов - Структура - строка документа, по которому формируется файл.
//		
Процедура ДополнитьКолонкиДанныхСтрокДокументов(ДанныеСтрокДокументов) Экспорт
	
КонецПроцедуры

// Позволяет переопределить значения в данных строки документа.
//
// Параметры:
//		СтрокаДанныхДокумента - Структура - строка документа, по которому формируется файл.
//		
Процедура ЗаполнитьКолонкиДанныхСтрокДокумента(СтрокаДанныхДокумента) Экспорт
	
КонецПроцедуры

// Заполняет данные платежного поручения по ведомости.
//
// Параметры:
//		Объект - ДокументОбъект - ведомость, по которой нужно узнать номер и дату платежного поручения.
//		НомерПлатежногоПоручения - Строка - номер платежного поручения, которое было создано по ведомости.
//		ДатаПлатежногоПоручения  - Дата - дата платежного поручения, которое было создано по ведомости.
//		ПлатежныйДокумент - ДокументСсылка - платежный документ, передается, если выгружается файл по платежному документу.
//
Процедура ЗаполнитьДанныеОплатыВедомостей(Объект, НомерПлатежногоПоручения, ДатаПлатежногоПоручения, ПлатежныйДокумент = Неопределено) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ПолучениеДанныхИзЗагружаемогоДокумента

// Позволяет переопределить данные документа для загружаемого файла-подтверждения из обмена.
//
// Параметры:
//		ДанныеДокумента - Соответствие   - см. Документ.ПодтверждениеОткрытияЛицевыхСчетовСотрудников.ДанныеПодтвержденияОткрытияЛицевыхСчетов
//		Ссылка          - ДокументСсылка - документ-подтверждение.
//
Процедура ОпределитьДанныеДокументаПодтверждения(ДанныеДокумента, Ссылка) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ПроверкаЗаполненияДанных

// Позволяет реализовать проверку заполнения реквизитов выгружаемого документа.
// Вызывается из обработки проверки заполнения документа.
//
// Параметры:
//		Документ - ДокументОбъект - документ, в котором требуется проверить заполнение реквизитов.
//		Отказ    - Булево - признак отказа от продолжения работы после выполнения проверки заполнения.
//		ПроверяемыеРеквизиты - Массив - пути к реквизитам, для которых будет выполнена проверка заполнения.
//		СтандартнаяОбработка - Булево - флаг дальнейшей проверки заполнения:
//				Истина - будет продолжена стандартная проверка заполнения,
//				Ложь - проверка заполнения будет завершена.
//
Процедура ОбработкаПроверкиЗаполнения(Документ, Отказ, ПроверяемыеРеквизиты, СтандартнаяОбработка = Истина) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ПолучениеФайлаПодтверждения

// Обрабатывает загрузку пользовательского формата файла обмена.
//
// 	Параметры:
// 		ПолноеИмяФайла       - Строка         - полный путь к файлу.
// 		ЗагруженныйДокумент  - ДокументСсылка - загруженный документ.
// 		СтандартнаяОбработка - Булево         - флаг дальнейшей обработки загрузки файла обмена:
//		                                         Истина - будет продолжена стандартная обработка файла обмена,
//		                                         Ложь   - обработка файла обмена будет завершена.
// 		ДокументОбъектПодтверждение - ДокументОбъект - документ-подтверждение.
//
Процедура ОбработатьЗагрузку(ПолноеИмяФайла, ЗагруженныйДокумент, СтандартнаяОбработка, ДокументОбъектПодтверждение = Неопределено) Экспорт
	
КонецПроцедуры

// Позволяет переопределить структуру для заполнения подтверждения из банка.
//
// Параметры:
//		СтруктураДанныхДляЗаполненияДокумента - Структура - данные для заполнения подтверждения из банка.
//		ОбъектXDTO        - ОбъектXDTO - заполненный ОбъектXDTO.
//		КорневыеСвойства  - Соответствие - корневые свойства загружаемого файла.
//		СоответствиеПолей - Соответствие - соответствие между полями коллекции и полями файла.
//		СоответствиеПреобразованияЗначений - Соответствие - соответствие значений для преобразования.
//		СоответствиеТипов - Соответствие - соответствие типов между наименованиями полей файла и колонок коллекции.
//		ПервичныйДокумент - ДокументСсылка - первичный документ, по которому производится загрузка подтверждения.
//		Отказ             - Булево - Если установить в Истина - документ не будет создан.
//
Процедура ОпределитьСтруктуруДляЗаполненияДокументаПоПодтверждениюБанка(СтруктураДанныхДляЗаполненияДокумента, ОбъектXDTO, 
			КорневыеСвойства, СоответствиеПолей, СоответствиеПреобразованияЗначений, СоответствиеТипов, ПервичныйДокумент, Отказ) Экспорт 
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеЗаявкиНаОткрытиеЛицевыхСчетов

// Позволяет переопределить кадровые данные сотрудников по списку физических лиц.
//
// Параметры:
//		ДанныеСотрудников   - ТаблицаЗначений - кадровые данные сотрудников.
//		СписокФизическихЛиц - Массив - физические лица (СправочникСсылка.ФизическиеЛица), по которым нужно получить кадровые данные.
//		СписокСотрудников   - Массив - сотрудники (СправочникСсылка.Сотрудники), по которым нужно получить кадровые данные.
//		ДатаПолученияДанных - Дата   - дата, на которую будут получены периодические значения.
//		Организация         - СправочникСсылка.Организации       - Организация.
//		ЗарплатныйПроект    - СправочникСсылка.ЗарплатныеПроекты - зарплатный проект.
//
Процедура ОпределитьДанныеСотрудниковДляОткрытияЛицевыхСчетов(ДанныеСотрудников, СписокФизическихЛиц, СписокСотрудников,
														ДатаПолученияДанных, Организация, ЗарплатныйПроект) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеЗаявкиНаЗакрытиеЛицевыхСчетов

// Позволяет переопределить кадровые данные сотрудников на закрытие лицевых счетов.
//
// Параметры:
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц
//		ЗакрытиеЛицевыхСчетов   - РезультатЗапроса - результат запроса с данными сотрудников.
//
Процедура ОпределитьДанныеСотрудниковДляЗакрытияЛицевыхСчетов(МенеджерВременныхТаблиц, ЗакрытиеЛицевыхСчетов) Экспорт
	
КонецПроцедуры

#КонецОбласти

// Позволяет переопределить использование типового обмена электронными документами с банком.
//
// Параметры:
//		ЗарплатныйПроект         - СправочникСсылка.ЗарплатныеПроекты - зарплатный проект.
//		ИспользоватьТиповойОбмен - Булево - Истина, если используется типовой обмен, иначе Ложь.
//
Процедура ПриОпределенииИспользованияТиповогоЭОИСБанком(ЗарплатныйПроект, ИспользоватьТиповойОбмен) Экспорт
	
КонецПроцедуры

Процедура ОпределитьБанкЗарплатногоПроекта(ЗарплатныйПроект = Неопределено, Банк = Неопределено) Экспорт
	
	Если ЗарплатныйПроект <> Неопределено Тогда
		Банк = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗарплатныйПроект, "Банк");
	КонецЕсли;
	Если Банк <> Неопределено Тогда
		Банки = РаботаСБанкамиБП.ПодобратьБанкИзКлассификатора(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Банк));
		Если ЗначениеЗаполнено(Банки) Тогда
			Банк = Банки[Банки.ВГраница()];
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#Область ПервоначальноеЗаполнениеИОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти
