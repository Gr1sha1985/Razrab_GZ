#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиКомандФормы

Процедура ОбработатьДействиеОформленияОснования(ИмяПараметраКоманды, ПараметрыВыполнения) Экспорт
	
	СтандартнаяОбработка = Истина;
	ПодключаемыеКомандыИСКлиентПереопределяемый.ОбработатьДействиеОформленияОснования(
		ИмяПараметраКоманды, ПараметрыВыполнения, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка Тогда
		
		//@skip-warning существующая процедура обработчика оповещения форм ГосИС с командами выбора/создания оснований
		ОткрытьФормуСозданияОснованияДокументаИС(
			ПараметрыВыполнения.Форма,
			Новый ОписаниеОповещения("Подключаемый_ПослеВыбораОснования", ПараметрыВыполнения.Форма, Новый Структура),
			СтрЗаменить(ПараметрыВыполнения.ОписаниеКоманды.Идентификатор,"ОформитьИС",""),
			ПараметрыВыполнения.ОписаниеКоманды.ТипПараметра.Типы()[0]);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьДействиеВыбораОснования(ИмяПараметраКоманды, ПараметрыВыполнения) Экспорт
	
	СтандартнаяОбработка = Истина;
	ПодключаемыеКомандыИСКлиентПереопределяемый.ОбработатьДействиеВыбораОснования(
		ИмяПараметраКоманды, ПараметрыВыполнения, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка Тогда
		
		//@skip-warning существующая процедура обработчика оповещения форм ГосИС с командами выбора/создания оснований
		ОткрытьФормуВыбораОснованияДокументаИС(
			ПараметрыВыполнения.Форма,
			Новый ОписаниеОповещения("Подключаемый_ПослеВыбораОснования", ПараметрыВыполнения.Форма, Новый Структура),
			СтрЗаменить(ПараметрыВыполнения.ОписаниеКоманды.Идентификатор,"ВыбратьИС",""),
			ПараметрыВыполнения.ОписаниеКоманды.ТипПараметра.Типы()[0]);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДействияПоУмолчанию

Процедура ОткрытьФормуСозданияОснованияДокументаИС(ФормаВладелец, ОповещениеПриЗавершении, ИмяДокументаОснования, ТипОбъекта) Экспорт
	
	ИмяФормыДокумента = СтрШаблон("Документ.%1.ФормаОбъекта", ИмяДокументаОснования);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", ФормаВладелец.Объект.Ссылка);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма",                   ФормаВладелец);
	ДополнительныеПараметры.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	ДополнительныеПараметры.Вставить("ТипОбъекта",              ТипОбъекта);
	
	ОткрытьФорму(
		ИмяФормыДокумента,
		ПараметрыФормы,
		ФормаВладелец,
		ФормаВладелец.УникальныйИдентификатор,,,
		Новый ОписаниеОповещения("ПослеЗавершенияВводаОснования", ЭтотОбъект, ДополнительныеПараметры));
	
КонецПроцедуры

// Открывает форму выбора документа-основания.
//
// Параметры:
//  ФормаВладелец           - ФормаКлиентскогоПриложения   - форма, из которой выполняется команда выбора,
//  ОповещениеПриЗавершении - ОписаниеОповещения - действие формы после завершения выбора,
//  ИмяДокумента            - Строка             - имя метаданных документа-основания.
//  ТипОбъекта              - Тип                - тип документа ИС для которого происходит выбор основания
//
Процедура ОткрытьФормуВыбораОснованияДокументаИС(Форма, ОповещениеПриЗавершении, Основание, ТипОбъекта)Экспорт
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ГосИС.ВетИС") Тогда
		Модуль = ОбщегоНазначенияКлиент.ОбщийМодуль("СобытияФормВЕТИСКлиент");
		Модуль.ОткрытьФормуВыбораОснованияДокументаИС(Форма, ОповещениеПриЗавершении, Основание, ТипОбъекта);
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ГосИС.ИСМП") Тогда
		Модуль = ОбщегоНазначенияКлиент.ОбщийМодуль("СобытияФормИСМПКлиент");
		Модуль.ОткрытьФормуВыбораОснованияДокументаИС(Форма, ОповещениеПриЗавершении, Основание, ТипОбъекта);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиОкончанияДействий

#Область СозданиеОснования

Процедура ПослеЗавершенияВводаОснования(Результат, ДополнительныеПараметры) Экспорт 
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры.Форма.Объект.ДокументОснование = Результат;
	
	Если ДополнительныеПараметры.ОповещениеПриЗавершении <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, Результат);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// Возвращает структуру параметров завершения выбора основания.
//
// Возвращаемое значение:
//  Структура - Структура со свойствами:
//   * Форма                   - ФормаКлиентскогоПриложения   - форма, в которой происходит выбор основания,
//   * ОповещениеПриЗавершении - ОписаниеОповещения - действие при выборе основания,
//   * ПерезаполнениеДоступно  - Булево, Ложь       - признак доступности объекта для перезаполнения.
//
Функция ПараметрыЗавершенияВыбораОснования() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Форма");
	Результат.Вставить("ОповещениеПриЗавершении");
	Результат.Вставить("ПерезаполнениеДоступно", Ложь);
	Возврат Результат;
	
КонецФункции

Процедура ОткрытьФормуВыбораОснования(ИмяФормыВыбора, ПараметрыОткрытияФормы, Владелец, ДополнительныеПараметры) Экспорт
	
	ОткрытьФорму(
		ИмяФормыВыбора,
		ПараметрыОткрытияФормы,
		Владелец,
		Владелец.УникальныйИдентификатор,,,
		Новый ОписаниеОповещения("ПослеЗавершенияВыбораОснования", ЭтотОбъект, ДополнительныеПараметры),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

Процедура ПослеЗавершенияВыбораОснования(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры.Форма.Объект.ДокументОснование = Результат;
	Если ДополнительныеПараметры.ПерезаполнениеДоступно Тогда
		ПредложитьПерезаполнениеОбъекта(ДополнительныеПараметры.Форма, ДополнительныеПараметры.ОповещениеПриЗавершении, Результат);
	ИначеЕсли ДополнительныеПараметры.ОповещениеПриЗавершении <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, Результат);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПредложитьПерезаполнениеОбъекта(Форма, ОповещениеПриЗавершении, РезультатЗаполнения)
	
	ОбработчикЗавершения = Новый ОписаниеОповещения(
		"ОбработатьВозможностьПерезаполненияОбъектаЗавершение",
		ЭтотОбъект,
		Новый Структура("Форма, ОповещениеПриЗавершении, Результат", Форма, ОповещениеПриЗавершении, РезультатЗаполнения));
	
	Если Форма.Объект.Товары.Количество()>0 Тогда
		ПоказатьВопрос(
			ОбработчикЗавершения,
			НСтр("ru = 'Перезаполнить текущий документ по документу-основанию?'"),
			РежимДиалогаВопрос.ДаНет);
	Иначе
		ВыполнитьОбработкуОповещения(ОбработчикЗавершения, КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьВозможностьПерезаполненияОбъектаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ(ДополнительныеПараметры.ОповещениеПриЗавершении = Неопределено) Тогда
		Если Результат = КодВозвратаДиалога.Да Тогда
			Если ТипЗнч(ДополнительныеПараметры.ОповещениеПриЗавершении.ДополнительныеПараметры) = Тип("Структура")Тогда
				ДополнительныеПараметры.ОповещениеПриЗавершении.ДополнительныеПараметры.Вставить("ОбработатьПерезаполнение");
			КонецЕсли;
		КонецЕсли;
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, ДополнительныеПараметры.Результат);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти