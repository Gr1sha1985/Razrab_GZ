#Область ОбработчикиСобытийФормы

Процедура ПриОткрытии(Форма, Отказ) Экспорт
	
	// ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	ОбработкаНовостейКлиент.КонтекстныеНовости_ПриОткрытии(Форма);
	// Конец ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	
КонецПроцедуры

Процедура ПередЗаписью(Форма, Отказ, ПараметрыЗаписи) Экспорт
	
	Если ПараметрыЗаписи.РежимЗаписи = ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение") Тогда
		КлючеваяОперация = "ПроведениеПриходныйКассовыйОрдер";
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписи(Форма, ПараметрыЗаписи) Экспорт
	
	Объект = Форма.Объект;
	
	Оповестить("ОбновитьФорму", Форма.ВладелецФормы, Объект.Ссылка);
	
	Если ПараметрыЗаписи.Свойство("ОплаченныеСчета") И ПараметрыЗаписи.ОплаченныеСчета.Количество() > 0 Тогда
		ОповеститьОбИзменении(Тип("ДокументСсылка.СчетНаОплатуПокупателю"));
		Оповестить("ИзмененСтатусДокументов", ПараметрыЗаписи.ОплаченныеСчета, Объект.Ссылка);
	КонецЕсли;
	
	Оповестить("Запись_ПриходныйКассовыйОрдер", ПараметрыЗаписи, Объект.Ссылка);
	
КонецПроцедуры

Процедура ОбработкаНавигационнойСсылки(Форма, НавигационнаяСсылка, СтандартнаяОбработка) Экспорт
	
	Если НавигационнаяСсылка = "ЛичныйКабинетСервисаМойНалог" Тогда
		СтандартнаяОбработка = Ложь;
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(ИнтеграцияСПлатформойСамозанятыеКлиентСервер.АдресСервиса());
	КонецЕсли;
	
	ПечатьФискальныхДокументовКлиент.ОбработкаНавигационнойСсылки(
		Форма, НавигационнаяСсылка, СтандартнаяОбработка);
	
	НастройкиНалоговИОтчетовПредупреждениеФормыКлиент.ОбработкаНавигационнойСсылки(Форма, НавигационнаяСсылка, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийРеквизитовШапки

Процедура ВидОперацииАвтоПодбор(Форма, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка) Экспорт
	
	Объект = Форма.Объект;
	Если Ожидание = 0 Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = Новый СписокЗначений;
		ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПКО.РозничнаяВыручка"));
		ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПКО.ОплатаПокупателя"));
		Если ЗначениеЗаполнено(Объект.ВидОперации) И ДанныеВыбора.НайтиПоЗначению(Объект.ВидОперации) = Неопределено Тогда
			ДанныеВыбора.Добавить(Объект.ВидОперации);
		КонецЕсли;
	КонецЕсли;
	
	ПриходныйКассовыйОрдерФормыКлиентСервер.ПоказатьПредупреждениеПечатьЧека(Форма);
	
КонецПроцедуры

Процедура КонтрагентОкончаниеВводаТекста(Форма, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка) Экспорт
	
	РаботаСКонтрагентамиБПКлиент.КонтрагентОкончаниеВводаТекста(
		Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура КонтрагентОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	
	РаботаСКонтрагентамиБПКлиент.КонтрагентОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
	ПриходныйКассовыйОрдерФормыКлиентСервер.ПоказатьПредупреждениеПечатьЧека(Форма);
	
КонецПроцедуры

Процедура ПодразделениеОрганизацииПриИзменении(Форма, Элемент) Экспорт
	
	ПриходныйКассовыйОрдерФормыКлиентСервер.УстановитьПодразделениеКт(Форма);
	
КонецПроцедуры

Процедура ПринятоОтНачалоВыбора(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = ОткрытьФорму("Справочник.ФизическиеЛица.ФормаСписка",
		Новый Структура("РежимВыбора", Истина), Элемент);
	
КонецПроцедуры

Процедура ПринятоОтОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ПриходныйКассовыйОрдерФормыКлиентСервер.ФормированиеПринятоОт(Форма, ВыбранноеЗначение);
	
	Модифицированность = Истина;
	
	ПриходныйКассовыйОрдерФормыКлиентСервер.ЗаголовокГруппыРеквизитовПечатнойФормы(Форма);
	
КонецПроцедуры

Процедура СуммаДокументаПриИзменении(Форма) Экспорт
	
	Объект   = Форма.Объект;
	
	Если Объект.РасшифровкаПлатежа.Количество() <> 1 Тогда
		Возврат;
	КонецЕсли;
	
	Если ПриходныйКассовыйОрдерФормыКлиентСервер.ЕстьРасшифровкаПлатежа(Объект.ВидОперации) Тогда
		СтрокаПлатеж = ПриходныйКассовыйОрдерФормыКлиентСервер.РасшифровкаПлатежаТекущиеДанные(Форма);
		СтрокаПлатеж.СуммаПлатежа = Объект.СуммаДокумента;
		ПриходныйКассовыйОрдерФормыКлиентСервер.ПересчитатьСуммуНДС(СтрокаПлатеж);
		ПриходныйКассовыйОрдерФормыКлиентСервер.РассчитатьСуммуВзаиморасчетов(СтрокаПлатеж, Форма);
		ПриходныйКассовыйОрдерФормыКлиентСервер.ЗаполнитьОтражениеСтрокиВУСН(СтрокаПлатеж, Форма);
		ПриходныйКассовыйОрдерФормыКлиентСервер.ОбновитьИтогиУСН(Форма);
		ПриходныйКассовыйОрдерФормыКлиентСервер.ОбновитьИтоги(Форма);
	Иначе
		СтрокаПлатеж = ПриходныйКассовыйОрдерФормыКлиентСервер.РасшифровкаПлатежаТекущиеДанные(Форма);
		СтрокаПлатеж.СуммаПлатежа = Объект.СуммаДокумента;
		ПриходныйКассовыйОрдерФормыКлиентСервер.ПересчитатьСуммуНДС(СтрокаПлатеж);
		ПриходныйКассовыйОрдерФормыКлиентСервер.ОбновитьИтоги(Форма);
		Если Форма.ПрименениеУСН И Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПКО.ПрочийПриход") Тогда
			ПриходныйКассовыйОрдерФормыКлиентСервер.СформироватьПрочееТекстДоходыУСН(Форма);
		КонецЕсли;
	КонецЕсли;
	
	Если ПриходныйКассовыйОрдерФормыКлиентСервер.ФормаДокументаОднострочная(Форма) Тогда
		ПриходныйКассовыйОрдерФормыКлиентСервер.ЗаполнитьРеквизитыРасшифровкаПлатежа(Форма, Истина, СтрокаПлатеж);
	КонецЕсли;
	
	ПриходныйКассовыйОрдерФормыКлиентСервер.ПоказатьПредупреждениеПечатьЧека(Форма);
	
КонецПроцедуры

Процедура СчетУчетаПриИзменении(Форма) Экспорт
	
	Объект = Форма.Объект;
	Если Форма.ПрименениеУСН Тогда
		ПриходныйКассовыйОрдерФормыКлиентСервер.СформироватьПрочееТекстДоходыУСН(Форма);
	КонецЕсли;
	
	БухгалтерскийУчетКлиентСервер.УстановитьСвойстваСубконтоШапкиПриИзмененииСчета(
		Форма, Объект, ПриходныйКассовыйОрдерФормыКлиентСервер.ПараметрыУстановкиСвойствСубконто(Форма));
	
КонецПроцедуры

Процедура СубконтоКт1ПриИзменении(Форма, Элемент) Экспорт
	
	Объект = Форма.Объект;
	Если ЗначениеЗаполнено(Объект.СубконтоКт1) Тогда
		
		Если ТипЗнч(Объект.СубконтоКт1) = Тип("СправочникСсылка.Контрагенты") Тогда
			НаименованиеКонтрагента = ПриходныйКассовыйОрдерФормыВызовСервера.НаименованиеКонтрагента(Объект.СубконтоКт1);
			Объект.ПринятоОт = ?(ПустаяСтрока(НаименованиеКонтрагента.НаименованиеПолное),
				НаименованиеКонтрагента.Наименование, НаименованиеКонтрагента.НаименованиеПолное);
		ИначеЕсли ТипЗнч(Объект.СубконтоКт1) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
			ПриходныйКассовыйОрдерФормыКлиентСервер.ФормированиеПринятоОт(Форма, Объект.СубконтоКт1);
		КонецЕсли;
		
	КонецЕсли;
	
	ПриИзмененииСубконто(Форма, 1);
	
КонецПроцедуры

Процедура СубконтоКт2ПриИзменении(Форма, Элемент) Экспорт
	
	ПриИзмененииСубконто(Форма, 2);
	
КонецПроцедуры

Процедура СубконтоКт3ПриИзменении(Форма, Элемент) Экспорт
	
	ПриИзмененииСубконто(Форма, 3);
	
КонецПроцедуры

Процедура СубконтоКт1НачалоВыбора(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	НачалоВыбораСубконто(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура СубконтоКт2НачалоВыбора(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	НачалоВыбораСубконто(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура СубконтоКт3НачалоВыбора(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	НачалоВыбораСубконто(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПрочееДоходыУСНПриИзменении(Форма, Элемент) Экспорт
	
	ПриходныйКассовыйОрдерФормыКлиентСервер.СформироватьПрочееТекстДоходыУСН(Форма);
	
КонецПроцедуры

Процедура РозничнаяВыручкаРасходыУСНПриИзменении(Форма, Элемент) Экспорт
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Объект.Графа7_УСН = 0 Тогда
		Форма.Объект.НДС_УСН = 0;
	КонецЕсли;
	
	Элементы.РозничнаяВыручкаНДСУСН.Доступность = Объект.Графа7_УСН <> 0;
	
КонецПроцедуры

Процедура ПринятоОтПриИзменении(Форма, Элемент) Экспорт
	
	ПриходныйКассовыйОрдерФормыКлиентСервер.ЗаголовокГруппыРеквизитовПечатнойФормы(Форма);
	
КонецПроцедуры

Процедура ОснованиеПриИзменении(Форма, Элемент) Экспорт
	
	ПриходныйКассовыйОрдерФормыКлиентСервер.ЗаголовокГруппыРеквизитовПечатнойФормы(Форма);
	
КонецПроцедуры

Процедура ПриложениеПриИзменении(Форма, Элемент) Экспорт
	
	ПриходныйКассовыйОрдерФормыКлиентСервер.ЗаголовокГруппыРеквизитовПечатнойФормы(Форма);
	
КонецПроцедуры

Процедура РеквизитыОрганизацииСсылкаОбработкаНавигационнойСсылки(Форма, Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка) Экспорт
	
	Объект = Форма.Объект;
	ПроверкаРеквизитовОрганизацииКлиент.РеквизитыОрганизацииСсылкаОбработкаНавигационнойСсылки(Объект.Организация, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура КонтрагентАвтоПодбор(Форма, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка) Экспорт
	
	РаботаСКонтрагентамиБПКлиент.КонтрагентАвтоПодбор(
		Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыРасшифровкаПлатежа

Процедура РасшифровкаПлатежаПриИзменении(Форма, Элемент) Экспорт
	
	Объект = Форма.Объект;
	РасшифровкаПлатежа = ПриходныйКассовыйОрдерФормыКлиентСервер.ПолучитьРасшифровкаПлатежа(Форма);
	
	Объект.СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	ПриходныйКассовыйОрдерФормыКлиентСервер.ОбновитьИтоги(Форма);
	ПриходныйКассовыйОрдерФормыКлиентСервер.ОбновитьИтогиУСН(Форма);
	ПриходныйКассовыйОрдерФормыКлиентСервер.ОпределитьНаличиеРасчетовВУсловныхЕдиницах(Форма);
	ПриходныйКассовыйОрдерФормыКлиентСервер.ПоказатьПредупреждениеПечатьЧека(Форма);
	
КонецПроцедуры

Процедура РасшифровкаПлатежаПриОкончанииРедактирования(Форма, Элемент, НоваяСтрока, ОтменаРедактирования) Экспорт
	
	Объект = Форма.Объект;
	Если НоваяСтрока И ОтменаРедактирования Тогда
		РасшифровкаПлатежа = ПриходныйКассовыйОрдерФормыКлиентСервер.ПолучитьРасшифровкаПлатежа(Форма);
		Объект.СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
		ПриходныйКассовыйОрдерФормыКлиентСервер.ОбновитьИтоги(Форма);
		ПриходныйКассовыйОрдерФормыКлиентСервер.ОбновитьИтогиУСН(Форма);
	КонецЕсли;
	
КонецПроцедуры

Процедура РасшифровкаПлатежаПередУдалением(Форма, Элемент, Отказ) Экспорт
	
	РасшифровкаПлатежа = ПриходныйКассовыйОрдерФормыКлиентСервер.ПолучитьРасшифровкаПлатежа(Форма);
	
	Отказ = РасшифровкаПлатежа.Количество() = 1;
	
КонецПроцедуры

Процедура РасшифровкаПлатежаПриНачалеРедактирования(Форма, Элемент, НоваяСтрока, Копирование) Экспорт
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	СтрокаПлатеж = ПриходныйКассовыйОрдерФормыКлиентСервер.РасшифровкаПлатежаТекущиеДанные(Форма);
	
	ПриходныйКассовыйОрдерФормыКлиентСервер.ИнициализироватьСвойстваПлатежа(Форма);
	Если НоваяСтрока И Не Копирование Тогда
		ЗаполнитьЗначенияСвойств(СтрокаПлатеж, Форма.СвойстваПлатежа);
		Если Форма.ОтражениеАвансаВидимость Тогда
			СтрокаПлатеж.ОтражениеАвансаПредставление = БанкИКассаФормыКлиентСервер.ВариантОтраженияДоходовПредставление(
				СтрокаПлатеж.ПорядокОтраженияАванса,
				БанкИКассаФормыКлиентСервер.ВариантыОтраженияДоходов(Форма));
		КонецЕсли;
		Если Форма.ОтражениеДоходаВидимость Тогда
			СтрокаПлатеж.ОтражениеДоходаПредставление = БанкИКассаФормыКлиентСервер.ВариантОтраженияДоходовПредставление(
				СтрокаПлатеж.ПорядокОтраженияАванса,
				БанкИКассаФормыКлиентСервер.ВариантыОтраженияДоходов(Форма));
		КонецЕсли;
	КонецЕсли;
	
	Если НоваяСтрока И Форма.ЕстьРасчетыВУсловныхЕдиницах Тогда
		ПриходныйКассовыйОрдерФормыКлиентСервер.ЗаполнитьНадписиВРасшифровке(СтрокаПлатеж);
	КонецЕсли;
	
КонецПроцедуры

Процедура РасшифровкаПлатежаДоговорКонтрагентаОткрытие(Форма, Элемент, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	ТекущиеДанные = ПриходныйКассовыйОрдерФормыКлиентСервер.РасшифровкаПлатежаТекущиеДанные(Форма);
	
	ЗначенияЗаполнения = Новый Структура;
	ВидыДоговора   = УчетДенежныхСредствКлиентСервер.ОпределитьВидДоговораСКонтрагентом(Объект.ВидОперации);
	ЗначенияЗаполнения.Вставить("Организация", Объект.Организация);
	ЗначенияЗаполнения.Вставить("Владелец", Объект.Контрагент);
	ЗначенияЗаполнения.Вставить("ВидДоговора", Новый ФиксированныйМассив(ВидыДоговора));
	
	ЗначенияЗаполнения.Вставить("ОплатаВВалюте", Форма.ОплатаВВалюте);
	
	Если Форма.ОплатаВВалюте ИЛИ НЕ ПриходныйКассовыйОрдерФормыКлиентСервер.ДокументМожетБытьОформленВВалюте(Объект.ВидОперации) Тогда
		ЗначенияЗаполнения.Вставить("ВалютаВзаиморасчетов", Объект.ВалютаДокумента);
		ЗначенияЗаполнения.Вставить("Валютный", Форма.ОплатаВВалюте);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", ТекущиеДанные.ДоговорКонтрагента);
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Справочник.ДоговорыКонтрагентов.ФормаОбъекта", ПараметрыФормы, Форма);
	
КонецПроцедуры

Процедура РасшифровкаПлатежаДоговорКонтрагентаОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	
	Объект = Форма.Объект;
	
	ПараметрыДоговора = Новый Структура;
	ПараметрыДоговора.Вставить("Организация", Объект.Организация);
	ПараметрыДоговора.Вставить("Владелец", Объект.Контрагент);
	ПараметрыДоговора.Вставить("ВидДоговора", ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПокупателем"));
	
	РаботаСДоговорамиКонтрагентовБПКлиент.ДоговорОбработкаВыбора(Элемент, ВыбранноеЗначение, ПараметрыДоговора, СтандартнаяОбработка);
КонецПроцедуры

Процедура РасшифровкаПлатежаДоговорКонтрагентаАвтоПодбор(Форма, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка) Экспорт
	
	РаботаСДоговорамиКонтрагентовБПКлиент.ЗаполнитьСписокВыбора(Элемент, Текст, Форма.ПредлагатьНовыйДоговор, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура РасшифровкаПлатежаСтатьяДвиженияДенежныхСредствПриИзменении(Форма, Элемент) Экспорт
	
	Элементы = Форма.Элементы;
	СтрокаПлатеж = ПриходныйКассовыйОрдерФормыКлиентСервер.РасшифровкаПлатежаТекущиеДанные(Форма);
	
	ПриходныйКассовыйОрдерФормыКлиентСервер.ИнициализироватьСвойстваПлатежа(Форма); // Только создаем структуру, если она еще не создана.
	
	Если СтрокаПлатеж.СтатьяДвиженияДенежныхСредств <> Форма.СвойстваПлатежа.СтатьяДвиженияДенежныхСредств Тогда
		Форма.СвойстваПлатежа.СтатьяДвиженияДенежныхСредств = СтрокаПлатеж.СтатьяДвиженияДенежныхСредств;
	КонецЕсли;
	
	ПараметрыОбъекта = ПриходныйКассовыйОрдерФормыКлиентСервер.ТекущиеПараметрыОбъекта(Форма);
	
КонецПроцедуры

Процедура РасшифровкаВыручкиСтатьяДвиженияДенежныхСредствПриИзменении(Форма, Элемент) Экспорт
	
	Элементы = Форма.Элементы;
	
	СтрокаПлатеж = ПриходныйКассовыйОрдерФормыКлиентСервер.РасшифровкаПлатежаТекущиеДанные(Форма, "РасшифровкаВыручки");
	
	ПриходныйКассовыйОрдерФормыКлиентСервер.ИнициализироватьСвойстваПлатежа(Форма); // Только создаем структуру, если она еще не создана.
	
	Если СтрокаПлатеж.СтатьяДвиженияДенежныхСредств <> Форма.СвойстваПлатежа.СтатьяДвиженияДенежныхСредств Тогда
		Форма.СвойстваПлатежа.СтатьяДвиженияДенежныхСредств = СтрокаПлатеж.СтатьяДвиженияДенежныхСредств;
	КонецЕсли;
	
	ПараметрыОбъекта = ПриходныйКассовыйОрдерФормыКлиентСервер.ТекущиеПараметрыОбъекта(Форма);
	
КонецПроцедуры

Процедура РасшифровкаПлатежаСпособПогашенияЗадолженностиПриИзменении(Форма, Элемент) Экспорт
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	СтрокаПлатеж = ПриходныйКассовыйОрдерФормыКлиентСервер.РасшифровкаПлатежаТекущиеДанные(Форма);
	Если СтрокаПлатеж.СпособПогашенияЗадолженности <> ПредопределенноеЗначение("Перечисление.СпособыПогашенияЗадолженности.ПоДокументу") Тогда
		СтрокаПлатеж.Сделка = Неопределено;
	КонецЕсли;
	
	ПараметрыЗаполненияСчетовУчета = ПриходныйКассовыйОрдерФормыКлиентСервер.НачатьЗаполнениеСчетовУчета("РасшифровкаПлатежа.СпособПогашенияЗадолженности", Объект, СтрокаПлатеж);
	СчетаУчетаВДокументахКлиент.ЗаполнитьПриИзменении(ПараметрыЗаполненияСчетовУчета);
	
	Если ПриходныйКассовыйОрдерФормыКлиентСервер.ФормаДокументаОднострочная(Форма) Тогда
		ПриходныйКассовыйОрдерФормыКлиентСервер.ВидимостьДоступностьПолейПриИзмененииСпособаПогашения(Форма);
	КонецЕсли;
	
КонецПроцедуры

Процедура РасшифровкаПлатежаСделкаНачалоВыбора(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	СтрокаПлатеж = ПриходныйКассовыйОрдерФормыКлиентСервер.РасшифровкаПлатежаТекущиеДанные(Форма);
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПКО.ВозвратОтПоставщика") Тогда
		СчетУчета = СтрокаПлатеж.СчетУчетаРасчетовПоАвансам;
	Иначе
		СчетУчета = СтрокаПлатеж.СчетУчетаРасчетовСКонтрагентом;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Дата) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не указана дата.'"));
		Возврат;
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не указана организация.'"));
		Возврат;
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.Контрагент) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не указан контрагент.'"));
		Возврат;
	ИначеЕсли Форма.ВестиУчетПоДоговорам И НЕ ЗначениеЗаполнено(СтрокаПлатеж.ДоговорКонтрагента) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не указан договор.'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыОбъекта = Новый Структура;
	ПараметрыОбъекта.Вставить("Дата",               Объект.Дата);
	ПараметрыОбъекта.Вставить("ДоговорКонтрагента", СтрокаПлатеж.ДоговорКонтрагента);
	ПараметрыОбъекта.Вставить("Контрагент",         Объект.Контрагент);
	Если ЗначениеЗаполнено(СчетУчета) Тогда
		ПараметрыОбъекта.Вставить("РежимОтбораДокументов", ПредопределенноеЗначение("Перечисление.РежимОтбораДокументов.ПоОстаткам"));
		ПараметрыОбъекта.Вставить("СчетУчета",             СчетУчета);
	КонецЕсли;
	ПараметрыОбъекта.Вставить("Организация",        Объект.Организация);
	ПараметрыОбъекта.Вставить("ОстаткиОбороты",     "Дт");
	ПараметрыОбъекта.Вставить("ТипыДокументов",     "Метаданные.Документы.ПриходныйКассовыйОрдер.ТабличныеЧасти.РасшифровкаПлатежа.Реквизиты.Сделка.Тип");
	
	ПараметрыФормы = Новый Структура("ПараметрыОбъекта", ПараметрыОбъекта);
	ОткрытьФорму("Документ.ДокументРасчетовСКонтрагентом.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

Процедура РасшифровкаПлатежаСуммаПлатежаПриИзменении(Форма, Элемент) Экспорт
	
	Элементы = Форма.Элементы;
	СтрокаПлатеж = ПриходныйКассовыйОрдерФормыКлиентСервер.РасшифровкаПлатежаТекущиеДанные(Форма);
	ПриходныйКассовыйОрдерФормыКлиентСервер.РассчитатьСуммуВзаиморасчетов(СтрокаПлатеж, Форма);
	ПриходныйКассовыйОрдерФормыКлиентСервер.ПересчитатьСуммуНДС(СтрокаПлатеж);
	ПриходныйКассовыйОрдерФормыКлиентСервер.ЗаполнитьОтражениеСтрокиВУСН(СтрокаПлатеж, Форма);
	
КонецПроцедуры

Процедура РасшифровкаПлатежаКурсВзаиморасчетовПриИзменении(Форма, Элемент) Экспорт
	
	Элементы = Форма.Элементы;
	
	СтрокаПлатеж = ПриходныйКассовыйОрдерФормыКлиентСервер.РасшифровкаПлатежаТекущиеДанные(Форма);
	ПриходныйКассовыйОрдерФормыКлиентСервер.РассчитатьСуммуВзаиморасчетов(СтрокаПлатеж, Форма);
	
	Если ПриходныйКассовыйОрдерФормыКлиентСервер.ФормаДокументаОднострочная(Форма) Тогда
		ПриходныйКассовыйОрдерФормыКлиентСервер.ЗаполнитьРеквизитыРасшифровкаПлатежа(Форма, Истина, СтрокаПлатеж);
	КонецЕсли;
	
КонецПроцедуры

Процедура РасшифровкаПлатежаКурсВзаиморасчетовНачалоВыбора(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	СтрокаПлатеж = ПриходныйКассовыйОрдерФормыКлиентСервер.РасшифровкаПлатежаТекущиеДанные(Форма);
	Если НЕ ЗначениеЗаполнено(СтрокаПлатеж.ДоговорКонтрагента) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Для выбора курса взаиморасчетов нужно выбрать договор контрагента.'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыДокумента = Новый Структура;
	ПараметрыДокумента.Вставить("ДоговорКонтрагента",      СтрокаПлатеж.ДоговорКонтрагента);
	ПараметрыДокумента.Вставить("КратностьВзаиморасчетов", СтрокаПлатеж.КратностьВзаиморасчетов);
	ПараметрыДокумента.Вставить("КурсВзаиморасчетов",      СтрокаПлатеж.КурсВзаиморасчетов);
	ПараметрыДокумента.Вставить("Дата",                    Объект.Дата);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("СтрокаПлатеж", СтрокаПлатеж);
	ДополнительныеПараметры.Вставить("Форма", Форма);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("РасшифровкаПлатежаКурсВзаиморасчетовНачалоВыбораЗавершение",
		ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("Общаяформа.ФормаВводаКурсаИКратности", ПараметрыДокумента,,,,,ОповещениеОЗакрытии);
	
КонецПроцедуры

Процедура РасшифровкаПлатежаСуммаВзаиморасчетовПриИзменении(Форма, Элемент) Экспорт
	
	Элементы = Форма.Элементы;
	
	СтрокаПлатеж = ПриходныйКассовыйОрдерФормыКлиентСервер.РасшифровкаПлатежаТекущиеДанные(Форма);
	ПриходныйКассовыйОрдерФормыКлиентСервер.ПроверкаКурсовВалют(СтрокаПлатеж, Форма);
	
	Если СтрокаПлатеж.СуммаВзаиморасчетов <> 0 И Форма.КратностьДокумента <> 0 Тогда
		СуммаРуб = СтрокаПлатеж.СуммаПлатежа * Форма.КурсДокумента / Форма.КратностьДокумента;
		СтрокаПлатеж.КурсВзаиморасчетов = СуммаРуб / СтрокаПлатеж.СуммаВзаиморасчетов * СтрокаПлатеж.КратностьВзаиморасчетов;
	КонецЕсли;
	
	Если ПриходныйКассовыйОрдерФормыКлиентСервер.ФормаДокументаОднострочная(Форма) Тогда
		ПриходныйКассовыйОрдерФормыКлиентСервер.ЗаполнитьРеквизитыРасшифровкаПлатежа(Форма, Истина, СтрокаПлатеж);
	КонецЕсли;
	
КонецПроцедуры

Процедура РасшифровкаПлатежаСтавкаНДСПриИзменении(Форма, Элемент) Экспорт
	
	Элементы = Форма.Элементы;
	
	СтрокаПлатеж = ПриходныйКассовыйОрдерФормыКлиентСервер.РасшифровкаПлатежаТекущиеДанные(Форма);
	ПриходныйКассовыйОрдерФормыКлиентСервер.ПересчитатьСуммуНДС(СтрокаПлатеж);
	
	Если ПриходныйКассовыйОрдерФормыКлиентСервер.ФормаДокументаОднострочная(Форма) Тогда
		ПриходныйКассовыйОрдерФормыКлиентСервер.ДоступностьСтавкиНДС(Форма);
		ПриходныйКассовыйОрдерФормыКлиентСервер.ЗаполнитьРеквизитыРасшифровкаПлатежа(Форма, Истина, СтрокаПлатеж);
	КонецЕсли;
	
КонецПроцедуры

Процедура РасшифровкаПлатежаСчетУчетаРасчетовСКонтрагентомПриИзменении(Форма, Элемент) Экспорт
	
	Элементы = Форма.Элементы;
	СтрокаТЧ = ПриходныйКассовыйОрдерФормыКлиентСервер.РасшифровкаПлатежаТекущиеДанные(Форма);
	ПриходныйКассовыйОрдерФормыКлиентСервер.ЗаполнитьОтражениеСтрокиВУСН(СтрокаТЧ, Форма);
	
КонецПроцедуры

Процедура РасшифровкаПлатежаОтражениеАвансаПредставлениеПриИзменении(Форма, Элемент) Экспорт
	
	ПриходныйКассовыйОрдерФормыКлиентСервер.ИнициализироватьСвойстваПлатежа(Форма); // Только создаем структуру, если она еще не создана.
	
	СтрокаПлатеж = ПриходныйКассовыйОрдерФормыКлиентСервер.РасшифровкаПлатежаТекущиеДанные(Форма);
	
	БанкИКассаФормыКлиент.ОтражениеДоходаПриИзменении(Форма,
		СтрокаПлатеж.ПорядокОтраженияАванса,
		СтрокаПлатеж.ОтражениеАвансаПредставление,
		Форма.СвойстваПлатежа.ПорядокОтраженияАванса);
	
	ПриходныйКассовыйОрдерФормыКлиентСервер.ЗаполнитьРеквизитыРасшифровкаПлатежа(Форма, Истина, СтрокаПлатеж);
	
КонецПроцедуры

Процедура РасшифровкаПлатежаОтражениеАвансаПредставлениеОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	
	БанкИКассаФормыКлиент.ОтражениеДоходаОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура РасшифровкаПлатежаОтражениеДоходаПредставлениеПриИзменении(Форма, Элемент) Экспорт
	
	СтрокаПлатеж = ПриходныйКассовыйОрдерФормыКлиентСервер.РасшифровкаПлатежаТекущиеДанные(Форма);
	
	БанкИКассаФормыКлиент.ОтражениеДоходаПриИзменении(Форма,
		СтрокаПлатеж.ПорядокОтраженияАванса,
		СтрокаПлатеж.ОтражениеДоходаПредставление,
		Форма.СвойстваПлатежа.ПорядокОтраженияАванса);
	
	ПриходныйКассовыйОрдерФормыКлиентСервер.ЗаполнитьРеквизитыРасшифровкаПлатежа(Форма, Истина, СтрокаПлатеж);
	
КонецПроцедуры

Процедура РасшифровкаПлатежаОтражениеДоходаПредставлениеОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	
	БанкИКассаФормыКлиент.ОтражениеДоходаОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыРасшифровкаВыручки

Процедура РасшифровкаВыручкиПриИзменении(Форма) Экспорт
	
	Объект = Форма.Объект;
	РасшифровкаПлатежа = ПриходныйКассовыйОрдерФормыКлиентСервер.ПолучитьРасшифровкаПлатежа(Форма);
	Объект.СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	ПриходныйКассовыйОрдерФормыКлиентСервер.ОбновитьИтоги(Форма);
	ПриходныйКассовыйОрдерФормыКлиентСервер.ПоказатьПредупреждениеПечатьЧека(Форма);
	
КонецПроцедуры

Процедура РасшифровкаВыручкиПриНачалеРедактирования(Форма, Элемент, НоваяСтрока, Копирование) Экспорт
	
	СтрокаПлатеж = Форма.Элементы.РасшифровкаВыручки.ТекущиеДанные;
	
	ПриходныйКассовыйОрдерФормыКлиентСервер.ИнициализироватьСвойстваПлатежа(Форма);
	Если НоваяСтрока И НЕ Копирование Тогда
		ЗаполнитьЗначенияСвойств(СтрокаПлатеж, Форма.СвойстваПлатежа);
	КонецЕсли;
	
КонецПроцедуры

Процедура РасшифровкаВыручкиПриОкончанииРедактирования(Форма, Элемент, НоваяСтрока, ОтменаРедактирования) Экспорт
	
	Объект = Форма.Объект;
	
	Если НоваяСтрока И ОтменаРедактирования Тогда
		РасшифровкаПлатежа = ПриходныйКассовыйОрдерФормыКлиентСервер.ПолучитьРасшифровкаПлатежа(Форма);
		Объект.СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
		ПриходныйКассовыйОрдерФормыКлиентСервер.ОбновитьИтоги(Форма);
		ПриходныйКассовыйОрдерФормыКлиентСервер.ОбновитьИтогиУСН(Форма);
	КонецЕсли;
	
КонецПроцедуры

Процедура РасшифровкаВыручкиПередУдалением(Форма, Элемент, Отказ) Экспорт
	
	РасшифровкаПлатежа = ПриходныйКассовыйОрдерФормыКлиентСервер.ПолучитьРасшифровкаПлатежа(Форма);
	Отказ = РасшифровкаПлатежа.Количество() = 1;
	
КонецПроцедуры

Процедура РасшифровкаВыручкиСуммаПлатежаПриИзменении(Форма, Элемент) Экспорт
	
	СтрокаПлатеж = Форма.Элементы.РасшифровкаВыручки.ТекущиеДанные;
	ПриходныйКассовыйОрдерФормыКлиентСервер.ПересчитатьСуммуНДС(СтрокаПлатеж);
	
КонецПроцедуры

Процедура РасшифровкаВыручкиСтавкаНДСПриИзменении(Форма, Элемент) Экспорт
	
	СтрокаПлатеж = ПриходныйКассовыйОрдерФормыКлиентСервер.РасшифровкаПлатежаТекущиеДанные(Форма, "РасшифровкаВыручки");
	
	ПриходныйКассовыйОрдерФормыКлиентСервер.ПересчитатьСуммуНДС(СтрокаПлатеж);
	
	Если ПриходныйКассовыйОрдерФормыКлиентСервер.ФормаДокументаОднострочная(Форма) Тогда
		ПриходныйКассовыйОрдерФормыКлиентСервер.ЗаполнитьРеквизитыРасшифровкаПлатежа(Форма, Истина, СтрокаПлатеж);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

Процедура ПоказатьКонтекстныеНовости(Форма, Команда) Экспорт
	
	ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаКомандыНовости(
		Форма,
		Команда
	);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеФункцииИПроцедуры

Процедура ПриИзмененииСубконто(Форма, НомерСубконто)
	
	Объект = Форма.Объект;
	
	БухгалтерскийУчетКлиентСервер.УстановитьСвойстваСубконтоШапкиПриИзмененииСубконто(
		Форма, Объект, НомерСубконто, ПриходныйКассовыйОрдерФормыКлиентСервер.ПараметрыУстановкиСвойствСубконто(Форма));
	
КонецПроцедуры

Процедура НачалоВыбораСубконто(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Объект = Форма.Объект;
	
	ДанныеОбъекта = БухгалтерскийУчетКлиентСервер.ДанныеУстановкиПараметровСубконто(
		Объект, ПриходныйКассовыйОрдерФормыКлиентСервер.ПараметрыУстановкиСвойствСубконто(Форма));
	
	ОбщегоНазначенияБПКлиент.НачалоВыбораЗначенияСубконто(Форма, Элемент, СтандартнаяОбработка, ДанныеОбъекта);
	
КонецПроцедуры

Функция ПроверитьЗаполнениеДляФормированияЧекаНПД(Форма) Экспорт
	
	Если Не Форма.ПлательщикНПД Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Объект = Форма.Объект;
	
	КонтрагентЗаполнен = ЗначениеЗаполнено(Объект.Контрагент)
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПКО.РозничнаяВыручка");
	Если Не КонтрагентЗаполнен Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Заполнение", НСтр("ru = 'Контрагент'"));
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "Контрагент", "Объект");
	КонецЕсли;
	
	УслугаНПДЗаполнена = Истина;
	КоличествоСтрок = Объект.РасшифровкаПлатежа.Количество();
	ОднострочнаяФорма = ПриходныйКассовыйОрдерФормыКлиентСервер.ФормаДокументаОднострочная(Форма);
	Если ОднострочнаяФорма И КоличествоСтрок = 1 Тогда
		Если Не ЗначениеЗаполнено(Форма.РасшифровкаПлатежаУслугаНПД) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Заполнение", НСтр("ru = 'Услуга'"));
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "РасшифровкаПлатежаУслугаНПД");
			УслугаНПДЗаполнена = Ложь;
		КонецЕсли;
	Иначе
		Для Индекс = 0 По Объект.РасшифровкаПлатежа.Количество() - 1 Цикл
			СтрокаПлатежа = Объект.РасшифровкаПлатежа[Индекс];
			Если Не ЗначениеЗаполнено(СтрокаПлатежа.УслугаНПД) Тогда
				УслугаНПДЗаполнена = Ложь;
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
					"Колонка",
					"Заполнение",
					НСтр("ru = 'Услуга'"),
					Индекс + 1,
					НСтр("ru = 'Расшифровка платежа'"));
				
				Если ОднострочнаяФорма Тогда
					ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "НадписьСуммаДокумента");
				Иначе
					ПутьКСтроке = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РасшифровкаПлатежа", Индекс + 1, "УслугаНПД");
					ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , ПутьКСтроке, "Объект");
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СуммаДокументаЗаполнена = ЗначениеЗаполнено(Объект.СуммаДокумента);
	Если Не СуммаДокументаЗаполнена Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Заполнение", НСтр("ru = 'Сумма'"));
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "СуммаДокумента", "Объект");
	КонецЕсли;
	
	Возврат КонтрагентЗаполнен И УслугаНПДЗаполнена И СуммаДокументаЗаполнена;
	
КонецФункции

Функция ОбрабатыватьОповещениеНаСервере(ИмяСобытия) Экспорт
	
	Возврат ИмяСобытия = "Запись_НастройкиСистемыНалогообложения";
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ЗАВЕРШЕНИЕ НЕМОДАЛЬНЫХ ВЫЗОВОВ

Процедура РасшифровкаПлатежаКурсВзаиморасчетовНачалоВыбораЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	
	СтрокаПлатеж = ДополнительныеПараметры.СтрокаПлатеж;
	
	СтруктураКурсаИКратности = РезультатЗакрытия;
	
	Если СтруктураКурсаИКратности <> Неопределено Тогда
		СтрокаПлатеж.КурсВзаиморасчетов      = СтруктураКурсаИКратности.КурсВалюты;
		СтрокаПлатеж.КратностьВзаиморасчетов = СтруктураКурсаИКратности.КратностьВалюты;
	КонецЕсли;
	
	ПриходныйКассовыйОрдерФормыКлиентСервер.РассчитатьСуммуВзаиморасчетов(СтрокаПлатеж, Форма);
	Форма.Модифицированность = Истина;
	
	Если ПриходныйКассовыйОрдерФормыКлиентСервер.ФормаДокументаОднострочная(Форма) Тогда
		ПриходныйКассовыйОрдерФормыКлиентСервер.ЗаполнитьРеквизитыРасшифровкаПлатежа(Форма, Истина, СтрокаПлатеж);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
