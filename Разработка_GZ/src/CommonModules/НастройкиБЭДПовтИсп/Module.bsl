
#Область СлужебныйПрограммныйИнтерфейс

// Формирует заполненную таблицу зависимостей констант
// 
// Возвращаемое значение:
//  ТаблицаЗначений - см. НастройкиБЭД.НовыйТаблицаЗависимостейКонстант
//
Функция ТаблицаЗависимостейКонстант() Экспорт
	
	ТаблицаЗависимостейКонстант = НастройкиБЭД.НовыйТаблицаЗависимостейКонстант();
	
	НастройкиБЭДСобытия.ПриФормированииТаблицыЗависимостейКонстант(ТаблицаЗависимостейКонстант);
	
	Возврат ТаблицаЗависимостейКонстант;
	
КонецФункции

// Возвращает структуру, описывающую "подчиненные" константы для указанной "родительской" константы.
//
//	Параметры:
//		ИмяРодительскойКонстанты 	  - Строка - имя константы как оно задано в конфигураторе
//		ЗначениеРодительскойКонстанты - Произвольный - значение константы.
//
//	Возвращаемое значение:
//		Структура
//			Ключ 	 - имя подчиненной константы
//			Значение - значение подчиненной константы, соответствующее значению родительской константы.
//
Функция ПолучитьДопустимыеЗначенияПодчиненныхКонстант(ИмяРодительскойКонстанты, ЗначениеРодительскойКонстанты) Экспорт
	
	Результат 		= Новый Структура;
	ТаблицаКонстант = НастройкиБЭДПовтИсп.ТаблицаЗависимостейКонстант();
	
	ПодчиненныеКонстанты = ТаблицаКонстант.НайтиСтроки(
		Новый Структура(
			"ИмяРодительскойКонстанты, ЗначениеРодительскойКонстанты",
			ИмяРодительскойКонстанты, ЗначениеРодительскойКонстанты));
	
	Для Каждого СтрокаТаблицы Из ПодчиненныеКонстанты Цикл
		Результат.Вставить(СтрокаТаблицы.ИмяПодчиненнойКонстанты, СтрокаТаблицы.ЗначениеПодчиненнойКонстанты);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
