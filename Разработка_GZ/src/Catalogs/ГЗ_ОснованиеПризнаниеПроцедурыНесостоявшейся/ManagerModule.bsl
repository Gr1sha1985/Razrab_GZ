
Функция СоздатьОснованиеПризнанияПроцедуры (ПараметрыСоздания) Экспорт
	СуществующееОснование = НайтиОснованиеПризнанияПоКодуГЗ(ПараметрыСоздания);
	
	Если Не ЗначениеЗаполнено(СуществующееОснование) Тогда
		ОснованиеПризнания = Справочники.ГЗ_ОснованиеПризнаниеПроцедурыНесостоявшейся.СоздатьЭлемент();
	//Иначе
	//	Площадка = СуществующаяПлощадка.ПолучитьОбъект();
	//	Площадка.Заблокировать();
	ЗаполнитьЗначенияСвойств(ОснованиеПризнания, ПараметрыСоздания);
	
	ОснованиеПризнания.Заполнить(ПараметрыСоздания);
	
	Если ОснованиеПризнания.ЭтоНовый() Тогда
		ОснованиеПризнания.Записать();
	КонецЕсли;
	
	СуществующееОснование = ОснованиеПризнания.Ссылка;

	КонецЕсли;
	
		
	Возврат СуществующееОснование;

КонецФункции

Функция НайтиОснованиеПризнанияПоКодуГЗ(ДанныеОснованияЗаполнения)
     СуществующееОснование = Справочники.ГЗ_ОснованиеПризнаниеПроцедурыНесостоявшейся.ПустаяСсылка();
	
	code = Неопределено;
	
	Если Не ДанныеОснованияЗаполнения.Свойство("code", code) Тогда
		Возврат СуществующееОснование;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ГЗ_ОснованиеПризнаниеПроцедурыНесостоявшейся.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ГЗ_ОснованиеПризнаниеПроцедурыНесостоявшейся КАК ГЗ_ОснованиеПризнаниеПроцедурыНесостоявшейся
		|ГДЕ
		|	ГЗ_ОснованиеПризнаниеПроцедурыНесостоявшейся.Код = &code";
	
	Запрос.УстановитьПараметр("code", ДанныеОснованияЗаполнения.code);
	
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		СуществующееОснование = Выборка.Ссылка;
	КонецЕсли;
		
	Возврат СуществующееОснование;

КонецФункции
