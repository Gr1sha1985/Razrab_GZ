#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


#Область СведенияОбОрганизации

Процедура СведенияОПодразделенияхНаДаты(ПодразделенияНаДаты, МенеджерВременныхТаблиц) Экспорт
	
	// Таблица ПодразделенияНаДаты содержит 2 колонки - "Подразделение" и "ДатаСведений".
	// Колонки должны быть типизированными: Подразделение = СправочникСсылка.ПодразделенияОрганизаций, ДатаСведений = Дата
	// В менеджере временных таблиц создается временная таблица СведенияОПодразделенияхНаДаты,
	// проиндексированная по колонкам "Подразделение" и "ДатаСведений".
	// Временная таблица содержит на каждую строку входящей таблицы одну строку с данными
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Параметры.Вставить("ПодразделенияНаДаты", ПодразделенияНаДаты);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПодразделенияНаДаты.Подразделение КАК Подразделение,
	|	ПодразделенияНаДаты.ДатаСведений КАК ДатаСведений
	|ПОМЕСТИТЬ ПодразделенияНаДаты
	|ИЗ
	|	&ПодразделенияНаДаты КАК ПодразделенияНаДаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодразделенияНаДаты.Подразделение КАК Подразделение,
	|	ПодразделенияНаДаты.ДатаСведений,
	|	МАКСИМУМ(ИсторияРегистрацийВНалоговомОргане.Период) КАК Период
	|ПОМЕСТИТЬ ДатыСведенийОПодразделениях
	|ИЗ
	|	ПодразделенияНаДаты КАК ПодразделенияНаДаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОргане КАК ИсторияРегистрацийВНалоговомОргане
	|		ПО ПодразделенияНаДаты.Подразделение = ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница
	|			И ПодразделенияНаДаты.ДатаСведений >= ИсторияРегистрацийВНалоговомОргане.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодразделенияНаДаты.Подразделение,
	|	ПодразделенияНаДаты.ДатаСведений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыСведенийОПодразделениях.Подразделение,
	|	ДатыСведенийОПодразделениях.ДатаСведений,
	|	Подразделения.НаименованиеПолное,
	|	ЕСТЬNULL(ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане.КПП, """") КАК КПП
	|ПОМЕСТИТЬ СведенияОПодразделенияхНаДаты
	|ИЗ
	|	ДатыСведенийОПодразделениях КАК ДатыСведенийОПодразделениях
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК Подразделения
	|		ПО ДатыСведенийОПодразделениях.Подразделение = Подразделения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОргане КАК ИсторияРегистрацийВНалоговомОргане
	|		ПО ДатыСведенийОПодразделениях.Подразделение = ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница
	|			И ДатыСведенийОПодразделениях.Период = ИсторияРегистрацийВНалоговомОргане.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОрганизацииНаДаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДатыСведенийОбОрганизациях";
	
	Результат = Запрос.Выполнить();
	
КонецПроцедуры

Функция КППНаДату(Подразделение, ДатаСведений) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Подразделение)
		ИЛИ ТипЗнч(Подразделение) <> Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаСведений) Тогда
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Подразделение, "КПП");
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Подразделение", Подразделение);
	Запрос.Параметры.Вставить("ДатаСведений", ДатаСведений);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(ИсторияРегистраций.Период) КАК Период,
	|	ИсторияРегистраций.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|ПОМЕСТИТЬ ДатаРегистрации
	|ИЗ
	|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане КАК ИсторияРегистраций
	|ГДЕ
	|	ИсторияРегистраций.СтруктурнаяЕдиница = &Подразделение
	|	И ИсторияРегистраций.Период <= &ДатаСведений
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсторияРегистраций.СтруктурнаяЕдиница
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтруктурнаяЕдиница,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияРегистраций.РегистрацияВНалоговомОргане.КПП КАК КПП
	|ИЗ
	|	ДатаРегистрации КАК ДатаРегистрации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОргане КАК ИсторияРегистраций
	|		ПО ДатаРегистрации.СтруктурнаяЕдиница = ИсторияРегистраций.СтруктурнаяЕдиница
	|			И ДатаРегистрации.Период = ИсторияРегистраций.Период";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.КПП;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

#КонецОбласти

// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

// Возвращает головную структурную единицу и массив подчиненных подразделений, для которых требуется тиражирование значения из головной структурной единицы
//
// Параметры:
//		СтруктурнаяЕдиница - Организация или подразделение для которых требуется получить подчиненные подразделения до первого обособленного
//
// Возвращаемое значение:
//		Структура
//			ГоловнаяСтруктурнаяЕдиница - Организация или подразделение - Вышестоящая структурная единица, из которой будет тиражироваться значение
//			ПодчиненныеСтруктурныеЕдиницы - Массив - Подчиненные подразделения, для которых будет установлено значение из вышестоящей структурной единицы
//
Функция ПодчиненныеПодразделения(СтруктурнаяЕдиница) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПодразделенияОрганизаций.Ссылка,
	|	ВЫБОР
	|		КОГДА ПодразделенияОрганизаций.Родитель = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА ПодразделенияОрганизаций.Владелец
	|		ИНАЧЕ ПодразделенияОрганизаций.Родитель
	|	КОНЕЦ КАК Родитель
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Организации.Ссылка,
	|	ВЫБОР
	|		КОГДА Организации.ГоловнаяОрганизация = Организации.Ссылка
	|			ТОГДА Организации.Ссылка
	|		ИНАЧЕ Организации.ГоловнаяОрганизация
	|	КОНЕЦ
	|ИЗ
	|	Справочник.Организации КАК Организации";
	
	ТаблицаПодчиненности = Новый ТаблицаЗначений;
	ТаблицаПодчиненности.Колонки.Добавить("Элемент", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций, СправочникСсылка.Организации"));
	ТаблицаПодчиненности.Колонки.Добавить("Родитель", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций, СправочникСсылка.Организации"));
	ТаблицаПодчиненности.Колонки.Добавить("Уровень", Новый ОписаниеТипов("Число"));
	
	СоответствиеПодчиненности = Новый Соответствие;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СоответствиеПодчиненности.Вставить(Выборка.Ссылка, Выборка.Родитель);
	КонецЦикла;
	
	Выборка.Сбросить();
	Пока Выборка.Следующий() Цикл
		Родитель = СоответствиеПодчиненности[Выборка.Ссылка];
		Уровень = 1;
		Пока Истина Цикл
			НоваяСтрока = ТаблицаПодчиненности.Добавить();
			НоваяСтрока.Элемент = Выборка.Ссылка;
			НоваяСтрока.Родитель = Родитель;
			НоваяСтрока.Уровень = Уровень;
			Если Выборка.Ссылка = Родитель Тогда
				НоваяСтрока.Уровень = 0;
				Прервать;
			КонецЕсли;
			ПредыдущийРодитель = Родитель;
			Родитель = СоответствиеПодчиненности[Родитель];
			Уровень = Уровень + 1;
			Если ПредыдущийРодитель = Родитель Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ТаблицаПодчиненности", ТаблицаПодчиненности);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПодчиненности.Элемент КАК ПодчиненнаяСтруктурнаяЕдиница,
	|	ТаблицаПодчиненности.Родитель КАК СтруктурнаяЕдиница,
	|	ТаблицаПодчиненности.Уровень
	|ПОМЕСТИТЬ ВТСтруктурныеЕдиницы
	|ИЗ
	|	&ТаблицаПодчиненности КАК ТаблицаПодчиненности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтруктурныеЕдиницы.ПодчиненнаяСтруктурнаяЕдиница,
	|	СтруктурныеЕдиницы.Уровень КАК Уровень
	|ПОМЕСТИТЬ ВТПодчиненныеПодразделенияИОрганизации
	|ИЗ
	|	ВТСтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|		ПО (ПодразделенияОрганизаций.ОбособленноеПодразделение)
	|			И СтруктурныеЕдиницы.СтруктурнаяЕдиница = ПодразделенияОрганизаций.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтруктурныеЕдиницы.ПодчиненнаяСтруктурнаяЕдиница,
	|	СтруктурныеЕдиницы.Уровень
	|ИЗ
	|	ВТСтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО СтруктурныеЕдиницы.СтруктурнаяЕдиница = Организации.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодчиненныеПодразделенияИОрганизации.ПодчиненнаяСтруктурнаяЕдиница,
	|	ЕСТЬNULL(Подразделения.ОбособленноеПодразделение, Организации.ОбособленноеПодразделение) КАК ОбособленноеПодразделение,
	|	МИНИМУМ(ПодчиненныеПодразделенияИОрганизации.Уровень) КАК Уровень
	|ПОМЕСТИТЬ ВТПодчиненныеСтруктурныеЕдиницы
	|ИЗ
	|	ВТПодчиненныеПодразделенияИОрганизации КАК ПодчиненныеПодразделенияИОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК Подразделения
	|		ПО ПодчиненныеПодразделенияИОрганизации.ПодчиненнаяСтруктурнаяЕдиница = Подразделения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО ПодчиненныеПодразделенияИОрганизации.ПодчиненнаяСтруктурнаяЕдиница = Организации.Ссылка
	|ГДЕ
	|	(Подразделения.Ссылка ЕСТЬ НЕ NULL 
	|			ИЛИ Организации.Ссылка ЕСТЬ НЕ NULL )
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодчиненныеПодразделенияИОрганизации.ПодчиненнаяСтруктурнаяЕдиница,
	|	ЕСТЬNULL(Подразделения.ОбособленноеПодразделение, Организации.ОбособленноеПодразделение)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтруктурныеЕдиницы.СтруктурнаяЕдиница
	|ПОМЕСТИТЬ ВТГоловнаяСтруктурнаяЕдиница
	|ИЗ
	|	ВТПодчиненныеСтруктурныеЕдиницы КАК ПодчиненныеСтруктурныеЕдиницы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|		ПО (ВЫБОР
	|				КОГДА ПодчиненныеСтруктурныеЕдиницы.ПодчиненнаяСтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|						И ПодчиненныеСтруктурныеЕдиницы.ПодчиненнаяСтруктурнаяЕдиница = СтруктурныеЕдиницы.СтруктурнаяЕдиница
	|						И (ПодчиненныеСтруктурныеЕдиницы.ОбособленноеПодразделение
	|							ИЛИ ПодчиненныеСтруктурныеЕдиницы.ПодчиненнаяСтруктурнаяЕдиница ССЫЛКА Справочник.Организации)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ПодчиненныеСтруктурныеЕдиницы.ПодчиненнаяСтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|						И НЕ ПодчиненныеСтруктурныеЕдиницы.ОбособленноеПодразделение
	|						И ПодчиненныеСтруктурныеЕдиницы.ПодчиненнаяСтруктурнаяЕдиница = СтруктурныеЕдиницы.ПодчиненнаяСтруктурнаяЕдиница
	|						И ПодчиненныеСтруктурныеЕдиницы.Уровень = СтруктурныеЕдиницы.Уровень
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	СтруктурныеЕдиницы.СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтруктурныеЕдиницы.ПодчиненнаяСтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|ИЗ
	|	ВТПодчиненныеСтруктурныеЕдиницы КАК ПодчиненныеСтруктурныеЕдиницы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТГоловнаяСтруктурнаяЕдиница КАК ГоловнаяСтруктурнаяЕдиница
	|			ПО СтруктурныеЕдиницы.СтруктурнаяЕдиница = ГоловнаяСтруктурнаяЕдиница.СтруктурнаяЕдиница
	|		ПО ПодчиненныеСтруктурныеЕдиницы.ПодчиненнаяСтруктурнаяЕдиница = СтруктурныеЕдиницы.ПодчиненнаяСтруктурнаяЕдиница
	|			И ПодчиненныеСтруктурныеЕдиницы.Уровень = СтруктурныеЕдиницы.Уровень
	|			И (НЕ ПодчиненныеСтруктурныеЕдиницы.ОбособленноеПодразделение)
	|			И (СтруктурныеЕдиницы.ПодчиненнаяСтруктурнаяЕдиница ССЫЛКА Справочник.ПодразделенияОрганизаций)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтруктурныеЕдиницы КАК СтруктурныеЕдиницы2
	|		ПО ПодчиненныеСтруктурныеЕдиницы.ПодчиненнаяСтруктурнаяЕдиница = СтруктурныеЕдиницы2.ПодчиненнаяСтруктурнаяЕдиница
	|			И (СтруктурныеЕдиницы2.СтруктурнаяЕдиница = &СтруктурнаяЕдиница)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГоловнаяСтруктурнаяЕдиница.СтруктурнаяЕдиница
	|ИЗ
	|	ВТГоловнаяСтруктурнаяЕдиница КАК ГоловнаяСтруктурнаяЕдиница";
	
	ПодчиненныеСтруктурныеЕдиницы = Новый Структура();
	ПодчиненныеСтруктурныеЕдиницы.Вставить("ГоловнаяСтруктурнаяЕдиница", Неопределено);
	ПодчиненныеСтруктурныеЕдиницы.Вставить("ПодчиненныеСтруктурныеЕдиницы", Неопределено);
	
	РезультатЗапросов = Запрос.ВыполнитьПакет();
	Выборка = РезультатЗапросов[РезультатЗапросов.Количество() - 1].Выбрать();
	Если Выборка.Следующий() Тогда
		Подчиненные = РезультатЗапросов[РезультатЗапросов.Количество() - 2].Выгрузить();
		ПодчиненныеСтруктурныеЕдиницы.Вставить("ГоловнаяСтруктурнаяЕдиница", Выборка.СтруктурнаяЕдиница);
		ПодчиненныеСтруктурныеЕдиницы.Вставить("ПодчиненныеСтруктурныеЕдиницы", Подчиненные.ВыгрузитьКолонку("СтруктурнаяЕдиница"));
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ПодчиненныеСтруктурныеЕдиницы;
	
КонецФункции

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Не Параметры.Отбор.Свойство("Владелец") Или Не ЗначениеЗаполнено(Параметры.Отбор.Владелец) Тогда
		
		Если Не Справочники.Организации.ИспользуетсяНесколькоОрганизаций() Тогда
			
			Параметры.Отбор.Вставить("Владелец",
				БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация"));
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#Область ИспользоватьНесколькоПодразделений

Процедура ПроверитьЗначениеОпцииИспользоватьНесколькоПодразделений(Владелец) Экспорт

	Если СервисЭлектронныхТрудовыхКнижек.ИспользуетсяСервисЭлектронныхТрудовыхКнижек() Тогда
		
		СервисЭлектронныхТрудовыхКнижек.УправлениеСпискомПодразделенийОрганизации();
		
	Иначе
		Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоПодразделений") И КоличествоПодразделений(Владелец) > 1 Тогда
			
			УстановитьПривилегированныйРежим(Истина);
			Константы.ИспользоватьНесколькоПодразделений.Установить(Истина);
			ОбновитьПовторноИспользуемыеЗначения();
			
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Функция КоличествоПодразделений(Владелец)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК Количество
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|ГДЕ
	|	ПодразделенияОрганизаций.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", Владелец);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Количество = Выборка.Количество;
	Иначе
		Количество = 0;
	КонецЕсли;
	
	Возврат Количество;
	
КонецФункции

Функция СоздатьОсновноеПодразделение(Организация, ОбменДаннымиЗагрузка = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПодразделенияОрганизаций.Ссылка
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|ГДЕ
	|	ПодразделенияОрганизаций.Владелец = &Организация";
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Подразделение = Справочники.ПодразделенияОрганизаций.СоздатьЭлемент();
	Подразделение.Владелец = Организация;
	Подразделение.Наименование = "Основное подразделение";
	// Ссылка владельца может быть еще не записана в режиме обмена данными.
	Подразделение.ОбменДанными.Загрузка = ОбменДаннымиЗагрузка;
	Подразделение.Записать();
	
	Возврат Подразделение.Ссылка;
		
КонецФункции

#КонецОбласти

#Область ПрограммныйИнтерфейс

Функция ОсновноеПодразделениеОрганизации(Организация, ОбменДаннымиЗагрузка = Ложь) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 2
	|	ПодразделенияОрганизаций.Ссылка
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|ГДЕ
	|	ПодразделенияОрганизаций.Владелец = &Организация";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Результат = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();

	Если Выборка.Количество() = 0 Тогда
		Результат = СоздатьОсновноеПодразделение(Организация, ОбменДаннымиЗагрузка);
	ИначеЕсли Выборка.Количество() = 1 И Выборка.Следующий() Тогда
		Результат = Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// ЗарплатаКадры

// см. ЗарплатаКадры.РегистрацияВНалоговомОрганеПодразделения();
Функция РегистрацияВНалоговомОргане(ПодразделениеОрганизации, Знач ДатаАктуальности = Неопределено) Экспорт
	
	Возврат УчетЗарплаты.РегистрацияВНалоговомОргане(ПодразделениеОрганизации, ДатаАктуальности);
	
КонецФункции

// см. ПодразделенияОрганизацийБЗК.ПодчиненныеСтруктурныеЕдиницы()
Функция ПодчиненныеСтруктурныеЕдиницы(СтруктурнаяЕдиница) Экспорт
	
	Возврат ПодразделенияОрганизацийБЗК.ПодчиненныеСтруктурныеЕдиницы(СтруктурнаяЕдиница);
	
КонецФункции

// см. ПодразделенияОрганизацийБЗК.ТекстЗапросаСравненияНаборовСтруктурныхЕдиниц();
Функция ТекстЗапросаСравненияНаборовСтруктурныхЕдиниц(ИмяРегистра, ИмяРеквизита) Экспорт
	
	Возврат ПодразделенияОрганизацийБЗК.ТекстЗапросаСравненияНаборовСтруктурныхЕдиниц(ИмяРегистра, ИмяРеквизита);
	
КонецФункции

// Конец ЗарплатаКадры

#КонецОбласти

#КонецЕсли

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"ПрисоединитьДополнительныеТаблицы
	|ЭтотСписок КАК ЭтотСписок
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОбособленныеПодразделения 
	|	ПО ОбособленныеПодразделения.ГоловнаяОрганизация = ЭтотСписок.Владелец.ГоловнаяОрганизация
	|;
	|РазрешитьЧтение
	|ГДЕ
	|	ЗначениеРазрешено(ОбособленныеПодразделения.Ссылка)
	|
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	|  ЗначениеРазрешено(ЭтотСписок.Владелец)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти
