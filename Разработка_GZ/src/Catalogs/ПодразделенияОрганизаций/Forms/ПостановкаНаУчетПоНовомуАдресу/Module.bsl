
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Параметры.Свойство("ПрежняяРегистрацияВНалоговомОргане", ПрежняяРегистрацияВНалоговомОргане);
	Если Не ЗначениеЗаполнено(ПрежняяРегистрацияВНалоговомОргане) Тогда
		ТекстОшибки = Нстр("ru='Ошибка при смене адреса: неверно указаны реквизиты регистрации в налоговом органе.
			|Проверьте правильность указания КПП и кода налоговой инспекции.'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	Параметры.Свойство("СтруктурнаяЕдиница", СтруктурнаяЕдиница);	
	Если Не ЗначениеЗаполнено(СтруктурнаяЕдиница) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("АктуальныйПериодИсторииРегистраций",	АктуальныйПериодИсторииРегистраций);
	Параметры.Свойство("АктуальныйПериодИсторииАдреса", 		АктуальныйПериодИсторииАдреса);
	Параметры.Свойство("КодНалоговогоОргана", 					КодНалоговогоОргана);
	
	ОбособленноеПодразделение = СтруктурнаяЕдиница.ОбособленноеПодразделение;
		
	ВидКонтактнойИнформацииАдреса = Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации;
	Если Параметры.Свойство("ВидКИ") Тогда
		ВидКонтактнойИнформацииАдреса = Параметры.ВидКИ;
	КонецЕсли;	
		
	Если Параметры.Свойство("ПрежнийАдрес") Тогда
		Адрес = Параметры.ПрежнийАдрес.ТекстРедактирования;
		НовыйАдрес = Параметры.ПрежнийАдрес.ТекстРедактирования;
		НовыйАдресЗначениеАдресаJSON = Параметры.ПрежнийАдрес.ЗначениеАдресаJSON;
	КонецЕсли;	
	
	КПП						= ПрежняяРегистрацияВНалоговомОргане.КПП;
	ДатаПостановкиНаУчет 	= ТекущаяДатаСеанса();
	ДатаСнятияСУчета 		= ДатаПостановкиНаУчет;
	
	// Установка списка выбора регионов
	КодРегионаРегистрации = Формат(РегистрацияВНалоговомОргане.КодРегиона, "ЧЦ=2; ЧН=; ЧВН=");
	НастройкиУчетаНалогаНаПрибыльФормы.НастроитьЭлементыУказанияРегиона(
		ТребуетсяУказаниеРегиона,
		Элементы.КодРегионаРегистрации.СписокВыбора,
		КодРегионаРегистрации);
		
	Если ЗначениеЗаполнено(КодНалоговогоОргана) Тогда
		КодНалоговогоОрганаПриИзмененииНаСервере();
	КонецЕсли;
	
	НастроитьРеквизитыПредставителя(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПерейтиНаШаг();
	УстановитьТекстПоясненияСнятиеСУчета();
	
	Если ЗначениеЗаполнено(НовыйКПП) Тогда
		ПроверитьСоответствиеТребованиямКПП();
	КонецЕсли;		
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ИмяОбработкиВводаКонтактнойИнформации = "Обработка.ВводКонтактнойИнформации";
	
	Если ТипЗнч(ИсточникВыбора) = Тип("ФормаКлиентскогоПриложения")
		И Лев(ИсточникВыбора.ИмяФормы, СтрДлина(ИмяОбработкиВводаКонтактнойИнформации)) = ИмяОбработкиВводаКонтактнойИнформации Тогда
		
		Возврат;
		
	ИначеЕсли ТипЗнч(ИсточникВыбора) = Тип("ФормаКлиентскогоПриложения")
			И ИсточникВыбора.ИмяФормы = "Справочник.РегистрацииВНалоговомОргане.Форма.ФормаПредставителя"
			И ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(РегистрацияВНалоговомОргане, ВыбранноеЗначение);
		НастроитьРеквизитыПредставителя(ЭтотОбъект);
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДатаСнятияСУчетаПриИзменении(Элемент)
	УстановитьТекстПоясненияСнятиеСУчета();
КонецПроцедуры

&НаКлиенте
Процедура НовыйКПППриИзменении(Элемент)
	ПриИзмененииКПП();
	УстановитьТекстПоясненияПостановкаНаУчет();
КонецПроцедуры

&НаКлиенте
Процедура НовыйАдресНажатие(Элемент, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормыКонтактнойИнформации = УправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(
		ВидКонтактнойИнформацииАдреса, НовыйАдресЗначениеАдресаJSON, НовыйАдрес, ,
		ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Адрес"));
	
	Оповещение = Новый ОписаниеОповещения("НовыйАдресНажатиеЗавершение", ЭтотОбъект);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыФормыКонтактнойИнформации,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПостановкиНаУчетПриИзменении(Элемент)
	
	УстановитьТекстПоясненияПостановкаНаУчет();
	Если НЕ ЗначениеЗаполнено(РегистрацияВНалоговомОргане.ДатаПостановкиНаУчет) Тогда
		РегистрацияВНалоговомОргане.ДатаПостановкиНаУчет = ДатаПостановкиНаУчет;
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииКПП()
		
	ПроверитьСоответствиеТребованиямКПП();
	
	Если НЕ КППСоответствуетТребованиям Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрДлина(НовыйКПП) >= 4 
		И ПустаяСтрока(КодНалоговогоОргана) Тогда
		
		КодНалоговогоОргана = Лев(НовыйКПП, 4);
		КодНалоговогоОрганаПриИзмененииНаСервере();
	Иначе
		УстановитьРегистрациюВНалоговомОргане();
	КонецЕсли;
	
	// После изменения регистрации, возможно, требуется вывести пояснение о закрытом КПП
	ОрганизацииФормыКлиентСервер.НастроитьПояснениеКПП(ЭтотОбъект);
	НастроитьРеквизитыПредставителя(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КодНалоговогоОрганаПриИзменении(Элемент)
	
	КодНалоговогоОрганаПриИзмененииНаСервере();
	ЗаполнитьСписокРегионов(Элементы.КодРегионаРегистрации);
	
КонецПроцедуры

&НаКлиенте
Процедура КодРегионаПриИзменении(Элемент)
	
	РегистрацияВНалоговомОргане.КодРегиона = КодРегионаРегистрации;
	
КонецПроцедуры

&НаКлиенте
Процедура КодРегионаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗаполнитьСписокРегионов(Элемент);
		
КонецПроцедуры

&НаКлиенте
Процедура ПлатежныеРеквизитыФНСПредставлениеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ВидГосударственногоОргана", ПредопределенноеЗначение("Перечисление.ВидыГосударственныхОрганов.НалоговыйОрган"));
	ПараметрыФормы.Вставить("КодГосударственногоОргана", КодНалоговогоОргана);
	ПараметрыФормы.Вставить("НаименованиеГосударственногоОргана", РегистрацияВНалоговомОргане.НаименованиеИФНС);
	ПараметрыФормы.Вставить("ТолькоПросмотр", ЭтотОбъект.ТолькоПросмотр);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьИзменениеПлатежныхРеквизитовФНС", ЭтотОбъект, ПараметрыФормы);
	
	ОткрытьФорму("Справочник.Контрагенты.Форма.ПлатежныеРеквизитыГосударственныхОрганов", ПараметрыФормы, ЭтотОбъект, ЭтотОбъект, , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетностьПодписываетПредставительПриИзменении(Элемент)
		
	Если ОтчетностьПодписываетПредставитель = 0 Тогда
		РегистрацияВНалоговомОргане.Представитель                   = Неопределено;
		РегистрацияВНалоговомОргане.УполномоченноеЛицоПредставителя = "";
		РегистрацияВНалоговомОргане.ДокументПредставителя           = "";
		РегистрацияВНалоговомОргане.Доверенность                    = "";
	КонецЕсли;
	
	НастроитьРеквизитыПредставителя(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПредставителяНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗначенияЗаполнения = Новый Структура("Владелец,Представитель,УполномоченноеЛицоПредставителя,ДокументПредставителя,Доверенность");
	ЗаполнитьЗначенияСвойств(ЗначенияЗаполнения, РегистрацияВНалоговомОргане);
	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Справочник.РегистрацииВНалоговомОргане.Форма.ФормаПредставителя", ПараметрыФормы, ЭтотОбъект, КлючУникальности);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Далее(Команда)
	
	Если НЕ ПроверитьЗаполнениеНаТекущемШаге() Тогда
		Возврат;
	КонецЕсли;	
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СнятиеСУчета Тогда
						
		Элементы.Страницы.ТекущаяСтраница = Элементы.НовыеРеквизиты;
		ПерейтиНаШаг();
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.НовыеРеквизиты Тогда
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.НалоговыйОрган;
		ПерейтиНаШаг();
		
	Иначе
		// Готово
		Если ЗаписатьДанныеРегистрации() Тогда
			
			Результат = Новый Структура;
			
			Результат.Вставить("НовыйКПП", НовыйКПП);
			Результат.Вставить("НовыйКодНалоговогоОргана", КодНалоговогоОргана);
			Результат.Вставить("ДатаПостановкиНаУчет", ДатаПостановкиНаУчет);
			Результат.Вставить("НовыйАдрес", НовыйАдрес);
			
			ДанныеАдреса = Новый Структура;
			ДанныеАдреса.Вставить("Вид", ВидКонтактнойИнформацииАдреса);
			ДанныеАдреса.Вставить("Представление", НовыйАдрес);
			ДанныеАдреса.Вставить("Значение", НовыйАдресЗначениеАдресаJSON);
			
			Результат.Вставить("ДанныеАдреса", ДанныеАдреса);
			
			Закрыть(Результат);
			
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.НовыеРеквизиты Тогда 
		Элементы.Страницы.ТекущаяСтраница = Элементы.СнятиеСУчета;
	Иначе
		Элементы.Страницы.ТекущаяСтраница = Элементы.НовыеРеквизиты;
	КонецЕсли;	
		
	ПерейтиНаШаг();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеквизитыНалоговогоОрганаПоКоду(Команда)
	
	Если НЕ ЗначениеЗаполнено(КодНалоговогоОргана) Тогда
		ПоказатьПредупреждение(, НСтр("ru='Поле ""Код инспекции"" не заполнено'"));
		ТекущийЭлемент = Элементы.КодНалоговогоОргана;
		Возврат;
	КонецЕсли;
	
	ВыполнитьЗаполнениеСведенийОНалоговойИнспекции();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ЗаписатьДанныеРегистрации()
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	НачатьТранзакцию();
	
		// Сначала запишем дату снятия с учета в прежнем налоговом органе
		Попытка
			ПрежняяРегистрацияОбъект = ПрежняяРегистрацияВНалоговомОргане.ПолучитьОбъект();
			ПрежняяРегистрацияОбъект.Заблокировать();
			ПрежняяРегистрацияОбъект.ДатаСнятияСУчета = ДатаСнятияСУчета;
			ПрежняяРегистрацияОбъект.Записать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Возникла ошибка при записи даты снятия с учета
			|'") + ОписаниеОшибки());
			
			ОтменитьТранзакцию();
			Возврат Ложь;
		КонецПопытки;	
	
		// Запишем новую регистрацию в налоговом органе
		Попытка
		
			Если ЗначениеЗаполнено(РегистрацияВНалоговомОргане.Ссылка)
				И ОбщегоНазначения.СсылкаСуществует(РегистрацияВНалоговомОргане.Ссылка)
				И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВНалоговомОргане.Ссылка, "ВерсияДанных")
					<> РегистрацияВНалоговомОргане.ВерсияДанных Тогда
				ОбъектРегистрации = РегистрацияВНалоговомОргане.Ссылка.ПолучитьОбъект();
				ЗаполнитьЗначенияСвойств(ОбъектРегистрации, РегистрацияВНалоговомОргане);
			Иначе
				ОбъектРегистрации = РеквизитФормыВЗначение("РегистрацияВНалоговомОргане");
			КонецЕсли;
			
			ОбъектРегистрации.Владелец = ВладелецРегистрации(ЭтотОбъект);
			ОбъектРегистрации.Записать();
			
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Возникла ошибка при записи реквизитов новой налоговой инспекции
			|'") + ОписаниеОшибки());
			
			ОтменитьТранзакцию();
			Возврат Ложь;
		КонецПопытки;	
		
	ЗафиксироватьТранзакцию();		
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ПроверитьСоответствиеТребованиямКПП()
	
	РезультатПроверки = ИдентификационныеНомераНалогоплательщиков.ПроверитьСоответствиеТребованиямКПП(
		НовыйКПП, 
		Истина, 
		ОбособленноеПодразделение,
		Ложь);
	
	КППСоответствуетТребованиям = РезультатПроверки.СоответствуетТребованиям;
	
	Если ЗначениеЗаполнено(РезультатПроверки.ОписаниеОшибки) Тогда
		ЦветВыделенияНекорректногоЗначения = ОбщегоНазначенияКлиент.ЦветСтиля("ЦветВыделенияКонтрагентаСОшибкой");
		НадписьПоясненияНекорректногоКПП = Новый ФорматированнаяСтрока(РезультатПроверки.ОписаниеОшибки, , ЦветВыделенияНекорректногоЗначения);
	Иначе
		НадписьПоясненияНекорректногоКПП = "";
	КонецЕсли;
	
	ОрганизацииФормыКлиентСервер.НастроитьПояснениеКПП(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекстПоясненияПостановкаНаУчет()
	
	Если Не ЗначениеЗаполнено(НовыйКПП) ИЛИ Не КППСоответствуетТребованиям Тогда
		Элементы.ПояснениеПостановкиНаУчет.Видимость = Ложь;
		Возврат;
	Иначе
		Элементы.ПояснениеПостановкиНаУчет.Видимость = Истина;		
	КонецЕсли; 
		
	ТекстПояснения = НСтр("ru = 'Организация встает на учет %1 по новому месту нахождения (КПП %2).'");
	ТекстПояснения = СтрШаблон(ТекстПояснения, Формат(ДатаПостановкиНаУчет, "ДФ=dd.MM.yyyy; ДП="), НовыйКПП);
	
	ПояснениеПостановкиНаУчет = Новый ФорматированнаяСтрока(ТекстПояснения,, ОбщегоНазначенияКлиент.ЦветСтиля("НадписьПоясняющаяГиперссылку"));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекстПоясненияСнятиеСУчета()
	
	ТекстПояснения = НСтр("ru = 'Деятельность организации по прежнему месту нахождения прекращается.
						|Организация снимается с учета %1 по КПП %2.'");
	ТекстПояснения = СтрШаблон(ТекстПояснения, Формат(ДатаСнятияСУчета, "ДФ=dd.MM.yyyy; ДП="), КПП);
	
	ПояснениеСнятиеСУчета = Новый ФорматированнаяСтрока(ТекстПояснения,, ОбщегоНазначенияКлиент.ЦветСтиля("НадписьПоясняющаяГиперссылку"));
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьЗаполнениеНаТекущемШаге()
	
	ЕстьОшибки = Ложь;
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СнятиеСУчета Тогда
				
		Если Не ЗначениеЗаполнено(ДатаСнятияСУчета) Тогда
			ТекстСообщения = НСтр("ru = 'До перехода на следующий шаг необходимо указать дату снятия с учета'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ДатаСнятияСУчета");
			ЕстьОшибки = Истина;
		КонецЕсли; 
				
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.НовыеРеквизиты Тогда
				
		Если Не ЗначениеЗаполнено(КПП) ИЛИ Не КППСоответствуетТребованиям Тогда
			ТекстСообщения = НСтр("ru = 'До перехода на следующий шаг необходимо указать корректный КПП'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "НовыйКПП");
			ЕстьОшибки = Истина;
		КонецЕсли; 
		
		Если Не ЗначениеЗаполнено(НовыйАдрес) Тогда
			ТекстСообщения = НСтр("ru = 'До перехода на следующий шаг необходимо указать новый адрес'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "НовыйАдрес");
			ЕстьОшибки = Истина;
		КонецЕсли; 
		
		Если Не ЗначениеЗаполнено(ДатаПостановкиНаУчет) Тогда
			ТекстСообщения = НСтр("ru = 'До перехода на следующий шаг необходимо указать дату постановки на учет'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ДатаПостановкиНаУчет");
			ЕстьОшибки = Истина;
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДатаПостановкиНаУчет) И ДатаПостановкиНаУчет < ДатаСнятияСУчета Тогда
			ТекстСообщения = НСтр("ru = 'Дата постановки на учет не может быть ранее даты снятия с учета (%1)'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, Формат(ДатаСнятияСУчета, "ДЛФ=D"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ДатаПостановкиНаУчет");
			ЕстьОшибки = Истина;
		КонецЕсли; 
		
		АдресИзменен = (СокрЛП(Адрес) <> СокрЛП(НовыйАдрес));
		
		Если АдресИзменен И ЗначениеЗаполнено(ДатаПостановкиНаУчет) И ДатаПостановкиНаУчет <= АктуальныйПериодИсторииАдреса Тогда
			ТекстСообщения = НСтр("ru = 'Дата постановки на учет должна быть больше даты последнего изменения адреса (%1)'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, Формат(АктуальныйПериодИсторииАдреса, "ДЛФ=D"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ДатаПостановкиНаУчет");
			ЕстьОшибки = Истина;
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДатаПостановкиНаУчет) И ДатаПостановкиНаУчет <= АктуальныйПериодИсторииРегистраций Тогда
			ТекстСообщения = НСтр("ru = 'Дата постановки на учет должна быть больше даты последнего изменения КПП (%1)'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, Формат(АктуальныйПериодИсторииРегистраций, "ДЛФ=D"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ДатаПостановкиНаУчет");
			ЕстьОшибки = Истина;
		КонецЕсли; 
						
	Иначе
		//Элементы.Страницы.ТекущаяСтраница = Элементы.НалоговыйОрган;
		
		Если ТребуетсяУказаниеРегиона 
			И ЗначениеЗаполнено(КодНалоговогоОргана)
			И (НЕ ЗначениеЗаполнено(КодРегионаРегистрации) ИЛИ КодРегионаРегистрации = "00") Тогда
			ТекстСообщения = НСтр("ru = 'Поле ""Регион"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "КодРегионаРегистрации");
			ЕстьОшибки = Истина;
		КонецЕсли; 
				
	КонецЕсли;	
	
	Возврат НЕ ЕстьОшибки;
	
КонецФункции

&НаКлиенте
Процедура ПерейтиНаШаг()
		
	ТекущаяСтраница = Элементы.Страницы.ТекущаяСтраница;
	
	Если ТекущаяСтраница = Элементы.СнятиеСУчета Тогда
		Заголовок = "Шаг 1 из 3.
		|Снятие с учета по прежнему месту нахождения";
		Элементы.Далее.Заголовок = "Далее";
		Элементы.Назад.Видимость = Ложь;		
	ИначеЕсли ТекущаяСтраница = Элементы.НовыеРеквизиты Тогда
		Заголовок = "Шаг 2 из 3.
		|Данные нового места нахождения";
		Элементы.Далее.Заголовок = "Далее";
		Элементы.Назад.Видимость = Истина;		
	Иначе
		Заголовок = "Шаг 3 из 3.
		|Реквизиты налоговой инспекции по новому месту нахождения";
		Элементы.Далее.Заголовок = "Готово";
		Элементы.Назад.Видимость = Истина;
	КонецЕсли;		

КонецПроцедуры

&НаСервере
Процедура КодНалоговогоОрганаПриИзмененииНаСервере()
	
	УстановитьРегистрациюВНалоговомОргане();
	
	Если ЗначениеЗаполнено(КодНалоговогоОргана) Тогда
		Ошибка = "";
		ЗаполнитьСведенияОНалоговойИнспекцииПоКоду(Ошибка);
		Если ЗначениеЗаполнено(Ошибка) Тогда
			// Определить реквизиты налогового органа по данным веб-сервиса не удалось
			// Нужно определить платежные реквизиты по данным информационной базы
			УстановитьПредставлениеПлатежныхРеквизитов(Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган, КодНалоговогоОргана, 
					ПлатежныеРеквизитыФНСПредставление);
		КонецЕсли;
	Иначе
		ПлатежныеРеквизитыФНСПредставление  = ДанныеГосударственныхОрганов.ПредставлениеПлатежныхРеквизитовГосударственногоОргана(Неопределено);
	КонецЕсли;
	
	НастроитьРеквизитыПредставителя(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область РегистрацияВНалоговомОргане

&НаКлиентеНаСервереБезКонтекста
Функция ВладелецРегистрации(Форма)
	
	СтруктурнаяЕдиница = Форма.СтруктурнаяЕдиница;
	
	Если ТипЗнч(СтруктурнаяЕдиница) = Тип("СправочникСсылка.Организации") Тогда
		Возврат ?(СтруктурнаяЕдиница.ОбособленноеПодразделение, СтруктурнаяЕдиница.ГоловнаяОрганизация, СтруктурнаяЕдиница);
	Иначе
		Возврат СтруктурнаяЕдиница.Владелец.ГоловнаяОрганизация;
	КонецЕсли;	
		
КонецФункции

&НаСервере
Процедура УстановитьРегистрациюВНалоговомОргане()
	
	ВладелецРегистрации = ВладелецРегистрации(ЭтотОбъект);
	
	Если НовыйКПП = РегистрацияВНалоговомОргане.КПП
		И КодНалоговогоОргана = РегистрацияВНалоговомОргане.Код 
		И ВладелецРегистрации = РегистрацияВНалоговомОргане.Владелец Тогда
		//регистрация в налоговом органе подходит, не нужно ничего изменять
		Возврат;
	КонецЕсли;
	
	СуществующаяРегистрация = Справочники.РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане(ВладелецРегистрации, НовыйКПП, КодНалоговогоОргана);
	
	Если ЗначениеЗаполнено(СуществующаяРегистрация) Тогда
		ОбновитьРегистрациюВНалоговомОргане(ЭтотОбъект, НовыйКПП, КодНалоговогоОргана, СуществующаяРегистрация);
	Иначе
		УстановитьНовуюРегистрацию(ЭтотОбъект, ВладелецРегистрации, НовыйКПП, КодНалоговогоОргана);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьРегистрациюВНалоговомОргане(Форма, КПП, КодНалоговогоОргана, НоваяРегистрация)
	
	Форма.ЗначениеВРеквизитФормы(НоваяРегистрация.ПолучитьОбъект(), "РегистрацияВНалоговомОргане");
	
	//Установим КПП и код налогового органа из обновленной регистрации
	Если КПП <> Форма.РегистрацияВНалоговомОргане.КПП Тогда
		КПП = Форма.РегистрацияВНалоговомОргане.КПП;
	КонецЕсли;
	
	Если КодНалоговогоОргана <> Форма.РегистрацияВНалоговомОргане.Код Тогда
		КодНалоговогоОргана = Форма.РегистрацияВНалоговомОргане.Код;
	КонецЕсли;
	
	Форма.ОтчетностьПодписываетПредставитель = ?(ЗначениеЗаполнено(Форма.РегистрацияВНалоговомОргане.Представитель), 1, 0);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьНовуюРегистрацию(Форма, ВладелецРегистрации, КПП, КодНалоговогоОргана) Экспорт
	
	СвойстваПредставителя = Новый Структура("Доверенность, ДокументПредставителя, Представитель, УполномоченноеЛицоПредставителя");
	ЗаполнитьЗначенияСвойств(СвойстваПредставителя, Форма.РегистрацияВНалоговомОргане);
	
	КодыОКТМО = Новый Структура("КодПоОКТМО, КодПоОКАТО");
	ЗаполнитьЗначенияСвойств(КодыОКТМО, Форма.РегистрацияВНалоговомОргане);
	
	РеквизитыНалоговогоОргана = Новый Структура("Код, Наименование, НаименованиеИФНС");
	ЗаполнитьЗначенияСвойств(РеквизитыНалоговогоОргана, Форма.РегистрацияВНалоговомОргане);
	
	Форма.ЗначениеВРеквизитФормы(Справочники.РегистрацииВНалоговомОргане.СоздатьЭлемент(), "РегистрацияВНалоговомОргане");
	Форма.РегистрацияВНалоговомОргане.Владелец = ВладелецРегистрации;
	Форма.РегистрацияВНалоговомОргане.КПП      = КПП;
	Форма.РегистрацияВНалоговомОргане.Код      = КодНалоговогоОргана;
	Форма.КодРегионаРегистрации                  = ДанныеГосударственныхОрганов.КодРегионаПоКодуНалоговогоОргана(КодНалоговогоОргана);
	Форма.РегистрацияВНалоговомОргане.КодРегиона = Форма.КодРегионаРегистрации;
	Если РеквизитыНалоговогоОргана.Код = Форма.РегистрацияВНалоговомОргане.Код Тогда
		ЗаполнитьЗначенияСвойств(Форма.РегистрацияВНалоговомОргане, РеквизитыНалоговогоОргана);
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(Форма.РегистрацияВНалоговомОргане, СвойстваПредставителя);
	ЗаполнитьЗначенияСвойств(Форма.РегистрацияВНалоговомОргане, КодыОКТМО);
	
	Форма.РегистрацияВНалоговомОргане.ДатаПостановкиНаУчет = Форма.ДатаПостановкиНаУчет;
	
	Форма.ОтчетностьПодписываетПредставитель = ?(ЗначениеЗаполнено(Форма.РегистрацияВНалоговомОргане.Представитель), 1, 0);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСведенияОНалоговойИнспекцииПоКоду(ОписаниеОшибки = "", ПерезаполнятьСведения = Ложь)
	
	Если НЕ ЗначениеЗаполнено(КодНалоговогоОргана) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыНалоговогоОргана = ДанныеГосударственныхОрганов.РеквизитыНалоговогоОрганаПоКоду(КодНалоговогоОргана);
	
	Если ЗначениеЗаполнено(РеквизитыНалоговогоОргана.ОписаниеОшибки) Тогда
		ОписаниеОшибки = РеквизитыНалоговогоОргана.ОписаниеОшибки;
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(РеквизитыНалоговогоОргана.Ссылка)
		ИЛИ ПерезаполнятьСведения Тогда
		ДанныеГосударственныхОрганов.ОбновитьДанныеГосударственногоОргана(РеквизитыНалоговогоОргана);
	КонецЕсли;
		
	ПлатежныеРеквизитыФНСПредставление = ДанныеГосударственныхОрганов.ПредставлениеПлатежныхРеквизитовГосударственногоОргана(РеквизитыНалоговогоОргана);
	
	РегистрацияВНалоговомОргане.Наименование     = РеквизитыНалоговогоОргана.Наименование;
	РегистрацияВНалоговомОргане.НаименованиеИФНС = РеквизитыНалоговогоОргана.ПолноеНаименование;
	КодРегионаРегистрации                        = ДанныеГосударственныхОрганов.КодРегионаПоКодуНалоговогоОргана(КодНалоговогоОргана);
	РегистрацияВНалоговомОргане.КодРегиона 		 = КодРегионаРегистрации;
	
	// Если заполнен адрес, заполним и реквизиты ОКТМО и ОКАТО
	Если НЕ ПустаяСтрока(НовыйАдрес) Тогда
		
		СведенияОНалоговомОргане = СведенияОНалоговомОрганеПоАдресу(НовыйАдресЗначениеАдресаJSON);
		Если СведенияОНалоговомОргане <> Неопределено Тогда
			РегистрацияВНалоговомОргане.КодПоОКАТО = СведенияОНалоговомОргане.КодПоОКАТО;
			РегистрацияВНалоговомОргане.КодПоОКТМО = СведенияОНалоговомОргане.КодПоОКТМО;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СведенияОНалоговомОрганеПоАдресу(НовыйАдресЗначениеАдресаJSON)
	
	Если НЕ ЗначениеЗаполнено(НовыйАдресЗначениеАдресаJSON) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СведенияОНалоговомОрганеПоАдресу = АдресныйКлассификатор.КодыАдреса(НовыйАдресЗначениеАдресаJSON, "Сервис1С");
	
	КодНалоговогоОрганаПоАдресу = Формат(СведенияОНалоговомОрганеПоАдресу.КодИФНСЮЛ, "ЧЦ=4; ЧДЦ=; ЧВН=; ЧГ=0");
	
	Если ЗначениеЗаполнено(КодНалоговогоОрганаПоАдресу) Тогда
		
		Сведения = Новый Структура();
		Сведения.Вставить("КодНалоговогоОргана", КодНалоговогоОрганаПоАдресу);
		Сведения.Вставить("КодПоОКТМО", Формат(СведенияОНалоговомОрганеПоАдресу.ОКТМО, "ЧДЦ=; ЧГ=0"));
		Сведения.Вставить("КодПоОКАТО", Формат(СведенияОНалоговомОрганеПоАдресу.ОКАТО, "ЧДЦ=; ЧГ=0"));
		
		Возврат Сведения;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьЗаполнениеСведенийОНалоговойИнспекции()
	
	ОписаниеОшибки = "";
	ПерезаполнятьСведения = Истина;
	ЗаполнитьСведенияОНалоговойИнспекцииПоКоду(ОписаниеОшибки, ПерезаполнятьСведения);
	
	// Обработка ошибок
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		Если ОписаниеОшибки = "НеУказаныПараметрыАутентификации" Тогда
			
			ТекстВопроса = НСтр("ru='Для автоматического заполнения реквизитов контрагентов
				|необходимо подключиться к Интернет-поддержке пользователей.
				|Подключиться сейчас?'");
				
			ПараметрыВопроса = Новый Структура("ВызовПослеПодключения", "ЗаполнитьСведенияОНалоговойИнспекцииПоКоду");
			ОписаниеОповещения = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержку", ЭтотОбъект, ПараметрыВопроса);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			
		ИначеЕсли ОписаниеОшибки = "Сервис1СКонтрагентНеПодключен" Тогда
			
			ИдентификаторМестаВызова = ?(ТипЗнч(СтруктурнаяЕдиница) = Тип("СправочникСсылка.Организации"), "organizaciya", "podrazdelenie");
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("ИдентификаторМестаВызова", ИдентификаторМестаВызова);
			ОткрытьФорму("ОбщаяФорма.Сервис1СКонтрагентНеПодключен", ПараметрыФормы, ЭтотОбъект);
			
		Иначе
			ПоказатьПредупреждение(, ОписаниеОшибки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьИнтернетПоддержку(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержкуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(Оповещение);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПодключитьИнтернетПоддержкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		Если ДополнительныеПараметры.Свойство("ВызовПослеПодключения") Тогда
			
			Если ДополнительныеПараметры.ВызовПослеПодключения = "ЗаполнитьСведенияОНалоговойИнспекцииПоКоду" Тогда
				
				ЗаполнитьСведенияОНалоговойИнспекцииПоКоду();
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеквизитыНалоговойИнспекцииПоКодуЗавершение(РезультатыЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатыЗакрытия = КодВозвратаДиалога.Да Тогда
		
		КодНалоговогоОргана = ДополнительныеПараметры.КодНалоговогоОргана;
		УстановитьРегистрациюВНалоговомОргане();
		ЗаполнитьСведенияОНалоговойИнспекцииПоКоду();
		РегистрацияВНалоговомОргане.КодПоОКАТО = ДополнительныеПараметры.КодПоОКАТО;
		РегистрацияВНалоговомОргане.КодПоОКТМО = ДополнительныеПараметры.КодПоОКТМО;
		НастроитьРеквизитыПредставителя(ЭтотОбъект);
		
		ПроверитьСоответствиеТребованиямКПП();
		УстановитьТекстПоясненияПостановкаНаУчет();
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьРеквизитыПредставителя(Форма)
	
	Элементы = Форма.Элементы;
	
	// Группа элементов представителя для предоставления отчетности
	Элементы.ПредставлениеПредставителя.Видимость = Форма.ОтчетностьПодписываетПредставитель = 1;
	Элементы.НадписьПредставительНеВыбран.Видимость = Форма.ОтчетностьПодписываетПредставитель = 0;
	
	Если НЕ ЗначениеЗаполнено(Форма.РегистрацияВНалоговомОргане.Представитель) Тогда
		Форма.ПредставлениеПредставителя = НСтр("ru = 'Заполнить'");
	ИначеЕсли ТипЗнч(Форма.РегистрацияВНалоговомОргане.Представитель) = Тип("СправочникСсылка.ФизическиеЛица")
		ИЛИ НЕ ЗначениеЗаполнено(Форма.РегистрацияВНалоговомОргане.УполномоченноеЛицоПредставителя) Тогда
		Форма.ПредставлениеПредставителя = Форма.РегистрацияВНалоговомОргане.Представитель;
	ИначеЕсли ТипЗнч(Форма.РегистрацияВНалоговомОргане.Представитель) = Тип("СправочникСсылка.Контрагенты") Тогда
		Форма.ПредставлениеПредставителя = Форма.РегистрацияВНалоговомОргане.УполномоченноеЛицоПредставителя + " (" + Форма.РегистрацияВНалоговомОргане.Представитель + ")";
	КонецЕсли;
	
КонецПроцедуры
	
&НаКлиенте
Процедура ЗаполнитьСписокРегионов(Элемент)
	
	// В списке выбора региона может быть 1 элемент, который был заполнен при открытии формы
	// В этом случае требуется заполнить список выбора полностью
	// Если элементов более 1, то считаем, что список уже заполнен полностью
	Если НЕ ТребуетсяУказаниеРегиона ИЛИ Элемент.СписокВыбора.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;	
	
	СписокРегионов = Новый СписокЗначений;
	ЗаполнитьСписокРегионовСервер(ТребуетсяУказаниеРегиона, СписокРегионов);
	
	// Чтобы избежать дублирования элементов, очищаем список выбора в поле формы
	Элемент.СписокВыбора.Очистить();
	
	Для каждого Регион Из СписокРегионов Цикл
		Элемент.СписокВыбора.Добавить(Регион.Значение, Регион.Представление);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьСписокРегионовСервер(ТребуетсяУказаниеРегиона, СписокРегионов)
	НастройкиУчетаНалогаНаПрибыльФормы.НастроитьЭлементыУказанияРегиона(ТребуетсяУказаниеРегиона, СписокРегионов);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеПлатежныхРеквизитовФНС(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = Истина Тогда
		
		УстановитьПредставлениеПлатежныхРеквизитов(
			ДопПараметры.ВидГосударственногоОргана,
			ДопПараметры.КодГосударственногоОргана,
			ПлатежныеРеквизитыФНСПредставление);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеПлатежныхРеквизитов(Вид, Код, ПлатежныеРеквизитыПредставление)
	
	Если Не ПравоДоступа("Просмотр", Метаданные.Справочники.БанковскиеСчета) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Код) Тогда
		ГосударственныйОрган = ДанныеГосударственныхОрганов.ГосударственныйОрган(Вид, Код);
	Иначе
		ГосударственныйОрган = Неопределено;
	КонецЕсли;
	
	ПлатежныеРеквизитыПредставление = ДанныеГосударственныхОрганов.ПредставлениеПлатежныхРеквизитовГосударственногоОргана(ГосударственныйОрган);
	
КонецПроцедуры

#КонецОбласти

#Область КонтактнаяИнформация

&НаКлиенте
Процедура НовыйАдресНажатиеЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт 
	
	Если ТипЗнч(РезультатЗакрытия) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если РезультатЗакрытия.Представление <> НовыйАдрес Тогда
		
		НовыйАдрес = РезультатЗакрытия.Представление;
		НовыйАдресЗначениеАдресаJSON = РезультатЗакрытия.Значение;
		
		ПриИзмененииАдреса();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииАдреса()
	
	СведенияОНалоговомОргане = СведенияОНалоговомОрганеПоАдресу(НовыйАдресЗначениеАдресаJSON);
	
	Если СведенияОНалоговомОргане <> Неопределено Тогда
		
		Если ЗначениеЗаполнено(СведенияОНалоговомОргане.КодНалоговогоОргана) Тогда
			
			Если НЕ ЗначениеЗаполнено(КодНалоговогоОргана) Тогда
				
				ЗаполнитьРеквизитыНалоговойИнспекцииПоКодуЗавершение(КодВозвратаДиалога.Да, СведенияОНалоговомОргане);
				
			ИначеЕсли СведенияОНалоговомОргане.КодНалоговогоОргана = КодНалоговогоОргана Тогда
				
				//Налоговая инспекция не изменилась
				Если НЕ ЗначениеЗаполнено(РегистрацияВНалоговомОргане.КодПоОКАТО) Тогда
					РегистрацияВНалоговомОргане.КодПоОКАТО = СведенияОНалоговомОргане.КодПоОКАТО;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(РегистрацияВНалоговомОргане.КодПоОКТМО) Тогда
					РегистрацияВНалоговомОргане.КодПоОКТМО = СведенияОНалоговомОргане.КодПоОКТМО;
				КонецЕсли;
				
			Иначе
				
				ТекстВопроса = НСтр("ru = 'Выбранный адрес обслуживается налоговой инспекцией с кодом %1.
											|Заменить налоговую инспекцию?'");
				ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, СведенияОНалоговомОргане.КодНалоговогоОргана);
				ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьРеквизитыНалоговойИнспекцииПоКодуЗавершение", ЭтотОбъект, СведенияОНалоговомОргане);
				ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
				
КонецПроцедуры

#КонецОбласти
