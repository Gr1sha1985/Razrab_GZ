// Форма предназначена только для записанного элемента справочника.

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Первоначальная настройка формы.
	ОрганизацииФормыДляОтчетности.НастроитьЭлементыКонтактнойИнформации(ЭтотОбъект);
	ОрганизацииФормыДляОтчетности.НастроитьЭлементыСистемыНалогообложения(УсловноеОформление);
	
	ОрганизацииФормыДляОтчетности.УстановитьПроверяемыеДанные(
		Объект.Ссылка,
		Параметры.ПроверяемыеРеквизиты,
		Параметры.Контекст,
		АдресПроверяемыеДанные,
		УникальныйИдентификатор);
	ОрганизацииФормыДляОтчетности.НастроитьПроверяемыеРеквизиты(ЭтотОбъект, АдресПроверяемыеДанные);
	
	// В форму могли передать данные для заполнения.
	Если Параметры.Свойство("ПоискИННОтвет") Тогда
		
		Объект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
		
		ЗаполнитьДаннымиЕГР(Параметры.ПоискИННОтвет);
		
		ПроверитьИНН(ПояснениеНекорректныйИНН, Объект.ИНН);
		
	КонецЕсли;
	
	ПрименяютсяАнтикризисныеМеры = ДеятельностьОтнесенаКПострадавшимОтКоронавируса(Объект.Ссылка);
	
	ОрганизацииФормыДляОтчетностиКлиентСервер.УстановитьВидимостьПодсказкиОКВЭД2(ЭтотОбъект);
	
	НастроитьРеквизитыИнтеграцияСБанком();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	НастроитьКомандыАвтозаполнения();
	
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, Объект);
	
	ОрганизацииФормыДляОтчетности.ПрочитатьСистемуНалогообложения(СистемаНалогообложенияПредставление, Объект.Ссылка);
	
	ОрганизацииФормыДляОтчетности.ПрочитатьДанныеНалоговогоОргана(
		Объект.РегистрацияВНалоговомОргане,
		ЭтотОбъект,
		ПоляРегистрацииВНалоговомОргане());
	
	ПроверитьИНН(ПояснениеНекорректныйИНН, Объект.ИНН);
	ПояснениеНекорректныйКодПоОКТМО = ОрганизацииФормыДляОтчетностиКлиентСервер.ПроверитьКодПоОКТМО(КодПоОКТМО);
	
	// ПриЧтенииНаСервере может быть выполнено до ПриСозданииНаСервере, а может быть и не выполнено.
	// Поэтому установка проверяемых данных предусмотрена в обоих обработчиках.
	// Однако фактический разбор переданного параметра выполняется только один раз.
	
	Если Параметры.Свойство("ПроверяемыеРеквизиты") И Параметры.Свойство("Контекст") Тогда
		ОрганизацииФормыДляОтчетности.УстановитьПроверяемыеДанные(
			Объект.Ссылка,
			Параметры.ПроверяемыеРеквизиты,
			Параметры.Контекст,
			АдресПроверяемыеДанные,
			УникальныйИдентификатор);
		ВключитьИПИспользуетТрудНаемныхРаботников = НадоВключитьИПИспользуетТрудНаемныхРаботников(АдресПроверяемыеДанные);
		НастроитьЭлементыПриИспользованииТрудаНаемныхРаботников();
	КонецЕсли;
	
	ОрганизацииФормыДляОтчетностиКлиентСервер.УстановитьВидимостьПодсказкиОКВЭД2(ЭтотОбъект);
	
	НастроитьРеквизитыИнтеграцияСБанком();
	
	ОрганизацииФормыДляОтчетностиКлиентСервер.УстановитьЗаголовокФормы(ЭтотОбъект, ВыводитьПодсказкуВЗаголовок);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)

	ОрганизацииФормыДляОтчетности.ПроверитьЗаполнение(ЭтотОбъект, ПроверяемыеРеквизиты, АдресПроверяемыеДанные, Отказ);
	
	Если Элементы.КодПоОКТМО.Видимость Тогда
		ОрганизацииФормыДляОтчетности.ПроверитьКодПоОКТМОНаФорме(КодПоОКТМО, "КодПоОКТМО", Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеУчетнойПолитики" Тогда
		УстановитьПредставлениеСистемыНалогообложения(Объект.Ссылка);
	ИначеЕсли ИмяСобытия = "Запись_НастройкиПродленияСроковНалоговОтчетов"
		И ТипЗнч(Параметр) = Тип("Структура")
		И Параметр.Свойство("Организация") И Параметр.Организация = Объект.Ссылка Тогда
		
		ПрименяютсяАнтикризисныеМеры = ДеятельностьОтнесенаКПострадавшимОтКоронавируса(Объект.Ссылка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ОрганизацииФормыДляОтчетности.ПередЗаписьюКонтактнойИнформации(ЭтотОбъект, ТекущийОбъект, Отказ);
	
	ЗначенияКлючевыхПолейРегистрацииНаФорме = ОрганизацииФормыДляОтчетности.ЗначенияПолейРегистрацииВНалоговомОргане(
		ЭтотОбъект,
		ПоляРегистрацииВНалоговомОргане(Истина));
	
	ОрганизацииФормыДляОтчетности.НачатьЗаписьРеквизитовГосударственныхОрганов(
		ТекущийОбъект,
		ЗначенияКлючевыхПолейРегистрацииНаФорме);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ЗначенияПолейРегистрацииНаФорме = ОрганизацииФормыДляОтчетности.ЗначенияПолейРегистрацииВНалоговомОргане(
		ЭтотОбъект,
		ПоляРегистрацииВНалоговомОргане(Ложь));
	
	ОрганизацииФормыДляОтчетности.ЗаписатьРегистрациюВНалоговомОргане(
		ТекущийОбъект,
		ЗначенияПолейРегистрацииНаФорме);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	УправлениеКонтактнойИнформацией.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	СозданаУчетнаяПолитика = Ложь;
	РезультатВыполнения = КалендарьБухгалтера.ЗапуститьЗаполнениеВФоне(УникальныйИдентификатор, ТекущийОбъект.Ссылка, СозданаУчетнаяПолитика);
	ПараметрыЗаписи.Вставить("РезультатВыполненияЗаданияКалендаряБухгалтера", РезультатВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОрганизацииФормыДляОтчетностиКлиентСервер.УстановитьЗаголовокФормы(ЭтотОбъект, ВыводитьПодсказкуВЗаголовок);
	
	Если ПараметрыЗаписи.Свойство("РезультатВыполненияЗаданияКалендаряБухгалтера") Тогда
		КалендарьБухгалтераКлиент.ОжидатьЗавершениеЗаполненияВФоне(ПараметрыЗаписи.РезультатВыполненияЗаданияКалендаряБухгалтера);
	КонецЕсли;
	
	ОрганизацииФормыДляОтчетностиКлиент.ОповеститьОЗаписи(Объект.Ссылка, ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийПолейФормы

&НаКлиенте
Процедура ФамилияИППриИзменении(Элемент)
	
	ОрганизацииФормыКлиент.ФИОПриИзменении(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяИППриИзменении(Элемент)
	
	ОрганизацииФормыКлиент.ФИОПриИзменении(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчествоИППриИзменении(Элемент)
	
	ОрганизацииФормыКлиент.ФИОПриИзменении(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеПоискаИННПриИзменении(Элемент)
	
	ПоискИННОтвет = ОрганизацииФормыДляОтчетностиВызовСервера.ЗапроситьДанныеЕГР(НовыйЗапросДанныхЕГР(ПоискИННЗапрос));
		
	// Пользователь сразу после изменения поля мог нажать команду "Заполнить".
	// Дадим возможность выполниться обработчику команды заполнения.
	// Поэтому фактическую обработку результата выполняем после обработчика изменения поля.
	ПодключитьОбработчикОжидания("Подключаемый_ОбработатьРезультатПоискаИНН", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработатьРезультатПоискаИНН()
	
	ОрганизацииФормыДляОтчетностиКлиент.ОбработатьРезультатПоискаИННПриИзмененииПоляПоиска(
		ПоискИННОтвет,
		ОписаниеОповещенияЗакончитьЗаполнениеДаннымиЕГР());
	
КонецПроцедуры

&НаКлиенте
Процедура ИННПриИзменении(Элемент)
	
	ПроверитьИНН(ПояснениеНекорректныйИНН, Объект.ИНН);
	
КонецПроцедуры

&НаКлиенте
Процедура КодПоОКТМОПриИзменении(Элемент)
	
	ПояснениеНекорректныйКодПоОКТМО = ОрганизацииФормыДляОтчетностиКлиентСервер.ПроверитьКодПоОКТМО(КодПоОКТМО);
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформацияПолеТелефонОрганизацииПриИзменении(Элемент)
	
	УправлениеКонтактнойИнформациейКлиент.НачатьИзменение(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформацияПолеЮрАдресОрганизацииНажатие(Элемент, СтандартнаяОбработка)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Заголовок", ОрганизацииФормыКлиентСервер.ЗаголовокАдресаФизЛица());
	
	УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент, Модифицированность, СтандартнаяОбработка, ПараметрыОткрытия);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКонтактнуюИнформацию(Результат)
	
	// Обязательный обработчик подсистемы контактной информации
	
	Если Результат.Свойство("ИмяРеквизита")
		И Результат.ИмяРеквизита = "КонтактнаяИнформацияПолеЮрАдресОрганизации" Тогда
		
		ЗаполнитьПоАдресу();
		
	КонецЕсли;
	
	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
	
	ПояснениеНекорректныйКодПоОКТМО = ОрганизацииФормыДляОтчетностиКлиентСервер.ПроверитьКодПоОКТМО(КодПоОКТМО);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьОбновлениеКонтактнойИнформации(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьКонтактнуюИнформацию(Результат);
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КодНалоговогоОрганаПриИзменении(Элемент)
	
	Если ПустаяСтрока(Объект.КодНалоговогоОргана) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.НаименованиеНалоговогоОргана = ОрганизацииФормыДляОтчетностиВызовСервера.РеквизитыГосударственногоОрганаПоКоду(
		ПредопределенноеЗначение("Перечисление.ВидыГосударственныхОрганов.НалоговыйОрган"),
		Объект.КодНалоговогоОргана);
		
КонецПроцедуры

&НаКлиенте
Процедура КодОрганаПФРПриИзменении(Элемент)
	
	Если ПустаяСтрока(Объект.КодОрганаПФР) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.НаименованиеТерриториальногоОрганаПФР = ОрганизацииФормыДляОтчетностиВызовСервера.РеквизитыГосударственногоОрганаПоКоду(
		ПредопределенноеЗначение("Перечисление.ВидыГосударственныхОрганов.ОрганПФР"),
		Объект.КодОрганаПФР);
		
КонецПроцедуры

&НаКлиенте
Процедура КодПодчиненностиФССПриИзменении(Элемент)
	
	Если ПустаяСтрока(Объект.КодПодчиненностиФСС) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.НаименованиеТерриториальногоОрганаФСС = ОрганизацииФормыДляОтчетностиВызовСервера.РеквизитыГосударственногоОрганаПоКоду(
		ПредопределенноеЗначение("Перечисление.ВидыГосударственныхОрганов.ОрганФСС"),
		Объект.КодПодчиненностиФСС);
		
КонецПроцедуры

&НаКлиенте
Процедура КодОКВЭД2ПриИзменении(Элемент)
	
	ОрганизацииФормыДляОтчетностиКлиентСервер.ИзменениеКодаОКВЭД2(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КодОКВЭД2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОрганизацииФормыДляОтчетностиКлиент.ВыбратьКодИзКлассификатора(
		"ОКВЭД2",
		"КодОКВЭД2",
		"НаименованиеОКВЭД2",
		ЭтотОбъект,
		Объект,
		СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СистемаНалогообложенияПредставлениеНажатие(Элемент, СтандартнаяОбработка)
	
	Если ЭтоИнтеграцияСБанкомИПУСНДоходы(Объект.Ссылка) Тогда
		ПериодЧтенияНастройки = ТекущаяДата();
		СтандартнаяОбработка = Ложь;
		КлючЗаписи = ДанныеУчетнойПолитики("НастройкиУчетаУСН", Объект.Ссылка, ПериодЧтенияНастройки);
		Если КлючЗаписи = Неопределено Тогда
			Возврат;
		КонецЕсли;
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("Ключ", КлючЗаписи);
		ПараметрыОткрытия.Вставить("Период", ПериодЧтенияНастройки);
		ОткрытьФорму("РегистрСведений.НастройкиУчетаУСН.ФормаЗаписи", ПараметрыОткрытия, ЭтотОбъект);
	Иначе
		ОрганизацииФормыДляОтчетностиКлиент.НачатьИзменениеСистемыНалогообложения(
			Объект.Ссылка,
			ЭтотОбъект,
			"СистемаНалогообложенияПредставление",
			СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименяютсяАнтикризисныеМерыНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	НастройкиУчетаКлиент.ОткрытьНастройкиАнтикризис(Объект.Ссылка ,ЭтоИнтеграцияСБанкомИПУСНДоходы(Объект.Ссылка));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьРеквизитыПоПолюПоискаИНН(Команда)
	
	ОрганизацииФормыДляОтчетностиКлиент.ЗаполнитьРеквизитыПоПолюПоискаИНН(
		НовыйЗапросДанныхЕГР(ПоискИННЗапрос),
		ПоискИННОтвет,
		ОписаниеОповещенияЗакончитьЗаполнениеДаннымиЕГР(),
		ТекущийЭлемент,
		Элементы.ПолеПоискаИНН);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеквизитыПоИНН(Команда)
	
	ОрганизацииФормыДляОтчетностиКлиент.ЗаполнитьРеквизитыПоИНН(
		НовыйЗапросДанныхЕГР(Объект.ИНН),
		ПоискИННОтвет,
		ОписаниеОповещенияЗакончитьЗаполнениеДаннымиЕГР(),
		ТекущийЭлемент,
		Элементы.ИНН);
	
КонецПроцедуры

&НаКлиенте
Процедура ВсеБанковскиеСчета(Команда)
	
	СтруктураОтбор = Новый Структура("Владелец", Объект.Ссылка);
	ОткрытьФорму("Справочник.БанковскиеСчета.ФормаСписка", Новый Структура("Отбор", СтруктураОтбор));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	Элементы.ПояснениеНекорректныйКодПоОКТМО.Видимость = ЗначениеЗаполнено(Форма.ПояснениеНекорректныйКодПоОКТМО);
	Элементы.ПрименяютсяАнтикризисныеМеры.Видимость = ЭтоИнтеграцияСБанкомИПУСНДоходы(Объект.Ссылка);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДеятельностьОтнесенаКПострадавшимОтКоронавируса(Организация)
	
	Возврат НалоговыйУчет.ДеятельностьОтнесенаКПострадавшимОтКоронавируса(Организация);
	
КонецФункции

#Область ИспользуетТрудНаемныхРаботников

&НаСервереБезКонтекста
Функция ДанныеДляРаботников()
	
	// Эти все реквизиты - в Объект, поля на форме должны иметь те же имена
	
	Данные = Новый Массив;
	Данные.Добавить("РегистрационныйНомерПФР");
	Данные.Добавить("РегистрационныйНомерФСС");
	Данные.Добавить("ФондСоцстрахования");
	Возврат Данные;
	
КонецФункции

&НаСервере
Процедура НастроитьЭлементыПриИспользованииТрудаНаемныхРаботников()

	ИПИспользуетТрудНаемныхРаботников = ВключитьИПИспользуетТрудНаемныхРаботников;
	
	Для Каждого ИмяЭлемента Из ДанныеДляРаботников() Цикл
		
		Элементы[ИмяЭлемента].Видимость = ИПИспользуетТрудНаемныхРаботников;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НадоВключитьИПИспользуетТрудНаемныхРаботников(АдресПроверяемыеДанные)
	
	Если НЕ ЭтоАдресВременногоХранилища(АдресПроверяемыеДанные) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПроверяемыеДанные = ПолучитьИзВременногоХранилища(АдресПроверяемыеДанные);
	Если ТипЗнч(ПроверяемыеДанные) <> Тип("Соответствие") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Для Каждого ИмяЭлемента Из ДанныеДляРаботников() Цикл
		
		ПутьКДанным = "Объект." + ИмяЭлемента;
		Если ПроверяемыеДанные[ПутьКДанным] = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Возврат Истина;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#Область ИдентификационныеНомераНалогоплательщиков

&НаКлиентеНаСервереБезКонтекста
Процедура ПроверитьИНН(РезультатПроверки, ИНН)
	
	РезультатПроверки = ОрганизацииФормыДляОтчетностиКлиентСервер.ПроверитьИНН(ИНН, "", Ложь);
		
КонецПроцедуры

#КонецОбласти	

#Область ЗаполнениеДаннымиЕГР

&НаКлиенте
Функция НовыйЗапросДанныхЕГР(ИНН)
	
	Запрос = ОрганизацииФормыДляОтчетностиКлиентСервер.НовыйЗапросДанныхЕГР();
	Запрос.ИНН                       = ИНН;
	Запрос.ЮридическоеФизическоеЛицо = Объект.ЮридическоеФизическоеЛицо;
	Запрос.Ссылка                    = Объект.Ссылка;
	Запрос.ОбъектЗаполнен            = ЗначениеЗаполнено(Объект.ИНН) И ЗначениеЗаполнено(Объект.ФамилияИП);
	
	Возврат Запрос;
	
КонецФункции

&НаСервере
Процедура НастроитьКомандыАвтозаполнения()
	
	ОтобразитьЗаполнениеПоДаннымЕГР =
		Не ЗначениеЗаполнено(Объект.ИНН)
		И Не ЗначениеЗаполнено(Объект.ФамилияИП);
	
	Элементы.ЗаполнениеПоДаннымЕГР.Видимость   = ОтобразитьЗаполнениеПоДаннымЕГР;
	Элементы.ЗаполнитьРеквизитыПоИНН.Видимость = НЕ ОтобразитьЗаполнениеПоДаннымЕГР И Элементы.ИНН.Видимость;
	
КонецПроцедуры

&НаКлиенте
Функция ОписаниеОповещенияЗакончитьЗаполнениеДаннымиЕГР()
	
	// Параметр оповещения может быть модифицирован - см. НачатьЗаполнениеДаннымиЕГР()
	Возврат Новый ОписаниеОповещения("ЗакончитьЗаполнениеДаннымиЕГР", ЭтотОбъект, Новый Структура);
	
КонецФункции

&НаКлиенте
Процедура ЗакончитьЗаполнениеДаннымиЕГР(Ответ, ПараметрыЗаполнения) Экспорт
	
	ЗаполнитьНаСервере = ОрганизацииФормыДляОтчетностиКлиент.ЗакончитьЗаполнениеДаннымиЕГР(
		ЭтотОбъект,
		Объект.ЮридическоеФизическоеЛицо,
		Ответ,
		ПараметрыЗаполнения);
		
	Если ЗаполнитьНаСервере Тогда
		ЗаполнитьДаннымиЕГР(ПараметрыЗаполнения.ПоискИННОтвет);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДаннымиЕГР(Знач ПоискИННОтвет)
	
	ОрганизацииФормыДляОтчетности.ЗаполнитьДаннымиЕГР(ПоискИННОтвет, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ЮридическийАдрес

&НаСервере
Процедура ЗаполнитьПоАдресу()
		
	ОрганизацииФормыДляОтчетности.ЗаполнитьПоАдресу(
		Объект,
		КодПоОКТМО,
		ОрганизацииФормыДляОтчетностиКлиентСервер.АдресОрганизацииЗначениеJSON(КонтактнаяИнформацияОписаниеДополнительныхРеквизитов));
		
КонецПроцедуры
	
#КонецОбласти

#Область РегистрацияВНалоговомОргане

// Методы работы со справочником РегистрацияВНалоговомОргане

&НаКлиентеНаСервереБезКонтекста
Функция ПоляРегистрацииВНалоговомОргане(ТолькоКлючевые = Ложь)
	
	ПоляРегистрации = Новый Структура;
	ПоляРегистрации.Вставить("Код", "Объект.КодНалоговогоОргана");
	
	Если Не ТолькоКлючевые Тогда
		ПоляРегистрации.Вставить("НаименованиеИФНС", "Объект.НаименованиеНалоговогоОргана");
		ПоляРегистрации.Вставить("КодПоОКТМО",       "КодПоОКТМО");
	КонецЕсли;
	
	Возврат ПоляРегистрации;
	
КонецФункции

#КонецОбласти

#Область ИнтеграцияСБанком

&НаСервере
Процедура УстановитьПредставлениеСистемыНалогообложения(Организация)
	
	Элементы.СистемаНалогообложенияПредставление.Заголовок = НСтр("ru='Ставка налога УСН'");
	Период = ТекущаяДатаСеанса();
	ТекстПредставления = СтрШаблон("%1%2", УчетнаяПолитика.СтавкаНалогаУСН(Организация, Период), "%");
	Если УчетнаяПолитика.НалоговыеКаникулыУСН(Организация, Период) Тогда
		ТекстПредставления = ТекстПредставления + " " + НСтр("ru='(налоговые каникулы)'");
	КонецЕсли;
	СистемаНалогообложенияПредставление = ТекстПредставления;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьРеквизитыИнтеграцияСБанком()
	
	ВыводитьПодсказкуВЗаголовок = Истина;
	Организация = Объект.Ссылка;
	Если НЕ ЭтоИнтеграцияСБанкомИПУСНДоходы(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПредставлениеСистемыНалогообложения(Организация);
	
	Элементы.ОбщаяКомандаПрисоединенныеФайлыБП.Видимость = Ложь;
	Элементы.ЗаполнитьРеквизитыПоИНН.Видимость           = Ложь;
	Если НЕ (Параметры.Свойство("Назначение") И Параметры.Назначение = "ДляОтчетности") Тогда
		Элементы.ПенсионныйФонд.Видимость        = Ложь;
		Элементы.ГруппаБанковскиеСчета.Видимость = Истина;
		ВыводитьПодсказкуВЗаголовок              = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоИнтеграцияСБанкомИПУСНДоходы(Знач Организация)
	
	Если НЕ ОбщегоНазначенияБП.ЭтоИнтерфейсИнтеграцииСБанком() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ЮридическоеФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ЮридическоеФизическоеЛицо");
	Если ЮридическоеФизическоеЛицо <> Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ УчетнаяПолитика.ПрименяетсяУСНДоходы(Организация, ТекущаяДатаСеанса()) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервереБезКонтекста
Функция ДанныеУчетнойПолитики(Знач ИмяРегистра, Знач Организация, Знач Период)
	
	Возврат НастройкиУчета.КлючЗаписиДействующейУчетнойПолитики(ИмяРегистра, Организация, Период);
	
КонецФункции

#КонецОбласти

#КонецОбласти
