
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, "Страна, СВИФТБИК");
	
	МожноРедактировать = ПравоДоступа("Редактирование", Метаданные.Справочники.Банки);
	Элементы.ФормаПодобратьИзКлассификатора.Видимость = МожноРедактировать;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьПослеДобавления" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Не Группа Тогда
		Если ЗначениеЗаполнено(Страна) Тогда
			Если Копирование Тогда
				Возврат;
			КонецЕсли;
			
			СтрокаПоиска = СокрЛП(СВИФТБИК);
			Если СтрДлина(СтрокаПоиска) > 11 // Максимальная длина SWIFT.
				Или БанковскиеПравила.ЭтоБИКБанкаРФ(СтрокаПоиска) Тогда
				Возврат;
			КонецЕсли;
			
			СвойстваКодаБанка = БанковскиеПравила.СвойстваКодаБанка(СтрокаПоиска);
			Если Не СвойстваКодаБанка.ПохожеНаBIC И Не СвойстваКодаБанка.ПохожеНаSWIFT И Не СвойстваКодаБанка.ЭтоSWIFT
				Или Не СвойстваКодаБанка.ЭтоSWIFT И СтрНайти(СВИФТБИК, " ") > 0 Тогда
				Возврат;
			КонецЕсли;
			
			ЗначенияЗаполнения = Новый Структура("Страна", Страна);
			Если СвойстваКодаБанка.ЭтоSWIFT Или СвойстваКодаБанка.ПохожеНаSWIFT Тогда
				ЗначенияЗаполнения.Вставить("СВИФТБИК", СтрокаПоиска);
			ИначеЕсли СвойстваКодаБанка.ПохожеНаBIC Тогда
				ЗначенияЗаполнения.Вставить("Код", СтрокаПоиска);
			КонецЕсли;
			
			Отказ = Истина;
			
			ОткрытьФорму("Справочник.Банки.Форма.ФормаЭлемента", ЗначенияЗаполнения, ЭтотОбъект);
		Иначе
			Текст = НСтр("ru = 'Есть возможность подобрать банк из классификатора.
			|Подобрать?'");
			
			ТекДанные = Элементы.Список.ТекущиеДанные;
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("Родитель", Родитель);
			Если Копирование Тогда
				ДополнительныеПараметры.Вставить("Наименование", ТекДанные.Наименование);
				ДополнительныеПараметры.Вставить("Код", ТекДанные.Код);
				ДополнительныеПараметры.Вставить("КоррСчет", ТекДанные.КоррСчет);
				ДополнительныеПараметры.Вставить("Город", ТекДанные.Город);
				ДополнительныеПараметры.Вставить("Адрес", ТекДанные.Адрес);
				ДополнительныеПараметры.Вставить("Телефоны", ТекДанные.Телефоны);
				ДополнительныеПараметры.Вставить("СВИФТБИК", ТекДанные.СВИФТБИК);
				ДополнительныеПараметры.Вставить("Страна", ТекДанные.Страна);
			КонецЕсли;
			
			Оповещение = Новый ОписаниеОповещения("ВопросЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			ПоказатьВопрос(Оповещение, Текст, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
			
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодобратьИзКлассификатора(Команда)
	
	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе, МножественныйВыбор", Ложь, Истина);
	ОткрытьФорму("Справочник.КлассификаторБанков.ФормаВыбора", ПараметрыФормы, Этаформа);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВопросЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе, МножественныйВыбор", Ложь, Истина);
		ОткрытьФорму("Справочник.КлассификаторБанков.ФормаВыбора", ПараметрыФормы, Этаформа);
	Иначе
		ПараметрыФормы = Новый Структура("Основание", ДополнительныеПараметры);
		ОткрытьФорму("Справочник.Банки.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти