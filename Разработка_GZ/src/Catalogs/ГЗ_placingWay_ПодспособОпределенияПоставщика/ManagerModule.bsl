// Создает способ по переданной структуре
//
// Параметры:
//  - ДанныеЗаполнения - Структура - структура свойств способа закупки
//
// Возвращаемое значение:
//  - Ссылка - ссылка на созданный элемент справочника
//
Функция СоздатьПодспособОпределенияПоставщика (ДанныеЗаполнения) Экспорт
	
	СуществующийПодспособ = НайтиПодспособОпределенияПоставщика(ДанныеЗаполнения);
	
	Если Не ЗначениеЗаполнено(СуществующийПодспособ) Тогда
		Подспособ = Справочники.ГЗ_placingWay_ПодспособОпределенияПоставщика.СоздатьЭлемент();
	//Иначе
	//	Подспособ = СуществующийПодспособ.ПолучитьОбъект();
	//	Подспособ.Заблокировать();
	ЗаполнитьЗначенияСвойств(Подспособ, ДанныеЗаполнения);
	
	Подспособ.Заполнить(ДанныеЗаполнения);
	
	Если Подспособ.ЭтоНовый() Тогда
		Подспособ.Записать();
	КонецЕсли;
	
	СуществующийПодспособ = Подспособ.Ссылка;
	КонецЕсли;
		
	Возврат СуществующийПодспособ;
	
КонецФункции

Функция НайтиПодспособОпределенияПоставщика(ДанныеЗаполнения)
	
	НайденныйПодспособ = Справочники.ГЗ_placingWay_ПодспособОпределенияПоставщика.ПустаяСсылка();
	
	GZcode = Неопределено;
	
	Если Не ДанныеЗаполнения.Свойство("GZcode", GZcode) Тогда
		Возврат НайденныйПодспособ;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ГЗ_placingWay_ПодспособОпределенияПоставщика.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ГЗ_placingWay_ПодспособОпределенияПоставщика КАК ГЗ_placingWay_ПодспособОпределенияПоставщика
		|ГДЕ
		|	ГЗ_placingWay_ПодспособОпределенияПоставщика.GZcode = &GZcode";
	
	Запрос.УстановитьПараметр("GZcode", ДанныеЗаполнения.GZcode);
	
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		НайденныйПодспособ = Выборка.Ссылка;
	КонецЕсли;
		
	Возврат НайденныйПодспособ;

КонецФункции
