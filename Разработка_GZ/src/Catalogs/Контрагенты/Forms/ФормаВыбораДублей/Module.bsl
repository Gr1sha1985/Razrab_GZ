#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СписокДублей.Параметры.УстановитьЗначениеПараметра("ИНН", СокрЛП(Параметры.ИНН));
	СписокДублей.Параметры.УстановитьЗначениеПараметра("КПП", СокрЛП(Параметры.КПП));
	
	ЭтаФорма.Заголовок =  ?(ЗначениеЗаполнено(Параметры.КПП), 
							НСтр("ru = 'Список дублей по ИНН и КПП'"), 
							НСтр("ru = 'Список дублей по ИНН'"));
							
	ЕстьПравоДоступаКЖурналуОпераций = ПравоДоступа("Просмотр", Метаданные.ЖурналыДокументов.ЖурналОпераций);
	Элементы.ДокументыПоКонтрагенту.Видимость = ЕстьПравоДоступаКЖурналуОпераций;
	
	Если ЕстьПравоДоступаКЖурналуОпераций Тогда
		
		ОтборОрганизация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
		ОтборОрганизацияИспользование = ЗначениеЗаполнено(ОтборОрганизация);
	
		УстановитьОтборПоСпискуДокументов(Список,
			"Организация", 
			ОтборОрганизация,
			,
			,
			ОтборОрганизацияИспользование);
		
		НачалоПериода = НачалоДня((ТекущаяДатаСеанса()- 365*86400));
	
		УстановитьОтборПоПериодуДляСпискаДокументов(Список, НачалоПериода);
		
		УстановитьОтборПоСпискуДокументов(Список,
			"Контрагент",
			Справочники.Контрагенты.ПустаяСсылка(),
			,
			,
			Истина);
		
	КонецЕсли;
	
	ТолькоОткрыта = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборОрганизацияИспользованиеПриИзменении(Элемент)
	
	УстановитьОтборПоСпискуДокументов(Список,
									  "Организация", 
									  ОтборОрганизация,
									  ,
									  ,
									  ОтборОрганизацияИспользование);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеОрганизацияПриИзменении(Элемент)
	
	ОтборОрганизацияИспользование = ЗначениеЗаполнено(ОтборОрганизация);
	
	УстановитьОтборПоСпискуДокументов(Список,
									  "Организация", 
									  ОтборОрганизация,
									  ,
									  ,
									  ОтборОрганизацияИспользование);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеОрганизацияОчистка(Элемент, СтандартнаяОбработка)
	
	ОтборОрганизацияИспользование = ЗначениеЗаполнено(ОтборОрганизация);
	
	УстановитьОтборПоСпискуДокументов(Список,
									  "Организация", 
									  ОтборОрганизация,
									  ,
									  ,
									  ОтборОрганизацияИспользование);
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	
	УстановитьОтборПоПериодуДляСпискаДокументов(Список, НачалоПериода);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСпискаДублей

&НаКлиенте
Процедура СписокДублейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
		
	ПараметрыПередачи = Новый Структура("Ключ", Элемент.ТекущиеДанные.Ссылка);
	ПараметрыПередачи.Вставить("ЗакрыватьПриЗакрытииВладельца", Истина);
	
	ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта",
				  ПараметрыПередачи, 
	              Элемент,
	              ,
	              ,
	              ,
	              Новый ОписаниеОповещения("ОбработатьРедактированиеЭлемента", ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДублейПриАктивизацииСтроки(Элемент)
	
	Если ТолькоОткрыта Тогда
		
		Подключаемый_УстановитьОтборПоКонтрагентуВСпискеДокументовКлиент();
		
		ТолькоОткрыта = Ложь;
		
	Иначе
		ПодключитьОбработчикОжидания("Подключаемый_УстановитьОтборПоКонтрагентуВСпискеДокументовКлиент", 0.5, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСписка

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
		
	ПараметрыПередачи = Новый Структура("Ключ", Элемент.ТекущиеДанные.Ссылка);
	ПараметрыПередачи.Вставить("ЗакрыватьПриЗакрытииВладельца", Истина);
	
	ВидДокумента = ПолучитьВидДокумента(Элемент.ТекущиеДанные.Ссылка);
		
	ОткрытьФорму("Документ."+ВидДокумента+".ФормаОбъекта",
				  ПараметрыПередачи, 
				  Элемент,
				  ,
				  ,
				  ,
				  Новый ОписаниеОповещения("ОбработатьРедактированиеДокумента", ЭтаФорма));

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьРедактированиеЭлемента(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Элементы.СписокДублей.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРедактированиеДокумента(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_УстановитьОтборПоКонтрагентуВСпискеДокументовКлиент()

	Если НЕ Элементы.СписокДублей.ТекущиеДанные = Неопределено Тогда
	
		УстановитьОтборПоСпискуДокументов(Список,
										  "Контрагент", 
										  Элементы.СписокДублей.ТекущиеДанные.Ссылка,
										  ,
										  ,
										  Истина);
	КонецЕсли;	

КонецПроцедуры	

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПоСпискуДокументов(Список, ИмяПоля, ЗначениеОтбора, ВидСравнения = Неопределено, ПредставлениеОтбора = Неопределено, ИспользованиеОтбора)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.КомпоновщикНастроек.Настройки.Отбор, 
														ИмяПоля, 
														ЗначениеОтбора,
														ВидСравнения,
														ПредставлениеОтбора,
														ИспользованиеОтбора);
														
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПоПериодуДляСпискаДокументов(Список, НачальнаяДата = Неопределено)
	
	Если НЕ НачальнаяДата = Неопределено Тогда
		
		Если ЗначениеЗаполнено(НачальнаяДата) Тогда
			
			УстановитьОтборПоСпискуДокументов(Список,
											"Дата", 
											НачальнаяДата,
											ВидСравненияКомпоновкиДанных.БольшеИлиРавно,
											"Начало периода",
											Истина);
			
		Иначе
			
			УстановитьОтборПоСпискуДокументов(Список,
											"Дата", 
											НачальнаяДата,
											ВидСравненияКомпоновкиДанных.БольшеИлиРавно,
											"Начало периода",
											Ложь);
											
		КонецЕсли;
										
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьВидДокумента(СсылкаНаДокумент)
	Возврат СсылкаНаДокумент.Метаданные().Имя;
КонецФункции

#КонецОбласти