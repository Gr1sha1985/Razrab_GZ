//#Область ОбработчикиСобытийФормы

//&НаСервере
//Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
//	
//	//// СтандартныеПодсистемы.ПодключаемыеКоманды
//	//ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
//	//// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
//	//
//	//// СтандартныеПодсистемы.ВерсионированиеОбъектов
//	//ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
//	//// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
//	//
//	//Список.Параметры.УстановитьЗначениеПараметра(
//	//	"ПредставлениеОбособленногоПодразделения", НСтр("ru='Обособленное подразделение'"));
//	//
//	//МожноРедактировать = ПравоДоступа("Редактирование", Метаданные.Справочники.Контрагенты);
//	//Элементы.СписокКонтекстноеМенюИзменитьВыделенные.Видимость = МожноРедактировать;
//	//
//	//ОтображатьСтатусыДокументов = ПолучитьФункциональнуюОпцию("ОтображатьДополнительныеКолонкиВСписках");
//	//Элементы.ЭДО.Видимость = ОтображатьСтатусыДокументов;
//	//Если ОтображатьСтатусыДокументов Тогда
//	//	
//	//	// ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
//	//	ПроверкаКонтрагентов.ПриСозданииНаСервереСписокКонтрагентов(Список);
//	//	// Конец ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
//	//	
//	//КонецЕсли;
//	//
//	//УстановитьУсловноеОформление();
//	//
//	//// ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере
//	//ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
//	//ОбработкаНовостейПереопределяемый.КонтекстныеНовости_ПриСозданииНаСервере(
//	//	ЭтаФорма,
//	//	"БП.Справочник.Контрагенты",
//	//	"ФормаСписка",
//	//	НСтр("ru='Новости: Контрагенты'"),
//	//	ИдентификаторыСобытийПриОткрытии
//	//);
//	//// Конец ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере
//	//
//	//// ИнтернетПоддержкаПользователей.СПАРКРиски
//	//Элементы.Подменю1СПАРКРиски.Видимость = СПАРКРиски.ИспользованиеРазрешено();
//	//// Конец ИнтернетПоддержкаПользователей.СПАРКРиски
//	//
//	//// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
//	//ЭлектронноеВзаимодействиеБП.КомандыЭДО_ФормаСпискаПриСоздании(ЭтотОбъект);
//	//// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
//	//
//	//ПомеченныеНаУдалениеСервер.СкрытьПомеченныеНаУдаление(ЭтотОбъект);
//	//
//КонецПроцедуры

//&НаКлиенте
//Процедура ПриОткрытии(Отказ)
//	
//	//// ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
//	//ОбработкаНовостейКлиент.КонтекстныеНовости_ПриОткрытии(ЭтаФорма);
//	//// Конец ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
//	//
//	//// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
//	//ЭлектронноеВзаимодействиеБПКлиент.КомандыЭДО_ПриОткрытии(ЭтотОбъект);
//	//// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами

//КонецПроцедуры

//&НаКлиенте
//Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
//	
//	//// ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения
//	//ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
//	//// Конец ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения
//	//
//	//// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
//	//ЭлектронноеВзаимодействиеБПКлиент.КомандыЭДО_ФормаСпискаОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
//	//// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами

//КонецПроцедуры

//#КонецОбласти

//#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

//&НаКлиенте
//Процедура СписокПриАктивизацииСтроки(Элемент)
//	
//	//// СтандартныеПодсистемы.ПодключаемыеКоманды
//	//ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
//	//// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
//	//
//	//// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
//	//ОбменСКонтрагентамиКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
//	//// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
//	//
//КонецПроцедуры

//#КонецОбласти

//#Область ОбработчикиКомандФормы

//&НаКлиенте
//Процедура ПоказатьКонтекстныеНовости(Команда)

//	ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаКомандыНовости(
//		ЭтаФорма,
//		Команда
//	);

//КонецПроцедуры

//&НаКлиенте
//Процедура ИзменитьВыделенные(Команда)
//	
//	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);

//КонецПроцедуры

//&НаКлиенте
//Процедура ИндексыСПАРК(Команда)
//	
//	ПараметрыФормы = Новый Структура;
//	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
//	
//	ОткрытьФорму("Отчет.ИндексыСПАРКРиски.Форма", ПараметрыФормы);
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура СобытияМониторингаСПАРК(Команда)
//	
//	ПараметрыФормы = Новый Структура;
//	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
//	
//	ОткрытьФорму("Отчет.СобытияМониторингаСПАРКРиски.Форма", ПараметрыФормы);
//	
//КонецПроцедуры

//#КонецОбласти

//#Область ОбработчикиСобытийТаблицыФормыСписок

//&НаКлиенте
//Процедура СписокПриИзменении(Элемент)
//	
//	ПомеченныеНаУдалениеКлиент.ПриИзмененииСписка(ЭтотОбъект, Элемент);
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
//	
//	Если НЕ Группа Тогда
//		КлючеваяОперация = "СозданиеФормыКонтрагенты";
//		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
//	КонецЕсли;

//КонецПроцедуры

//&НаКлиенте
//Процедура СписокПередНачаломИзменения(Элемент, Отказ)
//	
//	Если НЕ Элемент.ТекущиеДанные.ЭтоГруппа Тогда
//		КлючеваяОперация = "ОткрытиеФормыКонтрагенты";
//		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
//	КонецЕсли;
//	
//КонецПроцедуры

//&НаСервере
//Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки, ИспользуютсяСтандартныеНастройки)
//	
//	ПомеченныеНаУдалениеСервер.УдалитьОтборПометкаУдаления(Настройки);
//	
//КонецПроцедуры

//#КонецОбласти

//#Область СлужебныеПроцедурыИФункцииБСП

//// СтандартныеПодсистемы.ПодключаемыеКоманды
//&НаКлиенте
//Процедура Подключаемый_ВыполнитьКоманду(Команда)
//	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
//КонецПроцедуры

//&НаСервере
//Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
//	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
//КонецПроцедуры

//&НаКлиенте
//Процедура Подключаемый_ОбновитьКоманды()
//	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
//КонецПроцедуры
//// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

//#КонецОбласти

//#Область СлужебныеПроцедурыИФункции

//// Процедура показывает новости, требующие прочтения (важные и очень важные)
////
//// Параметры:
////  Нет
////
//&НаКлиенте
//Процедура Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии()

//	// ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии
//	ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
//	// Конец ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии

//	ОбработкаНовостейКлиент.КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриОткрытии(ЭтаФорма, ИдентификаторыСобытийПриОткрытии);

//КонецПроцедуры

//&НаСервере
//Процедура УстановитьУсловноеОформление()

//	УсловноеОформление.Элементы.Очистить();

//	// ИНН некорректный
//	ЭлементУО = УсловноеОформление.Элементы.Добавить();
//	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ИНН");
//	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
//		"Список.ИННВведенКорректно", ВидСравненияКомпоновкиДанных.Равно, Ложь);
//	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветВыделенияКонтрагентаСОшибкой);

//	// КПП некорректный
//	ЭлементУО = УсловноеОформление.Элементы.Добавить();
//	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "КПП");
//	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
//		"Список.КППВведенКорректно", ВидСравненияКомпоновкиДанных.Равно, Ложь);
//	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветВыделенияКонтрагентаСОшибкой);

//	Если Не ОтображатьСтатусыДокументов Тогда
//		Возврат;
//	КонецЕсли;
//	
//	// КПП дублируется
//	ЭлементУО = УсловноеОформление.Элементы.Добавить();
//	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "КПП");
//	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
//		"Список.КППВведенКорректно", ВидСравненияКомпоновкиДанных.Равно, Истина);
//	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
//		"Список.ЕстьДубли", ВидСравненияКомпоновкиДанных.Равно, Истина);
//	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
//		"Список.ПроверкаКонтрагентовКонтрагентНеСуществует", ВидСравненияКомпоновкиДанных.Равно, Ложь);
//	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветВыделенияКонтрагентаСОшибкой);

//	// ИНН дублируется
//	ЭлементУО = УсловноеОформление.Элементы.Добавить();
//	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ИНН");
//	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
//		"Список.ИННВведенКорректно", ВидСравненияКомпоновкиДанных.Равно, Истина);
//	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
//		"Список.ЕстьДубли", ВидСравненияКомпоновкиДанных.Равно, Истина);
//	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
//		"Список.ПроверкаКонтрагентовКонтрагентНеСуществует", ВидСравненияКомпоновкиДанных.Равно, Ложь);
//	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветВыделенияКонтрагентаСОшибкой);

//	// Контрагента нет в реестре
//	ЭлементУО = УсловноеОформление.Элементы.Добавить();
//	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ИНН");
//	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "КПП");
//	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
//		"Список.ПроверкаКонтрагентовКонтрагентНеСуществует", ВидСравненияКомпоновкиДанных.Равно, Истина);
//	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
//		"Список.ПроверкаКонтрагентовСостояние", ВидСравненияКомпоновкиДанных.НеРавно, Перечисления.СостоянияСуществованияКонтрагента.НеДействуетИлиИзмененКПП);
//	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветКонтрагентаОтсутствущегоВРеестре);

//	// Контрагент прекратил деятельность
//	ЭлементУО = УсловноеОформление.Элементы.Добавить();
//	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "Список");
//	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
//		"Список.ПроверкаКонтрагентовКонтрагентНеСуществует", ВидСравненияКомпоновкиДанных.Равно, Истина);
//	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
//		"Список.ПроверкаКонтрагентовСостояние", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СостоянияСуществованияКонтрагента.НеДействуетИлиИзмененКПП);
//	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветКонтрагентаПрекратившегоДеятельность);

//КонецПроцедуры

//#Область КомандыЭДО

//&НаКлиенте
//Процедура Подключаемый_ВыполнитьКомандуЭДО(Команда)
//	
//	ЭлектронноеВзаимодействиеКлиент.ВыполнитьПодключаемуюКомандуЭДО(Команда, ЭтотОбъект, Элементы.Список);
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура Подключаемый_ОбработчикОжиданияЭДО()
//	
//	ОбменСКонтрагентамиКлиент.ОбработчикОжиданияЭДО(ЭтотОбъект);
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура Подключаемый_ОбновитьКомандыЭДО()
//	ОбменСКонтрагентамиКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
//КонецПроцедуры

//#КонецОбласти

//#КонецОбласти