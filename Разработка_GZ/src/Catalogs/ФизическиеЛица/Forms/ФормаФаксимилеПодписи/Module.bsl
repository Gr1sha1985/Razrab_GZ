
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ФизическоеЛицо = Параметры.ФизическоеЛицо;
	Если НЕ ЗначениеЗаполнено(ФизическоеЛицо) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	ФайлФаксимилеПодписи  = Параметры.ФаксимилеПодписи;
	АдресФаксимилеПодписи = ФайлФаксимилеПодписи;
	
	Заголовок = СтрШаблон(НСтр("ru = '%1: Подпись'"), ФизическоеЛицо);
	
	ЕстьПравоИзменятьПодпись = ПравоДоступа("Изменение", Метаданные.Справочники.ФизическиеЛица)
		И НЕ ТолькоПросмотр;
		
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьКартинкуНаФорме(АдресФаксимилеПодписи, ФайлФаксимилеПодписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		ВопросСохранитьИзменения(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Файл" Тогда
		
		Если ТипЗнч(Параметр) = Тип("Структура")
			И Параметр.Свойство("ВладелецФайла")
			И Параметр.ВладелецФайла = ФизическоеЛицо Тогда
			
			Модифицированность = Истина;
			
			ФайлКартинки = ?(ТипЗнч(Источник) = Тип("Массив"), Источник[0], Источник);
			УстановитьКартинкуВЭлементе(ФайлКартинки);
			
			УправлениеФормой(ЭтотОбъект);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЗагрузитьОчиститьПодпись(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗаблокироватьДанныеФормыДляРедактирования();
	Если ЗначениеЗаполнено(АдресФаксимилеПодписи) Тогда
		ОчиститьКартинку();
	Иначе
		ЗагрузитьКартинку();
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресФаксимилеПодписиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТолькоПросмотр Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФайлФаксимилеПодписи) Тогда
		
		ДанныеФайла = ПолучитьДанныеФайла(ФайлФаксимилеПодписи, УникальныйИдентификатор);
		РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла);
		
	ИначеЕсли ЕстьПравоИзменятьПодпись Тогда
		
		ЗагрузитьКартинку();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если Модифицированность Тогда
		ПеренестиИзмененияВОбъектФормыВладельца();
	КонецЕсли;
	Закрыть(ФизическоеЛицо);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКартинкуПодпись(Команда)
	
	ЗагрузитьКартинку();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзПрисоединенныхФайловПодпись(Команда)
	
	ВыбратьКартинкуИзПрисоединенныхФайлов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПодпись(Команда)
	
	ОчиститьКартинку();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Если Форма.ЕстьПравоИзменятьПодпись Тогда
		Элементы.ФормаОК.КнопкаПоУмолчанию = Истина;
	Иначе
		Элементы.ФормаЗакрыть.КнопкаПоУмолчанию                   = Истина;
		Элементы.АдресФаксимилеПодписи.Доступность                = Ложь;
		Элементы.ЗагрузитьОчиститьПодпись.Доступность             = Ложь;
		Элементы.ЗагрузитьКартинкуПодпись.Доступность             = Ложь;
		Элементы.ВыбратьИзПрисоединенныхФайловПодпись.Доступность = Ложь;
		Элементы.ОчиститьПодпись.Доступность                      = Ложь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Форма.АдресФаксимилеПодписи) Тогда
		Форма.ЗагрузитьОчиститьПодпись = НСтр("ru='Загрузить подпись'");
	Иначе
		Форма.ЗагрузитьОчиститьПодпись = НСтр("ru='Очистить подпись'");
	Конецесли;
	Элементы.ГруппаКнопокПросмотр.Видимость       = НЕ Форма.ЕстьПравоИзменятьПодпись;
	Элементы.ГруппаКнопокРедактирование.Видимость = Форма.ЕстьПравоИзменятьПодпись;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКартинку()
	
	Фильтр = НСтр("ru = 'Формат PNG(*.png*)|*.png'");
	РаботаСФайламиКлиент.ДобавитьФайлы(ФизическоеЛицо, УникальныйИдентификатор, Фильтр);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеФайла(ФайлКартинки, УникальныйИдентификатор)
	
	ДополнительныеПараметры = РаботаСФайламиКлиентСервер.ПараметрыДанныхФайла();
	ДополнительныеПараметры.ИдентификаторФормы = УникальныйИдентификатор;
	
	Возврат РаботаСФайлами.ДанныеФайла(ФайлКартинки, ДополнительныеПараметры);
	
КонецФункции

&НаКлиенте
Процедура ВыбратьКартинкуИзПрисоединенныхФайлов()
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВладелецФайла", ФизическоеЛицо);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина);
	
	ДополнительныеПараметры = Новый Структура("ИмяЭлементаСКартинкой", "АдресФаксимилеПодписи");
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьКартинкуИзПрисоединенныхФайловЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы", ПараметрыФормы, Элементы.АдресФаксимилеПодписи, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКартинкуИзПрисоединенныхФайловЗавершение(ВыбраннаяКартинка, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ВыбраннаяКартинка) Тогда
		
		УстановитьКартинкуВЭлементе(ВыбраннаяКартинка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьКартинку()

	Модифицированность = Истина;
	ФайлФаксимилеПодписи = Неопределено;
	УстановитьКартинкуНаФорме(АдресФаксимилеПодписи, ФайлФаксимилеПодписи);
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
// Процедура отвечает за отображение/обновление соответствующей картинки
//
Процедура УстановитьКартинкуНаФорме(АктивныйАдрес, РеквизитОбъекта)
	
	Если ЗначениеЗаполнено(РеквизитОбъекта) Тогда
		АктивныйАдрес = ПолучитьКартинку(РеквизитОбъекта, УникальныйИдентификатор);
	Иначе
		АктивныйАдрес = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКартинкуВЭлементе(ФайлКартинки)
	
	Модифицированность = Истина;
	ФайлФаксимилеПодписи = ФайлКартинки;
	УстановитьКартинкуНаФорме(АдресФаксимилеПодписи, ФайлФаксимилеПодписи);
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервереБезКонтекста
// Функция возвращает навигационую ссылку файла
//
Функция ПолучитьКартинку(ФайлКартинки, УникальныйИдентификатор)
	
	ДанныеКартинки = РаботаСФайлами.ДанныеФайла(ФайлКартинки, УникальныйИдентификатор);
	ПроверитьРазмерКартинки(ДанныеКартинки);
	Возврат ДанныеКартинки.СсылкаНаДвоичныеДанныеФайла;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ПроверитьРазмерКартинки(ДанныеКартинки)
	
	УправлениеПечатьюБП.ДопустимыйРазмерКартинки(ДанныеКартинки.Размер, ДанныеКартинки.ИмяФайла, ДанныеКартинки.Владелец, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьИзменения(Закрытие)
	
	ТекстВопроса = НСтр("ru='Данные были изменены. Сохранить изменения?'");
	Оповещение = Новый ОписаниеОповещения("ВопросСохранитьИзмененияЗавершение", ЭтотОбъект, Новый Структура("Закрытие", Закрытие));
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьИзмененияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПеренестиИзмененияВОбъектФормыВладельца();
		Если ДополнительныеПараметры.Закрытие Тогда
			Закрыть(ФизическоеЛицо);
		КонецЕсли;
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Если ДополнительныеПараметры.Закрытие Тогда
			Модифицированность = Ложь;
			Закрыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиИзмененияВОбъектФормыВладельца()
	
	Если Модифицированность Тогда
		Оповестить("ИзмененоФаксимилеПодписи", ФайлФаксимилеПодписи, ФизическоеЛицо);
		Модифицированность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
