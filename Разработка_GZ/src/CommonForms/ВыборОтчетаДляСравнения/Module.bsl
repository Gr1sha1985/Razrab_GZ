#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СохраненныйДок = Неопределено;
	
	Если НЕ Параметры.Свойство("СохраненныйДок", СохраненныйДок) ИЛИ СохраненныйДок = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДокДатаНачалаПериодаОтчета = СохраненныйДок.ДатаНачала;
	ДокДатаКонцаПериодаОтчета  = СохраненныйДок.ДатаОкончания;
	
	СписокПустой = Истина;
	АдресСвойстваСписокПустой = ПоместитьВоВременноеХранилище(СписокПустой, ЭтотОбъект.УникальныйИдентификатор);
	Список.КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Вставить(
		"АдресСвойстваСписокПустой", АдресСвойстваСписокПустой);
	
	МассивНаименованийПравыхГраницПериода = Новый Структура;
	МассивНаименованийПравыхГраницПериода.Вставить("Месяц1", "января");
	МассивНаименованийПравыхГраницПериода.Вставить("Месяц2", "февраля");
	МассивНаименованийПравыхГраницПериода.Вставить("Месяц3", "I-го квартала");
	МассивНаименованийПравыхГраницПериода.Вставить("Месяц4", "апреля");
	МассивНаименованийПравыхГраницПериода.Вставить("Месяц5", "мая");
	МассивНаименованийПравыхГраницПериода.Вставить("Месяц6", "I-го полугодия");
	МассивНаименованийПравыхГраницПериода.Вставить("Месяц7", "июля");
	МассивНаименованийПравыхГраницПериода.Вставить("Месяц8", "августа");
	МассивНаименованийПравыхГраницПериода.Вставить("Месяц9", "III-го квартала");
	МассивНаименованийПравыхГраницПериода.Вставить("Месяц10", "октября");
	МассивНаименованийПравыхГраницПериода.Вставить("Месяц11", "ноября");
	МассивНаименованийПравыхГраницПериода.Вставить("Месяц12", "года");
	
	ВосстановитьПараметрыОтбора();
	
	УстановитьОтборы();
	
	Список.Параметры.УстановитьЗначениеПараметра("Организация",      СохраненныйДок.Организация);
	Список.Параметры.УстановитьЗначениеПараметра("ИсточникОтчета",   СохраненныйДок.ИсточникОтчета);
	Список.Параметры.УстановитьЗначениеПараметра("ДокументОтчета",   СохраненныйДок);
	
	Список.Параметры.УстановитьЗначениеПараметра("ТолькоПоложительныйРезультатСдачи", Ложь);
	
	ПредставлениеПервогоОтчета = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеДокументаРеглОтч(СохраненныйДок);
	ПредставлениеВторогоОтчета = НСтр("ru='< Не выбран >'");
	
	Элементы.ПредставлениеОтчетов.Заголовок = "1  " + ПредставлениеПервогоОтчета + Символы.ПС + "2  " + ПредставлениеВторогоОтчета;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеЭлементамиОтбораПоПериоду();
	УправлениеНадписямиМесяцев();
	ПоказатьПериод();
	ОбновитьПодсказкиЭлементовУправленияПериодом();
	
	СписокПустой = ПолучитьИзВременногоХранилища(АдресСвойстваСписокПустой);
	
	Если СписокПустой = Истина Тогда
		ПоказатьПредупреждение(, НСтр("ru='Нет доступных отчетов для сравнения в соответствующем периоде.'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовОтборПоПериоду

&НаКлиенте
Процедура ОтборПериодПриИзменении(Элемент)
	
	ОбновитьПодсказкиЭлементовУправленияПериодом();
	УправлениеЭлементамиОтбораПоПериоду();
	УправлениеНадписямиМесяцев();
	
	УстановитьОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодичностьПриИзменении(Элемент)
	
	УстановитьДатыНачалаИКонцаПериодаОтчета();
	УправлениеНадписямиМесяцев();
	ОбновитьПодсказкиЭлементовУправленияПериодом();
	УправлениеЭлементамиОтбораПоПериоду();
	
	УстановитьОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура ГодПриИзменении(Элемент)
	
	ДатаКонцаПериодаОтчета = Дата(Год, Месяц(ДатаКонцаПериодаОтчета), День(КонецМесяца(Дата(Год, Месяц(ДатаКонцаПериодаОтчета), 1))));
	ДатаНачалаПериодаОтчета = НачалоГода(ДатаКонцаПериодаОтчета);
	ОбновитьПодсказкиЭлементовУправленияПериодом();
	
	УстановитьОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	УстановитьДатыНачалаИКонцаПериодаОтчета();
	УправлениеНадписямиМесяцев();
	ОбновитьПодсказкиЭлементовУправленияПериодом();
	
	УстановитьОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПериодаОтчетаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ДатаНачалаПериодаОтчета) И ЗначениеЗаполнено(ДатаКонцаПериодаОтчета)
		И ДатаНачалаПериодаОтчета > ДатаКонцаПериодаОтчета Тогда
		ДатаКонцаПериодаОтчета = ДатаНачалаПериодаОтчета;
	КонецЕсли;
	УправлениеНадписямиМесяцев();
	ПоказатьПериод();
	
	УстановитьОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаКонцаПериодаОтчетаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ДатаНачалаПериодаОтчета) И ЗначениеЗаполнено(ДатаКонцаПериодаОтчета)
		И ДатаНачалаПериодаОтчета > ДатаКонцаПериодаОтчета Тогда
		ДатаНачалаПериодаОтчета = ДатаКонцаПериодаОтчета;
	КонецЕсли;
	УправлениеНадписямиМесяцев();
	ПоказатьПериод();
	
	УстановитьОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПроизвольныйПериод(Команда)
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	
	Диалог.Период.ДатаНачала    = ДатаНачалаПериодаОтчета;
	Диалог.Период.ДатаОкончания = ДатаКонцаПериодаОтчета;
	
	ДополнительныеПараметры = Новый Структура("Диалог", Диалог);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПроизвольныйПериодЗавершение",
		ЭтотОбъект, ДополнительныеПараметры);
	Диалог.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПроизвольныйПериодЗавершение(Период, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог;
	
	Если Период <> Неопределено Тогда
		
		ДатаНачалаПериодаОтчета = Диалог.Период.ДатаНачала;
		ДатаКонцаПериодаОтчета  = Диалог.Период.ДатаОкончания;
		
		УправлениеНадписямиМесяцев();
		ПоказатьПериод();
		
		УстановитьОтборы();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПериод()
	
	Год = Год(ДатаКонцаПериодаОтчета);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбработатьВыборОтчета(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ПредставлениеВторогоОтчета = Элемент.ТекущиеДанные.ПредставлениеОтчета;
		Элементы.ВыбратьОтчет.Доступность = Истина;
	Иначе
		ПредставлениеВторогоОтчета = НСтр("ru='< Не выбран >'");
		Элементы.ВыбратьОтчет.Доступность = Ложь;
	КонецЕсли;
	
	Элементы.ПредставлениеОтчетов.Заголовок = "1  " + ПредставлениеПервогоОтчета + Символы.ПС
											+ "2  " + ПредставлениеВторогоОтчета;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	СписокПустой = Истина;
	
	Для Каждого СтрокаСписка Из Строки Цикл
		ДокументРеглОтчета = СтрокаСписка.Значение.Данные["РегламентированныйОтчет"];
		Если ТипЗнч(ДокументРеглОтчета) = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
			СтрокаСписка.Значение.Данные["ПредставлениеОтчета"] =
				РегламентированнаяОтчетностьКлиентСервер.ПредставлениеДокументаРеглОтч(ДокументРеглОтчета);
			СписокПустой = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	АдресСвойстваСписокПустой = "";
	Настройки.ДополнительныеСвойства.Свойство("АдресСвойстваСписокПустой", АдресСвойстваСписокПустой);
	
	Если ЭтоАдресВременногоХранилища(Строка(АдресСвойстваСписокПустой)) Тогда
		ПоместитьВоВременноеХранилище(СписокПустой, АдресСвойстваСписокПустой);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьОтчет(Команда)
	
	ОбработатьВыборОтчета(Элементы.Список);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьВыборОтчета(СписокОтчетов)
	
	РезультатВыбора = Новый Структура;
	РезультатВыбора.Вставить("ДокументОтчетаПравый", СписокОтчетов.ТекущиеДанные.РегламентированныйОтчет);
	
	ЭтаФорма.Закрыть(РезультатВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеНадписямиМесяцев()
	
	Месяц = Месяц(ДатаКонцаПериодаОтчета);
	
	Если Месяц = 1 Тогда
		
		Период = "Январь";

	ИначеЕсли Месяц = 2 Тогда
		
		Период = "Февраль";
		
	ИначеЕсли Месяц = 3 Тогда
		
		Период = "Март (I квартал)";
		
	ИначеЕсли Месяц = 4 Тогда
		
		Период = "Апрель";
		
	ИначеЕсли Месяц = 5 Тогда
		
		Период = "Май";
		
	ИначеЕсли Месяц = 6 Тогда
		
		Период = "Июнь (II квартал)";
		
	ИначеЕсли Месяц = 7 Тогда
		
		Период = "Июль";
		
	ИначеЕсли Месяц = 8 Тогда
		
		Период = "Август";
		
	ИначеЕсли Месяц = 9 Тогда
		
		Период = "Сентябрь (III квартал)";
		
	ИначеЕсли Месяц = 10 Тогда
		
		Период = "Октябрь";
		
	ИначеЕсли Месяц = 11 Тогда
		
		Период = "Ноябрь";
		
	ИначеЕсли Месяц = 12 Тогда
		
		Период = "Декабрь (IV квартал)";
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеЭлементамиОтбораПоПериоду()
	
	Элементы.Периодичность.Доступность = ОтборПериод;
	Элементы.Год.Доступность = ОтборПериод;
	Элементы.Период.Доступность = ОтборПериод;
	Элементы.ДатаНачалаПериодаОтчета.Доступность = ОтборПериод;
	Элементы.ДатаКонцаПериодаОтчета.Доступность = ОтборПериод;
	Элементы.ВыбратьПроизвольныйПериод.Доступность = ОтборПериод;
	
	Если ОтборПериод И Периодичность = "По итогам" Тогда
		Элементы.Год.Доступность = Истина;
		Элементы.Период.Доступность = Истина;
		Элементы.ДатаНачалаПериодаОтчета.Доступность = Ложь;
		Элементы.ДатаКонцаПериодаОтчета.Доступность = Ложь;
		Элементы.ВыбратьПроизвольныйПериод.Доступность = Ложь;
	ИначеЕсли ОтборПериод И Периодичность = "Произвольный" Тогда
		Элементы.Год.Доступность = Ложь;
		Элементы.Период.Доступность = Ложь;
		Элементы.ДатаНачалаПериодаОтчета.Доступность = Истина;
		Элементы.ДатаКонцаПериодаОтчета.Доступность = Истина;
		Элементы.ВыбратьПроизвольныйПериод.Доступность = Истина;
	Иначе
		Элементы.Год.Доступность = Ложь;
		Элементы.Период.Доступность = Ложь;
		Элементы.ДатаНачалаПериодаОтчета.Доступность = Ложь;
		Элементы.ДатаКонцаПериодаОтчета.Доступность = Ложь;
		Элементы.ВыбратьПроизвольныйПериод.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДатыНачалаИКонцаПериодаОтчета()
	
	Если Период = "Январь" Тогда
		
		Месяц = 1;
		
	ИначеЕсли Период = "Февраль" Тогда
		
		Месяц = 2;
		
	ИначеЕсли Период = "Март (I квартал)" Тогда
		
		Месяц = 3;
		
	ИначеЕсли Период = "Апрель" Тогда
		
		Месяц = 4;
		
	ИначеЕсли Период = "Май" Тогда
		
		Месяц = 5;
		
	ИначеЕсли Период = "Июнь (II квартал)" Тогда
		
		Месяц = 6;
		
	ИначеЕсли Период = "Июль" Тогда
		
		Месяц = 7;
		
	ИначеЕсли Период = "Август" Тогда
		
		Месяц = 8;
		
	ИначеЕсли Период = "Сентябрь (III квартал)" Тогда
		
		Месяц = 9;
		
	ИначеЕсли Период = "Октябрь" Тогда
		
		Месяц = 10;
		
	ИначеЕсли Период = "Ноябрь" Тогда
		
		Месяц = 11;
		
	ИначеЕсли Период = "Декабрь (IV квартал)" Тогда
		
		Месяц = 12;
		
	Иначе
		
		Месяц = 0;
		
	КонецЕсли;
	
	Если Периодичность = "Период отчета" Тогда
		ДатаКонцаПериодаОтчета  = ДокДатаКонцаПериодаОтчета;
		ДатаНачалаПериодаОтчета = ДокДатаНачалаПериодаОтчета;
	Иначе
		ДатаКонцаПериодаОтчета = КонецМесяца(Дата(Год, Месяц, 1));
		ДатаНачалаПериодаОтчета = НачалоГода(ДатаКонцаПериодаОтчета);
	КонецЕсли;
	
	ПоказатьПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПодсказкиЭлементовУправленияПериодом()
	
	Если НЕ ОтборПериод Тогда
		Подсказка = "Отбор по периоду не установлен";
	Иначе
		Если Периодичность = "По итогам" Тогда
			НайденноеЗначение = "";
			Если МассивНаименованийПравыхГраницПериода.Свойство("Месяц" + Месяц(ДатаКонцаПериодаОтчета), НайденноеЗначение) Тогда
				Подсказка = "Отчеты, представляемые по истечении " + НайденноеЗначение + " " + Формат(Год, "ЧГ=0") + " года";
			КонецЕсли;
		ИначеЕсли Периодичность = "Произвольный" Тогда
			Если ДатаНачалаПериодаОтчета <= ДатаКонцаПериодаОтчета Тогда
				Подсказка = "Отчеты за период " + ПредставлениеПериода(ДатаНачалаПериодаОтчета, КонецДня(ДатаКонцаПериодаОтчета), "ФП = Истина");
			Иначе
				Подсказка = "";
			КонецЕсли;
		Иначе
			Если ДатаНачалаПериодаОтчета <= ДатаКонцаПериодаОтчета Тогда
				Подсказка = "Отчеты за период сравниваемого отчета " + ПредставлениеПериода(ДатаНачалаПериодаОтчета, КонецДня(ДатаКонцаПериодаОтчета), "ФП = Истина");
			Иначе
				Подсказка = "";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ОтборПериод.Подсказка = Подсказка;
	Элементы.Периодичность.Подсказка = Подсказка;
	Элементы.Период.Подсказка = Подсказка;
	Элементы.Год.Подсказка = Подсказка;
	Элементы.ДатаКонцаПериодаОтчета.Подсказка = Подсказка;
	Элементы.ДатаНачалаПериодаОтчета.Подсказка = Подсказка;
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьПараметрыОтбора()
	
	ОтборПериод   = ХранилищеНастроекДанныхФорм.Загрузить(ЭтотОбъект.ИмяФормы, "ВыборОтчетаДляСравнения_ОтборПериод");
	Периодичность = ХранилищеНастроекДанныхФорм.Загрузить(ЭтотОбъект.ИмяФормы, "ВыборОтчетаДляСравнения_ПолеВыбораПериодичность");
	
	ДатаНачалаПериодаОтчета = ХранилищеНастроекДанныхФорм.Загрузить(ЭтотОбъект.ИмяФормы, "ВыборОтчетаДляСравнения_ДатаНачалаПериодаОтчета");
	ДатаКонцаПериодаОтчета  = ХранилищеНастроекДанныхФорм.Загрузить(ЭтотОбъект.ИмяФормы, "ВыборОтчетаДляСравнения_ДатаКонцаПериодаОтчета");
	
	Если НЕ ЗначениеЗаполнено(Периодичность) Тогда
		Периодичность = "Период отчета";
		ОтборПериод = Истина;
	КонецЕсли;
	
	Если Периодичность = "Период отчета" Тогда
		ДатаНачалаПериодаОтчета = ДокДатаНачалаПериодаОтчета;
		ДатаКонцаПериодаОтчета  = ДокДатаКонцаПериодаОтчета;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаНачалаПериодаОтчета) И ЗначениеЗаполнено(ДатаКонцаПериодаОтчета) И ДатаНачалаПериодаОтчета > ДатаКонцаПериодаОтчета Тогда
		ДатаКонцаПериодаОтчета = ДатаНачалаПериодаОтчета;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	
	ХранилищеНастроекДанныхФорм.Сохранить(ЭтотОбъект.ИмяФормы, "ВыборОтчетаДляСравнения_ОтборПериод", ОтборПериод);
	ХранилищеНастроекДанныхФорм.Сохранить(ЭтотОбъект.ИмяФормы, "ВыборОтчетаДляСравнения_ПолеВыбораПериодичность", Периодичность);
	ХранилищеНастроекДанныхФорм.Сохранить(ЭтотОбъект.ИмяФормы, "ВыборОтчетаДляСравнения_ДатаНачалаПериодаОтчета", ДатаНачалаПериодаОтчета);
	ХранилищеНастроекДанныхФорм.Сохранить(ЭтотОбъект.ИмяФормы, "ВыборОтчетаДляСравнения_ДатаКонцаПериодаОтчета", ДатаКонцаПериодаОтчета);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборы()
	
	ОтборДинамическогоСписка = Список.КомпоновщикНастроек.Настройки.Отбор;
	
	ОтборДинамическогоСписка.Элементы.Очистить();
	
	ПолеКомпоновкиДатаНачала    = Новый ПолеКомпоновкиДанных("ДатаНачала");
	ПолеКомпоновкиДатаОкончания = Новый ПолеКомпоновкиДанных("ДатаОкончания");
	
	ОтборДатаНачалаНач    = ОтборДинамическогоСписка.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборДатаНачалаКон    = ОтборДинамическогоСписка.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборДатаОкончанияНач = ОтборДинамическогоСписка.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборДатаОкончанияКон = ОтборДинамическогоСписка.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ОтборДатаНачалаНач.Использование     = ОтборПериод;
	ОтборДатаНачалаНач.ВидСравнения      = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	ОтборДатаНачалаНач.ЛевоеЗначение     = ПолеКомпоновкиДатаНачала;
	ОтборДатаНачалаНач.ПравоеЗначение    = НачалоДня(ДатаНачалаПериодаОтчета);
	
	ОтборДатаНачалаКон.Использование     = ОтборПериод;
	ОтборДатаНачалаКон.ВидСравнения      = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	ОтборДатаНачалаКон.ЛевоеЗначение     = ПолеКомпоновкиДатаНачала;
	ОтборДатаНачалаКон.ПравоеЗначение    = КонецДня(ДатаНачалаПериодаОтчета);
	
	ОтборДатаОкончанияНач.Использование  = ОтборПериод;
	ОтборДатаОкончанияНач.ВидСравнения   = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	ОтборДатаОкончанияНач.ЛевоеЗначение  = ПолеКомпоновкиДатаОкончания;
	ОтборДатаОкончанияНач.ПравоеЗначение = НачалоДня(ДатаКонцаПериодаОтчета);
	
	ОтборДатаОкончанияКон.Использование  = ОтборПериод;
	ОтборДатаОкончанияКон.ВидСравнения   = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	ОтборДатаОкончанияКон.ЛевоеЗначение  = ПолеКомпоновкиДатаОкончания;
	ОтборДатаОкончанияКон.ПравоеЗначение = КонецДня(ДатаКонцаПериодаОтчета);
	
	Если Периодичность = "Произвольный" Тогда
		
		ОтборДатаНачалаКон.Использование    = Ложь;
		ОтборДатаОкончанияНач.Использование = Ложь;
		
	ИначеЕсли Периодичность = "По итогам" Тогда
		
		ОтборДатаНачалаНач.Использование = Ложь;
		ОтборДатаНачалаКон.Использование = Ложь;
		
	КонецЕсли;
	
	ОтборДинамическогоСписка.ИдентификаторПользовательскойНастройки = Строка(Новый УникальныйИдентификатор);
	
	СохранитьНастройки();
	
КонецПроцедуры

#КонецОбласти